{
    "results": {
        "usr/libexec/gvfs-afc-volume-monitor": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/libexec/gvfs-afc-volume-monitor", 
            "complexity": {
                "r2aa": {
                    "afCc": 4, 
                    "afC": 94
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "g_list_foreach", 
                "g_drive_get_volumes", 
                "g_main_loop_quit", 
                "g_type_class_ref", 
                "g_drive_can_stop", 
                "g_dbus_interface_info_lookup_property", 
                "g_hash_table_lookup", 
                "g_hash_table_unref", 
                "g_assertion_message_expr", 
                "g_icon_to_string", 
                "g_cancellable_cancel", 
                "g_drive_is_media_removable", 
                "g_type_add_instance_private", 
                "g_mount_get_icon", 
                "g_signal_lookup", 
                "g_variant_new", 
                "g_signal_new", 
                "g_drive_get_name", 
                "g_variant_ref_sink", 
                "g_volume_mount", 
                "g_strv_get_type", 
                "g_type_class_unref", 
                "g_variant_iter_init", 
                "g_volume_mount_finish", 
                "g_initable_new", 
                "g_drive_enumerate_identifiers", 
                "g_volume_monitor_get_type", 
                "lockdownd_client_new", 
                "g_ptr_array_free", 
                "g_mount_operation_set_username", 
                "g_volume_get_sort_key", 
                "g_variant_iter_free", 
                "g_mount_operation_set_choice", 
                "g_mount_unmount_with_operation", 
                "g_variant_get", 
                "g_malloc0", 
                "g_object_weak_ref", 
                "g_dbus_method_invocation_get_message", 
                "g_drive_get_sort_key", 
                "g_file_mount_enclosing_volume", 
                "g_mount_get_volume", 
                "__gmon_start__", 
                "g_main_loop_unref", 
                "g_unix_fd_list_get_type", 
                "g_value_set_object", 
                "g_type_check_instance_cast", 
                "g_mount_get_uuid", 
                "g_drive_stop", 
                "g_once_init_leave", 
                "g_volume_monitor_get_volumes", 
                "g_dbus_error_quark", 
                "g_dbus_gvalue_to_gvariant", 
                "g_dbus_method_invocation_return_gerror", 
                "g_hash_table_insert", 
                "g_bus_unown_name", 
                "g_mount_operation_set_domain", 
                "g_variant_builder_unref", 
                "g_once_init_enter", 
                "idevice_free", 
                "g_signal_emit_by_name", 
                "g_drive_can_start_degraded", 
                "plist_get_node_type", 
                "g_bus_unwatch_name", 
                "g_drive_get_identifier", 
                "plist_get_string_val", 
                "g_volume_get_symbolic_icon", 
                "g_str_equal", 
                "g_variant_iter_next_value", 
                "g_volume_get_uuid", 
                "g_async_result_get_source_object", 
                "g_source_destroy", 
                "g_signal_accumulator_true_handled", 
                "g_mount_operation_get_type", 
                "g_dbus_method_invocation_get_type", 
                "textdomain", 
                "g_strdup", 
                "dcgettext", 
                "g_dbus_interface_skeleton_get_type", 
                "g_object_get_data", 
                "g_async_initable_new_finish", 
                "g_print", 
                "g_drive_can_eject", 
                "g_list_prepend", 
                "g_signal_emitv", 
                "g_object_unref", 
                "g_hash_table_remove", 
                "g_dbus_method_invocation_return_value", 
                "g_free", 
                "g_dbus_proxy_set_interface_info", 
                "g_volume_should_automount", 
                "g_mount_operation_set_anonymous", 
                "g_volume_get_icon", 
                "g_list_remove", 
                "g_int_equal", 
                "g_value_unset", 
                "g_mount_get_symbolic_icon", 
                "g_async_initable_new_async", 
                "g_object_set_data_full", 
                "g_drive_eject_with_operation", 
                "g_async_initable_get_type", 
                "lockdownd_service_descriptor_free", 
                "g_drive_eject_with_operation_finish", 
                "g_dbus_interface_skeleton_get_connection", 
                "g_variant_builder_new", 
                "g_variant_unref", 
                "g_strdup_printf", 
                "g_bus_own_name", 
                "g_value_get_boolean", 
                "g_type_class_adjust_private_offset", 
                "g_volume_monitor_get_connected_drives", 
                "g_drive_poll_for_media_finish", 
                "g_cclosure_marshal_generic", 
                "g_str_hash", 
                "_ITM_deregisterTMCloneTable", 
                "g_type_register_static_simple", 
                "g_mount_unmount_with_operation_finish", 
                "g_set_error", 
                "g_strcmp0", 
                "g_variant_n_children", 
                "g_cancellable_new", 
                "g_dbus_method_invocation_get_connection", 
                "g_mount_get_sort_key", 
                "g_variant_builder_add", 
                "__libc_start_main", 
                "g_object_class_find_property", 
                "g_cancellable_get_type", 
                "g_drive_is_removable", 
                "g_mount_can_unmount", 
                "_ITM_registerTMCloneTable", 
                "g_ptr_array_new", 
                "g_drive_has_media", 
                "g_drive_can_start", 
                "g_type_class_peek_parent", 
                "_Jv_RegisterClasses", 
                "free", 
                "g_quark_to_string", 
                "lockdownd_get_device_name", 
                "g_main_loop_new", 
                "g_volume_enumerate_identifiers", 
                "sscanf", 
                "g_volume_get_name", 
                "g_dbus_proxy_call_sync", 
                "g_mutex_clear", 
                "g_variant_builder_init", 
                "g_strfreev", 
                "g_volume_get_type", 
                "g_dbus_method_invocation_get_method_info", 
                "g_value_init", 
                "g_mount_get_type", 
                "g_drive_start", 
                "g_datalist_clear", 
                "g_drive_poll_for_media", 
                "g_variant_iter_next", 
                "g_variant_type_checked_", 
                "g_main_context_ref_thread_default", 
                "g_log", 
                "g_volume_monitor_get_mounts", 
                "g_drive_get_symbolic_icon", 
                "g_hash_table_new_full", 
                "lockdownd_get_value", 
                "g_volume_get_activation_root", 
                "g_volume_get_drive", 
                "g_ptr_array_add", 
                "idevice_event_subscribe", 
                "g_list_free_full", 
                "__stack_chk_fail", 
                "g_dbus_proxy_call_finish", 
                "g_dbus_proxy_call", 
                "g_setenv", 
                "g_drive_get_type", 
                "g_type_interface_add_prerequisite", 
                "g_signal_connect_data", 
                "g_object_get_property", 
                "g_dbus_message_get_unix_fd_list", 
                "g_volume_get_identifier", 
                "g_return_if_fail_warning", 
                "g_error_free", 
                "g_mount_guess_content_type_sync", 
                "lockdownd_client_free", 
                "g_file_get_uri", 
                "g_dbus_gvariant_to_gvalue", 
                "g_file_mount_enclosing_volume_finish", 
                "setlocale", 
                "g_mount_get_name", 
                "g_themed_icon_new_with_default_fallbacks", 
                "g_object_notify", 
                "plist_free", 
                "idevice_event_unsubscribe", 
                "g_object_new", 
                "g_volume_can_mount", 
                "g_bus_watch_name_on_connection", 
                "g_datalist_id_set_data_full", 
                "g_printerr", 
                "g_quark_try_string", 
                "g_drive_stop_finish", 
                "g_list_copy", 
                "g_variant_builder_add_value", 
                "g_intern_static_string", 
                "g_file_new_for_uri", 
                "g_dbus_method_invocation_return_dbus_error", 
                "g_type_add_interface_static", 
                "g_mount_operation_set_password", 
                "g_mutex_init", 
                "g_dbus_interface_info_lookup_signal", 
                "g_value_set_variant", 
                "g_dbus_interface_skeleton_get_object_path", 
                "g_main_loop_run", 
                "g_mount_operation_reply", 
                "g_usleep", 
                "g_variant_builder_end", 
                "strcmp", 
                "g_drive_get_start_stop_type", 
                "g_mount_get_root", 
                "g_base64_decode", 
                "g_object_set_data", 
                "g_drive_start_finish", 
                "g_drive_is_media_check_automatic", 
                "g_dbus_proxy_get_type", 
                "g_drive_get_icon", 
                "g_type_check_class_cast", 
                "g_dbus_method_invocation_get_sender", 
                "g_object_ref", 
                "g_object_set_property", 
                "bindtextdomain", 
                "g_variant_new_boolean", 
                "g_volume_get_mount", 
                "g_main_context_unref", 
                "g_mount_operation_set_password_save", 
                "g_drive_can_poll_for_media", 
                "g_dbus_connection_emit_signal", 
                "g_dbus_interface_skeleton_get_connections", 
                "bind_textdomain_codeset", 
                "g_dbus_method_invocation_return_error", 
                "idevice_new"
            ], 
            "rpm": "gvfs-afc-1.30.4-3.el7.x86_64.rpm"
        }, 
        "usr/libexec/gvfsd-afc": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/libexec/gvfsd-afc", 
            "complexity": {
                "r2aa": {
                    "afCc": 1, 
                    "afC": 35
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "g_bus_own_name", 
                "strchr", 
                "g_vfs_backend_force_unmount", 
                "bind_textdomain_codeset", 
                "g_hash_table_lookup", 
                "g_file_info_set_edit_name", 
                "g_hash_table_get_values", 
                "g_filename_display_name", 
                "idevice_set_debug_level", 
                "house_arrest_client_free", 
                "getuid", 
                "afc_file_read", 
                "plist_get_node_type", 
                "idevice_free", 
                "instproxy_browse", 
                "g_vfs_daemon_new", 
                "afc_client_new", 
                "g_file_info_new", 
                "afc_file_close", 
                "g_object_unref", 
                "g_mount_spec_new", 
                "g_once_init_enter", 
                "g_source_remove", 
                "afc_client_new_from_house_arrest_client", 
                "bindtextdomain", 
                "g_strdup", 
                "g_str_equal", 
                "g_main_loop_new", 
                "afc_remove_path", 
                "g_file_info_set_is_hidden", 
                "g_path_get_dirname", 
                "gvfs_set_debug", 
                "_Jv_RegisterClasses", 
                "g_strdup_printf", 
                "g_mount_spec_get", 
                "g_vfs_job_enumerate_add_info", 
                "plist_array_get_item", 
                "lockdownd_service_descriptor_free", 
                "g_content_type_get_icon", 
                "g_object_ref", 
                "g_vfs_daemon_set_max_threads", 
                "g_vfs_register_backend", 
                "g_hash_table_destroy", 
                "house_arrest_get_result", 
                "g_vfs_job_open_for_write_set_handle", 
                "sscanf", 
                "g_vfs_backend_set_icon_name", 
                "__stack_chk_fail", 
                "g_vfs_backend_get_type", 
                "free", 
                "g_signal_connect_data", 
                "g_strsplit", 
                "g_vfs_job_succeeded", 
                "g_type_class_peek_parent", 
                "instproxy_client_new", 
                "g_vfs_job_open_for_read_set_can_seek", 
                "house_arrest_client_new", 
                "idevice_event_unsubscribe", 
                "g_build_filename", 
                "getpid", 
                "g_type_check_instance_cast", 
                "gvfs_dbus_spawner_call_spawned", 
                "instproxy_client_free", 
                "g_file_info_set_display_name", 
                "g_hash_table_insert", 
                "g_hash_table_new_full", 
                "instproxy_client_options_free", 
                "plist_get_bool_val", 
                "g_file_info_set_attribute_boolean", 
                "sbservices_client_new", 
                "g_file_info_get_file_type", 
                "g_io_error_quark", 
                "g_themed_icon_new", 
                "g_vfs_job_failed_literal", 
                "g_mutex_clear", 
                "afc_file_open", 
                "g_error_free", 
                "g_vfs_job_write_set_written_size", 
                "g_quark_to_string", 
                "g_file_info_set_icon", 
                "gvfs_seek_type_to_lseek", 
                "lockdownd_unpair", 
                "g_mutex_init", 
                "sbservices_client_free", 
                "afc_read_directory", 
                "idevice_new", 
                "g_vfs_backend_set_mount_spec", 
                "g_intern_static_string", 
                "g_strndup", 
                "g_vfs_job_open_for_write_set_can_truncate", 
                "g_file_icon_new", 
                "dcgettext", 
                "g_assertion_message_expr", 
                "g_file_info_set_attribute_string", 
                "g_idle_add", 
                "g_file_info_set_file_type", 
                "g_get_user_cache_dir", 
                "g_strcmp0", 
                "signal", 
                "setlocale", 
                "g_return_if_fail_warning", 
                "sbservices_get_icon_pngdata", 
                "g_type_check_class_cast", 
                "gvfs_get_debug", 
                "g_vfs_job_open_for_read_set_handle", 
                "g_vfs_backend_set_symbolic_icon_name", 
                "g_vfs_daemon_initiate_mount", 
                "gvfs_setup_debug_handler", 
                "g_themed_icon_get_type", 
                "g_content_type_guess", 
                "g_file_info_set_symbolic_icon", 
                "afc_file_write", 
                "g_dbus_error_strip_remote_error", 
                "g_usleep", 
                "g_log", 
                "afc_file_truncate", 
                "g_vfs_job_read_set_size", 
                "afc_make_link", 
                "g_mkdir_with_parents", 
                "g_list_free", 
                "g_mount_spec_set", 
                "g_file_info_set_attribute_uint64", 
                "strtoll", 
                "g_themed_icon_append_name", 
                "afc_get_file_info", 
                "g_file_info_set_size", 
                "exit", 
                "g_once_init_leave", 
                "g_file_info_set_symlink_target", 
                "plist_free", 
                "textdomain", 
                "g_vfs_job_open_for_write_set_initial_offset", 
                "g_log_set_handler", 
                "lockdownd_start_service", 
                "g_file_info_set_is_symlink", 
                "g_file_test", 
                "afc_rename_path", 
                "_ITM_registerTMCloneTable", 
                "g_ascii_strtoull", 
                "g_main_loop_is_running", 
                "g_vfs_job_open_for_write_set_can_seek", 
                "house_arrest_send_command", 
                "afc_file_seek", 
                "g_type_check_instance_is_a", 
                "g_file_attribute_matcher_matches", 
                "g_vfs_backend_set_x_content_types", 
                "instproxy_client_options_add", 
                "g_file_info_set_content_type", 
                "g_mount_source_ask_question", 
                "instproxy_client_options_new", 
                "plist_dict_get_item", 
                "afc_set_file_time", 
                "g_vfs_job_seek_read_set_offset", 
                "afc_make_directory", 
                "plist_array_get_size", 
                "strtol", 
                "g_file_info_set_attribute_uint32", 
                "lockdownd_client_free", 
                "g_strfreev", 
                "afc_client_free", 
                "g_vfs_job_enumerate_done", 
                "g_mount_source_new_dummy", 
                "g_print", 
                "g_free", 
                "g_mutex_unlock", 
                "getgid", 
                "g_file_new_for_path", 
                "idevice_event_subscribe", 
                "g_ascii_strup", 
                "afc_get_device_info", 
                "g_main_loop_quit", 
                "g_vfs_job_set_display_name_set_new_path", 
                "g_ascii_strcasecmp", 
                "gvfs_dbus_spawner_call_spawned_finish", 
                "__gmon_start__", 
                "g_content_type_get_symbolic_icon", 
                "g_strjoinv", 
                "g_bus_unown_name", 
                "g_str_has_suffix", 
                "g_str_hash", 
                "g_main_loop_run", 
                "g_vfs_job_get_type", 
                "g_set_application_name", 
                "plist_get_string_val", 
                "lockdownd_client_new", 
                "g_vfs_job_seek_write_set_offset", 
                "g_file_info_set_name", 
                "g_printerr", 
                "g_bus_get_sync", 
                "g_vfs_job_failed", 
                "g_vfs_backend_get_display_name", 
                "lockdownd_client_new_with_handshake", 
                "g_type_class_adjust_private_offset", 
                "g_malloc0", 
                "g_vfs_backend_set_display_name", 
                "g_mount_spec_unref", 
                "gvfs_dbus_spawner_proxy_new_for_bus_sync", 
                "strrchr", 
                "g_mutex_lock", 
                "__libc_start_main", 
                "lockdownd_get_value", 
                "g_main_loop_unref", 
                "g_type_register_static_simple", 
                "afc_file_tell", 
                "lockdownd_get_device_name"
            ], 
            "rpm": "gvfs-afc-1.30.4-3.el7.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Version": " 1.30.4", 
            "Name": " gvfs-afc", 
            "License": " GPLv3 and LGPLv2+ and BSD and MPLv2.0", 
            "URL": " https://wiki.gnome.org/Projects/gvfs", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " c1bm.rdu2.centos.org", 
            "Description": "\nThis package provides support for reading files on mobile devices\nincluding phones and music players to applications using gvfs.\n", 
            "Build Date": " Wed 09 Aug 2017 02:39:06 AM EDT", 
            "Vendor": " CentOS", 
            "Source RPM": " gvfs-1.30.4-3.el7.src.rpm", 
            "warning": " /home/jason/fctl/swap/0/gvfs-afc-1.30.4-3.el7.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID f4a80eb5: NOKEY", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Thu 10 Aug 2017 12:36:37 PM EDT, Key ID 24c6a8a7f4a80eb5", 
            "Release": " 3.el7", 
            "Group": " Unspecified", 
            "Packager": " CentOS BuildSystem <http://bugs.centos.org>", 
            "Summary": " AFC support for gvfs", 
            "Size": " 152247"
        }
    }
}