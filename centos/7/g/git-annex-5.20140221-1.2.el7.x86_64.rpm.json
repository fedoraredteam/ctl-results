{
    "results": {
        "usr/bin/git-annex": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/git-annex", 
            "complexity": {
                "r2aa": {
                    "afCc": 3, 
                    "afC": 71
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "dup2", 
                "_ITM_registerTMCloneTable", 
                "rtsSupportsBoundThreads", 
                "u_iswspace", 
                "suspendThread", 
                "newCAF", 
                "u_iswcntrl", 
                "__errno_location", 
                "utimensat", 
                "exit", 
                "rts_getThreadId", 
                "getpgid", 
                "getpid", 
                "umask", 
                "_hs_text_memcpy", 
                "__gmon_start__", 
                "resumeThread", 
                "setpriority", 
                "__libc_start_main", 
                "endmntent", 
                "getmntent", 
                "cmp_thread", 
                "kill", 
                "geteuid", 
                "_Jv_RegisterClasses", 
                "rintDouble", 
                "isatty", 
                "u_iswupper", 
                "killpg", 
                "setmntent", 
                "u_iswalnum", 
                "setsid", 
                "__hscore_get_errno", 
                "statvfs", 
                "_hs_text_memcmp", 
                "dup"
            ], 
            "rpm": "git-annex-5.20140221-1.2.el7.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Version": " 5.20140221", 
            "Name": " git-annex", 
            "License": " GPLv3+", 
            "URL": " http://hackage.haskell.org/package/git-annex", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-11.phx2.fedoraproject.org", 
            "Description": "\nGit-annex allows managing files with git, without checking the file contents\ninto git. While that may seem paradoxical, it is useful when dealing with files\nlarger than git can currently easily handle, whether due to limitations in\nmemory, time, or disk space.\n\nEven without file content tracking, being able to manage files with git, move\nfiles around and delete files with versioned directory trees, and use branches\nand distributed clones, are all very handy reasons to use git. And annexed\nfiles can co-exist in the same git repository with regularly versioned files,\nwhich is convenient for maintaining documents, Makefiles, etc that are\nassociated with annexed files but that benefit from full revision control.\n\nWhen a file is annexed, its content is moved into a key-value store, and a\nsymlink is made that points to the content. These symlinks are checked into git\nand versioned like regular files. You can move them around, delete them, and so\non. Pushing to another git repository will make git-annex there aware of the\nannexed file, and it can be used to retrieve its content from the key-value\nstore.\n", 
            "Build Date": " Sat 03 Dec 2016 06:38:43 PM EST", 
            "Vendor": " Fedora Project", 
            "Source RPM": " git-annex-5.20140221-1.2.el7.src.rpm", 
            "warning": " /home/jason/fctl/swap/0/git-annex-5.20140221-1.2.el7.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID 352c64e5: NOKEY", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Fri 09 Dec 2016 01:03:57 AM EST, Key ID 6a2faea2352c64e5", 
            "Release": " 1.2.el7", 
            "Group": " Unspecified", 
            "Packager": " Fedora Project", 
            "Summary": " Manage files with git, without checking their contents into git", 
            "Size": " 6822119"
        }
    }
}