{
    "results": {
        "usr/lib64/libactivemq-cpp_so_19_0_3": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/libactivemq-cpp.so.19.0.3", 
            "complexity": {
                "r2aa": "failed: u'Timed Out'"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "X509_get_ext_count", 
                "_ZSt19__throw_logic_errorPKc", 
                "__cxa_begin_catch", 
                "_ZNSt9exceptionD1Ev", 
                "_ZNSs4_Rep10_M_destroyERKSaIcE", 
                "_ZNKSs13find_first_ofEPKcmm", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate", 
                "SSL_CTX_set_cipher_list", 
                "memmove", 
                "__pthread_key_create", 
                "__cxa_end_catch", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "__fdelt_chk", 
                "select", 
                "_ZNSsC1ERKSs", 
                "SSL_pending", 
                "ASN1_item_d2i", 
                "_Znam", 
                "_ZNSo9_M_insertIbEERSoT_", 
                "_ZNSt6localeD1Ev", 
                "__cxa_guard_acquire", 
                "inflateInit2_", 
                "apr_terminate", 
                "adler32", 
                "pthread_getspecific", 
                "sqrt", 
                "OBJ_obj2nid", 
                "_ZNSt8ios_base4InitD1Ev", 
                "memset", 
                "_ZNSs15_M_replace_safeEmmPKcm", 
                "_ZNSsC1EmcRKSaIcE", 
                "_ZNSo9_M_insertImEERSoT_", 
                "pow", 
                "pthread_mutex_unlock", 
                "apr_gethostname", 
                "pthread_mutex_lock", 
                "_ZNKSs7compareEPKc", 
                "SSLv23_method", 
                "apr_socket_timeout_set", 
                "SSL_library_init", 
                "gettimeofday", 
                "SSL_write", 
                "deflateInit_", 
                "apr_socket_listen", 
                "_ZNSo9_M_insertIxEERSoT_", 
                "apr_sockaddr_ip_getbuf", 
                "__stack_chk_fail", 
                "apr_socket_shutdown", 
                "_ZSt16__throw_bad_castv", 
                "SSL_ctrl", 
                "X509_EXTENSION_get_object", 
                "apr_socket_connect", 
                "apr_pool_create_unmanaged_ex", 
                "apr_pool_destroy", 
                "pthread_rwlock_destroy", 
                "inflateReset", 
                "_ZNSs7replaceEmmPKcm", 
                "_ZdlPv", 
                "ceil", 
                "_ZNSt8ios_base4InitC1Ev", 
                "sched_get_priority_min", 
                "apr_file_read_full", 
                "apr_pvsprintf", 
                "_ZNKSs12find_last_ofEPKcmm", 
                "_ZNSt8ios_baseC2Ev", 
                "SSL_read", 
                "_ZNKSs7compareERKSs", 
                "CRYPTO_num_locks", 
                "_ZNKSt5ctypeIcE13_M_widen_initEv", 
                "SSL_get_error", 
                "_Znwm", 
                "deflate", 
                "pthread_rwlock_rdlock", 
                "sk_value", 
                "SSL_CTX_use_PrivateKey_file", 
                "pthread_cond_signal", 
                "_ZNSo3putEc", 
                "pthread_cond_broadcast", 
                "_ZNSs9_M_mutateEmmm", 
                "deflateSetDictionary", 
                "pthread_attr_getschedpolicy", 
                "inflateInit_", 
                "__cxa_rethrow", 
                "SSL_CTX_use_certificate_chain_file", 
                "_ZNKSs4findEPKcmm", 
                "apr_socket_accept", 
                "EVP_cleanup", 
                "_ZNSs12_M_leak_hardEv", 
                "pthread_cond_wait", 
                "pthread_yield", 
                "pthread_detach", 
                "__cxa_guard_abort", 
                "_ZNSt19basic_istringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "pthread_setschedparam", 
                "BIO_int_ctrl", 
                "__cxa_atexit", 
                "pthread_mutex_trylock", 
                "X509_get_ext", 
                "pthread_cond_timedwait", 
                "_ZNSo5flushEv", 
                "_ZNSo9_M_insertIdEERSoT_", 
                "apr_socket_close", 
                "strcmp", 
                "_ZNKSs5rfindEPKcmm", 
                "__gmon_start__", 
                "SSL_connect", 
                "SSL_get_peer_certificate", 
                "CRYPTO_set_id_callback", 
                "ERR_get_error", 
                "SSL_set_shutdown", 
                "_ZNSt6localeC1Ev", 
                "memcmp", 
                "OPENSSL_add_all_algorithms_noconf", 
                "_ZNKSs17find_first_not_ofEPKcmm", 
                "deflateEnd", 
                "_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_", 
                "pthread_attr_destroy", 
                "SSL_set_verify", 
                "inflate", 
                "_ZdaPv", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "ASN1_STRING_data", 
                "pthread_rwlock_unlock", 
                "_Unwind_Resume", 
                "apr_socket_send", 
                "pthread_exit", 
                "sysconf", 
                "X509_NAME_get_index_by_NID", 
                "SSL_accept", 
                "SSL_new", 
                "apr_socket_bind", 
                "_ZNSsC1ERKSsmm", 
                "BIO_new", 
                "inflateEnd", 
                "__cxa_get_exception_ptr", 
                "_ZSt20__throw_length_errorPKc", 
                "sk_num", 
                "pthread_getschedparam", 
                "_ZNKSs4findEcm", 
                "SSL_CTX_new", 
                "apr_pool_clear", 
                "strncpy", 
                "pthread_cond_destroy", 
                "log", 
                "_ZNSs6appendEPKcm", 
                "_ZNSs6assignEPKc", 
                "_ZNSs6appendERKSs", 
                "pthread_attr_setstacksize", 
                "deflateParams", 
                "_ZNSsC1EPKcmRKSaIcE", 
                "__cxa_allocate_exception", 
                "apr_strerror", 
                "crc32", 
                "apr_sockaddr_info_get", 
                "_ZNSolsEs", 
                "X509_NAME_get_entry", 
                "SSL_CTX_load_verify_locations", 
                "pthread_mutex_destroy", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_call_unexpected", 
                "_ZNSi10_M_extractIfEERSiRT_", 
                "_ZNSsD1Ev", 
                "SSL_CTX_ctrl", 
                "SSL_CTX_set_default_passwd_cb_userdata", 
                "_ZNSi3getEv", 
                "deflateReset", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "_Jv_RegisterClasses", 
                "pthread_key_delete", 
                "apr_socket_recv", 
                "_ZNSs6assignERKSs", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "BIO_s_socket", 
                "_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEEC1ESt13_Ios_Openmode", 
                "_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_", 
                "floor", 
                "pthread_rwlock_init", 
                "apr_os_sock_get", 
                "_ZNSs7reserveEm", 
                "SSL_set_bio", 
                "_ZNSs6assignEPKcm", 
                "X509_free", 
                "__cxa_free_exception", 
                "_ZNSs6insertEmPKcm", 
                "_ZNKSs6substrEmm", 
                "strdup", 
                "OBJ_nid2sn", 
                "_ZNSt8ios_baseD2Ev", 
                "pthread_key_create", 
                "pthread_rwlock_tryrdlock", 
                "apr_socket_timeout_get", 
                "pthread_mutex_init", 
                "_ZNKSt15basic_stringbufIcSt11char_traitsIcESaIcEE3strEv", 
                "_ZNSt9exceptionD2Ev", 
                "_ZNSs4_Rep9_S_createEmmRKSaIcE", 
                "memcpy", 
                "free", 
                "_ZNSt15basic_stringbufIcSt11char_traitsIcESaIcEE7_M_syncEPcmm", 
                "SSL_shutdown", 
                "pthread_cond_init", 
                "__cxa_throw", 
                "apr_env_delete", 
                "pthread_rwlock_wrlock", 
                "_ZNKSs4findEPKcm", 
                "apr_env_set", 
                "SSL_CTX_free", 
                "ioctl", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "__cxa_guard_release", 
                "apr_socket_opt_set", 
                "__cxa_finalize", 
                "_ZNSolsEi", 
                "_ZSt17__throw_bad_allocv", 
                "_ZNKSs5rfindEcm", 
                "_ZNSt9bad_allocD1Ev", 
                "_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "_ZSt20__throw_out_of_rangePKc", 
                "pthread_attr_getstacksize", 
                "__errno_location", 
                "RAND_seed", 
                "ERR_error_string_n", 
                "pthread_self", 
                "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base", 
                "inflateSetDictionary", 
                "pthread_rwlock_trywrlock", 
                "_ZNSs4_Rep10_M_disposeERKSaIcE", 
                "apr_file_open", 
                "apr_strftime", 
                "apr_socket_opt_get", 
                "apr_initialize", 
                "apr_signal_block", 
                "CRYPTO_set_locking_callback", 
                "_ZNSt8__detail15_List_node_base9_M_unhookEv", 
                "pthread_setspecific", 
                "apr_env_get", 
                "strlen", 
                "_ZSt9terminatev", 
                "SSL_free", 
                "apr_pool_create_ex", 
                "pthread_attr_setschedparam", 
                "_ZNKSs16find_last_not_ofEPKcmm", 
                "SSL_load_error_strings", 
                "_ZNSsC1EPKcRKSaIcE", 
                "apr_socket_create", 
                "sched_get_priority_max", 
                "pthread_join", 
                "_ZNKSt9exception4whatEv", 
                "__dynamic_cast", 
                "apr_socket_addr_get", 
                "__cxa_pure_virtual", 
                "X509_NAME_ENTRY_get_data", 
                "_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc", 
                "deflateInit2_", 
                "X509V3_EXT_get", 
                "X509_get_subject_name", 
                "SSL_CTX_set_default_passwd_cb", 
                "_ITM_registerTMCloneTable", 
                "SSL_CTX_set_default_verify_paths", 
                "pthread_create", 
                "pthread_attr_init", 
                "_ZNSs6appendEmc", 
                "apr_time_exp_lt"
            ], 
            "rpm": "activemq-cpp-3.9.3-3.el7.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Version": " 3.9.3", 
            "Name": " activemq-cpp", 
            "License": " ASL 2.0", 
            "URL": " http://activemq.apache.org/cms/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-04.phx2.fedoraproject.org", 
            "Description": "\nactivemq-cpp is a JMS-like API for C++ for interfacing with Message\nBrokers such as Apache ActiveMQ.  C++ messaging service helps to make your\nC++ client code much neater and easier to follow. To get a better feel for\nCMS try the API Reference.\nActiveMQ-CPP is a client only library, a message broker such as Apache\nActiveMQ is still needed for your clients to communicate.\n", 
            "Build Date": " Fri 17 Feb 2017 10:59:57 AM EST", 
            "Vendor": " Fedora Project", 
            "Source RPM": " activemq-cpp-3.9.3-3.el7.src.rpm", 
            "warning": " /home/jason/fctl/3/activemq-cpp-3.9.3-3.el7.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID 352c64e5: NOKEY", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Mon 20 Feb 2017 03:19:53 AM EST, Key ID 6a2faea2352c64e5", 
            "Release": " 3.el7", 
            "Group": " Development/Libraries", 
            "Packager": " Fedora Project", 
            "Summary": " C++ implementation of JMS-like messaging client", 
            "Size": " 18531923"
        }
    }
}