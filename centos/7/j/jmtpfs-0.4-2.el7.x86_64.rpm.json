{
    "results": {
        "usr/bin/jmtpfs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/jmtpfs", 
            "complexity": {
                "r2aa": {
                    "afCc": 89, 
                    "afC": 1471
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "time", 
                "__errno_location", 
                "_ZNSs4swapERSs", 
                "_ZNSt6localeC1Ev", 
                "__pthread_key_create", 
                "_ZNSs6assignERKSs", 
                "LIBMTP_Open_Raw_Device_Uncached", 
                "_ZNKSt5ctypeIcE13_M_widen_initEv", 
                "__gmon_start__", 
                "_ZNSirsERi", 
                "pthread_mutex_lock", 
                "_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEEC1ESt13_Ios_Openmode", 
                "LIBMTP_Init", 
                "magic_load", 
                "fwrite", 
                "__cxa_allocate_exception", 
                "free", 
                "_ZSt20__throw_out_of_rangePKc", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l", 
                "_ZNSs6appendERKSs", 
                "_Znwm", 
                "fuse_opt_add_arg", 
                "LIBMTP_Get_Filemetadata", 
                "LIBMTP_Delete_Object", 
                "LIBMTP_Release_Device", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate", 
                "pthread_mutex_unlock", 
                "__cxa_rethrow", 
                "_ZNSt13runtime_errorD2Ev", 
                "_Unwind_Resume", 
                "_ZNSt13runtime_errorD1Ev", 
                "pthread_mutex_destroy", 
                "memcmp", 
                "_ZNSt8ios_base4InitD1Ev", 
                "_ZNSsC1EPKcRKSaIcE", 
                "LIBMTP_Get_Storage", 
                "fclose", 
                "LIBMTP_Detect_Raw_Devices", 
                "_ZNSt13runtime_errorC1ERKSs", 
                "_ZNKSt8__detail20_Prime_rehash_policy14_M_need_rehashEmmm", 
                "__libc_start_main", 
                "LIBMTP_Create_Folder", 
                "_ITM_deregisterTMCloneTable", 
                "LIBMTP_Set_Object_String", 
                "strdup", 
                "_ZNSt19basic_istringstreamIcSt11char_traitsIcESaIcEEC1ERKSsSt13_Ios_Openmode", 
                "_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc", 
                "__stack_chk_fail", 
                "_ZNKSs5rfindEPKcmm", 
                "LIBMTP_Get_Files_And_Folders", 
                "LIBMTP_Get_Modelname", 
                "_ZNSsC1ERKSsmm", 
                "_ZNKSs4findEPKcm", 
                "_ZNKSs6substrEmm", 
                "ferror", 
                "_ZNSolsEi", 
                "_Jv_RegisterClasses", 
                "read", 
                "magic_error", 
                "_ZNSt8ios_baseD2Ev", 
                "__cxa_end_catch", 
                "_ZNSsC1ERKSs", 
                "fflush", 
                "fileno", 
                "_ZNSo9_M_insertImEERSoT_", 
                "lseek64", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "fuse_main_real", 
                "_ZNKSs7compareEPKc", 
                "fuse_opt_parse", 
                "__cxa_throw", 
                "__gxx_personality_v0", 
                "pthread_mutexattr_destroy", 
                "LIBMTP_Clear_Errorstack", 
                "__cxa_atexit", 
                "_ZNKSt8__detail20_Prime_rehash_policy11_M_next_bktEm", 
                "_ZNSt13runtime_errorC2ERKSs", 
                "tmpfile64", 
                "_ZSt16__throw_bad_castv", 
                "_ZdlPv", 
                "_ZNSt8ios_baseC2Ev", 
                "magic_open", 
                "LIBMTP_Get_File_To_File_Descriptor", 
                "_ZNSs4_Rep9_S_createEmmRKSaIcE", 
                "fuse_get_context", 
                "pthread_mutexattr_init", 
                "_ZNSt19basic_istringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "_ZNSo3putEc", 
                "fread", 
                "_ZNSs4_Rep10_M_disposeERKSaIcE", 
                "getgid", 
                "_ZNSs6assignEPKcm", 
                "__cxa_free_exception", 
                "_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "__cxa_pure_virtual", 
                "_ZNKSt15basic_stringbufIcSt11char_traitsIcESaIcEE3strEv", 
                "magic_buffer", 
                "__assert_fail", 
                "_ZNSt6localeD1Ev", 
                "_ZSt20__throw_length_errorPKc", 
                "LIBMTP_Set_File_Name", 
                "memcpy", 
                "__cxa_begin_catch", 
                "pthread_mutex_init", 
                "LIBMTP_Send_File_From_File_Descriptor", 
                "exit", 
                "memset", 
                "_ZSt19__throw_logic_errorPKc", 
                "_ZSt17__throw_bad_allocv", 
                "_ITM_registerTMCloneTable", 
                "pthread_mutexattr_settype", 
                "_ZNSo5flushEv", 
                "__fxstat64", 
                "_ZNKSs4findEPKcmm", 
                "fseek", 
                "_ZNKSt13runtime_error4whatEv", 
                "_ZNSt8__detail15_List_node_base9_M_unhookEv", 
                "_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_", 
                "getuid", 
                "ftruncate64", 
                "LIBMTP_Get_Errorstack", 
                "LIBMTP_destroy_file_t", 
                "LIBMTP_new_file_t", 
                "_ZNSs4_Rep10_M_destroyERKSaIcE", 
                "strlen"
            ], 
            "rpm": "jmtpfs-0.4-2.el7.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Version": " 0.4", 
            "Name": " jmtpfs", 
            "License": " GPLv3", 
            "URL": " http://research.jacquette.com/jmtpfs-exchanging-files-between-android-devices-and-linux/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildhw-02.phx2.fedoraproject.org", 
            "Description": "\njmtpfs is a FUSE and libmtp based filesystem for accessing MTP (Media\nTransfer Protocol) devices. It was specifically designed for exchanging\nfiles between Linux systems and newer Android devices that support MTP\nbut not USB Mass Storage.\n\nThe goal is to create a well behaved filesystem, allowing tools like\nfind and rsync to work as expected. MTP file types are set automatically\nbased on file type detection using libmagic. Setting the file appears to\nbe necessary for some Android apps, like Gallery, to be able to find and\nuse the files.\n\nSince it is meant as an Android file transfer utility, the playlists and\nother non-file based data are not supported.\n", 
            "Build Date": " Mon 04 Jan 2016 01:07:57 PM EST", 
            "Vendor": " Fedora Project", 
            "Source RPM": " jmtpfs-0.4-2.el7.src.rpm", 
            "warning": " /home/jason/fctl/swap/0/jmtpfs-0.4-2.el7.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID 352c64e5: NOKEY", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Tue 05 Jan 2016 01:20:39 PM EST, Key ID 6a2faea2352c64e5", 
            "Release": " 2.el7", 
            "Group": " Applications/Multimedia", 
            "Packager": " Fedora Project", 
            "Summary": " FUSE and libmtp based filesystem for accessing MTP devices", 
            "Size": " 150263"
        }
    }
}