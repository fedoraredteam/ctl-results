{
    "results": {
        "usr/sbin/ipset": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/sbin/ipset", 
            "complexity": {
                "r2aa": {
                    "afCc": 2, 
                    "afC": 49
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "strerror", 
                "ipset_session_report_reset", 
                "__libc_start_main", 
                "fputs", 
                "ipset_session_warning", 
                "fopen", 
                "ipset_session_fini", 
                "ipset_commit", 
                "ipset_cmd", 
                "__ctype_b_loc", 
                "__fprintf_chk", 
                "ipset_envopt_parse", 
                "free", 
                "_ITM_deregisterTMCloneTable", 
                "ipset_parse_output", 
                "ipset_call_parser", 
                "puts", 
                "exit", 
                "_ITM_registerTMCloneTable", 
                "ipset_session_outfn", 
                "__gmon_start__", 
                "strncmp", 
                "ipset_strlcpy", 
                "ipset_parse_typename", 
                "ipset_type_get", 
                "__stack_chk_fail", 
                "ipset_envopt_test", 
                "strlen", 
                "ipset_load_types", 
                "strcmp", 
                "__vfprintf_chk", 
                "fgets", 
                "ipset_match_typename", 
                "ipset_data_flags", 
                "_Jv_RegisterClasses", 
                "ipset_session_init", 
                "memset", 
                "ipset_session_lineno", 
                "calloc", 
                "printf", 
                "ipset_session_error", 
                "fputc", 
                "__errno_location", 
                "ipset_session_data", 
                "__printf_chk", 
                "fclose", 
                "ipset_parse_setname", 
                "ipset_parse_elem"
            ], 
            "rpm": "ipset-6.29-1.el7.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Version": " 6.29", 
            "Name": " ipset", 
            "License": " GPLv2", 
            "URL": " http://ipset.netfilter.org/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " c1bm.rdu2.centos.org", 
            "Description": "\nIP sets are a framework inside the Linux kernel since version 2.4.x, which can\nbe administered by the ipset utility. Depending on the type, currently an IP\nset may store IP addresses, (TCP/UDP) port numbers or IP addresses with MAC\naddresses in a way, which ensures lightning speed when matching an entry\nagainst a set.\n\nIf you want to:\n - store multiple IP addresses or port numbers and match against the collection\n   by iptables at one swoop;\n - dynamically update iptables rules against IP addresses or ports without\n   performance penalty;\n - express complex IP address and ports based rulesets with one single iptables\n   rule and benefit from the speed of IP sets\nthen ipset may be the proper tool for you.\n", 
            "Build Date": " Tue 01 Aug 2017 10:10:42 PM EDT", 
            "Vendor": " CentOS", 
            "Source RPM": " ipset-6.29-1.el7.src.rpm", 
            "warning": " /home/jason/fctl/swap/0/ipset-6.29-1.el7.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID f4a80eb5: NOKEY", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Thu 10 Aug 2017 12:46:33 PM EDT, Key ID 24c6a8a7f4a80eb5", 
            "Release": " 1.el7", 
            "Group": " Unspecified", 
            "Packager": " CentOS BuildSystem <http://bugs.centos.org>", 
            "Summary": " Manage Linux IP sets", 
            "Size": " 75482"
        }
    }
}