{
    "results": {
        "usr/bin/gconf-merge-tree": {
            "report-functions": [
                "_Jv_RegisterClasses", 
                "gconf_value_copy", 
                "g_dir_close", 
                "fsync", 
                "g_assertion_message_expr", 
                "__printf_chk", 
                "chown", 
                "g_strconcat", 
                "feof", 
                "g_markup_parse_context_end_parse", 
                "g_slist_reverse", 
                "memcpy", 
                "gconf_schema_set_long_desc", 
                "g_string_append", 
                "gconf_schema_get_cdr_type", 
                "g_strdup_vprintf", 
                "g_string_append_printf", 
                "gconf_value_set_cdr_nocopy", 
                "g_markup_parse_context_free", 
                "gconf_value_set_int", 
                "gconf_schema_get_owner", 
                "gconf_value_get_cdr", 
                "chmod", 
                "g_dir_open", 
                "g_propagate_error", 
                "g_markup_escape_text", 
                "fflush", 
                "gconf_value_set_list_type", 
                "gconf_schema_get_default_value", 
                "g_assertion_message", 
                "gconf_value_get_string", 
                "g_markup_parse_context_new", 
                "__fprintf_chk", 
                "g_intern_string", 
                "gconf_value_set_string_nocopy", 
                "gconf_value_set_list_nocopy", 
                "gconf_value_set_string", 
                "_gconf_init_i18n", 
                "g_unlink", 
                "gconf_schema_new", 
                "__libc_start_main", 
                "g_strndup", 
                "g_slist_append", 
                "gconf_value_get_list_type", 
                "g_set_error", 
                "g_malloc0", 
                "gconf_value_type_from_string", 
                "g_slist_length", 
                "rename", 
                "close", 
                "gconf_log", 
                "gconf_value_type_to_string", 
                "__stack_chk_fail", 
                "fread", 
                "gconf_value_steal_list", 
                "gconf_schema_set_gettext_domain", 
                "gconf_value_set_bool", 
                "strcmp", 
                "g_rmdir", 
                "g_error_new_literal", 
                "g_free", 
                "time", 
                "fopen", 
                "strlen", 
                "gconf_schema_get_car_type", 
                "g_hash_table_new_full", 
                "g_string_insert_c", 
                "gconf_schema_set_default_value", 
                "gconf_value_free", 
                "fdopen", 
                "g_strsplit", 
                "g_hash_table_replace", 
                "g_dir_read_name", 
                "gconf_value_get_int", 
                "g_hash_table_insert", 
                "__errno_location", 
                "gconf_schema_get_long_desc", 
                "g_slist_remove", 
                "ferror", 
                "__gmon_start__", 
                "fileno", 
                "gconf_double_to_string", 
                "gconf_value_set_float", 
                "gconf_schema_set_list_type", 
                "gconf_value_get_float", 
                "g_return_if_fail_warning", 
                "strtol", 
                "g_hash_table_remove", 
                "gconf_value_new", 
                "g_strfreev", 
                "textdomain", 
                "gconf_value_get_schema", 
                "g_string_new", 
                "_ITM_deregisterTMCloneTable", 
                "g_hash_table_size", 
                "gconf_schema_get_gettext_domain", 
                "g_hash_table_lookup", 
                "gconf_string_to_double", 
                "gconf_schema_get_type", 
                "fclose", 
                "gconf_string_to_gulong", 
                "gconf_value_get_list", 
                "g_hash_table_new", 
                "g_markup_parse_context_parse", 
                "gconf_schema_get_short_desc", 
                "g_str_hash", 
                "g_dgettext", 
                "gconf_schema_set_owner", 
                "g_markup_parse_context_get_position", 
                "gconf_schema_set_short_desc", 
                "g_hash_table_foreach", 
                "g_strerror", 
                "gconf_error_quark", 
                "gconf_schema_set_car_type", 
                "gconf_schema_set_locale", 
                "mkdir", 
                "__strcpy_chk", 
                "g_strdup_printf", 
                "__xstat", 
                "g_slist_prepend", 
                "g_strdup", 
                "open", 
                "gconf_schema_get_list_type", 
                "gconf_value_set_schema_nocopy", 
                "g_string_free", 
                "gconf_value_get_car", 
                "g_slist_foreach", 
                "gconf_value_get_bool", 
                "setlocale", 
                "fputs", 
                "g_hash_table_lookup_extended", 
                "gconf_schema_get_locale", 
                "g_hash_table_destroy", 
                "g_file_test", 
                "g_hash_table_find", 
                "strncpy", 
                "g_error_free", 
                "_ITM_registerTMCloneTable", 
                "gconf_schema_set_cdr_type", 
                "gconf_schema_set_type", 
                "gconf_value_set_car_nocopy"
            ], 
            "rpm": "GConf2-3.2.6-8.el7.i686.rpm", 
            "complexity": {
                "r2aa": {
                    "afCc": 5, 
                    "afC": 191
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/bin/gconf-merge-tree"
        }, 
        "usr/libexec/gconf-defaults-mechanism": {
            "report-functions": [
                "g_value_peek_pointer", 
                "gconf_client_get_for_engine", 
                "g_type_register_static_simple", 
                "polkit_authority_check_authorization", 
                "g_option_context_parse", 
                "g_hash_table_insert", 
                "dbus_set_g_error", 
                "gconf_client_all_entries", 
                "g_option_context_new", 
                "g_slist_free", 
                "g_log_default_handler", 
                "dbus_error_init", 
                "g_strdupv", 
                "g_ptr_array_free", 
                "dbus_g_proxy_call", 
                "polkit_authority_enumerate_actions", 
                "g_enum_register_static", 
                "g_object_new", 
                "dbus_g_method_return", 
                "dbus_error_free", 
                "polkit_authorization_result_get_is_challenge", 
                "gconf_change_set_unset", 
                "g_signal_new", 
                "gconf_client_dir_exists", 
                "g_option_context_add_main_entries", 
                "g_type_class_peek", 
                "g_list_foreach", 
                "dbus_g_bus_get", 
                "__libc_start_main", 
                "g_source_remove", 
                "gconf_entry_free", 
                "g_quark_from_static_string", 
                "g_str_hash", 
                "g_type_init", 
                "g_malloc0_n", 
                "polkit_authorization_result_get_is_authorized", 
                "gconf_value_decode", 
                "g_error_free", 
                "polkit_system_bus_name_new", 
                "dbus_g_connection_get_connection", 
                "dbus_g_proxy_new_for_name", 
                "g_main_loop_new", 
                "g_once_init_enter", 
                "g_type_check_class_cast", 
                "dbus_g_thread_init", 
                "exit", 
                "g_main_loop_run", 
                "g_timeout_add_seconds", 
                "gconf_change_set_set", 
                "g_hash_table_iter_init", 
                "g_strcmp0", 
                "g_hash_table_size", 
                "polkit_authority_check_authorization_finish", 
                "g_type_check_instance_is_a", 
                "g_error_new", 
                "dbus_g_method_return_error", 
                "g_strconcat", 
                "gconf_change_set_unref", 
                "gconf_change_set_new", 
                "polkit_action_description_get_annotation", 
                "gconf_change_set_foreach", 
                "_Jv_RegisterClasses", 
                "polkit_authority_get", 
                "g_return_if_fail_warning", 
                "g_signal_emit", 
                "g_str_has_prefix", 
                "gconf_value_free", 
                "g_type_class_add_private", 
                "__gmon_start__", 
                "g_log_set_default_handler", 
                "g_strdup", 
                "__stack_chk_fail", 
                "dbus_g_connection_register_g_object", 
                "polkit_authority_enumerate_actions_finish", 
                "g_object_ref", 
                "dbus_g_method_get_sender", 
                "g_list_free", 
                "g_type_check_instance_cast", 
                "getpwuid", 
                "g_hash_table_new", 
                "strrchr", 
                "g_intern_static_string", 
                "g_main_loop_unref", 
                "dbus_g_object_type_install_info", 
                "_ITM_registerTMCloneTable", 
                "g_option_context_free", 
                "g_slist_foreach", 
                "gconf_client_commit_change_set", 
                "g_set_error", 
                "dbus_bus_get_unix_user", 
                "g_type_instance_get_private", 
                "g_strdup_vprintf", 
                "g_log", 
                "g_strfreev", 
                "g_object_unref", 
                "g_malloc0", 
                "g_free", 
                "g_ptr_array_new", 
                "gconf_client_suggest_sync", 
                "dbus_g_error_domain_register", 
                "g_strv_get_type", 
                "polkit_action_description_get_action_id", 
                "gconf_engine_unref", 
                "gconf_engine_get_local", 
                "g_ptr_array_add", 
                "_ITM_deregisterTMCloneTable", 
                "g_cclosure_marshal_VOID__BOXED", 
                "g_str_equal", 
                "g_once_init_leave", 
                "gconf_client_all_dirs", 
                "g_hash_table_iter_next", 
                "g_hash_table_destroy", 
                "g_assertion_message_expr"
            ], 
            "rpm": "GConf2-3.2.6-8.el7.i686.rpm", 
            "complexity": {
                "r2aa": {
                    "afCc": 9, 
                    "afC": 235
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/libexec/gconf-defaults-mechanism"
        }, 
        "usr/bin/gsettings-data-convert": {
            "report-functions": [
                "g_get_user_data_dir", 
                "__xstat", 
                "g_ascii_strtoll", 
                "g_variant_ref_sink", 
                "g_settings_set_enum", 
                "g_variant_new_array", 
                "g_dir_open", 
                "g_path_get_basename", 
                "g_hash_table_insert", 
                "gconf_value_get_list_type", 
                "g_settings_schema_source_lookup", 
                "g_slist_reverse", 
                "g_key_file_to_data", 
                "g_variant_builder_add", 
                "gconf_client_get_without_default", 
                "g_key_file_free", 
                "_Jv_RegisterClasses", 
                "g_strsplit", 
                "__stack_chk_fail", 
                "g_malloc", 
                "gconf_value_get_bool", 
                "g_settings_get_range", 
                "g_key_file_get_keys", 
                "g_mkdir_with_parents", 
                "g_settings_apply", 
                "__libc_start_main", 
                "g_key_file_new", 
                "g_key_file_set_string", 
                "g_settings_new", 
                "g_key_file_get_string_list", 
                "gconf_value_get_float", 
                "gconf_client_get_for_engine", 
                "g_settings_delay", 
                "_ITM_deregisterTMCloneTable", 
                "g_variant_type_equal", 
                "g_key_file_get_string", 
                "g_settings_set_value", 
                "g_printerr", 
                "g_file_set_contents", 
                "gconf_value_type_to_string", 
                "g_type_init", 
                "g_get_system_data_dirs", 
                "g_settings_set_flags", 
                "g_variant_builder_unref", 
                "g_string_append_printf", 
                "g_strerror", 
                "g_key_file_load_from_file", 
                "g_string_new", 
                "g_variant_get_type", 
                "gconf_value_get_string", 
                "g_strdup", 
                "g_key_file_get_groups", 
                "g_variant_new", 
                "_ITM_registerTMCloneTable", 
                "g_settings_schema_source_get_default", 
                "g_settings_new_with_path", 
                "strlen", 
                "g_option_context_parse", 
                "g_str_equal", 
                "gconf_load_source_path", 
                "gconf_value_get_list", 
                "g_strdup_printf", 
                "g_strconcat", 
                "strcpy", 
                "strstr", 
                "g_error_free", 
                "g_hash_table_unref", 
                "time", 
                "g_hash_table_lookup", 
                "g_file_test", 
                "memcpy", 
                "g_hash_table_iter_next", 
                "g_free", 
                "__gmon_start__", 
                "g_str_hash", 
                "g_slist_prepend", 
                "g_strfreev", 
                "gconf_engine_get_local_for_addresses", 
                "g_variant_print", 
                "gconf_value_free", 
                "g_string_free", 
                "g_settings_set", 
                "g_print", 
                "g_settings_get_value", 
                "__errno_location", 
                "gconf_address_list_free", 
                "g_option_context_add_main_entries", 
                "gconf_value_get_int", 
                "g_hash_table_new_full", 
                "g_object_unref", 
                "g_variant_builder_new", 
                "strchr", 
                "g_settings_schema_unref", 
                "g_build_filename", 
                "g_variant_get", 
                "g_option_context_new", 
                "g_variant_unref", 
                "g_dir_read_name", 
                "g_option_context_set_summary"
            ], 
            "rpm": "GConf2-3.2.6-8.el7.i686.rpm", 
            "complexity": {
                "r2aa": {
                    "afCc": 29, 
                    "afC": 649
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/bin/gsettings-data-convert"
        }, 
        "usr/bin/gconftool-2": {
            "report-functions": [
                "gconf_schema_set_short_desc", 
                "g_strconcat", 
                "_Jv_RegisterClasses", 
                "g_printerr", 
                "gconf_value_free", 
                "g_option_group_new", 
                "gconf_schema_set_long_desc", 
                "gconf_value_get_schema", 
                "xmlParseFile", 
                "_ITM_deregisterTMCloneTable", 
                "g_slist_length", 
                "gconf_engine_get_default", 
                "xmlKeepBlanksDefault", 
                "textdomain", 
                "gconf_engine_set_pair", 
                "gconf_entry_get_value", 
                "gconf_value_get_list_type", 
                "_ITM_registerTMCloneTable", 
                "gconf_engine_associate_schema", 
                "gconf_value_new_from_string", 
                "fgets", 
                "gconf_engine_all_dirs", 
                "__stack_chk_fail", 
                "g_str_hash", 
                "gconf_value_get_list", 
                "gconf_schema_get_car_type", 
                "gconf_engine_set_bool", 
                "__errno_location", 
                "g_regex_new", 
                "g_free", 
                "gconf_concat_dir_and_key", 
                "gconf_schema_set_list_type", 
                "gconf_schema_set_default_value", 
                "g_slist_prepend", 
                "g_str_equal", 
                "gconf_schema_get_list_type", 
                "gconf_schema_set_default_value_nocopy", 
                "gconf_engine_set", 
                "g_slist_sort", 
                "g_assertion_message_expr", 
                "fclose", 
                "gconf_engine_recursive_unset", 
                "gconf_engine_get_entry", 
                "g_hash_table_size", 
                "g_pattern_spec_free", 
                "gconf_engine_get_local_for_addresses", 
                "g_slist_reverse", 
                "gconf_schema_get_long_desc", 
                "g_hash_table_insert", 
                "gconf_ping_daemon", 
                "g_getenv", 
                "xmlNodeGetContent", 
                "g_option_context_new", 
                "strcmp", 
                "gconf_schema_get_owner", 
                "gconf_engine_get_without_default", 
                "_gconf_init_i18n", 
                "gconf_key_key", 
                "g_option_group_add_entries", 
                "gconf_value_new", 
                "gconf_schema_set_cdr_type", 
                "g_spawn_command_line_sync", 
                "gconf_schema_set_locale", 
                "g_option_context_set_translation_domain", 
                "gconf_value_get_car", 
                "gconf_shutdown_daemon", 
                "setlocale", 
                "gconf_value_set_bool", 
                "g_strdup", 
                "gconf_entry_get_is_default", 
                "g_regex_unref", 
                "g_build_filename", 
                "g_return_if_fail_warning", 
                "g_option_context_parse", 
                "g_slist_nth_data", 
                "gconf_schema_get_cdr_type", 
                "gconf_persistent_name_get_address_list", 
                "gconf_schema_set_owner", 
                "gconf_spawn_daemon", 
                "gconf_engine_get", 
                "gconf_value_set_cdr", 
                "gconf_engine_get_for_addresses", 
                "gconf_value_set_list_nocopy", 
                "gconf_value_new_list_from_string", 
                "gconf_value_set_schema_nocopy", 
                "gconf_entry_get_key", 
                "xmlCheckVersion", 
                "g_strerror", 
                "g_thread_init", 
                "gconf_schema_new", 
                "gconf_value_get_bool", 
                "g_slist_free", 
                "gconf_entry_get_schema_name", 
                "g_strnfill", 
                "gconf_engine_set_string", 
                "g_markup_escape_text", 
                "g_pattern_match_string", 
                "g_option_context_free", 
                "gconf_unique_key", 
                "g_hash_table_new", 
                "g_assertion_message", 
                "gconf_engine_unset", 
                "gconf_load_source_path", 
                "gconf_schema_set_type", 
                "gconf_engine_set_schema", 
                "g_hash_table_lookup", 
                "g_option_group_set_translation_domain", 
                "gconf_value_type_from_string", 
                "bindtextdomain", 
                "gconf_schema_get_default_value", 
                "g_option_context_add_group", 
                "gconf_engine_set_float", 
                "strtol", 
                "gconf_schema_set_gettext_domain", 
                "g_hash_table_foreach", 
                "gconf_address_list_free", 
                "fopen", 
                "gconf_engine_set_list", 
                "gconf_schema_get_locale", 
                "gconf_schema_free", 
                "g_dgettext", 
                "gconf_engine_unref", 
                "gconf_value_new_pair_from_string", 
                "gconf_schema_get_type", 
                "g_print", 
                "gconf_schema_get_short_desc", 
                "g_regex_match", 
                "g_locale_to_utf8", 
                "__libc_start_main", 
                "g_error_free", 
                "gconf_value_set_car", 
                "gconf_engine_all_entries", 
                "gconf_init", 
                "g_pattern_spec_new", 
                "gconf_value_get_string", 
                "xmlGetProp", 
                "gconf_schema_set_car_type", 
                "g_strchomp", 
                "gconf_value_set_list_type", 
                "gconf_entry_free", 
                "umask", 
                "gconf_engine_dir_exists", 
                "__gmon_start__", 
                "g_hash_table_destroy", 
                "g_option_context_add_main_entries", 
                "gconf_value_type_to_string", 
                "gconf_engine_suggest_sync", 
                "gconf_value_to_string"
            ], 
            "rpm": "GConf2-3.2.6-8.el7.i686.rpm", 
            "complexity": {
                "r2aa": {
                    "afCc": 383, 
                    "afC": 3448
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/bin/gconftool-2"
        }, 
        "usr/libexec/gconfd-2": {
            "report-functions": [
                "__stack_chk_fail", 
                "g_slist_prepend", 
                "dbus_message_new_signal", 
                "dbus_message_iter_open_container", 
                "dbus_message_get_type", 
                "dbus_message_get_args", 
                "gconf_sources_clear_cache_for_sources", 
                "gconf_sources_sync_all", 
                "g_slist_append", 
                "gconf_sources_set_schema", 
                "dup2", 
                "g_source_remove", 
                "gconf_locale_cache_new", 
                "g_get_user_config_dir", 
                "dbus_connection_remove_filter", 
                "g_hash_table_new", 
                "dbus_connection_unregister_object_path", 
                "gconf_locale_cache_free", 
                "gconf_entry_free", 
                "dbus_error_init", 
                "g_print", 
                "gconf_sources_remove_dir", 
                "dbus_message_iter_init_append", 
                "dbus_connection_unref", 
                "exit", 
                "g_str_equal", 
                "g_strconcat", 
                "dbus_message_get_interface", 
                "_Jv_RegisterClasses", 
                "gconf_sources_is_affected", 
                "gconf_sources_unset_value", 
                "dbus_message_new_error", 
                "dbus_bus_remove_match", 
                "gconf_sources_all_dirs", 
                "strrchr", 
                "_ITM_registerTMCloneTable", 
                "g_log", 
                "dbus_message_iter_get_basic", 
                "g_dgettext", 
                "dbus_message_set_no_reply", 
                "gconf_sources_dir_exists", 
                "g_malloc0", 
                "gconf_sources_clear_cache", 
                "g_strerror", 
                "g_list_free", 
                "__gmon_start__", 
                "dbus_connection_send", 
                "g_return_if_fail_warning", 
                "gconf_persistent_name_get_address_list", 
                "g_hash_table_remove", 
                "g_hash_table_destroy", 
                "gconf_sources_free", 
                "g_slist_reverse", 
                "dbus_message_get_sender", 
                "dbus_message_is_method_call", 
                "__libc_start_main", 
                "dbus_error_free", 
                "g_strdup_printf", 
                "gconf_listeners_count", 
                "g_timeout_add_seconds", 
                "g_chdir", 
                "dbus_message_append_args", 
                "g_main_loop_unref", 
                "gconf_load_source_path", 
                "dbus_connection_register_object_path", 
                "g_string_new", 
                "dbus_message_unref", 
                "g_assertion_message", 
                "dbus_message_iter_next", 
                "g_list_prepend", 
                "g_slist_free", 
                "g_main_loop_quit", 
                "gconf_locale_cache_get_list", 
                "g_hash_table_lookup", 
                "gconf_sources_set_notify_func", 
                "time", 
                "g_hash_table_insert", 
                "g_string_free", 
                "g_string_append", 
                "dbus_message_is_signal", 
                "dbus_free_string_array", 
                "gconf_address_list_free", 
                "sigprocmask", 
                "dbus_connection_set_exit_on_disconnect", 
                "_gconf_init_i18n", 
                "sigemptyset", 
                "__errno_location", 
                "gconf_dbus_utils_append_value", 
                "g_get_user_name", 
                "dbus_message_iter_init", 
                "gconf_sources_query_default_value", 
                "dbus_connection_add_filter", 
                "g_getenv", 
                "dbus_error_is_set", 
                "g_main_loop_new", 
                "getpid", 
                "gconf_locale_cache_expire", 
                "g_free", 
                "g_main_loop_run", 
                "gconf_address_list_get_persistent_name", 
                "gconf_dbus_utils_append_entry_values", 
                "g_list_remove", 
                "g_list_find_custom", 
                "dbus_message_get_args_valist", 
                "g_hash_table_foreach", 
                "gconf_sources_set_value", 
                "g_propagate_error", 
                "g_str_hash", 
                "dbus_bus_get", 
                "g_string_insert_c", 
                "g_list_remove_link", 
                "umask", 
                "g_error_free", 
                "gconf_listeners_free", 
                "g_hash_table_size", 
                "g_strdup", 
                "g_assertion_message_expr", 
                "gconf_listeners_new", 
                "gconf_sources_all_entries", 
                "gconf_dbus_utils_append_entries", 
                "textdomain", 
                "gconf_value_free", 
                "dbus_message_new_method_return", 
                "sigfillset", 
                "g_printerr", 
                "g_strcmp0", 
                "dbus_bus_request_name", 
                "gconf_set_daemon_mode", 
                "gconf_log", 
                "gconf_sources_query_value", 
                "dbus_bus_add_match", 
                "gconf_dbus_utils_get_value", 
                "dbus_connection_setup_with_g_main", 
                "g_list_free_1", 
                "_ITM_deregisterTMCloneTable", 
                "open", 
                "sigaction", 
                "dbus_message_new_method_call", 
                "dbus_connection_flush", 
                "strcmp", 
                "setlocale", 
                "gconf_sources_new_from_addresses", 
                "dbus_message_iter_append_basic", 
                "g_idle_add", 
                "g_slist_foreach", 
                "g_slist_remove", 
                "gconf_sources_recursive_unset"
            ], 
            "rpm": "GConf2-3.2.6-8.el7.i686.rpm", 
            "complexity": {
                "r2aa": {
                    "afCc": 17, 
                    "afC": 452
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/libexec/gconfd-2"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Version": " 3.2.6", 
            "Name": " GConf2", 
            "License": " LGPLv2+ and GPLv2+", 
            "URL": " http://projects.gnome.org/gconf/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " worker1.bsys.centos.org", 
            "Description": "\nGConf is a process-transparent configuration database API used to\nstore user preferences. It has pluggable backends and features to\nsupport workgroup administration.\n", 
            "Build Date": " Tue 10 Jun 2014 06:18:38 PM EDT", 
            "Vendor": " CentOS", 
            "Source RPM": " GConf2-3.2.6-8.el7.src.rpm", 
            "warning": " /home/jason/fctl/swap/0/GConf2-3.2.6-8.el7.i686.rpm: Header V3 RSA/SHA256 Signature, key ID f4a80eb5: NOKEY", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Thu 03 Jul 2014 09:26:48 PM EDT, Key ID 24c6a8a7f4a80eb5", 
            "Release": " 8.el7", 
            "Group": " System Environment/Base", 
            "Packager": " CentOS BuildSystem <http://bugs.centos.org>", 
            "Summary": " A process-transparent configuration system", 
            "Size": " 6559712"
        }
    }
}