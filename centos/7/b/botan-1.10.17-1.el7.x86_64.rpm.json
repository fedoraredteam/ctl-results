{
    "results": {
        "usr/lib64/libbotan-1_10_so_1_17": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/libbotan-1.10.so.1.17", 
            "complexity": {
                "r2aa": {
                    "afCc": "97", 
                    "afC": "99"
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ZNSsC1EPKcRKSaIcE", 
                "mmap", 
                "_ZNSs6appendEmc", 
                "_ITM_registerTMCloneTable", 
                "_ZNSt13runtime_errorC1ERKSs", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "execl", 
                "_ZNSt16invalid_argumentD1Ev", 
                "_ZNSt13runtime_errorD1Ev", 
                "_Unwind_Resume", 
                "_ZNSt9exceptionD1Ev", 
                "malloc", 
                "memmove", 
                "_ZNSs6assignEPKc", 
                "pthread_mutex_destroy", 
                "_ZNSolsEi", 
                "waitpid", 
                "_ZSt20__throw_out_of_rangePKc", 
                "_ZdlPv", 
                "EVP_sha512", 
                "RC4_set_key", 
                "EVP_CIPHER_flags", 
                "_ZNSs6appendEPKc", 
                "BN_bn2bin", 
                "_ZSt20__throw_length_errorPKc", 
                "_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "_ZNSt6localeC1Ev", 
                "strlen", 
                "BN_CTX_free", 
                "BN_nnmod", 
                "_ZNSsC1ERKSs", 
                "_ZNSt9bad_allocD2Ev", 
                "EVP_EncryptUpdate", 
                "_ZNSt6localeD1Ev", 
                "free", 
                "pthread_mutex_init", 
                "EVP_CIPHER_CTX_cipher", 
                "_ZNSi5tellgEv", 
                "_ZNSt16invalid_argumentD2Ev", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode", 
                "EVP_DigestFinal_ex", 
                "opendir", 
                "_ZSt9terminatev", 
                "gmtime_r", 
                "BN_mul", 
                "access", 
                "EVP_MD_block_size", 
                "_ZNSs6appendEPKcm", 
                "EVP_des_ecb", 
                "EVP_des_ede3_ecb", 
                "_ZNSs9_M_mutateEmmm", 
                "_ZNSt16invalid_argumentC1ERKSs", 
                "connect", 
                "__fdelt_chk", 
                "BN_dup", 
                "EVP_EncryptInit_ex", 
                "memset", 
                "_ZNKSs4findEcm", 
                "memcmp", 
                "_ZNKSt13runtime_error4whatEv", 
                "EVP_sha256", 
                "EVP_camellia_256_ecb", 
                "BZ2_bzDecompressInit", 
                "kill", 
                "__cxa_free_exception", 
                "_ZNSt16invalid_argumentC2ERKSs", 
                "EVP_CIPHER_key_length", 
                "_ZNSsC1EPKcmRKSaIcE", 
                "deflateEnd", 
                "_ZNSt13runtime_errorD2Ev", 
                "_ZSt17__throw_bad_allocv", 
                "BN_cmp", 
                "_ZNSs6assignEPKcm", 
                "EVP_CIPHER_block_size", 
                "EVP_CIPHER_CTX_set_key_length", 
                "EVP_camellia_128_ecb", 
                "exit", 
                "_ZNKSs4findEPKcmm", 
                "_ZNSs6insertEmPKcm", 
                "_ZNSs6appendERKSs", 
                "EVP_CIPHER_CTX_ctrl", 
                "dlsym", 
                "EVP_CIPHER_CTX_init", 
                "__cxa_begin_catch", 
                "EVP_aes_256_ecb", 
                "clock_gettime", 
                "pipe", 
                "inflateInit_", 
                "__stack_chk_fail", 
                "_ZNSs12_M_leak_hardEv", 
                "_ZNSs6assignERKSs", 
                "_Znwm", 
                "BN_mod_inverse", 
                "pthread_mutex_unlock", 
                "EVP_seed_ecb", 
                "dup2", 
                "_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "BN_mod_exp", 
                "__cxa_finalize", 
                "getuid", 
                "_ZNSo5writeEPKcl", 
                "msync", 
                "BN_add", 
                "__gmon_start__", 
                "EVP_sha224", 
                "EVP_sha384", 
                "_ZNSs14_M_replace_auxEmmmc", 
                "_ZNSs6insertEmPKc", 
                "_ZNSsD1Ev", 
                "munmap", 
                "BN_bin2bn", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l", 
                "_ZNKSs7compareERKSs", 
                "BZ2_bzCompressInit", 
                "close", 
                "deflateInit_", 
                "__memcpy_chk", 
                "dlclose", 
                "_ZNSo9_M_insertImEERSoT_", 
                "RC4", 
                "EVP_md4", 
                "EVP_bf_ecb", 
                "__cxa_end_catch", 
                "EVP_camellia_192_ecb", 
                "_ZSt19__throw_logic_errorPKc", 
                "_ZSt16__throw_bad_castv", 
                "_ZNSt8ios_baseC2Ev", 
                "EVP_CIPHER_CTX_set_padding", 
                "_ZNKSs4findEPKcm", 
                "mkstemp", 
                "EVP_MD_CTX_cleanup", 
                "inflate", 
                "_ZNSt11logic_errorC1ERKSs", 
                "socket", 
                "__cxa_pure_virtual", 
                "__cxa_throw", 
                "_ZNSs4_Rep9_S_createEmmRKSaIcE", 
                "time", 
                "_ZNSs4_Rep10_M_destroyERKSaIcE", 
                "memcpy", 
                "EVP_ripemd160", 
                "open", 
                "getgid", 
                "_ZNSt11logic_errorD1Ev", 
                "getrusage", 
                "EVP_CIPHER_CTX_cleanup", 
                "deflate", 
                "getpid", 
                "BN_clear_free", 
                "_ZNSi5seekgElSt12_Ios_Seekdir", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEED1Ev", 
                "BZ2_bzDecompressEnd", 
                "getpgrp", 
                "_ZNSt8ios_base4InitD1Ev", 
                "dlopen", 
                "select", 
                "_ZNSs7reserveEm", 
                "read", 
                "__errno_location", 
                "EVP_cast5_ecb", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "EVP_DecryptUpdate", 
                "_ZNSt8ios_baseD2Ev", 
                "__cxa_get_exception_ptr", 
                "inflateEnd", 
                "log", 
                "EVP_DigestUpdate", 
                "_Jv_RegisterClasses", 
                "_ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RSbIS4_S5_T1_ES4_", 
                "_ZNKSt9exception4whatEv", 
                "__dynamic_cast", 
                "umask", 
                "BN_new", 
                "_ZNSt13runtime_errorC2ERKSs", 
                "EVP_MD_size", 
                "munlock", 
                "BN_sub", 
                "EVP_MD_CTX_init", 
                "_ZNSi5seekgESt4fposI11__mbstate_tE", 
                "__pthread_key_create", 
                "BZ2_bzCompress", 
                "__cxa_allocate_exception", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "__cxa_rethrow", 
                "unlink", 
                "__lxstat", 
                "mlock", 
                "_ITM_deregisterTMCloneTable", 
                "dlerror", 
                "__cxa_atexit", 
                "BN_copy", 
                "__gxx_personality_v0", 
                "__xstat", 
                "_ZNSt11range_errorC1ERKSs", 
                "_ZNKSt11logic_error4whatEv", 
                "_ZNSs4_Rep10_M_disposeERKSaIcE", 
                "_ZNKSt5ctypeIcE13_M_widen_initEv", 
                "_ZNSsC1EmcRKSaIcE", 
                "_ZNSi4readEPcl", 
                "EVP_DigestInit_ex", 
                "_ZNSt9exceptionD2Ev", 
                "strncpy", 
                "EVP_MD_CTX_md", 
                "EVP_sha1", 
                "_ZNSs4swapERSs", 
                "pow", 
                "EVP_aes_192_ecb", 
                "BN_mod_mul", 
                "write", 
                "fork", 
                "_ZNSt11range_errorD1Ev", 
                "readdir", 
                "tolower", 
                "BN_CTX_new", 
                "BN_num_bits", 
                "getppid", 
                "closedir", 
                "EVP_aes_128_ecb", 
                "EVP_md2", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate", 
                "BZ2_bzDecompress", 
                "EVP_md5", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEEC1Ev", 
                "pthread_mutex_lock", 
                "_ZNKSt15basic_stringbufIcSt11char_traitsIcESaIcEE3strEv", 
                "_ZNKSs7compareEPKc", 
                "EVP_DecryptInit_ex", 
                "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base", 
                "BZ2_bzCompressEnd", 
                "_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEEC1ESt13_Ios_Openmode", 
                "_ZNSsC1ERKSsmm"
            ], 
            "rpm": "botan-1.10.17-1.el7.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Version": " 1.10.17", 
            "Name": " botan", 
            "License": " BSD", 
            "URL": " http://botan.randombit.net/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-06.phx2.fedoraproject.org", 
            "Description": "\nBotan is a BSD-licensed crypto library written in C++. It provides a\nwide variety of basic cryptographic algorithms, X.509 certificates and\nCRLs, PKCS \\#10 certificate requests, a filter/pipe message processing\nsystem, and a wide variety of other features, all written in portable\nC++. The API reference, tutorial, and examples may help impart the\nflavor of the library.\n", 
            "Build Date": " Mon 02 Oct 2017 01:40:43 PM EDT", 
            "Vendor": " Fedora Project", 
            "Source RPM": " botan-1.10.17-1.el7.src.rpm", 
            "warning": " /home/jason/fctl/3/botan-1.10.17-1.el7.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID 352c64e5: NOKEY", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Mon 02 Oct 2017 03:05:51 PM EDT, Key ID 6a2faea2352c64e5", 
            "Release": " 1.el7", 
            "Group": " System Environment/Libraries", 
            "Packager": " Fedora Project", 
            "Summary": " Crypto library written in C++", 
            "Size": " 2972659"
        }
    }
}