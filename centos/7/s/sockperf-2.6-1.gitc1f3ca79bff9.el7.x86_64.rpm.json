{
    "results": {
        "usr/bin/sockperf": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/sockperf", 
            "complexity": {
                "r2aa": {
                    "afCc": 23, 
                    "afC": 405
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "pthread_join", 
                "__gmon_start__", 
                "free", 
                "_ZNSt9exceptionD2Ev", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l", 
                "__cxa_rethrow", 
                "pthread_mutex_lock", 
                "clock_gettime", 
                "getenv", 
                "__cxa_atexit", 
                "__fprintf_chk", 
                "fflush", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEED1Ev", 
                "pthread_detach", 
                "fclose", 
                "__libc_start_main", 
                "strtol", 
                "_ZdaPv", 
                "__gxx_personality_v0", 
                "__printf_chk", 
                "sqrt", 
                "__snprintf_chk", 
                "pthread_mutexattr_init", 
                "fgets", 
                "pthread_setaffinity_np", 
                "rand", 
                "__xstat", 
                "__cxa_pure_virtual", 
                "__ctype_b_loc", 
                "_ZNSt12out_of_rangeD1Ev", 
                "_Jv_RegisterClasses", 
                "_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev", 
                "usleep", 
                "regexec", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate", 
                "fscanf", 
                "_ZNSs12_M_leak_hardEv", 
                "_ZNSo9_M_insertImEERSoT_", 
                "dlsym", 
                "_ZNSt6localeD1Ev", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEEC1Ev", 
                "setbuf", 
                "setenv", 
                "inet_addr", 
                "snprintf", 
                "_ITM_deregisterTMCloneTable", 
                "_ZNSt11logic_errorC1ERKSs", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode", 
                "pthread_mutexattr_settype", 
                "_ZdlPv", 
                "_ZNSsC1ERKSs", 
                "inet_ntoa", 
                "_ZNSt8ios_base4InitD1Ev", 
                "strtok", 
                "dlerror", 
                "_ZSt17__throw_bad_allocv", 
                "__cxa_throw", 
                "pthread_mutexattr_destroy", 
                "isprint", 
                "_ZNSt8ios_baseD2Ev", 
                "__strcpy_chk", 
                "_ZNSs4_Rep10_M_destroyERKSaIcE", 
                "ceilf", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc", 
                "pthread_attr_init", 
                "_ZNSs6assignEPKcm", 
                "fopen", 
                "__errno_location", 
                "_ZNSt12__basic_fileIcED1Ev", 
                "sscanf", 
                "putchar", 
                "regfree", 
                "strcmp", 
                "_ZNSs4_Rep10_M_disposeERKSaIcE", 
                "__pthread_key_create", 
                "strlen", 
                "setitimer", 
                "_ITM_registerTMCloneTable", 
                "getrlimit", 
                "strerror", 
                "sleep", 
                "srand", 
                "_ZNSs6assignERKSs", 
                "_ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RSbIS4_S5_T1_ES4_", 
                "perror", 
                "exit", 
                "strncpy", 
                "pthread_kill", 
                "gethostbyname", 
                "pthread_mutex_unlock", 
                "unsetenv", 
                "strncmp", 
                "pthread_self", 
                "daemon", 
                "_ZNSt12out_of_rangeC1ERKSs", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv", 
                "_ZNKSt5ctypeIcE13_M_widen_initEv", 
                "pthread_mutex_destroy", 
                "malloc", 
                "__stack_chk_fail", 
                "dlopen", 
                "_Unwind_Resume", 
                "sigaction", 
                "__cxa_end_catch", 
                "_ZSt16__throw_bad_castv", 
                "regcomp", 
                "__cxa_guard_release", 
                "pthread_create", 
                "__cxa_allocate_exception", 
                "backtrace_symbols", 
                "__cxa_guard_abort", 
                "__sprintf_chk", 
                "__cxa_begin_catch", 
                "_Znwm", 
                "_ZNSsC1EPKcRKSaIcE", 
                "__cxa_guard_acquire", 
                "_ZNSt11logic_errorD1Ev", 
                "fcntl", 
                "strtoul", 
                "__cxa_call_unexpected", 
                "pthread_mutex_init", 
                "__memcpy_chk", 
                "inet_aton", 
                "backtrace", 
                "_ZNSt8ios_baseC2Ev", 
                "_Znam", 
                "puts", 
                "fwrite", 
                "syscall", 
                "memcpy", 
                "__cxa_free_exception", 
                "__fdelt_chk", 
                "sigemptyset", 
                "qsort", 
                "strdup", 
                "memset"
            ], 
            "rpm": "sockperf-2.6-1.gitc1f3ca79bff9.el7.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Version": " 2.6", 
            "Name": " sockperf", 
            "License": " BSD", 
            "URL": " https://github.com/mellanox/sockperf", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-14.phx2.fedoraproject.org", 
            "Description": "\nsockperf is a network benchmarking utility over socket API that was designed\nfor testing performance (latency and throughput) of high-performance systems\n(it is also good for testing performance of regular networking systems as\nwell). It covers most of the socket API calls and options.\n\nSpecifically, in addition to the standard throughput tests, sockperf, does the\nfollowing:\n\n* Measure latency of each discrete packet at sub-nanosecond resolution (using\n  TSC register that counts CPU ticks with very low overhead).\n\n* Does the above for both ping-pong mode and for latency under load mode. This\n  means that we measure latency of single packets even under load of millions\n  Packets Per Second (without waiting for reply of packet before sending\n  subsequent packet on time)\n\n* Enable spike analysis by providing histogram, with various percentiles of the\n  packets\u2019 latencies (for example: median, min, max, 99% percentile, and more),\n  (this is in addition to average and standard deviation). Also, sockperf\n  provides full log with all packet\u2019s tx/rx times that can be further analyzed\n  with external tools, such as MS-Excel or matplotlib - All this without\n  affecting the benchmark itself.\n\n* Support MANY optional settings for good coverage of socket API and network\n  configurations, while still keeping very low overhead in the fast path to\n  allow cleanest results.\n", 
            "Build Date": " Sun 20 Sep 2015 03:41:48 PM EDT", 
            "Vendor": " Fedora Project", 
            "Source RPM": " sockperf-2.6-1.gitc1f3ca79bff9.el7.src.rpm", 
            "warning": " /home/jason/fctl/3/sockperf-2.6-1.gitc1f3ca79bff9.el7.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID 352c64e5: NOKEY", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Wed 23 Sep 2015 01:07:15 AM EDT, Key ID 6a2faea2352c64e5", 
            "Release": " 1.gitc1f3ca79bff9.el7", 
            "Group": " Unspecified", 
            "Packager": " Fedora Project", 
            "Summary": " Network benchmarking utility for testing latency and throughput", 
            "Size": " 3643676"
        }
    }
}