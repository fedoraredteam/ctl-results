{
    "results": "no elfs found", 
    "metadata": {
        "spec_data": {
            "Version": " 0.100", 
            "Name": " perl-Perl6-Caller", 
            "License": " GPL+ or Artistic", 
            "URL": " https://metacpan.org/release/Perl6-Caller", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-26.phx2.fedoraproject.org", 
            "Description": "\nBy default, this module exports the caller function. This automatically\nreturns a new caller object. An optional argument specifies how many stack\nframes back to skip, just like the CORE::caller function. This lets you do\nthings like this:\n\n    print \"In \",           caller->subroutine,\n          \" called from \", caller->filename,\n          \" line \",        caller->line;\n\nIf you do not wish the caller function imported, specify an empty import list\nand instantiate a new Perl6::Caller object.\n\n    use Perl6::Caller ();\n    my $caller = Perl6::Caller->new;\n    print $caller->line;\n\nNote: if the results from the module seem strange, please read\nperldoc -s caller carefully. It has stranger behavior than you might be aware.\n", 
            "Build Date": " Fri 31 Jan 2014 02:14:41 PM EST", 
            "Vendor": " Fedora Project", 
            "Source RPM": " perl-Perl6-Caller-0.100-2.el7.src.rpm", 
            "warning": " /home/jason/fctl/swap/1/perl-Perl6-Caller-0.100-2.el7.noarch.rpm: Header V3 RSA/SHA256 Signature, key ID 352c64e5: NOKEY", 
            "Architecture": " noarch", 
            "Signature": " RSA/SHA256, Wed 05 Feb 2014 12:02:45 AM EST, Key ID 6a2faea2352c64e5", 
            "Release": " 2.el7", 
            "Group": " Development/Libraries", 
            "Packager": " Fedora Project", 
            "Summary": " OO caller() interface", 
            "Size": " 10336"
        }
    }
}