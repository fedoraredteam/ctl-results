{
    "results": {
        "usr/bin/trader": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/trader", 
            "complexity": {
                "r2aa": {
                    "afCc": 21, 
                    "afC": 281
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "srand48", 
                "raw", 
                "bindtextdomain", 
                "whline", 
                "strchr", 
                "iswalnum", 
                "wcrtomb", 
                "iconv", 
                "wcslen", 
                "getopt_long", 
                "strlen", 
                "realloc", 
                "dcngettext", 
                "gettimeofday", 
                "__ctype_get_mb_cur_max", 
                "wcswidth", 
                "strerror", 
                "wcstol", 
                "strfmon", 
                "sigaction", 
                "__gmon_start__", 
                "wcsstr", 
                "wattr_on", 
                "iconv_close", 
                "towlower", 
                "start_color", 
                "__swprintf_chk", 
                "has_colors", 
                "iconv_open", 
                "fputs", 
                "noecho", 
                "iswupper", 
                "wmemmove", 
                "nl_langinfo", 
                "wcstod", 
                "sigaddset", 
                "sscanf", 
                "beep", 
                "meta", 
                "raise", 
                "malloc", 
                "fgets", 
                "_Jv_RegisterClasses", 
                "wcsdup", 
                "mbsrtowcs", 
                "wcsncat", 
                "init_pair", 
                "fscanf", 
                "btowc", 
                "memmove", 
                "wcsncpy", 
                "waddch", 
                "iswlower", 
                "doupdate", 
                "__vfprintf_chk", 
                "curs_set", 
                "wctob", 
                "wget_wch", 
                "__libc_start_main", 
                "_ITM_registerTMCloneTable", 
                "fopen", 
                "exit", 
                "endwin", 
                "wcwidth", 
                "strtol", 
                "memchr", 
                "werase", 
                "wbkgd", 
                "wbkgdset", 
                "strcmp", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "__stack_chk_fail", 
                "wtimeout", 
                "memcpy", 
                "waddnstr", 
                "wcschr", 
                "__strdup", 
                "__printf_chk", 
                "wrefresh", 
                "drand48", 
                "dcgettext", 
                "wborder", 
                "__xstat", 
                "sigemptyset", 
                "stpcpy", 
                "__assert_fail", 
                "__errno_location", 
                "fputc", 
                "mkdir", 
                "memcmp", 
                "abort", 
                "__fprintf_chk", 
                "delwin", 
                "wtouchln", 
                "__snprintf_chk", 
                "iswspace", 
                "setlocale", 
                "strrchr", 
                "wcscpy", 
                "newwin", 
                "free", 
                "wmove", 
                "towupper", 
                "wclear", 
                "keypad", 
                "localeconv", 
                "getenv", 
                "initscr", 
                "qsort", 
                "wcscmp", 
                "textdomain", 
                "fclose"
            ], 
            "rpm": "trader-7.11-1.el7.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Version": " 7.11", 
            "Name": " trader", 
            "License": " GPLv3+", 
            "URL": " http://www.zap.org.au/software/trader/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-25.phx2.fedoraproject.org", 
            "Description": "\nStar Traders is a simple game of interstellar trading, where the objective\nis to create companies, buy and sell shares, borrow and repay money, in\norder to become the wealthiest player (the winner).\n", 
            "Build Date": " Tue 20 Jun 2017 07:59:23 PM EDT", 
            "Vendor": " Fedora Project", 
            "Source RPM": " trader-7.11-1.el7.src.rpm", 
            "warning": " /home/jason/fctl/3/trader-7.11-1.el7.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID 352c64e5: NOKEY", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Tue 20 Jun 2017 09:17:56 PM EDT, Key ID 6a2faea2352c64e5", 
            "Release": " 1.el7", 
            "Group": " Amusements/Games", 
            "Packager": " Fedora Project", 
            "Summary": " Star Traders, a simple game of interstellar trading", 
            "Size": " 810388"
        }
    }
}