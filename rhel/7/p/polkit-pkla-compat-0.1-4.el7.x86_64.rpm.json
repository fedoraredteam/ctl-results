{
    "results": {
        "usr/lib/device-mapper/libdevmapper-event-lvm2mirror_so": {
            "report-functions": [
                "dmeventd_lvm2_lock", 
                "__cxa_finalize", 
                "dm_get_next_target", 
                "dm_free_wrapper", 
                "dm_malloc_wrapper", 
                "__stack_chk_fail", 
                "_ITM_deregisterTMCloneTable", 
                "dm_task_get_name", 
                "dmeventd_lvm2_run", 
                "__gmon_start__", 
                "__syslog_chk", 
                "strtol", 
                "dmeventd_lvm2_exit", 
                "_ITM_registerTMCloneTable", 
                "dmeventd_lvm2_init", 
                "strcmp", 
                "dmeventd_lvm2_command", 
                "dmeventd_lvm2_pool", 
                "strchr", 
                "dm_split_words", 
                "strlen"
            ], 
            "rpm": "polkit-pkla-compat-0.1-4.el7.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2mirror.so"
        }, 
        "usr/bin/pkla-admin-identities": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/pkla-admin-identities", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "g_key_file_get_integer", 
                "g_file_info_get_name", 
                "g_option_context_add_main_entries", 
                "g_option_context_free", 
                "g_type_instance_get_private", 
                "g_value_set_object", 
                "g_key_file_get_double", 
                "g_str_has_suffix", 
                "g_key_file_error_quark", 
                "__stack_chk_fail", 
                "g_key_file_get_string", 
                "g_type_name", 
                "g_once_init_leave", 
                "g_free", 
                "g_object_unref", 
                "g_file_new_for_path", 
                "__libc_start_main", 
                "g_key_file_new", 
                "g_object_class_install_property", 
                "puts", 
                "g_key_file_load_from_file", 
                "g_signal_new", 
                "g_strfreev", 
                "g_key_file_get_boolean", 
                "g_option_context_parse", 
                "g_list_free", 
                "g_list_append", 
                "g_file_get_basename", 
                "g_file_enumerate_children", 
                "g_key_file_get_string_list", 
                "g_option_context_set_summary", 
                "g_list_reverse", 
                "__cxa_finalize", 
                "g_error_matches", 
                "polkit_identity_get_type", 
                "g_key_file_free", 
                "g_type_check_class_cast", 
                "g_file_enumerator_next_file", 
                "g_file_get_type", 
                "g_log", 
                "g_type_class_add_private", 
                "g_type_check_instance_cast", 
                "g_file_get_child", 
                "__gmon_start__", 
                "g_list_prepend", 
                "g_type_register_static_simple", 
                "g_strcmp0", 
                "g_set_error_literal", 
                "polkit_identity_from_string", 
                "_ITM_deregisterTMCloneTable", 
                "g_option_context_new", 
                "g_value_dup_object", 
                "g_intern_static_string", 
                "g_object_new", 
                "g_error_free", 
                "_Jv_RegisterClasses", 
                "g_signal_connect_data", 
                "g_file_monitor_directory", 
                "g_cclosure_marshal_VOID__VOID", 
                "_ITM_registerTMCloneTable", 
                "g_param_spec_object", 
                "g_signal_emit_by_name", 
                "dcgettext", 
                "g_file_get_uri", 
                "__fprintf_chk", 
                "g_once_init_enter", 
                "g_file_get_path", 
                "g_type_class_peek_parent", 
                "g_type_init", 
                "g_get_prgname", 
                "g_str_has_prefix", 
                "g_list_foreach", 
                "polkit_identity_to_string", 
                "g_key_file_has_key"
            ], 
            "rpm": "polkit-pkla-compat-0.1-4.el7.x86_64.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2raid_so": {
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "dmeventd_lvm2_command", 
                "strchr", 
                "__gmon_start__", 
                "__syslog_chk", 
                "_Jv_RegisterClasses", 
                "strcmp", 
                "dm_get_next_target", 
                "strtol", 
                "dmeventd_lvm2_pool", 
                "dm_task_get_name", 
                "_ITM_registerTMCloneTable", 
                "dmeventd_lvm2_lock", 
                "dm_split_words", 
                "__cxa_finalize", 
                "dmeventd_lvm2_run", 
                "dmeventd_lvm2_exit", 
                "dmeventd_lvm2_unlock"
            ], 
            "rpm": "polkit-pkla-compat-0.1-4.el7.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2raid.so"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2thin_so": {
            "report-functions": [
                "dmeventd_lvm2_init", 
                "dm_task_get_name", 
                "dmeventd_lvm2_run", 
                "__stack_chk_fail", 
                "dm_pool_create", 
                "dm_task_get_info", 
                "dm_pool_free", 
                "dm_mountinfo_read", 
                "__syslog_chk", 
                "dmeventd_lvm2_command", 
                "dmeventd_lvm2_exit", 
                "fork", 
                "dm_bitset_create", 
                "dm_get_next_target", 
                "exit", 
                "dm_task_destroy", 
                "dm_task_set_name", 
                "__cxa_finalize", 
                "dm_task_create", 
                "dm_get_status_thin_pool", 
                "strerror", 
                "dm_task_run", 
                "_ITM_registerTMCloneTable", 
                "__errno_location", 
                "dm_pool_zalloc", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "dm_task_get_names", 
                "execvp", 
                "dm_task_no_open_count", 
                "dm_bitset_destroy", 
                "dmeventd_lvm2_unlock", 
                "dm_task_get_deps", 
                "waitpid", 
                "dm_pool_destroy"
            ], 
            "rpm": "polkit-pkla-compat-0.1-4.el7.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2thin.so"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2mirror_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2mirror.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "strlen", 
                "dmeventd_lvm2_pool", 
                "__stack_chk_fail", 
                "dmeventd_lvm2_init", 
                "_ITM_deregisterTMCloneTable", 
                "dm_task_get_name", 
                "strcmp", 
                "dm_free_wrapper", 
                "dmeventd_lvm2_unlock", 
                "dm_get_next_target", 
                "dm_malloc_wrapper", 
                "__gmon_start__", 
                "strchr", 
                "_Jv_RegisterClasses", 
                "dm_split_words", 
                "strtol", 
                "dmeventd_lvm2_lock", 
                "__cxa_finalize", 
                "dmeventd_lvm2_run", 
                "__syslog_chk"
            ], 
            "rpm": "polkit-pkla-compat-0.1-4.el7.x86_64.rpm"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2raid_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2raid.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "strchr", 
                "_ITM_registerTMCloneTable", 
                "_Jv_RegisterClasses", 
                "__syslog_chk", 
                "dm_task_get_name", 
                "dmeventd_lvm2_lock", 
                "dmeventd_lvm2_unlock", 
                "strtol", 
                "strcmp", 
                "dmeventd_lvm2_exit", 
                "dmeventd_lvm2_init", 
                "__cxa_finalize", 
                "dmeventd_lvm2_pool", 
                "dmeventd_lvm2_run", 
                "dm_split_words", 
                "__stack_chk_fail", 
                "__gmon_start__", 
                "dm_get_next_target"
            ], 
            "rpm": "polkit-pkla-compat-0.1-4.el7.x86_64.rpm"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2thin_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2thin.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "exit", 
                "__syslog_chk", 
                "dm_pool_destroy", 
                "dm_pool_create", 
                "dm_bitset_destroy", 
                "__gmon_start__", 
                "dmeventd_lvm2_lock", 
                "dm_task_get_name", 
                "fork", 
                "dm_pool_zalloc", 
                "dm_task_no_open_count", 
                "dm_task_set_name", 
                "_ITM_deregisterTMCloneTable", 
                "dmeventd_lvm2_command", 
                "dm_task_destroy", 
                "dm_bitset_create", 
                "execvp", 
                "__stack_chk_fail", 
                "dmeventd_lvm2_unlock", 
                "dm_task_get_info", 
                "dm_task_get_deps", 
                "strerror", 
                "dm_mountinfo_read", 
                "dm_task_get_names", 
                "dmeventd_lvm2_run", 
                "dm_task_create", 
                "dmeventd_lvm2_exit", 
                "dm_get_next_target", 
                "__errno_location", 
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize", 
                "waitpid", 
                "dm_pool_free", 
                "_Jv_RegisterClasses", 
                "dm_get_status_thin_pool"
            ], 
            "rpm": "polkit-pkla-compat-0.1-4.el7.x86_64.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2snapshot_so": {
            "report-functions": [
                "strerror", 
                "dmeventd_lvm2_exit", 
                "_Jv_RegisterClasses", 
                "__stack_chk_fail", 
                "__cxa_finalize", 
                "dmeventd_lvm2_init", 
                "dm_get_next_target", 
                "_ITM_deregisterTMCloneTable", 
                "dm_pool_create", 
                "dm_pool_destroy", 
                "dm_split_words", 
                "dm_pool_zalloc", 
                "fork", 
                "exit", 
                "execvp", 
                "fopen64", 
                "dm_task_get_name", 
                "fclose", 
                "dmeventd_lvm2_lock", 
                "dmeventd_lvm2_run", 
                "waitpid", 
                "dm_task_get_info", 
                "__xstat64", 
                "fgets", 
                "__gmon_start__", 
                "dmeventd_lvm2_command", 
                "__syslog_chk", 
                "dm_get_status_snapshot", 
                "dmeventd_lvm2_unlock", 
                "_ITM_registerTMCloneTable", 
                "dm_pool_free"
            ], 
            "rpm": "polkit-pkla-compat-0.1-4.el7.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2snapshot.so"
        }, 
        "usr/bin/pkla-check-authorization": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/pkla-check-authorization", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "g_file_monitor_directory", 
                "g_option_context_set_summary", 
                "g_list_sort", 
                "g_key_file_free", 
                "g_list_prepend", 
                "g_file_new_for_path", 
                "polkit_implicit_authorization_to_string", 
                "g_file_info_get_file_type", 
                "g_key_file_get_string_list", 
                "polkit_identity_get_type", 
                "g_error_free", 
                "g_option_context_free", 
                "g_list_free_full", 
                "g_strfreev", 
                "g_type_name", 
                "polkit_details_get_type", 
                "g_type_init", 
                "g_option_error_quark", 
                "g_type_register_static_simple", 
                "g_file_info_get_name", 
                "__stack_chk_fail", 
                "polkit_identity_to_string", 
                "polkit_details_insert", 
                "g_pattern_spec_new", 
                "g_file_enumerate_children", 
                "g_log", 
                "g_type_class_add_private", 
                "g_param_spec_object", 
                "puts", 
                "g_value_set_object", 
                "g_str_has_suffix", 
                "polkit_error_quark", 
                "__fprintf_chk", 
                "g_list_foreach", 
                "__cxa_finalize", 
                "g_key_file_new", 
                "g_hash_table_unref", 
                "g_type_check_instance_is_a", 
                "g_malloc0", 
                "g_key_file_get_string", 
                "g_strsplit", 
                "g_str_equal", 
                "__libc_start_main", 
                "g_value_dup_object", 
                "g_list_reverse", 
                "g_set_error", 
                "g_get_prgname", 
                "getgrouplist", 
                "g_key_file_get_groups", 
                "g_once_init_leave", 
                "g_cclosure_marshal_VOID__VOID", 
                "g_type_class_peek_parent", 
                "_Jv_RegisterClasses", 
                "g_key_file_load_from_file", 
                "g_pattern_match_string", 
                "g_signal_emit_by_name", 
                "polkit_details_new", 
                "g_free", 
                "g_hash_table_new_full", 
                "innetgr", 
                "polkit_unix_user_get_uid", 
                "g_option_context_add_main_entries", 
                "g_value_set_string", 
                "g_strerror", 
                "dcgettext", 
                "g_pattern_spec_free", 
                "g_file_get_child", 
                "g_type_instance_get_private", 
                "g_strdup", 
                "polkit_unix_user_new_for_name", 
                "strchr", 
                "g_object_class_install_property", 
                "polkit_unix_user_get_name", 
                "g_str_has_prefix", 
                "g_strcmp0", 
                "g_value_dup_string", 
                "g_object_unref", 
                "g_option_context_new", 
                "g_return_if_fail_warning", 
                "g_type_check_class_cast", 
                "g_signal_connect_data", 
                "g_list_free", 
                "g_object_get_data", 
                "g_str_hash", 
                "g_option_context_parse", 
                "getpwuid", 
                "polkit_unix_group_new", 
                "__gmon_start__", 
                "g_signal_new", 
                "g_file_enumerator_next_file", 
                "g_hash_table_insert", 
                "g_list_append", 
                "g_file_get_type", 
                "g_strdup_printf", 
                "g_hash_table_iter_next", 
                "g_object_set_data_full", 
                "g_once_init_enter", 
                "g_object_new", 
                "_ITM_deregisterTMCloneTable", 
                "polkit_unix_user_get_type", 
                "g_param_spec_string", 
                "g_file_get_uri", 
                "g_file_get_basename", 
                "g_type_check_instance_cast", 
                "polkit_implicit_authorization_from_string", 
                "__errno_location", 
                "g_intern_static_string", 
                "_ITM_registerTMCloneTable", 
                "g_file_get_path"
            ], 
            "rpm": "polkit-pkla-compat-0.1-4.el7.x86_64.rpm"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2snapshot_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2snapshot.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "exit", 
                "__gmon_start__", 
                "dm_pool_create", 
                "dm_task_get_info", 
                "dm_get_next_target", 
                "dm_split_words", 
                "__xstat64", 
                "execvp", 
                "__syslog_chk", 
                "__errno_location", 
                "dmeventd_lvm2_command", 
                "__cxa_finalize", 
                "_Jv_RegisterClasses", 
                "_ITM_registerTMCloneTable", 
                "dmeventd_lvm2_unlock", 
                "__stack_chk_fail", 
                "dm_get_status_snapshot", 
                "_ITM_deregisterTMCloneTable", 
                "fork", 
                "strerror", 
                "feof", 
                "dmeventd_lvm2_exit", 
                "dm_pool_zalloc", 
                "fgets", 
                "dmeventd_lvm2_init", 
                "dm_pool_free", 
                "waitpid", 
                "fopen64", 
                "dm_pool_destroy", 
                "dm_task_get_name", 
                "fclose", 
                "dmeventd_lvm2_run"
            ], 
            "rpm": "polkit-pkla-compat-0.1-4.el7.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Version": " 0.1", 
            "Name": " polkit-pkla-compat", 
            "License": " LGPLv2+", 
            "URL": " https://fedorahosted.org/polkit-pkla-compat/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " x86-021.build.eng.bos.redhat.com", 
            "Description": "\nA polkit JavaScript rule and associated helpers that mostly provide\ncompatibility with the .pkla file format supported in polkit <= 0.105 for users\nof later polkit releases.\n", 
            "Build Date": " Sun 26 Jan 2014 04:49:30 PM EST", 
            "Vendor": " Red Hat, Inc.", 
            "Source RPM": " polkit-pkla-compat-0.1-4.el7.src.rpm", 
            "warning": " /home/jason/fctl/swap/2/polkit-pkla-compat-0.1-4.el7.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID fd431d51: NOKEY", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Wed 02 Apr 2014 02:36:22 PM EDT, Key ID 199e2f91fd431d51", 
            "Release": " 4.el7", 
            "Group": " Unspecified", 
            "Packager": " Red Hat, Inc. <http://bugzilla.redhat.com/bugzilla>", 
            "Summary": " Rules for polkit to add compatibility with pklocalauthority", 
            "Size": " 82409"
        }
    }
}