{
    "results": {
        "usr/lib/device-mapper/libdevmapper-event-lvm2mirror_so": {
            "report-functions": [
                "dmeventd_lvm2_exit", 
                "__stack_chk_fail", 
                "strcmp", 
                "strtol", 
                "dmeventd_lvm2_init", 
                "dm_free_wrapper", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "dmeventd_lvm2_command", 
                "dm_split_words", 
                "dmeventd_lvm2_unlock", 
                "dm_malloc_wrapper", 
                "dmeventd_lvm2_lock", 
                "strchr", 
                "dm_get_next_target", 
                "__syslog_chk", 
                "__cxa_finalize", 
                "dmeventd_lvm2_run", 
                "_Jv_RegisterClasses", 
                "dmeventd_lvm2_pool", 
                "dm_task_get_name"
            ], 
            "rpm": "policycoreutils-python-2.2.5-15.el7.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2mirror.so"
        }, 
        "usr/lib64/python2_7/site-packages/policycoreutils/default_encoding_utf8_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/python2.7/site-packages/policycoreutils/default_encoding_utf8.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "Py_InitModule4_64", 
                "PyArg_ParseTupleAndKeywords", 
                "__cxa_finalize", 
                "PyUnicodeUCS4_SetDefaultEncoding", 
                "_ITM_deregisterTMCloneTable", 
                "_Jv_RegisterClasses", 
                "__gmon_start__"
            ], 
            "rpm": "policycoreutils-python-2.2.5-15.el7.x86_64.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2raid_so": {
            "report-functions": [
                "_Jv_RegisterClasses", 
                "dmeventd_lvm2_command", 
                "_ITM_deregisterTMCloneTable", 
                "strtol", 
                "__syslog_chk", 
                "__stack_chk_fail", 
                "dmeventd_lvm2_init", 
                "strchr", 
                "dm_get_next_target", 
                "strcmp", 
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable", 
                "dmeventd_lvm2_lock", 
                "dmeventd_lvm2_pool", 
                "__gmon_start__", 
                "dm_task_get_name", 
                "dmeventd_lvm2_unlock", 
                "dm_split_words"
            ], 
            "rpm": "policycoreutils-python-2.2.5-15.el7.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2raid.so"
        }, 
        "usr/bin/semodule_package": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/semodule_package", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "__fprintf_chk", 
                "sepol_module_package_get_policy", 
                "free", 
                "sepol_module_package_set_user_extra", 
                "_Jv_RegisterClasses", 
                "__fxstat", 
                "sepol_module_package_create", 
                "__gmon_start__", 
                "sepol_policy_file_set_fp", 
                "sepol_module_package_free", 
                "sepol_policydb_read", 
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable", 
                "sepol_module_package_set_netfilter_contexts", 
                "sepol_policy_file_create", 
                "__stack_chk_fail", 
                "__cxa_finalize", 
                "fopen", 
                "sepol_module_package_write", 
                "__errno_location", 
                "exit", 
                "close", 
                "fwrite", 
                "sepol_module_package_set_seusers", 
                "getopt_long", 
                "puts", 
                "__printf_chk", 
                "sepol_policy_file_free", 
                "sepol_module_package_set_file_contexts", 
                "mmap", 
                "munmap", 
                "open", 
                "__strdup"
            ], 
            "rpm": "policycoreutils-python-2.2.5-15.el7.x86_64.rpm"
        }, 
        "usr/lib64/python2_7/site-packages/sepolicy/policy_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/python2.7/site-packages/sepolicy/policy.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "apol_avrule_query_append_perm", 
                "qpol_policy_get_bool_iter", 
                "apol_cat_get_by_query", 
                "qpol_terule_get_default_type", 
                "qpol_class_get_name", 
                "PyModule_AddIntConstant", 
                "apol_cat_query_set_cat", 
                "qpol_filename_trans_get_object_class", 
                "qpol_level_get_name", 
                "qpol_policy_get_user_by_name", 
                "apol_cat_query_create", 
                "apol_context_get_range", 
                "PyTuple_New", 
                "apol_filename_trans_query_set_target", 
                "apol_avrule_query_set_target", 
                "apol_level_query_set_sens", 
                "apol_level_query_create", 
                "apol_policy_destroy", 
                "PyLong_FromLong", 
                "qpol_role_get_type_iter", 
                "apol_mls_range_create_from_qpol_mls_range", 
                "qpol_avrule_get_target_type", 
                "apol_vector_destroy", 
                "apol_policy_create_from_policy_path", 
                "qpol_type_get_isattr", 
                "apol_role_allow_query_create", 
                "qpol_type_get_name", 
                "apol_policy_get_qpol", 
                "apol_avrule_query_set_source", 
                "qpol_policy_has_capability", 
                "apol_filename_trans_query_append_class", 
                "apol_mls_range_destroy", 
                "apol_mls_level_create_from_qpol_level_datum", 
                "apol_filename_trans_get_by_query", 
                "qpol_bool_get_name", 
                "PyErr_NewException", 
                "apol_context_get_type", 
                "qpol_cond_expr_node_get_expr_type", 
                "Py_InitModule4_64", 
                "apol_filename_trans_query_set_source", 
                "apol_avrule_query_set_regex", 
                "PyDict_New", 
                "PyTuple_SetItem", 
                "apol_protocol_to_str", 
                "PyList_Append", 
                "qpol_cat_get_value", 
                "apol_avrule_query_set_bool", 
                "PyArg_ParseTuple", 
                "apol_role_allow_query_set_regex", 
                "qpol_cat_get_name", 
                "PyDict_SetItemString", 
                "qpol_avrule_get_source_type", 
                "qpol_user_get_range", 
                "qpol_avrule_get_object_class", 
                "apol_role_allow_query_destroy", 
                "apol_vector_get_element", 
                "__cxa_finalize", 
                "qpol_role_get_dominate_iter", 
                "apol_attr_query_destroy", 
                "qpol_filename_trans_get_filename", 
                "apol_context_create_from_qpol_context", 
                "strtok", 
                "apol_vector_append", 
                "qpol_role_allow_get_source_role", 
                "apol_terule_query_set_regex", 
                "qpol_avrule_get_is_enabled", 
                "apol_terule_query_destroy", 
                "qpol_role_get_name", 
                "strtol", 
                "qpol_avrule_get_rule_type", 
                "apol_filename_trans_query_set_regex", 
                "qpol_class_get_common", 
                "apol_vector_sort", 
                "qpol_filename_trans_get_default_type", 
                "apol_attr_query_create", 
                "qpol_type_get_alias_iter", 
                "qpol_type_get_ispermissive", 
                "PyErr_SetString", 
                "apol_mls_level_render", 
                "apol_avrule_query_destroy", 
                "apol_level_query_set_cat", 
                "qpol_iterator_get_item", 
                "qpol_type_get_attr_iter", 
                "qpol_policy_get_role_by_name", 
                "apol_role_allow_get_by_query", 
                "apol_avrule_query_append_class", 
                "qpol_terule_get_target_type", 
                "PyBool_FromLong", 
                "_Jv_RegisterClasses", 
                "qpol_portcon_get_low_port", 
                "qpol_user_get_role_iter", 
                "qpol_portcon_get_context", 
                "apol_role_allow_query_set_source", 
                "qpol_policy_get_user_iter", 
                "PyList_New", 
                "qpol_policy_get_type_by_name", 
                "apol_vector_get_size", 
                "apol_context_destroy", 
                "qpol_class_get_perm_iter", 
                "qpol_filename_trans_get_target_type", 
                "qpol_policy_get_type_iter", 
                "_ITM_registerTMCloneTable", 
                "apol_filename_trans_query_create", 
                "apol_avrule_query_create", 
                "qpol_cond_get_expr_node_iter", 
                "apol_mls_level_create_from_qpol_mls_level", 
                "qpol_role_allow_get_target_role", 
                "__gmon_start__", 
                "__stack_chk_fail", 
                "qpol_avrule_get_cond", 
                "qpol_policy_get_role_iter", 
                "qpol_iterator_destroy", 
                "qpol_policy_get_portcon_iter", 
                "apol_terule_query_create", 
                "apol_terule_get_by_query", 
                "qpol_terule_get_is_enabled", 
                "apol_cat_query_destroy", 
                "qpol_level_get_value", 
                "__errno_location", 
                "qpol_user_get_name", 
                "strerror", 
                "apol_vector_create", 
                "PyDict_GetItemString", 
                "apol_rule_type_to_str", 
                "qpol_user_get_dfltlevel", 
                "apol_level_query_destroy", 
                "qpol_avrule_get_perm_iter", 
                "qpol_common_get_perm_iter", 
                "apol_policy_path_destroy", 
                "qpol_policy_get_bool_by_name", 
                "apol_level_get_by_query", 
                "free", 
                "apol_terule_query_set_bool", 
                "qpol_policy_get_class_by_name", 
                "apol_avrule_get_by_query", 
                "apol_terule_query_set_source", 
                "apol_syn_terule_get_by_query", 
                "apol_terule_query_append_class", 
                "apol_mls_range_render", 
                "apol_terule_query_set_rules", 
                "qpol_bool_get_state", 
                "apol_mls_level_destroy", 
                "qpol_type_get_type_iter", 
                "qpol_terule_get_cond", 
                "apol_syn_avrule_get_by_query", 
                "apol_avrule_query_set_rules", 
                "PyString_FromString", 
                "PyInt_AsLong", 
                "qpol_terule_get_source_type", 
                "apol_handle_msg", 
                "qpol_policy_get_class_iter", 
                "__strdup", 
                "qpol_type_get_isalias", 
                "apol_role_allow_query_set_target", 
                "apol_filename_trans_query_destroy", 
                "qpol_iterator_get_size", 
                "qpol_terule_get_object_class", 
                "apol_cond_expr_type_to_str", 
                "qpol_filename_trans_get_source_type", 
                "apol_policy_path_create", 
                "qpol_portcon_get_high_port", 
                "_ITM_deregisterTMCloneTable", 
                "qpol_portcon_get_protocol", 
                "apol_attr_query_set_attr", 
                "qpol_policy_build_syn_rule_table", 
                "qpol_terule_get_rule_type", 
                "apol_terule_query_set_target", 
                "qpol_iterator_end", 
                "apol_attr_get_by_query", 
                "qpol_iterator_next"
            ], 
            "rpm": "policycoreutils-python-2.2.5-15.el7.x86_64.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2thin_so": {
            "report-functions": [
                "dmeventd_lvm2_lock", 
                "dmeventd_lvm2_init", 
                "exit", 
                "dm_bitset_create", 
                "execvp", 
                "dm_task_run", 
                "dm_pool_destroy", 
                "dmeventd_lvm2_run", 
                "waitpid", 
                "__stack_chk_fail", 
                "dm_task_get_name", 
                "_ITM_registerTMCloneTable", 
                "dm_bitset_destroy", 
                "_Jv_RegisterClasses", 
                "dm_task_set_name", 
                "dm_get_next_target", 
                "dm_pool_free", 
                "dm_task_create", 
                "dmeventd_lvm2_command", 
                "__gmon_start__", 
                "fork", 
                "dm_task_destroy", 
                "dm_task_get_deps", 
                "dm_get_status_thin_pool", 
                "dm_pool_zalloc", 
                "dmeventd_lvm2_exit", 
                "__cxa_finalize", 
                "__syslog_chk", 
                "dm_task_no_open_count", 
                "dm_pool_create", 
                "dm_mountinfo_read", 
                "dmeventd_lvm2_unlock", 
                "dm_task_get_info", 
                "__errno_location", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "policycoreutils-python-2.2.5-15.el7.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2thin.so"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2mirror_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2mirror.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "dmeventd_lvm2_init", 
                "strchr", 
                "__gmon_start__", 
                "_Jv_RegisterClasses", 
                "dm_free_wrapper", 
                "dm_task_get_name", 
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable", 
                "dmeventd_lvm2_command", 
                "__syslog_chk", 
                "dm_malloc_wrapper", 
                "__stack_chk_fail", 
                "strcmp", 
                "dmeventd_lvm2_exit", 
                "dm_get_next_target", 
                "strtol", 
                "strlen", 
                "dmeventd_lvm2_pool", 
                "dmeventd_lvm2_run", 
                "dm_split_words", 
                "dmeventd_lvm2_unlock"
            ], 
            "rpm": "policycoreutils-python-2.2.5-15.el7.x86_64.rpm"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2raid_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2raid.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "dm_get_next_target", 
                "dmeventd_lvm2_command", 
                "strtol", 
                "strcmp", 
                "strchr", 
                "dm_split_words", 
                "dm_task_get_name", 
                "__syslog_chk", 
                "dmeventd_lvm2_init", 
                "__cxa_finalize", 
                "dmeventd_lvm2_run", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "dmeventd_lvm2_lock", 
                "_ITM_registerTMCloneTable", 
                "dmeventd_lvm2_exit", 
                "dmeventd_lvm2_unlock", 
                "__stack_chk_fail"
            ], 
            "rpm": "policycoreutils-python-2.2.5-15.el7.x86_64.rpm"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2thin_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2thin.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "dmeventd_lvm2_init", 
                "dm_pool_destroy", 
                "__errno_location", 
                "dm_task_set_name", 
                "dm_task_destroy", 
                "dmeventd_lvm2_unlock", 
                "dm_task_run", 
                "__cxa_finalize", 
                "dm_pool_free", 
                "dmeventd_lvm2_lock", 
                "dmeventd_lvm2_command", 
                "dm_pool_create", 
                "dm_task_no_open_count", 
                "__syslog_chk", 
                "dm_get_next_target", 
                "_Jv_RegisterClasses", 
                "__stack_chk_fail", 
                "_ITM_registerTMCloneTable", 
                "dm_task_get_names", 
                "__gmon_start__", 
                "dmeventd_lvm2_exit", 
                "dm_bitset_destroy", 
                "fork", 
                "dm_mountinfo_read", 
                "strerror", 
                "dm_task_get_info", 
                "dmeventd_lvm2_run", 
                "dm_task_get_deps", 
                "dm_get_status_thin_pool", 
                "execvp", 
                "waitpid", 
                "exit", 
                "dm_task_create", 
                "dm_task_get_name", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "policycoreutils-python-2.2.5-15.el7.x86_64.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2snapshot_so": {
            "report-functions": [
                "dm_pool_free", 
                "_ITM_registerTMCloneTable", 
                "waitpid", 
                "dm_task_get_name", 
                "fopen64", 
                "fgets", 
                "dmeventd_lvm2_run", 
                "_Jv_RegisterClasses", 
                "__syslog_chk", 
                "dmeventd_lvm2_unlock", 
                "exit", 
                "dmeventd_lvm2_command", 
                "dm_pool_create", 
                "dmeventd_lvm2_exit", 
                "__stack_chk_fail", 
                "dmeventd_lvm2_init", 
                "dm_get_next_target", 
                "__errno_location", 
                "dmeventd_lvm2_lock", 
                "dm_pool_zalloc", 
                "dm_pool_destroy", 
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable", 
                "execvp", 
                "dm_task_get_info", 
                "dm_get_status_snapshot", 
                "__xstat64", 
                "fclose", 
                "feof", 
                "__gmon_start__", 
                "strerror"
            ], 
            "rpm": "policycoreutils-python-2.2.5-15.el7.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2snapshot.so"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2snapshot_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2snapshot.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "fopen64", 
                "dmeventd_lvm2_exit", 
                "dmeventd_lvm2_command", 
                "__stack_chk_fail", 
                "dm_pool_zalloc", 
                "dm_pool_free", 
                "execvp", 
                "dm_pool_create", 
                "feof", 
                "dm_split_words", 
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize", 
                "dm_task_get_name", 
                "__syslog_chk", 
                "fgets", 
                "dm_pool_destroy", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "dm_get_status_snapshot", 
                "dmeventd_lvm2_unlock", 
                "exit", 
                "dmeventd_lvm2_lock", 
                "strerror", 
                "__errno_location", 
                "_Jv_RegisterClasses", 
                "dmeventd_lvm2_init", 
                "dm_get_next_target", 
                "dm_task_get_info", 
                "__xstat64", 
                "fclose", 
                "waitpid"
            ], 
            "rpm": "policycoreutils-python-2.2.5-15.el7.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Version": " 2.2.5", 
            "Name": " policycoreutils-python", 
            "License": " GPLv2", 
            "URL": " http://www.selinuxproject.org", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " x86-021.build.eng.bos.redhat.com", 
            "Description": "\nThe policycoreutils-python package contains the management tools use to manage\nan SELinux environment.\n", 
            "Build Date": " Mon 10 Nov 2014 10:25:35 AM EST", 
            "Vendor": " Red Hat, Inc.", 
            "Source RPM": " policycoreutils-2.2.5-15.el7.src.rpm", 
            "warning": " /home/jason/fctl/swap/2/policycoreutils-python-2.2.5-15.el7.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID fd431d51: NOKEY", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Fri 30 Jan 2015 11:11:49 AM EST, Key ID 199e2f91fd431d51", 
            "Release": " 15.el7", 
            "Group": " System Environment/Base", 
            "Packager": " Red Hat, Inc. <http://bugzilla.redhat.com/bugzilla>", 
            "Summary": " SELinux policy core python utilities", 
            "Size": " 1211005"
        }
    }
}