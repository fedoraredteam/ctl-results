{
    "results": {
        "usr/bin/pkcheck": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/pkcheck", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "polkit_unix_process_new_full", 
                "polkit_subject_to_string", 
                "dcgettext", 
                "g_type_check_instance_cast", 
                "strftime", 
                "g_object_ref", 
                "polkit_temporary_authorization_get_action_id", 
                "__stack_chk_fail", 
                "g_set_prgname", 
                "localtime", 
                "polkit_system_bus_name_get_process_sync", 
                "g_string_new", 
                "polkit_system_bus_name_get_type", 
                "polkit_agent_listener_register", 
                "g_list_foreach", 
                "g_string_insert_c", 
                "polkit_system_bus_name_new", 
                "getpid", 
                "g_strdup", 
                "polkit_agent_text_listener_new", 
                "polkit_authorization_result_get_dismissed", 
                "polkit_details_new", 
                "g_list_free", 
                "g_type_check_instance_is_a", 
                "g_strdup_printf", 
                "polkit_temporary_authorization_get_type", 
                "g_print", 
                "polkit_unix_process_new", 
                "polkit_authority_check_authorization_sync", 
                "polkit_authority_revoke_temporary_authorizations_sync", 
                "g_error_free", 
                "polkit_authority_get_sync", 
                "g_return_if_fail_warning", 
                "g_string_append_printf", 
                "_ITM_registerTMCloneTable", 
                "polkit_authorization_result_get_details", 
                "g_printerr", 
                "g_string_free", 
                "g_object_unref", 
                "polkit_temporary_authorization_get_time_expires", 
                "polkit_temporary_authorization_get_time_obtained", 
                "polkit_unix_process_get_pid", 
                "g_get_current_time", 
                "g_log", 
                "g_type_init", 
                "__gmon_start__", 
                "__isoc99_sscanf", 
                "polkit_authorization_result_get_is_challenge", 
                "polkit_authority_enumerate_temporary_authorizations_sync", 
                "polkit_authorization_result_get_is_authorized", 
                "g_file_get_contents", 
                "_ITM_deregisterTMCloneTable", 
                "polkit_system_bus_name_get_name", 
                "polkit_temporary_authorization_get_subject", 
                "g_free", 
                "polkit_temporary_authorization_get_id", 
                "__cxa_finalize", 
                "polkit_unix_process_new_for_owner", 
                "g_get_prgname", 
                "__libc_start_main", 
                "g_strfreev", 
                "g_strchug", 
                "polkit_unix_process_get_type", 
                "polkit_agent_listener_unregister", 
                "polkit_unix_session_new_for_process_sync", 
                "polkit_details_get_keys", 
                "g_strcmp0", 
                "polkit_details_lookup", 
                "polkit_details_insert"
            ], 
            "rpm": "polkit-0.112-9.el7.x86_64.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2mirror_so": {
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "dmeventd_lvm2_exit", 
                "dmeventd_lvm2_pool", 
                "dmeventd_lvm2_command", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "strlen", 
                "__syslog_chk", 
                "_Jv_RegisterClasses", 
                "dmeventd_lvm2_init", 
                "dm_split_words", 
                "strtol", 
                "__stack_chk_fail", 
                "strcmp", 
                "dm_malloc_wrapper", 
                "dmeventd_lvm2_lock", 
                "strchr", 
                "dm_get_next_target", 
                "dmeventd_lvm2_run", 
                "dm_task_get_name", 
                "dmeventd_lvm2_unlock"
            ], 
            "rpm": "polkit-0.112-9.el7.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2mirror.so"
        }, 
        "usr/lib64/libpolkit-agent-1_so_0_0_0": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/libpolkit-agent-1.so.0.0.0", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "g_io_channel_unref", 
                "g_object_class_install_property", 
                "strlen", 
                "polkit_authority_register_authentication_agent_with_options_sync", 
                "polkit_authority_unregister_authentication_agent_sync", 
                "g_variant_is_object_path", 
                "tcgetattr", 
                "g_simple_async_result_set_error", 
                "g_param_spec_object", 
                "g_thread_join", 
                "g_object_new", 
                "g_prefix_error", 
                "g_list_length", 
                "polkit_details_new_for_gvariant", 
                "g_type_check_class_cast", 
                "g_string_free", 
                "polkit_identity_get_type", 
                "g_assertion_message_expr", 
                "g_simple_async_result_propagate_error", 
                "g_type_class_peek_parent", 
                "getpwuid", 
                "polkit_authority_get_sync", 
                "g_initable_get_type", 
                "g_main_context_new", 
                "g_simple_async_result_get_source_tag", 
                "polkit_identity_new_for_gvariant", 
                "g_cancellable_get_type", 
                "g_thread_yield", 
                "g_variant_unref", 
                "fputs", 
                "getpwuid_r", 
                "g_flags_register_static", 
                "_IO_putc", 
                "g_dbus_node_info_unref", 
                "g_value_set_object", 
                "fwrite", 
                "g_hash_table_insert", 
                "g_malloc0", 
                "g_main_context_unref", 
                "fopen", 
                "fclose", 
                "g_strdup_printf", 
                "_ITM_deregisterTMCloneTable", 
                "_Jv_RegisterClasses", 
                "polkit_details_get_type", 
                "polkit_unix_user_get_type", 
                "g_dbus_connection_register_object", 
                "g_source_attach", 
                "g_print", 
                "fileno", 
                "g_strcmp0", 
                "g_io_channel_read_line", 
                "g_intern_static_string", 
                "setbuf", 
                "write", 
                "g_list_prepend", 
                "g_main_loop_run", 
                "g_source_unref", 
                "close", 
                "g_set_error", 
                "g_main_context_pop_thread_default", 
                "g_source_destroy", 
                "g_list_foreach", 
                "g_io_create_watch", 
                "g_log", 
                "g_type_register_static_simple", 
                "g_dbus_interface_info_unref", 
                "g_str_hash", 
                "g_error_free", 
                "g_hash_table_new", 
                "__errno_location", 
                "g_value_dup_string", 
                "g_object_weak_ref", 
                "g_dbus_node_info_new_for_xml", 
                "g_signal_handler_disconnect", 
                "g_object_unref", 
                "g_cclosure_marshal_VOID__BOOLEAN", 
                "polkit_unix_user_get_uid", 
                "g_cancellable_new", 
                "g_dbus_interface_info_ref", 
                "g_string_insert_c", 
                "g_cancellable_connect", 
                "g_simple_async_result_get_type", 
                "g_dbus_node_info_lookup_interface", 
                "g_once_init_enter", 
                "g_list_free", 
                "g_getenv", 
                "g_list_nth_data", 
                "kill", 
                "polkit_subject_get_type", 
                "g_value_dup_object", 
                "__fprintf_chk", 
                "g_str_equal", 
                "g_clear_error", 
                "g_thread_create", 
                "g_value_peek_pointer", 
                "polkit_error_quark", 
                "g_type_name", 
                "g_simple_async_result_complete_in_idle", 
                "g_main_loop_unref", 
                "g_cancellable_disconnect", 
                "strtol", 
                "g_propagate_error", 
                "g_main_context_push_thread_default", 
                "g_string_new", 
                "g_value_set_string", 
                "g_printerr", 
                "__gmon_start__", 
                "g_variant_get", 
                "g_simple_async_result_new", 
                "g_main_loop_new", 
                "g_dbus_method_invocation_return_gerror", 
                "g_once_init_leave", 
                "g_source_set_callback", 
                "g_hash_table_unref", 
                "g_strdup", 
                "g_signal_connect_data", 
                "waitpid", 
                "__cxa_finalize", 
                "g_cancellable_cancel", 
                "g_type_check_instance_cast", 
                "fflush", 
                "g_type_add_interface_static", 
                "g_variant_ref_sink", 
                "g_initable_new", 
                "g_dbus_connection_unregister_object", 
                "g_dbus_method_invocation_return_error", 
                "_IO_getc", 
                "g_hash_table_remove", 
                "g_free", 
                "g_dbus_method_invocation_return_value", 
                "polkit_authority_get_owner", 
                "g_warn_message", 
                "_ITM_registerTMCloneTable", 
                "g_main_context_get_thread_default", 
                "tcsetattr", 
                "g_cclosure_marshal_VOID__STRING", 
                "memset", 
                "g_async_result_get_type", 
                "__stack_chk_fail", 
                "g_return_if_fail_warning", 
                "strcmp", 
                "g_strcompress", 
                "g_object_ref", 
                "g_io_channel_unix_new", 
                "g_main_loop_quit", 
                "g_type_check_instance_is_a", 
                "ctermid", 
                "g_signal_emit_by_name", 
                "strerror", 
                "g_list_reverse", 
                "g_hash_table_lookup", 
                "g_str_has_prefix", 
                "polkit_identity_to_string", 
                "g_bus_get_sync", 
                "g_variant_iter_next_value", 
                "g_spawn_async_with_pipes", 
                "g_variant_iter_init"
            ], 
            "rpm": "polkit-0.112-9.el7.x86_64.rpm"
        }, 
        "usr/lib/polkit-1/polkitd": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib/polkit-1/polkitd", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "g_timeout_add", 
                "g_type_register_static_simple", 
                "g_strcmp0", 
                "getgid", 
                "setregid", 
                "g_variant_new_string", 
                "g_dbus_method_invocation_return_error", 
                "XML_GetCurrentLineNumber", 
                "localtime", 
                "JS_GetArrayLength", 
                "__errno_location", 
                "polkit_system_bus_name_get_type", 
                "_ITM_deregisterTMCloneTable", 
                "__syslog_chk", 
                "g_object_ref", 
                "g_dbus_connection_signal_unsubscribe", 
                "g_str_equal", 
                "g_type_init", 
                "g_hash_table_new_full", 
                "g_cancellable_cancel", 
                "polkit_temporary_authorization_get_type", 
                "getnetgrent", 
                "g_return_if_fail_warning", 
                "polkit_subject_exists_sync", 
                "sd_session_get_seat", 
                "g_main_loop_unref", 
                "g_source_unref", 
                "polkit_unix_netgroup_get_type", 
                "g_variant_unref", 
                "JS_SetElement", 
                "g_signal_emit", 
                "g_simple_async_result_complete_in_idle", 
                "g_strchug", 
                "polkit_action_description_to_gvariant", 
                "g_signal_emit_by_name", 
                "g_file_get_type", 
                "g_string_new", 
                "g_list_append", 
                "g_setenv", 
                "JS_SetProperty", 
                "g_type_class_peek_parent", 
                "sd_session_get_uid", 
                "polkit_identity_get_type", 
                "g_string_append", 
                "g_utf16_to_utf8", 
                "g_ptr_array_new_with_free_func", 
                "polkit_identity_to_string", 
                "JS_PropertyStub", 
                "g_dbus_node_info_unref", 
                "g_clear_error", 
                "g_source_add_poll", 
                "polkit_authorization_result_new", 
                "g_simple_async_result_complete", 
                "g_io_channel_set_flags", 
                "polkit_unix_process_get_type", 
                "g_printerr", 
                "getpwnam", 
                "g_dbus_node_info_new_for_xml", 
                "g_strdup", 
                "g_file_new_for_path", 
                "g_cancellable_set_error_if_cancelled", 
                "g_dir_close", 
                "g_simple_async_result_set_from_error", 
                "JS_RemoveObjectRoot", 
                "g_get_locale_variants", 
                "g_source_new", 
                "g_ptr_array_new", 
                "g_cond_wait", 
                "g_dbus_connection_get_unique_name", 
                "polkit_unix_netgroup_get_name", 
                "g_io_create_watch", 
                "polkit_action_description_get_annotation", 
                "g_spawn_async_with_pipes", 
                "g_hash_table_iter_init", 
                "JS_DefineObject", 
                "JS_CallFunctionName", 
                "g_io_channel_unix_new", 
                "dup2", 
                "setnetgrent", 
                "__libc_start_main", 
                "g_signal_handler_disconnect", 
                "g_main_loop_quit", 
                "g_free", 
                "g_main_context_unref", 
                "g_source_set_priority", 
                "polkit_system_bus_name_get_name", 
                "g_ptr_array_unref", 
                "polkit_action_description_get_type", 
                "g_mutex_lock", 
                "g_bus_own_name", 
                "g_simple_async_result_set_error", 
                "polkit_unix_group_get_gid", 
                "g_get_monotonic_time", 
                "g_strdup_vprintf", 
                "g_slice_alloc0", 
                "g_dbus_connection_call_sync", 
                "polkit_identity_to_gvariant", 
                "g_assertion_message_expr", 
                "g_thread_join", 
                "sd_pid_get_session", 
                "JS_GetStringCharsZ", 
                "closelog", 
                "g_source_remove", 
                "innetgr", 
                "JS_AddObjectRoot", 
                "g_source_set_callback", 
                "JS_Init", 
                "g_param_spec_boxed", 
                "g_list_prepend", 
                "polkit_action_description_get_icon_name", 
                "polkit_authorization_result_get_is_challenge", 
                "strrchr", 
                "g_dbus_proxy_call_finish", 
                "g_object_new", 
                "polkit_action_description_get_implicit_any", 
                "g_hash_table_new", 
                "polkit_action_description_get_implicit_active", 
                "g_dgettext", 
                "JS_TriggerOperationCallback", 
                "JS_ReportError", 
                "g_variant_get", 
                "polkit_details_get_keys", 
                "g_list_free_full", 
                "polkit_identity_from_string", 
                "g_main_loop_new", 
                "g_file_get_basename", 
                "polkit_subject_get_type", 
                "g_hash_table_iter_next", 
                "abort", 
                "g_once_init_leave", 
                "g_cond_init", 
                "polkit_unix_session_get_session_id", 
                "g_cancellable_disconnect", 
                "JS_EnumerateStub", 
                "setgroups", 
                "initgroups", 
                "g_file_load_contents", 
                "g_simple_async_result_get_op_res_gpointer", 
                "g_main_context_ref", 
                "g_child_watch_source_new", 
                "XML_ParserCreate", 
                "JS_DestroyContext", 
                "JS_SetOptions", 
                "g_list_free", 
                "g_strfreev", 
                "XML_GetErrorCode", 
                "g_snprintf", 
                "g_string_insert_c", 
                "strftime", 
                "setlocale", 
                "__stack_chk_fail", 
                "g_string_free", 
                "JS_NewGlobalObject", 
                "g_main_context_push_thread_default", 
                "g_ptr_array_free", 
                "polkit_unix_user_new_for_name", 
                "g_dbus_node_info_lookup_interface", 
                "g_dbus_connection_unregister_object", 
                "polkit_details_new_for_gvariant", 
                "g_option_context_add_main_entries", 
                "polkit_temporary_authorization_to_gvariant", 
                "g_strsplit", 
                "g_io_error_quark", 
                "polkit_subject_to_string", 
                "g_option_context_free", 
                "g_timeout_add_seconds", 
                "g_str_hash", 
                "g_unix_signal_add", 
                "g_file_get_uri", 
                "g_getenv", 
                "kill", 
                "polkit_details_lookup", 
                "close", 
                "polkit_error_quark", 
                "g_option_context_parse", 
                "g_hash_table_lookup", 
                "strlen", 
                "g_warn_message", 
                "g_dir_read_name", 
                "g_async_result_get_type", 
                "polkit_details_to_gvariant", 
                "g_ptr_array_add", 
                "g_quark_to_string", 
                "polkit_details_insert", 
                "JS_Finish", 
                "g_main_context_new", 
                "g_simple_async_result_new_error", 
                "polkit_action_description_new", 
                "JS_SetPendingException", 
                "JS_GetContextPrivate", 
                "polkit_system_bus_name_get_process_sync", 
                "JS_ExecuteScript", 
                "g_variant_new_uint32", 
                "g_hash_table_remove", 
                "g_file_info_get_name", 
                "g_bus_get_sync", 
                "g_list_concat", 
                "g_set_error", 
                "polkit_details_new", 
                "g_variant_builder_add_value", 
                "g_dbus_method_invocation_return_dbus_error", 
                "polkit_identity_new_for_gvariant", 
                "JS_NewArrayObject", 
                "JS_InitStandardClasses", 
                "g_file_get_contents", 
                "isatty", 
                "XML_SetUserData", 
                "g_file_monitor_directory", 
                "JS_StrictPropertyStub", 
                "g_simple_async_result_take_error", 
                "g_type_check_instance_cast", 
                "g_main_context_pop_thread_default", 
                "JS_ResolveStub", 
                "g_get_current_time", 
                "g_file_get_child", 
                "polkit_subject_new_for_gvariant", 
                "_ITM_registerTMCloneTable", 
                "g_variant_type_checked_", 
                "polkit_action_description_get_implicit_inactive", 
                "getegid", 
                "JS_SetOperationCallback", 
                "polkit_authorization_result_to_gvariant", 
                "JS_EncodeString", 
                "g_list_reverse", 
                "g_type_name", 
                "g_list_sort", 
                "JS_GC", 
                "g_once_init_enter", 
                "g_io_channel_read_chars", 
                "g_hash_table_unref", 
                "g_cancellable_connect", 
                "polkit_unix_user_get_uid", 
                "g_list_remove", 
                "g_dbus_method_invocation_return_value", 
                "g_main_loop_run", 
                "g_io_channel_unref", 
                "openlog", 
                "g_hash_table_insert", 
                "getuid", 
                "g_type_class_add_private", 
                "JS_CompileUTF8File", 
                "g_prefix_error", 
                "g_timeout_source_new_seconds", 
                "XML_ErrorString", 
                "polkit_implicit_authorization_from_string", 
                "g_variant_ref_sink", 
                "JS_NewStringCopyZ", 
                "XML_SetCharacterDataHandler", 
                "JS_free", 
                "sd_login_monitor_get_fd", 
                "g_dbus_method_invocation_get_sender", 
                "g_string_append_printf", 
                "g_str_has_suffix", 
                "g_main_context_get_thread_default", 
                "JS_SetErrorReporter", 
                "polkit_unix_process_get_uid", 
                "sd_login_monitor_new", 
                "g_value_set_object", 
                "g_value_dup_object", 
                "g_dbus_connection_signal_subscribe", 
                "g_strerror", 
                "g_signal_connect_data", 
                "g_simple_async_result_new", 
                "g_log", 
                "g_dir_open", 
                "polkit_unix_session_get_type", 
                "endnetgrent", 
                "g_string_append_len", 
                "geteuid", 
                "g_variant_builder_init", 
                "g_object_class_install_property", 
                "g_dbus_connection_register_object", 
                "polkit_unix_group_get_type", 
                "sd_login_monitor_flush", 
                "polkit_subject_equal", 
                "strcmp", 
                "JS_EvaluateScript", 
                "g_cond_signal", 
                "polkit_unix_user_new", 
                "g_list_copy", 
                "g_slice_free1", 
                "g_file_enumerator_next_file", 
                "g_malloc0", 
                "g_list_foreach", 
                "g_option_context_new", 
                "setreuid", 
                "polkit_system_bus_name_new", 
                "g_type_check_class_cast", 
                "g_str_has_prefix", 
                "g_mutex_init", 
                "g_hash_table_remove_all", 
                "__gmon_start__", 
                "g_source_destroy", 
                "__cxa_finalize", 
                "XML_SetElementHandler", 
                "open", 
                "getpwuid", 
                "g_variant_lookup", 
                "g_dbus_connection_emit_signal", 
                "g_strndup", 
                "polkit_implicit_authorization_to_string", 
                "g_strchomp", 
                "g_value_dup_boxed", 
                "g_simple_async_result_get_type", 
                "free", 
                "JS_SetContextPrivate", 
                "JS_SetVersion", 
                "polkit_unix_session_new", 
                "g_cancellable_new", 
                "g_error_free", 
                "JS_BeginRequest", 
                "g_thread_new", 
                "g_dbus_method_invocation_return_gerror", 
                "g_strv_get_type", 
                "g_simple_async_result_propagate_error", 
                "JS_ConvertArguments", 
                "g_cclosure_marshal_VOID__VOID", 
                "sd_login_monitor_unref", 
                "g_signal_new", 
                "JS_DefineFunctions", 
                "g_malloc0_n", 
                "JS_GetElement", 
                "polkit_action_description_get_message", 
                "JS_MaybeGC", 
                "polkit_temporary_authorization_new", 
                "polkit_subject_hash", 
                "getgrgid", 
                "XML_Parse", 
                "g_dbus_proxy_new_for_bus_sync", 
                "getgrouplist", 
                "g_object_unref", 
                "g_intern_static_string", 
                "g_cond_clear", 
                "polkit_unix_user_get_type", 
                "g_param_spec_object", 
                "JS_ReportWarning", 
                "XML_StopParser", 
                "JS_ConvertStub", 
                "g_strdup_printf", 
                "g_string_set_size", 
                "chdir", 
                "g_type_instance_get_private", 
                "polkit_unix_process_get_pid", 
                "g_bus_unown_name", 
                "sd_session_is_active", 
                "XML_ParserFree", 
                "JS_EndRequest", 
                "g_mutex_unlock", 
                "polkit_action_description_get_action_id", 
                "g_simple_async_result_get_source_tag", 
                "g_strv_length", 
                "g_signal_handlers_disconnect_matched", 
                "polkit_identity_equal", 
                "g_source_attach", 
                "g_io_channel_read_to_end", 
                "g_file_enumerate_children", 
                "g_mutex_clear", 
                "g_print", 
                "g_variant_ref", 
                "g_variant_new", 
                "g_type_check_instance_is_a", 
                "JS_NewContext", 
                "polkit_authorization_result_get_is_authorized", 
                "g_dbus_proxy_call"
            ], 
            "rpm": "polkit-0.112-9.el7.x86_64.rpm"
        }, 
        "usr/bin/pkaction": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/pkaction", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "polkit_action_description_get_implicit_active", 
                "polkit_action_description_get_annotation", 
                "g_get_prgname", 
                "__gmon_start__", 
                "polkit_action_description_get_type", 
                "dcgettext", 
                "g_printerr", 
                "g_option_context_new", 
                "__cxa_finalize", 
                "polkit_action_description_get_vendor_name", 
                "_ITM_deregisterTMCloneTable", 
                "g_type_check_instance_cast", 
                "polkit_implicit_authorization_to_string", 
                "g_object_unref", 
                "polkit_authority_enumerate_actions_sync", 
                "g_error_free", 
                "g_list_sort", 
                "g_list_free", 
                "g_print", 
                "g_option_context_set_description", 
                "g_type_init", 
                "polkit_action_description_get_action_id", 
                "g_strdup_printf", 
                "g_option_context_parse", 
                "g_strcmp0", 
                "__libc_start_main", 
                "_Jv_RegisterClasses", 
                "polkit_action_description_get_annotation_keys", 
                "g_option_context_free", 
                "polkit_action_description_get_implicit_inactive", 
                "g_option_context_add_main_entries", 
                "polkit_action_description_get_implicit_any", 
                "polkit_action_description_get_message", 
                "g_list_foreach", 
                "polkit_action_description_get_vendor_url", 
                "polkit_action_description_get_description", 
                "__stack_chk_fail", 
                "polkit_action_description_get_icon_name", 
                "polkit_authority_get_sync"
            ], 
            "rpm": "polkit-0.112-9.el7.x86_64.rpm"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2raid_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2raid.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "dmeventd_lvm2_lock", 
                "__syslog_chk", 
                "strtol", 
                "dm_get_next_target", 
                "__cxa_finalize", 
                "dmeventd_lvm2_command", 
                "__gmon_start__", 
                "strchr", 
                "_Jv_RegisterClasses", 
                "dmeventd_lvm2_init", 
                "_ITM_deregisterTMCloneTable", 
                "dm_split_words", 
                "dmeventd_lvm2_unlock", 
                "dmeventd_lvm2_pool", 
                "dmeventd_lvm2_run", 
                "dmeventd_lvm2_exit", 
                "__stack_chk_fail", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "polkit-0.112-9.el7.x86_64.rpm"
        }, 
        "usr/lib/polkit-1/polkit-agent-helper-1": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib/polkit-1/polkit-agent-helper-1", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "memset", 
                "free", 
                "fputs", 
                "polkit_unix_user_new_for_name", 
                "pam_strerror", 
                "polkit_authority_authentication_agent_response_sync", 
                "fgets", 
                "openlog", 
                "__libc_start_main", 
                "g_free", 
                "__strdup", 
                "g_type_init", 
                "strcmp", 
                "_ITM_deregisterTMCloneTable", 
                "g_strescape", 
                "g_error_free", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "_Jv_RegisterClasses", 
                "fwrite", 
                "fputc", 
                "__cxa_finalize", 
                "fflush", 
                "clearenv", 
                "calloc", 
                "__stack_chk_fail", 
                "usleep", 
                "pam_acct_mgmt", 
                "__fprintf_chk", 
                "geteuid", 
                "getuid", 
                "pam_start", 
                "pam_get_item", 
                "pam_authenticate", 
                "pam_set_item", 
                "fileno", 
                "strlen", 
                "polkit_authority_get_sync", 
                "pam_end", 
                "setenv", 
                "fdatasync", 
                "isatty", 
                "g_strdup_printf", 
                "__syslog_chk", 
                "g_object_unref"
            ], 
            "rpm": "polkit-0.112-9.el7.x86_64.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2thin_so": {
            "report-functions": [
                "__stack_chk_fail", 
                "dm_task_get_info", 
                "dm_bitset_create", 
                "dmeventd_lvm2_lock", 
                "dm_pool_create", 
                "dm_task_run", 
                "dm_pool_destroy", 
                "dm_task_get_name", 
                "_Jv_RegisterClasses", 
                "__errno_location", 
                "dm_get_status_thin_pool", 
                "dm_task_set_name", 
                "dm_mountinfo_read", 
                "waitpid", 
                "dmeventd_lvm2_exit", 
                "dmeventd_lvm2_command", 
                "dm_task_no_open_count", 
                "__cxa_finalize", 
                "execvp", 
                "dm_pool_free", 
                "dm_task_create", 
                "dmeventd_lvm2_unlock", 
                "dm_task_get_deps", 
                "strerror", 
                "_ITM_deregisterTMCloneTable", 
                "dmeventd_lvm2_run", 
                "__syslog_chk", 
                "_ITM_registerTMCloneTable", 
                "dmeventd_lvm2_init", 
                "dm_bitset_destroy", 
                "__gmon_start__", 
                "dm_get_next_target", 
                "dm_task_destroy", 
                "exit", 
                "dm_pool_zalloc"
            ], 
            "rpm": "polkit-0.112-9.el7.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2thin.so"
        }, 
        "usr/bin/pkexec": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/pkexec", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "g_get_user_name", 
                "polkit_unix_process_get_type", 
                "pam_end", 
                "getuid", 
                "getppid", 
                "polkit_authorization_result_get_is_authorized", 
                "__libc_start_main", 
                "g_log", 
                "__cxa_finalize", 
                "g_ptr_array_foreach", 
                "polkit_unix_process_get_uid", 
                "polkit_unix_process_new_for_owner", 
                "g_strfreev", 
                "g_ptr_array_new", 
                "pam_open_session", 
                "g_strdup_vprintf", 
                "pam_getenvlist", 
                "g_strcmp0", 
                "g_object_unref", 
                "clearenv", 
                "getpwnam_r", 
                "ttyname", 
                "polkit_unix_process_get_start_time", 
                "pam_start", 
                "g_printerr", 
                "polkit_details_new", 
                "g_free", 
                "getegid", 
                "prctl", 
                "setgroups", 
                "__gmon_start__", 
                "sysconf", 
                "polkit_authorization_result_get_dismissed", 
                "strchr", 
                "polkit_agent_text_listener_new", 
                "polkit_authority_check_authorization_sync", 
                "execv", 
                "polkit_authority_get_sync", 
                "putenv", 
                "strcmp", 
                "g_get_current_dir", 
                "g_file_get_contents", 
                "_ITM_registerTMCloneTable", 
                "polkit_agent_listener_unregister", 
                "g_getenv", 
                "polkit_authorization_result_get_is_challenge", 
                "g_assertion_message_expr", 
                "__errno_location", 
                "g_type_check_instance_cast", 
                "g_get_home_dir", 
                "polkit_action_description_get_type", 
                "__stack_chk_fail", 
                "g_strdup_printf", 
                "polkit_details_insert", 
                "g_str_has_prefix", 
                "__syslog_chk", 
                "g_strjoinv", 
                "g_build_filename", 
                "setreuid", 
                "access", 
                "pam_strerror", 
                "_ITM_deregisterTMCloneTable", 
                "g_find_program_in_path", 
                "strstr", 
                "polkit_action_description_get_annotation", 
                "g_ptr_array_add", 
                "polkit_authority_enumerate_actions_sync", 
                "g_print", 
                "getgid", 
                "g_type_init", 
                "openlog", 
                "free", 
                "polkit_action_description_get_action_id", 
                "g_list_free", 
                "fcntl", 
                "chdir", 
                "polkit_unix_process_get_pid", 
                "__xstat", 
                "g_setenv", 
                "g_ptr_array_free", 
                "geteuid", 
                "strerror", 
                "g_strdup", 
                "initgroups", 
                "g_strerror", 
                "setregid", 
                "g_strsplit", 
                "_Jv_RegisterClasses", 
                "g_error_free"
            ], 
            "rpm": "polkit-0.112-9.el7.x86_64.rpm"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2mirror_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2mirror.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "__syslog_chk", 
                "strlen", 
                "dmeventd_lvm2_pool", 
                "_ITM_registerTMCloneTable", 
                "dm_split_words", 
                "dmeventd_lvm2_lock", 
                "dmeventd_lvm2_init", 
                "dm_malloc_wrapper", 
                "dmeventd_lvm2_command", 
                "__gmon_start__", 
                "_Jv_RegisterClasses", 
                "dmeventd_lvm2_exit", 
                "strtol", 
                "strchr", 
                "dm_task_get_name", 
                "dmeventd_lvm2_run", 
                "dm_get_next_target", 
                "dmeventd_lvm2_unlock", 
                "strcmp", 
                "__cxa_finalize"
            ], 
            "rpm": "polkit-0.112-9.el7.x86_64.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2raid_so": {
            "report-functions": [
                "dmeventd_lvm2_unlock", 
                "dmeventd_lvm2_run", 
                "dmeventd_lvm2_init", 
                "_ITM_registerTMCloneTable", 
                "strcmp", 
                "__stack_chk_fail", 
                "dmeventd_lvm2_exit", 
                "dmeventd_lvm2_pool", 
                "dm_split_words", 
                "dm_task_get_name", 
                "dmeventd_lvm2_command", 
                "dmeventd_lvm2_lock", 
                "dm_get_next_target", 
                "__syslog_chk", 
                "_Jv_RegisterClasses", 
                "_ITM_deregisterTMCloneTable", 
                "strtol", 
                "strchr", 
                "__cxa_finalize"
            ], 
            "rpm": "polkit-0.112-9.el7.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2raid.so"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2thin_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2thin.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "dm_mountinfo_read", 
                "__gmon_start__", 
                "dm_task_get_name", 
                "_ITM_registerTMCloneTable", 
                "__errno_location", 
                "dm_task_get_names", 
                "dm_pool_create", 
                "dmeventd_lvm2_command", 
                "dm_pool_free", 
                "_Jv_RegisterClasses", 
                "dmeventd_lvm2_unlock", 
                "exit", 
                "dm_task_get_deps", 
                "waitpid", 
                "fork", 
                "dm_bitset_create", 
                "dm_task_run", 
                "dm_get_status_thin_pool", 
                "_ITM_deregisterTMCloneTable", 
                "dmeventd_lvm2_run", 
                "dmeventd_lvm2_lock", 
                "dm_task_set_name", 
                "dm_pool_zalloc", 
                "dmeventd_lvm2_exit", 
                "dm_task_get_info", 
                "dm_task_no_open_count", 
                "dm_pool_destroy", 
                "dm_task_create", 
                "__stack_chk_fail", 
                "execvp", 
                "__cxa_finalize", 
                "dm_get_next_target", 
                "strerror", 
                "__syslog_chk", 
                "dm_bitset_destroy"
            ], 
            "rpm": "polkit-0.112-9.el7.x86_64.rpm"
        }, 
        "usr/lib64/libpolkit-gobject-1_so_0_0_0": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/libpolkit-gobject-1.so.0.0.0", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "strtoull", 
                "g_list_free", 
                "g_variant_get_child_value", 
                "g_variant_unref", 
                "g_variant_get_type_string", 
                "g_hash_table_lookup", 
                "g_variant_get_uint64", 
                "g_variant_new_uint32", 
                "g_value_get_int", 
                "sd_pid_get_session", 
                "g_intern_static_string", 
                "g_dbus_proxy_new_for_bus_sync", 
                "g_simple_async_result_set_op_res_gpointer", 
                "g_type_check_class_cast", 
                "g_variant_new", 
                "g_async_initable_new_async", 
                "g_signal_handlers_disconnect_matched", 
                "g_variant_builder_init", 
                "g_main_context_pop_thread_default", 
                "g_str_equal", 
                "g_signal_connect_data", 
                "g_signal_new", 
                "g_str_hash", 
                "_ITM_deregisterTMCloneTable", 
                "g_once_init_enter", 
                "strrchr", 
                "g_ptr_array_new", 
                "g_strconcat", 
                "g_value_set_uint64", 
                "g_dbus_proxy_call_finish", 
                "g_simple_async_result_get_op_res_gpointer", 
                "g_value_dup_object", 
                "g_list_foreach", 
                "g_strsplit", 
                "g_variant_get", 
                "g_object_new", 
                "strcmp", 
                "g_variant_iter_next", 
                "g_free", 
                "g_mutex_unlock", 
                "g_hash_table_iter_next", 
                "g_dbus_connection_call_sync", 
                "g_dbus_proxy_get_cached_property", 
                "g_type_interface_peek", 
                "g_value_get_uint64", 
                "g_variant_ref_sink", 
                "g_object_class_install_property", 
                "g_dbus_proxy_call", 
                "g_strfreev", 
                "g_set_error", 
                "g_type_class_peek_parent", 
                "g_error_copy", 
                "g_bus_get_sync", 
                "g_strerror", 
                "g_type_register_static_simple", 
                "g_value_set_flags", 
                "g_propagate_error", 
                "g_object_unref", 
                "g_value_set_int", 
                "g_file_get_contents", 
                "g_simple_async_result_get_op_res_gboolean", 
                "g_dbus_error_register_error_domain", 
                "g_simple_async_result_set_from_error", 
                "g_mutex_lock", 
                "g_type_register_static", 
                "g_hash_table_unref", 
                "g_return_if_fail_warning", 
                "g_variant_builder_add", 
                "g_log", 
                "__stack_chk_fail", 
                "g_async_initable_new_finish", 
                "g_ptr_array_free", 
                "g_dbus_is_unique_name", 
                "g_str_has_prefix", 
                "g_hash_table_ref", 
                "getpwuid", 
                "g_async_initable_get_type", 
                "g_enum_register_static", 
                "g_strv_length", 
                "g_list_length", 
                "g_hash_table_new_full", 
                "g_strdup", 
                "g_variant_builder_end", 
                "g_variant_type_checked_", 
                "g_hash_table_remove", 
                "g_snprintf", 
                "g_simple_async_result_get_source_tag", 
                "g_type_check_instance_cast", 
                "g_value_take_string", 
                "g_permission_impl_update", 
                "g_variant_dup_string", 
                "g_object_ref", 
                "g_assertion_message_expr", 
                "g_variant_is_object_path", 
                "g_async_result_get_source_object", 
                "g_signal_emit_by_name", 
                "g_variant_new_int32", 
                "g_async_result_get_type", 
                "g_hash_table_insert", 
                "g_simple_async_result_propagate_error", 
                "g_async_initable_init_finish", 
                "g_value_set_string", 
                "g_main_loop_unref", 
                "g_simple_async_result_run_in_thread", 
                "g_malloc0_n", 
                "g_value_get_string", 
                "g_hash_table_get_keys", 
                "g_value_set_object", 
                "g_param_spec_int", 
                "g_type_is_a", 
                "g_variant_type_dup_string", 
                "g_async_initable_init_async", 
                "g_variant_iter_init", 
                "g_dbus_proxy_get_name_owner", 
                "g_initable_new", 
                "g_simple_async_result_new", 
                "free", 
                "__errno_location", 
                "g_simple_async_result_get_type", 
                "g_variant_get_string", 
                "__isoc99_sscanf", 
                "g_error_free", 
                "g_variant_iter_next_value", 
                "_Jv_RegisterClasses", 
                "g_io_error_quark", 
                "__gmon_start__", 
                "g_variant_get_int32", 
                "g_simple_async_result_set_error", 
                "g_initable_get_type", 
                "g_main_loop_quit", 
                "g_main_context_unref", 
                "g_variant_get_uint32", 
                "g_cclosure_marshal_VOID__VOID", 
                "g_param_spec_uint64", 
                "g_once_init_leave", 
                "g_main_loop_new", 
                "g_variant_is_of_type", 
                "g_list_prepend", 
                "g_warn_message", 
                "g_type_interface_add_prerequisite", 
                "g_malloc0", 
                "g_simple_async_result_complete", 
                "g_value_dup_string", 
                "g_direct_hash", 
                "g_hash_table_iter_init", 
                "g_param_spec_string", 
                "g_object_notify", 
                "g_dbus_error_is_remote_error", 
                "g_param_spec_object", 
                "g_strdup_printf", 
                "g_initable_init", 
                "g_cancellable_get_type", 
                "getgrgid", 
                "g_param_spec_flags", 
                "g_type_check_instance_is_a", 
                "g_type_add_interface_static", 
                "getpid", 
                "g_permission_get_type", 
                "getpwnam", 
                "g_variant_new_string", 
                "g_prefix_error", 
                "g_main_context_new", 
                "g_strcmp0", 
                "g_list_reverse", 
                "g_variant_new_uint64", 
                "sd_session_get_uid", 
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize", 
                "g_main_loop_run", 
                "getgrnam", 
                "g_main_context_push_thread_default", 
                "g_flags_register_static", 
                "g_type_name", 
                "g_simple_async_result_complete_in_idle"
            ], 
            "rpm": "polkit-0.112-9.el7.x86_64.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2snapshot_so": {
            "report-functions": [
                "dm_get_status_snapshot", 
                "dmeventd_lvm2_exit", 
                "dm_pool_zalloc", 
                "waitpid", 
                "dm_pool_create", 
                "execvp", 
                "dm_pool_destroy", 
                "dm_task_get_info", 
                "__errno_location", 
                "dm_get_next_target", 
                "dmeventd_lvm2_lock", 
                "__gmon_start__", 
                "fclose", 
                "fork", 
                "dm_split_words", 
                "strerror", 
                "feof", 
                "__xstat64", 
                "exit", 
                "dmeventd_lvm2_run", 
                "_Jv_RegisterClasses", 
                "dmeventd_lvm2_init", 
                "__syslog_chk", 
                "_ITM_deregisterTMCloneTable", 
                "__stack_chk_fail", 
                "fopen64", 
                "__cxa_finalize", 
                "fgets", 
                "_ITM_registerTMCloneTable", 
                "dmeventd_lvm2_unlock", 
                "dmeventd_lvm2_command"
            ], 
            "rpm": "polkit-0.112-9.el7.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2snapshot.so"
        }, 
        "usr/bin/pkttyagent": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/pkttyagent", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "g_object_unref", 
                "polkit_authority_get_sync", 
                "__isoc99_sscanf", 
                "g_free", 
                "_ITM_registerTMCloneTable", 
                "polkit_unix_process_get_start_time", 
                "polkit_system_bus_name_new", 
                "dcgettext", 
                "g_printerr", 
                "g_type_check_instance_cast", 
                "g_type_init", 
                "g_variant_new_boolean", 
                "g_option_context_add_main_entries", 
                "g_variant_builder_end", 
                "close", 
                "g_variant_unref", 
                "g_quark_to_string", 
                "_ITM_deregisterTMCloneTable", 
                "polkit_agent_text_listener_new", 
                "polkit_unix_process_get_uid", 
                "polkit_agent_listener_register_with_options", 
                "g_main_loop_new", 
                "polkit_unix_process_get_type", 
                "__gmon_start__", 
                "polkit_unix_process_get_pid", 
                "g_strdup_printf", 
                "g_get_prgname", 
                "g_print", 
                "polkit_unix_process_new_for_owner", 
                "g_assertion_message_expr", 
                "getppid", 
                "polkit_agent_listener_unregister", 
                "g_option_context_free", 
                "__libc_start_main", 
                "polkit_unix_process_new", 
                "g_option_context_set_description", 
                "_Jv_RegisterClasses", 
                "g_variant_builder_init", 
                "g_error_free", 
                "polkit_unix_process_new_full", 
                "g_main_loop_run", 
                "g_option_context_new", 
                "__cxa_finalize", 
                "g_main_loop_unref", 
                "__stack_chk_fail", 
                "getuid", 
                "g_option_context_parse"
            ], 
            "rpm": "polkit-0.112-9.el7.x86_64.rpm"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2snapshot_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2snapshot.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "strerror", 
                "__xstat64", 
                "dm_get_status_snapshot", 
                "dm_pool_create", 
                "dm_pool_free", 
                "fclose", 
                "dm_get_next_target", 
                "dmeventd_lvm2_lock", 
                "dm_pool_zalloc", 
                "__cxa_finalize", 
                "dmeventd_lvm2_unlock", 
                "dm_task_get_info", 
                "waitpid", 
                "feof", 
                "fork", 
                "_ITM_deregisterTMCloneTable", 
                "dmeventd_lvm2_exit", 
                "dm_split_words", 
                "dm_pool_destroy", 
                "dmeventd_lvm2_init", 
                "__stack_chk_fail", 
                "__errno_location", 
                "__gmon_start__", 
                "exit", 
                "execvp", 
                "_Jv_RegisterClasses", 
                "dmeventd_lvm2_command", 
                "__syslog_chk", 
                "fopen64", 
                "dmeventd_lvm2_run"
            ], 
            "rpm": "polkit-0.112-9.el7.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Version": " 0.112", 
            "Name": " polkit", 
            "License": " LGPLv2+", 
            "URL": " http://www.freedesktop.org/wiki/Software/polkit", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " x86-038.build.eng.bos.redhat.com", 
            "Description": "\npolkit is a toolkit for defining and handling authorizations.  It is\nused for allowing unprivileged processes to speak to privileged\nprocesses.\n", 
            "Build Date": " Wed 06 Jul 2016 09:43:42 AM EDT", 
            "Vendor": " Red Hat, Inc.", 
            "Source RPM": " polkit-0.112-9.el7.src.rpm", 
            "warning": " /home/jason/fctl/swap/2/polkit-0.112-9.el7.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID fd431d51: NOKEY", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Wed 20 Jul 2016 05:15:13 AM EDT, Key ID 199e2f91fd431d51", 
            "Release": " 9.el7", 
            "Group": " System Environment/Libraries", 
            "Packager": " Red Hat, Inc. <http://bugzilla.redhat.com/bugzilla>", 
            "Summary": " An authorization framework", 
            "Size": " 483466"
        }
    }
}