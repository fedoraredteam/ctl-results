{
    "results": {
        "usr/lib/device-mapper/libdevmapper-event-lvm2mirror_so": {
            "report-functions": [
                "strtol", 
                "dmeventd_lvm2_lock", 
                "dmeventd_lvm2_unlock", 
                "__stack_chk_fail", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "dmeventd_lvm2_init", 
                "dm_malloc_wrapper", 
                "_Jv_RegisterClasses", 
                "dmeventd_lvm2_exit", 
                "dmeventd_lvm2_pool", 
                "strcmp", 
                "_ITM_registerTMCloneTable", 
                "dm_free_wrapper", 
                "dmeventd_lvm2_run", 
                "strlen", 
                "dm_task_get_name", 
                "__cxa_finalize", 
                "__syslog_chk", 
                "dm_get_next_target", 
                "dm_split_words"
            ], 
            "rpm": "phonon-backend-gstreamer-4.6.3-3.el7.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2mirror.so"
        }, 
        "usr/lib64/kde4/plugins/phonon_backend/phonon_gstreamer_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/kde4/plugins/phonon_backend/phonon_gstreamer.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ZThn16_NK7QWidget7devTypeEv", 
                "_ZN7QWidget13paletteChangeERK8QPalette", 
                "_ZN10QByteArray11fromRawDataEPKci", 
                "_ZN8QVariantC1EPKc", 
                "_ZN7QObjectD2Ev", 
                "_ZN8QPainterC1EP12QPaintDevice", 
                "_ZN7QWidget10setPaletteERK8QPalette", 
                "gst_install_plugins_async", 
                "gst_property_probe_get_property", 
                "_ZNK7QWidget8sizeHintEv", 
                "_ZN9QSettingsC1ERK7QStringS2_P7QObject", 
                "_ZNK9QIODevice10metaObjectEv", 
                "gst_x_overlay_expose", 
                "_ZNK7QString10startsWithERKS_N2Qt15CaseSensitivityE", 
                "_ZN9QGLFormatD1Ev", 
                "_ZNK7QObject10metaObjectEv", 
                "g_signal_connect_data", 
                "_ZN13QElapsedTimer5startEv", 
                "gst_element_factory_make", 
                "_ZN8QVariantD1Ev", 
                "__cxa_atexit", 
                "_ZNK13QElapsedTimer7elapsedEv", 
                "_ZN12QEasingCurveaSERKS_", 
                "_ZN9QGLWidget11makeCurrentEv", 
                "_ZN9QGLWidget15updateOverlayGLEv", 
                "gst_install_plugins_context_set_xid", 
                "gst_navigation_send_mouse_event", 
                "_ZN9QListData7reallocEi", 
                "g_type_check_class_cast", 
                "_ZN11QTextStreamlsEm", 
                "gst_element_release_request_pad", 
                "gst_query_parse_seeking", 
                "_ZN9QtPrivate16QStringList_sortEP11QStringList", 
                "_ZN6QImageC1EiiNS_6FormatE", 
                "_ZN8QVariantC1Ei", 
                "_ZN9QListData6appendEv", 
                "_ZN11QTextStreamlsEf", 
                "_ZN6QImageD1Ev", 
                "_ZNK8QVariant3cmpERKS_", 
                "gst_message_parse_warning", 
                "_ZN7QString10fromLatin1EPKci", 
                "gst_missing_plugin_message_get_installer_detail", 
                "_ZN9QSettingsD1Ev", 
                "_ZN7QWidget13focusOutEventEP11QFocusEvent", 
                "gst_message_parse_error", 
                "_ZN8QPaletteC1Ev", 
                "_ZN14QWaitConditionC1Ev", 
                "strdup", 
                "gst_x_overlay_get_type", 
                "g_list_free", 
                "gst_init_check", 
                "_ZN9QGLWidget16setMouseTrackingEb", 
                "_ZNK8QVariant8toStringEv", 
                "_ZNK9QSettings5valueERK7QStringRK8QVariant", 
                "_ZN7QWidget9dropEventEP10QDropEvent", 
                "gst_pb_utils_get_decoder_description", 
                "gst_registry_get_feature_list", 
                "_ZThn16_NK7QWidget11paintEngineEv", 
                "gst_element_factory_get_klass", 
                "_ZN9QIODevice5resetEv", 
                "gst_bus_sync_signal_handler", 
                "gst_tag_list_get_double", 
                "g_param_spec_get_name", 
                "gst_x_overlay_set_window_handle", 
                "g_free", 
                "_ZNK7QString8toLatin1Ev", 
                "gst_default_registry_check_feature_version", 
                "_ZN9QListData7prependEv", 
                "_ZN7QWidget10closeEventEP11QCloseEvent", 
                "gst_property_probe_get_type", 
                "_ZN9QGLWidgetD2Ev", 
                "_Z7qgetenvPKc", 
                "gst_tag_list_foreach", 
                "_ZN6QImageC1Ev", 
                "_ZN8QPainter9drawImageERK6QRectFRK6QImageS2_6QFlagsIN2Qt19ImageConversionFlagEE", 
                "g_object_class_list_properties", 
                "_ZN11QVectorData4growEiiib", 
                "_ZN11QTextStreamlsEPKv", 
                "_ZN9QGLWidget5eventEP6QEvent", 
                "gst_tag_list_free", 
                "_ZN9QtPrivate20QStringList_containsEPK11QStringListRK7QStringN2Qt15CaseSensitivityE", 
                "gst_pb_utils_get_encoder_description", 
                "_ZN6Phonon15StreamInterface8needDataEv", 
                "_ZN9QTimeLine14setEasingCurveERK12QEasingCurve", 
                "_ZN10QByteArrayaSERKS_", 
                "_ZN7QObject11qt_metacastEPKc", 
                "_ZNK7QStringeqERK13QLatin1String", 
                "_ZN6Phonon15StreamInterface10seekStreamEx", 
                "_ZN7QString6appendERKS_", 
                "_ZN6QBrushC1ERK6QColorN2Qt10BrushStyleE", 
                "_ZNK7QString8multiArgEiPPKS_", 
                "_ZNK6Phonon15EffectParameter12maximumValueEv", 
                "_ZN12QEasingCurveC1ENS_4TypeE", 
                "_ZN6QImageaSERKS_", 
                "_ZN7QCursorD1Ev", 
                "_ZNK6Phonon15EffectParameter12minimumValueEv", 
                "_ZN9QGLWidget7paintGLEv", 
                "_ZN9QMetaType15registerTypedefEPKci", 
                "_ZN11QMetaObject8addGuardEPP7QObject", 
                "_ZN9QGLWidget6glDrawEv", 
                "_ZNSsC1EPKcmRKSaIcE", 
                "gst_element_factory_get_type", 
                "g_type_check_instance_is_a", 
                "_ZN11QMetaObject8activateEP7QObjectPKS_iPPv", 
                "glTexParameterf", 
                "_ZN7QObjectC2EPS_", 
                "_ZN5QFile6existsERK7QString", 
                "_ZNK8QVariant12toStringListEv", 
                "_ZNK6Phonon11MediaSource10deviceNameEv", 
                "_ZN7QObject10timerEventEP11QTimerEvent", 
                "gst_bin_add_many", 
                "_ZNK9QIODevice14bytesAvailableEv", 
                "_ZN9QIODeviceD2Ev", 
                "_ZNK4QUrl6schemeEv", 
                "_ZN6Phonon12PulseSupport11getInstanceEv", 
                "g_object_set", 
                "gst_video_get_size", 
                "_ZN7QString16fromAscii_helperEPKci", 
                "_Z8qWarningPKcz", 
                "_ZN7QWidget11resizeEventEP12QResizeEvent", 
                "_ZN7QWidget9moveEventEP10QMoveEvent", 
                "_ZN11QTextStreamlsEc", 
                "_ZN7QWidget11qt_metacastEPKc", 
                "_ZN7QWidget10leaveEventEP6QEvent", 
                "gst_pb_utils_get_codec_description", 
                "_ZN8QPainter13setRenderHintENS_10RenderHintEb", 
                "access", 
                "_ZNK7QString11lastIndexOfE5QChariN2Qt15CaseSensitivityE", 
                "_ZNK7QWidget7paletteEv", 
                "_ZN7QStringC1EiN2Qt14InitializationE", 
                "_ZNK7QString7indexOfERKS_iN2Qt15CaseSensitivityE", 
                "_ZN6QImageC1EPhiiNS_6FormatE", 
                "_ZN6Phonon15EffectParameterC1ERKS0_", 
                "_Z9qt_assertPKcS0_i", 
                "_ZNK8QVariant8userTypeEv", 
                "gst_video_sink_get_type", 
                "_ZN7QWidget22windowActivationChangeEb", 
                "_ZNK5QFont9pointSizeEv", 
                "_ZN14QWaitConditionD1Ev", 
                "gst_pb_utils_get_sink_description", 
                "_Z16qt_check_pointerPKci", 
                "_ZN9QListData6removeEi", 
                "_ZN9QHashData12allocateNodeEi", 
                "_ZN7QObject11customEventEP6QEvent", 
                "_ZN6Phonon11MediaSourceD1Ev", 
                "_ITM_deregisterTMCloneTable", 
                "_ZNK7QString6toUtf8Ev", 
                "_ZN7QWidget8x11EventEP7_XEvent", 
                "_ZN11QTextStreamC1EP7QString6QFlagsIN9QIODevice12OpenModeFlagEE", 
                "gst_property_probe_probe_and_get_values", 
                "gst_object_get_type", 
                "_ZN7QString7reallocEi", 
                "_ZNK7QString3midEii", 
                "gst_tag_list_get_int", 
                "_ZN9QGLWidget8resizeGLEii", 
                "_ZN6QMutex7tryLockEv", 
                "_ZN11QTextStreamlsERK7QString", 
                "_ZNK7QWidget11paintEngineEv", 
                "_ZN7QObject5eventEP6QEvent", 
                "_ZNK9QFileInfo6suffixEv", 
                "_ZN7QString8truncateEi", 
                "_ZN6QMutex6unlockEv", 
                "gst_element_factory_get_static_pad_templates", 
                "_ZN8QVariantC1ERK7QString", 
                "_ZN9QTimeLine5startEv", 
                "_ZN9QGLWidget6glInitEv", 
                "_ZN7QString6numberEji", 
                "glTexImage2D", 
                "_ZN7QWidget11qt_metacallEN11QMetaObject4CallEiPPv", 
                "_Z20qt_qFindChild_helperPK7QObjectRK7QStringRK11QMetaObject", 
                "_ZNK7QString3argExiiRK5QChar", 
                "_ZN6QEventD2Ev", 
                "_ZN9QIODevice5closeEv", 
                "_ZN9QFileInfoD1Ev", 
                "_Jv_RegisterClasses", 
                "_ZNK5QTime7msecsToERKS_", 
                "_ZN9QIODevice11qt_metacastEPKc", 
                "_ZNK7QWidget6windowEv", 
                "gst_bin_get_by_interface", 
                "gst_element_class_add_pad_template", 
                "_ZNK7QString5toIntEPbi", 
                "_ZN6Phonon15EffectParameterD1Ev", 
                "_ZThn16_NK9QGLWidget11paintEngineEv", 
                "_ZN16QCoreApplication15applicationNameEv", 
                "_ZNK6Phonon11AudioOutput8categoryEv", 
                "_ZN12QApplication4fontEPKc", 
                "_ZN5QTime11currentTimeEv", 
                "_ZN21QAbstractConcatenable16convertFromAsciiEPKciRP5QChar", 
                "_ZN7QWidget21mouseDoubleClickEventEP11QMouseEvent", 
                "_ZNK8QVariant6toUIntEPb", 
                "_ZN8QPainterD1Ev", 
                "gst_navigation_get_type", 
                "gst_format_get_by_nick", 
                "_ZN7QStringaSERKS_", 
                "_ZN9QGLWidget15resizeOverlayGLEii", 
                "_ZN7QString17fromLatin1_helperEPKci", 
                "_ZN9QListData7append2ERKS_", 
                "_Znwm", 
                "g_object_get", 
                "_ZN6Phonon11MediaSourceC1ERKS0_", 
                "_ZN7QWidget5eventEP6QEvent", 
                "_ZN9QHashData11free_helperEPFvPNS_4NodeEE", 
                "gst_install_plugins_context_new", 
                "_ZN6Phonon21ObjectDescriptionDataC1EiRK5QHashI10QByteArray8QVariantE", 
                "_ZN8QVariantaSERKS_", 
                "_ZNK6Phonon11MediaSource8fileNameEv", 
                "_ZN9QIODevice4seekEx", 
                "_ZNK7QWidget15minimumSizeHintEv", 
                "_ZN7QWidget16contextMenuEventEP17QContextMenuEvent", 
                "_ZN6Phonon12PulseSupport8isActiveEv", 
                "_ZN11QTextStreamlsEPKc", 
                "_ZNK7QWidget20testAttribute_helperEN2Qt15WidgetAttributeE", 
                "gst_message_parse_tag", 
                "gst_element_factory_get_description", 
                "gst_navigation_query_parse_commands_length", 
                "_Z7qMemSetPvim", 
                "_ZN6QMutexC1ENS_13RecursionModeE", 
                "gst_element_get_type", 
                "gst_message_get_structure", 
                "_ZN9QHashData14detach_helper2EPFvPNS_4NodeEPvEPFvS1_Eii", 
                "_ZN9QTimeLine4stopEv", 
                "_ZNK6QImage6heightEv", 
                "_ZNK7QString10startsWithERK13QLatin1StringN2Qt15CaseSensitivityE", 
                "_ZN7QObject11qt_metacallEN11QMetaObject4CallEiPPv", 
                "gst_tag_list_get_float", 
                "_ZN9QHashData8nextNodeEPNS_4NodeE", 
                "gst_bin_new", 
                "glTexCoordPointer", 
                "_ZN6QTimerD1Ev", 
                "_ZNK7QString11toLocal8BitEv", 
                "gst_message_parse_duration", 
                "_ZN7QWidget9hideEventEP10QHideEvent", 
                "gst_caps_get_structure", 
                "_ZN9QGLWidget11qt_metacastEPKc", 
                "_ZN7QWidget18focusNextPrevChildEb", 
                "g_signal_handlers_disconnect_matched", 
                "g_object_new", 
                "_ZN6QMutexD1Ev", 
                "_ZN11QMetaObject11changeGuardEPP7QObjectS1_", 
                "_ZNK9QIODevice12bytesToWriteEv", 
                "_ZN7QString6insertEiPK5QChari", 
                "_ZN9QGLFormat15setSwapIntervalEi", 
                "_ZN7QObject16disconnectNotifyEPKc", 
                "gst_static_pad_template_get", 
                "_Z8qMemCopyPvPKvm", 
                "g_type_class_peek_parent", 
                "_ZN11QVectorData8allocateEii", 
                "gst_bin_add", 
                "_ZN12QEasingCurveD1Ev", 
                "_ZN6QTimer11setIntervalEi", 
                "_ZN7QString4freeEPNS_4DataE", 
                "gst_structure_to_string", 
                "_ZN9QGLWidget8updateGLEv", 
                "g_signal_emit_by_name", 
                "_ZN9QIODeviceC2Ev", 
                "_ZN6QTimerC1EP7QObject", 
                "gst_navigation_message_get_type", 
                "_ZN8QVariantC1ERK10QByteArray", 
                "_ZN7QString7replaceERKS_S1_N2Qt15CaseSensitivityE", 
                "_ZN6Phonon15EffectParameterC1EiRK7QString6QFlagsINS0_4HintEERK8QVariantS9_S9_RK5QListIS7_ES3_", 
                "_ZNK6Phonon21ObjectDescriptionData5indexEv", 
                "_ZNK7QWidget5winIdEv", 
                "gst_element_get_state", 
                "_ZN9QGLWidget12initializeGLEv", 
                "_ZN9QHashData6rehashEi", 
                "_ZN7QWidget12setAttributeEN2Qt15WidgetAttributeEb", 
                "_ZNK8QPalette5brushENS_10ColorGroupENS_9ColorRoleE", 
                "glDisableClientState", 
                "gst_structure_has_name", 
                "_ZN11QVectorData4freeEPS_i", 
                "_ZN9QGLWidgetC2ERK9QGLFormatP7QWidgetPKS_6QFlagsIN2Qt10WindowTypeEE", 
                "_ZN7QWidget9setCursorERK7QCursor", 
                "_ZNK11QMetaObject4castEP7QObject", 
                "_ZNK6Phonon21ObjectDescriptionData4nameEv", 
                "_ZN8QVariantC1EiPKvj", 
                "_ZN7QWidget11actionEventEP12QActionEvent", 
                "_ZNK7QStringeqERKS_", 
                "gst_pb_utils_init", 
                "_ZN10QByteArray5clearEv", 
                "_ZN8QPaletteD1Ev", 
                "_ZNK9QIODevice3posEv", 
                "_ZNK8QVariant10canConvertENS_4TypeE", 
                "g_value_array_get_nth", 
                "_ZN9QTimeLineC1EiP7QObject", 
                "_ZNK7QStringltERKS_", 
                "_ZNK7QWidget6metricEN12QPaintDevice17PaintDeviceMetricE", 
                "_ZN7QObject10childEventEP11QChildEvent", 
                "gst_object_get_name", 
                "gst_object_ref", 
                "_ZN8QMapData11node_deleteEPPNS_4NodeEiS1_", 
                "_ZNK7QString5rightEi", 
                "gst_deinit", 
                "_ZN5QChar9fromAsciiEc", 
                "gst_pb_utils_get_source_description", 
                "_Z5qFreePv", 
                "gst_message_parse_state_changed", 
                "gst_object_unref", 
                "_ZdlPv", 
                "_ZNK6Phonon15EffectParameter4nameEv", 
                "g_set_application_name", 
                "_ZN7QWidget16inputMethodEventEP17QInputMethodEvent", 
                "_ZN4QUrlD2Ev", 
                "glBindTexture", 
                "_ZNK6Phonon11MediaSource8discTypeEv", 
                "_ZNK9QIODevice4sizeEv", 
                "gst_element_seek", 
                "gst_element_query_position", 
                "gst_mini_object_unref", 
                "_ZN6Phonon15StreamInterface15connectToSourceERKNS_11MediaSourceE", 
                "_ZN9QGLWidget14paintOverlayGLEv", 
                "_ZN7QObject13setObjectNameERK7QString", 
                "_ZN10QByteArray6appendERKS_", 
                "gst_pipeline_get_bus", 
                "_ZN8QVariantC1ERK13QLatin1String", 
                "_ZNK7QWidget14heightForWidthEi", 
                "_ZN6QEventC2ENS_4TypeE", 
                "_ZN16QCoreApplication9postEventEP7QObjectP6QEvent", 
                "gst_caps_unref", 
                "gst_bin_get_type", 
                "glDisable", 
                "_ZNK10QByteArray6isNullEv", 
                "_ZN7QWidgetD2Ev", 
                "_ZN7QWidget21setAutoFillBackgroundEb", 
                "gst_query_new_seeking", 
                "_ZNK10QGLContext14getProcAddressERK7QString", 
                "_ZN7QWidget14setFocusPolicyEN2Qt11FocusPolicyE", 
                "free", 
                "_ZNK6Phonon3Mrl9toEncodedE6QFlagsIN4QUrl16FormattingOptionEE", 
                "gst_navigation_query_new_commands", 
                "_ZN6Phonon21ObjectDescriptionDataC1EPNS_24ObjectDescriptionPrivateE", 
                "_ZNK6Phonon15EffectParameter4typeEv", 
                "_ZN6Phonon15StreamInterface5resetEv", 
                "gst_pad_is_linked", 
                "_ZNK5QFont6familyEv", 
                "_ZN7QWidget10wheelEventEP11QWheelEvent", 
                "g_type_register_static", 
                "_ZN7QString6insertEi5QChar", 
                "_ZN6QMutex4lockEv", 
                "gst_element_link_filtered", 
                "_ZN7QWidget10setVisibleEb", 
                "_ZN9QFileInfoC1ERK7QString", 
                "_ZN9QSettings10beginGroupERK7QString", 
                "_ZNK6Phonon11MediaSource3mrlEv", 
                "_ZNK6Phonon21ObjectDescriptionData8propertyEPKc", 
                "_Z17qt_message_output9QtMsgTypePKc", 
                "gst_caps_get_size", 
                "_ZNK8QVariant8toDoubleEPb", 
                "_ZN6Phonon3MrlC1ERK7QString", 
                "_ZN9QIODevice16waitForReadyReadEi", 
                "_ZNK11QMetaObject2trEPKcS1_", 
                "_ZN6QImage8scanLineEi", 
                "_ZN9QGLWidget19initializeOverlayGLEv", 
                "gst_tag_list_get_string", 
                "_ZN10QByteArrayC1EPKc", 
                "_ZN6Phonon15StreamInterfaceD2Ev", 
                "_ZNK8QVariant9constDataEv", 
                "gst_tag_list_get_uint", 
                "gst_element_get_static_pad", 
                "_ZN8QVariantC1Ed", 
                "_ZN7QWidget6updateEv", 
                "_ZN7QString6numberEii", 
                "_ZN12QApplication12activeWindowEv", 
                "gst_buffer_new_and_alloc", 
                "_ZNK6Phonon11MediaSource4typeEv", 
                "_ZN7QWidget14dragLeaveEventEP15QDragLeaveEvent", 
                "_ZNK8QVariant4typeEv", 
                "_ZN7QString8fromUtf8EPKci", 
                "_Z5qHashRK7QString", 
                "gst_implements_interface_check", 
                "_ZN9QListData11detach_growEPii", 
                "_ZNK6QImage6isNullEv", 
                "_ZN7QObject11eventFilterEPS_P6QEvent", 
                "_ZNK9QGLWidget7contextEv", 
                "gst_pipeline_get_type", 
                "_ZN9QIODevice4openE6QFlagsINS_12OpenModeFlagEE", 
                "gst_is_missing_plugin_message", 
                "_ZN7QString7reallocEv", 
                "_ZN12QApplication5syncXEv", 
                "_ZN11QTextStreamC1EP9QIODevice", 
                "_ZNK10QByteArray7toLowerEv", 
                "_ZNK7QString4leftEi", 
                "_Z11qt_assert_xPKcS0_S0_i", 
                "gst_tag_get_type", 
                "_ZN14QWaitCondition4waitEP6QMutexm", 
                "_ZN8QPainter8fillRectERK5QRectRK6QBrush", 
                "gst_element_query", 
                "g_value_array_free", 
                "_ZNK9QIODevice11canReadLineEv", 
                "_ZN10QByteArray7reallocEi", 
                "_Z5qHashRK10QByteArray", 
                "_ZN7QWidget14languageChangeEv", 
                "_ZN7QString6resizeEi", 
                "gst_element_query_duration", 
                "_ZN5QFontD1Ev", 
                "_ZN11QTextStreamD1Ev", 
                "memcmp", 
                "_ZN11QTextStreamlsEi", 
                "_ZN6QBrushD1Ev", 
                "_ZN5QCharC1Ec", 
                "_ITM_registerTMCloneTable", 
                "gst_element_get_request_pad", 
                "gst_structure_get_name", 
                "g_error_free", 
                "_ZN7QObject7connectEPKS_PKcS1_S3_N2Qt14ConnectionTypeE", 
                "_ZN6Phonon21ObjectDescriptionDataD1Ev", 
                "gst_version_string", 
                "_ZN7QCursorC1EN2Qt11CursorShapeE", 
                "_ZN7QString6numberEdci", 
                "_ZN8QPalette8setBrushENS_10ColorGroupENS_9ColorRoleERK6QBrush", 
                "gst_app_src_push_buffer", 
                "_ZNK8QVariant11toByteArrayEv", 
                "_ZNSs4_Rep10_M_destroyERKSaIcE", 
                "_ZN7QWidget17mouseReleaseEventEP11QMouseEvent", 
                "_ZN16QCoreApplication18applicationVersionEv", 
                "_ZN9QListData6detachEi", 
                "gst_bus_set_sync_handler", 
                "glGenTextures", 
                "_ZN7QString9fromAsciiEPKci", 
                "_ZNK8QVariant5toIntEPb", 
                "gst_bin_remove", 
                "_ZN7QString4growEi", 
                "gst_pad_link", 
                "_ZN7QWidget9showEventEP10QShowEvent", 
                "_ZN7QWidget15mousePressEventEP11QMouseEvent", 
                "__printf_chk", 
                "_ZN7QWidget11changeEventEP6QEvent", 
                "_ZN7QObject11setPropertyEPKcRK8QVariant", 
                "_ZN9QIODevice11qt_metacallEN11QMetaObject4CallEiPPv", 
                "__gmon_start__", 
                "_ZNK6Phonon21ObjectDescriptionData7isValidEv", 
                "_ZN7QString7sprintfEPKcz", 
                "_ZNK7QWidget7devTypeEv", 
                "_ZNK6Phonon11MediaSource18videoCaptureDeviceEv", 
                "gst_element_state_get_name", 
                "_ZN7QString6appendERK13QLatin1String", 
                "_ZNK7QObject10objectNameEv", 
                "__cxa_pure_virtual", 
                "_ZN10QByteArray6resizeEi", 
                "gst_element_link_many", 
                "gst_element_factory_find", 
                "__dynamic_cast", 
                "_ZN7QObject13connectNotifyEPKc", 
                "memcpy", 
                "g_type_check_instance_cast", 
                "_ZNK7QString7toAsciiEv", 
                "_ZN6Phonon12PulseSupport6enableEb", 
                "_Z7qstrcmpRK10QByteArrayPKc", 
                "gst_navigation_message_parse_mouse_over", 
                "_ZN7QWidget11setGeometryERK5QRect", 
                "_gst_debug_bin_to_dot_file_with_ts", 
                "_ZN7QWidget13enabledChangeEb", 
                "_ZN6QTimer5startEv", 
                "_ZN8QMapData11node_createEPPNS_4NodeEii", 
                "_ZNK6QImage5widthEv", 
                "_ZN9QIODevice19waitForBytesWrittenEi", 
                "gst_install_plugins_context_free", 
                "_ZN8QVariantC1Ej", 
                "g_strdup_printf", 
                "gst_structure_get_int", 
                "_ZN9QTimeLine11setDurationEi", 
                "gst_navigation_query_parse_commands_nth", 
                "_ZN7QWidget12focusInEventEP11QFocusEvent", 
                "_ZN11QMetaObject12invokeMethodEP7QObjectPKcN2Qt14ConnectionTypeE22QGenericReturnArgument16QGenericArgumentS7_S7_S7_S7_S7_S7_S7_S7_S7_", 
                "gst_registry_get_default", 
                "_ZN6Phonon15StreamInterfaceC2Ev", 
                "_ZN6QTimer4stopEv", 
                "_ZNK10QByteArray3midEii", 
                "_ZN8QMapData16continueFreeDataEi", 
                "gst_element_link", 
                "gst_plugin_feature_get_type", 
                "_ZN8QVariantC1ERKS_", 
                "_ZN11QVectorData10reallocateEPS_iii", 
                "gst_caps_new_simple", 
                "_Z4endlR11QTextStream", 
                "_ZN7QWidget14updateGeometryEv", 
                "gst_element_add_pad", 
                "_ZN7QWidget13keyPressEventEP9QKeyEvent", 
                "_ZN8QMapData10createDataEi", 
                "_Z13qFlagLocationPKc", 
                "gst_static_pad_template_get_caps", 
                "_ZN7QWidget11tabletEventEP12QTabletEvent", 
                "_ZN10QByteArrayaSEPKc", 
                "gst_element_set_state", 
                "glDrawArrays", 
                "gst_implements_interface_cast", 
                "_ZN7QWidget10enterEventEP6QEvent", 
                "_ZNK7QWidget16inputMethodQueryEN2Qt16InputMethodQueryE", 
                "gst_update_registry", 
                "_ZN6Phonon15StreamInterface10enoughDataEv", 
                "glEnable", 
                "_ZNK7QString3argERKS_iRK5QChar", 
                "_ZN11QMetaObject11removeGuardEPP7QObject", 
                "_ZN9QGLFormat13defaultFormatEv", 
                "_ZN6Phonon12PulseSupport8shutdownEv", 
                "_ZN7QObject10disconnectEPKS_PKcS1_S3_", 
                "_ZN7QWidget10fontChangeERK5QFont", 
                "_ZN6Phonon11MediaSourceC1Ev", 
                "_ZN7QWidgetC2EPS_6QFlagsIN2Qt10WindowTypeEE", 
                "_ZN7QWidget15keyReleaseEventEP9QKeyEvent", 
                "_ZN6Phonon11MediaSourceaSERKS0_", 
                "glGetError", 
                "_ZN16QCoreApplication19applicationFilePathEv", 
                "_ZNK8QVariant6toBoolEv", 
                "gst_object_sink", 
                "__stack_chk_fail", 
                "_ZThn16_NK7QWidget6metricEN12QPaintDevice17PaintDeviceMetricE", 
                "_ZNK9QIODevice5atEndEv", 
                "_ZNK7QString7toUpperEv", 
                "__pthread_key_create", 
                "_ZN9QGLWidget11resizeEventEP12QResizeEvent", 
                "_Zls6QDebugRK4QUrl", 
                "g_list_first", 
                "_ZN9QMetaType12registerTypeEPKcPFvPvEPFS2_PKvE", 
                "gst_ghost_pad_new", 
                "gst_navigation_send_command", 
                "gst_pad_get_peer", 
                "_ZN8QVariantC1Eb", 
                "_ZN6QColorC1EN2Qt11GlobalColorE", 
                "glEnableClientState", 
                "_ZNK7QWidget10metaObjectEv", 
                "glVertexPointer", 
                "__cxa_finalize", 
                "gst_navigation_send_key_event", 
                "_ZN7QWidget14mouseMoveEventEP11QMouseEvent", 
                "g_object_class_find_property", 
                "gst_pb_utils_get_element_description", 
                "_ZNK6Phonon21ObjectDescriptionData11descriptionEv", 
                "_ZN9QGLWidget11qt_metacallEN11QMetaObject4CallEiPPv", 
                "gst_element_seek_simple", 
                "g_value_get_string", 
                "gst_element_factory_get_author", 
                "_ZN7QWidget11styleChangeER6QStyle", 
                "_ZN7QWidget14dragEnterEventEP15QDragEnterEvent", 
                "gst_element_link_pads", 
                "gst_tag_list_get_boolean", 
                "_ZNK9QGLWidget11paintEngineEv"
            ], 
            "rpm": "phonon-backend-gstreamer-4.6.3-3.el7.x86_64.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2raid_so": {
            "report-functions": [
                "__stack_chk_fail", 
                "dm_split_words", 
                "_Jv_RegisterClasses", 
                "strtol", 
                "dmeventd_lvm2_pool", 
                "dm_get_next_target", 
                "_ITM_deregisterTMCloneTable", 
                "dmeventd_lvm2_init", 
                "dm_task_get_name", 
                "strchr", 
                "dmeventd_lvm2_run", 
                "dmeventd_lvm2_command", 
                "strcmp", 
                "dmeventd_lvm2_unlock", 
                "dmeventd_lvm2_lock", 
                "__syslog_chk", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "phonon-backend-gstreamer-4.6.3-3.el7.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2raid.so"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2thin_so": {
            "report-functions": [
                "dmeventd_lvm2_exit", 
                "dm_task_create", 
                "__errno_location", 
                "dmeventd_lvm2_command", 
                "__stack_chk_fail", 
                "dm_task_destroy", 
                "dmeventd_lvm2_run", 
                "dm_pool_free", 
                "dmeventd_lvm2_init", 
                "__syslog_chk", 
                "dm_get_next_target", 
                "dm_pool_zalloc", 
                "dm_pool_destroy", 
                "dm_task_no_open_count", 
                "dm_task_set_name", 
                "dm_task_run", 
                "_ITM_registerTMCloneTable", 
                "dm_task_get_info", 
                "dm_task_get_name", 
                "waitpid", 
                "fork", 
                "_Jv_RegisterClasses", 
                "execvp", 
                "dm_bitset_destroy", 
                "dmeventd_lvm2_unlock", 
                "dm_get_status_thin_pool", 
                "exit", 
                "dm_mountinfo_read", 
                "dm_pool_create", 
                "__cxa_finalize", 
                "dmeventd_lvm2_lock", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "dm_bitset_create", 
                "dm_task_get_deps"
            ], 
            "rpm": "phonon-backend-gstreamer-4.6.3-3.el7.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2thin.so"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2mirror_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2mirror.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "dmeventd_lvm2_exit", 
                "dmeventd_lvm2_run", 
                "dm_task_get_name", 
                "__gmon_start__", 
                "__syslog_chk", 
                "strtol", 
                "dmeventd_lvm2_init", 
                "dm_malloc_wrapper", 
                "dmeventd_lvm2_command", 
                "strchr", 
                "__stack_chk_fail", 
                "dmeventd_lvm2_unlock", 
                "dmeventd_lvm2_lock", 
                "dm_get_next_target", 
                "strcmp", 
                "_Jv_RegisterClasses", 
                "dm_free_wrapper", 
                "strlen", 
                "dm_split_words", 
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "phonon-backend-gstreamer-4.6.3-3.el7.x86_64.rpm"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2raid_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2raid.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "dmeventd_lvm2_unlock", 
                "strtol", 
                "dmeventd_lvm2_run", 
                "strchr", 
                "__cxa_finalize", 
                "dm_task_get_name", 
                "__syslog_chk", 
                "_Jv_RegisterClasses", 
                "dmeventd_lvm2_command", 
                "dmeventd_lvm2_init", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable", 
                "dm_get_next_target", 
                "dm_split_words", 
                "dmeventd_lvm2_exit", 
                "dmeventd_lvm2_pool", 
                "__stack_chk_fail"
            ], 
            "rpm": "phonon-backend-gstreamer-4.6.3-3.el7.x86_64.rpm"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2thin_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2thin.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "dm_pool_create", 
                "dmeventd_lvm2_lock", 
                "_Jv_RegisterClasses", 
                "dmeventd_lvm2_run", 
                "__cxa_finalize", 
                "dm_pool_free", 
                "dm_task_get_name", 
                "__stack_chk_fail", 
                "dm_pool_zalloc", 
                "dm_task_get_deps", 
                "_ITM_deregisterTMCloneTable", 
                "__syslog_chk", 
                "exit", 
                "dm_get_status_thin_pool", 
                "dm_get_next_target", 
                "dm_pool_destroy", 
                "execvp", 
                "dm_bitset_create", 
                "strerror", 
                "dm_bitset_destroy", 
                "dm_task_get_info", 
                "dmeventd_lvm2_unlock", 
                "dmeventd_lvm2_init", 
                "dm_mountinfo_read", 
                "dm_task_get_names", 
                "__errno_location", 
                "dmeventd_lvm2_exit", 
                "dm_task_run", 
                "dmeventd_lvm2_command", 
                "dm_task_destroy", 
                "_ITM_registerTMCloneTable", 
                "dm_task_set_name", 
                "dm_task_no_open_count", 
                "dm_task_create"
            ], 
            "rpm": "phonon-backend-gstreamer-4.6.3-3.el7.x86_64.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2snapshot_so": {
            "report-functions": [
                "dm_pool_free", 
                "__syslog_chk", 
                "exit", 
                "dm_task_get_info", 
                "dm_task_get_name", 
                "dm_get_next_target", 
                "dmeventd_lvm2_command", 
                "dm_pool_destroy", 
                "__stack_chk_fail", 
                "dm_get_status_snapshot", 
                "_Jv_RegisterClasses", 
                "dmeventd_lvm2_exit", 
                "__errno_location", 
                "execvp", 
                "dm_split_words", 
                "__gmon_start__", 
                "dm_pool_create", 
                "dmeventd_lvm2_lock", 
                "feof", 
                "_ITM_deregisterTMCloneTable", 
                "dmeventd_lvm2_run", 
                "fork", 
                "_ITM_registerTMCloneTable", 
                "fopen64", 
                "waitpid", 
                "strerror", 
                "__cxa_finalize", 
                "fclose", 
                "dmeventd_lvm2_unlock", 
                "fgets", 
                "dm_pool_zalloc"
            ], 
            "rpm": "phonon-backend-gstreamer-4.6.3-3.el7.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2snapshot.so"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2snapshot_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2snapshot.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "dmeventd_lvm2_lock", 
                "dmeventd_lvm2_run", 
                "fork", 
                "fclose", 
                "waitpid", 
                "dm_pool_create", 
                "dm_pool_destroy", 
                "__syslog_chk", 
                "dm_split_words", 
                "__errno_location", 
                "dm_pool_free", 
                "_ITM_deregisterTMCloneTable", 
                "dm_get_next_target", 
                "dm_task_get_name", 
                "_Jv_RegisterClasses", 
                "dm_get_status_snapshot", 
                "dmeventd_lvm2_exit", 
                "fopen64", 
                "dm_pool_zalloc", 
                "strerror", 
                "dmeventd_lvm2_init", 
                "execvp", 
                "__xstat64", 
                "__gmon_start__", 
                "dmeventd_lvm2_unlock", 
                "__cxa_finalize", 
                "feof", 
                "_ITM_registerTMCloneTable", 
                "dm_task_get_info", 
                "dmeventd_lvm2_command", 
                "fgets"
            ], 
            "rpm": "phonon-backend-gstreamer-4.6.3-3.el7.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Version": " 4.6.3", 
            "Name": " phonon-backend-gstreamer", 
            "License": " LGPLv2+", 
            "URL": " http://phonon.kde.org/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " x86-020.build.eng.bos.redhat.com", 
            "Source RPM": " phonon-backend-gstreamer-4.6.3-3.el7.src.rpm", 
            "Description": "\nGstreamer phonon backend.\n", 
            "Build Date": " Sun 26 Jan 2014 04:34:26 PM EST", 
            "Vendor": " Red Hat, Inc.", 
            "Epoch": " 2", 
            "warning": " /home/jason/fctl/swap/2/phonon-backend-gstreamer-4.6.3-3.el7.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID fd431d51: NOKEY", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Wed 02 Apr 2014 02:18:57 PM EDT, Key ID 199e2f91fd431d51", 
            "Release": " 3.el7", 
            "Group": " System Environment/Libraries", 
            "Packager": " Red Hat, Inc. <http://bugzilla.redhat.com/bugzilla>", 
            "Summary": " Gstreamer phonon backend", 
            "Size": " 389244"
        }
    }
}