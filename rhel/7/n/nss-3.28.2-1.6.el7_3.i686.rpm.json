{
    "results": {
        "usr/lib/device-mapper/libdevmapper-event-lvm2mirror_so": {
            "report-functions": [
                "dm_split_words", 
                "dm_task_get_name", 
                "dmeventd_lvm2_command", 
                "dmeventd_lvm2_pool", 
                "__cxa_finalize", 
                "dmeventd_lvm2_init", 
                "dmeventd_lvm2_exit", 
                "dm_get_next_target", 
                "strlen", 
                "dmeventd_lvm2_unlock", 
                "dm_free_wrapper", 
                "strtol", 
                "__stack_chk_fail", 
                "dm_malloc_wrapper", 
                "dmeventd_lvm2_run", 
                "_ITM_registerTMCloneTable", 
                "strcmp", 
                "__syslog_chk", 
                "dmeventd_lvm2_lock", 
                "strchr", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__"
            ], 
            "rpm": "nss-3.28.2-1.6.el7_3.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2mirror.so"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2raid_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2raid.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_Jv_RegisterClasses", 
                "strchr", 
                "dmeventd_lvm2_command", 
                "_ITM_registerTMCloneTable", 
                "strcmp", 
                "dm_split_words", 
                "__gmon_start__", 
                "dm_task_get_name", 
                "dmeventd_lvm2_run", 
                "dmeventd_lvm2_init", 
                "__cxa_finalize", 
                "strtol", 
                "__stack_chk_fail", 
                "dm_get_next_target", 
                "__syslog_chk", 
                "dmeventd_lvm2_lock", 
                "dmeventd_lvm2_unlock", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "nss-3.28.2-1.6.el7_3.i686.rpm"
        }, 
        "usr/lib/libssl3_so": {
            "report-functions": [
                "PR_IntervalNow", 
                "BTOA_DataToAscii_Util", 
                "PR_smprintf", 
                "PORT_NewArena_Util", 
                "NSSRWLock_UnlockRead_Util", 
                "SECKEY_GetPrivateKeyType", 
                "PR_MemUnmap", 
                "PR_Now", 
                "PR_PopIOLayer", 
                "NSSRWLock_LockWrite_Util", 
                "CERT_FreeDistNames", 
                "fflush", 
                "SECMOD_LookupSlot", 
                "HASH_ResultLenByOidTag", 
                "CERT_FreeNicknames", 
                "PORT_FreeArena_Util", 
                "PORT_SetError_Util", 
                "PORT_ZAlloc_Util", 
                "strchr", 
                "CERT_DistNamesFromCertList", 
                "NSS_GetAlgorithmPolicy", 
                "PR_SecondsToInterval", 
                "HASH_HashBuf", 
                "PORT_GetError_Util", 
                "PK11_PubUnwrapSymKey", 
                "deflateInit_", 
                "write", 
                "PORT_Realloc_Util", 
                "PR_GetEnvSecure", 
                "PK11_SignWithSymKey", 
                "PK11_SetWrapKey", 
                "PR_NewMonitor", 
                "PK11_GetKeyData", 
                "PK11_ExtractKeyValue", 
                "PR_DestroyRWLock", 
                "PK11_TokenExists", 
                "PR_Lock", 
                "PORT_DestroyCheapArena", 
                "CERT_CertChainFromCert", 
                "PR_RWLock_Wlock", 
                "DER_Lengths_Util", 
                "SECKEY_SignatureLen", 
                "PR_GetCurrentThread", 
                "NSSRWLock_LockRead_Util", 
                "PK11_GetBestSlot", 
                "CERT_GetSSLCACerts", 
                "PK11_Encrypt", 
                "PR_RWLock_Unlock", 
                "PK11_WrapSymKey", 
                "PK11_DigestBegin", 
                "PK11_CopyTokenPrivKeyToSessionPrivKey", 
                "PK11_NeedLogin", 
                "PK11_GetBestKeyLength", 
                "PR_RWLock_Rlock", 
                "SECKEY_DestroyPublicKey", 
                "PK11_DestroyContext", 
                "PR_Close", 
                "CERT_FindCertByName", 
                "__gmon_start__", 
                "PK11_SaveContextAlloc", 
                "PK11_VerifyWithMechanism", 
                "PK11_HashBuf", 
                "PK11_ImportSymKey", 
                "PORT_Free_Util", 
                "PR_ConvertIPv4AddrToIPv6", 
                "CERT_ExtractPublicKey", 
                "memset", 
                "CERT_VerifyCertName", 
                "PK11_Finalize", 
                "close", 
                "NSSRWLock_UnlockWrite_Util", 
                "PK11_GetBestSlotMultiple", 
                "memchr", 
                "ATOB_AsciiToData_Util", 
                "fcntl", 
                "PR_GetSocketOption", 
                "SECITEM_AllocItem_Util", 
                "memmove", 
                "CERT_NewCertList", 
                "PK11_PQG_VerifyParams", 
                "PR_Unlock", 
                "SGN_Digest", 
                "SECITEM_FreeArray", 
                "SECKEY_DestroyPrivateKey", 
                "PR_DestroyLock", 
                "__errno_location", 
                "PK11_GetWrapKey", 
                "PR_CloseFileMap", 
                "PK11_PubDerive", 
                "PK11_SignatureLen", 
                "PORT_ZFree_Util", 
                "SECITEM_AllocArray", 
                "PR_Interrupt", 
                "PK11_PubWrapSymKey", 
                "PK11_Derive", 
                "getpid", 
                "PK11_FindKeyByAnyCert", 
                "fopen", 
                "PK11_GetMechanism", 
                "SECKEY_CreateDHPrivateKey", 
                "NSSRWLock_Destroy_Util", 
                "PR_ntohl", 
                "PR_htonll", 
                "PK11_DigestOp", 
                "PK11_MapSignKeyType", 
                "PK11_FreeSymKey", 
                "inflateInit_", 
                "NSS_SecureMemcmp", 
                "PR_GetDefaultIOMethods", 
                "SECKEY_PublicKeyStrength", 
                "inflate", 
                "PK11_CipherOp", 
                "PK11_GenerateRandom", 
                "fwrite", 
                "DSAU_DecodeDerSigToLen", 
                "PR_ntohll", 
                "PR_CreateIOLayerStub", 
                "VFY_VerifyDigestDirect", 
                "PK11_KeyGen", 
                "CERT_DestroyCertificateList", 
                "CERT_DestroyCertList", 
                "PR_OpenAnonFileMap", 
                "PK11_DigestFinal", 
                "NSS_RegisterShutdown", 
                "ftell", 
                "__memcpy_chk", 
                "SECKEY_CacheStaticFlags", 
                "PR_SetError", 
                "SECITEM_ZfreeItem_Util", 
                "PK11_DoesMechanism", 
                "PR_JoinThread", 
                "PR_CallOnceWithArg", 
                "PR_ErrorInstallTable", 
                "SECKEY_BigIntegerBitLength", 
                "PK11_DigestKey", 
                "SECKEY_GetPublicKeyType", 
                "time", 
                "PK11_SignWithMechanism", 
                "NSS_PutEnv_Util", 
                "PK11_CloneContext", 
                "PR_CallOnce", 
                "_Jv_RegisterClasses", 
                "PK11_GetSlotSeries", 
                "PR_CreateThread", 
                "PK11_ReferenceSymKey", 
                "SECITEM_ItemsAreEqual_Util", 
                "CERT_NameToAscii", 
                "PORT_ArenaZAlloc_Util", 
                "PR_GetUniqueIdentity", 
                "__cxa_finalize", 
                "NSS_OptionGet", 
                "__stack_chk_fail", 
                "PR_ExportFileMapAsString", 
                "strcmp", 
                "PK11_GetSlotFromKey", 
                "PORT_ArenaAlloc_Util", 
                "PK11_SymKeyFromHandle", 
                "SECITEM_FreeItem_Util", 
                "PK11_CreateDigestContext", 
                "PK11_ReferenceSlot", 
                "strtol", 
                "PR_StringToNetAddr", 
                "PL_strdup", 
                "_ITM_deregisterTMCloneTable", 
                "PK11_UnwrapSymKeyWithFlags", 
                "PR_ExitMonitor", 
                "CERT_GetDefaultCertDB", 
                "PR_PushIOLayer", 
                "PR_GetIdentitiesLayer", 
                "PR_EnterMonitor", 
                "CERT_AddCertToListTail", 
                "PR_MillisecondsToInterval", 
                "CERT_NewTempCertificate", 
                "memcpy", 
                "DSAU_EncodeDerSigWithLen", 
                "PR_NewRWLock", 
                "PORT_Alloc_Util", 
                "PK11_CreateContextBySymKey", 
                "SECOID_FindOIDByTag_Util", 
                "SECITEM_CompareItem_Util", 
                "read", 
                "SECKEY_CreateECPrivateKey", 
                "CERT_DupCertificate", 
                "NSS_VersionCheck", 
                "_ITM_registerTMCloneTable", 
                "SECKEY_UpdateCertPQG", 
                "CERT_DestroyCertificate", 
                "strlen", 
                "PK11_GetSlotFromPrivateKey", 
                "PK11_GetBestWrapMechanism", 
                "SECKEY_PublicKeyStrengthInBits", 
                "PR_EmulateAcceptRead", 
                "strstr", 
                "PR_GetError", 
                "PK11_GetModuleID", 
                "PR_snprintf", 
                "CERT_GetCertNicknames", 
                "CERT_DupCertList", 
                "PK11_PubDeriveWithKDF", 
                "SECOID_FindOID_Util", 
                "kill", 
                "PR_ImportFileMapFromString", 
                "NSSRWLock_New_Util", 
                "PK11_VerifyKeyOK", 
                "PR_Sleep", 
                "__memset_chk", 
                "PK11_IsLoggedIn", 
                "CERT_VerifyCert", 
                "PR_EmulateSendFile", 
                "CERT_FindUserCertByUsage", 
                "PK11_PQG_DestroyParams", 
                "PK11_GetCurrentWrapIndex", 
                "PR_DestroyMonitor", 
                "SECOID_GetAlgorithmTag_Util", 
                "PK11_UnwrapSymKey", 
                "PK11_PQG_ParamGenV2", 
                "CERT_DupDistNames", 
                "PK11_FreeSlot", 
                "PK11_IsPresent", 
                "PK11_ParamFromIV", 
                "PORT_Strdup_Util", 
                "SECOID_FindOIDByMechanism", 
                "PK11_IVFromParam", 
                "CERT_CacheOCSPResponseFromSideChannel", 
                "SECKEY_CopyPrivateKey", 
                "SECITEM_DupArray", 
                "deflate", 
                "PR_NewLock", 
                "PK11_GetSlotID", 
                "PK11_PQG_DestroyVerify", 
                "PK11_GetInternalSlot", 
                "SECITEM_DupItem_Util", 
                "PK11_Decrypt", 
                "PK11_RestoreContext", 
                "SECITEM_Hash", 
                "PORT_InitCheapArena", 
                "PR_smprintf_free", 
                "deflateEnd", 
                "memcmp", 
                "PR_MemMap", 
                "pipe", 
                "SECITEM_CopyItem_Util", 
                "inflateEnd"
            ], 
            "rpm": "nss-3.28.2-1.6.el7_3.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/libssl3.so"
        }, 
        "usr/lib/libnss3_so": {
            "report-functions": [
                "SEC_ASN1EncoderClearNotifyProc_Util", 
                "PORT_ZAlloc_Util", 
                "strcmp", 
                "SECITEM_FreeItem_Util", 
                "DER_TimeChoiceDayToAscii_Util", 
                "NSSUTIL_ArgIsBlank", 
                "SECOID_KnownCertExtenOID", 
                "PR_ErrorToString", 
                "PORT_NewArena_Util", 
                "PR_IntervalToSeconds", 
                "PL_HashTableRemove", 
                "NSSRWLock_UnlockWrite_Util", 
                "PR_NewThreadPrivateIndex", 
                "SEC_ASN1DecoderSetNotifyProc_Util", 
                "PR_smprintf", 
                "PL_strlen", 
                "ATOB_AsciiToData_Util", 
                "PR_Listen", 
                "fputc", 
                "PR_UnloadLibrary", 
                "SEC_ASN1EncoderSetStreaming_Util", 
                "PL_HashString", 
                "PR_Accept", 
                "__ctype_tolower_loc", 
                "SECITEM_HashCompare", 
                "PR_ConvertIPv4AddrToIPv6", 
                "PORT_InitCheapArena", 
                "PL_HashTableEnumerateEntries", 
                "NSSBase64Encoder_Create_Util", 
                "strchr", 
                "_SGN_VerifyPKCS1DigestInfo", 
                "PR_Lock", 
                "PL_strstr", 
                "_Jv_RegisterClasses", 
                "PL_ArenaAllocate", 
                "memcpy", 
                "NSSBase64Encoder_Destroy_Util", 
                "BTOA_ConvertItemToAscii_Util", 
                "NSSUTIL_MkNSSString", 
                "NSSBase64_DecodeBuffer_Util", 
                "DER_SetUInteger", 
                "DER_UTCTimeToAscii_Util", 
                "PR_CallOnceWithArg", 
                "strrchr", 
                "PL_Base64Encode", 
                "PORT_SetUCS2_ASCIIConversionFunction_Util", 
                "PR_LogPrint", 
                "NSSUTIL_ArgParseModuleSpecEx", 
                "SECITEM_CopyItem_Util", 
                "strstr", 
                "SECOID_Init", 
                "PORT_RegExpValid", 
                "PORT_ArenaMark_Util", 
                "memmove", 
                "NSSUTIL_ArgGetParamValue", 
                "DER_UTCDayToAscii_Util", 
                "DER_DecodeTimeChoice_Util", 
                "NSSUTIL_ArgParseCipherFlags", 
                "SECOID_Shutdown", 
                "PORT_ArenaUnmark_Util", 
                "PR_FindSymbol", 
                "SECITEM_CompareItem_Util", 
                "NSSRWLock_Destroy_Util", 
                "NSSUTIL_ArgHasFlag", 
                "SECOID_DestroyAlgorithmID_Util", 
                "__stack_chk_fail", 
                "SECOID_FindOIDTag_Util", 
                "DER_LengthLength", 
                "PORT_UCS2_UTF8Conversion_Util", 
                "DER_TimeToUTCTime_Util", 
                "PR_Malloc", 
                "PL_HashTableAdd", 
                "PL_NewHashTable", 
                "SGN_CopyDigestInfo_Util", 
                "NSSBase64Decoder_Destroy_Util", 
                "NSSUTIL_ArgFetchValue", 
                "NSS_GetAlgorithmPolicy", 
                "PORT_SetUCS2_UTF8ConversionFunction_Util", 
                "DER_Encode_Util", 
                "SEC_ASN1Decode_Util", 
                "PORT_ZFree_Util", 
                "CERT_GenTime2FormattedAscii_Util", 
                "DER_GeneralizedTimeToTime_Util", 
                "PR_NewMonitor", 
                "SEC_ASN1DecoderAbort_Util", 
                "SEC_QuickDERDecodeItem_Util", 
                "SECOID_CompareAlgorithmID_Util", 
                "SEC_ASN1EncoderFinish_Util", 
                "DER_TimeToGeneralizedTimeArena_Util", 
                "NSSUTIL_DoubleEscapeSize", 
                "PR_ConnectContinue", 
                "fopen", 
                "PR_GetHostByName", 
                "PORT_Alloc_Util", 
                "SEC_ASN1DecoderFinish_Util", 
                "PORT_SetUCS4_UTF8ConversionFunction_Util", 
                "SECITEM_AllocItem_Util", 
                "__memcpy_chk", 
                "PR_GetThreadPrivate", 
                "PR_NetAddrToString", 
                "NSSBase64Decoder_Update_Util", 
                "PR_SetThreadPrivate", 
                "PORT_Realloc_Util", 
                "PL_strncpyz", 
                "SEC_ASN1EncoderSetNotifyProc_Util", 
                "NSSUTIL_DoubleEscape", 
                "SEC_ASN1DecoderUpdate_Util", 
                "PR_snprintf", 
                "PORT_ArenaGrow_Util", 
                "PR_htonl", 
                "SEC_ASN1EncodeInteger_Util", 
                "PR_Close", 
                "ATOB_ConvertAsciiToItem_Util", 
                "PL_HashTableDestroy", 
                "SGN_CreateDigestInfo_Util", 
                "SEC_ASN1EncoderClearStreaming_Util", 
                "SECOID_CopyAlgorithmID_Util", 
                "SEC_ASN1EncoderSetTakeFromBuf_Util", 
                "SEC_ASN1DecodeInteger_Util", 
                "DER_TimeToGeneralizedTime_Util", 
                "PL_strcat", 
                "NSSUTIL_ArgDecodeNumber", 
                "PORT_LoadLibraryFromOrigin", 
                "SEC_ASN1EncoderAbort_Util", 
                "PR_NewLock", 
                "PR_SecondsToInterval", 
                "NSSUTIL_MkModuleSpec", 
                "PORT_SetError_Util", 
                "PR_NewTCPSocket", 
                "PORT_UCS4_UTF8Conversion", 
                "SEC_ASN1DecoderClearNotifyProc_Util", 
                "PR_Recv", 
                "PL_ArenaRelease", 
                "PR_EnterMonitor", 
                "memset", 
                "PL_strnstr", 
                "PL_strncasecmp", 
                "PR_NotifyCondVar", 
                "SECOID_FindOID_Util", 
                "PORT_DestroyCheapArena", 
                "strtol", 
                "PR_Write", 
                "SEC_ASN1LengthLength_Util", 
                "strlen", 
                "memcmp", 
                "PORT_GetError_Util", 
                "__fprintf_chk", 
                "PR_Poll", 
                "__ctype_b_loc", 
                "PR_ExitMonitor", 
                "puts", 
                "PORT_Free_Util", 
                "SEC_ASN1EncodeItem_Util", 
                "PR_StringToNetAddr", 
                "PORT_UCS2_ASCIIConversion_Util", 
                "PR_Sleep", 
                "NSSUTIL_ArgStrip", 
                "__cxa_finalize", 
                "PR_Shutdown", 
                "PR_Now", 
                "SEC_ASN1DecoderSetFilterProc_Util", 
                "strncmp", 
                "PR_DestroyMonitor", 
                "PORT_ArenaZAlloc_Util", 
                "SEC_ASN1DecoderClearFilterProc_Util", 
                "SGN_CompareDigestInfo_Util", 
                "PORT_FreeArena_Util", 
                "PL_InitArenaPool", 
                "NSS_InitializePRErrorTable", 
                "SEC_ASN1EncoderClearTakeFromBuf_Util", 
                "PORT_RegExpCaseSearch", 
                "NSSUTIL_Escape", 
                "PR_IntervalToMilliseconds", 
                "SGN_DecodeDigestInfo", 
                "SECOID_FindOIDByTag_Util", 
                "PR_htons", 
                "SECITEM_ArenaDupItem_Util", 
                "PL_strfree", 
                "PL_strcatn", 
                "PL_strcasecmp", 
                "PR_CallOnce", 
                "PORT_ArenaAlloc_Util", 
                "DER_GetInteger_Util", 
                "PR_Calloc", 
                "PR_sprintf_append", 
                "PR_Send", 
                "SECOID_FindOIDByMechanism", 
                "NSSRWLock_HaveWriteLock_Util", 
                "NSSRWLock_UnlockRead_Util", 
                "fflush", 
                "PR_GetError", 
                "NSSRWLock_LockWrite_Util", 
                "PORT_ArenaRelease_Util", 
                "NSSUTIL_ArgGetLabel", 
                "SECOID_FindOIDTagDescription_Util", 
                "SEC_ASN1DecodeItem_Util", 
                "strncpy", 
                "PL_FinishArenaPool", 
                "PR_TicksPerSecond", 
                "SEC_ASN1EncoderUpdate_Util", 
                "PR_NewCondVar", 
                "PL_HashTableLookup", 
                "PR_Free", 
                "BTOA_DataToAscii_Util", 
                "SGN_DestroyDigestInfo_Util", 
                "SEC_ASN1EncodeUnsignedInteger_Util", 
                "NSS_SetAlgorithmPolicy", 
                "qsort", 
                "PR_WaitCondVar", 
                "PL_CompareValues", 
                "SEC_StringToOID", 
                "NSSUTIL_ArgSkipParameter", 
                "PR_LoadLibrary", 
                "SEC_ASN1EncoderStart_Util", 
                "PR_Realloc", 
                "NSSRWLock_New_Util", 
                "SECITEM_ZfreeItem_Util", 
                "putchar", 
                "PL_CompareStrings", 
                "DER_GetUInteger", 
                "SEC_ASN1DecoderStart_Util", 
                "PR_IntervalNow", 
                "PR_Bind", 
                "SECOID_GetAlgorithmTag_Util", 
                "strcpy", 
                "NSSUTIL_ArgReadLong", 
                "DER_EncodeTimeChoice_Util", 
                "NSSUTIL_EscapeSize", 
                "SECITEM_ItemsAreEqual_Util", 
                "PR_FindFunctionSymbol", 
                "NSSBase64Encoder_Update_Util", 
                "PR_SetErrorText", 
                "PR_smprintf_free", 
                "SECITEM_Hash", 
                "PORT_ArenaStrdup_Util", 
                "NSSUTIL_ArgParseSlotInfo", 
                "SECOID_SetAlgorithmID_Util", 
                "PORT_ISO88591_UTF8Conversion", 
                "free", 
                "NSSBase64_EncodeItem_Util", 
                "SECOID_AddEntry_Util", 
                "PR_IntervalToMicroseconds", 
                "PR_GetEnvSecure", 
                "PR_EnumerateHostEnt", 
                "__printf_chk", 
                "PR_Connect", 
                "PORT_Strdup_Util", 
                "DER_AsciiToTime_Util", 
                "_ITM_registerTMCloneTable", 
                "PL_strdup", 
                "NSSBase64Decoder_Create_Util", 
                "__gmon_start__", 
                "SECITEM_DupItem_Util", 
                "PR_Unlock", 
                "fclose", 
                "PR_InitializeNetAddr", 
                "DER_UTCTimeToTime_Util", 
                "DER_Lengths_Util", 
                "SEC_ASN1Encode_Util", 
                "PR_NewLogModule", 
                "DER_StoreHeader", 
                "NSSRWLock_LockRead_Util", 
                "PR_NotifyAllCondVar", 
                "DER_GeneralizedDayToAscii_Util", 
                "_ITM_deregisterTMCloneTable", 
                "PR_DestroyLock", 
                "NSS_PutEnv_Util", 
                "NSSUTIL_MkSlotString"
            ], 
            "rpm": "nss-3.28.2-1.6.el7_3.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/libnss3.so"
        }, 
        "usr/lib/libsmime3_so": {
            "report-functions": [
                "SEC_PKCS5GetKeyLength", 
                "SECOID_FindOIDByTag_Util", 
                "CERT_NewCertList", 
                "SEC_ASN1Encode_Util", 
                "SEC_ASN1EncoderClearNotifyProc_Util", 
                "SECOID_DestroyAlgorithmID_Util", 
                "PORT_UCS2_UTF8Conversion_Util", 
                "SECKEY_DestroyPrivateKey", 
                "PK11_SetSymKeyUserData", 
                "PK11_ExportPrivateKeyInfo", 
                "PK11_DigestFinal", 
                "SEC_ASN1DecoderSetNotifyProc_Util", 
                "PK11_TraverseCertsForSubjectInSlot", 
                "PORT_ArenaMark_Util", 
                "PK11_ImportDERCert", 
                "CERT_DestroyCertList", 
                "PR_DestroyLock", 
                "PK11_ParamToAlgid", 
                "PK11_GetKeyStrength", 
                "__CERT_DecodeDERCertificate", 
                "PK11_GenerateNewParam", 
                "PK11_FindCertAndKeyByRecipientListNew", 
                "CERT_ExtractPublicKey", 
                "PL_strncasecmp", 
                "SECKEY_PublicKeyStrength", 
                "strcmp", 
                "CERT_IsRootDERCert", 
                "PORT_Free_Util", 
                "PK11_ImportPrivateKeyInfo", 
                "CERT_GetDefaultCertDB", 
                "PORT_UCS2_ASCIIConversion_Util", 
                "SEC_ASN1EncoderAbort_Util", 
                "SEC_ASN1EncoderSetStreaming_Util", 
                "PL_HashTableAdd", 
                "PK11_FindCertAndKeyByRecipientList", 
                "CERT_FindCertBySubjectKeyID", 
                "SEC_ASN1EncoderSetNotifyProc_Util", 
                "SEC_ASN1DecoderClearNotifyProc_Util", 
                "ATOB_AsciiToData_Util", 
                "PORT_ArenaUnmark_Util", 
                "SEC_ASN1EncodeItem_Util", 
                "CERT_FindCertByDERCert", 
                "CERT_SaveSMimeProfile", 
                "CERT_CertChainFromCert", 
                "memcpy", 
                "PL_NewHashTable", 
                "PK11_FindPrivateKeyFromCert", 
                "PORT_ArenaRelease_Util", 
                "PK11_GenerateRandom", 
                "PORT_Realloc_Util", 
                "VFY_VerifyDigestDirect", 
                "PK11_CreateContextBySymKey", 
                "PK11_PubWrapSymKey", 
                "PL_HashTableDestroy", 
                "SEC_ASN1DecoderClearFilterProc_Util", 
                "SECKEY_CreateSubjectPublicKeyInfo", 
                "SECKEY_CopyPrivateKeyInfo", 
                "SEC_ASN1DecoderFinish_Util", 
                "PK11_GetSymKeyUserData", 
                "NSS_VersionCheck", 
                "PORT_NewArena_Util", 
                "HASH_GetHashTypeByOidTag", 
                "PR_Unlock", 
                "SECKEY_PublicKeyStrengthInBits", 
                "SGN_Digest", 
                "CERT_DupCertificate", 
                "SEC_ASN1DecoderUpdate_Util", 
                "SECKEY_DestroyPublicKey", 
                "memcmp", 
                "SEC_QuickDERDecodeItem_Util", 
                "CERT_FilterCertListByUsage", 
                "PK11_GetInternalKeySlot", 
                "PORT_ZFree_Util", 
                "PK11_ExportEncryptedPrivateKeyInfo", 
                "SECITEM_CopyItem_Util", 
                "SEC_PKCS5IsAlgorithmPBEAlgTag", 
                "_Jv_RegisterClasses", 
                "__stack_chk_fail", 
                "CERT_CertListFromCert", 
                "SECOID_GetAlgorithmTag_Util", 
                "CERT_VerifyCert", 
                "PK11_GetSlotFromKey", 
                "PK11_GetBestSlot", 
                "PK11_HashBuf", 
                "PL_HashTableLookupConst", 
                "PORT_ArenaGrow_Util", 
                "HASH_ResultLen", 
                "PK11_GetBlockSize", 
                "SECITEM_CompareItem_Util", 
                "CERT_FindSMimeProfile", 
                "SECKEY_DestroyPrivateKeyInfo", 
                "PK11_CipherOp", 
                "PORT_GetError_Util", 
                "CERT_FindSubjectKeyIDExtension", 
                "PORT_Alloc_Util", 
                "PORT_SetError_Util", 
                "PK11_ReferenceSlot", 
                "PK11_IsHW", 
                "SGN_DestroyDigestInfo_Util", 
                "PK11_ImportPublicKey", 
                "PR_CallOnce", 
                "PK11_PubUnwrapSymKey", 
                "SEC_ASN1EncoderSetTakeFromBuf_Util", 
                "PK11_DestroyContext", 
                "SEC_PKCS5GetCryptoAlgorithm", 
                "PK11_CreatePBEAlgorithmID", 
                "SEC_ASN1EncoderClearStreaming_Util", 
                "SGN_CreateDigestInfo_Util", 
                "ATOB_ConvertAsciiToItem_Util", 
                "PK11_KeyGen", 
                "DER_GetInteger_Util", 
                "PK11_FindKeyByAnyCert", 
                "SEC_ASN1EncoderClearTakeFromBuf_Util", 
                "SECKEY_CopyEncryptedPrivateKeyInfo", 
                "PK11_SetPasswordFunc", 
                "PK11_PBEKeyGen", 
                "PK11_GetInternalSlot", 
                "PK11_FreeSymKey", 
                "SECITEM_ItemsAreEqual_Util", 
                "DER_DecodeTimeChoice_Util", 
                "PR_NewLock", 
                "SECKEY_DestroyEncryptedPrivateKeyInfo", 
                "PORT_ArenaStrdup_Util", 
                "SECOID_FindOIDTag_Util", 
                "HASH_GetHashObjectByOidTag", 
                "SECKEY_CopyPrivateKey", 
                "PK11_DigestBegin", 
                "SECOID_FindOID_Util", 
                "memmove", 
                "PK11_AlgtagToMechanism", 
                "SECOID_SetAlgorithmID_Util", 
                "PK11_ParamFromAlgid", 
                "SEC_ASN1DecoderAbort_Util", 
                "strlen", 
                "SECKEY_GetPublicKeyType", 
                "CERT_GetCommonName", 
                "CERT_IsCADERCert", 
                "SECKEY_DestroySubjectPublicKeyInfo", 
                "CERT_DestroyCertificate", 
                "CERT_AddCertToListTail", 
                "SECITEM_AllocItem_Util", 
                "SEC_GetSignatureAlgorithmOidTag", 
                "CERT_ImportCerts", 
                "SECKEY_CopyPublicKey", 
                "SECOID_CompareAlgorithmID_Util", 
                "PK11_DigestOp", 
                "DER_EncodeTimeChoice_Util", 
                "__gmon_start__", 
                "SEC_PKCS5IsAlgorithmPBEAlg", 
                "memset", 
                "CERT_DestroyCertArray", 
                "SECITEM_ZfreeItem_Util", 
                "PK11_ReferenceSymKey", 
                "SEC_ASN1DecoderSetFilterProc_Util", 
                "PR_Now", 
                "strchr", 
                "PK11_FindKeyByDERCert", 
                "PK11_ImportCertForKeyToSlot", 
                "SEC_ASN1DecodeItem_Util", 
                "CERT_DestroyCertificateList", 
                "PK11_TraverseCertsForNicknameInSlot", 
                "CERT_GetCertIssuerAndSN", 
                "NSS_RegisterShutdown", 
                "CERT_NewTempCertificate", 
                "CERT_FindCertByIssuerAndSN", 
                "PORT_ArenaZAlloc_Util", 
                "SECITEM_DupItem_Util", 
                "PK11_GetTokenName", 
                "__cxa_finalize", 
                "PK11_GetPBECryptoMechanism", 
                "SECITEM_FreeItem_Util", 
                "SEC_SignData", 
                "PORT_FreeArena_Util", 
                "SEC_ASN1EncoderStart_Util", 
                "PK11_ImportEncryptedPrivateKeyInfo", 
                "SECOID_CopyAlgorithmID_Util", 
                "PORT_Strdup_Util", 
                "SEC_ASN1DecodeInteger_Util", 
                "PORT_ZAlloc_Util", 
                "PK11_IsInternal", 
                "SEC_ASN1EncoderUpdate_Util", 
                "SEC_ASN1DecoderStart_Util", 
                "SEC_ASN1EncodeInteger_Util", 
                "PR_Lock", 
                "PORT_ArenaAlloc_Util", 
                "PK11_FreeSlot", 
                "VFY_VerifyDataDirect", 
                "_ITM_registerTMCloneTable", 
                "SECITEM_ArenaDupItem_Util", 
                "_ITM_deregisterTMCloneTable", 
                "SEC_ASN1EncoderFinish_Util", 
                "SGN_CopyDigestInfo_Util", 
                "PK11_CreatePBEParams"
            ], 
            "rpm": "nss-3.28.2-1.6.el7_3.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/libsmime3.so"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2thin_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2thin.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "dm_pool_create", 
                "dmeventd_lvm2_lock", 
                "dmeventd_lvm2_exit", 
                "dm_task_destroy", 
                "dm_task_no_open_count", 
                "dm_task_get_names", 
                "_ITM_deregisterTMCloneTable", 
                "dm_task_get_info", 
                "dmeventd_lvm2_init", 
                "__stack_chk_fail", 
                "dm_pool_zalloc", 
                "dm_bitset_create", 
                "fork", 
                "dm_task_get_name", 
                "waitpid", 
                "exit", 
                "dm_pool_destroy", 
                "dm_task_get_deps", 
                "_ITM_registerTMCloneTable", 
                "dm_task_run", 
                "__cxa_finalize", 
                "__syslog_chk", 
                "_Jv_RegisterClasses", 
                "dm_pool_free", 
                "dm_mountinfo_read", 
                "dm_get_status_thin_pool", 
                "dmeventd_lvm2_command", 
                "dmeventd_lvm2_unlock", 
                "__errno_location", 
                "__gmon_start__", 
                "dm_task_create", 
                "dm_task_set_name", 
                "dm_bitset_destroy", 
                "strerror", 
                "dmeventd_lvm2_run"
            ], 
            "rpm": "nss-3.28.2-1.6.el7_3.i686.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2thin_so": {
            "report-functions": [
                "dm_pool_create", 
                "dm_get_status_thin_pool", 
                "dm_mountinfo_read", 
                "__syslog_chk", 
                "waitpid", 
                "dm_task_set_name", 
                "dmeventd_lvm2_lock", 
                "__stack_chk_fail", 
                "dm_task_run", 
                "__errno_location", 
                "dm_pool_zalloc", 
                "fork", 
                "dmeventd_lvm2_unlock", 
                "dm_pool_destroy", 
                "exit", 
                "dmeventd_lvm2_init", 
                "dm_bitset_destroy", 
                "dm_task_no_open_count", 
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize", 
                "dm_task_get_info", 
                "strerror", 
                "execvp", 
                "dm_task_get_deps", 
                "_Jv_RegisterClasses", 
                "__gmon_start__", 
                "dm_task_create", 
                "dm_task_get_name", 
                "dmeventd_lvm2_exit", 
                "dm_bitset_create", 
                "dm_pool_free", 
                "dmeventd_lvm2_run", 
                "dmeventd_lvm2_command", 
                "dm_task_get_names"
            ], 
            "rpm": "nss-3.28.2-1.6.el7_3.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2thin.so"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2mirror_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2mirror.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "dmeventd_lvm2_init", 
                "dmeventd_lvm2_lock", 
                "dm_get_next_target", 
                "strcmp", 
                "_Jv_RegisterClasses", 
                "_ITM_deregisterTMCloneTable", 
                "__syslog_chk", 
                "__stack_chk_fail", 
                "dm_free_wrapper", 
                "strtol", 
                "__cxa_finalize", 
                "dm_split_words", 
                "strlen", 
                "strchr", 
                "dmeventd_lvm2_run", 
                "__gmon_start__", 
                "dm_task_get_name", 
                "dmeventd_lvm2_pool", 
                "dmeventd_lvm2_command", 
                "_ITM_registerTMCloneTable", 
                "dmeventd_lvm2_exit"
            ], 
            "rpm": "nss-3.28.2-1.6.el7_3.i686.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2raid_so": {
            "report-functions": [
                "dmeventd_lvm2_unlock", 
                "dmeventd_lvm2_run", 
                "dmeventd_lvm2_lock", 
                "__gmon_start__", 
                "__stack_chk_fail", 
                "strcmp", 
                "strchr", 
                "__syslog_chk", 
                "dm_split_words", 
                "dm_task_get_name", 
                "dm_get_next_target", 
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable", 
                "dmeventd_lvm2_exit", 
                "_Jv_RegisterClasses", 
                "dmeventd_lvm2_pool", 
                "dmeventd_lvm2_init", 
                "dmeventd_lvm2_command"
            ], 
            "rpm": "nss-3.28.2-1.6.el7_3.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2raid.so"
        }, 
        "usr/lib/nss/libnssckbi_so": {
            "report-functions": [
                "PL_HashTableRemove", 
                "PL_HashTableEnumerateEntries", 
                "PR_Lock", 
                "_ITM_registerTMCloneTable", 
                "PL_InitArenaPool", 
                "__gmon_start__", 
                "PL_ArenaAllocate", 
                "_ITM_deregisterTMCloneTable", 
                "memmove", 
                "PR_Calloc", 
                "PR_NewLock", 
                "PL_CompareValues", 
                "PR_Unlock", 
                "__cxa_finalize", 
                "PR_CallOnce", 
                "PR_GetThreadPrivate", 
                "PR_SetThreadPrivate", 
                "PR_DestroyLock", 
                "memset", 
                "PL_strlen", 
                "PL_FinishArenaPool", 
                "PL_NewHashTable", 
                "PR_NewThreadPrivateIndex", 
                "PL_HashTableDestroy", 
                "PL_HashTableLookup", 
                "_Jv_RegisterClasses", 
                "memcpy", 
                "memcmp", 
                "PL_HashTableAdd"
            ], 
            "rpm": "nss-3.28.2-1.6.el7_3.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/nss/libnssckbi.so"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2snapshot_so": {
            "report-functions": [
                "dm_pool_create", 
                "dmeventd_lvm2_run", 
                "__cxa_finalize", 
                "dmeventd_lvm2_lock", 
                "dm_pool_destroy", 
                "fopen64", 
                "__errno_location", 
                "_ITM_deregisterTMCloneTable", 
                "dm_task_get_name", 
                "dmeventd_lvm2_init", 
                "fork", 
                "dm_pool_zalloc", 
                "execvp", 
                "feof", 
                "dm_task_get_info", 
                "waitpid", 
                "dm_pool_free", 
                "__syslog_chk", 
                "exit", 
                "strerror", 
                "dm_get_status_snapshot", 
                "dm_get_next_target", 
                "dmeventd_lvm2_unlock", 
                "fclose", 
                "_Jv_RegisterClasses", 
                "_ITM_registerTMCloneTable", 
                "__stack_chk_fail", 
                "fgets", 
                "__xstat64", 
                "dmeventd_lvm2_command", 
                "dmeventd_lvm2_exit"
            ], 
            "rpm": "nss-3.28.2-1.6.el7_3.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2snapshot.so"
        }, 
        "usr/lib/libnsspem_so": {
            "report-functions": [
                "__strdup", 
                "PR_GetLibraryFilePathname", 
                "_Jv_RegisterClasses", 
                "strchr", 
                "malloc", 
                "strlen", 
                "PR_Realloc", 
                "PORT_NewArena_Util", 
                "free", 
                "PR_SetThreadPrivate", 
                "memcmp", 
                "__snprintf_chk", 
                "SECITEM_FreeItem_Util", 
                "SECITEM_CompareItem_Util", 
                "PR_Read", 
                "PR_GetOpenFileInfo", 
                "PL_InitArenaPool", 
                "PR_SecondsToInterval", 
                "PORT_FreeArena_Util", 
                "PR_Calloc", 
                "PL_HashTableDestroy", 
                "strtol", 
                "PR_Malloc", 
                "SEC_ASN1DecodeItem_Util", 
                "__gmon_start__", 
                "PR_UnloadLibrary", 
                "PL_FinishArenaPool", 
                "PR_LoadLibraryWithFlags", 
                "PR_NewThreadPrivateIndex", 
                "strcasecmp", 
                "PL_ArenaAllocate", 
                "realpath", 
                "PL_HashTableLookup", 
                "SECOID_Init", 
                "PORT_Free_Util", 
                "__sprintf_chk", 
                "PL_CompareValues", 
                "PR_Sleep", 
                "PL_HashTableEnumerateEntries", 
                "PR_FindFunctionSymbol", 
                "PR_Close", 
                "PR_GetDirectorySeparator", 
                "strcpy", 
                "PL_HashTableRemove", 
                "SECITEM_DupItem_Util", 
                "SECOID_GetAlgorithmTag_Util", 
                "PL_strlen", 
                "PL_HashTableAdd", 
                "PR_Lock", 
                "_ITM_registerTMCloneTable", 
                "memcpy", 
                "strrchr", 
                "PR_CallOnce", 
                "SEC_QuickDERDecodeItem_Util", 
                "ATOB_ConvertAsciiToItem_Util", 
                "memset", 
                "strstr", 
                "PORT_Alloc_Util", 
                "__cxa_finalize", 
                "PORT_ArenaZAlloc_Util", 
                "__stack_chk_fail", 
                "PR_Free", 
                "memmove", 
                "PR_Open", 
                "PR_NewLock", 
                "PR_DestroyLock", 
                "PR_GetThreadPrivate", 
                "_ITM_deregisterTMCloneTable", 
                "PL_NewHashTable"
            ], 
            "rpm": "nss-3.28.2-1.6.el7_3.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/libnsspem.so"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2snapshot_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2snapshot.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "dmeventd_lvm2_unlock", 
                "__gmon_start__", 
                "__xstat64", 
                "dm_get_status_snapshot", 
                "waitpid", 
                "__syslog_chk", 
                "dm_split_words", 
                "dm_pool_zalloc", 
                "feof", 
                "strerror", 
                "dm_pool_free", 
                "__stack_chk_fail", 
                "dmeventd_lvm2_run", 
                "execvp", 
                "exit", 
                "fgets", 
                "_ITM_registerTMCloneTable", 
                "dm_get_next_target", 
                "__errno_location", 
                "dmeventd_lvm2_command", 
                "dm_task_get_name", 
                "fork", 
                "dm_pool_destroy", 
                "dmeventd_lvm2_init", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "dmeventd_lvm2_exit", 
                "dm_task_get_info", 
                "_Jv_RegisterClasses", 
                "fclose", 
                "dmeventd_lvm2_lock"
            ], 
            "rpm": "nss-3.28.2-1.6.el7_3.i686.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Version": " 3.28.2", 
            "Name": " nss", 
            "License": " MPLv2.0", 
            "URL": " http://www.mozilla.org/projects/security/pki/nss/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " x86-037.build.eng.bos.redhat.com", 
            "Description": "\nNetwork Security Services (NSS) is a set of libraries designed to\nsupport cross-platform development of security-enabled client and\nserver applications. Applications built with NSS can support SSL v2\nand v3, TLS, PKCS #5, PKCS #7, PKCS #11, PKCS #12, S/MIME, X.509\nv3 certificates, and other security standards.\n", 
            "Build Date": " Mon 20 Feb 2017 02:13:22 PM EST", 
            "Vendor": " Red Hat, Inc.", 
            "Source RPM": " nss-3.28.2-1.6.el7_3.src.rpm", 
            "warning": " /home/jason/fctl/swap/2/nss-3.28.2-1.6.el7_3.i686.rpm: Header V3 RSA/SHA256 Signature, key ID fd431d51: NOKEY", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Thu 23 Feb 2017 06:30:17 AM EST, Key ID 199e2f91fd431d51", 
            "Release": " 1.6.el7_3", 
            "Group": " System Environment/Libraries", 
            "Packager": " Red Hat, Inc. <http://bugzilla.redhat.com/bugzilla>", 
            "Summary": " Network Security Services", 
            "Size": " 2469893"
        }
    }
}