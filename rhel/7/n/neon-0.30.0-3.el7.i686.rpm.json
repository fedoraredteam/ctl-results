{
    "results": {
        "usr/lib/device-mapper/libdevmapper-event-lvm2mirror_so": {
            "report-functions": [
                "dmeventd_lvm2_command", 
                "strcmp", 
                "dm_malloc_wrapper", 
                "_Jv_RegisterClasses", 
                "__syslog_chk", 
                "__cxa_finalize", 
                "__stack_chk_fail", 
                "dmeventd_lvm2_pool", 
                "dm_split_words", 
                "dm_task_get_name", 
                "strlen", 
                "dm_get_next_target", 
                "_ITM_deregisterTMCloneTable", 
                "dm_free_wrapper", 
                "dmeventd_lvm2_unlock", 
                "dmeventd_lvm2_exit", 
                "_ITM_registerTMCloneTable", 
                "dmeventd_lvm2_init", 
                "strtol", 
                "strchr", 
                "dmeventd_lvm2_run"
            ], 
            "rpm": "neon-0.30.0-3.el7.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2mirror.so"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2raid_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2raid.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "dm_task_get_name", 
                "dmeventd_lvm2_lock", 
                "__syslog_chk", 
                "strchr", 
                "dm_get_next_target", 
                "dm_split_words", 
                "__gmon_start__", 
                "_Jv_RegisterClasses", 
                "__stack_chk_fail", 
                "dmeventd_lvm2_command", 
                "dmeventd_lvm2_init", 
                "dmeventd_lvm2_pool", 
                "dmeventd_lvm2_unlock", 
                "strcmp", 
                "_ITM_registerTMCloneTable", 
                "dmeventd_lvm2_exit", 
                "dmeventd_lvm2_run", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "neon-0.30.0-3.el7.i686.rpm"
        }, 
        "usr/lib/libneon_so_27_3_0": {
            "report-functions": [
                "pakchois_open_session", 
                "__sprintf_chk", 
                "XML_SetCharacterDataHandler", 
                "gss_delete_sec_context", 
                "connect", 
                "_Jv_RegisterClasses", 
                "__strdup", 
                "strncasecmp", 
                "memmove", 
                "strchr", 
                "memcmp", 
                "pakchois_sign", 
                "__cxa_finalize", 
                "ferror", 
                "XML_ErrorString", 
                "gnutls_handshake", 
                "gnutls_pkcs12_bag_get_type", 
                "gnutls_x509_privkey_init", 
                "XML_SetUserData", 
                "inflate", 
                "strstr", 
                "memchr", 
                "crc32", 
                "gnutls_global_deinit", 
                "gnutls_alert_get_name", 
                "bind_textdomain_codeset", 
                "gnutls_pkcs12_bag_decrypt", 
                "gnutls_x509_dn_deinit", 
                "gnutls_pkcs12_bag_deinit", 
                "gnutls_strerror", 
                "gnutls_x509_privkey_deinit", 
                "XML_Parse", 
                "gnutls_session_get_ptr", 
                "__rawmemchr", 
                "sscanf", 
                "XML_SetEntityDeclHandler", 
                "signal", 
                "XML_StopParser", 
                "gnutls_x509_dn_init", 
                "gnutls_certificate_set_x509_key_file", 
                "gnutls_certificate_get_issuer", 
                "gnutls_certificate_free_credentials", 
                "gnutls_x509_crt_import", 
                "getsockopt", 
                "gnutls_certificate_verify_peers2", 
                "recv", 
                "gss_init_sec_context", 
                "__errno_location", 
                "pakchois_close_session", 
                "gnutls_pkcs12_bag_get_data", 
                "fopen", 
                "gss_release_buffer", 
                "read", 
                "gnutls_x509_crt_deinit", 
                "gnutls_x509_crt_get_subject", 
                "XML_GetErrorCode", 
                "gnutls_x509_crt_get_expiration_time", 
                "gnutls_pkcs12_import", 
                "memset", 
                "strncmp", 
                "feof", 
                "gnutls_pkcs12_deinit", 
                "gss_display_status", 
                "pakchois_sign_init", 
                "pakchois_find_objects_final", 
                "strrchr", 
                "dcgettext", 
                "getnameinfo", 
                "gnutls_certificate_server_set_request", 
                "gnutls_certificate_set_verify_flags", 
                "pakchois_module_destroy", 
                "XML_ParserCreate", 
                "fflush", 
                "fclose", 
                "gnutls_x509_crt_get_dn_by_oid", 
                "px_proxy_factory_get_proxies", 
                "strtoul", 
                "gnutls_pkcs12_get_bag", 
                "gnutls_db_set_ptr", 
                "gnutls_transport_set_ptr", 
                "__strcpy_chk", 
                "gnutls_init", 
                "getpeername", 
                "__stack_chk_fail", 
                "__ctype_b_loc", 
                "gmtime", 
                "gnutls_x509_privkey_import_pkcs8", 
                "bind", 
                "freeaddrinfo", 
                "gnutls_pkcs12_bag_get_friendly_name", 
                "strncat", 
                "_ITM_deregisterTMCloneTable", 
                "__memcpy_chk", 
                "write", 
                "pakchois_get_slot_list", 
                "gnutls_deinit", 
                "gnutls_x509_dn_get_rdn_ava", 
                "gnutls_db_set_retrieve_function", 
                "gnutls_sign_callback_set", 
                "getaddrinfo", 
                "gnutls_x509_crt_get_activation_time", 
                "realloc", 
                "strcmp", 
                "strtoll", 
                "setvbuf", 
                "gss_import_name", 
                "gnutls_session_get_data2", 
                "px_proxy_factory_free", 
                "gnutls_rnd", 
                "gnutls_x509_crt_get_subject_alt_name", 
                "pakchois_find_objects", 
                "lseek64", 
                "gnutls_session_set_data", 
                "iconv_open", 
                "px_proxy_factory_new", 
                "inflateInit2_", 
                "malloc", 
                "gai_strerror", 
                "gnutls_pkcs12_bag_init", 
                "memcpy", 
                "pakchois_get_slot_info", 
                "setsockopt", 
                "strncpy", 
                "gnutls_cipher_get", 
                "gnutls_bye", 
                "gnutls_credentials_set", 
                "time", 
                "gnutls_x509_privkey_cpy", 
                "stpcpy", 
                "XML_GetCurrentLineNumber", 
                "gnutls_session_is_resumed", 
                "gnutls_db_set_store_function", 
                "poll", 
                "gnutls_record_send", 
                "writev", 
                "gnutls_certificate_get_peers", 
                "abort", 
                "strlen", 
                "XML_ParserFree", 
                "pakchois_module_load", 
                "fread", 
                "fwrite", 
                "gnutls_certificate_client_set_retrieve_function", 
                "pakchois_get_token_info", 
                "__vfprintf_chk", 
                "gnutls_x509_crt_get_fingerprint", 
                "strerror_r", 
                "mktime", 
                "gnutls_certificate_set_x509_trust_file", 
                "gnutls_certificate_type_get", 
                "gnutls_server_name_set", 
                "XML_SetXmlDeclHandler", 
                "gnutls_set_default_priority", 
                "gnutls_db_set_remove_function", 
                "__fxstat64", 
                "gnutls_session_set_ptr", 
                "pakchois_find_objects_init", 
                "gnutls_certificate_set_x509_trust", 
                "iconv", 
                "inet_pton", 
                "_ITM_registerTMCloneTable", 
                "XML_SetElementHandler", 
                "fcntl", 
                "gnutls_x509_crt_export", 
                "gnutls_x509_crt_get_issuer", 
                "gnutls_x509_crt_init", 
                "accept", 
                "pakchois_get_attribute_value", 
                "__vsnprintf_chk", 
                "gnutls_pkcs12_verify_mac", 
                "gnutls_cipher_get_name", 
                "inet_ntop", 
                "gnutls_global_init", 
                "strcpy", 
                "gnutls_record_check_pending", 
                "gss_release_name", 
                "strtol", 
                "socket", 
                "gnutls_x509_dn_export", 
                "gnutls_alert_get", 
                "__gmon_start__", 
                "gnutls_pkcs12_bag_get_count", 
                "send", 
                "gnutls_x509_dn_import", 
                "pakchois_module_nssload", 
                "pakchois_login", 
                "close", 
                "iconv_close", 
                "gnutls_pkcs12_init", 
                "inflateEnd", 
                "gnutls_record_recv", 
                "gnutls_certificate_allocate_credentials", 
                "gnutls_session_get_id"
            ], 
            "rpm": "neon-0.30.0-3.el7.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/libneon.so.27.3.0"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2thin_so": {
            "report-functions": [
                "dmeventd_lvm2_command", 
                "dm_pool_zalloc", 
                "dm_task_get_name", 
                "dm_task_get_deps", 
                "dm_task_get_names", 
                "dm_pool_create", 
                "waitpid", 
                "dm_get_status_thin_pool", 
                "dm_task_create", 
                "dm_task_no_open_count", 
                "dm_task_get_info", 
                "dm_bitset_create", 
                "dm_task_destroy", 
                "dm_task_run", 
                "dm_pool_free", 
                "dm_mountinfo_read", 
                "dmeventd_lvm2_unlock", 
                "dmeventd_lvm2_lock", 
                "dmeventd_lvm2_init", 
                "_ITM_registerTMCloneTable", 
                "dm_get_next_target", 
                "__cxa_finalize", 
                "__stack_chk_fail", 
                "fork", 
                "__errno_location", 
                "__syslog_chk", 
                "_ITM_deregisterTMCloneTable", 
                "dm_bitset_destroy", 
                "dm_task_set_name", 
                "dmeventd_lvm2_exit", 
                "dm_pool_destroy", 
                "exit", 
                "execvp", 
                "_Jv_RegisterClasses", 
                "dmeventd_lvm2_run"
            ], 
            "rpm": "neon-0.30.0-3.el7.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2thin.so"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2mirror_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2mirror.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "dm_split_words", 
                "strchr", 
                "dm_malloc_wrapper", 
                "dm_get_next_target", 
                "dmeventd_lvm2_pool", 
                "dmeventd_lvm2_command", 
                "strlen", 
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable", 
                "__stack_chk_fail", 
                "strtol", 
                "__syslog_chk", 
                "dmeventd_lvm2_unlock", 
                "dmeventd_lvm2_init", 
                "strcmp", 
                "dmeventd_lvm2_run", 
                "dm_free_wrapper", 
                "dmeventd_lvm2_exit", 
                "dm_task_get_name", 
                "_Jv_RegisterClasses"
            ], 
            "rpm": "neon-0.30.0-3.el7.i686.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2raid_so": {
            "report-functions": [
                "dm_get_next_target", 
                "__gmon_start__", 
                "dmeventd_lvm2_pool", 
                "dmeventd_lvm2_unlock", 
                "dmeventd_lvm2_init", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "_Jv_RegisterClasses", 
                "dm_task_get_name", 
                "strchr", 
                "dmeventd_lvm2_run", 
                "__syslog_chk", 
                "dm_split_words", 
                "dmeventd_lvm2_exit", 
                "strtol", 
                "__stack_chk_fail", 
                "dmeventd_lvm2_lock", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "neon-0.30.0-3.el7.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2raid.so"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2thin_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2thin.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "dm_task_get_deps", 
                "dm_task_set_name", 
                "__cxa_finalize", 
                "strerror", 
                "dm_mountinfo_read", 
                "fork", 
                "dm_task_get_name", 
                "dm_get_next_target", 
                "dm_pool_free", 
                "dm_task_create", 
                "dm_task_destroy", 
                "dm_task_no_open_count", 
                "execvp", 
                "dmeventd_lvm2_unlock", 
                "dmeventd_lvm2_exit", 
                "dmeventd_lvm2_lock", 
                "dm_pool_zalloc", 
                "dm_pool_create", 
                "dm_get_status_thin_pool", 
                "exit", 
                "dm_task_run", 
                "dmeventd_lvm2_command", 
                "dm_bitset_create", 
                "dmeventd_lvm2_init", 
                "__syslog_chk", 
                "dmeventd_lvm2_run", 
                "_ITM_deregisterTMCloneTable", 
                "_Jv_RegisterClasses", 
                "waitpid", 
                "dm_pool_destroy", 
                "dm_task_get_names", 
                "__stack_chk_fail", 
                "dm_bitset_destroy", 
                "__errno_location"
            ], 
            "rpm": "neon-0.30.0-3.el7.i686.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2snapshot_so": {
            "report-functions": [
                "dm_task_get_info", 
                "__gmon_start__", 
                "feof", 
                "waitpid", 
                "__errno_location", 
                "execvp", 
                "__stack_chk_fail", 
                "dm_pool_free", 
                "fopen64", 
                "dm_get_next_target", 
                "dmeventd_lvm2_run", 
                "__syslog_chk", 
                "fork", 
                "dm_get_status_snapshot", 
                "dmeventd_lvm2_exit", 
                "_Jv_RegisterClasses", 
                "dm_pool_create", 
                "__xstat64", 
                "_ITM_deregisterTMCloneTable", 
                "dm_pool_zalloc", 
                "strerror", 
                "dm_split_words", 
                "dmeventd_lvm2_lock", 
                "fgets", 
                "dmeventd_lvm2_unlock", 
                "dmeventd_lvm2_command", 
                "__cxa_finalize", 
                "exit", 
                "dm_pool_destroy", 
                "fclose", 
                "dm_task_get_name"
            ], 
            "rpm": "neon-0.30.0-3.el7.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2snapshot.so"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2snapshot_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2snapshot.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "dm_get_status_snapshot", 
                "__gmon_start__", 
                "fclose", 
                "fork", 
                "__syslog_chk", 
                "dmeventd_lvm2_init", 
                "__xstat64", 
                "strerror", 
                "_ITM_registerTMCloneTable", 
                "__errno_location", 
                "__cxa_finalize", 
                "dm_pool_zalloc", 
                "dm_task_get_name", 
                "dm_task_get_info", 
                "dmeventd_lvm2_exit", 
                "feof", 
                "fgets", 
                "waitpid", 
                "fopen64", 
                "dmeventd_lvm2_run", 
                "dmeventd_lvm2_lock", 
                "_Jv_RegisterClasses", 
                "dm_get_next_target", 
                "dm_split_words", 
                "_ITM_deregisterTMCloneTable", 
                "__stack_chk_fail", 
                "dm_pool_free", 
                "dmeventd_lvm2_command", 
                "dm_pool_destroy", 
                "exit", 
                "execvp"
            ], 
            "rpm": "neon-0.30.0-3.el7.i686.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Version": " 0.30.0", 
            "Name": " neon", 
            "License": " LGPLv2+", 
            "URL": " http://www.webdav.org/neon/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " x86-024.build.eng.bos.redhat.com", 
            "Description": "\nneon is an HTTP and WebDAV client library, with a C interface;\nproviding a high-level interface to HTTP and WebDAV methods along\nwith a low-level interface for HTTP request handling.  neon\nsupports persistent connections, proxy servers, basic, digest and\nKerberos authentication, and has complete SSL support.\n", 
            "Build Date": " Sun 26 Jan 2014 12:55:08 PM EST", 
            "Vendor": " Red Hat, Inc.", 
            "Source RPM": " neon-0.30.0-3.el7.src.rpm", 
            "warning": " /home/jason/fctl/swap/2/neon-0.30.0-3.el7.i686.rpm: Header V3 RSA/SHA256 Signature, key ID fd431d51: NOKEY", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Wed 02 Apr 2014 12:24:16 PM EDT, Key ID 199e2f91fd431d51", 
            "Release": " 3.el7", 
            "Group": " System Environment/Libraries", 
            "Packager": " Red Hat, Inc. <http://bugzilla.redhat.com/bugzilla>", 
            "Summary": " An HTTP and WebDAV client library", 
            "Size": " 561660"
        }
    }
}