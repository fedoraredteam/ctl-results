{
    "results": {
        "usr/lib64/librasqal_so_3_0_0": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/librasqal.so.3.0.0", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "raptor_iostream_decimal_write", 
                "__isoc99_sscanf", 
                "malloc", 
                "mpfr_sub", 
                "raptor_new_term_from_uri", 
                "mpfr_snprintf", 
                "raptor_world_set_generate_bnodeid_handler", 
                "raptor_free_world", 
                "mpfr_div", 
                "mpfr_get_si", 
                "raptor_sequence_delete_at", 
                "raptor_avltree_set_print_handler", 
                "__ctype_b_loc", 
                "raptor_free_xml_writer", 
                "raptor_avltree_iterator_get", 
                "raptor_stringbuffer_append_counted_string", 
                "__errno_location", 
                "raptor_new_uri_relative_to_base", 
                "raptor_qname_string_to_uri", 
                "raptor_uri_write", 
                "raptor_new_stringbuffer", 
                "raptor_new_uri", 
                "raptor_stringbuffer_length", 
                "__cxa_finalize", 
                "raptor_www_fetch", 
                "raptor_new_uri_from_uri_local_name", 
                "raptor_sequence_shift", 
                "raptor_free_namespace", 
                "raptor_new_iostream_from_handler", 
                "raptor_sequence_unshift", 
                "raptor_iostream_write_bytes", 
                "raptor_uri_compare", 
                "raptor_xml_writer_cdata_counted", 
                "raptor_statement_init", 
                "raptor_stringbuffer_as_string", 
                "ldexp", 
                "raptor_xml_writer_empty_element", 
                "raptor_free_memory", 
                "memcmp", 
                "raptor_new_xml_element_from_namespace_local_name", 
                "raptor_statement_clear", 
                "raptor_free_sequence", 
                "raptor_avltree_add", 
                "raptor_xml_writer_raw", 
                "mpfr_set4", 
                "raptor_stringbuffer_append_string", 
                "raptor_sax2_set_start_element_handler", 
                "fputc", 
                "mpfr_set_d", 
                "raptor_uri_as_string", 
                "raptor_namespaces_end_for_depth", 
                "mpfr_set_si_2exp", 
                "raptor_unicode_utf8_string_put_char", 
                "raptor_uri_to_relative_counted_uri_string", 
                "raptor_new_avltree", 
                "raptor_xml_writer_raw_counted", 
                "raptor_iostream_counted_string_write", 
                "raptor_uri_print", 
                "__isnan", 
                "raptor_xml_element_get_name", 
                "__fprintf_chk", 
                "frexp", 
                "raptor_parser_set_statement_handler", 
                "raptor_new_sax2", 
                "mpfr_init2", 
                "raptor_free_uri", 
                "mpfr_neg", 
                "raptor_xml_element_get_attributes", 
                "regfree", 
                "raptor_sax2_set_characters_handler", 
                "strstr", 
                "raptor_locator_print", 
                "raptor_xml_element_set_attributes", 
                "raptor_new_world_internal", 
                "raptor_uri_as_counted_string", 
                "raptor_iostream_read_eof", 
                "mpfr_cmp3", 
                "raptor_free_www", 
                "raptor_free_serializer", 
                "raptor_world_set_log_handler", 
                "free", 
                "raptor_unicode_utf8_string_get_char", 
                "__snprintf_chk", 
                "mpfr_get_d", 
                "gmtime_r", 
                "raptor_qname_get_value", 
                "raptor_new_term_from_literal", 
                "raptor_new_namespace_from_uri", 
                "raptor_world_is_parser_name", 
                "abort", 
                "strchr", 
                "raptor_sequence_join", 
                "raptor_namespaces_start_namespace", 
                "mpfr_set_str", 
                "raptor_sequence_sort", 
                "raptor_www_set_write_bytes_handler", 
                "raptor_xml_writer_cdata", 
                "raptor_parser_parse_uri", 
                "raptor_syntax_description_validate", 
                "strtoul", 
                "raptor_namespace_get_prefix", 
                "raptor_sax2_parse_start", 
                "raptor_sequence_push", 
                "raptor_new_parser", 
                "raptor_iostream_write_byte", 
                "clock", 
                "raptor_sequence_pop", 
                "gettimeofday", 
                "_ITM_deregisterTMCloneTable", 
                "raptor_new_www", 
                "time", 
                "raptor_new_iostream_to_string", 
                "raptor_free_namespaces", 
                "__gmon_start__", 
                "raptor_free_statement", 
                "raptor_www_set_http_accept", 
                "raptor_iostream_read_bytes", 
                "raptor_sequence_get_at", 
                "raptor_avltree_search", 
                "ceil", 
                "raptor_uri_copy", 
                "raptor_www_set_content_type_handler", 
                "raptor_new_term_from_blank", 
                "raptor_serializer_start_to_iostream", 
                "memset", 
                "raptor_new_qname_from_namespace_uri", 
                "raptor_xml_writer_end_element", 
                "raptor_alloc_memory", 
                "mpfr_mul", 
                "raptor_new_namespace", 
                "raptor_sax2_set_end_element_handler", 
                "raptor_sequence_set_at", 
                "strtod", 
                "mpfr_get_default_rounding_mode", 
                "mpfr_fits_slong_p", 
                "memcpy", 
                "raptor_xml_element_get_attributes_count", 
                "raptor_new_qname_from_namespace_local_name", 
                "raptor_xml_writer_start_element", 
                "raptor_world_get_parser_description", 
                "calloc", 
                "raptor_stringbuffer_copy_to_string", 
                "raptor_free_stringbuffer", 
                "raptor_free_qname", 
                "raptor_unicode_utf8_substr", 
                "raptor_serializer_set_namespace", 
                "strlen", 
                "raptor_xml_element_get_language", 
                "__sprintf_chk", 
                "_Jv_RegisterClasses", 
                "raptor_sax2_parse_chunk", 
                "mpfr_rint", 
                "raptor_new_serializer", 
                "strcasecmp", 
                "memmove", 
                "__memcpy_chk", 
                "raptor_free_iostream", 
                "regcomp", 
                "round", 
                "raptor_new_sequence", 
                "strcmp", 
                "raptor_new_uri_for_rdf_concept", 
                "getpid", 
                "raptor_unicode_utf8_strlen", 
                "raptor_stringbuffer_append_uri_escaped_counted_string", 
                "raptor_xml_name_check", 
                "raptor_www_get_final_uri", 
                "strtol", 
                "__vfprintf_chk", 
                "raptor_vasprintf", 
                "fputs", 
                "raptor_sequence_size", 
                "raptor_avltree_iterator_next", 
                "qsort", 
                "mpfr_clear", 
                "raptor_new_namespaces", 
                "raptor_new_qname", 
                "raptor_sequence_print", 
                "raptor_new_xml_writer", 
                "raptor_new_avltree_iterator", 
                "raptor_string_ntriples_write", 
                "__stack_chk_fail", 
                "raptor_free_term", 
                "raptor_qname_get_counted_value", 
                "realloc", 
                "raptor_free_parser", 
                "_ITM_registerTMCloneTable", 
                "raptor_free_avltree_iterator", 
                "raptor_bnodeid_ntriples_write", 
                "raptor_new_iostream_to_file_handle", 
                "raptor_qname_get_namespace", 
                "__ctype_toupper_loc", 
                "raptor_namespaces_start_namespace_full", 
                "raptor_uri_equals", 
                "regexec", 
                "raptor_parser_parse_iostream", 
                "raptor_serializer_serialize_end", 
                "raptor_qname_write", 
                "floor", 
                "__ctype_tolower_loc", 
                "raptor_namespaces_find_namespace", 
                "raptor_world_open", 
                "timegm", 
                "mpfr_equal_p", 
                "raptor_serializer_serialize_statement", 
                "raptor_uri_filename_to_uri_string", 
                "raptor_free_sax2", 
                "mpfr_add", 
                "raptor_qname_get_local_name", 
                "raptor_free_xml_element", 
                "strrchr", 
                "raptor_xml_escape_string_write", 
                "raptor_free_avltree"
            ], 
            "rpm": "rasqal-0.9.30-4.el7.x86_64.rpm"
        }, 
        "usr/bin/roqet": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/roqet", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "rasqal_world_set_log_handler", 
                "rasqal_new_service", 
                "rasqal_world_open", 
                "raptor_serializer_start_to_file_handle", 
                "rasqal_query_get_bindings_variables_sequence", 
                "exit", 
                "strcmp", 
                "rasqal_query_get_distinct", 
                "raptor_new_iostream_from_file_handle", 
                "calloc", 
                "rasqal_query_set_feature_string", 
                "__fprintf_chk", 
                "rasqal_graph_pattern_get_variable", 
                "rasqal_query_get_bindings_rows_sequence", 
                "fwrite", 
                "rasqal_query_results_is_boolean", 
                "rasqal_graph_pattern_get_sub_graph_pattern", 
                "strrchr", 
                "getenv", 
                "raptor_www_fetch_to_string", 
                "rasqal_new_world", 
                "fclose", 
                "rasqal_world_get_query_language_description", 
                "__libc_start_main", 
                "rasqal_query_get_verb", 
                "rasqal_free_service", 
                "rasqal_triple_print", 
                "rasqal_query_get_limit", 
                "rasqal_world_get_raptor", 
                "access", 
                "abort", 
                "strncmp", 
                "rasqal_free_data_graph", 
                "raptor_serializer_serialize_end", 
                "raptor_new_uri", 
                "rasqal_service_set_format", 
                "raptor_sequence_push", 
                "_IO_putc", 
                "rasqal_graph_pattern_get_filter_expression", 
                "rasqal_graph_pattern_get_triple", 
                "raptor_new_www", 
                "rasqal_query_get_bindings_row", 
                "raptor_serializer_serialize_statement", 
                "strlen", 
                "rasqal_query_results_get_count", 
                "raptor_world_is_parser_name", 
                "fputs", 
                "rasqal_new_data_graph_from_uri", 
                "raptor_uri_filename_to_uri_string", 
                "rasqal_query_get_bindings_variable", 
                "raptor_new_sequence", 
                "rasqal_graph_pattern_get_index", 
                "raptor_world_get_parser_description", 
                "ferror", 
                "rasqal_query_get_offset", 
                "raptor_sequence_size", 
                "rasqal_query_results_next_triple", 
                "_Jv_RegisterClasses", 
                "raptor_free_serializer", 
                "rasqal_service_execute", 
                "rasqal_query_verb_as_string", 
                "rasqal_query_results_next", 
                "raptor_serializer_set_namespace", 
                "rasqal_query_prepare", 
                "raptor_free_uri", 
                "rasqal_graph_pattern_get_operator", 
                "raptor_new_iostream_to_file_handle", 
                "raptor_uri_copy", 
                "raptor_free_www", 
                "rasqal_new_data_graph_from_iostream", 
                "rasqal_query_set_store_results", 
                "rasqal_world_get_query_results_format_description", 
                "rasqal_query_get_bound_variable_sequence", 
                "getopt_long", 
                "rasqal_query_results_get_bindings_count", 
                "rasqal_row_print", 
                "rasqal_features_enumerate", 
                "rasqal_graph_pattern_operator_as_string", 
                "raptor_free_stringbuffer", 
                "rasqal_graph_pattern_get_sub_graph_pattern_sequence", 
                "rasqal_query_get_construct_triple", 
                "rasqal_query_results_formatter_write", 
                "puts", 
                "rasqal_free_world", 
                "rasqal_query_results_get_binding_value", 
                "raptor_stringbuffer_copy_to_string", 
                "rasqal_query_print", 
                "__printf_chk", 
                "raptor_locator_print", 
                "__gmon_start__", 
                "malloc", 
                "raptor_log_level_get_label", 
                "_ITM_deregisterTMCloneTable", 
                "rasqal_query_get_prefix", 
                "rasqal_query_results_is_graph", 
                "raptor_sequence_pop", 
                "rasqal_graph_pattern_get_origin", 
                "rasqal_new_query", 
                "raptor_sequence_get_at", 
                "rasqal_graph_pattern_get_service", 
                "rasqal_query_add_data_graph", 
                "fputc", 
                "rasqal_get_feature_count", 
                "rasqal_language_name_check", 
                "raptor_free_iostream", 
                "rasqal_literal_print", 
                "rasqal_query_results_finished", 
                "raptor_stringbuffer_length", 
                "_ITM_registerTMCloneTable", 
                "rasqal_query_write", 
                "fopen", 
                "rasqal_query_execute", 
                "__stack_chk_fail", 
                "rasqal_query_get_construct_triples_sequence", 
                "feof", 
                "rasqal_free_query_results_formatter", 
                "raptor_new_serializer", 
                "rasqal_query_get_query_graph_pattern", 
                "rasqal_query_set_feature", 
                "rasqal_query_results_is_bindings", 
                "raptor_world_is_serializer_name", 
                "raptor_free_sequence", 
                "rasqal_query_results_get_binding_name", 
                "raptor_stringbuffer_append_counted_string", 
                "rasqal_query_results_get_triple", 
                "strerror", 
                "raptor_new_stringbuffer", 
                "fread", 
                "rasqal_expression_print", 
                "rasqal_feature_value_type", 
                "free", 
                "rasqal_free_query_results", 
                "rasqal_free_query", 
                "__errno_location", 
                "strtol", 
                "raptor_free_memory", 
                "rasqal_query_results_get_boolean"
            ], 
            "rpm": "rasqal-0.9.30-4.el7.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Version": " 0.9.30", 
            "Name": " rasqal", 
            "License": " LGPLv2+ or ASL 2.0", 
            "URL": " http://librdf.org/rasqal/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " x86-017.build.eng.bos.redhat.com", 
            "Description": "\nRasqal is a library providing full support for querying Resource\nDescription Framework (RDF) including parsing query syntaxes, constructing\nthe queries, executing them and returning result formats.  It currently\nhandles the RDF Data Query Language (RDQL) and SPARQL Query language.\n", 
            "Build Date": " Mon 27 Jan 2014 08:19:22 AM EST", 
            "Vendor": " Red Hat, Inc.", 
            "Source RPM": " rasqal-0.9.30-4.el7.src.rpm", 
            "warning": " /home/jason/fctl/swap/3/rasqal-0.9.30-4.el7.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID fd431d51: NOKEY", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Wed 02 Apr 2014 03:30:41 PM EDT, Key ID 199e2f91fd431d51", 
            "Release": " 4.el7", 
            "Group": " System Environment/Libraries", 
            "Packager": " Red Hat, Inc. <http://bugzilla.redhat.com/bugzilla>", 
            "Summary": " RDF Query Library", 
            "Size": " 853085"
        }
    }
}