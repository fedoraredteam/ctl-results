{
    "results": {
        "usr/lib/device-mapper/libdevmapper-event-lvm2mirror_so": {
            "report-functions": [
                "_Jv_RegisterClasses", 
                "dmeventd_lvm2_unlock", 
                "dmeventd_lvm2_exit", 
                "strlen", 
                "dmeventd_lvm2_init", 
                "dmeventd_lvm2_pool", 
                "__cxa_finalize", 
                "dmeventd_lvm2_command", 
                "__stack_chk_fail", 
                "dm_get_next_target", 
                "dm_task_get_name", 
                "_ITM_deregisterTMCloneTable", 
                "dm_free_wrapper", 
                "_ITM_registerTMCloneTable", 
                "dmeventd_lvm2_run", 
                "strcmp", 
                "dm_malloc_wrapper", 
                "dmeventd_lvm2_lock", 
                "__syslog_chk", 
                "strchr", 
                "strtol"
            ], 
            "rpm": "mod_auth_openidc-1.8.8-3.el7.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2mirror.so"
        }, 
        "usr/lib64/httpd/modules/mod_auth_openidc_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/httpd/modules/mod_auth_openidc.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "json_array_append_new", 
                "apr_table_add", 
                "EVP_CIPHER_CTX_init", 
                "EVP_PKEY_free", 
                "apr_hash_set", 
                "EVP_DecryptFinal_ex", 
                "sscanf", 
                "EVP_sha384", 
                "EVP_sha1", 
                "strncmp", 
                "apr_sha1_init", 
                "ap_set_flag_slot", 
                "apr_shm_create", 
                "apr_psprintf", 
                "apr_uuid_format", 
                "apr_pool_cleanup_register", 
                "apr_global_mutex_unlock", 
                "EC_KEY_set_group", 
                "EVP_DigestInit", 
                "EVP_PKEY_verify_init", 
                "ap_hook_check_authn", 
                "json_array_get", 
                "apr_table_clear", 
                "apr_atoi64", 
                "RSA_size", 
                "apr_table_elts", 
                "__strcpy_chk", 
                "json_deep_copy", 
                "CRYPTO_get_locking_callback", 
                "apr_palloc", 
                "json_object_iter_value", 
                "apr_file_close", 
                "apr_hash_get", 
                "ap_run_http_scheme", 
                "apr_global_mutex_lock", 
                "apr_uuid_parse", 
                "json_array_size", 
                "EVP_PKEY_CTX_new", 
                "apr_memcache_getp", 
                "EVP_CIPHER_CTX_new", 
                "ap_note_auth_failure", 
                "apr_hash_merge", 
                "apr_dir_read", 
                "EVP_EncryptInit_ex", 
                "__gmon_start__", 
                "apr_stat", 
                "EVP_VerifyFinal", 
                "__ctype_b_loc", 
                "CRYPTO_set_locking_callback", 
                "EVP_BytesToKey", 
                "apr_dir_close", 
                "apr_global_mutex_create", 
                "apr_parse_addr_port", 
                "pcre_compile", 
                "_ITM_deregisterTMCloneTable", 
                "json_object_set_new", 
                "apr_file_write_full", 
                "apr_uri_unparse", 
                "apr_table_setn", 
                "json_string", 
                "apr_table_addn", 
                "apr_hash_first", 
                "apr_array_clear", 
                "getpid", 
                "ap_should_client_block", 
                "ap_hook_child_init", 
                "apr_array_pstrcat", 
                "apr_global_mutex_destroy", 
                "curl_easy_setopt", 
                "__cxa_finalize", 
                "apr_hash_count", 
                "json_object_iter_key", 
                "__stack_chk_fail", 
                "apr_base64_encode_len", 
                "json_loads", 
                "ap_getword_white", 
                "RSA_free", 
                "EVP_CIPHER_block_size", 
                "AES_set_decrypt_key", 
                "apr_file_open", 
                "BN_new", 
                "apr_uuid_get", 
                "apr_pool_cleanup_null", 
                "apr_os_thread_current", 
                "apr_rfc822_date", 
                "EVP_EncryptUpdate", 
                "EVP_PKEY_assign", 
                "RSA_private_decrypt", 
                "ERR_get_error", 
                "EVP_aes_192_gcm", 
                "apr_table_unset", 
                "BIO_ctrl", 
                "apr_hash_copy", 
                "RSA_new", 
                "CRYPTO_THREADID_set_callback", 
                "strcmp", 
                "apr_pstrdup", 
                "memcmp", 
                "json_object_iter_next", 
                "apr_brigade_create", 
                "snprintf", 
                "json_integer_value", 
                "curl_easy_escape", 
                "EVP_DigestFinal", 
                "__vsnprintf_chk", 
                "curl_global_cleanup", 
                "apr_file_info_get", 
                "curl_easy_init", 
                "curl_global_init", 
                "pcre_get_substring", 
                "strlen", 
                "BN_bn2bin", 
                "apr_is_empty_array", 
                "EVP_aes_256_gcm", 
                "pcre_exec", 
                "apr_memcache_set", 
                "strrchr", 
                "ap_get_client_block", 
                "EVP_EncryptFinal_ex", 
                "X509_free", 
                "apr_thread_mutex_create", 
                "strchr", 
                "EVP_CIPHER_CTX_free", 
                "apr_uri_parse", 
                "pcre_free_substring", 
                "apr_hash_next", 
                "EC_GROUP_new_by_curve_name", 
                "EVP_cleanup", 
                "ap_set_string_slot", 
                "apr_base64_decode_len", 
                "apr_shm_baseaddr_get", 
                "ERR_error_string", 
                "EC_KEY_free", 
                "apr_table_set", 
                "apr_strnatcmp", 
                "curl_easy_unescape", 
                "ap_getword_conf", 
                "CRYPTO_num_locks", 
                "ap_hook_post_config", 
                "apr_global_mutex_child_init", 
                "EVP_DecryptUpdate", 
                "apr_strnatcasecmp", 
                "ap_set_content_type", 
                "apr_bucket_transient_create", 
                "EVP_MD_CTX_cleanup", 
                "EVP_aes_256_cbc", 
                "json_string_value", 
                "json_real_value", 
                "EVP_PKEY_new", 
                "free", 
                "memset", 
                "EVP_DecryptInit_ex", 
                "apr_array_push", 
                "ap_unixd_set_global_mutex_perms", 
                "apr_memcache_delete", 
                "BIO_s_file", 
                "__sprintf_chk", 
                "memcpy", 
                "apr_file_mtime_set", 
                "PEM_read_bio_PrivateKey", 
                "json_integer", 
                "CRYPTO_THREADID_get_callback", 
                "ap_auth_type", 
                "BN_bin2bn", 
                "apr_time_now", 
                "BIO_new", 
                "apr_array_make", 
                "apr_hash_make", 
                "EVP_aes_128_cbc", 
                "EVP_CIPHER_CTX_cleanup", 
                "curl_easy_cleanup", 
                "_Jv_RegisterClasses", 
                "CRYPTO_THREADID_set_numeric", 
                "curl_slist_free_all", 
                "apr_memcache_server_create", 
                "X509_get_pubkey", 
                "apr_is_empty_table", 
                "apr_thread_mutex_lock", 
                "EVP_DigestInit_ex", 
                "AES_unwrap_key", 
                "EVP_sha256", 
                "curl_easy_perform", 
                "curl_free", 
                "BIO_free", 
                "apr_pool_userdata_set", 
                "__ctype_toupper_loc", 
                "ap_get_server_name", 
                "apr_table_do", 
                "apr_file_read_full", 
                "ap_hook_fixups", 
                "ap_pass_brigade", 
                "EVP_get_digestbyname", 
                "apr_file_lock", 
                "json_object_get", 
                "apr_strerror", 
                "PEM_read_bio_X509_AUX", 
                "apr_bucket_eos_create", 
                "strtol", 
                "EVP_CIPHER_CTX_ctrl", 
                "json_object", 
                "apr_generate_random_bytes", 
                "BIO_s_mem", 
                "RSA_public_decrypt", 
                "EC_KEY_new", 
                "json_dumps", 
                "apr_dir_open", 
                "apr_hash_this", 
                "json_pack", 
                "apr_temp_dir_get", 
                "apr_sha1_update", 
                "ap_getword", 
                "ap_set_int_slot", 
                "BIO_puts", 
                "apr_base64_encode", 
                "strcpy", 
                "EVP_PKEY_get1_RSA", 
                "EC_KEY_set_public_key_affine_coordinates", 
                "BN_num_bits", 
                "HMAC", 
                "apr_thread_mutex_unlock", 
                "apr_file_seek", 
                "apr_table_make", 
                "curl_slist_append", 
                "EVP_aes_128_gcm", 
                "OpenSSL_add_all_digests", 
                "EVP_aes_192_cbc", 
                "EVP_DigestUpdate", 
                "SHA1", 
                "ap_unescape_url", 
                "json_object_iter", 
                "apr_file_remove", 
                "_ITM_registerTMCloneTable", 
                "ap_log_rerror_", 
                "json_array", 
                "apr_table_get", 
                "apr_pstrndup", 
                "ap_log_error_", 
                "apr_table_overlay", 
                "EVP_DigestFinal_ex", 
                "EVP_MD_CTX_init", 
                "apr_pool_userdata_get", 
                "ap_register_auth_provider", 
                "apr_hash_overlay", 
                "EVP_sha512", 
                "RSA_verify_PKCS1_PSS", 
                "apr_memcache_add_server", 
                "apr_base64_decode", 
                "apr_file_unlock", 
                "apr_sha1_final", 
                "ap_setup_client_block", 
                "apr_memcache_create", 
                "ap_is_initial_req", 
                "json_delete", 
                "apr_shm_destroy", 
                "apr_pstrcat"
            ], 
            "rpm": "mod_auth_openidc-1.8.8-3.el7.x86_64.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2raid_so": {
            "report-functions": [
                "dmeventd_lvm2_init", 
                "dm_get_next_target", 
                "dmeventd_lvm2_unlock", 
                "dmeventd_lvm2_exit", 
                "__cxa_finalize", 
                "__syslog_chk", 
                "__stack_chk_fail", 
                "strchr", 
                "dm_task_get_name", 
                "strcmp", 
                "dmeventd_lvm2_run", 
                "dmeventd_lvm2_pool", 
                "__gmon_start__", 
                "dm_split_words", 
                "strtol", 
                "dmeventd_lvm2_command", 
                "dmeventd_lvm2_lock", 
                "_Jv_RegisterClasses"
            ], 
            "rpm": "mod_auth_openidc-1.8.8-3.el7.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2raid.so"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2thin_so": {
            "report-functions": [
                "dmeventd_lvm2_lock", 
                "dmeventd_lvm2_init", 
                "dmeventd_lvm2_command", 
                "dm_pool_free", 
                "dm_task_no_open_count", 
                "__syslog_chk", 
                "dm_task_destroy", 
                "dm_task_get_names", 
                "waitpid", 
                "__cxa_finalize", 
                "dm_task_create", 
                "strerror", 
                "dmeventd_lvm2_unlock", 
                "dm_pool_create", 
                "dm_task_get_deps", 
                "dm_bitset_create", 
                "__errno_location", 
                "dm_get_status_thin_pool", 
                "dm_pool_destroy", 
                "fork", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "dm_task_get_info", 
                "execvp", 
                "dmeventd_lvm2_exit", 
                "dm_task_get_name", 
                "dm_task_set_name", 
                "dmeventd_lvm2_run", 
                "exit", 
                "__stack_chk_fail", 
                "dm_bitset_destroy", 
                "_Jv_RegisterClasses", 
                "dm_mountinfo_read", 
                "dm_get_next_target", 
                "dm_pool_zalloc"
            ], 
            "rpm": "mod_auth_openidc-1.8.8-3.el7.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2thin.so"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2mirror_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2mirror.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "dmeventd_lvm2_exit", 
                "dmeventd_lvm2_run", 
                "strchr", 
                "dm_split_words", 
                "dm_free_wrapper", 
                "__syslog_chk", 
                "_ITM_deregisterTMCloneTable", 
                "strtol", 
                "dmeventd_lvm2_unlock", 
                "_Jv_RegisterClasses", 
                "strcmp", 
                "dmeventd_lvm2_lock", 
                "dm_task_get_name", 
                "_ITM_registerTMCloneTable", 
                "dmeventd_lvm2_pool", 
                "dmeventd_lvm2_init", 
                "__cxa_finalize", 
                "dm_malloc_wrapper", 
                "dm_get_next_target", 
                "dmeventd_lvm2_command", 
                "__stack_chk_fail"
            ], 
            "rpm": "mod_auth_openidc-1.8.8-3.el7.x86_64.rpm"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2raid_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2raid.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "dmeventd_lvm2_run", 
                "_ITM_registerTMCloneTable", 
                "__syslog_chk", 
                "dmeventd_lvm2_command", 
                "_Jv_RegisterClasses", 
                "dm_task_get_name", 
                "dmeventd_lvm2_pool", 
                "dmeventd_lvm2_exit", 
                "__cxa_finalize", 
                "dmeventd_lvm2_lock", 
                "__gmon_start__", 
                "dm_split_words", 
                "strcmp", 
                "dmeventd_lvm2_init", 
                "__stack_chk_fail", 
                "dm_get_next_target", 
                "_ITM_deregisterTMCloneTable", 
                "strchr"
            ], 
            "rpm": "mod_auth_openidc-1.8.8-3.el7.x86_64.rpm"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2thin_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2thin.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "strerror", 
                "__gmon_start__", 
                "dm_pool_destroy", 
                "dmeventd_lvm2_init", 
                "dm_task_run", 
                "dm_bitset_destroy", 
                "dm_pool_create", 
                "dm_bitset_create", 
                "dmeventd_lvm2_command", 
                "dmeventd_lvm2_lock", 
                "dm_get_next_target", 
                "exit", 
                "_ITM_deregisterTMCloneTable", 
                "waitpid", 
                "dm_get_status_thin_pool", 
                "dm_pool_free", 
                "dm_task_destroy", 
                "dm_task_set_name", 
                "dm_task_get_info", 
                "dm_pool_zalloc", 
                "_ITM_registerTMCloneTable", 
                "dm_task_get_deps", 
                "dm_task_get_name", 
                "fork", 
                "dm_task_no_open_count", 
                "__errno_location", 
                "dmeventd_lvm2_unlock", 
                "dm_task_get_names", 
                "__cxa_finalize", 
                "dm_mountinfo_read", 
                "__stack_chk_fail", 
                "_Jv_RegisterClasses", 
                "dmeventd_lvm2_exit", 
                "dm_task_create", 
                "dmeventd_lvm2_run"
            ], 
            "rpm": "mod_auth_openidc-1.8.8-3.el7.x86_64.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2snapshot_so": {
            "report-functions": [
                "dmeventd_lvm2_exit", 
                "dmeventd_lvm2_init", 
                "dm_task_get_name", 
                "__errno_location", 
                "dm_task_get_info", 
                "waitpid", 
                "__syslog_chk", 
                "dm_get_next_target", 
                "execvp", 
                "_ITM_registerTMCloneTable", 
                "dm_get_status_snapshot", 
                "dmeventd_lvm2_run", 
                "fclose", 
                "strerror", 
                "dmeventd_lvm2_unlock", 
                "dmeventd_lvm2_command", 
                "dm_pool_free", 
                "dm_pool_zalloc", 
                "dm_pool_destroy", 
                "__gmon_start__", 
                "dmeventd_lvm2_lock", 
                "exit", 
                "__stack_chk_fail", 
                "fopen64", 
                "feof", 
                "fgets", 
                "fork", 
                "dm_pool_create", 
                "_Jv_RegisterClasses", 
                "__xstat64", 
                "dm_split_words"
            ], 
            "rpm": "mod_auth_openidc-1.8.8-3.el7.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2snapshot.so"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2snapshot_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2snapshot.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__stack_chk_fail", 
                "__syslog_chk", 
                "fclose", 
                "dmeventd_lvm2_lock", 
                "dm_pool_destroy", 
                "dmeventd_lvm2_init", 
                "dm_get_next_target", 
                "fork", 
                "dmeventd_lvm2_unlock", 
                "dm_task_get_name", 
                "fgets", 
                "dm_task_get_info", 
                "dm_pool_create", 
                "dmeventd_lvm2_exit", 
                "exit", 
                "dmeventd_lvm2_run", 
                "dm_get_status_snapshot", 
                "execvp", 
                "dm_pool_zalloc", 
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "fopen64", 
                "__xstat64", 
                "dm_pool_free", 
                "dmeventd_lvm2_command", 
                "waitpid", 
                "dm_split_words", 
                "_Jv_RegisterClasses", 
                "__errno_location", 
                "__cxa_finalize"
            ], 
            "rpm": "mod_auth_openidc-1.8.8-3.el7.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Version": " 1.8.8", 
            "Name": " mod_auth_openidc", 
            "License": " ASL 2.0", 
            "URL": " https://github.com/pingidentity/mod_auth_openidc", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " x86-034.build.eng.bos.redhat.com", 
            "Description": "\nThis module enables an Apache 2.x web server to operate as\nan OpenID Connect Relying Party and/or OAuth 2.0 Resource Server.\n", 
            "Build Date": " Thu 31 Mar 2016 06:22:07 PM EDT", 
            "Vendor": " Red Hat, Inc.", 
            "Source RPM": " mod_auth_openidc-1.8.8-3.el7.src.rpm", 
            "warning": " /home/jason/fctl/swap/2/mod_auth_openidc-1.8.8-3.el7.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID fd431d51: NOKEY", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Mon 12 Sep 2016 09:00:06 AM EDT, Key ID 199e2f91fd431d51", 
            "Release": " 3.el7", 
            "Group": " System Environment/Daemons", 
            "Packager": " Red Hat, Inc. <http://bugzilla.redhat.com/bugzilla>", 
            "Summary": " OpenID Connect auth module for Apache HTTP Server", 
            "Size": " 371531"
        }
    }
}