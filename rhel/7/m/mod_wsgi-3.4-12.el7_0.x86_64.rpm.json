{
    "results": {
        "usr/lib/device-mapper/libdevmapper-event-lvm2mirror_so": {
            "report-functions": [
                "dmeventd_lvm2_pool", 
                "dmeventd_lvm2_run", 
                "__syslog_chk", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "_Jv_RegisterClasses", 
                "dm_free_wrapper", 
                "strchr", 
                "dmeventd_lvm2_command", 
                "strcmp", 
                "dmeventd_lvm2_lock", 
                "strtol", 
                "strlen", 
                "__cxa_finalize", 
                "dmeventd_lvm2_exit", 
                "dmeventd_lvm2_init", 
                "dm_split_words", 
                "dm_task_get_name", 
                "dm_malloc_wrapper", 
                "dmeventd_lvm2_unlock", 
                "__stack_chk_fail"
            ], 
            "rpm": "mod_wsgi-3.4-12.el7_0.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2mirror.so"
        }, 
        "usr/lib64/httpd/modules/mod_wsgi_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/httpd/modules/mod_wsgi.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "apr_socket_close", 
                "apr_brigade_destroy", 
                "PyErr_SetString", 
                "PyEval_InitThreads", 
                "PyParser_SimpleParseFileFlags", 
                "Py_Finalize", 
                "strcasecmp", 
                "ap_mpm_query", 
                "apr_bucket_file_create", 
                "apr_thread_join", 
                "__gmon_start__", 
                "kill", 
                "PyTuple_GetItem", 
                "PyEval_AcquireLock", 
                "apr_thread_mutex_unlock", 
                "Py_BuildValue", 
                "ap_lingering_close", 
                "apr_table_elts", 
                "ap_allow_options", 
                "PyList_SetSlice", 
                "exit", 
                "apr_itoa", 
                "PyEval_SaveThread", 
                "apr_thread_cond_signal", 
                "apr_poll", 
                "apr_array_cat", 
                "apr_pstrndup", 
                "apr_os_sock_put", 
                "apr_file_pipe_timeout_set", 
                "ap_add_input_filter_handle", 
                "setlocale", 
                "apr_atomic_cas32", 
                "ap_make_method_list", 
                "strlen", 
                "apr_proc_other_child_unregister", 
                "apr_pollset_add", 
                "apr_thread_mutex_create", 
                "ap_create_request_config", 
                "PyLong_FromLongLong", 
                "apr_threadkey_private_get", 
                "ap_unixd_config", 
                "apr_atoi64", 
                "apr_os_proc_mutex_get", 
                "PyImport_AddModule", 
                "write", 
                "apr_hash_make", 
                "apr_threadattr_detach_set", 
                "apr_array_push", 
                "setsockopt", 
                "apr_palloc", 
                "apr_brigade_writev", 
                "ap_add_output_filter_handle", 
                "Py_SetPythonHome", 
                "ap_log_error_", 
                "__errno_location", 
                "ap_hook_translate_name", 
                "PyDict_DelItemString", 
                "PyArg_ParseTuple", 
                "ap_get_server_name", 
                "__strncat_chk", 
                "PySys_SetObject", 
                "realloc", 
                "chown", 
                "fclose", 
                "apr_pool_note_subprocess", 
                "ap_get_server_banner", 
                "ap_add_version_component", 
                "PyErr_Occurred", 
                "unlink", 
                "ap_pregsub", 
                "apr_file_pipe_create", 
                "apr_signal", 
                "apr_bucket_type_flush", 
                "apr_proc_mutex_lock", 
                "apr_hash_get", 
                "_PyObject_New", 
                "ap_coredumpdir_configured", 
                "prctl", 
                "sleep", 
                "ap_add_common_vars", 
                "apr_os_file_put", 
                "strcmp", 
                "ap_close_listeners", 
                "ap_scan_script_header_err_brigade", 
                "__strdup", 
                "apr_pool_cleanup_register", 
                "chroot", 
                "memchr", 
                "ap_uname2id", 
                "apr_table_overlay", 
                "ap_hook_handler", 
                "connect", 
                "apr_array_append", 
                "bind", 
                "memset", 
                "close", 
                "PyGILState_Ensure", 
                "apr_is_empty_table", 
                "__ctype_toupper_loc", 
                "PyThreadState_Clear", 
                "PyObject_SetItem", 
                "PyImport_ExecCodeModuleEx", 
                "PyString_FromString", 
                "setuid", 
                "ap_update_vhost_given_ip", 
                "ap_get_limit_req_body", 
                "PyErr_Clear", 
                "PyObject_AsFileDescriptor", 
                "ap_pass_brigade", 
                "apr_cpystrn", 
                "apr_pool_create_ex", 
                "setgid", 
                "apr_table_add", 
                "ap_get_brigade", 
                "ap_gname2id", 
                "apr_file_info_get", 
                "PyType_Ready", 
                "apr_bucket_transient_create", 
                "apr_file_close", 
                "apr_socket_accept", 
                "apr_table_get", 
                "PyInterpreterState_Head", 
                "ap_listeners", 
                "PyString_FromStringAndSize", 
                "apr_file_dup2", 
                "PyErr_SetObject", 
                "apr_brigade_write", 
                "apr_thread_create", 
                "PyTuple_Pack", 
                "PyEval_AcquireThread", 
                "PyLong_FromLong", 
                "memcpy", 
                "apr_table_make", 
                "PyThreadState_New", 
                "Py_EndInterpreter", 
                "apr_pool_cleanup_null", 
                "setrlimit", 
                "apr_pstrmemdup", 
                "ap_get_remote_host", 
                "apr_array_make", 
                "strchr", 
                "ap_discard_request_body", 
                "PyImport_ImportModule", 
                "ap_md5", 
                "apr_sockaddr_ip_get", 
                "ap_server_root_relative", 
                "apr_proc_mutex_unlock", 
                "umask", 
                "apr_psprintf", 
                "PyDict_SetItemString", 
                "apr_thread_mutex_lock", 
                "PyNode_Free", 
                "_ITM_registerTMCloneTable", 
                "PyErr_Fetch", 
                "ap_pregcomp", 
                "PyString_Size", 
                "fopen", 
                "PyErr_ExceptionMatches", 
                "ap_finalize_request_protocol", 
                "ap_add_cgi_vars", 
                "ap_should_client_block", 
                "getenv", 
                "PyEval_ReleaseThread", 
                "geteuid", 
                "apr_file_write_full", 
                "ap_log_rerror_", 
                "apr_proc_fork", 
                "PyEval_RestoreThread", 
                "ap_satisfies", 
                "PyBool_FromLong", 
                "ap_escape_html2", 
                "apr_os_pipe_put_ex", 
                "ap_core_output_filter_handle", 
                "ap_hook_child_init", 
                "_Jv_RegisterClasses", 
                "PyList_Size", 
                "setgroups", 
                "getpid", 
                "ap_getword_conf", 
                "ap_set_content_length", 
                "PyList_New", 
                "PyErr_NormalizeException", 
                "listen", 
                "PyModule_GetDict", 
                "ap_internal_redirect_handler", 
                "apr_file_seek", 
                "apr_stat", 
                "apr_pollset_poll", 
                "PyGILState_Release", 
                "socket", 
                "sysconf", 
                "_ITM_deregisterTMCloneTable", 
                "apr_hash_overlay", 
                "setpriority", 
                "apr_socket_recv", 
                "apr_off_t_toa", 
                "apr_pmemdup", 
                "apr_pstrcat", 
                "apr_bucket_pipe_create", 
                "apr_table_set", 
                "apr_bucket_flush_create", 
                "PyEval_CallObjectWithKeywords", 
                "apr_brigade_cleanup", 
                "apr_thread_cond_create", 
                "__sprintf_chk", 
                "apr_brigade_create", 
                "PyDict_GetItemString", 
                "apr_pool_userdata_get", 
                "strtol", 
                "apr_thread_cond_wait", 
                "apr_dynamic_fn_retrieve", 
                "apr_pool_userdata_set", 
                "semctl", 
                "PySequence_Contains", 
                "apr_pstrdup", 
                "PyThreadState_Swap", 
                "ap_document_root", 
                "PySys_AddWarnOption", 
                "ap_check_cmd_context", 
                "apr_table_setn", 
                "strstr", 
                "apr_file_flush", 
                "apr_thread_pool_get", 
                "ap_register_provider", 
                "PyObject_GetIter", 
                "apr_socket_addr_get", 
                "apr_threadattr_create", 
                "apr_pool_destroy", 
                "PyLong_AsLongLong", 
                "PyCObject_FromVoidPtr", 
                "ap_add_input_filter", 
                "shutdown", 
                "PyDict_Clear", 
                "ap_get_server_port", 
                "PyEval_ReleaseLock", 
                "apr_dynamic_fn_register", 
                "PyObject_Free", 
                "PySequence_DelItem", 
                "apr_table_unset", 
                "__cxa_finalize", 
                "Py_NewInterpreter", 
                "__stack_chk_fail", 
                "ap_create_conn_config", 
                "apr_bucket_type_eos", 
                "ap_make_dirstr_parent", 
                "PyList_GetItem", 
                "apr_thread_exit", 
                "ap_setup_client_block", 
                "PyObject_IsTrue", 
                "apr_hash_set", 
                "PyErr_Format", 
                "ap_no2slash", 
                "ap_hook_access_checker", 
                "ap_psignature", 
                "ap_getword", 
                "ap_remove_input_filter", 
                "apr_bucket_eos_create", 
                "ap_hook_post_config", 
                "ap_update_vhost_from_headers", 
                "ap_some_auth_required", 
                "PySequence_Index", 
                "ap_get_client_block", 
                "malloc", 
                "apr_file_write", 
                "apr_pollset_create", 
                "getpwuid", 
                "apr_file_pipe_timeout_get", 
                "apr_proc_other_child_register", 
                "PyErr_Restore", 
                "Py_IsInitialized", 
                "PyInt_AsLong", 
                "PyThreadState_Delete", 
                "apr_file_open_stderr", 
                "PyDict_New", 
                "PyNode_Compile", 
                "PyThreadState_Get", 
                "Py_Initialize", 
                "apr_pool_cleanup_kill", 
                "PyObject_HasAttrString", 
                "PyIter_Next", 
                "apr_threadattr_stacksize_set", 
                "apr_threadkey_private_create", 
                "apr_sleep", 
                "PyInt_FromLong", 
                "apr_threadkey_private_set", 
                "PySys_GetObject", 
                "__ctype_b_loc", 
                "random", 
                "apr_proc_mutex_name", 
                "ap_str_tolower", 
                "initgroups", 
                "apr_proc_mutex_child_init", 
                "putenv", 
                "PyString_AsString", 
                "PyTuple_New", 
                "PyOS_AfterFork", 
                "PyModule_AddObject", 
                "apr_time_now", 
                "Py_GetVersion", 
                "core_module", 
                "PyCodec_Encoder", 
                "ap_regexec", 
                "PyCFunction_NewEx", 
                "_PyString_Resize", 
                "ap_register_output_filter", 
                "strtok", 
                "PyImport_GetModuleDict", 
                "ap_core_input_filter_handle", 
                "PyList_Append", 
                "getgrgid", 
                "PyErr_Print", 
                "apr_bucket_alloc_create", 
                "chdir", 
                "free", 
                "ap_remove_output_filter", 
                "apr_socket_timeout_set", 
                "PyObject_GetAttrString", 
                "apr_proc_mutex_create"
            ], 
            "rpm": "mod_wsgi-3.4-12.el7_0.x86_64.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2raid_so": {
            "report-functions": [
                "__cxa_finalize", 
                "strtol", 
                "_ITM_registerTMCloneTable", 
                "strchr", 
                "__gmon_start__", 
                "__stack_chk_fail", 
                "__syslog_chk", 
                "dm_get_next_target", 
                "_Jv_RegisterClasses", 
                "dmeventd_lvm2_init", 
                "dm_task_get_name", 
                "dmeventd_lvm2_exit", 
                "dmeventd_lvm2_unlock", 
                "dmeventd_lvm2_run", 
                "strcmp", 
                "dmeventd_lvm2_pool", 
                "dmeventd_lvm2_command", 
                "dmeventd_lvm2_lock"
            ], 
            "rpm": "mod_wsgi-3.4-12.el7_0.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2raid.so"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2thin_so": {
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "dmeventd_lvm2_lock", 
                "dm_mountinfo_read", 
                "dm_get_status_thin_pool", 
                "__gmon_start__", 
                "dm_get_next_target", 
                "dmeventd_lvm2_run", 
                "dm_task_no_open_count", 
                "dm_pool_create", 
                "__syslog_chk", 
                "execvp", 
                "dm_task_get_name", 
                "waitpid", 
                "dm_task_destroy", 
                "dm_task_set_name", 
                "dmeventd_lvm2_exit", 
                "dm_pool_destroy", 
                "dm_task_create", 
                "_Jv_RegisterClasses", 
                "__stack_chk_fail", 
                "dm_task_get_names", 
                "dm_pool_free", 
                "__cxa_finalize", 
                "dm_bitset_create", 
                "dmeventd_lvm2_init", 
                "exit", 
                "_ITM_deregisterTMCloneTable", 
                "dmeventd_lvm2_command", 
                "dmeventd_lvm2_unlock", 
                "fork", 
                "dm_task_get_info", 
                "dm_bitset_destroy", 
                "__errno_location", 
                "dm_task_get_deps", 
                "dm_task_run"
            ], 
            "rpm": "mod_wsgi-3.4-12.el7_0.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2thin.so"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2mirror_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2mirror.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "dmeventd_lvm2_command", 
                "strchr", 
                "dm_malloc_wrapper", 
                "__stack_chk_fail", 
                "dm_get_next_target", 
                "__syslog_chk", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "strlen", 
                "_Jv_RegisterClasses", 
                "strcmp", 
                "dmeventd_lvm2_unlock", 
                "strtol", 
                "dmeventd_lvm2_init", 
                "dmeventd_lvm2_lock", 
                "dm_task_get_name", 
                "_ITM_registerTMCloneTable", 
                "dm_free_wrapper", 
                "dmeventd_lvm2_exit", 
                "dmeventd_lvm2_pool", 
                "dm_split_words"
            ], 
            "rpm": "mod_wsgi-3.4-12.el7_0.x86_64.rpm"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2raid_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2raid.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "strcmp", 
                "_ITM_registerTMCloneTable", 
                "__stack_chk_fail", 
                "_ITM_deregisterTMCloneTable", 
                "dmeventd_lvm2_command", 
                "dmeventd_lvm2_lock", 
                "__gmon_start__", 
                "dmeventd_lvm2_run", 
                "dm_get_next_target", 
                "dm_task_get_name", 
                "dmeventd_lvm2_init", 
                "dmeventd_lvm2_pool", 
                "dm_split_words", 
                "__cxa_finalize", 
                "strchr", 
                "strtol", 
                "_Jv_RegisterClasses", 
                "dmeventd_lvm2_unlock"
            ], 
            "rpm": "mod_wsgi-3.4-12.el7_0.x86_64.rpm"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2thin_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2thin.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "strerror", 
                "dm_get_next_target", 
                "_ITM_registerTMCloneTable", 
                "dm_pool_create", 
                "dm_task_create", 
                "__cxa_finalize", 
                "dm_task_run", 
                "_ITM_deregisterTMCloneTable", 
                "waitpid", 
                "execvp", 
                "dm_get_status_thin_pool", 
                "__syslog_chk", 
                "__gmon_start__", 
                "dmeventd_lvm2_unlock", 
                "dm_task_get_name", 
                "dmeventd_lvm2_command", 
                "dm_task_destroy", 
                "dmeventd_lvm2_exit", 
                "dm_task_no_open_count", 
                "dm_bitset_create", 
                "fork", 
                "dm_pool_free", 
                "__errno_location", 
                "dm_pool_zalloc", 
                "dm_task_get_deps", 
                "__stack_chk_fail", 
                "dm_mountinfo_read", 
                "_Jv_RegisterClasses", 
                "dmeventd_lvm2_init", 
                "dmeventd_lvm2_run", 
                "dm_task_set_name", 
                "dmeventd_lvm2_lock", 
                "dm_task_get_info", 
                "dm_pool_destroy", 
                "dm_task_get_names"
            ], 
            "rpm": "mod_wsgi-3.4-12.el7_0.x86_64.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2snapshot_so": {
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "exit", 
                "dm_pool_create", 
                "_Jv_RegisterClasses", 
                "dm_task_get_name", 
                "dmeventd_lvm2_unlock", 
                "feof", 
                "fgets", 
                "waitpid", 
                "dm_pool_free", 
                "dm_pool_zalloc", 
                "_ITM_registerTMCloneTable", 
                "__stack_chk_fail", 
                "execvp", 
                "fork", 
                "__xstat64", 
                "__gmon_start__", 
                "__syslog_chk", 
                "dm_task_get_info", 
                "dmeventd_lvm2_command", 
                "dmeventd_lvm2_exit", 
                "dmeventd_lvm2_init", 
                "__errno_location", 
                "__cxa_finalize", 
                "dmeventd_lvm2_lock", 
                "dm_get_status_snapshot", 
                "fopen64", 
                "fclose", 
                "dmeventd_lvm2_run", 
                "dm_pool_destroy", 
                "dm_get_next_target"
            ], 
            "rpm": "mod_wsgi-3.4-12.el7_0.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2snapshot.so"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2snapshot_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2snapshot.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "dm_task_get_info", 
                "dmeventd_lvm2_exit", 
                "strerror", 
                "dm_pool_free", 
                "exit", 
                "__syslog_chk", 
                "dm_pool_zalloc", 
                "dmeventd_lvm2_init", 
                "feof", 
                "fork", 
                "__errno_location", 
                "fopen64", 
                "fclose", 
                "fgets", 
                "dmeventd_lvm2_unlock", 
                "__gmon_start__", 
                "dm_get_status_snapshot", 
                "__xstat64", 
                "dm_task_get_name", 
                "execvp", 
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize", 
                "dm_pool_create", 
                "dm_split_words", 
                "_ITM_deregisterTMCloneTable", 
                "_Jv_RegisterClasses", 
                "dm_get_next_target", 
                "waitpid", 
                "dmeventd_lvm2_command", 
                "dmeventd_lvm2_lock", 
                "dmeventd_lvm2_run"
            ], 
            "rpm": "mod_wsgi-3.4-12.el7_0.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Version": " 3.4", 
            "Name": " mod_wsgi", 
            "License": " ASL 2.0", 
            "URL": " http://modwsgi.org", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " x86-017.build.eng.bos.redhat.com", 
            "Description": "\nThe mod_wsgi adapter is an Apache module that provides a WSGI compliant\ninterface for hosting Python based web applications within Apache. The\nadapter is written completely in C code against the Apache C runtime and\nfor hosting WSGI applications within Apache has a lower overhead than using\nexisting WSGI adapters for mod_python or CGI.\n", 
            "Build Date": " Tue 19 Aug 2014 07:38:02 AM EDT", 
            "Vendor": " Red Hat, Inc.", 
            "Source RPM": " mod_wsgi-3.4-12.el7_0.src.rpm", 
            "warning": " /home/jason/fctl/swap/2/mod_wsgi-3.4-12.el7_0.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID fd431d51: NOKEY", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Thu 21 Aug 2014 05:00:24 AM EDT, Key ID 199e2f91fd431d51", 
            "Release": " 12.el7_0", 
            "Group": " System Environment/Libraries", 
            "Packager": " Red Hat, Inc. <http://bugzilla.redhat.com/bugzilla>", 
            "Summary": " A WSGI interface for Python web applications in Apache", 
            "Size": " 202160"
        }
    }
}