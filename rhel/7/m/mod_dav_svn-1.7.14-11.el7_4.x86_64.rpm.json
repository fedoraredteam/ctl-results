{
    "results": {
        "usr/lib/device-mapper/libdevmapper-event-lvm2mirror_so": {
            "report-functions": [
                "dm_split_words", 
                "__gmon_start__", 
                "__cxa_finalize", 
                "dmeventd_lvm2_init", 
                "_Jv_RegisterClasses", 
                "dmeventd_lvm2_unlock", 
                "strlen", 
                "strtol", 
                "dm_get_next_target", 
                "dmeventd_lvm2_command", 
                "dm_task_get_name", 
                "dmeventd_lvm2_exit", 
                "__syslog_chk", 
                "dm_free_wrapper", 
                "__stack_chk_fail", 
                "strcmp", 
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable", 
                "strchr", 
                "dmeventd_lvm2_pool", 
                "dm_malloc_wrapper"
            ], 
            "rpm": "mod_dav_svn-1.7.14-11.el7_4.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2mirror.so"
        }, 
        "usr/lib64/httpd/modules/mod_authz_svn_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/httpd/modules/mod_authz_svn.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "__ctype_tolower_loc", 
                "apr_uri_parse", 
                "dav_svn_get_repos_path", 
                "ap_register_provider", 
                "_Jv_RegisterClasses", 
                "svn_dirent_join_many", 
                "__ctype_toupper_loc", 
                "svn_urlpath__canonicalize", 
                "ap_log_rerror_", 
                "ap_unescape_url", 
                "apr_table_unset", 
                "svn_repos_authz_read", 
                "ap_note_auth_failure", 
                "apr_palloc", 
                "apr_pstrdup", 
                "ap_satisfies", 
                "apr_table_setn", 
                "ap_set_flag_slot", 
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "svn_fspath__canonicalize", 
                "apr_table_get", 
                "svn_repos_authz_check_access", 
                "strlen", 
                "ap_server_root_relative", 
                "apr_pool_destroy", 
                "apr_pool_userdata_set", 
                "svn_pool_create_ex", 
                "apr_pstrcat", 
                "ap_set_string_slot", 
                "strcmp", 
                "ap_hook_access_checker", 
                "ap_hook_force_authn", 
                "svn_error_clear", 
                "__cxa_finalize", 
                "ap_hook_auth_checker", 
                "ap_hook_check_user_id", 
                "ap_auth_type", 
                "strncmp", 
                "apr_pool_userdata_get", 
                "ap_some_authn_required", 
                "strcasecmp", 
                "dav_svn_split_uri"
            ], 
            "rpm": "mod_dav_svn-1.7.14-11.el7_4.x86_64.rpm"
        }, 
        "usr/lib64/httpd/modules/mod_dontdothat_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/httpd/modules/mod_dontdothat.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "strchr", 
                "apr_uri_parse", 
                "apr_array_make", 
                "apr_pool_cleanup_null", 
                "apr_pool_cleanup_register", 
                "ap_get_brigade", 
                "ap_register_input_filter", 
                "__cxa_finalize", 
                "svn_stringbuf_strip_whitespace", 
                "svn_error_createf", 
                "XML_Parse", 
                "dav_svn_split_uri", 
                "svn_error_clear", 
                "svn_stringbuf_ncreate", 
                "svn_path_is_url", 
                "XML_SetUserData", 
                "ap_add_input_filter", 
                "ap_remove_input_filter", 
                "ap_pass_brigade", 
                "_ITM_deregisterTMCloneTable", 
                "XML_ParserFree", 
                "ap_set_flag_slot", 
                "XML_ParserCreate", 
                "ap_bucket_error_create", 
                "svn_err_best_message", 
                "apr_brigade_create", 
                "_Jv_RegisterClasses", 
                "svn_config_read", 
                "ap_hook_insert_filter", 
                "svn_fspath__canonicalize", 
                "abort", 
                "XML_SetElementHandler", 
                "ap_log_rerror_", 
                "XML_SetCharacterDataHandler", 
                "apr_bucket_eos_create", 
                "_ITM_registerTMCloneTable", 
                "__stack_chk_fail", 
                "apr_array_push", 
                "__gmon_start__", 
                "apr_palloc", 
                "svn_config_enumerate2"
            ], 
            "rpm": "mod_dav_svn-1.7.14-11.el7_4.x86_64.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2raid_so": {
            "report-functions": [
                "dm_get_next_target", 
                "dmeventd_lvm2_pool", 
                "dmeventd_lvm2_unlock", 
                "dmeventd_lvm2_init", 
                "__stack_chk_fail", 
                "dmeventd_lvm2_lock", 
                "dm_split_words", 
                "strtol", 
                "dmeventd_lvm2_exit", 
                "strcmp", 
                "dmeventd_lvm2_run", 
                "__gmon_start__", 
                "dmeventd_lvm2_command", 
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable", 
                "__syslog_chk", 
                "strchr", 
                "dm_task_get_name"
            ], 
            "rpm": "mod_dav_svn-1.7.14-11.el7_4.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2raid.so"
        }, 
        "usr/lib64/httpd/modules/mod_dav_svn_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/httpd/modules/mod_dav_svn.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "dav_push_error", 
                "ap_fflush", 
                "svn_fs_node_created_rev", 
                "svn_string_create", 
                "apr_table_make", 
                "__cxa_finalize", 
                "apr_bucket_pool_create", 
                "svn_repos_fs_change_txn_prop", 
                "svn_stringbuf_appendbytes", 
                "svn_uri_is_canonical", 
                "ap_filter_flush", 
                "dav_xml_get_cdata", 
                "apr_pool_create_ex", 
                "svn_io_file_close", 
                "ap_hook_translate_name", 
                "svn_lock_create", 
                "ap_get_token", 
                "apr_brigade_create", 
                "ap_rprintf", 
                "dav_hook_find_liveprop", 
                "svn_log__get_dir", 
                "svn_repos_set_path3", 
                "svn_fs_make_dir", 
                "ap_log_error_", 
                "svn_dirent_dirname", 
                "svn_base64_decode_string", 
                "svn_log__change_rev_prop", 
                "apr_xml_quote_string", 
                "svn_fs_file_contents", 
                "svn_fspath__basename", 
                "ap_register_input_filter", 
                "svn_fs_txn_proplist", 
                "apr_xml_parser_geterror", 
                "_Jv_RegisterClasses", 
                "svn_repos_fs", 
                "svn_checksum_to_cstring", 
                "apr_xml_parser_feed", 
                "svn_relpath_join", 
                "apr_hash_first", 
                "apr_xml_to_text", 
                "svn_repos_fs_get_mergeinfo", 
                "apr_xml_parser_done", 
                "apr_hash_set", 
                "svn_txdelta_parse_svndiff", 
                "svn_fs_node_id", 
                "svn_stringbuf_appendcstr", 
                "svn_fs_history_prev", 
                "ap_add_output_filter", 
                "svn_log__rev_proplist", 
                "svn_skel__matches_atom", 
                "svn_base64_encode", 
                "svn_stringbuf_createf", 
                "ap_add_version_component", 
                "apr_bucket_eos_create", 
                "qsort", 
                "svn_fs_get_file_delta_stream", 
                "svn_stream_set_write", 
                "svn_error_purge_tracing", 
                "svn_fs_copy", 
                "svn_fs_deltify_revision", 
                "ap_log_perror_", 
                "apr_pool_destroy", 
                "ap_rwrite", 
                "ap_psignature", 
                "apr_pstrdup", 
                "apr_brigade_write", 
                "svn_error__malfunction", 
                "svn_io_remove_file2", 
                "svn_repos_fs_change_node_prop", 
                "svn_repos_fs_revision_prop", 
                "memcmp", 
                "strlen", 
                "ap_hook_pre_config", 
                "apr_strmatch_precompile", 
                "apr_hash_this", 
                "ap_stripprefix", 
                "svn_stringbuf_create_ensure", 
                "dav_hook_gather_propsets", 
                "svn_dso_initialize2", 
                "svn_log__log", 
                "apr_palloc", 
                "svn_path_is_url", 
                "svn_repos_delete_path", 
                "svn_io_read_length_line", 
                "ap_fprintf", 
                "apr_brigade_vprintf", 
                "svn_string_compare", 
                "apr_is_empty_array", 
                "svn_error_createf", 
                "svn_fs_txn_root", 
                "svn_delta_default_editor", 
                "apr_pool_userdata_get", 
                "svn_skel__parse", 
                "__stack_chk_fail", 
                "svn_log__status", 
                "apr_uri_parse", 
                "svn_fs_node_prop", 
                "svn_log__get_file", 
                "svn_node_kind_to_word", 
                "svn_checksum", 
                "ap_os_escape_path", 
                "svn_stream_set_close", 
                "svn_uri_canonicalize", 
                "svn_repos_trace_node_locations", 
                "svn_dirent_internal_style", 
                "svn_error_wrap_apr", 
                "__gmon_start__", 
                "ap_fputstrs", 
                "ap_set_content_length", 
                "svn_cstring_strtoi64", 
                "svn_fs_create_access", 
                "svn_fs_initialize", 
                "dav_new_error", 
                "ap_remove_output_filter", 
                "svn_fs_access_add_lock_token2", 
                "apr_pstrmemdup", 
                "svn_error_quick_wrap", 
                "svn_fs_apply_textdelta", 
                "svn_cstring_match_list", 
                "apr_time_now", 
                "__errno_location", 
                "apr_brigade_cleanup", 
                "svn_path_uri_decode", 
                "svn_repos_get_logs4", 
                "svn_fs_root_fs", 
                "apr_table_setn", 
                "ap_get_brigade", 
                "svn_relpath_basename", 
                "svn_log__lock_one_path", 
                "svn_fs_path", 
                "svn_dirent_join", 
                "strtol", 
                "svn_depth_from_word", 
                "apr_pool_cleanup_register", 
                "ap_get_status_line", 
                "apr_array_push", 
                "ap_get_limit_req_body", 
                "svn_sort__hash", 
                "svn_log__commit", 
                "svn_path_remove_component", 
                "svn_urlpath__canonicalize", 
                "svn_relpath_is_canonical", 
                "svn_log__diff", 
                "apr_text_append", 
                "apr_pstrcat", 
                "ap_getparents", 
                "svn_xml_fuzzy_escape", 
                "svn_error_clear", 
                "strchr", 
                "svn_stringbuf_create", 
                "svn_cstring_atoi", 
                "svn_cstring_atoui64", 
                "svn_stringbuf_ncreate", 
                "svn_uuid_generate", 
                "apr_pool_userdata_set", 
                "dav_xmlns_add", 
                "svn_repos__post_commit_error_str", 
                "svn_fspath__join", 
                "apr_psprintf", 
                "svn_dirent_get_absolute", 
                "ap_set_last_modified", 
                "apr_hash_next", 
                "svn_repos_fs_commit_txn", 
                "apr_strnatcasecmp", 
                "svn_utf_initialize", 
                "svn_fs_abort_txn", 
                "ap_hook_fixups", 
                "apr_array_make", 
                "svn_repos_begin_report2", 
                "svn_pool_create_ex", 
                "svn_fs_set_warning_func", 
                "svn_repos_fs_get_locks2", 
                "svn_io_make_dir_recursively", 
                "svn_repos_fs_unlock", 
                "_ITM_registerTMCloneTable", 
                "svn_cache_config_get", 
                "svn_fs_change_txn_prop", 
                "ap_update_mtime", 
                "svn_xml_escape_cdata_string", 
                "ap_pass_brigade", 
                "svn_repos_get_file_revs2", 
                "apr_table_set", 
                "svn_cstring_split", 
                "svn_log__checkout", 
                "ap_construct_url", 
                "svn_fspath__skip_ancestor", 
                "svn_repos_dated_revision", 
                "svn_fs_youngest_rev", 
                "svn_stream_close", 
                "svn_fs_compare_ids", 
                "svn_repos__fs_type", 
                "svn_fs_dir_entries", 
                "svn_mergeinfo__remove_prefix_from_catalog", 
                "svn_fs_set_access", 
                "svn_repos_fs_begin_txn_for_commit2", 
                "svn_fs_generate_lock_token", 
                "svn_stringbuf_set", 
                "ap_hook_handler", 
                "svn_fs_get_lock", 
                "_ITM_deregisterTMCloneTable", 
                "svn_repos_finish_report", 
                "dav_register_liveprop_group", 
                "ap_find_linked_module", 
                "svn_repos_open2", 
                "svn_log__replay", 
                "svn_fs_revision_root", 
                "svn_repos_abort_report", 
                "svn_fs_make_file", 
                "ap_log_rerror_", 
                "strtod", 
                "svn_relpath_canonicalize", 
                "svn_fs_history_location", 
                "svn_inheritance_from_word", 
                "svn_fs_get_access", 
                "svn_fs_paths_changed2", 
                "svn_io_file_open", 
                "svn_time_to_cstring", 
                "svn_path_uri_encode", 
                "svn_repos_remember_client_capabilities", 
                "ap_register_output_filter", 
                "svn_time_from_cstring", 
                "ap_hook_insert_filter", 
                "svn_fs_txn_prop", 
                "svn_fs_get_uuid", 
                "ap_add_input_filter", 
                "svn_fs_txn_root_base_revision", 
                "svn_tristate__to_word", 
                "svn_dirent_basename", 
                "apr_hash_get", 
                "svn_fspath__dirname", 
                "apr_hash_make", 
                "ap_show_mpm", 
                "ap_str_tolower", 
                "apr_hash_count", 
                "apr_brigade_length", 
                "apr_time_exp_gmt", 
                "svn_repos_link_path3", 
                "ap_hook_post_config", 
                "svn_fs_file_length", 
                "svn_xml_is_xml_safe", 
                "svn_io_check_resolved_path", 
                "svn_repos_path", 
                "svn_log__update", 
                "svn_fs_delete", 
                "svn_error_dup", 
                "svn_stream_write", 
                "apr_pool_clear", 
                "svn_fs_node_proplist", 
                "svn_fspath__is_canonical", 
                "svn_fs_node_history", 
                "svn_log__switch", 
                "ap_remove_input_filter", 
                "svn_fs_revision_root_revision", 
                "ap_hook_map_to_storage", 
                "apr_table_get", 
                "apr_pool_cleanup_null", 
                "ap_destroy_sub_req", 
                "svn_txdelta_send_txstream", 
                "strstr", 
                "svn_repos_dir_delta2", 
                "svn_log__unlock_one_path", 
                "svn_repos_fs_change_rev_prop4", 
                "ap_set_content_type", 
                "svn_stream_read", 
                "dav_hook_insert_all_liveprops", 
                "svn_io_write_unique", 
                "svn_sort_compare_items_as_paths", 
                "svn_fs_txn_name", 
                "svn_fs_open_txn", 
                "svn_repos_node_location_segments", 
                "svn_mergeinfo_to_string", 
                "svn_txdelta_to_svndiff3", 
                "svn_repos_fs_lock", 
                "ap_lookup_provider", 
                "svn_io_file_rename", 
                "svn_repos_replay2", 
                "svn_fspath__is_root", 
                "svn_fs_revision_prop", 
                "apr_xml_parser_create", 
                "svn_fs_file_checksum", 
                "svn_fs_check_path", 
                "dav_register_provider", 
                "apr_brigade_destroy", 
                "svn_log__get_file_revs", 
                "ap_sub_req_method_uri", 
                "svn_stringbuf_dup", 
                "svn_mime_type_validate", 
                "dav_do_find_liveprop", 
                "ap_no2slash", 
                "apr_pstrndup", 
                "dav_get_locktoken_list", 
                "strcmp", 
                "svn_path_is_empty", 
                "svn_fs_is_txn_root", 
                "abort", 
                "svn_checksum_to_cstring_display", 
                "dav_new_error_tag", 
                "svn_stringbuf_compare", 
                "svn_base64_encode_string2", 
                "svn_io_get_dirents3", 
                "apr_bucket_transient_create", 
                "svn_stream_create", 
                "svn__strtoff", 
                "svn_log__get_mergeinfo", 
                "dav_get_liveprop_info", 
                "__ctype_tolower_loc", 
                "svn_repos_deleted_rev", 
                "svn_skel__list_length", 
                "svn_fs_change_node_prop", 
                "svn_repos_fs_revision_proplist", 
                "apr_brigade_puts", 
                "svn_cache_config_set", 
                "svn_fs_is_file"
            ], 
            "rpm": "mod_dav_svn-1.7.14-11.el7_4.x86_64.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2thin_so": {
            "report-functions": [
                "dmeventd_lvm2_exit", 
                "waitpid", 
                "dm_task_no_open_count", 
                "__errno_location", 
                "dm_get_next_target", 
                "dm_task_set_name", 
                "strerror", 
                "dm_pool_free", 
                "dmeventd_lvm2_init", 
                "dm_pool_destroy", 
                "dm_pool_create", 
                "dmeventd_lvm2_lock", 
                "_ITM_registerTMCloneTable", 
                "dm_task_get_deps", 
                "_Jv_RegisterClasses", 
                "dm_bitset_destroy", 
                "dm_task_get_name", 
                "dm_task_get_info", 
                "dmeventd_lvm2_command", 
                "dmeventd_lvm2_unlock", 
                "__cxa_finalize", 
                "dm_task_destroy", 
                "dm_bitset_create", 
                "_ITM_deregisterTMCloneTable", 
                "dm_task_create", 
                "__stack_chk_fail", 
                "dm_task_get_names", 
                "dm_task_run", 
                "dm_get_status_thin_pool", 
                "dm_mountinfo_read", 
                "dm_pool_zalloc", 
                "exit", 
                "dmeventd_lvm2_run", 
                "__gmon_start__", 
                "__syslog_chk", 
                "execvp"
            ], 
            "rpm": "mod_dav_svn-1.7.14-11.el7_4.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2thin.so"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2mirror_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2mirror.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable", 
                "dmeventd_lvm2_command", 
                "dmeventd_lvm2_lock", 
                "dm_get_next_target", 
                "dmeventd_lvm2_init", 
                "dmeventd_lvm2_run", 
                "__stack_chk_fail", 
                "strcmp", 
                "_Jv_RegisterClasses", 
                "dm_free_wrapper", 
                "__gmon_start__", 
                "strtol", 
                "dm_malloc_wrapper", 
                "dmeventd_lvm2_pool", 
                "_ITM_deregisterTMCloneTable", 
                "dmeventd_lvm2_unlock", 
                "dm_task_get_name", 
                "dmeventd_lvm2_exit", 
                "dm_split_words", 
                "__syslog_chk"
            ], 
            "rpm": "mod_dav_svn-1.7.14-11.el7_4.x86_64.rpm"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2raid_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2raid.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "dmeventd_lvm2_command", 
                "dmeventd_lvm2_lock", 
                "__syslog_chk", 
                "__gmon_start__", 
                "dmeventd_lvm2_exit", 
                "__stack_chk_fail", 
                "dm_task_get_name", 
                "dmeventd_lvm2_unlock", 
                "strtol", 
                "dm_get_next_target", 
                "_Jv_RegisterClasses", 
                "dm_split_words", 
                "_ITM_registerTMCloneTable", 
                "strcmp", 
                "dmeventd_lvm2_init", 
                "dmeventd_lvm2_pool", 
                "__cxa_finalize", 
                "strchr"
            ], 
            "rpm": "mod_dav_svn-1.7.14-11.el7_4.x86_64.rpm"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2thin_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2thin.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__errno_location", 
                "dmeventd_lvm2_init", 
                "dm_mountinfo_read", 
                "dm_get_status_thin_pool", 
                "dmeventd_lvm2_run", 
                "dm_task_no_open_count", 
                "dm_task_run", 
                "waitpid", 
                "dm_bitset_create", 
                "dm_task_destroy", 
                "dm_pool_destroy", 
                "dm_get_next_target", 
                "__cxa_finalize", 
                "dm_task_get_names", 
                "dm_pool_free", 
                "dm_task_get_deps", 
                "dm_pool_create", 
                "dm_task_set_name", 
                "dmeventd_lvm2_exit", 
                "fork", 
                "dm_task_get_info", 
                "strerror", 
                "dm_pool_zalloc", 
                "__stack_chk_fail", 
                "dm_task_create", 
                "dm_task_get_name", 
                "__syslog_chk", 
                "dmeventd_lvm2_command", 
                "_Jv_RegisterClasses", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "exit", 
                "_ITM_registerTMCloneTable", 
                "dmeventd_lvm2_unlock", 
                "execvp"
            ], 
            "rpm": "mod_dav_svn-1.7.14-11.el7_4.x86_64.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2snapshot_so": {
            "report-functions": [
                "execvp", 
                "__stack_chk_fail", 
                "dmeventd_lvm2_run", 
                "__gmon_start__", 
                "dm_task_get_name", 
                "__cxa_finalize", 
                "__xstat64", 
                "dmeventd_lvm2_lock", 
                "fclose", 
                "dm_get_next_target", 
                "fgets", 
                "__errno_location", 
                "dm_pool_free", 
                "strerror", 
                "dm_split_words", 
                "dmeventd_lvm2_command", 
                "feof", 
                "dmeventd_lvm2_init", 
                "dm_pool_create", 
                "fopen64", 
                "exit", 
                "_Jv_RegisterClasses", 
                "dm_get_status_snapshot", 
                "fork", 
                "dmeventd_lvm2_unlock", 
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable", 
                "__syslog_chk", 
                "dm_task_get_info", 
                "dm_pool_zalloc", 
                "waitpid"
            ], 
            "rpm": "mod_dav_svn-1.7.14-11.el7_4.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2snapshot.so"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2snapshot_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2snapshot.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "dm_get_next_target", 
                "_ITM_registerTMCloneTable", 
                "feof", 
                "__stack_chk_fail", 
                "fclose", 
                "__syslog_chk", 
                "__cxa_finalize", 
                "dm_pool_zalloc", 
                "dm_pool_create", 
                "__errno_location", 
                "exit", 
                "execvp", 
                "waitpid", 
                "dm_pool_destroy", 
                "dmeventd_lvm2_lock", 
                "strerror", 
                "dmeventd_lvm2_init", 
                "dm_split_words", 
                "fopen64", 
                "dm_get_status_snapshot", 
                "dm_pool_free", 
                "__xstat64", 
                "dm_task_get_info", 
                "dmeventd_lvm2_run", 
                "dmeventd_lvm2_unlock", 
                "fgets", 
                "dmeventd_lvm2_command", 
                "fork", 
                "dmeventd_lvm2_exit", 
                "_Jv_RegisterClasses", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "mod_dav_svn-1.7.14-11.el7_4.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Version": " 1.7.14", 
            "Name": " mod_dav_svn", 
            "License": " ASL 2.0", 
            "URL": " http://subversion.apache.org/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " x86-039.build.eng.bos.redhat.com", 
            "Description": "\nThe mod_dav_svn package allows access to a Subversion repository\nusing HTTP, via the Apache httpd server.\n", 
            "Build Date": " Wed 09 Aug 2017 09:49:30 AM EDT", 
            "Vendor": " Red Hat, Inc.", 
            "Source RPM": " subversion-1.7.14-11.el7_4.src.rpm", 
            "warning": " /home/jason/fctl/swap/2/mod_dav_svn-1.7.14-11.el7_4.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID fd431d51: NOKEY", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Wed 09 Aug 2017 12:09:54 PM EDT, Key ID 199e2f91fd431d51", 
            "Release": " 11.el7_4", 
            "Group": " System Environment/Daemons", 
            "Packager": " Red Hat, Inc. <http://bugzilla.redhat.com/bugzilla>", 
            "Summary": " Apache httpd module for Subversion server", 
            "Size": " 217290"
        }
    }
}