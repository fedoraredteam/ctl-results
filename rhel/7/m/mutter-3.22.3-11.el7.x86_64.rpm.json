{
    "results": {
        "usr/lib/device-mapper/libdevmapper-event-lvm2mirror_so": {
            "report-functions": [
                "dmeventd_lvm2_command", 
                "_ITM_deregisterTMCloneTable", 
                "dmeventd_lvm2_exit", 
                "__gmon_start__", 
                "dmeventd_lvm2_run", 
                "__syslog_chk", 
                "__stack_chk_fail", 
                "strcmp", 
                "dmeventd_lvm2_lock", 
                "strlen", 
                "strchr", 
                "strtol", 
                "dm_malloc_wrapper", 
                "__cxa_finalize", 
                "dm_split_words", 
                "dm_free_wrapper", 
                "dmeventd_lvm2_pool", 
                "dmeventd_lvm2_init", 
                "_ITM_registerTMCloneTable", 
                "dm_get_next_target", 
                "dm_task_get_name"
            ], 
            "rpm": "mutter-3.22.3-11.el7.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2mirror.so"
        }, 
        "usr/libexec/mutter-restart-helper": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/libexec/mutter-restart-helper", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "XSync", 
                "_Jv_RegisterClasses", 
                "XCreateWindow", 
                "XInternAtom", 
                "XSetSelectionOwner", 
                "puts", 
                "XCompositeGetOverlayWindow", 
                "__gmon_start__", 
                "XNextEvent", 
                "fflush", 
                "__stack_chk_fail", 
                "_ITM_deregisterTMCloneTable", 
                "XOpenDisplay", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "mutter-3.22.3-11.el7.x86_64.rpm"
        }, 
        "usr/lib64/mutter/libmutter-cogl-pango_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/mutter/libmutter-cogl-pango.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "cogl_framebuffer_push_matrix", 
                "cogl_color_equal", 
                "g_hash_table_remove_all", 
                "_cogl_atlas_add_reorganize_callback", 
                "pango_layout_get_context", 
                "cogl_pipeline_set_color", 
                "g_object_set_qdata_full", 
                "cogl_primitive_new_p2", 
                "g_type_check_instance_cast", 
                "pango_cairo_font_map_new", 
                "pango_cairo_font_get_scaled_font", 
                "_ITM_registerTMCloneTable", 
                "cogl_meta_texture_foreach_in_region", 
                "g_once_init_leave", 
                "g_quark_from_static_string", 
                "g_type_class_adjust_private_offset", 
                "g_array_free", 
                "pango_extents_to_pixels", 
                "cogl_pipeline_set_layer_texture", 
                "pango_font_get_glyph_extents", 
                "cogl_framebuffer_draw_primitive", 
                "cogl_buffer_map", 
                "pango_renderer_get_matrix", 
                "_cogl_atlas_reserve_space", 
                "g_slist_free", 
                "pango_layout_iter_next_line", 
                "g_type_register_static_simple", 
                "cogl_framebuffer_translate", 
                "pango_layout_get_line_count", 
                "cogl_pipeline_set_layer_wrap_mode", 
                "g_hash_table_new_full", 
                "g_intern_static_string", 
                "g_malloc_n", 
                "cogl_buffer_unmap", 
                "g_slice_alloc0", 
                "g_hash_table_destroy", 
                "pango_renderer_draw_layout", 
                "cogl_pipeline_set_layer_filters", 
                "g_param_spec_pointer", 
                "g_array_set_size", 
                "cairo_image_surface_get_data", 
                "_Jv_RegisterClasses", 
                "g_type_class_peek_parent", 
                "g_hook_find_func_data", 
                "g_type_check_class_cast", 
                "g_object_new", 
                "cairo_surface_flush", 
                "pango_renderer_get_type", 
                "__stack_chk_fail", 
                "cairo_set_scaled_font", 
                "g_hook_destroy_link", 
                "g_hash_table_lookup", 
                "g_hook_list_invoke", 
                "pango_font_map_create_context", 
                "g_slist_foreach", 
                "g_type_name", 
                "g_malloc0", 
                "g_hash_table_remove", 
                "cairo_destroy", 
                "g_slice_alloc", 
                "g_hook_prepend", 
                "g_object_unref", 
                "pango_layout_get_type", 
                "pango_layout_get_iter", 
                "g_array_new", 
                "_ITM_deregisterTMCloneTable", 
                "g_malloc", 
                "pango_context_get_font_map", 
                "cogl_error_free", 
                "__cxa_finalize", 
                "_cogl_context_get_default", 
                "g_slist_prepend", 
                "cairo_show_glyphs", 
                "cogl_get_draw_framebuffer", 
                "cairo_image_surface_create", 
                "pango_renderer_get_color", 
                "cogl_atlas_texture_new_with_size", 
                "pango_layout_line_unref", 
                "cogl_attribute_buffer_new_with_size", 
                "cogl_color_get_green_byte", 
                "g_log", 
                "cogl_texture_set_region", 
                "pango_layout_line_ref", 
                "g_hook_alloc", 
                "g_free", 
                "cogl_pipeline_set_layer_combine", 
                "cogl_primitive_set_indices", 
                "cairo_image_surface_get_stride", 
                "pango_layout_iter_get_line_readonly", 
                "_cogl_atlas_texture_add_reorganize_callback", 
                "cogl_framebuffer_draw_rectangle", 
                "g_type_check_instance_is_a", 
                "g_object_get_qdata", 
                "g_return_if_fail_warning", 
                "cogl_color_get_blue_byte", 
                "cogl_pipeline_copy", 
                "_cogl_texture_get_format", 
                "g_direct_hash", 
                "cogl_object_ref", 
                "pango_cairo_font_get_type", 
                "cogl_attribute_new", 
                "cogl_color_get_red_byte", 
                "pango_cairo_font_map_set_resolution", 
                "cogl_texture_get_width", 
                "cairo_set_source_rgba", 
                "cogl_texture_allocate", 
                "pango_layout_get_line", 
                "g_hash_table_insert", 
                "cogl_framebuffer_pop_matrix", 
                "_cogl_atlas_texture_remove_reorganize_callback", 
                "cogl_primitive_new_with_attributes", 
                "cogl_pipeline_new", 
                "cogl_object_set_user_data", 
                "cairo_create", 
                "cogl_color_init_from_4ub", 
                "cogl_texture_get_height", 
                "cogl_color_get_alpha_byte", 
                "pango_cairo_font_map_get_type", 
                "cairo_surface_destroy", 
                "cogl_framebuffer_draw_textured_rectangles", 
                "pango_font_map_get_type", 
                "g_slice_free1", 
                "cogl_primitive_draw", 
                "g_direct_equal", 
                "g_assertion_message_expr", 
                "g_hook_list_clear", 
                "g_hash_table_unref", 
                "g_once_init_enter", 
                "g_object_ref", 
                "cogl_buffer_set_data", 
                "cogl_color_premultiply", 
                "cogl_primitive_set_mode", 
                "_cogl_atlas_new", 
                "g_value_get_pointer", 
                "pango_layout_iter_free", 
                "g_object_class_install_property", 
                "g_hook_list_init", 
                "__gmon_start__", 
                "g_hash_table_foreach", 
                "cogl_object_unref"
            ], 
            "rpm": "mutter-3.22.3-11.el7.x86_64.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2raid_so": {
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "dm_split_words", 
                "strchr", 
                "dmeventd_lvm2_exit", 
                "dmeventd_lvm2_unlock", 
                "dmeventd_lvm2_pool", 
                "__stack_chk_fail", 
                "__cxa_finalize", 
                "dmeventd_lvm2_run", 
                "dmeventd_lvm2_lock", 
                "dm_task_get_name", 
                "dmeventd_lvm2_init", 
                "_ITM_deregisterTMCloneTable", 
                "dm_get_next_target", 
                "dmeventd_lvm2_command", 
                "_Jv_RegisterClasses", 
                "__syslog_chk"
            ], 
            "rpm": "mutter-3.22.3-11.el7.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2raid.so"
        }, 
        "usr/bin/mutter": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/mutter", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "g_dgettext", 
                "_ITM_deregisterTMCloneTable", 
                "meta_plugin_manager_load", 
                "g_print", 
                "_ITM_registerTMCloneTable", 
                "g_option_context_add_main_entries", 
                "g_printerr", 
                "_Jv_RegisterClasses", 
                "meta_get_option_context", 
                "g_option_context_parse", 
                "meta_register_with_session", 
                "__gmon_start__", 
                "meta_init", 
                "g_option_context_free", 
                "exit", 
                "__libc_start_main"
            ], 
            "rpm": "mutter-3.22.3-11.el7.x86_64.rpm"
        }, 
        "usr/lib64/mutter/plugins/default_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/mutter/plugins/default.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "meta_plugin_destroy_completed", 
                "meta_window_get_window_type", 
                "g_type_class_peek_parent", 
                "g_spawn_check_exit_status", 
                "clutter_actor_set_scale", 
                "clutter_actor_show", 
                "clutter_actor_set_position", 
                "clutter_actor_destroy_all_children", 
                "meta_window_get_workspace", 
                "clutter_timeline_get_type", 
                "meta_background_actor_set_vignette", 
                "g_object_get_qdata", 
                "clutter_actor_insert_child_below", 
                "g_malloc0", 
                "meta_plugin_complete_display_change", 
                "clutter_actor_is_visible", 
                "clutter_actor_set_pivot_point", 
                "g_type_instance_get_private", 
                "_Jv_RegisterClasses", 
                "clutter_actor_new", 
                "meta_get_window_group_for_screen", 
                "clutter_actor_get_parent", 
                "meta_plugin_get_type", 
                "clutter_actor_get_type", 
                "clutter_actor_set_easing_duration", 
                "meta_workspace_index", 
                "g_slice_alloc0", 
                "g_quark_from_static_string", 
                "g_type_check_instance_cast", 
                "g_list_last", 
                "clutter_color_get_static", 
                "clutter_actor_restore_easing_state", 
                "meta_background_actor_new", 
                "meta_window_actor_get_meta_window", 
                "clutter_actor_destroy", 
                "clutter_actor_remove_child", 
                "clutter_color_init", 
                "clutter_actor_set_child_below_sibling", 
                "meta_plugin_minimize_completed", 
                "meta_show_dialog", 
                "g_object_ref", 
                "g_rand_new_with_seed", 
                "meta_plugin_map_completed", 
                "clutter_actor_set_background_color", 
                "g_type_class_add_private", 
                "__gmon_start__", 
                "meta_get_window_actors", 
                "g_object_set_valist", 
                "__stack_chk_fail", 
                "clutter_actor_set_opacity", 
                "meta_background_actor_get_type", 
                "meta_get_stage_for_screen", 
                "meta_background_actor_set_background", 
                "clutter_actor_hide", 
                "meta_plugin_get_screen", 
                "meta_window_get_compositor_private", 
                "meta_background_new", 
                "g_rand_int_range", 
                "meta_screen_get_monitor_geometry", 
                "g_object_set_qdata_full", 
                "g_type_check_class_cast", 
                "clutter_actor_set_easing_mode", 
                "_ITM_registerTMCloneTable", 
                "g_log", 
                "g_slice_free1", 
                "clutter_actor_add_child", 
                "clutter_actor_set_size", 
                "meta_plugin_switch_workspace_completed", 
                "g_signal_connect_data", 
                "g_rand_free", 
                "g_child_watch_add", 
                "meta_screen_get_size", 
                "clutter_actor_get_transition", 
                "g_signal_emit_by_name", 
                "meta_window_actor_get_type", 
                "clutter_timeline_stop", 
                "__cxa_finalize", 
                "meta_background_group_new", 
                "meta_background_set_color", 
                "g_type_module_register_type", 
                "meta_window_get_icon_geometry", 
                "clutter_actor_save_easing_state", 
                "g_object_unref", 
                "g_type_name", 
                "meta_screen_get_n_monitors"
            ], 
            "rpm": "mutter-3.22.3-11.el7.x86_64.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2thin_so": {
            "report-functions": [
                "dmeventd_lvm2_exit", 
                "dm_get_next_target", 
                "dm_task_no_open_count", 
                "dm_pool_zalloc", 
                "dm_pool_free", 
                "dmeventd_lvm2_unlock", 
                "dm_bitset_create", 
                "_ITM_registerTMCloneTable", 
                "dm_task_get_name", 
                "execvp", 
                "dm_task_get_deps", 
                "dmeventd_lvm2_lock", 
                "dm_task_destroy", 
                "_Jv_RegisterClasses", 
                "dmeventd_lvm2_command", 
                "dm_task_run", 
                "dmeventd_lvm2_init", 
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable", 
                "__stack_chk_fail", 
                "dm_get_status_thin_pool", 
                "exit", 
                "__gmon_start__", 
                "fork", 
                "dm_task_set_name", 
                "strerror", 
                "dm_mountinfo_read", 
                "dm_pool_destroy", 
                "waitpid", 
                "dm_pool_create", 
                "__syslog_chk", 
                "dmeventd_lvm2_run", 
                "dm_task_get_names", 
                "dm_task_get_info", 
                "dm_bitset_destroy"
            ], 
            "rpm": "mutter-3.22.3-11.el7.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2thin.so"
        }, 
        "usr/lib64/libmutter_so_0_0_0": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/libmutter.so.0.0.0", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "g_key_file_new", 
                "xkb_keymap_unref", 
                "XkbRF_GetNamesProp", 
                "strlen", 
                "cogl_is_texture_rectangle", 
                "cogl_texture_allocate", 
                "XFreeFeedbackList", 
                "ca_proplist_create", 
                "g_strv_get_type", 
                "g_slist_sort", 
                "up_client_new", 
                "clutter_backend_x11_get_type", 
                "g_int64_hash", 
                "g_printerr", 
                "g_dbus_proxy_get_type", 
                "clutter_get_default_backend", 
                "cairo_xlib_surface_get_height", 
                "clutter_actor_get_content_box", 
                "XFixesQueryVersion", 
                "gtk_render_layout", 
                "g_timeout_add", 
                "clutter_do_event", 
                "XFixesSelectCursorInput", 
                "clutter_actor_set_child_below_sibling", 
                "clutter_x11_get_stage_window", 
                "gdk_cairo_surface_create_from_pixbuf", 
                "gtk_widget_path_iter_remove_class", 
                "cogl_texture_get_height", 
                "clutter_stage_set_user_resizable", 
                "g_signal_handlers_disconnect_matched", 
                "g_data_input_stream_read_line_async", 
                "fopen", 
                "XFree", 
                "g_list_copy", 
                "g_stpcpy", 
                "g_variant_new_boolean", 
                "g_dbus_connection_signal_unsubscribe", 
                "g_settings_set_strv", 
                "g_strdup_vprintf", 
                "g_array_append_vals", 
                "_cogl_winsys_glx_get_vtable", 
                "XFlush", 
                "g_variant_iter_next_value", 
                "memset", 
                "XFixesShowCursor", 
                "gtk_image_get_type", 
                "XRRFreeScreenResources", 
                "clutter_actor_get_transformed_position", 
                "g_value_init", 
                "clutter_actor_remove_child", 
                "XSyncQueryCounter", 
                "g_object_steal_data", 
                "XIUngrabKeycode", 
                "XRRSelectInput", 
                "XCompositeUnredirectWindow", 
                "ferror", 
                "g_main_loop_run", 
                "g_strsplit", 
                "g_list_free", 
                "cogl_pipeline_set_uniform_float", 
                "g_source_new", 
                "fdopen", 
                "gdk_window_remove_filter", 
                "gtk_style_context_remove_class", 
                "XRRQueryOutputProperty", 
                "xkb_state_unref", 
                "g_utf8_collate", 
                "XFixesCreateRegion", 
                "clutter_actor_iter_next", 
                "XDamageCreate", 
                "XWindowEvent", 
                "clutter_event_remove_filter", 
                "sn_startup_sequence_ref", 
                "gtk_widget_create_pango_layout", 
                "g_dgettext", 
                "gdk_window_get_width", 
                "memmove", 
                "g_dbus_object_skeleton_add_interface", 
                "g_locale_from_utf8", 
                "g_array_set_size", 
                "g_bytes_get_size", 
                "clutter_actor_iter_init", 
                "cairo_region_num_rectangles", 
                "fwrite", 
                "gtk_window_resize", 
                "clutter_event_get_event_sequence", 
                "g_variant_get_strv", 
                "gdk_window_get_user_data", 
                "XConfigureWindow", 
                "XNextRequest", 
                "cairo_create", 
                "cogl_pipeline_add_snippet", 
                "g_dbus_interface_skeleton_get_connections", 
                "pango_font_description_merge", 
                "xkb_state_serialize_mods", 
                "ca_context_play_full", 
                "clutter_actor_set_easing_duration", 
                "gdk_x11_display_set_window_scale", 
                "ca_gtk_context_get", 
                "gtk_button_get_type", 
                "g_data_input_stream_new", 
                "cogl_pipeline_set_layer_matrix", 
                "XCloseDisplay", 
                "g_key_file_unref", 
                "g_malloc_n", 
                "g_value_get_flags", 
                "XSynchronize", 
                "XUngrabKeyboard", 
                "clutter_color_get_static", 
                "g_idle_add_full", 
                "sn_startup_sequence_unref", 
                "clutter_event_get_source_device", 
                "g_error_free", 
                "fflush", 
                "g_dbus_method_invocation_get_type", 
                "xcb_randr_query_output_property", 
                "g_value_set_enum", 
                "__memcpy_chk", 
                "g_file_replace_contents_finish", 
                "cogl_pipeline_set_layer_wrap_mode_t", 
                "gdk_screen_get_setting", 
                "g_value_unset", 
                "g_string_append", 
                "g_list_nth_data", 
                "XReparentWindow", 
                "clutter_event_free", 
                "cogl_framebuffer_orthographic", 
                "cogl_get_proc_address", 
                "XineramaIsActive", 
                "XRRAllocateMonitor", 
                "g_value_copy", 
                "XSelectInput", 
                "g_strdup_printf", 
                "clutter_settings_get_default", 
                "XSyncIntsToValue", 
                "XSyncDestroyAlarm", 
                "g_list_reverse", 
                "g_queue_foreach", 
                "g_dbus_method_invocation_return_value", 
                "getenv", 
                "XPeekEvent", 
                "g_markup_parse_context_free", 
                "XIAllowEvents", 
                "sn_startup_sequence_get_id", 
                "XIGrabButton", 
                "clutter_stage_view_cogl_get_type", 
                "clutter_threads_remove_repaint_func", 
                "clutter_input_device_get_device_type", 
                "g_variant_get", 
                "cogl_framebuffer_draw_textured_rectangle", 
                "g_log", 
                "cairo_region_contains_rectangle", 
                "g_strchomp", 
                "clutter_x11_event_sequence_get_touch_detail", 
                "XGetXCBConnection", 
                "g_file_get_uri", 
                "clutter_event_add_filter", 
                "XineramaQueryScreens", 
                "cogl_matrix_multiply", 
                "strcpy", 
                "g_once_init_leave", 
                "gtk_settings_get_default", 
                "g_spawn_async_with_pipes", 
                "g_slist_foreach", 
                "g_convert", 
                "g_source_remove_by_funcs_user_data", 
                "g_signal_emitv", 
                "cogl_get_viewport", 
                "g_settings_get_enum", 
                "cogl_framebuffer_clear4f", 
                "gtk_style_context_add_class", 
                "XRenderFindStandardFormat", 
                "sn_display_process_event", 
                "XCloseDevice", 
                "cairo_surface_flush", 
                "g_dbus_proxy_call_finish", 
                "g_get_system_config_dirs", 
                "sn_startup_sequence_get_wmclass", 
                "g_queue_is_empty", 
                "g_ptr_array_add", 
                "g_idle_source_new", 
                "clutter_actor_get_height", 
                "g_dbus_object_manager_get_type", 
                "cogl_meta_texture_foreach_in_region", 
                "cairo_region_copy", 
                "gdk_window_show_unraised", 
                "g_file_equal", 
                "gtk_label_get_type", 
                "g_value_get_variant", 
                "cogl_matrix_init_identity", 
                "g_value_set_uint", 
                "ca_context_play", 
                "g_dbus_connection_emit_signal", 
                "clutter_device_manager_list_devices", 
                "clutter_actor_get_actions", 
                "cogl_texture_set_data", 
                "g_variant_get_string", 
                "cogl_error_free", 
                "pango_layout_set_ellipsize", 
                "cairo_region_intersect", 
                "XCompositeGetOverlayWindow", 
                "cairo_region_intersect_rectangle", 
                "clutter_input_device_get_type", 
                "g_free", 
                "clutter_device_manager_get_core_device", 
                "g_hash_table_add", 
                "XSyncChangeAlarm", 
                "g_get_prgname", 
                "g_hash_table_iter_next", 
                "g_queue_new", 
                "XIAllowTouchEvents", 
                "strchr", 
                "setenv", 
                "cairo_region_reference", 
                "g_object_set_property", 
                "XSetDeviceButtonMapping", 
                "cogl_pipeline_set_blend", 
                "pango_font_description_from_string", 
                "XShapeGetRectangles", 
                "g_return_if_fail_warning", 
                "g_value_get_int", 
                "g_key_file_load_from_file", 
                "g_hash_table_new_full", 
                "ceil", 
                "g_string_append_unichar", 
                "g_main_loop_is_running", 
                "clutter_stage_get_redraw_clip_bounds", 
                "XkbFreeKeyboard", 
                "gdk_window_new", 
                "g_hash_table_iter_steal", 
                "g_value_get_uchar", 
                "g_key_file_get_string", 
                "XRRFreeOutputInfo", 
                "clutter_feature_available", 
                "gdk_screen_get_default", 
                "g_int64_equal", 
                "clutter_actor_show", 
                "clutter_actor_get_transformed_paint_volume", 
                "XkbSelectEvents", 
                "g_settings_schema_source_get_default", 
                "XShapeQueryExtension", 
                "g_param_spec_boolean", 
                "g_file_hash", 
                "XGetWindowAttributes", 
                "g_utf8_substring", 
                "cairo_surface_reference", 
                "g_object_class_find_property", 
                "g_dbus_interface_skeleton_export", 
                "g_object_get_qdata", 
                "cogl_set_source", 
                "cogl_get_modelview_matrix", 
                "clutter_actor_new", 
                "g_hash_table_remove", 
                "XCreateWindow", 
                "g_variant_builder_clear", 
                "g_data_input_stream_read_line_finish_utf8", 
                "SmcCloseConnection", 
                "g_get_user_name", 
                "g_value_dup_object", 
                "clutter_actor_set_opacity", 
                "cairo_region_create", 
                "XIWarpPointer", 
                "g_ascii_strtod", 
                "g_unix_fd_list_get_type", 
                "XRRGetMonitors", 
                "clutter_actor_should_pick_paint", 
                "g_array_remove_range", 
                "g_array_sort", 
                "xkb_keysym_from_name", 
                "g_settings_get_boolean", 
                "XGetSelectionOwner", 
                "g_dbus_object_manager_server_new", 
                "cogl_flush", 
                "clutter_actor_restore_easing_state", 
                "g_variant_is_object_path", 
                "XRRSetMonitor", 
                "XChangeFeedbackControl", 
                "g_settings_get_type", 
                "clutter_input_device_get_device_name", 
                "clutter_event_get_time", 
                "gdk_seat_get_pointer", 
                "XkbGetKeyboardByName", 
                "cogl_pipeline_get_uniform_location", 
                "getpid", 
                "XRRGetOutputInfo", 
                "pango_layout_get_pixel_extents", 
                "cogl_texture_2d_new_with_size", 
                "clutter_event_get_source", 
                "clutter_actor_get_allocation_box", 
                "g_strchug", 
                "g_settings_get_string", 
                "gdk_error_trap_push", 
                "sn_startup_sequence_complete", 
                "clutter_input_device_get_device_node", 
                "g_variant_get_type", 
                "g_dbus_proxy_call_with_unix_fd_list_sync", 
                "clutter_actor_queue_redraw", 
                "g_type_module_get_type", 
                "XGetWindowProperty", 
                "pango_layout_set_auto_dir", 
                "g_io_channel_unix_new", 
                "g_value_set_string", 
                "sn_display_new", 
                "XCompositeUnredirectSubwindows", 
                "gdk_cairo_region", 
                "g_initable_get_type", 
                "clutter_actor_has_mapped_clones", 
                "gdk_screen_get_root_window", 
                "clutter_event_get", 
                "g_type_name", 
                "g_object_get_data", 
                "clutter_actor_get_children", 
                "g_udev_client_new", 
                "XSyncIntToValue", 
                "XSync", 
                "gdk_window_move_resize", 
                "XSyncCreateCounter", 
                "gtk_widget_get_realized", 
                "gdk_window_invalidate_rect", 
                "g_direct_equal", 
                "XRRFreeCrtcInfo", 
                "xcb_res_query_client_ids_ids_iterator", 
                "gdk_rectangle_intersect", 
                "g_slist_copy", 
                "g_settings_get_value", 
                "g_value_get_boxed", 
                "g_slice_copy", 
                "XRRGetCrtcInfo", 
                "g_strcmp0", 
                "gtk_widget_path_new", 
                "strtoul", 
                "roundf", 
                "g_slice_alloc", 
                "strcmp", 
                "cogl_pipeline_set_layer_wrap_mode", 
                "gdk_display_get_default_screen", 
                "g_ptr_array_new_full", 
                "g_dbus_connection_signal_subscribe", 
                "g_dbus_object_skeleton_remove_interface_by_name", 
                "g_object_get", 
                "cairo_image_surface_create", 
                "g_slice_free1", 
                "cairo_restore", 
                "g_variant_get_fixed_array", 
                "cogl_xlib_renderer_set_foreign_display", 
                "g_signal_accumulator_true_handled", 
                "cogl_framebuffer_draw_rectangles", 
                "g_type_class_adjust_private_offset", 
                "g_dbus_object_manager_server_unexport", 
                "cairo_image_surface_get_height", 
                "XPending", 
                "cogl_renderer_get_driver", 
                "g_object_notify_by_pspec", 
                "g_array_set_clear_func", 
                "XQueryTree", 
                "g_file_get_type", 
                "g_hash_table_destroy", 
                "XGetAtomName", 
                "g_object_class_override_property", 
                "g_queue_pop_head", 
                "sn_monitor_context_unref", 
                "g_bytes_unref", 
                "pango_font_description_set_size", 
                "cairo_scale", 
                "clutter_paint_volume_union_box", 
                "g_path_is_absolute", 
                "XkbChangeEnabledControls", 
                "strstr", 
                "g_module_symbol", 
                "cogl_object_unref", 
                "g_file_test", 
                "unsetenv", 
                "gdk_screen_get_system_visual", 
                "XcursorLibraryLoadCursor", 
                "cairo_region_equal", 
                "IceAddConnectionWatch", 
                "XDamageSubtract", 
                "g_value_get_int64", 
                "cairo_surface_mark_dirty", 
                "XMapWindow", 
                "g_queue_push_tail", 
                "cogl_pipeline_set_layer_wrap_mode_s", 
                "cogl_pipeline_set_layer_filters", 
                "_clutter_backend_add_event_translator", 
                "g_get_user_config_dir", 
                "g_type_register_static_simple", 
                "ca_proplist_sets", 
                "cogl_framebuffer_get_is_stereo", 
                "DPMSForceLevel", 
                "cairo_mask_surface", 
                "gdk_window_hide", 
                "gtk_icon_theme_lookup_icon_for_scale", 
                "sigaction", 
                "clutter_threads_add_repaint_func_full", 
                "g_settings_get_double", 
                "g_list_foreach", 
                "clutter_actor_set_background_color", 
                "g_timeout_add_full", 
                "XRRSetOutputPrimary", 
                "XRRSetCrtcConfig", 
                "clutter_actor_get_stage", 
                "clutter_x11_get_default_display", 
                "pow", 
                "cogl_pipeline_set_layer_null_texture", 
                "g_file_new_for_path", 
                "sn_display_unref", 
                "g_variant_get_boolean", 
                "g_dbus_message_get_unix_fd_list", 
                "clutter_stage_get_key_focus", 
                "cogl_texture_set_components", 
                "g_variant_take_ref", 
                "clutter_actor_set_reactive", 
                "gtk_style_context_set_scale", 
                "_clutter_stage_cogl_get_type", 
                "g_variant_new", 
                "gdk_window_resize", 
                "gdk_device_get_state", 
                "clutter_timeline_new", 
                "XInternAtoms", 
                "gtk_widget_path_iter_set_object_name", 
                "clutter_actor_queue_relayout", 
                "clutter_stage_view_invalidate_offscreen_blit_pipeline", 
                "g_int_hash", 
                "g_type_interface_peek_parent", 
                "g_dbus_interface_info_lookup_property", 
                "g_strerror", 
                "g_io_add_watch", 
                "cogl_pipeline_set_layer_texture", 
                "g_quark_from_static_string", 
                "_clutter_stage_x11_get_type", 
                "g_set_error", 
                "XRRFreeMonitors", 
                "clutter_actor_has_allocation", 
                "cogl_display_get_renderer", 
                "g_option_context_new", 
                "XGrabServer", 
                "g_initable_init", 
                "g_mutex_lock", 
                "g_task_get_type", 
                "gdk_window_set_user_data", 
                "g_unix_signal_add", 
                "XcursorImageLoadCursor", 
                "g_object_freeze_notify", 
                "gdk_window_add_filter", 
                "XIQueryPointer", 
                "gtk_style_context_get_parent", 
                "clutter_input_device_tool_get_id", 
                "gdk_window_get_window_type", 
                "clutter_actor_realize", 
                "g_settings_new", 
                "XSyncCreateFence", 
                "close", 
                "XUndefineCursor", 
                "clutter_x11_set_use_stereo_stage", 
                "XSyncSetPriority", 
                "cairo_image_surface_get_stride", 
                "XInternAtom", 
                "g_variant_builder_end", 
                "gdk_pixbuf_new_from_stream", 
                "g_type_interface_peek", 
                "pango_layout_set_width", 
                "XFixesHideCursor", 
                "cogl_get_draw_framebuffer", 
                "g_value_set_object", 
                "clutter_input_device_get_device_mode", 
                "cogl_texture_set_region", 
                "xkb_context_new", 
                "g_value_get_enum", 
                "clutter_stage_view_get_framebuffer", 
                "cairo_image_surface_get_data", 
                "g_slist_prepend", 
                "XFixesDestroyPointerBarrier", 
                "g_list_find", 
                "xkb_keymap_mod_get_index", 
                "g_source_add_poll", 
                "cogl_texture_get_components", 
                "g_variant_n_children", 
                "g_param_spec_int", 
                "g_param_spec_uint", 
                "g_file_get_contents", 
                "g_array_new", 
                "gtk_widget_path_copy", 
                "XShapeQueryExtents", 
                "g_dbus_object_skeleton_get_type", 
                "XRRGetOutputProperty", 
                "clutter_actor_destroy", 
                "g_string_free", 
                "gethostname", 
                "g_variant_iter_loop", 
                "sn_monitor_event_get_type", 
                "g_path_get_basename", 
                "cogl_texture_pixmap_x11_update_area", 
                "setlocale", 
                "gtk_window_move", 
                "g_dbus_proxy_set_interface_info", 
                "g_bytes_get_data", 
                "g_object_set", 
                "g_dbus_proxy_call_with_unix_fd_list_finish", 
                "XShapeSelectInput", 
                "cogl_get_graphics_reset_status", 
                "XFixesSetWindowShapeRegion", 
                "g_object_set_data", 
                "XDamageQueryExtension", 
                "XGetDeviceButtonMapping", 
                "xkb_state_new", 
                "cogl_snippet_new", 
                "g_mutex_unlock", 
                "XSyncDestroyCounter", 
                "gdk_display_get_default", 
                "cogl_texture_pixmap_x11_new_right", 
                "XSetInputFocus", 
                "XInitThreads", 
                "floor", 
                "g_value_take_object", 
                "g_type_add_interface_static", 
                "XRefreshKeyboardMapping", 
                "gtk_widget_get_screen", 
                "g_variant_builder_add", 
                "cogl_matrix_translate", 
                "cogl_get_projection_matrix", 
                "cogl_pipeline_set_uniform_1f", 
                "xkb_keymap_key_get_syms_by_level", 
                "clutter_threads_add_repaint_func", 
                "clutter_actor_get_parent", 
                "g_settings_get_uint", 
                "g_cancellable_cancel", 
                "clutter_actor_add_child", 
                "cairo_clip", 
                "XISelectEvents", 
                "g_object_thaw_notify", 
                "_clutter_backend_reset_cogl_framebuffer", 
                "g_async_initable_get_type", 
                "cairo_region_get_rectangle", 
                "gtk_style_context_get_border", 
                "g_utf8_strlen", 
                "g_strndup", 
                "xcb_res_query_client_ids_reply", 
                "XRemoveFromSaveSet", 
                "cairo_image_surface_get_width", 
                "g_signal_emit", 
                "clutter_input_device_get_coords", 
                "cogl_rectangle_with_texture_coords", 
                "DPMSCapable", 
                "g_dbus_error_quark", 
                "gtk_render_background", 
                "g_ascii_strcasecmp", 
                "XSetSelectionOwner", 
                "g_date_set_time_t", 
                "g_type_add_instance_private", 
                "g_markup_escape_text", 
                "gdk_x11_display_get_xdisplay", 
                "g_slist_find", 
                "abort", 
                "XFixesQueryExtension", 
                "cogl_framebuffer_draw_multitextured_rectangle", 
                "g_async_initable_new_async", 
                "cogl_pipeline_set_color4f", 
                "g_value_get_string", 
                "__snprintf_chk", 
                "_clutter_stage_window_get_type", 
                "clutter_event_set_stage", 
                "XOpenDisplay", 
                "g_datalist_clear", 
                "g_list_append", 
                "XStoreName", 
                "malloc", 
                "g_once_init_enter", 
                "g_dbus_method_invocation_return_error", 
                "g_module_close", 
                "g_snprintf", 
                "g_dbus_object_manager_server_set_connection", 
                "g_module_open", 
                "__gmon_start__", 
                "g_source_unref", 
                "SmcOpenConnection", 
                "g_source_set_name_by_id", 
                "qsort", 
                "g_signal_emit_by_name", 
                "clutter_events_pending", 
                "g_variant_new_take_string", 
                "clutter_actor_has_effects", 
                "g_task_propagate_pointer", 
                "g_task_run_in_thread", 
                "SmcInteractRequest", 
                "g_file_open_tmp", 
                "g_value_get_uint64", 
                "gtk_get_locale_direction", 
                "g_spawn_async", 
                "clutter_stage_event", 
                "up_client_get_lid_is_closed", 
                "g_strconcat", 
                "clutter_stage_skip_sync_delay", 
                "XSendEvent", 
                "xkb_x11_keymap_new_from_device", 
                "XkbLockGroup", 
                "clutter_actor_remove_all_children", 
                "cairo_xlib_surface_create_with_xrender_format", 
                "g_markup_parse_context_new", 
                "xcb_get_window_attributes", 
                "XCompositeRedirectWindow", 
                "XNextEvent", 
                "g_file_load_contents", 
                "XSetWindowBorderWidth", 
                "g_value_set_boolean", 
                "cairo_region_create_rectangles", 
                "g_input_stream_get_type", 
                "clutter_event_get_state", 
                "_cogl_winsys_egl_xlib_get_vtable", 
                "cairo_region_union_rectangle", 
                "g_dbus_method_invocation_get_connection", 
                "__strdup", 
                "g_bus_watch_name", 
                "ca_proplist_setf", 
                "sn_monitor_event_get_startup_sequence", 
                "clutter_actor_save_easing_state", 
                "g_task_return_pointer", 
                "g_array_remove_index", 
                "g_source_attach", 
                "g_list_concat", 
                "clutter_x11_request_reset_on_video_memory_purge", 
                "gtk_init_check", 
                "clutter_timeline_set_repeat_count", 
                "XRRUpdateConfiguration", 
                "g_idle_add", 
                "g_main_context_ref_thread_default", 
                "cogl_color_init_from_4ub", 
                "XQueryExtension", 
                "clutter_event_get_device_id", 
                "gdk_pixbuf_get_width", 
                "XcursorSetTheme", 
                "xcb_randr_query_output_property_valid_values", 
                "gnome_pnp_ids_new", 
                "g_data_input_stream_get_type", 
                "g_value_get_uint", 
                "calloc", 
                "xkb_x11_setup_xkb_extension", 
                "g_ptr_array_remove", 
                "cogl_texture_pixmap_x11_new", 
                "g_string_append_len", 
                "g_bus_unwatch_name", 
                "pango_font_description_get_size", 
                "clutter_actor_get_position", 
                "g_variant_lookup", 
                "g_param_spec_int64", 
                "XIBarrierReleasePointer", 
                "g_markup_error_quark", 
                "clutter_actor_get_width", 
                "clutter_actor_set_easing_mode", 
                "cairo_image_surface_create_for_data", 
                "XRRFreeGamma", 
                "XkbQueryExtension", 
                "XRRAllocGamma", 
                "g_signal_new", 
                "_Unwind_Resume", 
                "xkb_state_update_mask", 
                "g_hash_table_replace", 
                "g_malloc0", 
                "XAutoRepeatOn", 
                "gtk_widget_path_unref", 
                "clutter_init", 
                "g_hash_table_get_values", 
                "clutter_input_device_get_vendor_id", 
                "g_udev_device_get_property", 
                "clutter_paint_volume_set_from_allocation", 
                "cairo_translate", 
                "clutter_timeline_stop", 
                "g_variant_equal", 
                "cogl_context_get_display", 
                "g_direct_hash", 
                "_Jv_RegisterClasses", 
                "g_task_return_error", 
                "cogl_texture_get_data", 
                "XRRGetOutputPrimary", 
                "g_signal_handler_disconnect", 
                "memcpy", 
                "time", 
                "g_object_new", 
                "cogl_pipeline_new", 
                "g_signal_lookup", 
                "strerror", 
                "XSyncValueAdd", 
                "g_list_last", 
                "clutter_gesture_action_get_type", 
                "gtk_style_context_set_parent", 
                "gdk_pixbuf_get_pixels", 
                "g_settings_schema_unref", 
                "g_variant_get_int32", 
                "__gcc_personality_v0", 
                "sigemptyset", 
                "g_array_free", 
                "g_io_error_quark", 
                "clutter_actor_contains", 
                "g_object_class_install_properties", 
                "xcb_randr_change_output_property", 
                "xcb_randr_query_output_property_reply", 
                "g_variant_iter_free", 
                "cogl_texture_rectangle_new_with_size", 
                "cogl_texture_get_width", 
                "strrchr", 
                "gtk_style_context_get_padding", 
                "gtk_header_bar_get_type", 
                "XFreeEventData", 
                "gtk_widget_get_type", 
                "g_slice_alloc0", 
                "g_ptr_array_new", 
                "g_warn_message", 
                "g_hash_table_insert", 
                "g_settings_set_value", 
                "cairo_xlib_surface_get_width", 
                "g_memdup", 
                "SmcSetProperties", 
                "gtk_icon_theme_get_default", 
                "clutter_x11_disable_event_retrieval", 
                "XSyncSetCounter", 
                "__errno_location", 
                "g_slist_free_full", 
                "g_hash_table_unref", 
                "xcb_get_property_value_length", 
                "cogl_matrix_scale", 
                "cogl_texture_new_from_sub_texture", 
                "g_value_dup_string", 
                "gtk_widget_get_pango_context", 
                "cairo_destroy", 
                "clutter_actor_get_abs_allocation_vertices", 
                "clutter_actor_get_paint_opacity", 
                "g_str_hash", 
                "cairo_surface_destroy", 
                "g_assertion_message_expr", 
                "gdk_error_trap_pop", 
                "g_settings_get_int", 
                "cairo_region_create_rectangle", 
                "g_dbus_interface_skeleton_get_object_path", 
                "clutter_input_device_get_mapping_mode", 
                "cogl_texture_2d_new_from_data", 
                "g_dbus_proxy_get_cached_property", 
                "clutter_timeline_start", 
                "g_source_destroy", 
                "pango_layout_set_font_description", 
                "g_list_remove", 
                "gtk_icon_theme_load_icon", 
                "g_dbus_object_manager_client_get_type", 
                "XRRGetScreenSizeRange", 
                "g_hash_table_lookup_extended", 
                "cogl_framebuffer_set_stereo_mode", 
                "g_dbus_object_get_interface", 
                "XkbRF_Load", 
                "cogl_framebuffer_set_viewport", 
                "g_variant_iter_next", 
                "g_main_context_unref", 
                "XIfEvent", 
                "g_int_equal", 
                "g_value_set_variant", 
                "g_bus_unown_name", 
                "g_file_read", 
                "XUnmapWindow", 
                "xcb_change_window_attributes", 
                "clutter_actor_is_in_clone_paint", 
                "g_list_delete_link", 
                "g_param_spec_string", 
                "g_list_prepend", 
                "clutter_timeline_set_auto_reverse", 
                "chdir", 
                "g_queue_free", 
                "gdk_screen_get_number", 
                "g_param_spec_pointer", 
                "cairo_set_source_surface", 
                "g_flags_register_static", 
                "IceSetIOErrorHandler", 
                "g_string_new", 
                "XmbTextPropertyToTextList", 
                "g_task_new", 
                "g_dbus_gvariant_to_gvalue", 
                "sn_monitor_context_new", 
                "XSyncCreateAlarm", 
                "XkbRF_SetNamesProp", 
                "XDamageDestroy", 
                "cogl_texture_new_with_size", 
                "DPMSInfo", 
                "XResizeWindow", 
                "memcmp", 
                "clutter_event_is_pointer_emulated", 
                "clutter_device_manager_peek_devices", 
                "strtol", 
                "g_slist_remove", 
                "xkb_keymap_new_from_names", 
                "cogl_matrix_transform_point", 
                "cairo_format_stride_for_width", 
                "clutter_event_get_stage", 
                "g_object_ref_sink", 
                "g_value_get_double", 
                "g_slist_free_1", 
                "cogl_framebuffer_draw_rectangle", 
                "gtk_style_context_get_state", 
                "clutter_actor_paint", 
                "g_list_sort", 
                "g_signal_connect_data", 
                "g_get_home_dir", 
                "cairo_region_destroy", 
                "clutter_stage_view_get_type", 
                "xkb_keymap_num_layouts", 
                "clutter_input_device_get_device_id", 
                "pango_font_metrics_get_ascent", 
                "cogl_pipeline_copy", 
                "g_strdup", 
                "g_realloc", 
                "XcursorSetDefaultSize", 
                "g_usleep", 
                "g_type_check_instance_cast", 
                "XIUngrabDevice", 
                "g_list_index", 
                "gtk_widget_show", 
                "cogl_onscreen_swap_buffers", 
                "xcb_get_window_attributes_reply", 
                "clutter_event_get_coords", 
                "XCompositeQueryExtension", 
                "g_type_interface_add_prerequisite", 
                "g_utf8_validate", 
                "g_markup_parse_context_parse", 
                "g_utf8_get_char", 
                "sn_startup_sequence_get_workspace", 
                "clutter_timeline_get_type", 
                "g_variant_type_checked_", 
                "XSyncDestroyFence", 
                "XCompositeRedirectSubwindows", 
                "xcb_res_client_id_value_next", 
                "gtk_widget_path_iter_add_class", 
                "XcursorImagesDestroy", 
                "XkbRF_GetComponents", 
                "XcursorLibraryLoadImages", 
                "XRRQueryVersion", 
                "gtk_css_provider_get_named", 
                "sn_startup_sequence_get_timestamp", 
                "g_date_clear", 
                "XDeleteProperty", 
                "g_timeout_add_seconds", 
                "pango_context_get_language", 
                "XSyncValueLow32", 
                "g_intern_string", 
                "clutter_stage_view_get_layout", 
                "gdk_x11_window_lookup_for_display", 
                "cogl_texture_pixmap_x11_new_left", 
                "g_value_get_object", 
                "g_settings_get_mapped", 
                "clutter_actor_hide", 
                "g_value_get_boolean", 
                "fputs", 
                "XSyncResetFence", 
                "clutter_gesture_action_cancel", 
                "g_main_loop_quit", 
                "g_irepository_prepend_search_path", 
                "XChangeWindowAttributes", 
                "gdk_display_get_default_seat", 
                "gdk_window_get_height", 
                "g_hash_table_get_keys", 
                "gtk_settings_get_for_screen", 
                "g_variant_new_int32", 
                "XCompositeQueryVersion", 
                "g_source_remove", 
                "clutter_actor_event", 
                "XFixesDestroyRegion", 
                "gtk_css_provider_get_default", 
                "gdk_device_get_position", 
                "XIGrabTouchBegin", 
                "XOpenDevice", 
                "ca_proplist_destroy", 
                "cairo_region_subtract", 
                "cairo_set_operator", 
                "XFixesCreatePointerBarrier", 
                "clutter_backend_get_cogl_context", 
                "g_udev_client_query_by_device_file", 
                "XFreeStringList", 
                "gtk_style_context_new", 
                "gtk_widget_destroy", 
                "XFixesGetCursorImage", 
                "g_dbus_proxy_call", 
                "g_value_set_double", 
                "XSyncInitialize", 
                "g_child_watch_add", 
                "XIGrabDevice", 
                "gtk_cairo_should_draw_window", 
                "clutter_stage_set_key_focus", 
                "kill", 
                "g_dbus_interface_skeleton_get_type", 
                "g_value_get_pointer", 
                "g_cancellable_new", 
                "sqrt", 
                "g_source_set_priority", 
                "g_variant_builder_init", 
                "XcursorImageDestroy", 
                "free", 
                "_ITM_deregisterTMCloneTable", 
                "g_object_ref", 
                "g_error_matches", 
                "cairo_fill", 
                "g_type_class_add_private", 
                "clutter_input_device_get_product_id", 
                "gtk_widget_path_append_type", 
                "clutter_paint_volume_union", 
                "clutter_stage_get_type", 
                "cairo_save", 
                "g_object_interface_install_property", 
                "g_udev_device_get_parent", 
                "__cxa_finalize", 
                "g_string_insert_c", 
                "__sprintf_chk", 
                "gtk_render_frame", 
                "XDefineCursor", 
                "g_dbus_connection_get_type", 
                "clutter_device_manager_get_device", 
                "xkb_keymap_num_layouts_for_key", 
                "XDestroyWindow", 
                "g_ascii_dtostr", 
                "g_bytes_new_take", 
                "g_malloc0_n", 
                "g_source_set_name", 
                "XFreePixmap", 
                "g_dbus_object_proxy_get_type", 
                "XSyncListSystemCounters", 
                "XRRSetScreenSize", 
                "g_date_strftime", 
                "gdk_pixbuf_get_rowstride", 
                "g_variant_type_equal", 
                "ceilf", 
                "g_variant_ref_sink", 
                "XUngrabServer", 
                "g_get_charset", 
                "xcb_get_property", 
                "g_variant_unref", 
                "cogl_pipeline_set_color", 
                "pango_font_metrics_get_descent", 
                "XkbForceDeviceBell", 
                "g_clear_error", 
                "g_quark_to_string", 
                "log", 
                "XIChangeProperty", 
                "cogl_texture_2d_sliced_new_with_size", 
                "g_dbus_object_manager_server_export", 
                "g_hash_table_new", 
                "g_setenv", 
                "cogl_texture_pixmap_x11_is_using_tfp_extension", 
                "g_string_append_printf", 
                "XAddToSaveSet", 
                "g_markup_collect_attributes", 
                "XkbRF_Free", 
                "g_dbus_interface_skeleton_get_connection", 
                "gdk_x11_lookup_xdisplay", 
                "g_str_equal", 
                "IceProcessMessages", 
                "g_variant_new_from_bytes", 
                "DPMSSetTimeouts", 
                "g_unsetenv", 
                "gtk_style_context_set_state", 
                "XKillClient", 
                "g_boxed_type_register_static", 
                "g_dbus_method_invocation_get_sender", 
                "cogl_renderer_new", 
                "g_mutex_clear", 
                "bindtextdomain", 
                "XSyncFreeSystemCounterList", 
                "cogl_get_clock_time", 
                "g_source_set_callback", 
                "gtk_icon_theme_has_icon", 
                "__stack_chk_fail", 
                "gtk_style_context_get_path", 
                "g_type_check_instance_is_a", 
                "g_type_module_unuse", 
                "XGetEventData", 
                "xcb_res_query_client_ids", 
                "pango_font_description_free", 
                "g_dbus_object_get_type", 
                "gtk_widget_get_window", 
                "g_dbus_interface_get_info", 
                "_clutter_event_translator_get_type", 
                "gdk_set_allowed_backends", 
                "g_slist_delete_link", 
                "clutter_stage_get_frame_counter", 
                "XChangeProperty", 
                "g_value_set_int64", 
                "XSyncValueHigh32", 
                "floorf", 
                "XDisplayName", 
                "XRRQueryExtension", 
                "g_dbus_method_invocation_get_message", 
                "gdk_x11_window_get_xid", 
                "clutter_input_device_get_pointer_actor", 
                "g_bus_own_name", 
                "g_unix_input_stream_new", 
                "g_slist_free", 
                "gdk_error_trap_pop_ignored", 
                "g_dbus_proxy_call_with_unix_fd_list", 
                "g_file_replace_contents_async", 
                "clutter_event_get_position", 
                "clutter_input_device_get_modifier_state", 
                "clutter_device_manager_get_default", 
                "g_dbus_interface_info_lookup_signal", 
                "cairo_region_subtract_rectangle", 
                "gtk_style_context_add_provider", 
                "g_object_get_property", 
                "g_object_class_install_property", 
                "g_settings_get_strv", 
                "g_dbus_proxy_call_sync", 
                "xkb_keymap_num_levels_for_key", 
                "cairo_paint", 
                "g_settings_new_with_path", 
                "bind_textdomain_codeset", 
                "xkb_keymap_key_for_each", 
                "g_list_free_full", 
                "gdk_window_destroy", 
                "cogl_pipeline_set_layer_combine", 
                "cogl_xlib_renderer_set_threaded_swap_wait_enabled", 
                "pango_layout_set_single_paragraph_mode", 
                "cairo_region_is_empty", 
                "g_value_set_int", 
                "XAutoRepeatOff", 
                "g_markup_parse_context_end_parse", 
                "g_hash_table_lookup", 
                "exit", 
                "gtk_style_context_set_path", 
                "g_ptr_array_free", 
                "clutter_actor_get_type", 
                "clutter_stage_set_sync_delay", 
                "g_hash_table_contains", 
                "g_settings_set_int", 
                "XIUngrabButton", 
                "XFixesInvertRegion", 
                "gtk_render_background_get_clip", 
                "g_get_monotonic_time", 
                "g_value_set_flags", 
                "XFreeCursor", 
                "__strncpy_chk", 
                "g_hash_table_size", 
                "clutter_actor_iter_prev", 
                "g_array_sized_new", 
                "SmcSaveYourselfDone", 
                "g_cclosure_marshal_generic", 
                "g_bus_watch_name_on_connection", 
                "g_enum_register_static", 
                "g_ascii_strtoll", 
                "XCompositeNameWindowPixmap", 
                "XkbSetAutoRepeatRate", 
                "cogl_has_feature", 
                "fcntl", 
                "g_type_class_peek_parent", 
                "g_object_set_qdata_full", 
                "clutter_actor_get_size", 
                "gdk_pixbuf_get_has_alpha", 
                "gtk_style_provider_get_type", 
                "g_list_length", 
                "SmcRequestSaveYourselfPhase2", 
                "g_param_spec_flags", 
                "g_type_module_use", 
                "g_intern_static_string", 
                "clutter_actor_set_position", 
                "XSyncTriggerFence", 
                "round", 
                "__fprintf_chk", 
                "g_async_result_get_source_object", 
                "g_hash_table_foreach", 
                "g_main_loop_new", 
                "xcb_get_property_reply", 
                "g_object_unref", 
                "g_build_filename", 
                "g_initable_new", 
                "XIGrabKeycode", 
                "cogl_pipeline_set_color4ub", 
                "cairo_region_translate", 
                "g_module_error", 
                "g_list_remove_link", 
                "cogl_renderer_set_custom_winsys", 
                "XRRGetScreenResourcesCurrent", 
                "g_async_initable_new_finish", 
                "g_malloc", 
                "clutter_input_device_tool_get_type", 
                "XIGetProperty", 
                "g_strfreev", 
                "clutter_actor_set_size", 
                "g_object_notify", 
                "g_variant_get_data_as_bytes", 
                "gdk_window_get_position", 
                "cogl_framebuffer_allocate", 
                "cairo_surface_create_similar_image", 
                "g_param_spec_enum", 
                "XRRGetCrtcGamma", 
                "g_slist_reverse", 
                "g_str_has_prefix", 
                "g_hash_table_remove_all", 
                "g_option_context_add_main_entries", 
                "g_datalist_id_set_data_full", 
                "cairo_region_get_extents", 
                "g_dbus_method_invocation_get_method_info", 
                "g_dbus_gvalue_to_gvariant", 
                "g_param_spec_double", 
                "g_type_check_class_cast", 
                "XVisualIDFromVisual", 
                "gdk_pixbuf_get_height", 
                "cairo_region_union", 
                "g_get_current_time", 
                "XGetGeometry", 
                "g_hash_table_iter_init", 
                "cogl_matrix_rotate", 
                "XRRDeleteMonitor", 
                "g_getenv", 
                "IceConnectionNumber", 
                "g_dbus_method_invocation_return_value_with_unix_fd_list", 
                "gtk_window_get_type", 
                "g_param_spec_object", 
                "g_io_channel_unref", 
                "g_settings_schema_source_lookup", 
                "g_strv_length", 
                "g_type_instance_get_private", 
                "gtk_icon_info_load_symbolic_for_context", 
                "fclose", 
                "g_variant_iter_init", 
                "xcb_get_property_value", 
                "pango_context_get_metrics", 
                "g_list_free_1", 
                "clutter_actor_get_transition", 
                "mkdir", 
                "xkb_context_unref", 
                "pango_font_metrics_unref", 
                "SmcInteractDone", 
                "clutter_set_custom_backend_func", 
                "gdk_x11_screen_lookup_visual", 
                "g_value_set_pointer", 
                "cogl_offscreen_new_with_texture", 
                "g_ascii_strdown", 
                "pango_font_description_equal", 
                "XSyncQueryExtension", 
                "XGetFeedbackControl", 
                "g_ptr_array_unref", 
                "XGetClassHint", 
                "gnome_pnp_ids_get_pnp_id", 
                "XIQueryVersion", 
                "g_mutex_init", 
                "cogl_offscreen_get_texture", 
                "xcb_res_client_id_value_value", 
                "g_list_insert_before", 
                "g_variant_new_string", 
                "cogl_object_ref", 
                "clutter_backend_get_type", 
                "xkb_x11_get_core_keyboard_device_id", 
                "_ITM_registerTMCloneTable", 
                "clutter_event_get_button", 
                "gtk_style_context_get", 
                "XRRGetScreenResources", 
                "XRRSetCrtcGamma", 
                "XcursorImageCreate", 
                "gtk_style_context_get_margin", 
                "clutter_actor_queue_redraw_with_clip", 
                "clutter_x11_handle_event", 
                "g_quark_try_string"
            ], 
            "rpm": "mutter-3.22.3-11.el7.x86_64.rpm"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2mirror_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2mirror.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__syslog_chk", 
                "_Jv_RegisterClasses", 
                "dmeventd_lvm2_unlock", 
                "strtol", 
                "dmeventd_lvm2_run", 
                "dm_split_words", 
                "dm_get_next_target", 
                "__gmon_start__", 
                "dmeventd_lvm2_pool", 
                "dmeventd_lvm2_command", 
                "dm_task_get_name", 
                "dmeventd_lvm2_lock", 
                "_ITM_registerTMCloneTable", 
                "strcmp", 
                "_ITM_deregisterTMCloneTable", 
                "dmeventd_lvm2_init", 
                "strlen", 
                "dm_free_wrapper", 
                "__stack_chk_fail", 
                "dmeventd_lvm2_exit", 
                "strchr"
            ], 
            "rpm": "mutter-3.22.3-11.el7.x86_64.rpm"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2raid_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2raid.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "strchr", 
                "_ITM_deregisterTMCloneTable", 
                "dmeventd_lvm2_unlock", 
                "dmeventd_lvm2_init", 
                "dm_get_next_target", 
                "dm_split_words", 
                "dmeventd_lvm2_pool", 
                "__stack_chk_fail", 
                "dmeventd_lvm2_command", 
                "strtol", 
                "__syslog_chk", 
                "strcmp", 
                "dmeventd_lvm2_run", 
                "dmeventd_lvm2_exit", 
                "__cxa_finalize", 
                "dm_task_get_name", 
                "_Jv_RegisterClasses"
            ], 
            "rpm": "mutter-3.22.3-11.el7.x86_64.rpm"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2thin_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2thin.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__syslog_chk", 
                "dm_pool_zalloc", 
                "dm_bitset_destroy", 
                "_ITM_registerTMCloneTable", 
                "_Jv_RegisterClasses", 
                "strerror", 
                "dm_task_destroy", 
                "waitpid", 
                "_ITM_deregisterTMCloneTable", 
                "dmeventd_lvm2_unlock", 
                "dm_bitset_create", 
                "dmeventd_lvm2_init", 
                "dm_task_get_name", 
                "dm_mountinfo_read", 
                "dm_task_create", 
                "dmeventd_lvm2_run", 
                "dm_pool_free", 
                "dm_pool_destroy", 
                "execvp", 
                "dm_task_get_deps", 
                "dm_task_run", 
                "dm_task_no_open_count", 
                "dmeventd_lvm2_lock", 
                "dm_get_next_target", 
                "exit", 
                "dm_task_get_names", 
                "dmeventd_lvm2_exit", 
                "__errno_location", 
                "fork", 
                "__stack_chk_fail", 
                "dm_task_get_info", 
                "dm_get_status_thin_pool", 
                "dm_task_set_name", 
                "__cxa_finalize", 
                "__gmon_start__"
            ], 
            "rpm": "mutter-3.22.3-11.el7.x86_64.rpm"
        }, 
        "usr/lib64/mutter/libmutter-clutter-1_0_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/mutter/libmutter-clutter-1.0.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "g_queue_new", 
                "pango_font_description_get_style", 
                "g_cclosure_marshal_VOID__OBJECT", 
                "json_parser_get_current_line", 
                "g_utf8_substring", 
                "cogl_bitmap_get_buffer", 
                "XkbSelectEventDetails", 
                "g_key_file_get_double", 
                "g_mutex_unlock", 
                "g_slist_free_1", 
                "cairo_surface_mark_dirty", 
                "cairo_rel_curve_to", 
                "FcInitReinitialize", 
                "cairo_set_operator", 
                "pango_layout_get_text", 
                "cogl_frame_info_get_frame_counter", 
                "cogl_program_attach_shader", 
                "cogl_clutter_winsys_xlib_get_visual_info_CLUTTER", 
                "abort", 
                "g_unichar_isspace", 
                "g_value_get_boxed", 
                "json_object_get_size", 
                "cogl_pipeline_set_layer_texture", 
                "g_cclosure_marshal_VOID__VOID", 
                "g_unichar_iscntrl", 
                "atk_text_get_type", 
                "cogl_framebuffer_set_modelview_matrix", 
                "cogl_pipeline_set_layer_filters", 
                "g_source_add_poll", 
                "floorf", 
                "cogl_matrix_free", 
                "g_value_set_uint64", 
                "g_type_default_interface_peek", 
                "g_value_get_schar", 
                "g_value_set_boolean", 
                "pango_font_description_get_size_is_absolute", 
                "cogl_set_source_color4ub", 
                "pango_layout_set_ellipsize", 
                "g_object_new", 
                "cogl_indices_new", 
                "cogl_pop_framebuffer", 
                "g_param_spec_internal", 
                "g_list_first", 
                "g_value_copy", 
                "g_value_unset", 
                "g_type_interface_peek_parent", 
                "g_initially_unowned_get_type", 
                "g_printerr", 
                "g_signal_lookup", 
                "g_boxed_type_register_static", 
                "g_main_loop_is_running", 
                "g_object_ref_sink", 
                "g_malloc_n", 
                "g_param_spec_float", 
                "cogl_framebuffer_set_dither_enabled", 
                "pango_layout_get_line_readonly", 
                "g_option_context_parse", 
                "cogl_color_get_red_byte", 
                "g_param_spec_unichar", 
                "__sprintf_chk", 
                "g_key_file_has_group", 
                "atk_text_attribute_get_name", 
                "cogl_color_get_alpha_byte", 
                "g_qsort_with_data", 
                "g_slist_prepend", 
                "cogl_pango_font_map_create_context", 
                "XSetErrorHandler", 
                "cogl_push_matrix", 
                "malloc", 
                "json_node_new", 
                "cogl_primitive_new_p3", 
                "atk_text_attribute_get_value", 
                "g_utf8_get_char", 
                "json_object_remove_member", 
                "cogl_pango_font_map_new", 
                "g_str_has_prefix", 
                "pango_layout_iter_next_line", 
                "cogl_matrix_copy", 
                "cogl_pipeline_set_layer_null_texture", 
                "g_test_message", 
                "g_assertion_message", 
                "cogl_get_features", 
                "ceilf", 
                "json_node_get_node_type", 
                "g_hash_table_iter_remove", 
                "g_slist_remove_link", 
                "XPending", 
                "g_param_spec_uint", 
                "g_type_interface_add_prerequisite", 
                "g_slist_nth_data", 
                "g_node_insert_before", 
                "g_direct_equal", 
                "pango_attr_iterator_get_attrs", 
                "fwrite", 
                "g_source_attach", 
                "XLookupString", 
                "cairo_curve_to", 
                "cogl_pipeline_get_layer_min_filter", 
                "json_object_get_array_member", 
                "cogl_color_get_green", 
                "cairo_surface_write_to_png", 
                "g_string_insert_c", 
                "g_object_get", 
                "XChangeProperty", 
                "pango_layout_get_width", 
                "g_param_type_register_static", 
                "cogl_pipeline_get_color", 
                "g_sequence_get_iter_at_pos", 
                "cairo_set_user_data", 
                "XSetWMHints", 
                "g_type_register_static", 
                "cogl_shader_is_compiled", 
                "cogl_depth_state_init", 
                "g_object_add_weak_pointer", 
                "json_parser_get_type", 
                "cairo_set_source_rgba", 
                "g_strdelimit", 
                "XQueryExtension", 
                "XkbGetNames", 
                "g_queue_pop_head", 
                "g_object_is_floating", 
                "cogl_vector3_subtract", 
                "cogl_framebuffer_draw_rectangle", 
                "g_ascii_toupper", 
                "json_parser_load_from_file", 
                "g_param_spec_enum", 
                "g_sequence_append", 
                "g_signal_emit_by_name", 
                "cogl_pipeline_get_layer_texture", 
                "cogl_set_source_color", 
                "cairo_rel_move_to", 
                "pango_layout_get_alignment", 
                "g_type_instance_get_private", 
                "atk_object_set_role", 
                "XSetWMNormalHints", 
                "g_sequence_iter_prev", 
                "json_builder_new", 
                "g_queue_push_head", 
                "g_node_traverse", 
                "g_value_get_boolean", 
                "g_dataset_id_get_data", 
                "sqrt", 
                "g_sequence_iter_next", 
                "cogl_framebuffer_pop_matrix", 
                "g_module_symbol", 
                "g_strdup_printf", 
                "atk_get_toolkit_name", 
                "cogl_create_program", 
                "XInternAtom", 
                "pango_find_base_dir", 
                "cogl_framebuffer_allocate", 
                "__cxa_finalize", 
                "g_module_open", 
                "g_option_group_new", 
                "g_list_prepend", 
                "g_key_file_load_from_file", 
                "cogl_renderer_connect", 
                "cogl_framebuffer_push_matrix", 
                "cogl_depth_state_set_test_enabled", 
                "g_value_get_string", 
                "g_source_unref", 
                "g_main_context_wakeup", 
                "g_type_class_peek", 
                "g_ptr_array_sized_new", 
                "cogl_buffer_unmap", 
                "cogl_set_framebuffer", 
                "cogl_snippet_set_replace", 
                "g_ptr_array_new", 
                "g_type_value_table_peek", 
                "g_ascii_strcasecmp", 
                "pango_context_get_font_description", 
                "g_value_set_gtype", 
                "g_array_sized_new", 
                "strcmp", 
                "json_object_has_member", 
                "atk_object_ref_state_set", 
                "cogl_texture_get_max_waste", 
                "g_free", 
                "pango_attr_list_new", 
                "cogl_renderer_set_driver", 
                "g_list_find_custom", 
                "g_signal_add_emission_hook", 
                "g_value_set_uchar", 
                "memset", 
                "sincos", 
                "cogl_offscreen_new_to_texture", 
                "g_slist_find", 
                "pango_font_description_get_family", 
                "g_source_set_can_recurse", 
                "cogl_program_link", 
                "cogl_texture_pixmap_x11_update_area", 
                "g_ascii_strdown", 
                "g_type_fundamental_next", 
                "cogl_is_pipeline", 
                "g_enum_register_static", 
                "json_builder_add_double_value", 
                "cogl_pipeline_set_uniform_float", 
                "pango_layout_get_ellipsize", 
                "cogl_pipeline_set_depth_state", 
                "acos", 
                "XkbLibraryVersion", 
                "g_slice_copy", 
                "g_object_class_override_property", 
                "cairo_image_surface_get_data", 
                "cogl_pipeline_set_color", 
                "g_cclosure_marshal_VOID__INT", 
                "cogl_framebuffer_get_dither_enabled", 
                "json_object_get_boolean_member", 
                "getpid", 
                "XGetWindowProperty", 
                "g_value_get_float", 
                "sqrtf", 
                "json_node_get_value_type", 
                "g_value_take_boxed", 
                "XIFreeDeviceInfo", 
                "g_array_free", 
                "g_list_last", 
                "_ITM_deregisterTMCloneTable", 
                "cairo_line_to", 
                "cogl_frame_info_get_presentation_time", 
                "cogl_framebuffer_push_path_clip", 
                "XCompositeQueryVersion", 
                "pango_font_description_to_string", 
                "_ITM_registerTMCloneTable", 
                "cogl_framebuffer_draw_primitive", 
                "pango_unichar_direction", 
                "g_cclosure_marshal_VOID__BOXED", 
                "json_object_get_members", 
                "g_ascii_strtod", 
                "cogl_onscreen_swap_buffers_with_damage", 
                "g_key_file_get_integer", 
                "g_param_spec_string", 
                "cogl_set_modelview_matrix", 
                "g_ptr_array_set_free_func", 
                "atk_state_set_contains_state", 
                "g_hash_table_get_keys", 
                "g_object_notify_by_pspec", 
                "g_thread_pool_new", 
                "pango_layout_index_to_pos", 
                "XkbRefreshKeyboardMapping", 
                "cairo_surface_finish", 
                "g_timer_destroy", 
                "cogl_texture_pixmap_x11_new", 
                "XWithdrawWindow", 
                "cairo_rectangle", 
                "g_type_check_is_value_type", 
                "XFreeEventData", 
                "g_set_error", 
                "pango_layout_set_wrap", 
                "g_flags_get_value_by_name", 
                "g_log", 
                "cogl_matrix_transform_points", 
                "g_idle_add_full", 
                "g_resources_lookup_data", 
                "g_timer_start", 
                "g_string_insert", 
                "g_once_init_leave", 
                "cogl_program_set_uniform_matrix", 
                "cairo_image_surface_get_height", 
                "logf", 
                "g_str_equal", 
                "cogl_attribute_buffer_new", 
                "XResizeWindow", 
                "cogl_texture_set_region", 
                "pango_font_description_free", 
                "pango_context_set_language", 
                "g_log_set_always_fatal", 
                "cogl_onscreen_template_new", 
                "g_slist_find_custom", 
                "g_slist_position", 
                "cogl_texture_new_from_data", 
                "g_value_get_enum", 
                "g_intern_string", 
                "cairo_image_surface_create", 
                "g_signal_override_class_handler", 
                "pango_font_description_copy", 
                "memmove", 
                "g_value_set_enum", 
                "json_object_get_member", 
                "g_test_bug_base", 
                "cairo_restore", 
                "cogl_matrix_init_identity", 
                "XCompositeUnredirectWindow", 
                "cogl_snippet_new", 
                "g_slist_index", 
                "g_list_remove_link", 
                "cairo_rel_line_to", 
                "cogl_pipeline_set_color4ub", 
                "XISelectEvents", 
                "g_type_class_ref", 
                "g_module_close", 
                "g_intern_static_string", 
                "g_test_skip", 
                "g_slist_delete_link", 
                "json_array_get_element", 
                "json_object_get_int_member", 
                "XDamageQueryExtension", 
                "pango_context_set_font_description", 
                "g_slist_remove", 
                "g_object_ref", 
                "XMapWindow", 
                "cogl_onscreen_remove_frame_callback", 
                "g_sequence_prepend", 
                "pango_attr_iterator_destroy", 
                "g_strcmp0", 
                "g_test_init", 
                "cogl_framebuffer_set_projection_matrix", 
                "cogl_is_texture", 
                "g_timer_elapsed", 
                "cogl_vector3_cross_product", 
                "XGetWindowAttributes", 
                "g_type_add_interface_static", 
                "cogl_pipeline_add_layer_snippet", 
                "g_enum_get_value_by_nick", 
                "cogl_pipeline_set_uniform_1f", 
                "cogl_buffer_set_update_hint", 
                "cogl_pipeline_set_user_program", 
                "g_hash_table_new_full", 
                "XTranslateCoordinates", 
                "pango_layout_set_attributes", 
                "cogl_handle_ref", 
                "cogl_push_framebuffer", 
                "cogl_color_init_from_4ub", 
                "g_value_get_pointer", 
                "memcpy", 
                "g_queue_is_empty", 
                "g_signal_handlers_disconnect_matched", 
                "g_list_model_get_item", 
                "cogl_onscreen_new", 
                "g_slist_append", 
                "pango_fc_font_map_get_type", 
                "g_test_add_data_func_full", 
                "g_object_weak_unref", 
                "g_param_spec_int", 
                "cogl_pango_font_map_clear_glyph_cache", 
                "g_list_remove", 
                "g_main_loop_new", 
                "XSetWMProperties", 
                "g_sequence_insert_before", 
                "atk_object_ref_accessible_child", 
                "pango_font_description_get_weight", 
                "g_string_append", 
                "XCompositeRedirectWindow", 
                "cogl_shader_compile", 
                "strstr", 
                "cogl_bitmap_new_for_data", 
                "cogl_matrix_transform_point", 
                "g_array_unref", 
                "pango_layout_xy_to_index", 
                "json_node_get_double", 
                "g_unichar_to_utf8", 
                "cogl_matrix_is_identity", 
                "g_ascii_tolower", 
                "cogl_texture_pixmap_x11_set_damage_object", 
                "g_main_loop_unref", 
                "g_closure_set_marshal", 
                "g_sequence_get_end_iter", 
                "json_node_free", 
                "g_option_context_add_group", 
                "floor", 
                "cairo_font_options_set_subpixel_order", 
                "cogl2_path_fill", 
                "g_object_class_install_properties", 
                "pango_layout_get_context", 
                "cogl_framebuffer_read_pixels_into_bitmap", 
                "g_str_hash", 
                "XDestroyWindow", 
                "XPeekEvent", 
                "cogl_onscreen_set_swap_throttled", 
                "pango_attr_iterator_get", 
                "XkbSelectEvents", 
                "pango_color_parse", 
                "g_signal_remove_emission_hook", 
                "g_param_spec_flags", 
                "cosf", 
                "g_type_check_instance_is_fundamentally_a", 
                "atk_object_set_parent", 
                "pango_attr_iterator_next", 
                "cairo_font_options_get_hint_style", 
                "json_builder_add_string_value", 
                "cairo_gobject_surface_get_type", 
                "cogl_program_set_uniform_float", 
                "__fprintf_chk", 
                "g_object_set_qdata", 
                "XScreenNumberOfScreen", 
                "g_array_insert_vals", 
                "json_array_get_elements", 
                "g_key_file_error_quark", 
                "g_cclosure_new", 
                "g_option_group_add_entries", 
                "cogl_onscreen_add_frame_callback", 
                "cogl_pipeline_set_layer_wrap_mode", 
                "g_value_peek_pointer", 
                "pango_attr_list_copy", 
                "g_ptr_array_new_with_free_func", 
                "g_object_set", 
                "g_malloc0_n", 
                "g_thread_pool_push", 
                "XkbSetDetectableAutoRepeat", 
                "pango_layout_iter_get_line", 
                "strtoul", 
                "g_bit_lock", 
                "XkbTranslateKeyCode", 
                "g_object_thaw_notify", 
                "atk_object_notify_state_change", 
                "cogl_clutter_winsys_has_feature_CLUTTER", 
                "XSync", 
                "tan", 
                "cogl_object_ref", 
                "g_quark_from_string", 
                "pango_layout_line_get_x_ranges", 
                "g_value_set_double", 
                "cogl_get_modelview_matrix", 
                "json_builder_begin_object", 
                "atk_gobject_accessible_get_object", 
                "g_object_remove_weak_pointer", 
                "g_value_take_object", 
                "g_hash_table_size", 
                "g_option_context_set_main_group", 
                "g_strndup", 
                "g_type_interface_peek", 
                "g_source_set_callback", 
                "g_value_take_string", 
                "g_list_length", 
                "g_value_set_static_string", 
                "cogl_pop_source", 
                "g_hash_table_replace", 
                "cogl_pipeline_set_cull_face_mode", 
                "g_queue_free", 
                "g_list_free_full", 
                "cogl_pipeline_set_blend", 
                "g_value_set_int", 
                "g_hash_table_iter_next", 
                "fmod", 
                "g_hash_table_insert", 
                "g_bytes_get_data", 
                "g_value_get_object", 
                "cogl_frame_info_get_refresh_rate", 
                "g_value_get_uint", 
                "cogl_pipeline_set_color4f", 
                "g_list_find", 
                "g_object_get_data", 
                "XOpenDisplay", 
                "json_parser_load_from_data", 
                "g_getenv", 
                "g_closure_ref", 
                "cogl_object_unref", 
                "g_signal_connect_data", 
                "g_sequence_iter_is_end", 
                "cogl_x11_onscreen_set_foreign_window_xid", 
                "XFlush", 
                "cogl_shader_source", 
                "g_strdup", 
                "cogl_get_bitmasks", 
                "g_dgettext", 
                "g_list_copy", 
                "g_error_get_type", 
                "g_build_filename", 
                "g_utf8_find_prev_char", 
                "cogl2_path_new", 
                "g_ptr_array_add", 
                "pango_attr_iterator_range", 
                "g_list_delete_link", 
                "atk_object_initialize", 
                "XGrabServer", 
                "g_list_free", 
                "g_slist_copy", 
                "cairo_region_intersect_rectangle", 
                "json_builder_get_root", 
                "pango_fc_font_map_cache_clear", 
                "g_node_new", 
                "g_flags_register_static", 
                "cogl_swap_chain_new", 
                "g_file_test", 
                "cogl_is_onscreen", 
                "g_value_set_boxed", 
                "cogl_onscreen_clutter_backend_set_size_CLUTTER", 
                "g_gtype_get_type", 
                "XkbGetUpdatedMap", 
                "g_object_interface_install_property", 
                "g_signal_handler_disconnect", 
                "g_mutex_lock", 
                "cogl_framebuffer_get_height", 
                "g_malloc0", 
                "g_object_set_data_full", 
                "cogl_display_new", 
                "g_type_is_a", 
                "json_node_get_int", 
                "cogl_framebuffer_finish", 
                "g_array_set_size", 
                "XGetGeometry", 
                "sincosf", 
                "g_hash_table_foreach_steal", 
                "free", 
                "g_main_loop_run", 
                "g_get_monotonic_time", 
                "cogl_context_new", 
                "cogl_rectangle_with_texture_coords", 
                "g_value_init", 
                "g_logv", 
                "atanf", 
                "pango_layout_index_to_line_x", 
                "g_source_get_time", 
                "g_type_from_name", 
                "XInternAtoms", 
                "g_unichar_validate", 
                "XkbQueryExtension", 
                "pango_font_description_equal", 
                "XSynchronize", 
                "cogl_get_draw_framebuffer", 
                "pango_context_get_language", 
                "pango_alignment_get_type", 
                "pango_font_description_from_string", 
                "cogl_error_free", 
                "g_object_class_install_property", 
                "cogl_get_option_group", 
                "pango_layout_get_attributes", 
                "XIQueryDevice", 
                "pango_layout_get_character_count", 
                "cogl_pipeline_set_layer_combine_constant", 
                "XkbGetState", 
                "cogl_color_get_blue_byte", 
                "g_hash_table_unref", 
                "cogl_matrix_view_2d_in_perspective", 
                "g_queue_delete_link", 
                "cairo_font_options_create", 
                "g_queue_peek_tail", 
                "g_slist_insert", 
                "atk_object_factory_get_type", 
                "asinf", 
                "pango_layout_get_log_attrs_readonly", 
                "g_param_spec_boolean", 
                "cogl_renderer_check_onscreen_template", 
                "XCompositeNameWindowPixmap", 
                "pango_layout_get_indent", 
                "g_object_run_dispose", 
                "cogl_is_path", 
                "strchr", 
                "cogl_renderer_add_constraint", 
                "g_object_unref", 
                "cogl_matrix_rotate", 
                "g_node_children_foreach", 
                "atk_object_get_n_accessible_children", 
                "memcmp", 
                "json_array_get_double_element", 
                "g_list_sort", 
                "g_value_get_uint64", 
                "g_quark_from_static_string", 
                "g_key_file_get_string", 
                "g_hash_table_remove", 
                "cogl_framebuffer_read_pixels", 
                "cairo_region_create_rectangle", 
                "g_key_file_new", 
                "cogl_framebuffer_set_viewport", 
                "g_param_spec_gtype", 
                "pango_layout_set_justify", 
                "g_value_set_flags", 
                "pango_layout_get_cursor_pos", 
                "g_string_sized_new", 
                "XDisplayKeycodes", 
                "atk_object_get_role", 
                "g_return_if_fail_warning", 
                "g_type_check_value", 
                "g_array_append_vals", 
                "g_object_set_property", 
                "g_get_prgname", 
                "g_value_set_ulong", 
                "cogl_texture_new_from_bitmap", 
                "XSendEvent", 
                "XkbFreeKeyboard", 
                "json_object_set_string_member", 
                "atk_window_get_type", 
                "g_object_notify", 
                "atk_editable_text_get_type", 
                "g_object_newv", 
                "json_builder_end_object", 
                "cogl_display_setup", 
                "cairo_surface_set_device_scale", 
                "g_param_spec_ref", 
                "cairo_image_surface_get_stride", 
                "g_type_class_unref", 
                "FcConfigUptoDate", 
                "g_option_group_set_parse_hooks", 
                "cogl_swap_chain_set_has_alpha", 
                "cogl_primitive_new_with_attributes", 
                "cogl_bitmap_get_rowstride", 
                "pango_attr_list_splice", 
                "g_value_get_double", 
                "cogl_set_viewport", 
                "XGetSelectionOwner", 
                "g_utf8_strlen", 
                "g_option_context_free", 
                "cairo_gobject_context_get_type", 
                "cairo_image_surface_get_width", 
                "pango_layout_iter_free", 
                "g_value_register_transform_func", 
                "XKeycodeToKeysym", 
                "g_mutex_init", 
                "g_hash_table_get_values", 
                "cogl_set_source", 
                "g_option_context_new", 
                "json_array_get_length", 
                "XDefineCursor", 
                "cairo_create", 
                "g_utf8_get_char_validated", 
                "g_type_class_get_private", 
                "g_param_spec_double", 
                "XUndefineCursor", 
                "pango_layout_set_alignment", 
                "cogl_buffer_map", 
                "XCreatePixmapCursor", 
                "g_value_type_transformable", 
                "XChangeWindowAttributes", 
                "g_source_destroy", 
                "g_value_set_object", 
                "g_mutex_trylock", 
                "cogl_program_get_uniform_location", 
                "g_list_insert", 
                "g_type_add_instance_private", 
                "g_queue_pop_tail", 
                "g_slist_foreach", 
                "cairo_close_path", 
                "json_node_get_value", 
                "g_dpgettext2", 
                "g_value_get_ulong", 
                "g_queue_push_tail", 
                "pango_layout_get_wrap", 
                "g_source_new", 
                "cogl_primitive_set_indices", 
                "XkbGetMap", 
                "g_sequence_new", 
                "pango_font_description_get_variant", 
                "g_signal_new", 
                "pango_cairo_context_set_resolution", 
                "pango_layout_get_iter", 
                "cogl_onscreen_template_set_stereo_enabled", 
                "g_timer_new", 
                "g_utf8_pointer_to_offset", 
                "cogl_is_texture_pixmap_x11", 
                "g_hash_table_steal", 
                "atk_registry_set_factory_type", 
                "pango_layout_set_font_description", 
                "g_value_get_flags", 
                "g_once_init_enter", 
                "g_signal_connect_object", 
                "g_list_append", 
                "g_list_nth", 
                "cogl_color_init_from_4f", 
                "g_queue_foreach", 
                "g_param_spec_ulong", 
                "cogl_matrix_perspective", 
                "g_propagate_error", 
                "g_list_insert_sorted", 
                "pango_ellipsize_mode_get_type", 
                "g_ascii_strtoll", 
                "g_object_set_qdata_full", 
                "cairo_image_surface_create_for_data", 
                "XSelectInput", 
                "json_object_get_double_member", 
                "cogl_xlib_renderer_handle_event", 
                "pango_attr_list_ref", 
                "json_array_get_string_element", 
                "pango_attr_list_unref", 
                "g_hash_table_remove_all", 
                "g_utf8_offset_to_pointer", 
                "__gmon_start__", 
                "json_array_foreach_element", 
                "g_slice_alloc", 
                "cairo_region_destroy", 
                "atk_gobject_accessible_for_object", 
                "pango_language_get_default", 
                "cogl_primitive_new_p2", 
                "json_array_get_int_element", 
                "cogl_push_source", 
                "pango_font_description_get_size", 
                "g_cclosure_marshal_VOID__BOOLEAN", 
                "cairo_paint", 
                "cairo_font_options_destroy", 
                "cogl_attribute_new", 
                "atk_component_get_type", 
                "g_param_spec_boxed", 
                "cairo_move_to", 
                "cogl_matrix_project_points", 
                "g_value_get_gtype", 
                "json_node_get_array", 
                "g_option_context_set_ignore_unknown_options", 
                "cogl_framebuffer_push_rectangle_clip", 
                "g_value_set_string", 
                "cogl_xlib_renderer_set_foreign_display", 
                "cogl_offscreen_get_texture", 
                "g_dataset_id_set_data_full", 
                "pango_layout_get_type", 
                "cogl_pipeline_set_layer_combine", 
                "memchr", 
                "g_path_get_dirname", 
                "json_builder_end_array", 
                "g_sequence_get_length", 
                "pango_layout_set_width", 
                "cairo_gobject_rectangle_int_get_type", 
                "pango_font_description_get_stretch", 
                "cairo_font_options_copy", 
                "pango_attr_list_insert", 
                "cogl_texture_new_with_size", 
                "g_main_current_source", 
                "cogl_matrix_translate", 
                "g_sequence_free", 
                "cairo_set_source_rgb", 
                "atan2f", 
                "cogl_pango_ensure_glyph_cache_for_layout", 
                "cogl_texture_get_width", 
                "g_value_dup_string", 
                "cogl_program_use", 
                "pango_wrap_mode_get_type", 
                "g_value_set_uint", 
                "pango_layout_set_height", 
                "cogl_matrix_init_from_array", 
                "g_hash_table_new", 
                "pango_layout_get_justify", 
                "g_assertion_message_expr", 
                "g_key_file_free", 
                "g_type_class_adjust_private_offset", 
                "json_node_get_object", 
                "pango_layout_get_line_count", 
                "g_sequence_get_begin_iter", 
                "cogl_pipeline_foreach_layer", 
                "g_print", 
                "g_sequence_get", 
                "pango_font_description_get_type", 
                "g_source_set_name", 
                "g_value_get_int", 
                "g_object_get_property", 
                "cogl_color_premultiply", 
                "g_type_check_value_holds", 
                "g_memdup", 
                "pango_parse_markup", 
                "cogl_glib_source_new", 
                "XFree", 
                "g_closure_unref", 
                "json_builder_set_member_name", 
                "g_strv_length", 
                "g_type_class_peek_parent", 
                "cogl_set_projection_matrix", 
                "g_key_file_get_boolean", 
                "_Jv_RegisterClasses", 
                "pango_attr_list_get_type", 
                "g_get_current_dir", 
                "g_value_set_float", 
                "g_set_error_literal", 
                "XRaiseWindow", 
                "cairo_font_options_set_hint_metrics", 
                "cogl_shader_get_info_log", 
                "cos", 
                "cogl_handle_get_type", 
                "g_signal_emit", 
                "g_source_is_destroyed", 
                "cogl_bitmap_new_from_file", 
                "XIQueryVersion", 
                "XAllocSizeHints", 
                "cogl_is_primitive", 
                "g_timeout_add_full", 
                "g_sequence_remove", 
                "pow", 
                "g_string_append_printf", 
                "pango_attr_list_get_iterator", 
                "pango_context_set_base_dir", 
                "g_bytes_get_size", 
                "g_bit_unlock", 
                "g_hash_table_lookup", 
                "cogl_framebuffer_clear4f", 
                "g_array_new", 
                "cogl_pipeline_new", 
                "g_list_free_1", 
                "g_array_sort", 
                "g_list_foreach", 
                "cogl_create_shader", 
                "XDeleteProperty", 
                "XkbKeysymToModifiers", 
                "g_slist_reverse", 
                "g_list_concat", 
                "cogl_handle_unref", 
                "g_param_spec_object", 
                "cogl_get_clock_time", 
                "cairo_font_options_set_hint_style", 
                "pango_cairo_context_set_font_options", 
                "g_strfreev", 
                "cairo_clip", 
                "g_direct_hash", 
                "cogl_clear", 
                "pango_layout_line_x_to_index", 
                "g_value_set_schar", 
                "g_slice_free1", 
                "cogl_pipeline_copy", 
                "g_string_append_len", 
                "XUngrabServer", 
                "g_value_dup_boxed", 
                "__isoc99_sscanf", 
                "pango_layout_get_height", 
                "cogl_pipeline_get_uniform_location", 
                "g_strconcat", 
                "cogl_matrix_scale", 
                "g_object_set_data", 
                "cogl_pango_font_map_set_use_mipmapping", 
                "g_hash_table_add", 
                "strlen", 
                "cogl_framebuffer_pop_clip", 
                "cairo_save", 
                "g_closure_sink", 
                "cogl_bitmap_get_size_from_file", 
                "cairo_destroy", 
                "cogl_framebuffer_push_scissor_clip", 
                "g_ascii_formatd", 
                "atk_gobject_accessible_get_type", 
                "json_node_copy", 
                "tanf", 
                "XFreePixmap", 
                "cogl_matrix_equal", 
                "cogl_pipeline_add_snippet", 
                "pango_layout_set_single_paragraph_mode", 
                "g_array_set_clear_func", 
                "json_builder_begin_array", 
                "g_param_spec_unref", 
                "g_idle_add", 
                "g_list_reverse", 
                "g_hash_table_destroy", 
                "g_filename_to_uri", 
                "json_object_get_string_member", 
                "cogl_framebuffer_get_width", 
                "XRefreshKeyboardMapping", 
                "g_option_context_add_main_entries", 
                "cogl_vector3_normalize", 
                "atk_util_get_type", 
                "g_ptr_array_free", 
                "g_type_check_class_is_a", 
                "cogl_onscreen_swap_region", 
                "XGetEventData", 
                "g_object_weak_ref", 
                "cogl_renderer_new", 
                "XDamageDestroy", 
                "pango_layout_get_log_attrs", 
                "cogl_texture_get_height", 
                "g_hash_table_foreach", 
                "cogl_color_get_blue", 
                "g_clear_error", 
                "cogl_color_get_green_byte", 
                "XSetWMProtocols", 
                "strtol", 
                "sin", 
                "g_enum_get_value_by_name", 
                "cogl_color_get_alpha", 
                "g_type_fundamental", 
                "pango_layout_line_get_extents", 
                "g_hash_table_iter_init", 
                "g_get_user_config_dir", 
                "g_signal_has_handler_pending", 
                "g_cclosure_marshal_VOID__UINT", 
                "g_slist_length", 
                "cairo_font_options_set_antialias", 
                "cogl_program_set_uniform_int", 
                "cogl_pipeline_get_layer_mag_filter", 
                "pango_layout_new", 
                "XDamageCreate", 
                "g_object_freeze_notify", 
                "__stack_chk_fail", 
                "atk_get_default_registry", 
                "cogl_rectangle", 
                "g_param_spec_uint64", 
                "g_type_name", 
                "g_sequence_iter_is_begin", 
                "g_value_get_type", 
                "XNextEvent", 
                "g_malloc", 
                "g_closure_invoke", 
                "g_list_model_get_n_items", 
                "pango_layout_get_pixel_extents", 
                "g_object_get_qdata", 
                "g_type_check_instance_is_a", 
                "g_slice_alloc0", 
                "atk_action_get_type", 
                "cogl_texture_new_from_file", 
                "g_option_context_set_help_enabled", 
                "cogl_pango_font_map_get_use_mipmapping", 
                "cogl_onscreen_get_frame_counter", 
                "g_source_set_priority", 
                "g_list_index", 
                "cogl_matrix_multiply", 
                "XIGetProperty", 
                "XCloseDisplay", 
                "cogl_framebuffer_clear", 
                "g_utf8_strncpy", 
                "g_strv_get_type", 
                "g_main_context_iteration", 
                "cogl_matrix_get_inverse", 
                "g_object_class_list_properties", 
                "g_string_free", 
                "cogl_buffer_set_data", 
                "g_error_free", 
                "atan2", 
                "g_value_get_uchar", 
                "json_node_get_string", 
                "cairo_surface_get_type", 
                "g_array_remove_index", 
                "XCompositeQueryExtension", 
                "g_list_model_get_type", 
                "g_value_get_int64", 
                "g_value_set_pointer", 
                "g_type_create_instance", 
                "g_parse_debug_string", 
                "cogl_pango_render_layout", 
                "cogl_color_get_red", 
                "g_flags_get_value_by_nick", 
                "g_string_insert_unichar", 
                "g_type_register_static_simple", 
                "cairo_region_get_extents", 
                "g_main_loop_quit", 
                "g_utf8_prev_char", 
                "g_bytes_unref", 
                "atk_state_set_add_state", 
                "atk_implementor_get_type", 
                "g_string_append_unichar", 
                "g_slist_free", 
                "g_value_transform", 
                "g_type_free_instance", 
                "cogl_pango_font_map_set_resolution", 
                "cogl_bitmap_new_with_size", 
                "g_type_register_fundamental", 
                "pango_layout_set_text", 
                "g_node_destroy", 
                "cogl2_path_rectangle", 
                "g_source_remove", 
                "g_object_class_find_property", 
                "pango_layout_get_extents", 
                "g_warn_message", 
                "cogl_xlib_renderer_request_reset_on_video_memory_purge", 
                "g_object_bind_property", 
                "g_module_supported", 
                "cogl_pop_matrix", 
                "XCreatePixmap", 
                "g_sequence_sort", 
                "g_value_type_compatible", 
                "g_path_is_absolute", 
                "json_node_type_name", 
                "g_strsplit", 
                "cogl_onscreen_get_buffer_age", 
                "g_test_run", 
                "cogl_framebuffer_get_context", 
                "cogl_read_pixels", 
                "cogl_pipeline_set_alpha_test_function", 
                "cogl_x11_onscreen_get_window_xid", 
                "exp", 
                "g_type_add_class_private"
            ], 
            "rpm": "mutter-3.22.3-11.el7.x86_64.rpm"
        }, 
        "usr/lib64/mutter/libmutter-cogl-path_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/mutter/libmutter-cogl-path.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_Jv_RegisterClasses", 
                "__stack_chk_fail", 
                "_cogl_primitive_draw", 
                "g_type_class_peek_parent", 
                "g_once_init_enter", 
                "cogl_object_unref", 
                "g_str_hash", 
                "_cogl_framebuffer_get_projection_stack", 
                "_cogl_context_get_default", 
                "_cogl_clip_stack_push_rectangle", 
                "g_array_append_vals", 
                "_cogl_pipeline_prune_to_n_layers", 
                "_cogl_buffer_unmap_for_fill_or_fallback", 
                "cogl_attribute_buffer_new_with_size", 
                "__assert_fail", 
                "g_realloc", 
                "__longjmp_chk", 
                "_cogl_object_default_unref", 
                "cogl_is_pipeline", 
                "g_hash_table_new", 
                "cogl_framebuffer_pop_clip", 
                "_cogl_pipeline_layer_get_texture", 
                "g_enum_register_static", 
                "_setjmp", 
                "g_slice_free1", 
                "cogl_primitive_new_with_attributes", 
                "g_return_if_fail_warning", 
                "g_slice_alloc", 
                "cogl_attribute_buffer_new", 
                "cogl_attribute_new", 
                "cogl_is_framebuffer", 
                "g_slice_copy", 
                "sincosf", 
                "g_array_set_size", 
                "g_free", 
                "cogl_get_source", 
                "_cogl_pipeline_foreach_layer_internal", 
                "cogl_indices_new", 
                "__gmon_start__", 
                "cogl_pipeline_copy", 
                "_ITM_registerTMCloneTable", 
                "g_assertion_message_expr", 
                "cogl_primitive_set_indices", 
                "_cogl_framebuffer_get_stencil_bits", 
                "_cogl_clip_stack_push_primitive", 
                "cogl_texture_is_sliced", 
                "g_once_init_leave", 
                "g_str_equal", 
                "_cogl_buffer_map_for_fill_or_fallback", 
                "cogl_get_draw_framebuffer", 
                "cogl_object_ref", 
                "__cxa_finalize", 
                "g_intern_static_string", 
                "g_array_new", 
                "_cogl_texture_can_hardware_repeat", 
                "cogl_pipeline_get_n_layers", 
                "cogl_primitive_draw", 
                "_ITM_deregisterTMCloneTable", 
                "cogl_framebuffer_draw_rectangle", 
                "_cogl_framebuffer_get_modelview_stack", 
                "cogl_object_get_gtype", 
                "g_array_free", 
                "g_type_register_static_simple", 
                "g_malloc_n", 
                "g_log"
            ], 
            "rpm": "mutter-3.22.3-11.el7.x86_64.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2snapshot_so": {
            "report-functions": [
                "dm_split_words", 
                "fgets", 
                "dm_get_next_target", 
                "__syslog_chk", 
                "fopen64", 
                "dm_pool_zalloc", 
                "fclose", 
                "dm_get_status_snapshot", 
                "__gmon_start__", 
                "__stack_chk_fail", 
                "dmeventd_lvm2_lock", 
                "_Jv_RegisterClasses", 
                "__errno_location", 
                "feof", 
                "dm_task_get_info", 
                "__xstat64", 
                "dmeventd_lvm2_run", 
                "waitpid", 
                "_ITM_registerTMCloneTable", 
                "dm_pool_destroy", 
                "dmeventd_lvm2_init", 
                "dm_task_get_name", 
                "dmeventd_lvm2_command", 
                "exit", 
                "dm_pool_create", 
                "execvp", 
                "dmeventd_lvm2_unlock", 
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable", 
                "dm_pool_free", 
                "fork"
            ], 
            "rpm": "mutter-3.22.3-11.el7.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2snapshot.so"
        }, 
        "usr/lib64/mutter/libmutter-cogl_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/mutter/libmutter-cogl.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "gdk_pixbuf_new_from_file", 
                "g_cond_signal", 
                "XFixesDestroyRegion", 
                "eglTerminate", 
                "g_setenv", 
                "_Jv_RegisterClasses", 
                "g_option_group_set_parse_hooks", 
                "strlen", 
                "g_list_find", 
                "g_string_assign", 
                "g_str_hash", 
                "eglInitialize", 
                "g_list_remove_link", 
                "XGetImage", 
                "XUnmapWindow", 
                "cairo_stroke", 
                "gdk_pixbuf_get_has_alpha", 
                "pipe", 
                "g_string_new", 
                "g_key_file_free", 
                "__cxa_finalize", 
                "shmat", 
                "XGetVisualInfo", 
                "g_mutex_unlock", 
                "eglBindAPI", 
                "g_slist_foreach", 
                "g_list_append", 
                "g_string_append_printf", 
                "g_ascii_strcasecmp", 
                "g_mutex_lock", 
                "g_queue_peek_head", 
                "g_cond_wait", 
                "XCreateWindow", 
                "g_hash_table_lookup", 
                "g_strsplit", 
                "XGetSubImage", 
                "g_type_interface_add_prerequisite", 
                "ceilf", 
                "g_hook_destroy_link", 
                "XNextEvent", 
                "XSynchronize", 
                "g_hash_table_iter_init", 
                "gdk_pixbuf_get_rowstride", 
                "g_cond_clear", 
                "g_source_add_poll", 
                "g_assertion_message_expr", 
                "eglCreateWindowSurface", 
                "g_cond_init", 
                "_ITM_deregisterTMCloneTable", 
                "g_thread_join", 
                "g_source_new", 
                "g_hook_list_clear", 
                "XDamageDestroy", 
                "g_ptr_array_free", 
                "g_assertion_message_cmpnum", 
                "XCloseDisplay", 
                "eglGetError", 
                "cairo_image_surface_create", 
                "XNextRequest", 
                "g_try_malloc", 
                "g_direct_equal", 
                "g_queue_free", 
                "g_queue_push_tail", 
                "g_error_matches", 
                "eglGetDisplay", 
                "XGetWindowAttributes", 
                "g_once_init_leave", 
                "g_list_reverse", 
                "g_malloc0", 
                "g_type_class_peek_parent", 
                "g_quark_from_static_string", 
                "XDamageSubtract", 
                "g_parse_debug_string", 
                "g_type_register_static_simple", 
                "shmget", 
                "eglSwapInterval", 
                "g_print", 
                "g_module_open", 
                "g_option_group_add_entries", 
                "XShmQueryExtension", 
                "g_hash_table_size", 
                "XShmAttach", 
                "sincosf", 
                "g_hash_table_insert", 
                "sscanf", 
                "g_slice_free1", 
                "g_hook_prepend", 
                "gdk_pixbuf_get_file_info", 
                "g_mutex_init", 
                "memcmp", 
                "g_error_copy", 
                "g_option_group_new", 
                "g_key_file_load_from_file", 
                "XTranslateCoordinates", 
                "g_queue_peek_tail", 
                "XSetErrorHandler", 
                "g_module_symbol", 
                "g_mutex_clear", 
                "strtoul", 
                "close", 
                "g_string_insert_c", 
                "g_array_set_size", 
                "cairo_fill_preserve", 
                "g_assertion_message_cmpstr", 
                "sinf", 
                "cairo_rectangle", 
                "g_string_set_size", 
                "g_queue_new", 
                "g_list_sort", 
                "g_intern_static_string", 
                "g_queue_find", 
                "gdk_pixbuf_get_pixels", 
                "XRRGetCrtcInfo", 
                "g_return_if_fail_warning", 
                "g_slice_alloc", 
                "g_printerr", 
                "g_slice_alloc0", 
                "g_list_length", 
                "g_str_equal", 
                "eglQueryString", 
                "g_list_prepend", 
                "g_slist_free", 
                "g_error_new_valist", 
                "g_list_foreach", 
                "g_type_name", 
                "g_byte_array_free", 
                "cairo_set_source_rgb", 
                "gdk_pixbuf_get_width", 
                "XSetWMNormalHints", 
                "atan2f", 
                "g_array_sized_new", 
                "g_hash_table_iter_next", 
                "g_log", 
                "XDamageQueryExtension", 
                "g_error_free", 
                "XDamageCreate", 
                "g_once_init_enter", 
                "g_strerror", 
                "XRRGetOutputInfo", 
                "strchr", 
                "_ITM_registerTMCloneTable", 
                "memmem", 
                "XAllocSizeHints", 
                "eglDestroyContext", 
                "g_key_file_get_string", 
                "g_hook_list_init", 
                "g_malloc", 
                "XCreateColormap", 
                "g_strfreev", 
                "XMapWindow", 
                "g_hook_list_invoke", 
                "XFixesCreateRegion", 
                "g_hash_table_lookup_extended", 
                "gdk_pixbuf_get_colorspace", 
                "g_queue_push_head", 
                "g_slist_delete_link", 
                "__gmon_start__", 
                "g_slist_remove", 
                "strcmp", 
                "g_quark_from_string", 
                "XRRSelectInput", 
                "XShmCreateImage", 
                "g_queue_init", 
                "eglGetProcAddress", 
                "acosf", 
                "XOpenDisplay", 
                "g_strjoinv", 
                "XRRQueryExtension", 
                "g_free", 
                "read", 
                "g_queue_pop_tail", 
                "g_ptr_array_new_with_free_func", 
                "g_string_append_len", 
                "g_getenv", 
                "tan", 
                "g_boxed_type_register_static", 
                "g_list_free_1", 
                "g_list_free", 
                "eglChooseConfig", 
                "g_array_append_vals", 
                "g_list_free_full", 
                "g_malloc0_n", 
                "g_source_set_priority", 
                "g_array_remove_index_fast", 
                "XSync", 
                "g_strstr_len", 
                "g_strdup_printf", 
                "g_slice_copy", 
                "shmdt", 
                "g_strcmp0", 
                "g_ascii_strtoull", 
                "write", 
                "asinf", 
                "sqrtf", 
                "g_queue_clear", 
                "XFixesFetchRegionAndBounds", 
                "g_list_delete_link", 
                "g_list_remove", 
                "g_array_new", 
                "exit", 
                "XDestroyWindow", 
                "g_file_set_contents", 
                "cairo_surface_destroy", 
                "XRRGetScreenResources", 
                "g_slist_prepend", 
                "eglCreateContext", 
                "g_str_has_prefix", 
                "memcpy", 
                "g_logv", 
                "gdk_pixbuf_get_bits_per_sample", 
                "g_strndup", 
                "XGetGeometry", 
                "memset", 
                "eglGetConfigAttrib", 
                "cairo_surface_write_to_png", 
                "eglSwapBuffers", 
                "g_list_insert_before", 
                "cairo_destroy", 
                "gettimeofday", 
                "XShmDetach", 
                "g_string_free", 
                "g_type_register_fundamental", 
                "clock_gettime", 
                "g_strconcat", 
                "g_queue_pop_head", 
                "g_type_fundamental_next", 
                "g_type_add_interface_static", 
                "eglDestroySurface", 
                "g_hash_table_foreach", 
                "__errno_location", 
                "g_byte_array_set_size", 
                "eglQuerySurface", 
                "g_warn_message", 
                "tanf", 
                "g_malloc_n", 
                "__stack_chk_fail", 
                "strstr", 
                "g_hash_table_new", 
                "getenv", 
                "g_ptr_array_add", 
                "g_get_user_config_dir", 
                "gdk_pixbuf_get_n_channels", 
                "fcntl", 
                "shmctl", 
                "qsort", 
                "XGetErrorText", 
                "g_thread_new", 
                "XPending", 
                "g_build_filename", 
                "g_hash_table_remove", 
                "eglMakeCurrent", 
                "g_object_unref", 
                "g_hash_table_get_values", 
                "g_array_free", 
                "g_source_get_time", 
                "strncmp", 
                "g_module_close", 
                "cairo_create", 
                "g_list_concat", 
                "g_key_file_new", 
                "gdk_pixbuf_get_height", 
                "XFree", 
                "g_hash_table_new_full", 
                "floorf", 
                "g_strdup", 
                "g_hook_find_func_data", 
                "XShmGetImage", 
                "g_source_remove_poll", 
                "g_string_append", 
                "g_get_system_config_dirs", 
                "g_hook_alloc", 
                "g_byte_array_new", 
                "g_memdup"
            ], 
            "rpm": "mutter-3.22.3-11.el7.x86_64.rpm"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2snapshot_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2snapshot.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__syslog_chk", 
                "fopen64", 
                "__xstat64", 
                "dm_get_next_target", 
                "_ITM_registerTMCloneTable", 
                "dm_pool_create", 
                "_Jv_RegisterClasses", 
                "dm_pool_zalloc", 
                "dmeventd_lvm2_command", 
                "__cxa_finalize", 
                "waitpid", 
                "__errno_location", 
                "dm_task_get_info", 
                "fclose", 
                "strerror", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "feof", 
                "dm_task_get_name", 
                "dm_get_status_snapshot", 
                "exit", 
                "dmeventd_lvm2_lock", 
                "dmeventd_lvm2_init", 
                "dm_pool_destroy", 
                "fork", 
                "dm_split_words", 
                "fgets", 
                "dmeventd_lvm2_run", 
                "dmeventd_lvm2_exit", 
                "dmeventd_lvm2_unlock", 
                "dm_pool_free"
            ], 
            "rpm": "mutter-3.22.3-11.el7.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Version": " 3.22.3", 
            "Name": " mutter", 
            "License": " GPLv2+", 
            "URL": " http://www.gnome.org", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " x86-038.build.eng.bos.redhat.com", 
            "Description": "\nMutter is a window and compositing manager that displays and manages\nyour desktop via OpenGL. Mutter combines a sophisticated display engine\nusing the Clutter toolkit with solid window-management logic inherited\nfrom the Metacity window manager.\n\nWhile Mutter can be used stand-alone, it is primarily intended to be\nused as the display core of a larger system such as GNOME Shell. For\nthis reason, Mutter is very extensible via plugins, which are used both\nto add fancy visual effects and to rework the window management\nbehaviors to meet the needs of the environment.\n", 
            "Build Date": " Tue 27 Jun 2017 10:23:29 AM EDT", 
            "Vendor": " Red Hat, Inc.", 
            "Source RPM": " mutter-3.22.3-11.el7.src.rpm", 
            "warning": " /home/jason/fctl/swap/2/mutter-3.22.3-11.el7.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID fd431d51: NOKEY", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Wed 28 Jun 2017 09:41:28 AM EDT, Key ID 199e2f91fd431d51", 
            "Release": " 11.el7", 
            "Group": " Unspecified", 
            "Packager": " Red Hat, Inc. <http://bugzilla.redhat.com/bugzilla>", 
            "Summary": " Window and compositing manager based on Clutter", 
            "Size": " 11639178"
        }
    }
}