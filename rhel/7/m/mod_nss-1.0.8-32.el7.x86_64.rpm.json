{
    "results": {
        "usr/lib64/httpd/modules/libmodnss_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/httpd/modules/libmodnss.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "CERT_GetCertUid", 
                "fopen", 
                "fgets", 
                "apr_bucket_transient_create", 
                "ap_add_input_filter", 
                "chdir", 
                "apr_stat", 
                "getcwd", 
                "PR_Close", 
                "CERT_VerifyCertName", 
                "ap_str_tolower", 
                "apr_pool_cleanup_null", 
                "CERT_GetDefaultCertDB", 
                "ap_pbase64decode", 
                "PL_strchr", 
                "CERT_GetStateName", 
                "SSL_ConfigSecureServer", 
                "PORT_Strdup", 
                "semop", 
                "sscanf", 
                "ap_getword_nulls", 
                "apr_table_set", 
                "fclose", 
                "rand", 
                "apr_pool_userdata_get", 
                "SSL_InheritMPServerSIDCache", 
                "apr_socket_opt_set", 
                "PR_Read", 
                "strcasecmp", 
                "NSS_Shutdown", 
                "isatty", 
                "tcsetattr", 
                "getpid", 
                "SSL_ReHandshake", 
                "ap_getword_conf", 
                "ap_hook_post_read_request", 
                "PK11_FreeSlot", 
                "__cxa_finalize", 
                "DER_GetInteger", 
                "apr_pool_userdata_set", 
                "apr_brigade_create", 
                "PK11_GetInternalKeySlot", 
                "__snprintf_chk", 
                "CERT_GetOrgName", 
                "SSL_ConfigMPServerSIDCache", 
                "CERT_CheckCertValidTimes", 
                "ap_hook_default_port", 
                "memchr", 
                "PK11_Authenticate", 
                "fputc", 
                "strstr", 
                "apr_array_make", 
                "ap_document_root", 
                "ap_pregcomp", 
                "SSL_AuthCertificateHook", 
                "NSS_GetClientAuthData", 
                "PR_SetError", 
                "SSL_BadCertHook", 
                "CERT_GetCountryName", 
                "apr_table_get", 
                "CERT_FindCertByDERCert", 
                "SSL_ShutdownServerSessionIDCache", 
                "PK11_FindKeyByAnyCert", 
                "ap_regexec", 
                "ap_hook_auth_checker", 
                "apr_pstrcat", 
                "PR_Now", 
                "strspn", 
                "apr_table_setn", 
                "ap_pass_brigade", 
                "apr_itoa", 
                "ap_log_cerror_", 
                "CERT_CheckCertUsage", 
                "CERT_DestroyCertificate", 
                "PR_smprintf_free", 
                "memcpy", 
                "apr_array_push", 
                "PR_Write", 
                "SSL_VersionRangeSet", 
                "PR_GetUniqueIdentity", 
                "CERT_SetOCSPDefaultResponder", 
                "apr_bucket_type_eos", 
                "SSL_OptionSet", 
                "ap_remove_input_filter", 
                "realloc", 
                "SSL_GetClientAuthDataHook", 
                "ap_server_root_relative", 
                "ap_check_cmd_context", 
                "access", 
                "time", 
                "ap_add_version_component", 
                "SSL_SetPKCS11PinArg", 
                "SSL_ImportFD", 
                "PK11_RandomUpdate", 
                "CERT_DupCertificate", 
                "ap_is_initial_req", 
                "ap_hook_post_config", 
                "free", 
                "__strncat_chk", 
                "apr_file_info_get", 
                "SSL_ForceHandshake", 
                "ap_get_brigade", 
                "__fprintf_chk", 
                "ap_uname2id", 
                "strlen", 
                "PK11_ListCerts", 
                "SSL_PeerCertificate", 
                "apr_array_append", 
                "PORT_Free", 
                "exit", 
                "CERT_VerifyCertificateNow", 
                "apr_file_pipe_timeout_set", 
                "apr_palloc", 
                "CERT_GetLocalityName", 
                "apr_pstrdup", 
                "apr_proc_create", 
                "SECITEM_FreeItem", 
                "strchr", 
                "ap_get_server_port", 
                "ap_register_input_filter", 
                "ap_get_remote_logname", 
                "CERT_EnableOCSPDefaultResponder", 
                "PR_Shutdown", 
                "apr_dynamic_fn_retrieve", 
                "ap_pbase64encode", 
                "SSL_OptionGet", 
                "CERT_DestroyCertificateList", 
                "apr_procattr_io_set", 
                "ap_hook_http_scheme", 
                "getenv", 
                "SSL_LocalCertificate", 
                "SSL_CipherPrefSet", 
                "PR_ExplodeTime", 
                "SECMOD_DeleteInternalModule", 
                "SECMOD_GetInternalModule", 
                "memmove", 
                "SECKEY_DestroyPrivateKey", 
                "apr_procattr_cmdtype_set", 
                "PK11_NeedLogin", 
                "fwrite", 
                "ap_get_server_name", 
                "apr_time_exp_lt", 
                "PR_smprintf", 
                "SSL_HandshakeCallback", 
                "PK11_NeedUserInit", 
                "ap_getword", 
                "_ITM_registerTMCloneTable", 
                "PR_Init", 
                "CERT_EnableOCSPChecking", 
                "semget", 
                "PK11_GetTokenName", 
                "PR_Free", 
                "PL_strstr", 
                "apr_file_open", 
                "NSS_FindCertKEAType", 
                "PR_GetError", 
                "apr_brigade_destroy", 
                "apr_brigade_split_line", 
                "CERT_NameToAscii", 
                "__stack_chk_fail", 
                "strcmp", 
                "apr_brigade_cleanup", 
                "apr_bucket_eos_create", 
                "fputs", 
                "ap_hook_fixups", 
                "apr_bucket_type_flush", 
                "CERT_DisableOCSPDefaultResponder", 
                "PL_strlen", 
                "SSL_GetChannelInfo", 
                "ap_run_http_scheme", 
                "BTOA_DataToAscii", 
                "ap_hook_access_checker", 
                "apr_file_seek", 
                "ap_add_output_filter", 
                "ap_bucket_type_eoc", 
                "SSL_GetSessionID", 
                "PK11_Logout", 
                "apr_procattr_error_check_set", 
                "CERT_GetCommonName", 
                "apr_file_write_full", 
                "NSS_Initialize", 
                "SSL_GetCipherSuiteInfo", 
                "apr_dynamic_fn_register", 
                "apr_time_now", 
                "SSL_RevealPinArg", 
                "apr_socket_opt_get", 
                "apr_bucket_flush_create", 
                "SSL_ResetHandshake", 
                "ap_make_dirstr_parent", 
                "CERT_GetCertEmailAddress", 
                "ap_mpm_query", 
                "ap_hook_child_init", 
                "PK11_FindPrivateKeyFromCert", 
                "__strdup", 
                "PK11_FindSlotByName", 
                "PR_snprintf", 
                "NSS_IsInitialized", 
                "apr_psprintf", 
                "SSL_CipherPrefGet", 
                "ap_log_error_", 
                "SSL_ConfigServerSessionIDCache", 
                "CERT_DestroyCertList", 
                "strncasecmp", 
                "apr_snprintf", 
                "apr_brigade_partition", 
                "SSL_ClearSessionCache", 
                "PK11_ConfigurePKCS11", 
                "CERT_VerifyCertNow", 
                "CERT_GetCertTimes", 
                "apr_file_close", 
                "apr_bucket_immortal_create", 
                "apr_procattr_dir_set", 
                "PK11_GetAllTokens", 
                "PR_GMTParameters", 
                "PR_FormatTime", 
                "apr_pool_cleanup_register", 
                "__ctype_b_loc", 
                "ap_log_rerror_", 
                "ap_hook_pre_connection", 
                "__gmon_start__", 
                "apr_file_read", 
                "_ITM_deregisterTMCloneTable", 
                "tcgetattr", 
                "semctl", 
                "SSL_SecurityStatus", 
                "ap_hook_check_user_id", 
                "ap_register_output_filter", 
                "PR_CreateIOLayerStub", 
                "apr_pool_create_ex", 
                "PK11_SetPasswordFunc", 
                "NSS_SetDomesticPolicy", 
                "ap_get_server_banner", 
                "CERT_FindUserCertByUsage", 
                "PR_StringToNetAddr", 
                "ap_run_default_port", 
                "PK11_GetFirstSafe", 
                "PK11_IsFIPS", 
                "_Jv_RegisterClasses", 
                "fileno", 
                "apr_procattr_create", 
                "CERT_GetOrgUnitName", 
                "strtol", 
                "ap_escape_html2", 
                "SSL_AuthCertificate", 
                "stpcpy", 
                "ap_hook_pre_config", 
                "malloc", 
                "ap_get_remote_host", 
                "apr_table_unset"
            ], 
            "rpm": "mod_nss-1.0.8-32.el7.x86_64.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2mirror_so": {
            "report-functions": [
                "dm_split_words", 
                "dmeventd_lvm2_pool", 
                "dmeventd_lvm2_exit", 
                "__gmon_start__", 
                "dmeventd_lvm2_run", 
                "dm_free_wrapper", 
                "_ITM_registerTMCloneTable", 
                "dm_task_get_name", 
                "_Jv_RegisterClasses", 
                "_ITM_deregisterTMCloneTable", 
                "dmeventd_lvm2_lock", 
                "strtol", 
                "strcmp", 
                "strchr", 
                "__cxa_finalize", 
                "dm_malloc_wrapper", 
                "strlen", 
                "__stack_chk_fail", 
                "dmeventd_lvm2_unlock", 
                "__syslog_chk", 
                "dmeventd_lvm2_init"
            ], 
            "rpm": "mod_nss-1.0.8-32.el7.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2mirror.so"
        }, 
        "usr/libexec/nss_pcache": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/libexec/nss_pcache", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "PR_smprintf", 
                "free", 
                "__sprintf_chk", 
                "strcmp", 
                "PK11_CipherOp", 
                "__fprintf_chk", 
                "NSS_Shutdown", 
                "fwrite", 
                "PK11_CreateContextBySymKey", 
                "_Jv_RegisterClasses", 
                "memset", 
                "PK11_CheckUserPassword", 
                "strlen", 
                "SECMOD_GetInternalModule", 
                "PK11_GetBlockSize", 
                "semctl", 
                "PK11_TokenKeyGenWithFlags", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "PR_Init", 
                "NSS_Initialize", 
                "__libc_start_main", 
                "PK11_IsFIPS", 
                "PR_Close", 
                "PK11_ConfigurePKCS11", 
                "strcpy", 
                "SECMOD_DeleteInternalModule", 
                "PK11_GenerateNewParam", 
                "__stack_chk_fail", 
                "__strdup", 
                "PR_Poll", 
                "PR_GetSpecialFD", 
                "_ITM_deregisterTMCloneTable", 
                "PK11_DestroyContext", 
                "exit", 
                "PK11_FindSlotByName", 
                "PK11_Finalize", 
                "PR_Write", 
                "PR_smprintf_free", 
                "signal", 
                "malloc", 
                "strcasecmp", 
                "PK11_FreeSymKey", 
                "PR_Read", 
                "SECITEM_ZfreeItem"
            ], 
            "rpm": "mod_nss-1.0.8-32.el7.x86_64.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2raid_so": {
            "report-functions": [
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "__syslog_chk", 
                "dmeventd_lvm2_exit", 
                "dmeventd_lvm2_unlock", 
                "dmeventd_lvm2_init", 
                "dm_get_next_target", 
                "strchr", 
                "dmeventd_lvm2_lock", 
                "__cxa_finalize", 
                "__stack_chk_fail", 
                "dmeventd_lvm2_run", 
                "_ITM_deregisterTMCloneTable", 
                "_Jv_RegisterClasses", 
                "strcmp", 
                "strtol", 
                "dm_split_words", 
                "dmeventd_lvm2_command"
            ], 
            "rpm": "mod_nss-1.0.8-32.el7.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2raid.so"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2thin_so": {
            "report-functions": [
                "waitpid", 
                "dmeventd_lvm2_exit", 
                "dm_mountinfo_read", 
                "dm_task_no_open_count", 
                "fork", 
                "dm_pool_destroy", 
                "__cxa_finalize", 
                "dm_task_destroy", 
                "_ITM_deregisterTMCloneTable", 
                "__stack_chk_fail", 
                "dm_task_get_info", 
                "dm_get_next_target", 
                "exit", 
                "dm_pool_zalloc", 
                "dm_pool_create", 
                "dm_get_status_thin_pool", 
                "dm_task_get_deps", 
                "dm_task_get_name", 
                "dm_pool_free", 
                "dm_task_run", 
                "dm_task_get_names", 
                "dmeventd_lvm2_unlock", 
                "dmeventd_lvm2_lock", 
                "_Jv_RegisterClasses", 
                "dm_bitset_create", 
                "dm_bitset_destroy", 
                "__gmon_start__", 
                "__errno_location", 
                "_ITM_registerTMCloneTable", 
                "strerror", 
                "__syslog_chk", 
                "dmeventd_lvm2_init", 
                "dm_task_create", 
                "execvp", 
                "dm_task_set_name"
            ], 
            "rpm": "mod_nss-1.0.8-32.el7.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2thin.so"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2mirror_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2mirror.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "strtol", 
                "dmeventd_lvm2_run", 
                "dm_task_get_name", 
                "__cxa_finalize", 
                "__gmon_start__", 
                "dm_free_wrapper", 
                "__syslog_chk", 
                "_ITM_deregisterTMCloneTable", 
                "dm_malloc_wrapper", 
                "strlen", 
                "dmeventd_lvm2_command", 
                "dmeventd_lvm2_pool", 
                "dmeventd_lvm2_exit", 
                "_ITM_registerTMCloneTable", 
                "strcmp", 
                "dmeventd_lvm2_lock", 
                "dm_split_words", 
                "strchr", 
                "dm_get_next_target", 
                "dmeventd_lvm2_init", 
                "__stack_chk_fail"
            ], 
            "rpm": "mod_nss-1.0.8-32.el7.x86_64.rpm"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2raid_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2raid.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "dmeventd_lvm2_unlock", 
                "strchr", 
                "dmeventd_lvm2_command", 
                "dm_get_next_target", 
                "dm_task_get_name", 
                "dm_split_words", 
                "__syslog_chk", 
                "strtol", 
                "dmeventd_lvm2_pool", 
                "__gmon_start__", 
                "_Jv_RegisterClasses", 
                "dmeventd_lvm2_init", 
                "_ITM_registerTMCloneTable", 
                "dmeventd_lvm2_exit", 
                "__cxa_finalize", 
                "dmeventd_lvm2_lock", 
                "strcmp"
            ], 
            "rpm": "mod_nss-1.0.8-32.el7.x86_64.rpm"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2thin_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2thin.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "dm_task_run", 
                "waitpid", 
                "__gmon_start__", 
                "dmeventd_lvm2_run", 
                "dm_get_next_target", 
                "_ITM_deregisterTMCloneTable", 
                "dmeventd_lvm2_command", 
                "dm_task_get_names", 
                "dm_pool_create", 
                "fork", 
                "dmeventd_lvm2_exit", 
                "dm_task_no_open_count", 
                "dmeventd_lvm2_init", 
                "strerror", 
                "__syslog_chk", 
                "dm_get_status_thin_pool", 
                "_Jv_RegisterClasses", 
                "dm_bitset_destroy", 
                "dmeventd_lvm2_unlock", 
                "dm_task_create", 
                "__errno_location", 
                "__cxa_finalize", 
                "dm_task_get_name", 
                "dm_task_get_info", 
                "execvp", 
                "_ITM_registerTMCloneTable", 
                "exit", 
                "dm_mountinfo_read", 
                "dm_task_get_deps", 
                "dm_pool_destroy", 
                "__stack_chk_fail", 
                "dm_task_set_name", 
                "dmeventd_lvm2_lock", 
                "dm_task_destroy", 
                "dm_pool_free"
            ], 
            "rpm": "mod_nss-1.0.8-32.el7.x86_64.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2snapshot_so": {
            "report-functions": [
                "fopen64", 
                "dmeventd_lvm2_exit", 
                "__cxa_finalize", 
                "dmeventd_lvm2_command", 
                "fgets", 
                "waitpid", 
                "dm_pool_free", 
                "fclose", 
                "dm_split_words", 
                "dm_get_next_target", 
                "dm_pool_zalloc", 
                "_ITM_registerTMCloneTable", 
                "__errno_location", 
                "dmeventd_lvm2_lock", 
                "execvp", 
                "fork", 
                "_Jv_RegisterClasses", 
                "dm_get_status_snapshot", 
                "strerror", 
                "dm_pool_create", 
                "feof", 
                "dmeventd_lvm2_run", 
                "_ITM_deregisterTMCloneTable", 
                "dm_task_get_name", 
                "__stack_chk_fail", 
                "dm_task_get_info", 
                "dmeventd_lvm2_init", 
                "__syslog_chk", 
                "exit", 
                "__gmon_start__", 
                "dmeventd_lvm2_unlock"
            ], 
            "rpm": "mod_nss-1.0.8-32.el7.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2snapshot.so"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2snapshot_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2snapshot.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "feof", 
                "_Jv_RegisterClasses", 
                "dm_pool_destroy", 
                "dmeventd_lvm2_init", 
                "strerror", 
                "dm_get_status_snapshot", 
                "__syslog_chk", 
                "execvp", 
                "fclose", 
                "dm_pool_create", 
                "__xstat64", 
                "__stack_chk_fail", 
                "dm_get_next_target", 
                "dm_split_words", 
                "waitpid", 
                "dm_pool_free", 
                "dm_pool_zalloc", 
                "dmeventd_lvm2_exit", 
                "__errno_location", 
                "dmeventd_lvm2_lock", 
                "fopen64", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "dm_task_get_name", 
                "exit", 
                "fork", 
                "dmeventd_lvm2_command", 
                "dm_task_get_info", 
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable", 
                "dmeventd_lvm2_unlock"
            ], 
            "rpm": "mod_nss-1.0.8-32.el7.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Version": " 1.0.8", 
            "Name": " mod_nss", 
            "License": " ASL 2.0", 
            "URL": " http://directory.fedoraproject.org/wiki/Mod_nss", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " x86-021.build.eng.bos.redhat.com", 
            "Description": "\nThe mod_nss module provides strong cryptography for the Apache Web\nserver via the Secure Sockets Layer (SSL) and Transport Layer\nSecurity (TLS) protocols using the Network Security Services (NSS)\nsecurity library.\n", 
            "Build Date": " Sun 26 Jan 2014 11:58:14 AM EST", 
            "Vendor": " Red Hat, Inc.", 
            "Source RPM": " mod_nss-1.0.8-32.el7.src.rpm", 
            "warning": " /home/jason/fctl/swap/2/mod_nss-1.0.8-32.el7.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID fd431d51: NOKEY", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Wed 02 Apr 2014 12:06:43 PM EDT, Key ID 199e2f91fd431d51", 
            "Release": " 32.el7", 
            "Group": " System Environment/Daemons", 
            "Packager": " Red Hat, Inc. <http://bugzilla.redhat.com/bugzilla>", 
            "Summary": " SSL/TLS module for the Apache HTTP server", 
            "Size": " 268220"
        }
    }
}