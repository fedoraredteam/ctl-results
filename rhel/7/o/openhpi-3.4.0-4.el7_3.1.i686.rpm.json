{
    "results": {
        "usr/bin/hpionIBMblade": {
            "report-functions": [
                "g_option_context_add_main_entries", 
                "saHpiRptEntryGet", 
                "saHpiEventGet", 
                "g_str_equal", 
                "oHpiVersionGet", 
                "oh_init_ep", 
                "saHpiSubscribe", 
                "__snprintf_chk", 
                "g_option_context_parse", 
                "saHpiSessionOpen", 
                "__gmon_start__", 
                "snprintf", 
                "__printf_chk", 
                "fgets", 
                "saHpiSensorThresholdsSet", 
                "oHpiHandlerFind", 
                "free", 
                "oHpiHandlerInfo", 
                "putchar", 
                "oHpiDomainAdd", 
                "sscanf", 
                "saHpiSensorThresholdsGet", 
                "g_str_hash", 
                "__cxa_finalize", 
                "memset", 
                "g_option_context_free", 
                "saHpiSensorReadingGet", 
                "__stack_chk_fail", 
                "strchr", 
                "oHpiDomainAddById", 
                "setenv", 
                "g_hash_table_new_full", 
                "g_log", 
                "saHpiRdrGet", 
                "strlen", 
                "__libc_start_main", 
                "_Jv_RegisterClasses", 
                "puts", 
                "oh_append_textbuffer", 
                "strncmp", 
                "getenv", 
                "fopen", 
                "saHpiVersionGet", 
                "oh_lookup_sensorunits", 
                "_ITM_registerTMCloneTable", 
                "strcmp", 
                "oh_init_textbuffer", 
                "oh_fprint_rdr", 
                "g_usleep", 
                "g_free", 
                "strtol", 
                "saHpiSessionClose", 
                "memcpy", 
                "g_option_context_new", 
                "oh_fprint_rptentry", 
                "oh_fprint_ep", 
                "saHpiDiscover", 
                "malloc", 
                "oh_lookup_error", 
                "oh_encode_entitypath", 
                "fscanf", 
                "fclose"
            ], 
            "rpm": "openhpi-3.4.0-4.el7_3.1.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/hpionIBMblade"
        }, 
        "usr/bin/hpisensor": {
            "report-functions": [
                "saHpiDomainInfoGet", 
                "oHpiDomainAdd", 
                "saHpiSessionOpen", 
                "g_option_context_new", 
                "__gmon_start__", 
                "strchr", 
                "__libc_start_main", 
                "putchar", 
                "oHpiDomainAddById", 
                "oh_lookup_rdrtype", 
                "oh_encode_entitypath", 
                "oh_init_textbuffer", 
                "oh_decode_eventstate", 
                "saHpiSensorReadingGet", 
                "__stack_chk_fail", 
                "strtol", 
                "g_option_context_parse", 
                "setenv", 
                "oh_fprint_ep", 
                "_ITM_deregisterTMCloneTable", 
                "_Jv_RegisterClasses", 
                "g_log", 
                "saHpiDiscover", 
                "saHpiRptEntryGet", 
                "__printf_chk", 
                "g_free", 
                "getenv", 
                "oHpiVersionGet", 
                "saHpiSensorThresholdsGet", 
                "oh_init_ep", 
                "g_option_context_add_main_entries", 
                "oh_lookup_error", 
                "_ITM_registerTMCloneTable", 
                "puts", 
                "oh_append_textbuffer", 
                "saHpiSessionClose", 
                "oh_cmp_ep", 
                "__cxa_finalize", 
                "oh_decode_sensorreading", 
                "g_option_context_free"
            ], 
            "rpm": "openhpi-3.4.0-4.el7_3.1.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/hpisensor"
        }, 
        "usr/bin/hpialarms": {
            "report-functions": [
                "g_free", 
                "g_option_context_free", 
                "strchr", 
                "g_option_context_add_main_entries", 
                "oHpiDomainAdd", 
                "oh_append_textbuffer", 
                "_ITM_deregisterTMCloneTable", 
                "strtol", 
                "saHpiVersionGet", 
                "getenv", 
                "_Jv_RegisterClasses", 
                "g_option_context_new", 
                "putchar", 
                "__printf_chk", 
                "g_log", 
                "oh_init_textbuffer", 
                "saHpiRptEntryGet", 
                "saHpiDiscover", 
                "setenv", 
                "__libc_start_main", 
                "saHpiControlGet", 
                "oh_init_ep", 
                "saHpiSessionClose", 
                "g_option_context_parse", 
                "oh_lookup_error", 
                "_ITM_registerTMCloneTable", 
                "saHpiControlSet", 
                "__stack_chk_fail", 
                "saHpiSessionOpen", 
                "__cxa_finalize", 
                "saHpiRdrGet", 
                "__gmon_start__", 
                "oh_fprint_ep", 
                "oHpiDomainAddById", 
                "oHpiVersionGet"
            ], 
            "rpm": "openhpi-3.4.0-4.el7_3.1.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/hpialarms"
        }, 
        "usr/lib/openhpi/libipmidirect_so_3_4_0": {
            "report-functions": [
                "nanosleep", 
                "strlen", 
                "oh_concat_ep", 
                "__gmon_start__", 
                "oh_get_rdr_by_type", 
                "MD5_Update", 
                "exp", 
                "pthread_exit", 
                "oh_get_resource_by_id", 
                "_ZdlPv", 
                "socket", 
                "oh_evt_queue_push", 
                "oh_get_rdr_by_id", 
                "pthread_rwlock_destroy", 
                "MD2_Update", 
                "_ITM_registerTMCloneTable", 
                "__strcat_chk", 
                "pthread_cond_signal", 
                "g_list_concat", 
                "_Jv_RegisterClasses", 
                "bind", 
                "__moddi3", 
                "pthread_mutex_lock", 
                "__strcpy_chk", 
                "__vsnprintf_chk", 
                "sendto", 
                "strerror", 
                "localtime_r", 
                "MD2_Final", 
                "mktime", 
                "MD5_Init", 
                "_Znaj", 
                "_ZdaPv", 
                "g_memdup", 
                "g_slist_append", 
                "g_free", 
                "ioctl", 
                "oh_decode_entitypath", 
                "oh_gettimeofday", 
                "strtol", 
                "oh_remove_resource", 
                "__cxa_pure_virtual", 
                "usleep", 
                "__cxa_atexit", 
                "oh_encode_entitypath", 
                "memmove", 
                "g_list_remove", 
                "pthread_key_delete", 
                "__errno_location", 
                "__stack_chk_fail", 
                "oh_flush_rpt", 
                "oh_get_resource_data", 
                "strcat", 
                "pthread_rwlock_wrlock", 
                "oh_cmp_ep", 
                "__fprintf_chk", 
                "pthread_rwlock_unlock", 
                "_ITM_deregisterTMCloneTable", 
                "pthread_setspecific", 
                "g_list_append", 
                "oh_add_rdr", 
                "g_log", 
                "pthread_rwlock_rdlock", 
                "memcpy", 
                "_Unwind_Resume", 
                "log", 
                "gettimeofday", 
                "memcmp", 
                "__assert_fail", 
                "__dynamic_cast", 
                "fwrite", 
                "sqrt", 
                "pthread_create", 
                "oh_get_rdr_data", 
                "fflush", 
                "oh_uid_from_entity_path", 
                "snprintf", 
                "pthread_key_create", 
                "pthread_getspecific", 
                "recvfrom", 
                "pow", 
                "fclose", 
                "strtok_r", 
                "MD5_Final", 
                "__divdi3", 
                "pthread_mutex_trylock", 
                "close", 
                "g_list_last", 
                "gethostbyname", 
                "pthread_join", 
                "log10", 
                "_Znwj", 
                "strncmp", 
                "random", 
                "pthread_cond_destroy", 
                "__gxx_personality_v0", 
                "open", 
                "pthread_rwlock_trywrlock", 
                "pthread_mutex_unlock", 
                "pthread_mutex_destroy", 
                "strstr", 
                "oh_add_resource", 
                "__memcpy_chk", 
                "pthread_cond_wait", 
                "strftime", 
                "fopen", 
                "__cxa_finalize", 
                "strncpy", 
                "poll", 
                "g_hash_table_lookup", 
                "__snprintf_chk", 
                "memset", 
                "__xstat", 
                "MD2_Init"
            ], 
            "rpm": "openhpi-3.4.0-4.el7_3.1.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/openhpi/libipmidirect.so.3.4.0"
        }, 
        "usr/bin/hpitree": {
            "report-functions": [
                "putchar", 
                "g_option_context_new", 
                "saHpiIdrAreaHeaderGet", 
                "_ITM_registerTMCloneTable", 
                "oh_encode_entitypath", 
                "oh_fprint_idrfield", 
                "oh_decode_sensorreading", 
                "saHpiRdrGet", 
                "oh_fprint_rptentry", 
                "saHpiSensorThresholdsGet", 
                "__snprintf_chk", 
                "oh_lookup_rdrtype", 
                "_Jv_RegisterClasses", 
                "saHpiDiscover", 
                "strchr", 
                "oh_fprint_watchdogrec", 
                "g_option_context_free", 
                "saHpiIdrFieldGet", 
                "g_free", 
                "oh_fprint_text", 
                "__gmon_start__", 
                "oHpiVersionGet", 
                "g_option_context_parse", 
                "oHpiDomainAddById", 
                "oh_fprint_idrareaheader", 
                "_ITM_deregisterTMCloneTable", 
                "getenv", 
                "g_log", 
                "__cxa_finalize", 
                "setenv", 
                "__stack_chk_fail", 
                "__libc_start_main", 
                "saHpiControlGet", 
                "saHpiSessionOpen", 
                "saHpiSensorReadingGet", 
                "saHpiIdrInfoGet", 
                "saHpiSessionClose", 
                "__printf_chk", 
                "oh_fprint_ep", 
                "oh_decode_eventstate", 
                "oh_fprint_ctrlrec", 
                "oHpiDomainAdd", 
                "oh_init_textbuffer", 
                "saHpiRptEntryGet", 
                "oh_fprint_ctrlstate", 
                "puts", 
                "oh_append_textbuffer", 
                "oh_fprint_sensorrec", 
                "oh_fprint_idrinfo", 
                "g_option_context_add_main_entries", 
                "oh_fprint_rdr", 
                "oh_lookup_error", 
                "saHpiVersionGet"
            ], 
            "rpm": "openhpi-3.4.0-4.el7_3.1.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/hpitree"
        }, 
        "usr/lib/openhpi/liboa_soap_so_3_4_0": {
            "report-functions": [
                "g_malloc0", 
                "strcpy", 
                "__strcpy_chk", 
                "oh_valid_ctrl_state_mode", 
                "__gmon_start__", 
                "strchr", 
                "oh_concat_ep", 
                "oh_remove_resource", 
                "oh_ssl_write", 
                "oh_lookup_idrfieldtype", 
                "_ITM_registerTMCloneTable", 
                "g_thread_join", 
                "__asprintf_chk", 
                "sleep", 
                "__strncpy_chk", 
                "oh_init_rpt", 
                "oh_valid_textbuffer", 
                "xmlStrncmp", 
                "g_timer_elapsed", 
                "oh_get_resource_by_id", 
                "oh_ssl_connect", 
                "g_slist_free", 
                "__cxa_finalize", 
                "__printf_chk", 
                "memset", 
                "oh_encode_entitypath", 
                "oh_add_rdr", 
                "oh_get_rdr_data", 
                "oh_init_textbuffer", 
                "__errno_location", 
                "strlen", 
                "oh_copy_textbuffer", 
                "g_mutex_trylock", 
                "__stack_chk_fail", 
                "oh_evt_queue_push", 
                "g_slist_remove", 
                "oh_lookup_sensoreventmaskaction", 
                "xmlDocGetRootElement", 
                "oh_ssl_ctx_free", 
                "rintf", 
                "time", 
                "xmlFreeDoc", 
                "g_log", 
                "g_mutex_unlock", 
                "xmlCheckVersion", 
                "lrintf", 
                "g_free", 
                "oh_add_resource", 
                "g_timer_new", 
                "oh_get_resource_next", 
                "strcasecmp", 
                "xmlStrcmp", 
                "oh_lookup_hsaction", 
                "xmlStrlen", 
                "__ctype_toupper_loc", 
                "g_thread_exit", 
                "strcmp", 
                "g_slist_append", 
                "g_timer_start", 
                "memcpy", 
                "oh_lookup_idrareatype", 
                "strcat", 
                "__snprintf_chk", 
                "g_hash_table_lookup", 
                "g_mutex_lock", 
                "oh_uid_from_entity_path", 
                "g_mutex_free", 
                "xmlFreeParserCtxt", 
                "g_memdup", 
                "free", 
                "oh_get_rdr_next", 
                "xmlParseChunk", 
                "xmlCreatePushParserCtxt", 
                "__memcpy_chk", 
                "oh_lookup_severity", 
                "oh_append_textbuffer", 
                "_ITM_deregisterTMCloneTable", 
                "oh_gettimeofday", 
                "oh_flush_rpt", 
                "oh_ssl_ctx_init", 
                "g_timer_destroy", 
                "g_malloc", 
                "oh_get_resource_data", 
                "oh_get_rdr_by_type", 
                "g_mutex_new", 
                "g_thread_create", 
                "oh_ssl_read", 
                "strtod", 
                "strncpy", 
                "strstr", 
                "_Jv_RegisterClasses", 
                "oh_ssl_disconnect"
            ], 
            "rpm": "openhpi-3.4.0-4.el7_3.1.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/openhpi/liboa_soap.so.3.4.0"
        }, 
        "usr/lib/openhpi/libsysfs2hpi_so_3_4_0": {
            "report-functions": [
                "__memcpy_chk", 
                "oh_add_rdr", 
                "sysfs_open_bus", 
                "g_slist_free", 
                "sysfs_read_attribute", 
                "__stack_chk_fail", 
                "oh_add_resource", 
                "_ITM_deregisterTMCloneTable", 
                "oh_get_rdr_next", 
                "sysfs_close_bus", 
                "__cxa_finalize", 
                "__snprintf_chk", 
                "_Jv_RegisterClasses", 
                "g_malloc0", 
                "dlist_start", 
                "g_log", 
                "g_slist_append", 
                "g_slist_length", 
                "oh_init_rpt", 
                "malloc", 
                "oh_encode_entitypath", 
                "sysfs_open_attribute", 
                "strtol", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "oh_evt_queue_push", 
                "g_hash_table_lookup", 
                "sysfs_write_attribute", 
                "strncpy", 
                "oh_uid_from_entity_path", 
                "free", 
                "oh_get_rdr_data", 
                "oh_concat_ep", 
                "sysfs_get_device_attr", 
                "sysfs_close_attribute", 
                "_dlist_mark_move"
            ], 
            "rpm": "openhpi-3.4.0-4.el7_3.1.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/openhpi/libsysfs2hpi.so.3.4.0"
        }, 
        "usr/bin/hpireset": {
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "oh_append_textbuffer", 
                "__cxa_finalize", 
                "oHpiDomainAdd", 
                "oh_fprint_ep", 
                "saHpiSessionClose", 
                "strtol", 
                "g_option_context_parse", 
                "_ITM_deregisterTMCloneTable", 
                "saHpiSessionOpen", 
                "oh_encode_entitypath", 
                "g_free", 
                "saHpiRptEntryGet", 
                "oh_lookup_error", 
                "oHpiDomainAddById", 
                "g_option_context_add_main_entries", 
                "_Jv_RegisterClasses", 
                "g_option_context_new", 
                "__gmon_start__", 
                "getenv", 
                "oh_init_ep", 
                "oh_init_textbuffer", 
                "__libc_start_main", 
                "g_log", 
                "setenv", 
                "puts", 
                "saHpiVersionGet", 
                "__printf_chk", 
                "saHpiResourceResetStateSet", 
                "strchr", 
                "saHpiDomainInfoGet", 
                "g_option_context_free", 
                "saHpiDiscover"
            ], 
            "rpm": "openhpi-3.4.0-4.el7_3.1.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/hpireset"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2snapshot_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2snapshot.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "dm_task_get_name", 
                "__cxa_finalize", 
                "dmeventd_lvm2_command", 
                "dm_pool_free", 
                "__errno_location", 
                "strerror", 
                "feof", 
                "dm_pool_zalloc", 
                "_ITM_registerTMCloneTable", 
                "fclose", 
                "dm_get_status_snapshot", 
                "__xstat64", 
                "dmeventd_lvm2_unlock", 
                "fopen64", 
                "dm_pool_destroy", 
                "dm_split_words", 
                "fork", 
                "_ITM_deregisterTMCloneTable", 
                "dmeventd_lvm2_lock", 
                "dm_get_next_target", 
                "__gmon_start__", 
                "execvp", 
                "dmeventd_lvm2_exit", 
                "dm_pool_create", 
                "__stack_chk_fail", 
                "__syslog_chk", 
                "dm_task_get_info", 
                "dmeventd_lvm2_init", 
                "fgets", 
                "_Jv_RegisterClasses", 
                "exit"
            ], 
            "rpm": "openhpi-3.4.0-4.el7_3.1.i686.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2mirror_so": {
            "report-functions": [
                "__cxa_finalize", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "strtol", 
                "dm_free_wrapper", 
                "__syslog_chk", 
                "_Jv_RegisterClasses", 
                "strlen", 
                "_ITM_registerTMCloneTable", 
                "dm_get_next_target", 
                "dmeventd_lvm2_lock", 
                "dmeventd_lvm2_unlock", 
                "strcmp", 
                "strchr", 
                "dmeventd_lvm2_run", 
                "dmeventd_lvm2_exit", 
                "dmeventd_lvm2_init", 
                "dm_task_get_name", 
                "dmeventd_lvm2_pool", 
                "dm_malloc_wrapper", 
                "__stack_chk_fail"
            ], 
            "rpm": "openhpi-3.4.0-4.el7_3.1.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2mirror.so"
        }, 
        "usr/lib/openhpi/libslave_so_3_4_0": {
            "report-functions": [
                "__cxa_end_catch", 
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize", 
                "g_module_open", 
                "oh_event_free", 
                "oh_gettimeofday", 
                "g_mutex_free", 
                "__pthread_key_create", 
                "_ZNSs4_Rep10_M_destroyERKSaIcE", 
                "g_mutex_lock", 
                "_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_", 
                "oh_uid_from_entity_path", 
                "_ZSt17__throw_bad_allocv", 
                "strtol", 
                "_Znwj", 
                "strlen", 
                "__cxa_rethrow", 
                "_Jv_RegisterClasses", 
                "g_module_supported", 
                "_ZdlPv", 
                "g_mutex_new", 
                "oh_init_ep", 
                "oh_evt_queue_push", 
                "g_thread_join", 
                "memmove", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "g_free", 
                "__cxa_begin_catch", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "g_module_symbol", 
                "memcpy", 
                "_ITM_deregisterTMCloneTable", 
                "_ZNSs6assignEPKcj", 
                "oh_concat_ep", 
                "__gxx_personality_v0", 
                "__gmon_start__", 
                "oh_encode_entitypath", 
                "g_usleep", 
                "g_thread_create", 
                "g_module_error", 
                "_Unwind_Resume", 
                "g_malloc0", 
                "g_module_close", 
                "g_log", 
                "__stack_chk_fail", 
                "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base", 
                "g_hash_table_lookup", 
                "g_slist_append", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base"
            ], 
            "rpm": "openhpi-3.4.0-4.el7_3.1.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/openhpi/libslave.so.3.4.0"
        }, 
        "usr/bin/hpiel": {
            "report-functions": [
                "__gmon_start__", 
                "saHpiRptEntryGet", 
                "strchr", 
                "saHpiEventLogInfoGet", 
                "saHpiDomainInfoGet", 
                "strtol", 
                "oh_fprint_eventloginfo", 
                "__libc_start_main", 
                "g_free", 
                "oh_init_ep", 
                "oHpiDomainAddById", 
                "oh_fprint_rdr", 
                "oh_decode_entitypath", 
                "setenv", 
                "saHpiSessionClose", 
                "oh_fprint_eventlogentry", 
                "saHpiVersionGet", 
                "oh_encode_entitypath", 
                "_ITM_deregisterTMCloneTable", 
                "g_option_context_new", 
                "_ITM_registerTMCloneTable", 
                "oh_fprint_ep", 
                "__cxa_finalize", 
                "__printf_chk", 
                "oh_fprint_rptentry", 
                "oh_init_bigtext", 
                "g_log", 
                "__stack_chk_fail", 
                "g_option_context_free", 
                "saHpiSessionOpen", 
                "oh_append_textbuffer", 
                "oHpiDomainAdd", 
                "puts", 
                "oHpiVersionGet", 
                "_Jv_RegisterClasses", 
                "getenv", 
                "saHpiEventLogClear", 
                "oh_lookup_eventtype", 
                "g_option_context_parse", 
                "oh_lookup_error", 
                "oh_init_textbuffer", 
                "saHpiEventLogEntryGet", 
                "saHpiDiscover"
            ], 
            "rpm": "openhpi-3.4.0-4.el7_3.1.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/hpiel"
        }, 
        "usr/bin/hpi_shell": {
            "report-functions": [
                "saHpiFumiTargetInfoGet", 
                "g_get_current_time", 
                "oh_lookup_language", 
                "saHpiAlarmGetNext", 
                "saHpiSensorEventEnableSet", 
                "saHpiSensorEventMasksGet", 
                "memcpy", 
                "saHpiResourceResetStateGet", 
                "oh_lookup_dimitestserviceimpact", 
                "saHpiDomainInfoGet", 
                "saHpiIdrFieldSet", 
                "saHpiIdrFieldAdd", 
                "g_slist_find", 
                "oh_fprint_event", 
                "saHpiResourceResetStateSet", 
                "saHpiEventLogOverflowReset", 
                "oh_decode_capabilities", 
                "saHpiFumiTargetComponentInfoGet", 
                "saHpiFumiUpgradeStatusGet", 
                "saHpiHotSwapIndicatorStateSet", 
                "strcpy", 
                "oh_lookup_ctrloutputtype", 
                "saHpiIdrAreaHeaderGet", 
                "g_option_context_add_main_entries", 
                "saHpiFumiAutoRollbackDisableGet", 
                "saHpiEventLogTimeSet", 
                "oh_decode_eventstate", 
                "saHpiWatchdogTimerGet", 
                "g_free", 
                "saHpiHotSwapPolicyCancel", 
                "saHpiFumiSourceComponentInfoGet", 
                "free", 
                "oh_lookup_ctrlmode", 
                "saHpiEventLogStateSet", 
                "__snprintf_chk", 
                "saHpiFumiTargetVerifyStart", 
                "saHpiSensorTypeGet", 
                "oHpiVersionGet", 
                "saHpiDimiTestCancel", 
                "saHpiFumiBankCopyStart", 
                "dup", 
                "saHpiSensorReadingGet", 
                "saHpiFumiSourceInfoGet", 
                "saHpiAnnunciatorAcknowledge", 
                "saHpiResourcePowerStateSet", 
                "oHpiDomainAddById", 
                "fflush", 
                "strtol", 
                "g_option_context_free", 
                "oh_lookup_ctrltype", 
                "oh_lookup_idrareatype", 
                "saHpiIdrAreaDelete", 
                "malloc", 
                "saHpiParmControl", 
                "oh_init_textbuffer", 
                "oh_decode_time", 
                "fclose", 
                "saHpiResourcePowerStateGet", 
                "saHpiSensorThresholdsSet", 
                "saHpiRdrGetByInstrumentId", 
                "saHpiAutoExtractTimeoutSet", 
                "saHpiRptEntryGetByResourceId", 
                "saHpiSensorEnableGet", 
                "saHpiWatchdogTimerSet", 
                "saHpiControlTypeGet", 
                "__strncpy_chk", 
                "oh_lookup_fumisourcestatus", 
                "oh_lookup_domaineventtype", 
                "saHpiDimiTestStatusGet", 
                "__gmon_start__", 
                "system", 
                "saHpiFumiUpgradeCancel", 
                "g_usleep", 
                "saHpiAutoInsertTimeoutSet", 
                "oh_lookup_hsstate", 
                "saHpiDimiTestReadinessGet", 
                "oh_fprint_ep", 
                "saHpiWatchdogTimerReset", 
                "saHpiSensorEnableSet", 
                "strcat", 
                "__strcpy_chk", 
                "saHpiResourceSeveritySet", 
                "sscanf", 
                "saHpiFumiLogicalTargetInfoGet", 
                "saHpiEventLogInfoGet", 
                "saHpiResourceActiveSet", 
                "g_thread_create", 
                "saHpiSessionClose", 
                "strcmp", 
                "saHpiDrtEntryGet", 
                "saHpiAnnunciatorGetNext", 
                "oh_lookup_rdrtype", 
                "oh_lookup_error", 
                "saHpiSubscribe", 
                "mktime", 
                "saHpiFumiAutoRollbackDisableSet", 
                "saHpiEventLogTimeGet", 
                "oh_lookup_fumibankstate", 
                "__ctype_toupper_loc", 
                "saHpiSensorThresholdsGet", 
                "g_slist_append", 
                "oh_lookup_sensorunits", 
                "g_time_val_add", 
                "oh_decode_entitypath", 
                "saHpiAnnunciatorModeSet", 
                "saHpiSessionOpen", 
                "_ITM_deregisterTMCloneTable", 
                "saHpiIdrFieldGet", 
                "oh_lookup_sensormodunituse", 
                "__strdup", 
                "oh_lookup_fumiserviceimpact", 
                "oh_lookup_texttype", 
                "oh_fprint_eventlogentry", 
                "oh_init_bigtext", 
                "oh_get_rdr_num", 
                "saHpiDimiTestInfoGet", 
                "snprintf", 
                "strchr", 
                "oh_lookup_statuscondtype", 
                "tcgetattr", 
                "saHpiDimiTestResultsGet", 
                "__strcat_chk", 
                "ioctl", 
                "saHpiControlGet", 
                "saHpiUnsubscribe", 
                "saHpiFumiServiceImpactGet", 
                "g_cond_timed_wait", 
                "memset", 
                "close", 
                "__stpcpy_chk", 
                "saHpiEventLogEntryGet", 
                "saHpiFumiBackupStart", 
                "__memcpy_chk", 
                "fopen", 
                "saHpiRptEntryGet", 
                "saHpiAutoExtractTimeoutGet", 
                "saHpiSensorEventEnableGet", 
                "_ITM_registerTMCloneTable", 
                "__printf_chk", 
                "saHpiFumiSourceSet", 
                "saHpiFumiSourceInfoValidateStart", 
                "saHpiGetChildEntityPath", 
                "saHpiAutoInsertTimeoutGet", 
                "g_option_context_new", 
                "fwrite", 
                "saHpiFumiLogicalTargetComponentInfoGet", 
                "oh_decode_guid", 
                "open", 
                "oh_lookup_fumispecinfotype", 
                "saHpiDimiTestStart", 
                "saHpiAnnunciatorGet", 
                "saHpiAnnunciatorDelete", 
                "qsort", 
                "__memset_chk", 
                "g_option_context_parse", 
                "oh_lookup_atcahpiledcolor", 
                "saHpiVersionGet", 
                "saHpiIdrInfoGet", 
                "oh_append_textbuffer", 
                "saHpiAnnunciatorModeGet", 
                "fgets", 
                "saHpiResourceTagSet", 
                "oh_lookup_eventtype", 
                "saHpiFumiCleanup", 
                "saHpiHotSwapActionRequest", 
                "g_mutex_lock", 
                "saHpiRdrUpdateCountGet", 
                "saHpiEventLogClear", 
                "g_slist_nth_data", 
                "saHpiEventGet", 
                "exit", 
                "g_mutex_new", 
                "strcasecmp", 
                "__libc_start_main", 
                "strlen", 
                "oh_lookup_fumisafdefinedspecid", 
                "__ctype_b_loc", 
                "putchar", 
                "g_thread_exit", 
                "saHpiSensorEventMasksSet", 
                "strncat", 
                "getenv", 
                "ctermid", 
                "__strncat_chk", 
                "saHpiIdrAreaAdd", 
                "oh_decode_hscapabilities", 
                "oHpiDomainAdd", 
                "oh_lookup_resourceeventtype", 
                "access", 
                "oh_lookup_fumiupgradestatus", 
                "__sprintf_chk", 
                "strncpy", 
                "saHpiHotSwapIndicatorStateGet", 
                "oh_lookup_eventcategory", 
                "g_log", 
                "dup2", 
                "oh_append_char_bigtext", 
                "saHpiDimiInfoGet", 
                "saHpiHotSwapStateGet", 
                "oh_append_hex_bigtext", 
                "saHpiRdrGet", 
                "g_slist_length", 
                "oh_lookup_sensorreadingtype", 
                "g_cond_new", 
                "_Jv_RegisterClasses", 
                "saHpiGetIdByEntityPath", 
                "saHpiResourceInactiveSet", 
                "tcsetattr", 
                "saHpiControlSet", 
                "__stack_chk_fail", 
                "saHpiFumiSpecInfoGet", 
                "oh_lookup_sensortype", 
                "strncmp", 
                "_IO_getc", 
                "saHpiAnnunciatorAdd", 
                "saHpiFumiBankBootOrderSet", 
                "oh_lookup_ctrlstatedigital", 
                "saHpiFumiInstallStart", 
                "oh_encode_entitypath", 
                "oh_decode_dimitestcapabilities", 
                "oh_lookup_idrfieldtype", 
                "oh_init_ep", 
                "saHpiFumiActivateStart", 
                "saHpiResourceFailedRemove", 
                "oh_lookup_severity", 
                "__cxa_finalize", 
                "ungetc", 
                "saHpiEventLogStateGet", 
                "puts", 
                "oh_lookup_sensoreventctrl", 
                "g_mutex_unlock", 
                "fileno", 
                "saHpiFumiTargetVerifyMainStart", 
                "setenv", 
                "saHpiFumiRollbackStart", 
                "oh_lookup_dimitestrunstatus", 
                "oh_decode_manufacturerid"
            ], 
            "rpm": "openhpi-3.4.0-4.el7_3.1.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/hpi_shell"
        }, 
        "usr/bin/hpidomain": {
            "report-functions": [
                "g_free", 
                "oh_lookup_error", 
                "oh_encode_entitypath", 
                "getenv", 
                "__gmon_start__", 
                "oHpiVersionGet", 
                "oh_fprint_text", 
                "oh_init_ep", 
                "saHpiDomainTagSet", 
                "oHpiDomainAddById", 
                "oh_append_textbuffer", 
                "g_option_context_parse", 
                "g_option_context_free", 
                "putchar", 
                "oHpiDomainEntryGetByDomainId", 
                "oh_fprint_ep", 
                "__stack_chk_fail", 
                "g_log", 
                "g_option_context_new", 
                "__printf_chk", 
                "oh_decode_time", 
                "oHpiDomainAdd", 
                "_ITM_registerTMCloneTable", 
                "__libc_start_main", 
                "saHpiVersionGet", 
                "setenv", 
                "saHpiDrtEntryGet", 
                "strchr", 
                "puts", 
                "oh_init_textbuffer", 
                "g_option_context_add_main_entries", 
                "_ITM_deregisterTMCloneTable", 
                "_Jv_RegisterClasses", 
                "saHpiSessionOpen", 
                "saHpiSessionClose", 
                "__cxa_finalize"
            ], 
            "rpm": "openhpi-3.4.0-4.el7_3.1.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/hpidomain"
        }, 
        "usr/bin/hpitop": {
            "report-functions": [
                "strchr", 
                "oh_lookup_eventcategory", 
                "setenv", 
                "oh_lookup_error", 
                "_Jv_RegisterClasses", 
                "oh_lookup_annunciatortype", 
                "saHpiDiscover", 
                "saHpiSessionOpen", 
                "oh_decode_entitypath", 
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable", 
                "oHpiDomainAdd", 
                "g_option_context_new", 
                "oh_init_textbuffer", 
                "saHpiSessionClose", 
                "oh_append_textbuffer", 
                "oh_init_ep", 
                "g_log", 
                "saHpiVersionGet", 
                "__gmon_start__", 
                "oh_lookup_sensortype", 
                "g_free", 
                "saHpiIdrInfoGet", 
                "g_option_context_free", 
                "strncmp", 
                "saHpiRdrGet", 
                "strtol", 
                "oh_append_bigtext", 
                "oh_lookup_ctrltype", 
                "__stack_chk_fail", 
                "__printf_chk", 
                "oh_lookup_ctrloutputtype", 
                "oh_fprint_ep", 
                "__strncpy_chk", 
                "g_option_context_parse", 
                "__libc_start_main", 
                "_ITM_deregisterTMCloneTable", 
                "__snprintf_chk", 
                "saHpiRptEntryGet", 
                "oh_decode_capabilities", 
                "getenv", 
                "oh_encode_entitypath", 
                "oHpiDomainAddById", 
                "oHpiVersionGet"
            ], 
            "rpm": "openhpi-3.4.0-4.el7_3.1.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/hpitop"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2thin_so": {
            "report-functions": [
                "_Jv_RegisterClasses", 
                "dm_task_get_names", 
                "dm_task_no_open_count", 
                "exit", 
                "dm_task_set_name", 
                "__syslog_chk", 
                "strerror", 
                "dmeventd_lvm2_command", 
                "__errno_location", 
                "dm_task_create", 
                "dm_task_destroy", 
                "_ITM_deregisterTMCloneTable", 
                "dmeventd_lvm2_exit", 
                "dm_pool_create", 
                "execvp", 
                "dm_get_status_thin_pool", 
                "waitpid", 
                "dm_task_get_name", 
                "_ITM_registerTMCloneTable", 
                "dm_task_run", 
                "dm_bitset_destroy", 
                "dmeventd_lvm2_init", 
                "dm_pool_free", 
                "dm_pool_destroy", 
                "__stack_chk_fail", 
                "dm_get_next_target", 
                "dm_task_get_info", 
                "dmeventd_lvm2_run", 
                "dm_mountinfo_read", 
                "fork", 
                "__gmon_start__", 
                "dm_pool_zalloc", 
                "__cxa_finalize", 
                "dm_task_get_deps", 
                "dm_bitset_create"
            ], 
            "rpm": "openhpi-3.4.0-4.el7_3.1.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2thin.so"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2raid_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2raid.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__syslog_chk", 
                "strcmp", 
                "dmeventd_lvm2_run", 
                "dm_split_words", 
                "dmeventd_lvm2_init", 
                "dm_get_next_target", 
                "dmeventd_lvm2_exit", 
                "dmeventd_lvm2_lock", 
                "_Jv_RegisterClasses", 
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable", 
                "strtol", 
                "strchr", 
                "dm_task_get_name", 
                "dmeventd_lvm2_unlock", 
                "dmeventd_lvm2_pool", 
                "__stack_chk_fail", 
                "__gmon_start__"
            ], 
            "rpm": "openhpi-3.4.0-4.el7_3.1.i686.rpm"
        }, 
        "usr/bin/ohdomainlist": {
            "report-functions": [
                "strchr", 
                "__stack_chk_fail", 
                "g_option_context_add_main_entries", 
                "_Jv_RegisterClasses", 
                "puts", 
                "oh_fprint_text", 
                "oh_decode_time", 
                "oh_lookup_error", 
                "_ITM_deregisterTMCloneTable", 
                "oh_fprint_ep", 
                "__gmon_start__", 
                "oHpiDomainAdd", 
                "oh_init_textbuffer", 
                "oh_init_ep", 
                "saHpiSessionClose", 
                "oh_append_textbuffer", 
                "saHpiVersionGet", 
                "getenv", 
                "g_option_context_parse", 
                "_ITM_registerTMCloneTable", 
                "strtol", 
                "g_option_context_new", 
                "saHpiSessionOpen", 
                "__printf_chk", 
                "oHpiDomainAddById", 
                "__libc_start_main", 
                "g_free", 
                "oh_encode_entitypath", 
                "__cxa_finalize", 
                "oHpiVersionGet", 
                "putchar", 
                "saHpiDomainInfoGet", 
                "g_log", 
                "g_option_context_free"
            ], 
            "rpm": "openhpi-3.4.0-4.el7_3.1.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/ohdomainlist"
        }, 
        "usr/lib/openhpi/libilo2_ribcl_so_3_4_0": {
            "report-functions": [
                "xmlDocGetRootElement", 
                "oh_event_free", 
                "oh_get_resource_by_ep", 
                "g_slist_remove_link", 
                "oh_ssl_read", 
                "__gmon_start__", 
                "oh_valid_ctrl_state_mode", 
                "g_slist_length", 
                "xmlGetProp", 
                "oh_lookup_error", 
                "oh_lookup_severity", 
                "oh_add_resource", 
                "xmlFreeDoc", 
                "xmlStrcmp", 
                "__snprintf_chk", 
                "oh_concat_ep", 
                "oh_valid_textbuffer", 
                "oh_get_resource_data", 
                "strncpy", 
                "strlen", 
                "sleep", 
                "gethostname", 
                "strncmp", 
                "oh_copy_textbuffer", 
                "g_hash_table_lookup", 
                "memcpy", 
                "g_malloc", 
                "strtol", 
                "malloc", 
                "_ITM_registerTMCloneTable", 
                "oh_ssl_connect", 
                "g_log", 
                "oh_get_rdr_data", 
                "oh_ssl_ctx_init", 
                "oh_flush_rpt", 
                "sscanf", 
                "__cxa_finalize", 
                "oh_get_rdr_by_type", 
                "g_free", 
                "g_slist_append", 
                "__stack_chk_fail", 
                "g_memdup", 
                "oh_lookup_powerstate", 
                "memset", 
                "_Jv_RegisterClasses", 
                "strcpy", 
                "strchr", 
                "oh_get_resource_by_id", 
                "oh_append_textbuffer", 
                "oh_evt_queue_push", 
                "oh_ssl_write", 
                "stpcpy", 
                "strncat", 
                "oh_encode_entitypath", 
                "oh_gettimeofday", 
                "__ctype_b_loc", 
                "oh_lookup_resetaction", 
                "g_malloc0", 
                "strcmp", 
                "oh_uid_from_entity_path", 
                "strstr", 
                "xmlParseMemory", 
                "__errno_location", 
                "oh_ssl_ctx_free", 
                "free", 
                "oh_add_rdr", 
                "oh_ssl_disconnect", 
                "strcasecmp"
            ], 
            "rpm": "openhpi-3.4.0-4.el7_3.1.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/openhpi/libilo2_ribcl.so.3.4.0"
        }, 
        "usr/bin/hpisettime": {
            "report-functions": [
                "sscanf", 
                "oh_append_textbuffer", 
                "oh_decode_time", 
                "_ITM_deregisterTMCloneTable", 
                "oHpiDomainAdd", 
                "__cxa_finalize", 
                "saHpiDiscover", 
                "_ITM_registerTMCloneTable", 
                "puts", 
                "g_option_context_add_main_entries", 
                "oh_init_textbuffer", 
                "oh_lookup_error", 
                "saHpiEventLogTimeSet", 
                "__gmon_start__", 
                "setenv", 
                "_Jv_RegisterClasses", 
                "saHpiRptEntryGet", 
                "oh_encode_entitypath", 
                "strtol", 
                "oh_fprint_ep", 
                "g_log", 
                "g_free", 
                "getenv", 
                "__stack_chk_fail", 
                "saHpiSessionClose", 
                "__printf_chk", 
                "saHpiVersionGet", 
                "mktime", 
                "g_option_context_new", 
                "saHpiEventLogTimeGet", 
                "g_option_context_parse", 
                "saHpiDomainInfoGet", 
                "g_option_context_free", 
                "strchr", 
                "saHpiSessionOpen", 
                "oHpiDomainAddById", 
                "oh_init_ep"
            ], 
            "rpm": "openhpi-3.4.0-4.el7_3.1.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/hpisettime"
        }, 
        "usr/lib/openhpi/libsimulator_so_3_4_0": {
            "report-functions": [
                "g_log", 
                "oh_get_resource_by_id", 
                "oh_get_rdr_uid", 
                "oh_announcement_create", 
                "g_free", 
                "oh_lookup_powerstate", 
                "g_malloc0", 
                "__snprintf_chk", 
                "oh_lookup_resetaction", 
                "g_slist_free", 
                "strcmp", 
                "_ITM_deregisterTMCloneTable", 
                "oh_el_info", 
                "oh_init_rpt", 
                "oh_announcement_del", 
                "oh_concat_ep", 
                "oh_copy_textbuffer", 
                "oh_el_timeset", 
                "g_slist_prepend", 
                "g_slist_nth_data", 
                "_ITM_registerTMCloneTable", 
                "oh_lookup_hsindicatorstate", 
                "oh_announcement_get", 
                "oh_el_get", 
                "oh_flush_rpt", 
                "__gmon_start__", 
                "oh_get_resource_data", 
                "oh_gettimeofday", 
                "oh_get_rdr_by_type", 
                "oh_lookup_sensoreventmaskaction", 
                "oh_lookup_error", 
                "__cxa_finalize", 
                "oh_add_rdr", 
                "g_malloc", 
                "oh_announcement_append", 
                "oh_lookup_hsstate", 
                "oh_get_rdr_data", 
                "oh_get_resource_next", 
                "_Jv_RegisterClasses", 
                "g_slist_append", 
                "memcpy", 
                "__stack_chk_fail", 
                "oh_el_clear", 
                "oh_remove_resource", 
                "oh_lookup_idrfieldtype", 
                "oh_announcement_ack", 
                "oh_add_resource", 
                "oh_append_textbuffer", 
                "oh_lookup_hsaction", 
                "oh_uid_from_entity_path", 
                "oh_lookup_annunciatormode", 
                "oh_evt_queue_push", 
                "oh_el_close", 
                "oh_el_create", 
                "g_hash_table_lookup", 
                "oh_announcement_get_next", 
                "oh_lookup_severity", 
                "oh_init_textbuffer", 
                "oh_valid_ctrl_state_mode", 
                "oh_el_enableset", 
                "oh_encode_entitypath", 
                "oh_el_append"
            ], 
            "rpm": "openhpi-3.4.0-4.el7_3.1.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/openhpi/libsimulator.so.3.4.0"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2raid_so": {
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "dmeventd_lvm2_run", 
                "strtol", 
                "__cxa_finalize", 
                "dmeventd_lvm2_command", 
                "strcmp", 
                "__syslog_chk", 
                "_Jv_RegisterClasses", 
                "dmeventd_lvm2_init", 
                "dm_task_get_name", 
                "dmeventd_lvm2_unlock", 
                "__stack_chk_fail", 
                "dmeventd_lvm2_exit", 
                "dm_get_next_target", 
                "dmeventd_lvm2_lock", 
                "strchr", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "openhpi-3.4.0-4.el7_3.1.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2raid.so"
        }, 
        "usr/lib/openhpi/libsnmp_bc_so_3_4_0": {
            "report-functions": [
                "init_snmp", 
                "oh_valid_thresholds", 
                "oh_derive_string", 
                "g_hash_table_insert", 
                "__strcpy_chk", 
                "g_markup_parse_context_new", 
                "g_static_rec_mutex_init", 
                "oh_lookup_hsindicatorstate", 
                "__strncat_chk", 
                "g_list_prepend", 
                "oh_remove_resource", 
                "strtoul", 
                "memcpy", 
                "oh_el_overflowset", 
                "g_str_hash", 
                "g_hash_table_size", 
                "g_static_rec_mutex_trylock", 
                "oh_lookup_annunciatormode", 
                "oh_lookup_parmaction", 
                "g_static_rec_mutex_unlock", 
                "g_strfreev", 
                "oh_get_resource_by_ep", 
                "read_objid", 
                "snmp_sess_close", 
                "oh_copy_textbuffer", 
                "oh_concat_ep", 
                "_Jv_RegisterClasses", 
                "oh_uid_from_entity_path", 
                "oh_el_info", 
                "oh_init_textbuffer", 
                "oh_el_append", 
                "strchr", 
                "g_list_first", 
                "g_malloc0", 
                "mktime", 
                "g_log", 
                "g_hash_table_foreach", 
                "g_slist_append", 
                "oh_lookup_hsaction", 
                "snmp_perror", 
                "oh_lookup_severity", 
                "oh_add_resource", 
                "fputc", 
                "oh_lookup_ctrlstatedigital", 
                "oh_lookup_hsstate", 
                "oh_get_resource_data", 
                "oh_get_rdr_next", 
                "oh_lookup_error", 
                "oh_el_clear", 
                "__strncpy_chk", 
                "oh_lookup_eventtype", 
                "g_markup_parse_context_parse", 
                "oh_el_create", 
                "snmp_sess_session", 
                "g_slist_free", 
                "__snprintf_chk", 
                "__printf_chk", 
                "g_strtod", 
                "g_strchug", 
                "getenv", 
                "oh_get_rdr_uid", 
                "snmp_errstring", 
                "oh_compare_sensorreading", 
                "oh_get_rdr_data", 
                "g_markup_parse_context_end_parse", 
                "g_markup_parse_context_free", 
                "oh_lookup_powerstate", 
                "__fprintf_chk", 
                "strcmp", 
                "snmp_oid_compare", 
                "snmp_getn_bulk", 
                "oh_el_prepend", 
                "oh_encode_entitypath", 
                "sleep", 
                "snmp_free_pdu", 
                "oh_el_close", 
                "g_hash_table_lookup", 
                "oh_lookup_resetaction", 
                "sscanf", 
                "oh_get_rdr_by_type", 
                "oh_valid_textbuffer", 
                "oh_get_resource_by_id", 
                "g_static_rec_mutex_lock", 
                "oh_flush_rpt", 
                "g_slist_remove_link", 
                "g_markup_parse_context_get_position", 
                "oh_el_get", 
                "g_hash_table_new", 
                "strstr", 
                "__memmove_chk", 
                "oh_add_rdr", 
                "g_set_error", 
                "snmp_get", 
                "strtol", 
                "g_ascii_strncasecmp", 
                "snmp_sess_init", 
                "snmp_sess_open", 
                "oh_append_textbuffer", 
                "snmp_pdu_create", 
                "oh_get_rdr_by_id", 
                "__stack_chk_fail", 
                "uuid_parse", 
                "g_markup_error_quark", 
                "g_list_free", 
                "memcmp", 
                "g_strchomp", 
                "g_strdup", 
                "oh_encode_sensorreading", 
                "g_free", 
                "generate_Ku", 
                "strftime", 
                "_ITM_registerTMCloneTable", 
                "g_memdup", 
                "fwrite", 
                "snmp_log", 
                "oh_lookup_sensoreventmaskaction", 
                "strncpy", 
                "g_ascii_toupper", 
                "localtime_r", 
                "oh_evt_queue_push", 
                "oh_gettimeofday", 
                "g_error_free", 
                "g_hash_table_destroy", 
                "fprint_objid", 
                "g_str_equal", 
                "oh_init_rpt", 
                "oh_valid_ctrl_state_mode", 
                "__cxa_finalize", 
                "snmp_set", 
                "g_slist_prepend", 
                "g_hash_table_lookup_extended", 
                "strlen", 
                "g_strconcat", 
                "g_thread_self", 
                "oh_uid_lookup", 
                "oh_set_ep_location", 
                "puts", 
                "__gmon_start__", 
                "oh_init_ep", 
                "_ITM_deregisterTMCloneTable", 
                "g_slist_length", 
                "snmp_sess_perror", 
                "g_ascii_strcasecmp"
            ], 
            "rpm": "openhpi-3.4.0-4.el7_3.1.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/openhpi/libsnmp_bc.so.3.4.0"
        }, 
        "usr/lib/openhpi/libdyn_simulator_so_3_4_0": {
            "report-functions": [
                "pthread_mutex_lock", 
                "oh_flush_rpt", 
                "strlen", 
                "gettimeofday", 
                "oh_concat_ep", 
                "g_slist_append", 
                "pthread_exit", 
                "oh_add_resource", 
                "oh_el_overflowreset", 
                "strcpy", 
                "oh_el_clear", 
                "oh_uid_from_entity_path", 
                "g_scanner_peek_next_token", 
                "oh_get_rdr_data", 
                "oh_decode_entitypath", 
                "strstr", 
                "fopen", 
                "_Znaj", 
                "_ITM_deregisterTMCloneTable", 
                "__divdi3", 
                "pthread_cond_signal", 
                "__snprintf_chk", 
                "__memcpy_chk", 
                "g_memdup", 
                "__xstat", 
                "oh_add_rdr", 
                "localtime_r", 
                "g_scanner_destroy", 
                "strtol", 
                "memset", 
                "oh_remove_resource", 
                "pthread_join", 
                "g_malloc0", 
                "oh_get_rdr_by_id", 
                "sscanf", 
                "oh_el_info", 
                "oh_evt_queue_push", 
                "close", 
                "pthread_rwlock_wrlock", 
                "oh_get_resource_by_id", 
                "__dynamic_cast", 
                "g_scanner_unexp_token", 
                "memmove", 
                "pthread_cond_destroy", 
                "fwrite", 
                "oh_el_append", 
                "_ZdlPv", 
                "pthread_getspecific", 
                "oh_el_timeset", 
                "_Znwj", 
                "pthread_rwlock_destroy", 
                "oh_get_resource_data", 
                "_ZdaPv", 
                "g_scanner_get_next_token", 
                "__vsnprintf_chk", 
                "__gxx_personality_v0", 
                "pthread_rwlock_rdlock", 
                "pthread_self", 
                "g_return_if_fail_warning", 
                "pthread_setspecific", 
                "usleep", 
                "open", 
                "fflush", 
                "oh_encode_entitypath", 
                "g_log", 
                "__cxa_atexit", 
                "__stack_chk_fail", 
                "oh_cmp_ep", 
                "oh_get_rdr_by_type", 
                "oh_gettimeofday", 
                "_ITM_registerTMCloneTable", 
                "_Jv_RegisterClasses", 
                "g_scanner_new", 
                "__strcpy_chk", 
                "__assert_fail", 
                "strftime", 
                "pthread_create", 
                "strncpy", 
                "__cxa_pure_virtual", 
                "pthread_rwlock_trywrlock", 
                "g_hash_table_lookup", 
                "oh_el_get", 
                "pthread_key_create", 
                "__cxa_finalize", 
                "__fprintf_chk", 
                "oh_el_enableset", 
                "pthread_mutex_unlock", 
                "pthread_key_delete", 
                "g_scanner_input_file", 
                "g_scanner_scope_add_symbol", 
                "g_strdup", 
                "fclose", 
                "pthread_mutex_trylock", 
                "g_free", 
                "pthread_rwlock_unlock", 
                "memcpy", 
                "oh_el_create", 
                "pthread_cond_wait", 
                "memcmp", 
                "pthread_mutex_destroy"
            ], 
            "rpm": "openhpi-3.4.0-4.el7_3.1.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/openhpi/libdyn_simulator.so.3.4.0"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2snapshot_so": {
            "report-functions": [
                "dm_split_words", 
                "dmeventd_lvm2_run", 
                "strerror", 
                "dmeventd_lvm2_command", 
                "dm_get_next_target", 
                "exit", 
                "__xstat64", 
                "fclose", 
                "_ITM_registerTMCloneTable", 
                "fopen64", 
                "dm_task_get_name", 
                "__gmon_start__", 
                "_Jv_RegisterClasses", 
                "dmeventd_lvm2_init", 
                "dm_pool_destroy", 
                "__cxa_finalize", 
                "feof", 
                "dmeventd_lvm2_exit", 
                "_ITM_deregisterTMCloneTable", 
                "__stack_chk_fail", 
                "dm_pool_zalloc", 
                "dm_task_get_info", 
                "dm_pool_create", 
                "__syslog_chk", 
                "__errno_location", 
                "dm_pool_free", 
                "dmeventd_lvm2_unlock", 
                "execvp", 
                "fgets", 
                "dmeventd_lvm2_lock", 
                "fork"
            ], 
            "rpm": "openhpi-3.4.0-4.el7_3.1.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2snapshot.so"
        }, 
        "usr/bin/hpievents": {
            "report-functions": [
                "oh_fprint_eventloginfo", 
                "g_option_context_free", 
                "g_option_context_new", 
                "oh_lookup_error", 
                "saHpiUnsubscribe", 
                "g_option_context_add_main_entries", 
                "strchr", 
                "saHpiDomainInfoGet", 
                "saHpiEventGet", 
                "saHpiDiscover", 
                "saHpiEventLogInfoGet", 
                "__cxa_finalize", 
                "__printf_chk", 
                "g_log", 
                "saHpiRptEntryGet", 
                "getenv", 
                "g_free", 
                "oh_init_ep", 
                "puts", 
                "setenv", 
                "_ITM_deregisterTMCloneTable", 
                "strcmp", 
                "oHpiDomainAddById", 
                "oh_fprint_event", 
                "__ctype_toupper_loc", 
                "oHpiVersionGet", 
                "saHpiSessionOpen", 
                "_ITM_registerTMCloneTable", 
                "oh_init_textbuffer", 
                "oh_encode_entitypath", 
                "__stack_chk_fail", 
                "oh_append_textbuffer", 
                "oh_fprint_ep", 
                "strtol", 
                "oHpiDomainAdd", 
                "saHpiSessionClose", 
                "g_option_context_parse", 
                "saHpiSubscribe", 
                "__gmon_start__", 
                "__libc_start_main"
            ], 
            "rpm": "openhpi-3.4.0-4.el7_3.1.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/hpievents"
        }, 
        "usr/bin/ohhandler": {
            "report-functions": [
                "oHpiHandlerRetry", 
                "__libc_start_main", 
                "g_hash_table_lookup", 
                "g_hash_table_new_full", 
                "g_hash_table_insert", 
                "_ITM_deregisterTMCloneTable", 
                "oh_lookup_error", 
                "oHpiHandlerGetNext", 
                "oh_fprint_ep", 
                "g_option_context_new", 
                "oHpiDomainAdd", 
                "saHpiSessionClose", 
                "__stack_chk_fail", 
                "saHpiVersionGet", 
                "putchar", 
                "g_log", 
                "__printf_chk", 
                "setenv", 
                "__cxa_finalize", 
                "puts", 
                "g_option_context_parse", 
                "oh_init_textbuffer", 
                "g_str_hash", 
                "oHpiHandlerDestroy", 
                "g_str_equal", 
                "_Jv_RegisterClasses", 
                "_ITM_registerTMCloneTable", 
                "g_strdup", 
                "strtol", 
                "oh_init_ep", 
                "oHpiDomainAddById", 
                "strcmp", 
                "g_option_context_free", 
                "saHpiSessionOpen", 
                "oh_encode_entitypath", 
                "oh_append_textbuffer", 
                "g_free", 
                "oHpiHandlerCreate", 
                "oHpiHandlerFind", 
                "g_option_context_add_main_entries", 
                "oHpiVersionGet", 
                "getenv", 
                "oHpiHandlerInfo", 
                "g_hash_table_destroy", 
                "g_hash_table_foreach"
            ], 
            "rpm": "openhpi-3.4.0-4.el7_3.1.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/ohhandler"
        }, 
        "usr/bin/hpixml": {
            "report-functions": [
                "oh_lookup_hsindicatorstate", 
                "oh_lookup_annunciatormode", 
                "saHpiEventLogEntryGet", 
                "oh_lookup_dimitestserviceimpact", 
                "_Znwj", 
                "oh_lookup_statuscondtype", 
                "g_utf16_to_utf8", 
                "oh_lookup_sensortype", 
                "g_free", 
                "strtol", 
                "_ZdlPv", 
                "oh_lookup_parmaction", 
                "oh_init_textbuffer", 
                "oh_lookup_entitytype", 
                "__gmon_start__", 
                "oh_lookup_ctrlstatedigital", 
                "oh_lookup_fumisourcestatus", 
                "_IO_putc", 
                "oh_lookup_sensormodunituse", 
                "oh_lookup_hsstate", 
                "saHpiRptEntryGet", 
                "_ZNSs4_Rep10_M_destroyERKSaIcE", 
                "_ZNSs6assignEPKcj", 
                "fwrite", 
                "setenv", 
                "__cxa_rethrow", 
                "oh_fprint_ep", 
                "oh_lookup_resetaction", 
                "g_log", 
                "oh_lookup_fumispecinfotype", 
                "puts", 
                "oh_lookup_fumiserviceimpact", 
                "saHpiEventLogInfoGet", 
                "_ZNSt8__detail15_List_node_base9_M_unhookEv", 
                "oh_lookup_ctrltype", 
                "oh_lookup_annunciatortype", 
                "oh_decode_entitypath", 
                "__vfprintf_chk", 
                "saHpiRdrGet", 
                "_ZNSs7reserveEj", 
                "saHpiDomainInfoGet", 
                "oh_lookup_dimitesterrcode", 
                "__cxa_finalize", 
                "strlen", 
                "_ITM_deregisterTMCloneTable", 
                "oh_init_bigtext", 
                "saHpiRdrUpdateCountGet", 
                "oh_lookup_ctrlmode", 
                "oh_lookup_fumisafdefinedspecid", 
                "strchr", 
                "_ZNSsC1EPKcRKSaIcE", 
                "oh_lookup_dimitestparamtype", 
                "saHpiEventLogCapabilitiesGet", 
                "oh_lookup_language", 
                "saHpiInitialize", 
                "oHpiDomainAddById", 
                "putchar", 
                "oh_lookup_fumibankstate", 
                "oh_lookup_severity", 
                "oh_lookup_idrfieldtype", 
                "saHpiSessionOpen", 
                "_ZNSs4_Rep10_M_disposeERKSaIcE", 
                "oHpiDomainAdd", 
                "__pthread_key_create", 
                "saHpiDrtEntryGet", 
                "_Jv_RegisterClasses", 
                "saHpiDiscover", 
                "oh_lookup_hsaction", 
                "_ITM_registerTMCloneTable", 
                "oh_lookup_eventlogoverflowaction", 
                "oh_lookup_sensoreventmaskaction", 
                "g_option_context_new", 
                "__libc_start_main", 
                "oh_lookup_dimitestrunstatus", 
                "oh_lookup_texttype", 
                "oHpiVersionGet", 
                "getenv", 
                "g_option_context_add_main_entries", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "saHpiFinalize", 
                "oh_lookup_watchdogactionevent", 
                "oh_lookup_sensorreadingtype", 
                "__cxa_begin_catch", 
                "g_option_context_parse", 
                "__cxa_end_catch", 
                "saHpiAlarmGetNext", 
                "oh_lookup_powerstate", 
                "oh_lookup_watchdogaction", 
                "oh_lookup_eventcategory", 
                "__stack_chk_fail", 
                "oh_init_ep", 
                "saHpiSessionClose", 
                "oh_lookup_rdrtype", 
                "oh_encode_entitypath", 
                "oh_lookup_dimiready", 
                "oh_append_textbuffer", 
                "__gxx_personality_v0", 
                "oh_lookup_sweventtype", 
                "saHpiVersionGet", 
                "oh_lookup_hscauseofstatechange", 
                "oh_lookup_sensoreventctrl", 
                "_ZNSs6appendEPKcj", 
                "oh_lookup_error", 
                "oh_lookup_ctrloutputtype", 
                "oh_lookup_resourceeventtype", 
                "__printf_chk", 
                "_Unwind_Resume", 
                "g_option_context_free", 
                "oh_lookup_domaineventtype", 
                "oh_lookup_idrareatype", 
                "oh_lookup_eventtype", 
                "oh_lookup_fumiupgradestatus", 
                "oh_lookup_sensorunits"
            ], 
            "rpm": "openhpi-3.4.0-4.el7_3.1.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/hpixml"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2thin_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2thin.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "exit", 
                "dm_pool_free", 
                "dm_mountinfo_read", 
                "dm_bitset_destroy", 
                "dm_task_get_names", 
                "dm_task_get_name", 
                "dm_task_get_info", 
                "dm_pool_create", 
                "dmeventd_lvm2_run", 
                "dmeventd_lvm2_init", 
                "dm_task_no_open_count", 
                "__errno_location", 
                "dmeventd_lvm2_command", 
                "_ITM_deregisterTMCloneTable", 
                "dm_task_run", 
                "waitpid", 
                "_Jv_RegisterClasses", 
                "__cxa_finalize", 
                "dmeventd_lvm2_exit", 
                "execvp", 
                "__stack_chk_fail", 
                "dm_task_set_name", 
                "_ITM_registerTMCloneTable", 
                "fork", 
                "dm_get_status_thin_pool", 
                "dmeventd_lvm2_unlock", 
                "dm_task_create", 
                "strerror", 
                "dm_task_get_deps", 
                "dm_task_destroy", 
                "__syslog_chk", 
                "dm_pool_destroy", 
                "dm_pool_zalloc", 
                "dm_get_next_target", 
                "dm_bitset_create"
            ], 
            "rpm": "openhpi-3.4.0-4.el7_3.1.i686.rpm"
        }, 
        "usr/lib/openhpi/libwatchdog_so_3_4_0": {
            "report-functions": [
                "oh_encode_entitypath", 
                "oh_evt_queue_push", 
                "g_slist_append", 
                "oh_add_resource", 
                "__cxa_finalize", 
                "malloc", 
                "free", 
                "write", 
                "open", 
                "_ITM_deregisterTMCloneTable", 
                "oh_uid_from_entity_path", 
                "_ITM_registerTMCloneTable", 
                "close", 
                "__gmon_start__", 
                "strncpy", 
                "g_malloc0", 
                "oh_add_rdr", 
                "oh_concat_ep", 
                "__stack_chk_fail", 
                "g_log", 
                "_Jv_RegisterClasses"
            ], 
            "rpm": "openhpi-3.4.0-4.el7_3.1.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/openhpi/libwatchdog.so.3.4.0"
        }, 
        "usr/bin/hpiinv": {
            "report-functions": [
                "saHpiRptEntryGet", 
                "saHpiSessionClose", 
                "_ITM_registerTMCloneTable", 
                "strchr", 
                "memset", 
                "fwrite", 
                "_ITM_deregisterTMCloneTable", 
                "strtol", 
                "g_option_context_new", 
                "oh_append_textbuffer", 
                "saHpiSessionOpen", 
                "oh_fprint_idrinfo", 
                "saHpiIdrInfoGet", 
                "__gmon_start__", 
                "g_option_context_add_main_entries", 
                "saHpiVersionGet", 
                "saHpiIdrFieldSet", 
                "oh_fprint_idrareaheader", 
                "g_option_context_parse", 
                "saHpiIdrFieldGet", 
                "setenv", 
                "saHpiDomainInfoGet", 
                "oh_encode_entitypath", 
                "g_log", 
                "oh_fprint_ep", 
                "g_free", 
                "puts", 
                "__strncpy_chk", 
                "__printf_chk", 
                "oHpiDomainAddById", 
                "oh_init_textbuffer", 
                "oh_fprint_idrfield", 
                "getenv", 
                "oh_lookup_error", 
                "oHpiVersionGet", 
                "oh_init_ep", 
                "oHpiDomainAdd", 
                "saHpiIdrAreaHeaderGet", 
                "__cxa_finalize", 
                "putchar", 
                "__stack_chk_fail", 
                "_Jv_RegisterClasses", 
                "saHpiDiscover", 
                "g_option_context_free", 
                "saHpiRdrGet"
            ], 
            "rpm": "openhpi-3.4.0-4.el7_3.1.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/hpiinv"
        }, 
        "usr/bin/hpifan": {
            "report-functions": [
                "saHpiRdrGet", 
                "oHpiVersionGet", 
                "g_option_context_new", 
                "oh_fprint_text", 
                "__fprintf_chk", 
                "oh_fprint_ep", 
                "__libc_start_main", 
                "_ITM_deregisterTMCloneTable", 
                "setenv", 
                "oh_encode_entitypath", 
                "fwrite", 
                "saHpiVersionGet", 
                "puts", 
                "saHpiControlGet", 
                "g_option_context_add_main_entries", 
                "oHpiDomainAddById", 
                "__printf_chk", 
                "__gmon_start__", 
                "oHpiDomainAdd", 
                "saHpiSessionOpen", 
                "saHpiDiscover", 
                "__cxa_finalize", 
                "putchar", 
                "strtol", 
                "strchr", 
                "oh_init_textbuffer", 
                "g_log", 
                "saHpiControlSet", 
                "getenv", 
                "g_free", 
                "g_option_context_free", 
                "_Jv_RegisterClasses", 
                "oh_lookup_error", 
                "g_option_context_parse", 
                "strcmp", 
                "_ITM_registerTMCloneTable", 
                "oh_append_textbuffer", 
                "saHpiSessionClose", 
                "oh_init_ep"
            ], 
            "rpm": "openhpi-3.4.0-4.el7_3.1.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/hpifan"
        }, 
        "usr/bin/ohparam": {
            "report-functions": [
                "g_option_context_new", 
                "g_log", 
                "strncpy", 
                "strcmp", 
                "saHpiVersionGet", 
                "g_option_context_free", 
                "saHpiSessionOpen", 
                "oh_init_ep", 
                "oHpiDomainAddById", 
                "g_option_context_parse", 
                "oh_encode_severity", 
                "__libc_start_main", 
                "__stack_chk_fail", 
                "strchr", 
                "_ITM_registerTMCloneTable", 
                "g_free", 
                "getenv", 
                "putchar", 
                "saHpiSessionClose", 
                "__strcpy_chk", 
                "puts", 
                "oHpiVersionGet", 
                "oh_lookup_error", 
                "oh_encode_entitypath", 
                "oh_init_textbuffer", 
                "oh_fprint_ep", 
                "_Jv_RegisterClasses", 
                "strtol", 
                "g_option_context_add_main_entries", 
                "__cxa_finalize", 
                "__gmon_start__", 
                "oh_lookup_severity", 
                "oHpiGlobalParamGet", 
                "oHpiDomainAdd", 
                "setenv", 
                "oHpiGlobalParamSet", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "openhpi-3.4.0-4.el7_3.1.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/ohparam"
        }, 
        "usr/bin/hpithres": {
            "report-functions": [
                "oh_fprint_ep", 
                "strcmp", 
                "g_log", 
                "saHpiDiscover", 
                "getenv", 
                "__libc_start_main", 
                "snprintf", 
                "g_option_context_free", 
                "saHpiSubscribe", 
                "saHpiSensorThresholdsSet", 
                "memset", 
                "sscanf", 
                "malloc", 
                "saHpiSessionOpen", 
                "free", 
                "__printf_chk", 
                "oh_lookup_error", 
                "oh_encode_entitypath", 
                "_ITM_deregisterTMCloneTable", 
                "oh_fprint_rptentry", 
                "g_free", 
                "g_option_context_parse", 
                "saHpiVersionGet", 
                "oHpiDomainAdd", 
                "strchr", 
                "saHpiEventGet", 
                "saHpiSessionClose", 
                "fgets", 
                "g_usleep", 
                "oh_lookup_sensorunits", 
                "_Jv_RegisterClasses", 
                "putchar", 
                "strncmp", 
                "oh_init_textbuffer", 
                "oh_fprint_rdr", 
                "oh_append_textbuffer", 
                "puts", 
                "__cxa_finalize", 
                "saHpiSensorReadingGet", 
                "saHpiSensorThresholdsGet", 
                "__gmon_start__", 
                "g_option_context_add_main_entries", 
                "g_option_context_new", 
                "setenv", 
                "__stack_chk_fail", 
                "oHpiVersionGet", 
                "_ITM_registerTMCloneTable", 
                "memcpy", 
                "saHpiRptEntryGet", 
                "oh_init_ep", 
                "saHpiRdrGet", 
                "strtol"
            ], 
            "rpm": "openhpi-3.4.0-4.el7_3.1.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/hpithres"
        }, 
        "usr/bin/hpigensimdata": {
            "report-functions": [
                "oh_init_ep", 
                "getenv", 
                "saHpiDimiTestReadinessGet", 
                "saHpiFumiSourceComponentInfoGet", 
                "saHpiFumiServiceImpactGet", 
                "oHpiDomainAdd", 
                "fopen", 
                "saHpiIdrAreaHeaderGet", 
                "fwrite", 
                "saHpiSensorThresholdsGet", 
                "saHpiFumiLogicalTargetInfoGet", 
                "__fprintf_chk", 
                "saHpiSensorEventMasksGet", 
                "saHpiDimiInfoGet", 
                "saHpiFumiTargetInfoGet", 
                "__cxa_finalize", 
                "saHpiControlGet", 
                "oh_append_bigtext", 
                "saHpiDimiTestResultsGet", 
                "oh_init_bigtext", 
                "oh_append_textbuffer", 
                "_Jv_RegisterClasses", 
                "g_option_context_parse", 
                "strcmp", 
                "saHpiIdrFieldGet", 
                "saHpiSensorEventEnableGet", 
                "setenv", 
                "saHpiSensorEnableSet", 
                "g_log", 
                "saHpiFumiLogicalTargetComponentInfoGet", 
                "__ctype_toupper_loc", 
                "g_free", 
                "oHpiDomainAddById", 
                "saHpiAnnunciatorModeGet", 
                "saHpiSensorEnableGet", 
                "saHpiWatchdogTimerGet", 
                "oh_encode_entitypath", 
                "saHpiRptEntryGet", 
                "saHpiSensorReadingGet", 
                "saHpiRdrGet", 
                "g_option_context_new", 
                "saHpiFumiTargetComponentInfoGet", 
                "g_option_context_free", 
                "g_option_context_add_main_entries", 
                "_ITM_registerTMCloneTable", 
                "fputs", 
                "oh_decode_entitypath", 
                "fputc", 
                "__gmon_start__", 
                "saHpiSessionOpen", 
                "__stack_chk_fail", 
                "memcmp", 
                "strchr", 
                "oh_lookup_error", 
                "saHpiVersionGet", 
                "saHpiSessionClose", 
                "oHpiVersionGet", 
                "oh_fprint_ep", 
                "strtol", 
                "__libc_start_main", 
                "__printf_chk", 
                "saHpiFumiAutoRollbackDisableGet", 
                "saHpiDimiTestInfoGet", 
                "saHpiFumiSpecInfoGet", 
                "saHpiAnnunciatorGetNext", 
                "saHpiDiscover", 
                "saHpiIdrInfoGet", 
                "fclose", 
                "saHpiFumiSourceInfoGet"
            ], 
            "rpm": "openhpi-3.4.0-4.el7_3.1.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/hpigensimdata"
        }, 
        "usr/sbin/openhpid": {
            "report-functions": [
                "puts", 
                "signal", 
                "g_array_new", 
                "oh_get_resource_by_id", 
                "g_cond_broadcast", 
                "g_async_queue_timed_pop", 
                "strlen", 
                "g_strfreev", 
                "setenv", 
                "oh_encode_entitypath", 
                "oh_match_entitypath_pattern", 
                "oh_lookup_annunciatormode", 
                "_ZN17cServerStreamSock6AcceptEv", 
                "g_option_context_add_main_entries", 
                "g_slist_prepend", 
                "g_int_equal", 
                "oh_encode_severity", 
                "oh_lookup_watchdogpretimerinterrupt", 
                "oh_lookup_watchdogaction", 
                "__syslog_chk", 
                "__errno_location", 
                "g_hash_table_destroy", 
                "g_static_rec_mutex_free", 
                "oh_add_resource", 
                "getpid", 
                "g_int_hash", 
                "fork", 
                "oh_lookup_rdrtype", 
                "g_async_queue_push", 
                "g_hash_table_new_full", 
                "close", 
                "oh_remove_rdr", 
                "oh_append_textbuffer", 
                "g_get_current_time", 
                "g_async_queue_unref", 
                "g_cond_new", 
                "g_strdup", 
                "g_async_queue_try_pop", 
                "oh_entity_path_lookup", 
                "fwrite", 
                "oh_el_timeset", 
                "strtoll", 
                "oh_valid_addevent", 
                "__cxa_finalize", 
                "g_async_queue_pop", 
                "fileno", 
                "g_time_val_add", 
                "write", 
                "oh_get_rdr_by_type_next", 
                "oh_get_rdr_uid", 
                "read", 
                "oh_lookup_watchdogtimeruse", 
                "oh_get_rdr_update_count", 
                "oh_remove_resource", 
                "oh_get_resource_data", 
                "oh_lookup_hsindicatorstate", 
                "_Znwj", 
                "g_thread_pool_free", 
                "_Unwind_Resume", 
                "g_slist_delete_link", 
                "g_thread_create", 
                "__memcpy_chk", 
                "strtol", 
                "__printf_chk", 
                "oh_lookup_ctrlstatedigital", 
                "oh_get_instrument_id", 
                "oh_lookup_powerstate", 
                "strncpy", 
                "g_hash_table_remove", 
                "g_cond_free", 
                "g_return_if_fail_warning", 
                "__gxx_personality_v0", 
                "oh_lookup_sensoreventmaskaction", 
                "oh_get_rdr_by_type_first", 
                "oh_add_rdr", 
                "g_static_rec_mutex_unlock", 
                "oh_lookup_parmaction", 
                "oh_evt_queue_push", 
                "g_list_prepend", 
                "g_static_rec_mutex_lock", 
                "oh_lookup_resetaction", 
                "g_module_build_path", 
                "oh_el_overflowreset", 
                "g_scanner_peek_next_token", 
                "memcmp", 
                "oh_get_rdr_num", 
                "g_module_close", 
                "g_scanner_destroy", 
                "oh_lookup_severity", 
                "g_hash_table_new", 
                "oh_valid_ctrl_state_mode", 
                "__snprintf_chk", 
                "getenv", 
                "_ZN17cServerStreamSockC1Ev", 
                "oh_el_get", 
                "__xstat", 
                "g_module_open", 
                "oh_get_rdr_by_type", 
                "g_thread_pool_new", 
                "g_strsplit", 
                "g_option_context_parse", 
                "g_hash_table_lookup", 
                "g_module_error", 
                "oh_el_append", 
                "g_mutex_unlock", 
                "oh_valid_ordering", 
                "g_file_test", 
                "g_slist_append", 
                "oh_valid_thresholds", 
                "HpiDemarshalRequest", 
                "g_hash_table_insert", 
                "g_hash_table_size", 
                "_ZN11cStreamSock7ReadMsgERhRjPvS1_Ri", 
                "fclose", 
                "oh_el_close", 
                "_ITM_registerTMCloneTable", 
                "unlink", 
                "oh_uid_initialize", 
                "g_cond_wait", 
                "dirname", 
                "fread", 
                "oh_el_clear", 
                "g_thread_self", 
                "_ZNK11cStreamSock14GetPeerAddressER16sockaddr_storage", 
                "geteuid", 
                "oh_ssl_finit", 
                "g_array_free", 
                "oh_el_info", 
                "oh_lookup_idrfieldtype", 
                "_ZN11cStreamSock8WriteMsgEhjPKvj", 
                "oh_el_map_to_file", 
                "strtoull", 
                "g_module_symbol", 
                "exit", 
                "fopen", 
                "_ZN17cServerStreamSock6CreateEiPKct", 
                "g_thread_pool_push", 
                "_ZN11cStreamSock5CloseEv", 
                "g_malloc0_n", 
                "g_async_queue_ref", 
                "g_slist_remove", 
                "oh_lookup_idrareatype", 
                "g_cond_timed_wait", 
                "g_list_last", 
                "g_slist_length", 
                "g_str_hash", 
                "oh_event_free", 
                "oh_init_textbuffer", 
                "oh_gettimeofday", 
                "g_mutex_new", 
                "g_mutex_free", 
                "kill", 
                "memset", 
                "oh_lookup_statuscondtype", 
                "g_scanner_unexp_token", 
                "_ZN11cStreamSock4WaitEv", 
                "oh_lookup_hsaction", 
                "g_usleep", 
                "__libc_start_main", 
                "g_free", 
                "HpiMarshalReply0", 
                "_ITM_deregisterTMCloneTable", 
                "g_log_set_default_handler", 
                "g_list_delete_link", 
                "oh_flush_rpt", 
                "g_static_rec_mutex_init", 
                "__divdi3", 
                "oh_get_rdr_by_id", 
                "oh_get_resource_next", 
                "_Jv_RegisterClasses", 
                "oh_dup_event", 
                "g_mutex_lock", 
                "g_async_queue_length", 
                "g_scanner_get_next_token", 
                "g_scanner_input_file", 
                "oh_lookup_ctrlmode", 
                "g_option_context_new", 
                "g_hash_table_replace", 
                "__gmon_start__", 
                "oh_get_rdr_next", 
                "g_str_equal", 
                "g_list_append", 
                "g_slist_free", 
                "umask", 
                "oh_get_resource_by_ep", 
                "g_scanner_new", 
                "g_thread_join", 
                "oh_init_ep", 
                "open", 
                "g_log", 
                "strcmp", 
                "g_scanner_scope_add_symbol", 
                "g_slist_last", 
                "oh_el_enableset", 
                "g_list_remove", 
                "oh_el_create", 
                "__stack_chk_fail", 
                "_ZdlPv", 
                "g_array_append_vals", 
                "oh_el_map_from_file", 
                "g_async_queue_new", 
                "HpiMarshalFind", 
                "g_hash_table_foreach", 
                "HpiMarshalReply", 
                "g_module_supported", 
                "g_malloc0", 
                "oh_ssl_init", 
                "setsid"
            ], 
            "rpm": "openhpi-3.4.0-4.el7_3.1.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/sbin/openhpid"
        }, 
        "usr/lib/openhpi/libtest_agent_so_3_4_0": {
            "report-functions": [
                "_ZNSs4_Rep10_M_destroyERKSaIcE", 
                "_ZNSs15_M_replace_safeEjjPKcj", 
                "__moddi3", 
                "__gmon_start__", 
                "__cxa_atexit", 
                "__snprintf_chk", 
                "__pthread_key_create", 
                "memcpy", 
                "_ITM_registerTMCloneTable", 
                "g_malloc0", 
                "listen", 
                "oh_gettimeofday", 
                "oh_evt_queue_push", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "g_slist_append", 
                "g_mutex_lock", 
                "g_cond_timed_wait", 
                "accept", 
                "oh_encode_entitypath", 
                "_ZNKSs4findEPKcjj", 
                "_ZNSsD1Ev", 
                "_ITM_deregisterTMCloneTable", 
                "g_mutex_new", 
                "isspace", 
                "close", 
                "strncmp", 
                "recv", 
                "_ZNSsC1ERKSs", 
                "oh_uid_from_entity_path", 
                "_ZNSs12_M_leak_hardEv", 
                "shutdown", 
                "_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_", 
                "g_thread_create", 
                "_ZNSt8__detail15_List_node_base11_M_transferEPS0_S1_", 
                "g_log", 
                "setsockopt", 
                "g_static_mutex_init", 
                "_ZNSs9_M_mutateEjjj", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "memmove", 
                "__fdelt_chk", 
                "_Unwind_Resume", 
                "__gxx_personality_v0", 
                "g_mutex_free", 
                "send", 
                "_Jv_RegisterClasses", 
                "g_mutex_unlock", 
                "__cxa_pure_virtual", 
                "__cxa_begin_catch", 
                "strtod", 
                "_ZNKSs7compareEPKc", 
                "g_memdup", 
                "strtol", 
                "__cxa_rethrow", 
                "g_hash_table_lookup", 
                "g_cond_new", 
                "_ZNSs4_Rep9_S_createEjjRKSaIcE", 
                "__cxa_end_catch", 
                "__stack_chk_fail", 
                "g_cond_free", 
                "bind", 
                "__cxa_finalize", 
                "__ctype_toupper_loc", 
                "oh_init_ep", 
                "_ZNSs4_Rep10_M_disposeERKSaIcE", 
                "g_thread_join", 
                "_ZdlPv", 
                "oh_get_rdr_uid", 
                "g_static_mutex_free", 
                "_ZNSsC1EPKcRKSaIcE", 
                "strtoull", 
                "strlen", 
                "_ZNSs7replaceEjjPKcj", 
                "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base", 
                "oh_decode_entitypath", 
                "_Znwj", 
                "_ZNSt8__detail15_List_node_base4swapERS0_S1_", 
                "memset", 
                "socket", 
                "g_get_current_time", 
                "strtok", 
                "_ZNSs6appendEPKcj", 
                "select", 
                "_ZNKSs4findEcj", 
                "__vsnprintf_chk", 
                "_ZNSs6assignERKSs", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "_ZSt20__throw_length_errorPKc", 
                "strtoll", 
                "g_time_val_add", 
                "__divdi3", 
                "g_cond_signal", 
                "memcmp", 
                "_ZNSt8__detail15_List_node_base9_M_unhookEv", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_"
            ], 
            "rpm": "openhpi-3.4.0-4.el7_3.1.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/openhpi/libtest_agent.so.3.4.0"
        }, 
        "usr/bin/hpipower": {
            "report-functions": [
                "__printf_chk", 
                "_Jv_RegisterClasses", 
                "saHpiSessionOpen", 
                "__cxa_finalize", 
                "g_option_context_new", 
                "oh_init_ep", 
                "putchar", 
                "__snprintf_chk", 
                "oh_init_textbuffer", 
                "getenv", 
                "_ITM_deregisterTMCloneTable", 
                "oh_append_textbuffer", 
                "oh_encode_entitypath", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "__stack_chk_fail", 
                "saHpiResourcePowerStateGet", 
                "g_slist_free", 
                "oHpiDomainAdd", 
                "g_option_context_free", 
                "oHpiDomainAddById", 
                "saHpiVersionGet", 
                "__memcpy_chk", 
                "strtol", 
                "g_slist_alloc", 
                "free", 
                "g_free", 
                "strchr", 
                "g_option_context_add_main_entries", 
                "saHpiResourcePowerStateSet", 
                "__libc_start_main", 
                "setenv", 
                "saHpiRptEntryGet", 
                "g_log", 
                "g_slist_nth_data", 
                "g_slist_append", 
                "scanf", 
                "oh_fprint_ep", 
                "saHpiSessionClose", 
                "oHpiVersionGet", 
                "saHpiDiscover", 
                "oh_lookup_error", 
                "puts"
            ], 
            "rpm": "openhpi-3.4.0-4.el7_3.1.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/hpipower"
        }, 
        "usr/bin/hpiwdt": {
            "report-functions": [
                "setenv", 
                "__stack_chk_fail", 
                "__strcat_chk", 
                "oh_fprint_ep", 
                "oh_init_ep", 
                "strtol", 
                "g_option_context_parse", 
                "puts", 
                "saHpiSessionClose", 
                "_ITM_deregisterTMCloneTable", 
                "g_option_context_add_main_entries", 
                "__cxa_finalize", 
                "g_free", 
                "_ITM_registerTMCloneTable", 
                "oh_append_textbuffer", 
                "oHpiVersionGet", 
                "saHpiWatchdogTimerGet", 
                "__sprintf_chk", 
                "__printf_chk", 
                "oHpiDomainAdd", 
                "saHpiDiscover", 
                "__gmon_start__", 
                "_Jv_RegisterClasses", 
                "saHpiWatchdogTimerSet", 
                "g_option_context_free", 
                "saHpiWatchdogTimerReset", 
                "strchr", 
                "saHpiRptEntryGet", 
                "g_option_context_new", 
                "oh_lookup_error", 
                "saHpiDomainInfoGet", 
                "oh_init_textbuffer", 
                "getenv", 
                "saHpiVersionGet", 
                "oHpiDomainAddById", 
                "__strcpy_chk", 
                "oh_encode_entitypath", 
                "saHpiSessionOpen"
            ], 
            "rpm": "openhpi-3.4.0-4.el7_3.1.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/hpiwdt"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2mirror_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2mirror.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "dmeventd_lvm2_pool", 
                "__syslog_chk", 
                "dmeventd_lvm2_command", 
                "dmeventd_lvm2_lock", 
                "dm_split_words", 
                "dm_get_next_target", 
                "_ITM_registerTMCloneTable", 
                "dm_free_wrapper", 
                "strtol", 
                "strcmp", 
                "dm_malloc_wrapper", 
                "__cxa_finalize", 
                "dmeventd_lvm2_exit", 
                "strchr", 
                "__gmon_start__", 
                "_Jv_RegisterClasses", 
                "strlen", 
                "_ITM_deregisterTMCloneTable", 
                "dm_task_get_name", 
                "dmeventd_lvm2_init", 
                "dmeventd_lvm2_unlock"
            ], 
            "rpm": "openhpi-3.4.0-4.el7_3.1.i686.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Version": " 3.4.0", 
            "Name": " openhpi", 
            "License": " BSD", 
            "URL": " http://www.openhpi.org", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " x86-037.build.eng.bos.redhat.com", 
            "Description": "\nOpenHPI is an open source project created with the intent of providing an\nimplementation of the SA Forum's Hardware Platform Interface (HPI). HPI\nprovides an abstracted interface to managing computer hardware, typically for\nchassis and rack based servers. HPI includes resource modeling; access to and\ncontrol over sensor, control, watchdog, and inventory data associated with\nresources; abstracted System Event Log interfaces; hardware events and alerts;\nand a managed hot swap interface.\n\nOpenHPI provides a modular mechanism for adding new hardware and device support\neasily. Many plug-ins exist in the OpenHPI source tree to provide access to\nvarious types of hardware. This includes, but is not limited to, IPMI based\nservers, Blade Center, and machines which export data via sysfs.\n", 
            "Build Date": " Fri 07 Oct 2016 10:58:10 AM EDT", 
            "Vendor": " Red Hat, Inc.", 
            "Source RPM": " openhpi-3.4.0-4.el7_3.1.src.rpm", 
            "warning": " /home/jason/fctl/swap/2/openhpi-3.4.0-4.el7_3.1.i686.rpm: Header V3 RSA/SHA256 Signature, key ID fd431d51: NOKEY", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Thu 10 Nov 2016 08:19:44 AM EST, Key ID 199e2f91fd431d51", 
            "Release": " 4.el7_3.1", 
            "Group": " System Environment/Base", 
            "Packager": " Red Hat, Inc. <http://bugzilla.redhat.com/bugzilla>", 
            "Summary": " Hardware Platform Interface library and tools", 
            "Size": " 6335266"
        }
    }
}