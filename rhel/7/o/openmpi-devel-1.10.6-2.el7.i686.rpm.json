{
    "results": {
        "usr/lib/openmpi/bin/vtfilter": {
            "report-functions": [
                "OTF_WStream_writeDefSclFile", 
                "_ZNSsC1ERKSs", 
                "omp_get_num_threads", 
                "_ZNSt13basic_fstreamIcSt11char_traitsIcEE5closeEv", 
                "OTF_WStream_writeRecvMsgKV", 
                "OTF_Reader_readDefinitions", 
                "OTF_WStream_writeRMAPutRemoteEndKV", 
                "open", 
                "OTF_HandlerArray_getCopyHandler_stream", 
                "OTF_WStream_writeEnterKV", 
                "OTF_WStream_writeDefFileGroup", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "OTF_WStream_writeEnterSnapshot", 
                "_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode", 
                "OTF_WStream_writeLeave", 
                "OTF_Reader_readSnapshots", 
                "_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev", 
                "_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev", 
                "strcpy", 
                "OTF_Reader_getMasterControl", 
                "OTF_WStream_writeDefinitionComment", 
                "__stack_chk_fail", 
                "fnmatch", 
                "_ZNSs9_M_mutateEjjj", 
                "_ZNSs6assignEPKcj", 
                "OTF_Reader_close", 
                "__memcpy_chk", 
                "OTF_MasterControl_close", 
                "_ZNSs5eraseEjj", 
                "OTF_WStream_writeRecvMsg", 
                "_ITM_deregisterTMCloneTable", 
                "_Unwind_Resume", 
                "OTF_WStream_writeDefProcess", 
                "OTF_HandlerArray_setHandler", 
                "strchr", 
                "OTF_WStream_writeDefProcessGroupKV", 
                "read", 
                "__strdup", 
                "_ZNKSt12__basic_fileIcE7is_openEv", 
                "OTF_RStream_setRecordLimit", 
                "__fprintf_chk", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_i", 
                "OTF_MasterControl_new", 
                "_ZNSo5flushEv", 
                "_ZNSs6appendERKSs", 
                "__gxx_personality_v0", 
                "GOMP_critical_end", 
                "_ZNKSs7compareEjjPKc", 
                "OTF_WStream_writeEndFileOperationKV", 
                "__errno_location", 
                "OTF_FileManager_close", 
                "OTF_WStream_writeRMAPutKV", 
                "malloc", 
                "_ZNKSs7compareEPKc", 
                "OTF_WStream_writeFileOperationKV", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEEC1Ev", 
                "_ZNKSs4findEcj", 
                "OTF_Reader_statisticBytesProgress", 
                "omp_set_num_threads", 
                "_ZSt20__throw_out_of_rangePKc", 
                "_ITM_registerTMCloneTable", 
                "__cxa_rethrow", 
                "_ZNSsC1ERKSsjj", 
                "OTF_WStream_writeDefScl", 
                "_ZNSs4_Rep9_S_createEjjRKSaIcE", 
                "OTF_WStream_writeCounterKV", 
                "_ZNKSs6substrEjj", 
                "__vsprintf_chk", 
                "free", 
                "OTF_WStream_writeEndCollectiveOperationKV", 
                "OTF_WStream_writeSummaryComment", 
                "OTF_WStream_writeDefCollectiveOperation", 
                "abort", 
                "_ZNSsC1EPKcRKSaIcE", 
                "__cxa_atexit", 
                "_Znwj", 
                "OTF_WStream_writeBeginFileOperationKV", 
                "OTF_Reader_open", 
                "__fxstat", 
                "_ZNSt14basic_ofstreamIcSt11char_traitsIcEE5closeEv", 
                "_ZNSs6assignERKSs", 
                "OTF_HandlerArray_close", 
                "OTF_WStream_writeDefProcessKV", 
                "OTF_WStream_writeFunctionGroupSummary", 
                "memcpy", 
                "_ZdlPv", 
                "OTF_RStream_statisticBytesProgress", 
                "OTF_WStream_writeFileOperation", 
                "OTF_WStream_writeSendSnapshot", 
                "omp_in_parallel", 
                "strlen", 
                "OTF_RStream_readMarker", 
                "OTF_WStream_writeCollectiveOperation", 
                "fread", 
                "OTF_Reader_snapshotBytesProgress", 
                "OTF_Reader_setProcessStatusAll", 
                "_ZNSs12_M_leak_hardEv", 
                "OTF_RStream_close", 
                "_Jv_RegisterClasses", 
                "strtok", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_ZNKSs16find_last_not_ofEPKcjj", 
                "OTF_WStream_writeDefFunction", 
                "__sprintf_chk", 
                "OTF_MasterControl_append", 
                "_ZNSt14basic_ofstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode", 
                "_Znaj", 
                "strtol", 
                "strtoll", 
                "OTF_RStream_readStatistics", 
                "OTF_MasterControl_getCount", 
                "OTF_WStream_writeMessageSummary", 
                "OTF_WStream_writeRMAGetKV", 
                "GOMP_critical_name_end", 
                "strstr", 
                "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base", 
                "_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEED1Ev", 
                "OTF_WStream_writeCounter", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv", 
                "_ZNSs4_Rep10_M_destroyERKSaIcE", 
                "realloc", 
                "_ZdaPv", 
                "OTF_WStream_writeEnter", 
                "calloc", 
                "OTF_WStream_writeDefProcessGroup", 
                "_ZNSt6localeC1Ev", 
                "_ZNKSs17find_first_not_ofEPKcjj", 
                "_ZNSt12__basic_fileIcED1Ev", 
                "_ZNSt8ios_baseC2Ev", 
                "__vsnprintf_chk", 
                "OTF_FileManager_open", 
                "OTF_WStream_writeDefTimerResolution", 
                "OTF_HandlerArray_open", 
                "_ZNSt6localeD1Ev", 
                "_ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RSbIS4_S5_T1_E", 
                "_ZNSs6appendEPKcj", 
                "__pthread_key_create", 
                "OTF_WStream_writeDefCounter", 
                "OTF_RStream_getMarkerBuffer", 
                "OTF_WStream_writeBeginProcess", 
                "GOMP_critical_name_start", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate", 
                "OTF_RStream_open", 
                "OTF_Reader_enableProcess", 
                "OTF_MasterControl_getEntryByIndex", 
                "OTF_WStream_writeBeginCollectiveOperationKV", 
                "_ZSt19__throw_logic_errorPKc", 
                "_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev", 
                "strdup", 
                "OTF_RStream_getDefBuffer", 
                "_ZNSo9_M_insertImEERSoT_", 
                "getenv", 
                "OTF_WStream_writeDefFunctionGroup", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "fflush", 
                "OTF_MasterControl_read", 
                "_ZSt20__throw_length_errorPKc", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "_ZNSs4_Rep10_M_disposeERKSaIcE", 
                "OTF_RStream_readSnapshots", 
                "_ZNSt8ios_baseD2Ev", 
                "OTF_WStream_open", 
                "_ZNSt8ios_base4InitD1Ev", 
                "OTF_WStream_writeDefCounterGroup", 
                "close", 
                "omp_get_thread_num", 
                "_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "OTF_WStream_writeDefFile", 
                "putenv", 
                "fwrite", 
                "OTF_WStream_writeRMAEndKV", 
                "OTF_RStream_snapshotBytesProgress", 
                "__cxa_begin_catch", 
                "OTF_Reader_eventBytesProgress", 
                "_ZSt16__throw_bad_castv", 
                "omp_get_max_threads", 
                "_ZNSs6appendEjc", 
                "OTF_WStream_writeDefCreator", 
                "GOMP_parallel_start", 
                "OTF_WStream_writeSendMsgKV", 
                "OTF_stripFilename", 
                "OTF_WStream_writeEventComment", 
                "OTF_WStream_writeFileGroupOperationSummary", 
                "OTF_WStream_writeOpenFileSnapshot", 
                "memmove", 
                "__gmon_start__", 
                "OTF_WStream_writeLeaveKV", 
                "_ZSt9terminatev", 
                "GOMP_parallel_end", 
                "OTF_WStream_writeCollectiveOperationKV", 
                "exit", 
                "OTF_MasterControl_write", 
                "__vfprintf_chk", 
                "strncpy", 
                "__snprintf_chk", 
                "fopen", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "OTF_RStream_readEvents", 
                "OTF_RStream_readDefinitions", 
                "memcmp", 
                "__ctype_tolower_loc", 
                "OTF_Reader_readStatistics", 
                "fclose", 
                "__libc_start_main", 
                "_ZNSo3putEc", 
                "GOMP_critical_start", 
                "OTF_WStream_writeSendMsg", 
                "_ZSt17__throw_bad_allocv", 
                "__printf_chk", 
                "strtod", 
                "_ZNSo9_M_insertIdEERSoT_", 
                "_ZNKSt5ctypeIcE13_M_widen_initEv", 
                "_ZNSo9_M_insertIyEERSoT_", 
                "OTF_WStream_setCompression", 
                "OTF_Reader_readEvents", 
                "_ZNKSs5rfindEcj", 
                "OTF_WStream_writeFunctionSummary", 
                "OTF_WStream_writeEndProcess", 
                "OTF_RStream_eventBytesProgress", 
                "OTF_WStream_writeSnapshotComment", 
                "OTF_WStream_close", 
                "OTF_HandlerArray_setFirstHandlerArg", 
                "OTF_Reader_setRecordLimit", 
                "strcmp", 
                "_ZNSs6assignEPKc", 
                "_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_", 
                "__cxa_end_catch", 
                "_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_", 
                "OTF_WStream_writeFileOperationSummary", 
                "_ZNSt15basic_stringbufIcSt11char_traitsIcESaIcEE7_M_syncEPcjj"
            ], 
            "rpm": "openmpi-devel-1.10.6-2.el7.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/openmpi/bin/vtfilter"
        }, 
        "usr/lib/openmpi/bin/vtunify": {
            "report-functions": [
                "_ZNSt8ios_baseC2Ev", 
                "sscanf", 
                "OTF_KeyValueList_removeKey", 
                "OTF_WStream_writeDefCounterGroup", 
                "OTFAUX_State_setupThumbnail", 
                "OTF_KeyValueList_appendKeyValueList", 
                "OTFAUX_State_setWriteCollopCountSnapshotCallback", 
                "OTF_WStream_setFormat", 
                "_ZNSs6appendEjc", 
                "OTF_RStream_closeEventBuffer", 
                "_ZNSi3getEv", 
                "OTF_WStream_writeDefScl", 
                "_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc", 
                "OTF_WStream_writeCounterSnapshot", 
                "OTF_WStream_close", 
                "OTF_WStream_writeRMAPutRemoteEndKV", 
                "OTF_WStream_writeDefAuxSamplePoint", 
                "_ZNKSs6substrEjj", 
                "memmove", 
                "OTF_WStream_open", 
                "_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv", 
                "_ZNSs6assignEPKc", 
                "OTF_WStream_writeEnterSnapshotKV", 
                "localtime", 
                "OTF_WStream_writeDefCollectiveOperation", 
                "OTF_RStream_closeStatsBuffer", 
                "OTFAUX_State_writeSnapshot", 
                "OTFAUX_State_setWriteCounterSnapshotCallback", 
                "OTF_KeyValueList_getUint64", 
                "__snprintf_chk", 
                "__vsprintf_chk", 
                "OTFAUX_State_processEnter", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "OTFAUX_State_processFileClose", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_i", 
                "_ZSt20__throw_out_of_rangePKc", 
                "__vsnprintf_chk", 
                "_ZdaPv", 
                "_ZdlPvRKSt9nothrow_t", 
                "OTF_WStream_writeFunctionSummary", 
                "__cxa_atexit", 
                "_Unwind_Resume", 
                "OTF_WStream_writeSendSnapshotKV", 
                "OTF_WStream_writeEventCommentKV", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_ZNKSs7compareERKSs", 
                "rename", 
                "_ZNSsC1ERKSs", 
                "OTF_RStream_close", 
                "_ZNSs4_Rep9_S_createEjjRKSaIcE", 
                "OTFAUX_State_setWriteOpenFileSnapshotCallback", 
                "_ZnwjRKSt9nothrow_t", 
                "OTFAUX_State_setWriteBeginFileOpSnapshotCallback", 
                "OTF_FileManager_open", 
                "OTF_FileManager_close", 
                "_ZSt19__throw_logic_errorPKc", 
                "OTF_WStream_writeSendMsgKV", 
                "_ZNKSt15basic_stringbufIcSt11char_traitsIcESaIcEE3strEv", 
                "__errno_location", 
                "OTF_WStream_writeMarker", 
                "OTF_RStream_open", 
                "_ZSt16__throw_bad_castv", 
                "OTF_RStream_readMarker", 
                "OTF_KeyValueList_appendUint64", 
                "__libc_start_main", 
                "fopen", 
                "strlen", 
                "OTF_getFilename", 
                "asctime", 
                "_ZNSs4_Rep10_M_disposeERKSaIcE", 
                "_ZNSt15basic_stringbufIcSt11char_traitsIcESaIcEE7_M_syncEPcjj", 
                "OTF_WStream_writeDefFileGroup", 
                "_ZNSsC1ERKSsjj", 
                "OTFAUX_State_setReleaseEventDataCallback", 
                "GOMP_parallel_start", 
                "_ZNSolsEi", 
                "__vfprintf_chk", 
                "_ZNSo3putEc", 
                "OTF_RStream_getEventBuffer", 
                "OTF_WStream_writeDefKeyValue", 
                "omp_in_parallel", 
                "OTF_WStream_writeMessageSummary", 
                "_ZNSi10_M_extractIyEERSiRT_", 
                "OTF_RStream_readDefinitions", 
                "_ZNSo5flushEv", 
                "realloc", 
                "OTF_RStream_getDefBuffer", 
                "_ZNKSs4findEcj", 
                "OTFAUX_State_declareProcess", 
                "_ZNSt6localeC1Ev", 
                "OTF_KeyValueList_getCount", 
                "__stack_chk_fail", 
                "GOMP_parallel_end", 
                "_ZNSo9_M_insertImEERSoT_", 
                "_Jv_RegisterClasses", 
                "_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "OTF_MasterControl_new", 
                "__cxa_rethrow", 
                "remove", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "_ZNSo9_M_insertIyEERSoT_", 
                "OTF_WStream_writeEndCollectiveOperationKV", 
                "__gmon_start__", 
                "OTF_WStream_setCompression", 
                "OTF_WStream_writeDefAttributeList", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "memcpy", 
                "OTF_KeyValueList_hasKey", 
                "OTF_WStream_writeEndFileOperationKV", 
                "_ZNKSs7compareEjjRKSs", 
                "OTF_HandlerArray_setFirstHandlerArg", 
                "__sprintf_chk", 
                "OTF_WStream_writeBeginCollectiveOperationKV", 
                "_ZNSsD1Ev", 
                "_ITM_registerTMCloneTable", 
                "_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_", 
                "OTF_WStream_writeOtfVersion", 
                "_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_", 
                "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base", 
                "_ZNSs6assignEPKcj", 
                "free", 
                "_ZNSi10_M_extractIxEERSiRT_", 
                "__cxa_guard_release", 
                "OTF_WStream_writeRMAEndKV", 
                "strtol", 
                "OTF_RStream_setRecordLimit", 
                "GOMP_critical_end", 
                "OTF_WStream_writeFileOperationSummary", 
                "__cxa_begin_catch", 
                "OTF_WStream_writeEnterKV", 
                "_ITM_deregisterTMCloneTable", 
                "_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_", 
                "abort", 
                "OTFAUX_State_processBeginFileOperation", 
                "omp_get_thread_num", 
                "_ZNSt19basic_istringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "_ZNSi10_M_extractIjEERSiRT_", 
                "GOMP_barrier", 
                "_ZNSs6assignERKSs", 
                "fclose", 
                "OTF_WStream_writeDefProcess", 
                "OTF_HandlerArray_open", 
                "_ZNKSs7compareEjjPKc", 
                "OTF_KeyValueList_close", 
                "OTF_WStream_writeBeginCollopSnapshotKV", 
                "OTF_WStream_writeRMAGetKV", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "OTF_WStream_writeDefFile", 
                "_ZNSi7getlineEPcic", 
                "OTF_WStream_writeDefProcessGroup", 
                "OTF_WStream_writeDefFunctionGroup", 
                "OTF_RStream_getMarkerBuffer", 
                "__cxa_guard_acquire", 
                "memcmp", 
                "_ZNSt8ios_baseD2Ev", 
                "_ZNSs6appendEPKcj", 
                "OTF_RStream_readStatistics", 
                "OTF_KeyValueList_clone", 
                "OTFAUX_State_destroy", 
                "_ZSt20__throw_length_errorPKc", 
                "_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev", 
                "__pthread_key_create", 
                "OTF_WStream_writeLeaveKV", 
                "OTFAUX_State_setWriteBeginCollopSnapshotCallback", 
                "__cxa_pure_virtual", 
                "malloc", 
                "OTF_WStream_writeDefTimeRange", 
                "OTFAUX_State_processCounter", 
                "OTFAUX_State_processFileOpen", 
                "OTF_WStream_writeDefProcessOrGroupAttributes", 
                "__gxx_personality_v0", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate", 
                "OTF_HandlerArray_close", 
                "OTFAUX_State_setWriteSendSnapshotCallback", 
                "_Znwj", 
                "__udivdi3", 
                "OTF_HandlerArray_setHandler", 
                "OTF_WStream_writeDefMarker", 
                "_ZNSt8ios_base4InitD1Ev", 
                "OTF_RStream_readEvents", 
                "_ZNSt14basic_ifstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode", 
                "GOMP_single_start", 
                "OTFAUX_State_enqueueRecvMsg", 
                "OTF_WStream_writeCollopCountSnapshot", 
                "gmtime_r", 
                "OTF_MasterControl_write", 
                "OTF_WStream_writeBeginProcess", 
                "OTF_WStream_writeEndProcess", 
                "OTF_MasterControl_close", 
                "OTFAUX_State_setWriteEnterSnapshotCallback", 
                "_ZSt17__throw_bad_allocv", 
                "__cxa_end_catch", 
                "OTFAUX_State_writeThumbnail", 
                "OTF_WStream_writeBeginFileOpSnapshotKV", 
                "OTFAUX_State_processEndFileOperation", 
                "_ZNSs6appendERKSs", 
                "OTFAUX_State_processSendMsg", 
                "_Znaj", 
                "OTF_WStream_writeDefFunction", 
                "_ZNSsC1EPKcRKSaIcE", 
                "_ZNKSt5ctypeIcE13_M_widen_initEv", 
                "__cxa_guard_abort", 
                "OTF_MasterControl_append", 
                "strcpy", 
                "OTF_WStream_writeCollopSummary", 
                "OTF_WStream_writeDefinitionComment", 
                "OTFAUX_State_processLeave", 
                "OTF_WStream_writeRecvMsgKV", 
                "OTF_HandlerArray_getCopyHandler_stream", 
                "OTFAUX_State_processBeginCollectiveOperation", 
                "OTF_WStream_writeDefCounterAssignments", 
                "strcmp", 
                "_ZdlPv", 
                "OTF_WStream_writeDefCreator", 
                "_ZNKSs5rfindEcj", 
                "__fprintf_chk", 
                "OTF_WStream_writeOpenFileSnapshotKV", 
                "OTF_WStream_writeDefTimerResolution", 
                "OTF_RStream_getStatsBuffer", 
                "fputs", 
                "_ZNSsC1EPKcjRKSaIcE", 
                "GOMP_critical_start", 
                "_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1Ev", 
                "OTF_KeyValueList_new", 
                "_ZNSs4_Rep10_M_destroyERKSaIcE", 
                "OTF_WStream_writeDefSclFile", 
                "OTF_RStream_closeDefBuffer", 
                "omp_get_num_threads", 
                "OTF_WStream_writeDefCounter", 
                "OTF_WStream_writeBeginFileOperationKV", 
                "OTF_WStream_writeCounterKV", 
                "OTF_FileManager_setIofsl", 
                "omp_get_max_threads", 
                "OTF_RStream_closeMarkerBuffer", 
                "OTF_WStream_writeUniqueId", 
                "OTF_KeyValueList_getPairByIndex", 
                "OTFAUX_State_create", 
                "omp_set_num_threads", 
                "OTF_WStream_writeRMAPutKV"
            ], 
            "rpm": "openmpi-devel-1.10.6-2.el7.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/openmpi/bin/vtunify"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2mirror_so": {
            "report-functions": [
                "_Jv_RegisterClasses", 
                "dm_malloc_wrapper", 
                "dmeventd_lvm2_command", 
                "_ITM_registerTMCloneTable", 
                "strlen", 
                "dmeventd_lvm2_lock", 
                "dmeventd_lvm2_exit", 
                "strchr", 
                "__syslog_chk", 
                "dmeventd_lvm2_unlock", 
                "dm_split_words", 
                "strtol", 
                "dmeventd_lvm2_run", 
                "dmeventd_lvm2_pool", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "__gmon_start__", 
                "dm_get_next_target", 
                "strcmp", 
                "dm_task_get_name", 
                "dm_free_wrapper"
            ], 
            "rpm": "openmpi-devel-1.10.6-2.el7.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2mirror.so"
        }, 
        "usr/lib/openmpi/bin/vtunify-mpi": {
            "report-functions": [
                "abort", 
                "MPI_Type_create_struct", 
                "__gxx_personality_v0", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "strcmp", 
                "OTF_RStream_getDefBuffer", 
                "memcpy", 
                "OTFAUX_State_setWriteEnterSnapshotCallback", 
                "OTF_WStream_writeDefAuxSamplePoint", 
                "OTF_RStream_closeDefBuffer", 
                "OTF_WStream_writeFunctionSummary", 
                "__cxa_pure_virtual", 
                "OTF_KeyValueList_hasKey", 
                "OTF_WStream_writeRMAEndKV", 
                "_ITM_deregisterTMCloneTable", 
                "OTF_WStream_writeOpenFileSnapshotKV", 
                "MPI_Barrier", 
                "_ZSt20__throw_length_errorPKc", 
                "strtol", 
                "_ZNSi7getlineEPcic", 
                "OTF_WStream_writeLeaveKV", 
                "_ZNSolsEi", 
                "__cxa_atexit", 
                "OTF_HandlerArray_getCopyHandler_stream", 
                "remove", 
                "OTF_KeyValueList_close", 
                "OTF_WStream_writeDefCounterGroup", 
                "_ZdlPv", 
                "MPI_Gather", 
                "OTF_FileManager_setIofsl", 
                "_ZNSsC1ERKSsjj", 
                "_ZNSo3putEc", 
                "OTF_KeyValueList_getCount", 
                "MPI_Unpack", 
                "OTFAUX_State_processFileClose", 
                "MPI_Wait", 
                "_ZNKSt5ctypeIcE13_M_widen_initEv", 
                "OTF_WStream_writeUniqueId", 
                "_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_", 
                "OTF_WStream_writeEventCommentKV", 
                "_ZNSt15basic_stringbufIcSt11char_traitsIcESaIcEE7_M_syncEPcjj", 
                "_ZNSs4_Rep9_S_createEjjRKSaIcE", 
                "OTF_KeyValueList_getUint64", 
                "_ZNSt8__detail15_List_node_base9_M_unhookEv", 
                "OTF_MasterControl_close", 
                "OTFAUX_State_setReleaseEventDataCallback", 
                "_ZNSt19basic_istringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "_ZNKSs4findEcj", 
                "OTF_WStream_writeEndCollectiveOperationKV", 
                "__udivdi3", 
                "OTF_WStream_writeDefFunction", 
                "GOMP_critical_end", 
                "OTF_MasterControl_new", 
                "OTF_WStream_writeCounterSnapshot", 
                "MPI_Recv", 
                "OTF_WStream_writeEnterSnapshotKV", 
                "MPI_Comm_rank", 
                "OTF_WStream_writeBeginCollectiveOperationKV", 
                "OTFAUX_State_enqueueRecvMsg", 
                "OTF_RStream_readEvents", 
                "MPI_Probe", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "asctime", 
                "_ZNSo5flushEv", 
                "OTF_HandlerArray_close", 
                "_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "GOMP_parallel_end", 
                "fputs", 
                "_ZNSt14basic_ifstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode", 
                "OTF_WStream_writeEnterKV", 
                "OTF_WStream_writeSendSnapshotKV", 
                "OTF_HandlerArray_setFirstHandlerArg", 
                "__libc_start_main", 
                "OTFAUX_State_processBeginCollectiveOperation", 
                "OTFAUX_State_declareProcess", 
                "OTF_WStream_writeDefProcessGroup", 
                "OTF_WStream_setCompression", 
                "OTF_KeyValueList_clone", 
                "MPI_Op_create", 
                "OTFAUX_State_processBeginFileOperation", 
                "MPI_Reduce", 
                "OTF_WStream_open", 
                "OTF_WStream_writeRecvMsgKV", 
                "_ZNSi3getEv", 
                "OTF_WStream_writeDefSclFile", 
                "omp_get_max_threads", 
                "MPI_Op_free", 
                "__snprintf_chk", 
                "MPI_Abort", 
                "_ZNKSs6substrEjj", 
                "MPI_Get_count", 
                "GOMP_single_start", 
                "OTF_WStream_writeMarker", 
                "GOMP_parallel_start", 
                "MPI_Alltoallv", 
                "_ITM_registerTMCloneTable", 
                "OTFAUX_State_create", 
                "OTF_WStream_writeDefMarker", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "OTF_WStream_writeCollopSummary", 
                "OTF_KeyValueList_new", 
                "_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1Ev", 
                "MPI_Alltoall", 
                "omp_get_thread_num", 
                "OTF_WStream_writeBeginFileOperationKV", 
                "MPI_Get_address", 
                "OTF_WStream_writeDefProcess", 
                "_Jv_RegisterClasses", 
                "MPI_Type_free", 
                "OTF_RStream_closeEventBuffer", 
                "_ZNSs6appendEjc", 
                "OTF_RStream_setRecordLimit", 
                "OTF_WStream_writeRMAPutRemoteEndKV", 
                "OTF_WStream_writeSendMsgKV", 
                "_ZNSs6appendERKSs", 
                "_ZNSt6localeC1Ev", 
                "MPI_Gatherv", 
                "__cxa_guard_acquire", 
                "OTF_WStream_writeCollopCountSnapshot", 
                "_ZNSsC1EPKcjRKSaIcE", 
                "_ZNSsC1EPKcRKSaIcE", 
                "OTF_WStream_writeEndProcess", 
                "__cxa_rethrow", 
                "OTFAUX_State_processLeave", 
                "OTF_WStream_writeFileOperationSummary", 
                "_ZSt19__throw_logic_errorPKc", 
                "OTF_WStream_writeBeginProcess", 
                "fclose", 
                "MPI_Pack", 
                "_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_", 
                "OTF_WStream_writeDefProcessOrGroupAttributes", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "_ZNSt8ios_base4InitD1Ev", 
                "OTF_RStream_closeStatsBuffer", 
                "_ZNSs6assignEPKc", 
                "_ZNSt6localeD1Ev", 
                "OTF_MasterControl_write", 
                "OTF_WStream_close", 
                "OTF_FileManager_close", 
                "_ZNSt8ios_base4InitC1Ev", 
                "OTF_HandlerArray_open", 
                "OTF_WStream_writeRMAPutKV", 
                "OTF_RStream_close", 
                "OTFAUX_State_writeThumbnail", 
                "MPI_Test", 
                "_ZNSs6appendEPKcj", 
                "localtime", 
                "_ZdaPv", 
                "OTF_WStream_writeOtfVersion", 
                "sscanf", 
                "OTF_WStream_writeEndFileOperationKV", 
                "_ZNSsC1ERKSs", 
                "OTFAUX_State_setWriteBeginFileOpSnapshotCallback", 
                "__vsprintf_chk", 
                "fopen", 
                "_ZdlPvRKSt9nothrow_t", 
                "_ZNKSs5rfindEcj", 
                "_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev", 
                "OTF_WStream_writeBeginCollopSnapshotKV", 
                "malloc", 
                "GOMP_critical_start", 
                "_ZNKSs7compareERKSs", 
                "_ZNSt8ios_baseC2Ev", 
                "_ZNSo9_M_insertImEERSoT_", 
                "OTF_WStream_writeMessageSummary", 
                "_ZNKSs7compareEjjPKc", 
                "_ZNKSs7compareEjjRKSs", 
                "MPI_Pack_size", 
                "OTFAUX_State_processSendMsg", 
                "strcpy", 
                "__cxa_begin_catch", 
                "OTF_getFilename", 
                "memcmp", 
                "_ZnwjRKSt9nothrow_t", 
                "OTF_WStream_writeDefFile", 
                "OTF_MasterControl_append", 
                "OTF_WStream_writeBeginFileOpSnapshotKV", 
                "OTF_KeyValueList_getPairByIndex", 
                "_ZNSsD1Ev", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate", 
                "OTF_WStream_writeDefAttributeList", 
                "_Unwind_Resume", 
                "_ZNSs6assignEPKcj", 
                "OTF_RStream_readStatistics", 
                "__errno_location", 
                "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base", 
                "_ZNSs4_Rep10_M_disposeERKSaIcE", 
                "_ZSt17__throw_bad_allocv", 
                "OTFAUX_State_setWriteCollopCountSnapshotCallback", 
                "strlen", 
                "OTF_RStream_getMarkerBuffer", 
                "OTF_RStream_getEventBuffer", 
                "OTFAUX_State_writeSnapshot", 
                "OTF_WStream_writeDefinitionComment", 
                "_ZSt20__throw_out_of_rangePKc", 
                "_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc", 
                "_ZNSo9_M_insertIyEERSoT_", 
                "OTF_WStream_writeDefKeyValue", 
                "__sprintf_chk", 
                "GOMP_barrier", 
                "OTF_HandlerArray_setHandler", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_i", 
                "free", 
                "__cxa_guard_abort", 
                "__pthread_key_create", 
                "_ZNSi10_M_extractIxEERSiRT_", 
                "omp_set_num_threads", 
                "OTF_WStream_writeDefTimeRange", 
                "OTF_WStream_writeDefCounter", 
                "_Znwj", 
                "_ZNSi10_M_extractIjEERSiRT_", 
                "rename", 
                "OTF_KeyValueList_appendUint64", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "realloc", 
                "_ZSt16__throw_bad_castv", 
                "OTF_WStream_writeCounterKV", 
                "OTF_WStream_writeDefFunctionGroup", 
                "omp_in_parallel", 
                "OTF_WStream_writeDefScl", 
                "_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_", 
                "__stack_chk_fail", 
                "__cxa_guard_release", 
                "_ZNSt8ios_baseD2Ev", 
                "OTF_WStream_writeDefCounterAssignments", 
                "OTF_KeyValueList_removeKey", 
                "OTF_WStream_writeDefTimerResolution", 
                "OTFAUX_State_destroy", 
                "_ZNSi10_M_extractIyEERSiRT_", 
                "gmtime_r", 
                "OTF_WStream_writeDefCollectiveOperation", 
                "MPI_Bcast", 
                "OTFAUX_State_setWriteSendSnapshotCallback", 
                "OTF_RStream_open", 
                "memmove", 
                "__vsnprintf_chk", 
                "OTF_WStream_writeDefCreator", 
                "OTFAUX_State_processEndCollectiveOperation", 
                "__cxa_end_catch", 
                "MPI_Finalize", 
                "_ZNKSt15basic_stringbufIcSt11char_traitsIcESaIcEE3strEv", 
                "_ZNSs6assignERKSs", 
                "_Znaj", 
                "MPI_Isend", 
                "OTFAUX_State_setWriteBeginCollopSnapshotCallback", 
                "OTFAUX_State_setupThumbnail", 
                "OTF_RStream_closeMarkerBuffer", 
                "OTF_KeyValueList_appendKeyValueList", 
                "__fprintf_chk", 
                "OTF_WStream_writeDefFileGroup", 
                "OTFAUX_State_processCounter", 
                "OTF_WStream_setFormat", 
                "_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv", 
                "OTFAUX_State_setWriteCounterSnapshotCallback", 
                "OTFAUX_State_processFileOpen", 
                "OTFAUX_State_processEndFileOperation", 
                "OTFAUX_State_setWriteOpenFileSnapshotCallback", 
                "OTF_RStream_readMarker", 
                "OTF_WStream_writeRMAGetKV", 
                "MPI_Type_commit", 
                "OTF_FileManager_open", 
                "_ZNSs4_Rep10_M_destroyERKSaIcE", 
                "OTFAUX_State_processEnter", 
                "MPI_Init", 
                "omp_get_num_threads", 
                "OTF_RStream_readDefinitions", 
                "MPI_Comm_size", 
                "__vfprintf_chk"
            ], 
            "rpm": "openmpi-devel-1.10.6-2.el7.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/openmpi/bin/vtunify-mpi"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2raid_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2raid.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__stack_chk_fail", 
                "dmeventd_lvm2_lock", 
                "dm_get_next_target", 
                "__cxa_finalize", 
                "__gmon_start__", 
                "dmeventd_lvm2_command", 
                "strtol", 
                "strchr", 
                "_ITM_registerTMCloneTable", 
                "dm_task_get_name", 
                "_ITM_deregisterTMCloneTable", 
                "__syslog_chk", 
                "dmeventd_lvm2_exit", 
                "_Jv_RegisterClasses", 
                "dmeventd_lvm2_pool", 
                "dmeventd_lvm2_unlock", 
                "dm_split_words", 
                "strcmp"
            ], 
            "rpm": "openmpi-devel-1.10.6-2.el7.i686.rpm"
        }, 
        "usr/lib/openmpi/bin/vtfilter-mpi": {
            "report-functions": [
                "_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate", 
                "GOMP_critical_start", 
                "OTF_MasterControl_append", 
                "_ZNSsC1ERKSsjj", 
                "MPI_Send", 
                "strtok", 
                "OTF_WStream_writeSendMsgKV", 
                "_ZNSs5eraseEjj", 
                "_ZNSsC1EPKcRKSaIcE", 
                "MPI_Probe", 
                "_ZNSsD1Ev", 
                "OTF_Reader_statisticBytesProgress", 
                "strdup", 
                "__vsprintf_chk", 
                "putenv", 
                "MPI_Comm_size", 
                "_ZdlPv", 
                "strcpy", 
                "OTF_WStream_writeDefFunction", 
                "memcmp", 
                "_ZNKSs16find_last_not_ofEPKcjj", 
                "_ZNSo3putEc", 
                "strtol", 
                "_Unwind_Resume", 
                "strchr", 
                "OTF_RStream_readDefinitions", 
                "OTF_Reader_eventBytesProgress", 
                "_ITM_registerTMCloneTable", 
                "OTF_WStream_writeEnterSnapshot", 
                "_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEED1Ev", 
                "OTF_WStream_writeBeginFileOperationKV", 
                "_ZNKSs6substrEjj", 
                "realloc", 
                "_ZdaPv", 
                "OTF_WStream_writeDefTimerResolution", 
                "MPI_Unpack", 
                "GOMP_parallel_end", 
                "_ZNSt14basic_ofstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode", 
                "_ZNSt6localeC1Ev", 
                "omp_get_max_threads", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "_ZNSo5flushEv", 
                "OTF_WStream_setCompression", 
                "exit", 
                "__errno_location", 
                "_ZNSs6assignERKSs", 
                "omp_get_thread_num", 
                "OTF_WStream_writeRMAGetKV", 
                "_ZNSsC1ERKSs", 
                "_ZNSt12__basic_fileIcED1Ev", 
                "OTF_MasterControl_close", 
                "_ZNSt8ios_base4InitD1Ev", 
                "OTF_WStream_writeMessageSummary", 
                "OTF_RStream_open", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "OTF_WStream_close", 
                "MPI_Reduce", 
                "omp_get_num_threads", 
                "_ZNKSs4findEcj", 
                "OTF_WStream_writeDefinitionComment", 
                "fnmatch", 
                "OTF_stripFilename", 
                "OTF_WStream_writeRMAEndKV", 
                "_ZNSo9_M_insertImEERSoT_", 
                "MPI_Recv", 
                "OTF_WStream_writeFileOperation", 
                "_ZSt20__throw_length_errorPKc", 
                "getenv", 
                "OTF_WStream_writeBeginCollectiveOperationKV", 
                "read", 
                "_ZSt20__throw_out_of_rangePKc", 
                "MPI_Comm_split", 
                "MPI_Comm_free", 
                "_ZNSt13basic_fstreamIcSt11char_traitsIcEE5closeEv", 
                "_Jv_RegisterClasses", 
                "MPI_Waitsome", 
                "OTF_WStream_writeRecvMsgKV", 
                "OTF_WStream_writeRecvMsg", 
                "_ZNSt15basic_stringbufIcSt11char_traitsIcESaIcEE7_M_syncEPcjj", 
                "MPI_Issend", 
                "__cxa_atexit", 
                "OTF_WStream_writeDefCollectiveOperation", 
                "OTF_WStream_writeDefCounterGroup", 
                "strstr", 
                "OTF_WStream_writeOpenFileSnapshot", 
                "OTF_WStream_writeEnterKV", 
                "OTF_WStream_writeCounterKV", 
                "_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "strncpy", 
                "close", 
                "OTF_MasterControl_write", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_Znaj", 
                "OTF_WStream_writeFunctionSummary", 
                "_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode", 
                "_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_", 
                "fflush", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "_ZNSs6assignEPKcj", 
                "open", 
                "MPI_Get_count", 
                "OTF_MasterControl_getEntryByIndex", 
                "OTF_RStream_setRecordLimit", 
                "OTF_HandlerArray_getCopyHandler_stream", 
                "calloc", 
                "OTF_RStream_eventBytesProgress", 
                "OTF_RStream_readMarker", 
                "OTF_Reader_readSnapshots", 
                "__cxa_end_catch", 
                "OTF_Reader_readDefinitions", 
                "strtod", 
                "MPI_Barrier", 
                "_ZNSs6appendEjc", 
                "MPI_Test", 
                "__snprintf_chk", 
                "_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev", 
                "_ZNKSs17find_first_not_ofEPKcjj", 
                "__libc_start_main", 
                "OTF_WStream_writeBeginProcess", 
                "OTF_WStream_writeFunctionGroupSummary", 
                "OTF_WStream_writeRMAPutKV", 
                "malloc", 
                "__gmon_start__", 
                "fwrite", 
                "_ZSt17__throw_bad_allocv", 
                "MPI_Recv_init", 
                "OTF_WStream_writeDefFunctionGroup", 
                "_ZNSs12_M_leak_hardEv", 
                "__strdup", 
                "_ZNSs4_Rep9_S_createEjjRKSaIcE", 
                "_ZSt16__throw_bad_castv", 
                "OTF_WStream_writeFileOperationKV", 
                "OTF_WStream_writeEndProcess", 
                "OTF_WStream_writeDefProcessGroup", 
                "_ZNKSs5rfindEcj", 
                "_ZNSo9_M_insertIyEERSoT_", 
                "omp_set_num_threads", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEEC1Ev", 
                "OTF_WStream_writeDefCounter", 
                "_Znwj", 
                "MPI_Isend", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "MPI_Init", 
                "__xstat", 
                "_ZNKSt12__basic_fileIcE7is_openEv", 
                "OTF_WStream_writeDefProcessGroupKV", 
                "OTF_Reader_readStatistics", 
                "OTF_RStream_snapshotBytesProgress", 
                "__pthread_key_create", 
                "GOMP_critical_name_start", 
                "OTF_Reader_getMasterControl", 
                "OTF_Reader_open", 
                "OTF_WStream_writeLeaveKV", 
                "OTF_WStream_writeDefProcess", 
                "OTF_WStream_writeDefFile", 
                "OTF_WStream_open", 
                "MPI_Abort", 
                "strcmp", 
                "_ZNSt8__detail15_List_node_base9_M_unhookEv", 
                "OTF_HandlerArray_setHandler", 
                "OTF_RStream_readEvents", 
                "fclose", 
                "OTF_Reader_setRecordLimit", 
                "MPI_Bcast", 
                "OTF_WStream_writeEnter", 
                "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base", 
                "strtoll", 
                "__vfprintf_chk", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv", 
                "__sprintf_chk", 
                "OTF_WStream_writeCounter", 
                "OTF_WStream_writeDefProcessKV", 
                "_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev", 
                "OTF_HandlerArray_close", 
                "_ZNKSs7compareEjjPKc", 
                "MPI_Start", 
                "OTF_WStream_writeFileGroupOperationSummary", 
                "OTF_WStream_writeSendSnapshot", 
                "__cxa_begin_catch", 
                "OTF_Reader_enableProcess", 
                "fread", 
                "OTF_WStream_writeDefSclFile", 
                "__stack_chk_fail", 
                "MPI_Wait", 
                "_ZNSolsEi", 
                "OTF_WStream_writeCollectiveOperation", 
                "OTF_RStream_getDefBuffer", 
                "_ZNKSt5ctypeIcE13_M_widen_initEv", 
                "GOMP_critical_end", 
                "OTF_WStream_writeDefScl", 
                "__gxx_personality_v0", 
                "OTF_WStream_writeFileOperationSummary", 
                "MPI_Comm_rank", 
                "__fprintf_chk", 
                "_ZNSs9_M_mutateEjjj", 
                "_ZSt19__throw_logic_errorPKc", 
                "OTF_WStream_writeSummaryComment", 
                "_ZSt9terminatev", 
                "memcpy", 
                "_ZNSt6localeD1Ev", 
                "OTF_MasterControl_getCount", 
                "_ZNSs4_Rep10_M_destroyERKSaIcE", 
                "_ZNSs4_Rep10_M_disposeERKSaIcE", 
                "__cxa_rethrow", 
                "OTF_WStream_writeLeave", 
                "OTF_FileManager_close", 
                "_ZNSs6appendEPKcj", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "OTF_RStream_readSnapshots", 
                "OTF_WStream_writeSnapshotComment", 
                "OTF_HandlerArray_setFirstHandlerArg", 
                "_ZNSo9_M_insertIdEERSoT_", 
                "_ZNKSs7compareEPKc", 
                "_ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RSbIS4_S5_T1_E", 
                "MPI_Pack_size", 
                "__fxstat", 
                "__printf_chk", 
                "__vsnprintf_chk", 
                "memmove", 
                "OTF_WStream_writeEndFileOperationKV", 
                "GOMP_critical_name_end", 
                "_ZNSs6appendERKSs", 
                "MPI_Testsome", 
                "MPI_Pack", 
                "_ITM_deregisterTMCloneTable", 
                "abort", 
                "_ZNSs6assignEPKc", 
                "strlen", 
                "_ZNSt8ios_baseD2Ev", 
                "OTF_WStream_writeEndCollectiveOperationKV", 
                "OTF_RStream_readStatistics", 
                "OTF_WStream_writeSendMsg", 
                "__ctype_tolower_loc", 
                "_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev", 
                "OTF_RStream_getMarkerBuffer", 
                "OTF_Reader_readEvents", 
                "OTF_RStream_close", 
                "MPI_Finalize", 
                "OTF_Reader_close", 
                "fopen", 
                "OTF_WStream_writeDefCreator", 
                "GOMP_parallel_start", 
                "MPI_Waitall", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_i", 
                "__memcpy_chk", 
                "OTF_MasterControl_new", 
                "OTF_WStream_writeCollectiveOperationKV", 
                "OTF_Reader_setProcessStatusAll", 
                "OTF_WStream_writeDefFileGroup", 
                "_ZNSt8ios_baseC2Ev", 
                "OTF_HandlerArray_open", 
                "OTF_Reader_snapshotBytesProgress", 
                "_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_", 
                "free", 
                "OTF_FileManager_open", 
                "OTF_MasterControl_read", 
                "OTF_WStream_writeRMAPutRemoteEndKV", 
                "OTF_WStream_writeEventComment", 
                "OTF_RStream_statisticBytesProgress"
            ], 
            "rpm": "openmpi-devel-1.10.6-2.el7.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/openmpi/bin/vtfilter-mpi"
        }, 
        "usr/lib/openmpi/bin/vtwrapper": {
            "report-functions": [
                "rename", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv", 
                "getenv", 
                "_ZNSt8ios_baseC2Ev", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "_ITM_registerTMCloneTable", 
                "__fprintf_chk", 
                "_ZNSs9_M_mutateEjjj", 
                "memcmp", 
                "free", 
                "_ZNSt6localeD1Ev", 
                "_ZdaPv", 
                "strtok", 
                "_ZNSs4_Rep10_M_disposeERKSaIcE", 
                "__errno_location", 
                "access", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_i", 
                "remove", 
                "_ZNSsC1ERKSsjj", 
                "_ZNKSt5ctypeIcE13_M_widen_initEv", 
                "_ZNSs12_M_leak_hardEv", 
                "_ZNKSs5rfindEPKcjj", 
                "_ZNKSs7compareEjjPKc", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEED1Ev", 
                "strchr", 
                "_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc", 
                "__gmon_start__", 
                "_ZNKSs6substrEjj", 
                "abort", 
                "_ZNKSs5rfindEcj", 
                "_ZNSs7replaceEjjPKcj", 
                "memcpy", 
                "_Unwind_Resume", 
                "_ZNSs6assignEPKc", 
                "_ZNSt8ios_base4InitD1Ev", 
                "_ZNSsC1ERKSs", 
                "__cxa_rethrow", 
                "_ZNSt8ios_baseD2Ev", 
                "strrchr", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "_ITM_deregisterTMCloneTable", 
                "_ZNSt8ios_base4InitC1Ev", 
                "__pthread_key_create", 
                "fnmatch", 
                "__cxa_guard_release", 
                "_Znwj", 
                "_Znaj", 
                "_ZNSt12__basic_fileIcED1Ev", 
                "_ZSt20__throw_out_of_rangePKc", 
                "_ZNSi7getlineEPcic", 
                "__cxa_atexit", 
                "strlen", 
                "_ZSt17__throw_bad_allocv", 
                "_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev", 
                "_ZNKSs17find_first_not_ofEPKcjj", 
                "__cxa_guard_abort", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode", 
                "_ZNKSs16find_last_not_ofEPKcjj", 
                "_ZNKSs7compareEPKc", 
                "_ZNKSs4findEPKcj", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "system", 
                "_ZNSs6assignERKSs", 
                "_ZNKSs13find_first_ofEPKcjj", 
                "memmove", 
                "_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_", 
                "__cxa_guard_acquire", 
                "malloc", 
                "exit", 
                "__cxa_end_catch", 
                "__libc_start_main", 
                "_ZSt16__throw_bad_castv", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEEC1Ev", 
                "strcpy", 
                "_ZNSs6insertEjPKcj", 
                "realloc", 
                "_ZNSs6appendERKSs", 
                "_ZNSs6assignEPKcj", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate", 
                "__stack_chk_fail", 
                "_ZNSs7reserveEj", 
                "__cxa_begin_catch", 
                "_ZNKSs4findEPKcjj", 
                "_ZNSo9_M_insertImEERSoT_", 
                "_Jv_RegisterClasses", 
                "_ZNSs6appendEPKcj", 
                "_ZNSs4_Rep10_M_destroyERKSaIcE", 
                "_ZNKSs4findEcj", 
                "__vsprintf_chk", 
                "_ZdlPv", 
                "strncpy", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_"
            ], 
            "rpm": "openmpi-devel-1.10.6-2.el7.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/openmpi/bin/vtwrapper"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2thin_so": {
            "report-functions": [
                "__errno_location", 
                "dm_task_get_name", 
                "dm_bitset_destroy", 
                "strerror", 
                "waitpid", 
                "_Jv_RegisterClasses", 
                "dm_task_get_info", 
                "dm_task_no_open_count", 
                "dmeventd_lvm2_run", 
                "dmeventd_lvm2_unlock", 
                "execvp", 
                "dm_get_next_target", 
                "dm_task_get_deps", 
                "dm_task_run", 
                "__gmon_start__", 
                "dm_task_get_names", 
                "dmeventd_lvm2_exit", 
                "dm_pool_free", 
                "__syslog_chk", 
                "dm_task_set_name", 
                "dmeventd_lvm2_command", 
                "dm_pool_zalloc", 
                "exit", 
                "dmeventd_lvm2_lock", 
                "dm_task_destroy", 
                "_ITM_deregisterTMCloneTable", 
                "dm_get_status_thin_pool", 
                "dmeventd_lvm2_init", 
                "dm_mountinfo_read", 
                "dm_task_create", 
                "dm_pool_create", 
                "dm_bitset_create", 
                "_ITM_registerTMCloneTable", 
                "dm_pool_destroy", 
                "__cxa_finalize", 
                "fork"
            ], 
            "rpm": "openmpi-devel-1.10.6-2.el7.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2thin.so"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2mirror_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2mirror.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "dm_task_get_name", 
                "__cxa_finalize", 
                "strtol", 
                "dmeventd_lvm2_init", 
                "_ITM_registerTMCloneTable", 
                "strcmp", 
                "dm_split_words", 
                "dm_malloc_wrapper", 
                "dm_free_wrapper", 
                "dmeventd_lvm2_unlock", 
                "dmeventd_lvm2_run", 
                "__stack_chk_fail", 
                "strlen", 
                "strchr", 
                "dmeventd_lvm2_lock", 
                "_ITM_deregisterTMCloneTable", 
                "dmeventd_lvm2_command", 
                "dmeventd_lvm2_pool", 
                "__syslog_chk", 
                "dm_get_next_target", 
                "__gmon_start__", 
                "_Jv_RegisterClasses"
            ], 
            "rpm": "openmpi-devel-1.10.6-2.el7.i686.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2raid_so": {
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "dmeventd_lvm2_lock", 
                "dmeventd_lvm2_exit", 
                "__stack_chk_fail", 
                "__syslog_chk", 
                "strcmp", 
                "dm_get_next_target", 
                "dmeventd_lvm2_unlock", 
                "dmeventd_lvm2_init", 
                "_ITM_deregisterTMCloneTable", 
                "_Jv_RegisterClasses", 
                "dmeventd_lvm2_run", 
                "dm_split_words", 
                "strchr", 
                "__cxa_finalize", 
                "dmeventd_lvm2_pool", 
                "__gmon_start__", 
                "strtol"
            ], 
            "rpm": "openmpi-devel-1.10.6-2.el7.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2raid.so"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2thin_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2thin.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "dmeventd_lvm2_command", 
                "__errno_location", 
                "dm_get_next_target", 
                "__stack_chk_fail", 
                "dmeventd_lvm2_exit", 
                "fork", 
                "dmeventd_lvm2_unlock", 
                "_ITM_registerTMCloneTable", 
                "dm_task_get_names", 
                "dm_task_run", 
                "dm_task_get_name", 
                "waitpid", 
                "dm_task_get_deps", 
                "dmeventd_lvm2_init", 
                "__gmon_start__", 
                "dm_task_destroy", 
                "dm_pool_create", 
                "dm_task_get_info", 
                "dm_pool_destroy", 
                "dm_task_set_name", 
                "dm_pool_free", 
                "_Jv_RegisterClasses", 
                "dm_bitset_destroy", 
                "dm_mountinfo_read", 
                "__syslog_chk", 
                "dmeventd_lvm2_lock", 
                "_ITM_deregisterTMCloneTable", 
                "dm_pool_zalloc", 
                "execvp", 
                "dm_bitset_create", 
                "dmeventd_lvm2_run", 
                "dm_task_no_open_count", 
                "exit", 
                "strerror", 
                "dm_get_status_thin_pool"
            ], 
            "rpm": "openmpi-devel-1.10.6-2.el7.i686.rpm"
        }, 
        "usr/lib/openmpi/bin/opal_wrapper": {
            "report-functions": [
                "regcomp", 
                "getenv", 
                "strcmp", 
                "opal_argv_count", 
                "exit", 
                "opal_path_findv", 
                "opal_basename", 
                "__asprintf_chk", 
                "_ITM_registerTMCloneTable", 
                "opal_argv_join", 
                "realloc", 
                "opal_argv_insert", 
                "strerror", 
                "puts", 
                "__xstat", 
                "opal_few", 
                "regfree", 
                "strlen", 
                "opal_argv_delete", 
                "free", 
                "__gmon_start__", 
                "opal_util_keyval_parse", 
                "opal_argv_split", 
                "__fprintf_chk", 
                "opal_argv_append_nosize", 
                "opal_strerror", 
                "opal_install_dirs_expand", 
                "strncmp", 
                "__printf_chk", 
                "opal_argv_free", 
                "__strdup", 
                "__errno_location", 
                "_ITM_deregisterTMCloneTable", 
                "opal_os_path", 
                "opal_argv_copy", 
                "opal_show_help_string", 
                "regexec", 
                "__libc_start_main", 
                "__stack_chk_fail", 
                "opal_finalize_util", 
                "putchar", 
                "malloc"
            ], 
            "rpm": "openmpi-devel-1.10.6-2.el7.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/openmpi/bin/opal_wrapper"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2snapshot_so": {
            "report-functions": [
                "exit", 
                "dmeventd_lvm2_init", 
                "dm_get_status_snapshot", 
                "_ITM_registerTMCloneTable", 
                "dm_task_get_name", 
                "__cxa_finalize", 
                "dmeventd_lvm2_exit", 
                "feof", 
                "dmeventd_lvm2_command", 
                "fclose", 
                "dm_pool_zalloc", 
                "dm_task_get_info", 
                "__gmon_start__", 
                "dmeventd_lvm2_unlock", 
                "__errno_location", 
                "dm_pool_free", 
                "_ITM_deregisterTMCloneTable", 
                "dm_split_words", 
                "strerror", 
                "__xstat64", 
                "dm_pool_destroy", 
                "_Jv_RegisterClasses", 
                "fgets", 
                "__syslog_chk", 
                "dm_get_next_target", 
                "dmeventd_lvm2_run", 
                "waitpid", 
                "dmeventd_lvm2_lock", 
                "fork", 
                "fopen64", 
                "execvp"
            ], 
            "rpm": "openmpi-devel-1.10.6-2.el7.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2snapshot.so"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2snapshot_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2snapshot.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "waitpid", 
                "fork", 
                "__xstat64", 
                "dmeventd_lvm2_command", 
                "dm_split_words", 
                "dmeventd_lvm2_exit", 
                "dm_pool_create", 
                "dmeventd_lvm2_unlock", 
                "dmeventd_lvm2_init", 
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable", 
                "fclose", 
                "__gmon_start__", 
                "dm_get_next_target", 
                "fopen64", 
                "_Jv_RegisterClasses", 
                "fgets", 
                "__syslog_chk", 
                "__cxa_finalize", 
                "execvp", 
                "dm_pool_zalloc", 
                "feof", 
                "strerror", 
                "dm_pool_free", 
                "dm_pool_destroy", 
                "dm_task_get_info", 
                "dm_task_get_name", 
                "__stack_chk_fail", 
                "dmeventd_lvm2_lock", 
                "dmeventd_lvm2_run", 
                "dm_get_status_snapshot"
            ], 
            "rpm": "openmpi-devel-1.10.6-2.el7.i686.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Version": " 1.10.6", 
            "Name": " openmpi-devel", 
            "License": " BSD and MIT and Romio", 
            "URL": " http://www.open-mpi.org/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " x86-037.build.eng.bos.redhat.com", 
            "Description": "\nContains development headers and libraries for openmpi\n", 
            "Build Date": " Wed 19 Apr 2017 07:54:24 AM EDT", 
            "Vendor": " Red Hat, Inc.", 
            "Source RPM": " openmpi-1.10.6-2.el7.src.rpm", 
            "warning": " /home/jason/fctl/swap/2/openmpi-devel-1.10.6-2.el7.i686.rpm: Header V3 RSA/SHA256 Signature, key ID fd431d51: NOKEY", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Wed 19 Apr 2017 07:34:24 PM EDT, Key ID 199e2f91fd431d51", 
            "Release": " 2.el7", 
            "Group": " Development/Libraries", 
            "Packager": " Red Hat, Inc. <http://bugzilla.redhat.com/bugzilla>", 
            "Summary": " Development files for openmpi", 
            "Size": " 11725768"
        }
    }
}