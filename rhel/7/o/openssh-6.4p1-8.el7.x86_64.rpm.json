{
    "results": {
        "usr/lib/device-mapper/libdevmapper-event-lvm2mirror_so": {
            "report-functions": [
                "__gmon_start__", 
                "strtol", 
                "dmeventd_lvm2_pool", 
                "dm_malloc_wrapper", 
                "dm_split_words", 
                "strcmp", 
                "dmeventd_lvm2_command", 
                "dm_task_get_name", 
                "dmeventd_lvm2_run", 
                "dmeventd_lvm2_unlock", 
                "__cxa_finalize", 
                "dmeventd_lvm2_lock", 
                "__syslog_chk", 
                "dmeventd_lvm2_init", 
                "_ITM_registerTMCloneTable", 
                "__stack_chk_fail", 
                "_ITM_deregisterTMCloneTable", 
                "strlen", 
                "_Jv_RegisterClasses", 
                "dm_free_wrapper", 
                "strchr"
            ], 
            "rpm": "openssh-6.4p1-8.el7.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2mirror.so"
        }, 
        "usr/libexec/openssh/ctr-cavstest": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/libexec/openssh/ctr-cavstest", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "fread", 
                "memcpy", 
                "EVP_CIPHER_CTX_init", 
                "strlen", 
                "open", 
                "EVP_aes_256_ctr", 
                "EVP_aes_256_cbc", 
                "MD5_Init", 
                "__fprintf_chk", 
                "EVP_rc4", 
                "strcmp", 
                "EVP_CIPHER_CTX_iv_length", 
                "malloc", 
                "EVP_aes_192_ctr", 
                "__vsnprintf_chk", 
                "EVP_enc_null", 
                "EVP_CipherInit", 
                "EVP_aes_256_gcm", 
                "__gmon_start__", 
                "strchr", 
                "calloc", 
                "FIPS_mode", 
                "EVP_Cipher", 
                "EVP_aes_128_cbc", 
                "EVP_des_cbc", 
                "realloc", 
                "__syslog_chk", 
                "EVP_des_ede3_cbc", 
                "__printf_chk", 
                "EVP_CIPHER_CTX_get_app_data", 
                "EVP_CIPHER_CTX_key_length", 
                "OPENSSL_add_all_algorithms_noconf", 
                "ENGINE_load_builtin_engines", 
                "MD5_Final", 
                "EVP_aes_128_gcm", 
                "EVP_aes_192_cbc", 
                "memset", 
                "EVP_cast5_cbc", 
                "EVP_CIPHER_CTX_set_app_data", 
                "_ITM_deregisterTMCloneTable", 
                "__errno_location", 
                "_ITM_registerTMCloneTable", 
                "openlog", 
                "EVP_CIPHER_CTX_cleanup", 
                "__ctype_b_loc", 
                "write", 
                "__libc_start_main", 
                "exit", 
                "fwrite", 
                "putchar", 
                "closelog", 
                "__vasprintf_chk", 
                "__cxa_finalize", 
                "_exit", 
                "__snprintf_chk", 
                "_Jv_RegisterClasses", 
                "EVP_bf_cbc", 
                "strcasecmp", 
                "MD5_Update", 
                "free", 
                "EVP_CIPHER_CTX_set_key_length", 
                "EVP_CIPHER_CTX_ctrl", 
                "__stack_chk_fail", 
                "strerror", 
                "EVP_aes_128_ctr"
            ], 
            "rpm": "openssh-6.4p1-8.el7.x86_64.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2raid_so": {
            "report-functions": [
                "__cxa_finalize", 
                "dm_task_get_name", 
                "_ITM_registerTMCloneTable", 
                "dm_get_next_target", 
                "__gmon_start__", 
                "strcmp", 
                "dmeventd_lvm2_pool", 
                "dmeventd_lvm2_command", 
                "dmeventd_lvm2_run", 
                "__stack_chk_fail", 
                "dmeventd_lvm2_unlock", 
                "dmeventd_lvm2_lock", 
                "strchr", 
                "_ITM_deregisterTMCloneTable", 
                "dm_split_words", 
                "strtol", 
                "__syslog_chk", 
                "dmeventd_lvm2_init", 
                "_Jv_RegisterClasses"
            ], 
            "rpm": "openssh-6.4p1-8.el7.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2raid.so"
        }, 
        "usr/bin/ssh-keygen": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/ssh-keygen", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "EC_POINT_mul", 
                "nanosleep", 
                "__ctype_tolower_loc", 
                "read", 
                "HMAC_Init", 
                "memchr", 
                "RSA_private_decrypt", 
                "ECDSA_do_sign", 
                "strncmp", 
                "waitpid", 
                "BN_new", 
                "RAND_status", 
                "__h_errno_location", 
                "__fprintf_chk", 
                "EC_GROUP_cmp", 
                "EC_KEY_get0_group", 
                "strftime", 
                "EVP_sha384", 
                "EC_KEY_new_by_curve_name", 
                "getgrnam", 
                "EC_POINT_cmp", 
                "EC_GROUP_new_by_curve_name", 
                "EC_KEY_set_public_key", 
                "__stack_chk_fail", 
                "EVP_PKEY_get1_DSA", 
                "ERR_error_string", 
                "EC_POINT_oct2point", 
                "RSA_public_encrypt", 
                "EC_KEY_get0_public_key", 
                "RSA_blinding_on", 
                "_ITM_deregisterTMCloneTable", 
                "EVP_CIPHER_CTX_get_app_data", 
                "ECDSA_do_verify", 
                "openlog", 
                "SSLeay", 
                "BN_dec2bn", 
                "MD5_Update", 
                "__cxa_atexit", 
                "EVP_PKEY_get1_EC_KEY", 
                "EVP_aes_256_ctr", 
                "__dn_expand", 
                "strchr", 
                "exit", 
                "strptime", 
                "strtoul", 
                "BN_CTX_start", 
                "perror", 
                "dlerror", 
                "fclose", 
                "EC_KEY_generate_key", 
                "getgroups", 
                "__asprintf_chk", 
                "EC_GROUP_method_of", 
                "MD5_Final", 
                "execlp", 
                "fgets", 
                "__memmove_chk", 
                "EC_METHOD_get_field_type", 
                "EVP_bf_cbc", 
                "BIO_ctrl", 
                "BIO_free", 
                "PEM_write_DSA_PUBKEY", 
                "EC_POINT_new", 
                "BN_num_bits", 
                "_getlong", 
                "EVP_DigestInit", 
                "BN_CTX_get", 
                "BN_rshift", 
                "BIO_s_mem", 
                "OPENSSL_config", 
                "BN_clear_free", 
                "RAND_cleanup", 
                "DSA_SIG_free", 
                "memcmp", 
                "BN_rand", 
                "kill", 
                "__lxstat", 
                "strtol", 
                "RAND_bytes", 
                "__res_state", 
                "strstr", 
                "OPENSSL_add_all_algorithms_noconf", 
                "seteuid", 
                "EC_KEY_get0_private_key", 
                "DSA_do_verify", 
                "isatty", 
                "strncasecmp", 
                "setegid", 
                "BN_free", 
                "MD5_Init", 
                "mkdir", 
                "fcntl", 
                "RSA_generate_key_ex", 
                "__strdup", 
                "_exit", 
                "EVP_aes_256_cbc", 
                "getpwuid", 
                "BIO_new_mem_buf", 
                "EVP_DigestFinal", 
                "realloc", 
                "EVP_Cipher", 
                "BN_hex2bn", 
                "BN_set_bit", 
                "strspn", 
                "PEM_read_RSAPublicKey", 
                "memcpy", 
                "feof", 
                "RSA_new", 
                "EVP_CIPHER_CTX_cleanup", 
                "open", 
                "strerror", 
                "__ctype_toupper_loc", 
                "gmtime", 
                "EVP_CIPHER_CTX_set_key_length", 
                "DSA_SIG_new", 
                "EVP_MD_size", 
                "fdopen", 
                "memset", 
                "pipe", 
                "close", 
                "BN_bn2hex", 
                "strcasecmp", 
                "clock_gettime", 
                "geteuid", 
                "__gmon_start__", 
                "EVP_aes_256_gcm", 
                "HMAC_Update", 
                "RSA_get_default_method", 
                "__cxa_finalize", 
                "_getshort", 
                "BN_value_one", 
                "BN_add_word", 
                "setresgid", 
                "getegid", 
                "fwrite", 
                "fscanf", 
                "EC_KEY_set_asn1_flag", 
                "EVP_enc_null", 
                "dlopen", 
                "dlclose", 
                "freeaddrinfo", 
                "HMAC_Final", 
                "EVP_des_cbc", 
                "tcgetattr", 
                "BN_dup", 
                "strtoll", 
                "link", 
                "EC_GROUP_free", 
                "EC_POINT_free", 
                "BN_print_fp", 
                "PEM_write_bio_ECPrivateKey", 
                "rename", 
                "EVP_CIPHER_CTX_iv_length", 
                "CRYPTO_free", 
                "DSA_do_sign", 
                "EVP_CipherInit", 
                "strcmp", 
                "__syslog_chk", 
                "write", 
                "HMAC_CTX_cleanup", 
                "setuid", 
                "BN_is_prime_ex", 
                "DSA_generate_parameters_ex", 
                "EC_KEY_free", 
                "EC_GROUP_set_asn1_flag", 
                "RSA_free", 
                "gethostname", 
                "getenv", 
                "getpwnam", 
                "unlink", 
                "sigaction", 
                "strlen", 
                "setgid", 
                "BN_copy", 
                "PEM_write_ECPrivateKey", 
                "EVP_sha512", 
                "PEM_write_RSAPublicKey", 
                "DSA_free", 
                "EVP_aes_192_ctr", 
                "PEM_read_bio_PrivateKey", 
                "ECDSA_SIG_new", 
                "__errno_location", 
                "memmove", 
                "BN_CTX_free", 
                "RSA_set_ex_data", 
                "fputc", 
                "RSA_sign", 
                "BN_cmp", 
                "__libc_start_main", 
                "strtoull", 
                "EC_GROUP_get_curve_name", 
                "DSA_new", 
                "localtime", 
                "EC_GROUP_get_order", 
                "OBJ_nid2sn", 
                "EVP_md5", 
                "EVP_PKEY_get1_RSA", 
                "mktime", 
                "ctime", 
                "snprintf", 
                "puts", 
                "setgroups", 
                "BN_set_word", 
                "BN_bin2bn", 
                "_Jv_RegisterClasses", 
                "RSA_get_ex_data", 
                "EC_KEY_set_group", 
                "RSA_public_decrypt", 
                "ENGINE_load_builtin_engines", 
                "EVP_cast5_cbc", 
                "fork", 
                "initgroups", 
                "BN_div", 
                "EVP_CIPHER_CTX_init", 
                "__fxstat", 
                "__printf_chk", 
                "sigemptyset", 
                "__memcpy_chk", 
                "EVP_aes_128_gcm", 
                "BN_mod_word", 
                "BN_bn2dec", 
                "__xstat", 
                "PEM_write_bio_DSAPrivateKey", 
                "__vasprintf_chk", 
                "PEM_write_RSA_PUBKEY", 
                "setresuid", 
                "EVP_aes_128_ctr", 
                "ungetc", 
                "__rawmemchr", 
                "ioctl", 
                "BN_add", 
                "EC_POINT_is_at_infinity", 
                "__ctype_b_loc", 
                "__res_init", 
                "EVP_CIPHER_CTX_set_app_data", 
                "__vsnprintf_chk", 
                "RSA_set_method", 
                "EVP_CIPHER_CTX_ctrl", 
                "EVP_aes_192_cbc", 
                "EVP_DigestUpdate", 
                "gai_strerror", 
                "putchar", 
                "PEM_write_bio_RSAPrivateKey", 
                "PEM_read_PUBKEY", 
                "free", 
                "PEM_write_DSAPrivateKey", 
                "BIO_new", 
                "PEM_write_RSAPrivateKey", 
                "EVP_CIPHER_CTX_key_length", 
                "dup2", 
                "getuid", 
                "EVP_sha1", 
                "getgid", 
                "dlsym", 
                "umask", 
                "strrchr", 
                "ERR_get_error", 
                "_ITM_registerTMCloneTable", 
                "RAND_load_file", 
                "ENGINE_register_all_complete", 
                "BN_is_bit_set", 
                "EVP_get_digestbyname", 
                "BN_CTX_new", 
                "tcsetattr", 
                "poll", 
                "getpid", 
                "BN_sub", 
                "strpbrk", 
                "setsockopt", 
                "getaddrinfo", 
                "EVP_des_ede3_cbc", 
                "fopen", 
                "FIPS_mode", 
                "EVP_rc4", 
                "fflush", 
                "BN_bn2bin", 
                "time", 
                "DSA_generate_key", 
                "fgetc", 
                "calloc", 
                "EVP_PKEY_free", 
                "__snprintf_chk", 
                "getsockopt", 
                "gettimeofday", 
                "EVP_sha256", 
                "ECDSA_SIG_free", 
                "EVP_aes_128_cbc", 
                "EC_POINT_point2oct", 
                "__res_query", 
                "RSA_size", 
                "EVP_PKEY_type", 
                "EC_POINT_get_affine_coordinates_GFp", 
                "fputs", 
                "readv", 
                "malloc", 
                "PEM_write_EC_PUBKEY"
            ], 
            "rpm": "openssh-6.4p1-8.el7.x86_64.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2thin_so": {
            "report-functions": [
                "_Jv_RegisterClasses", 
                "strerror", 
                "waitpid", 
                "dm_task_get_names", 
                "dm_task_set_name", 
                "__gmon_start__", 
                "dmeventd_lvm2_run", 
                "dm_pool_free", 
                "dmeventd_lvm2_unlock", 
                "_ITM_registerTMCloneTable", 
                "__errno_location", 
                "dm_task_destroy", 
                "dm_pool_create", 
                "dmeventd_lvm2_exit", 
                "__syslog_chk", 
                "dm_mountinfo_read", 
                "dm_bitset_create", 
                "__cxa_finalize", 
                "__stack_chk_fail", 
                "dm_task_get_info", 
                "dm_pool_destroy", 
                "dm_task_create", 
                "dm_get_status_thin_pool", 
                "dmeventd_lvm2_command", 
                "dm_task_get_deps", 
                "exit", 
                "execvp", 
                "fork", 
                "dm_bitset_destroy", 
                "dm_task_no_open_count", 
                "_ITM_deregisterTMCloneTable", 
                "dmeventd_lvm2_init", 
                "dm_get_next_target", 
                "dm_task_get_name", 
                "dmeventd_lvm2_lock"
            ], 
            "rpm": "openssh-6.4p1-8.el7.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2thin.so"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2mirror_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2mirror.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "dm_task_get_name", 
                "__gmon_start__", 
                "__syslog_chk", 
                "_Jv_RegisterClasses", 
                "__cxa_finalize", 
                "dmeventd_lvm2_init", 
                "strtol", 
                "dm_get_next_target", 
                "dmeventd_lvm2_unlock", 
                "_ITM_deregisterTMCloneTable", 
                "strcmp", 
                "dmeventd_lvm2_exit", 
                "dmeventd_lvm2_run", 
                "dmeventd_lvm2_command", 
                "__stack_chk_fail", 
                "_ITM_registerTMCloneTable", 
                "dm_malloc_wrapper", 
                "dmeventd_lvm2_pool", 
                "dm_split_words", 
                "strlen", 
                "strchr"
            ], 
            "rpm": "openssh-6.4p1-8.el7.x86_64.rpm"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2raid_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2raid.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "strchr", 
                "dmeventd_lvm2_command", 
                "dmeventd_lvm2_unlock", 
                "strtol", 
                "dmeventd_lvm2_pool", 
                "dm_task_get_name", 
                "__stack_chk_fail", 
                "dmeventd_lvm2_init", 
                "strcmp", 
                "dm_split_words", 
                "__gmon_start__", 
                "_Jv_RegisterClasses", 
                "__cxa_finalize", 
                "dmeventd_lvm2_run", 
                "dmeventd_lvm2_lock", 
                "dmeventd_lvm2_exit", 
                "_ITM_registerTMCloneTable", 
                "__syslog_chk"
            ], 
            "rpm": "openssh-6.4p1-8.el7.x86_64.rpm"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2thin_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2thin.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "dm_get_status_thin_pool", 
                "dm_pool_free", 
                "dm_task_set_name", 
                "dm_bitset_destroy", 
                "waitpid", 
                "__stack_chk_fail", 
                "dmeventd_lvm2_init", 
                "strerror", 
                "dm_pool_zalloc", 
                "dm_task_get_names", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "__errno_location", 
                "execvp", 
                "dm_task_get_name", 
                "dm_pool_create", 
                "dm_task_get_deps", 
                "_Jv_RegisterClasses", 
                "_ITM_deregisterTMCloneTable", 
                "dm_pool_destroy", 
                "dm_task_get_info", 
                "dm_get_next_target", 
                "dmeventd_lvm2_unlock", 
                "fork", 
                "dm_task_create", 
                "__syslog_chk", 
                "dm_mountinfo_read", 
                "dm_task_run", 
                "dmeventd_lvm2_command", 
                "dmeventd_lvm2_exit", 
                "dm_task_no_open_count", 
                "__cxa_finalize", 
                "dmeventd_lvm2_lock", 
                "dm_bitset_create", 
                "dmeventd_lvm2_run"
            ], 
            "rpm": "openssh-6.4p1-8.el7.x86_64.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2snapshot_so": {
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "dm_pool_destroy", 
                "__syslog_chk", 
                "feof", 
                "dmeventd_lvm2_run", 
                "dmeventd_lvm2_init", 
                "dmeventd_lvm2_exit", 
                "dm_task_get_info", 
                "dm_pool_create", 
                "__errno_location", 
                "dm_get_status_snapshot", 
                "_Jv_RegisterClasses", 
                "strerror", 
                "dm_pool_free", 
                "dm_task_get_name", 
                "__stack_chk_fail", 
                "dm_get_next_target", 
                "fork", 
                "__xstat64", 
                "fclose", 
                "fgets", 
                "dmeventd_lvm2_command", 
                "execvp", 
                "dm_pool_zalloc", 
                "exit", 
                "waitpid", 
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize", 
                "__gmon_start__", 
                "dmeventd_lvm2_unlock", 
                "fopen64"
            ], 
            "rpm": "openssh-6.4p1-8.el7.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2snapshot.so"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2snapshot_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2snapshot.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "execvp", 
                "dm_get_status_snapshot", 
                "dm_pool_free", 
                "exit", 
                "dm_split_words", 
                "waitpid", 
                "dm_pool_create", 
                "dm_get_next_target", 
                "__xstat64", 
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable", 
                "feof", 
                "dmeventd_lvm2_exit", 
                "dmeventd_lvm2_command", 
                "dm_task_get_name", 
                "dm_pool_zalloc", 
                "_Jv_RegisterClasses", 
                "dmeventd_lvm2_lock", 
                "__cxa_finalize", 
                "fclose", 
                "__stack_chk_fail", 
                "fopen64", 
                "__errno_location", 
                "dm_task_get_info", 
                "dmeventd_lvm2_init", 
                "__syslog_chk", 
                "fork", 
                "dmeventd_lvm2_run", 
                "__gmon_start__", 
                "dm_pool_destroy", 
                "fgets"
            ], 
            "rpm": "openssh-6.4p1-8.el7.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Version": " 6.4p1", 
            "Name": " openssh", 
            "License": " BSD", 
            "URL": " http://www.openssh.com/portable.html", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " x86-017.build.eng.bos.redhat.com", 
            "Description": "\nSSH (Secure SHell) is a program for logging into and executing\ncommands on a remote machine. SSH is intended to replace rlogin and\nrsh, and to provide secure encrypted communications between two\nuntrusted hosts over an insecure network. X11 connections and\narbitrary TCP/IP ports can also be forwarded over the secure channel.\n\nOpenSSH is OpenBSD's version of the last free version of SSH, bringing\nit up to date in terms of security and features.\n\nThis package includes the core files necessary for both the OpenSSH\nclient and server. To make this package useful, you should also\ninstall openssh-clients, openssh-server, or both.\n", 
            "Build Date": " Wed 19 Mar 2014 04:50:12 PM EDT", 
            "Vendor": " Red Hat, Inc.", 
            "Source RPM": " openssh-6.4p1-8.el7.src.rpm", 
            "warning": " /home/jason/fctl/swap/2/openssh-6.4p1-8.el7.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID fd431d51: NOKEY", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Wed 02 Apr 2014 01:07:01 PM EDT, Key ID 199e2f91fd431d51", 
            "Release": " 8.el7", 
            "Group": " Applications/Internet", 
            "Packager": " Red Hat, Inc. <http://bugzilla.redhat.com/bugzilla>", 
            "Summary": " An open source implementation of SSH protocol versions 1 and 2", 
            "Size": " 1096241"
        }
    }
}