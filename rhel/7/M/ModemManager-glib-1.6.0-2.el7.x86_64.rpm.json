{
    "results": {
        "usr/lib/device-mapper/libdevmapper-event-lvm2mirror_so": {
            "report-functions": [
                "strtol", 
                "strlen", 
                "dmeventd_lvm2_lock", 
                "dmeventd_lvm2_run", 
                "dm_get_next_target", 
                "dmeventd_lvm2_init", 
                "__stack_chk_fail", 
                "strcmp", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable", 
                "dm_malloc_wrapper", 
                "dmeventd_lvm2_exit", 
                "strchr", 
                "dm_task_get_name", 
                "_Jv_RegisterClasses", 
                "dm_free_wrapper", 
                "dm_split_words", 
                "dmeventd_lvm2_pool", 
                "dmeventd_lvm2_command", 
                "__syslog_chk"
            ], 
            "rpm": "ModemManager-glib-1.6.0-2.el7.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2mirror.so"
        }, 
        "usr/lib64/libmm-glib_so_0_3_0": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/libmm-glib.so.0.3.0", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "g_variant_new_uint16", 
                "g_datalist_clear", 
                "g_prefix_error", 
                "g_byte_array_append", 
                "g_value_set_uint", 
                "g_datalist_id_set_data_full", 
                "g_signal_emitv", 
                "g_variant_iter_init", 
                "g_mutex_init", 
                "g_object_get", 
                "g_variant_new_int32", 
                "g_variant_iter_next", 
                "g_async_initable_new_finish", 
                "g_object_unref", 
                "g_simple_async_result_set_op_res_gpointer", 
                "g_strsplit", 
                "g_main_context_ref_thread_default", 
                "g_initable_new", 
                "g_variant_get", 
                "g_byte_array_sized_new", 
                "g_value_dup_string", 
                "g_variant_get_boolean", 
                "g_propagate_error", 
                "g_variant_unref", 
                "g_quark_from_string", 
                "g_regex_unref", 
                "g_variant_builder_add_value", 
                "g_variant_new_from_data", 
                "g_dbus_object_get_interface", 
                "g_dbus_message_get_unix_fd_list", 
                "g_dbus_interface_info_lookup_signal", 
                "g_set_error", 
                "g_value_get_int", 
                "g_object_notify", 
                "g_param_spec_object", 
                "g_variant_take_ref", 
                "g_value_dup_variant", 
                "g_variant_builder_end", 
                "g_main_context_unref", 
                "g_param_spec_string", 
                "g_array_append_vals", 
                "g_list_append", 
                "g_type_register_static_simple", 
                "g_dbus_proxy_call_finish", 
                "g_source_destroy", 
                "g_type_check_class_cast", 
                "g_variant_get_strv", 
                "g_dbus_interface_get_info", 
                "g_type_instance_get_private", 
                "g_hash_table_lookup", 
                "g_malloc0_n", 
                "g_str_hash", 
                "g_param_spec_uint", 
                "g_dbus_object_manager_client_get_type", 
                "g_datalist_get_data", 
                "__errno_location", 
                "g_list_prepend", 
                "g_dbus_method_invocation_get_message", 
                "_Jv_RegisterClasses", 
                "g_param_spec_int", 
                "g_dbus_interface_skeleton_get_connection", 
                "g_assertion_message_error", 
                "g_object_new", 
                "g_variant_get_uint16", 
                "g_hash_table_lookup_extended", 
                "g_hash_table_new_full", 
                "g_variant_iter_n_children", 
                "g_dbus_method_invocation_get_type", 
                "g_byte_array_ref", 
                "g_hash_table_insert", 
                "_ITM_deregisterTMCloneTable", 
                "g_strdup", 
                "g_string_sized_new", 
                "g_match_info_free", 
                "g_regex_match", 
                "_ITM_registerTMCloneTable", 
                "g_object_notify_by_pspec", 
                "g_return_if_fail_warning", 
                "g_strchug", 
                "g_enum_get_value", 
                "g_strcmp0", 
                "g_dbus_proxy_call_sync", 
                "g_param_spec_variant", 
                "g_direct_equal", 
                "g_dbus_interface_skeleton_get_object_path", 
                "g_variant_get_uint32", 
                "g_array_unref", 
                "g_array_sized_new", 
                "g_variant_new_uint32", 
                "g_dbus_object_skeleton_add_interface", 
                "g_type_class_unref", 
                "g_dbus_proxy_get_type", 
                "g_dbus_proxy_set_interface_info", 
                "g_once_init_leave", 
                "g_regex_new", 
                "g_async_initable_new_async", 
                "g_error_new", 
                "g_object_class_install_property", 
                "g_idle_source_new", 
                "g_variant_iter_loop", 
                "g_dbus_object_skeleton_remove_interface_by_name", 
                "g_variant_builder_clear", 
                "g_type_class_ref", 
                "strchr", 
                "g_assertion_message_expr", 
                "memcpy", 
                "g_object_ref", 
                "g_string_append_printf", 
                "g_simple_async_result_set_op_res_gboolean", 
                "g_variant_builder_add", 
                "g_list_copy", 
                "g_variant_dup_string", 
                "g_strv_length", 
                "g_value_unset", 
                "g_value_get_double", 
                "g_signal_new", 
                "g_param_spec_enum", 
                "g_variant_get_type_string", 
                "g_str_has_suffix", 
                "g_source_set_name", 
                "g_value_get_variant", 
                "g_quark_to_string", 
                "g_variant_new_tuple", 
                "g_variant_get_uint64", 
                "g_variant_iter_free", 
                "g_value_get_uint", 
                "__stack_chk_fail", 
                "g_param_spec_boxed", 
                "g_variant_n_children", 
                "g_variant_type_checked_", 
                "g_quark_try_string", 
                "g_mutex_clear", 
                "g_variant_get_fixed_array", 
                "g_array_new", 
                "g_string_new", 
                "g_value_get_boxed", 
                "g_strdup_printf", 
                "g_object_class_find_property", 
                "g_hash_table_replace", 
                "g_value_init", 
                "g_hash_table_destroy", 
                "g_malloc0", 
                "g_type_class_add_private", 
                "g_variant_builder_init", 
                "g_variant_equal", 
                "g_simple_async_result_complete_in_idle", 
                "g_value_get_uchar", 
                "g_string_free", 
                "g_value_set_flags", 
                "g_dbus_method_invocation_get_method_info", 
                "g_value_get_enum", 
                "g_intern_static_string", 
                "g_hash_table_foreach", 
                "g_dbus_object_get_type", 
                "g_type_check_instance_cast", 
                "g_param_spec_boolean", 
                "g_variant_is_object_path", 
                "strlen", 
                "g_type_class_peek_parent", 
                "g_type_add_instance_private", 
                "g_object_set", 
                "g_flags_register_static", 
                "g_string_append", 
                "g_value_get_boolean", 
                "g_malloc", 
                "g_value_set_object", 
                "g_dbus_interface_info_lookup_property", 
                "g_object_get_property", 
                "g_simple_async_result_get_op_res_gpointer", 
                "g_value_get_object", 
                "g_hash_table_size", 
                "g_type_interface_peek", 
                "g_variant_get_child", 
                "g_simple_async_result_propagate_error", 
                "g_type_class_adjust_private_offset", 
                "g_list_free_full", 
                "g_cclosure_marshal_generic", 
                "g_variant_new_double", 
                "g_dbus_object_skeleton_get_type", 
                "g_slice_alloc0", 
                "g_array_sort", 
                "g_object_interface_install_property", 
                "g_array_ref", 
                "g_once_init_enter", 
                "g_simple_async_result_take_error", 
                "g_dbus_connection_emit_signal", 
                "g_mutex_unlock", 
                "g_variant_is_of_type", 
                "g_dbus_error_register_error_domain", 
                "g_hash_table_remove", 
                "g_value_set_string", 
                "g_hash_table_new", 
                "g_dbus_gvalue_to_gvariant", 
                "g_strdupv", 
                "g_dbus_connection_get_type", 
                "g_variant_get_double", 
                "__gmon_start__", 
                "g_source_set_priority", 
                "g_log", 
                "g_variant_new_boolean", 
                "g_list_foreach", 
                "g_array_free", 
                "g_param_spec_flags", 
                "g_value_get_flags", 
                "g_source_unref", 
                "g_dbus_proxy_get_default_timeout", 
                "g_dbus_proxy_call", 
                "g_direct_hash", 
                "g_value_copy", 
                "g_dbus_method_invocation_return_value", 
                "g_value_take_object", 
                "strtoul", 
                "g_dbus_object_manager_get_type", 
                "g_enum_register_static", 
                "g_variant_iter_next_value", 
                "g_signal_emit_by_name", 
                "g_async_initable_get_type", 
                "g_simple_async_result_complete", 
                "g_value_get_uint64", 
                "g_dbus_object_get_object_path", 
                "g_signal_lookup", 
                "g_dbus_method_invocation_return_error", 
                "g_hash_table_iter_next", 
                "g_strchomp", 
                "g_object_set_property", 
                "g_signal_connect_data", 
                "g_variant_new_uint64", 
                "g_type_name", 
                "g_byte_array_unref", 
                "g_object_class_override_property", 
                "g_value_set_variant", 
                "g_source_attach", 
                "g_match_info_fetch", 
                "g_strfreev", 
                "g_ascii_strcasecmp", 
                "g_object_thaw_notify", 
                "g_variant_get_string", 
                "g_error_free", 
                "g_simple_async_result_get_type", 
                "g_value_get_int64", 
                "g_mutex_lock", 
                "g_simple_async_result_new", 
                "__cxa_finalize", 
                "g_free", 
                "strtol", 
                "g_object_freeze_notify", 
                "g_str_equal", 
                "g_slice_free1", 
                "g_value_set_enum", 
                "g_async_result_get_source_object", 
                "g_hash_table_iter_init", 
                "g_strv_get_type", 
                "g_source_set_callback", 
                "g_dbus_error_quark", 
                "g_str_has_prefix", 
                "g_variant_get_int32", 
                "g_unix_fd_list_get_type", 
                "g_dbus_proxy_get_cached_property", 
                "g_dbus_object_proxy_get_type", 
                "g_type_check_instance_is_a", 
                "g_dbus_proxy_get_object_path", 
                "memcmp", 
                "g_variant_new", 
                "g_variant_ref_sink", 
                "g_type_interface_add_prerequisite", 
                "g_value_get_string", 
                "strtod", 
                "g_dbus_interface_skeleton_get_connections", 
                "g_simple_async_result_set_error", 
                "g_variant_get_objv", 
                "g_dbus_gvariant_to_gvalue", 
                "g_dbus_interface_skeleton_get_type", 
                "strstr", 
                "g_dbus_proxy_get_connection", 
                "g_variant_new_string", 
                "g_signal_accumulator_true_handled"
            ], 
            "rpm": "ModemManager-glib-1.6.0-2.el7.x86_64.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2raid_so": {
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "dm_split_words", 
                "dm_get_next_target", 
                "__stack_chk_fail", 
                "dmeventd_lvm2_unlock", 
                "dmeventd_lvm2_command", 
                "dm_task_get_name", 
                "dmeventd_lvm2_init", 
                "__syslog_chk", 
                "dmeventd_lvm2_run", 
                "dmeventd_lvm2_pool", 
                "dmeventd_lvm2_exit", 
                "dmeventd_lvm2_lock", 
                "__cxa_finalize", 
                "strchr", 
                "strcmp", 
                "strtol", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "ModemManager-glib-1.6.0-2.el7.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2raid.so"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2thin_so": {
            "report-functions": [
                "dm_task_set_name", 
                "__gmon_start__", 
                "execvp", 
                "_Jv_RegisterClasses", 
                "dm_task_no_open_count", 
                "dm_mountinfo_read", 
                "dm_bitset_destroy", 
                "dm_task_get_deps", 
                "dm_task_get_name", 
                "dmeventd_lvm2_exit", 
                "dm_bitset_create", 
                "_ITM_deregisterTMCloneTable", 
                "dm_pool_create", 
                "fork", 
                "dm_pool_destroy", 
                "__syslog_chk", 
                "dm_task_create", 
                "__errno_location", 
                "dm_task_run", 
                "dmeventd_lvm2_run", 
                "waitpid", 
                "dm_task_get_names", 
                "__stack_chk_fail", 
                "__cxa_finalize", 
                "dm_get_next_target", 
                "dmeventd_lvm2_lock", 
                "dm_get_status_thin_pool", 
                "dmeventd_lvm2_unlock", 
                "strerror", 
                "dm_task_destroy", 
                "dmeventd_lvm2_init", 
                "_ITM_registerTMCloneTable", 
                "dm_pool_free", 
                "exit", 
                "dm_task_get_info"
            ], 
            "rpm": "ModemManager-glib-1.6.0-2.el7.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2thin.so"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2mirror_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2mirror.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "strtol", 
                "dmeventd_lvm2_exit", 
                "dm_malloc_wrapper", 
                "dm_split_words", 
                "strcmp", 
                "strlen", 
                "dm_get_next_target", 
                "dmeventd_lvm2_run", 
                "dmeventd_lvm2_lock", 
                "_ITM_deregisterTMCloneTable", 
                "__syslog_chk", 
                "_ITM_registerTMCloneTable", 
                "_Jv_RegisterClasses", 
                "__cxa_finalize", 
                "dmeventd_lvm2_pool", 
                "strchr", 
                "dm_task_get_name", 
                "__gmon_start__", 
                "dm_free_wrapper", 
                "dmeventd_lvm2_command", 
                "__stack_chk_fail"
            ], 
            "rpm": "ModemManager-glib-1.6.0-2.el7.x86_64.rpm"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2raid_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2raid.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "dm_split_words", 
                "dmeventd_lvm2_command", 
                "dmeventd_lvm2_run", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize", 
                "dm_task_get_name", 
                "dm_get_next_target", 
                "strtol", 
                "_ITM_deregisterTMCloneTable", 
                "_Jv_RegisterClasses", 
                "dmeventd_lvm2_exit", 
                "dmeventd_lvm2_init", 
                "__syslog_chk", 
                "dmeventd_lvm2_unlock", 
                "strcmp", 
                "strchr", 
                "dmeventd_lvm2_pool"
            ], 
            "rpm": "ModemManager-glib-1.6.0-2.el7.x86_64.rpm"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2thin_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2thin.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "strerror", 
                "dm_task_run", 
                "dm_bitset_create", 
                "dm_task_no_open_count", 
                "__stack_chk_fail", 
                "dm_task_create", 
                "dm_task_get_info", 
                "waitpid", 
                "dm_pool_free", 
                "dm_pool_create", 
                "_ITM_registerTMCloneTable", 
                "dm_pool_destroy", 
                "exit", 
                "__cxa_finalize", 
                "dm_task_get_deps", 
                "execvp", 
                "__errno_location", 
                "dm_task_get_name", 
                "dm_task_set_name", 
                "dm_get_next_target", 
                "dmeventd_lvm2_command", 
                "__syslog_chk", 
                "dmeventd_lvm2_lock", 
                "dm_mountinfo_read", 
                "dm_task_destroy", 
                "dm_pool_zalloc", 
                "_Jv_RegisterClasses", 
                "dmeventd_lvm2_init", 
                "__gmon_start__", 
                "dmeventd_lvm2_unlock", 
                "dm_task_get_names", 
                "dm_bitset_destroy", 
                "_ITM_deregisterTMCloneTable", 
                "dmeventd_lvm2_run", 
                "dmeventd_lvm2_exit"
            ], 
            "rpm": "ModemManager-glib-1.6.0-2.el7.x86_64.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2snapshot_so": {
            "report-functions": [
                "__gmon_start__", 
                "__cxa_finalize", 
                "waitpid", 
                "dm_pool_zalloc", 
                "exit", 
                "dm_task_get_info", 
                "dmeventd_lvm2_init", 
                "dm_pool_free", 
                "dmeventd_lvm2_run", 
                "feof", 
                "dm_get_next_target", 
                "dmeventd_lvm2_exit", 
                "__xstat64", 
                "dm_pool_create", 
                "fgets", 
                "_ITM_registerTMCloneTable", 
                "dm_get_status_snapshot", 
                "execvp", 
                "strerror", 
                "fork", 
                "_ITM_deregisterTMCloneTable", 
                "dm_task_get_name", 
                "__stack_chk_fail", 
                "dm_split_words", 
                "dmeventd_lvm2_lock", 
                "dmeventd_lvm2_command", 
                "__errno_location", 
                "fopen64", 
                "dm_pool_destroy", 
                "__syslog_chk", 
                "_Jv_RegisterClasses"
            ], 
            "rpm": "ModemManager-glib-1.6.0-2.el7.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2snapshot.so"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2snapshot_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2snapshot.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "dm_task_get_info", 
                "__gmon_start__", 
                "__xstat64", 
                "dmeventd_lvm2_init", 
                "__errno_location", 
                "dmeventd_lvm2_lock", 
                "waitpid", 
                "_ITM_deregisterTMCloneTable", 
                "fopen64", 
                "dm_get_status_snapshot", 
                "dm_task_get_name", 
                "dm_split_words", 
                "execvp", 
                "fork", 
                "dmeventd_lvm2_run", 
                "fgets", 
                "dm_pool_free", 
                "dm_pool_destroy", 
                "fclose", 
                "dmeventd_lvm2_unlock", 
                "_ITM_registerTMCloneTable", 
                "exit", 
                "dm_pool_zalloc", 
                "dmeventd_lvm2_exit", 
                "dm_pool_create", 
                "strerror", 
                "__cxa_finalize", 
                "dm_get_next_target", 
                "_Jv_RegisterClasses", 
                "__stack_chk_fail", 
                "__syslog_chk"
            ], 
            "rpm": "ModemManager-glib-1.6.0-2.el7.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Version": " 1.6.0", 
            "Name": " ModemManager-glib", 
            "License": " GPLv2+", 
            "URL": " http://www.freedesktop.org/wiki/Software/ModemManager/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " x86-020.build.eng.bos.redhat.com", 
            "Description": "\nThis package contains the libraries that make it easier to use some ModemManager\nfunctionality from applications that use glib.\n", 
            "Build Date": " Wed 27 Jul 2016 02:46:41 AM EDT", 
            "Vendor": " Red Hat, Inc.", 
            "Source RPM": " ModemManager-1.6.0-2.el7.src.rpm", 
            "warning": " /home/jason/fctl/swap/2/ModemManager-glib-1.6.0-2.el7.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID fd431d51: NOKEY", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Tue 23 Aug 2016 02:44:11 PM EDT, Key ID 199e2f91fd431d51", 
            "Release": " 2.el7", 
            "Group": " Development/Libraries", 
            "Packager": " Red Hat, Inc. <http://bugzilla.redhat.com/bugzilla>", 
            "Summary": " Libraries for adding ModemManager support to applications that use glib.", 
            "Size": " 1059328"
        }
    }
}