{
    "results": {
        "usr/lib64/libvala-0_20_so_0_0_0": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/libvala-0.20.so.0.0.0", 
            "complexity": {
                "r2aa": {
                    "afCc": null, 
                    "afC": null
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "g_string_insert_c", 
                "g_string_new", 
                "g_list_nth_data", 
                "g_malloc0", 
                "g_ascii_strtod", 
                "g_strchug", 
                "fopen", 
                "g_type_register_fundamental", 
                "g_static_private_get", 
                "g_object_notify", 
                "g_get_system_data_dirs", 
                "g_string_append", 
                "g_propagate_error", 
                "g_utf8_strdown", 
                "g_strjoinv", 
                "g_enum_register_static", 
                "g_strcompress", 
                "g_once_init_enter", 
                "g_string_free", 
                "g_type_interface_peek", 
                "g_pattern_spec_free", 
                "g_value_get_string", 
                "g_sequence_new", 
                "g_value_set_string", 
                "g_markup_escape_text", 
                "g_list_append", 
                "g_str_hash", 
                "g_string_prepend", 
                "g_boxed_type_register_static", 
                "g_path_is_absolute", 
                "g_string_sized_new", 
                "g_strsplit", 
                "g_type_class_ref", 
                "g_quark_to_string", 
                "g_param_spec_internal", 
                "g_strnfill", 
                "g_return_if_fail_warning", 
                "memset", 
                "g_param_spec_boolean", 
                "g_path_get_dirname", 
                "g_type_is_a", 
                "g_file_test", 
                "g_quark_from_static_string", 
                "_ITM_deregisterTMCloneTable", 
                "strlen", 
                "g_get_current_dir", 
                "__stack_chk_fail", 
                "g_value_type_compatible", 
                "fputc", 
                "g_utf8_prev_char", 
                "g_shell_quote", 
                "g_strdup_printf", 
                "g_sequence_iter_is_end", 
                "g_unichar_to_utf8", 
                "g_unichar_isdigit", 
                "g_utf8_strrchr", 
                "g_str_equal", 
                "g_list_length", 
                "g_utf8_get_char_validated", 
                "g_unichar_isupper", 
                "g_slice_free1", 
                "g_path_skip_root", 
                "strstr", 
                "g_enum_get_value_by_nick", 
                "g_strconcat", 
                "g_assertion_message", 
                "g_spaced_primes_closest", 
                "g_utf8_strup", 
                "g_type_class_peek_parent", 
                "g_type_check_instance_cast", 
                "g_log", 
                "g_unichar_toupper", 
                "g_type_create_instance", 
                "g_unichar_isalnum", 
                "g_strndup", 
                "g_spawn_command_line_sync", 
                "g_file_error_quark", 
                "g_object_class_install_property", 
                "g_free", 
                "g_spawn_error_quark", 
                "g_slice_alloc0", 
                "g_sequence_get", 
                "g_string_truncate", 
                "g_mapped_file_free", 
                "g_type_check_class_cast", 
                "g_match_info_free", 
                "g_regex_error_quark", 
                "g_regex_match", 
                "g_param_spec_string", 
                "g_type_class_add_private", 
                "g_path_get_basename", 
                "g_type_free_instance", 
                "g_direct_hash", 
                "g_type_name", 
                "memcmp", 
                "g_type_interface_peek_parent", 
                "g_sequence_get_length", 
                "g_error_free", 
                "g_mapped_file_get_length", 
                "g_object_unref", 
                "g_clear_error", 
                "__fprintf_chk", 
                "g_object_ref", 
                "g_build_path", 
                "_Jv_RegisterClasses", 
                "g_utf8_validate", 
                "g_str_has_prefix", 
                "g_strdup", 
                "g_list_free", 
                "g_mapped_file_new", 
                "g_get_prgname", 
                "g_match_info_fetch", 
                "g_utf8_get_char", 
                "g_string_append_unichar", 
                "g_type_class_unref", 
                "g_static_private_set", 
                "g_strchomp", 
                "memchr", 
                "g_file_get_contents", 
                "g_error_new_literal", 
                "g_type_interface_add_prerequisite", 
                "g_mapped_file_get_contents", 
                "g_realloc_n", 
                "g_static_private_init", 
                "strtol", 
                "g_regex_unref", 
                "g_type_register_static", 
                "g_list_foreach", 
                "g_unlink", 
                "strchr", 
                "__cxa_finalize", 
                "g_type_check_instance_is_a", 
                "memmove", 
                "fputs", 
                "g_str_has_suffix", 
                "g_mkdir_with_parents", 
                "g_type_add_interface_static", 
                "g_ascii_strtoll", 
                "g_assertion_message_expr", 
                "g_sequence_insert_sorted", 
                "g_unichar_tolower", 
                "fwrite", 
                "__gmon_start__", 
                "g_value_get_boolean", 
                "g_value_set_boolean", 
                "g_malloc0_n", 
                "g_sequence_iter_next", 
                "_ITM_registerTMCloneTable", 
                "g_string_append_printf", 
                "g_ascii_tolower", 
                "g_ascii_formatd", 
                "g_pattern_spec_new", 
                "g_regex_replace_literal", 
                "g_object_new", 
                "g_once_init_leave", 
                "fclose", 
                "rename", 
                "g_utf8_strchr", 
                "g_strescape", 
                "g_regex_new", 
                "g_list_remove", 
                "g_sequence_free", 
                "g_regex_replace", 
                "g_direct_equal", 
                "g_realloc", 
                "g_pattern_match_string", 
                "g_strcmp0", 
                "g_type_check_value_holds", 
                "g_string_erase", 
                "g_regex_escape_string", 
                "g_flags_register_static", 
                "g_type_instance_get_private", 
                "g_sequence_get_begin_iter"
            ], 
            "rpm": "vala-0.20.1-3.el7.x86_64.rpm"
        }, 
        "usr/bin/valac-0_20": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/valac-0.20", 
            "complexity": {
                "r2aa": {
                    "afCc": 40, 
                    "afC": 873
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "vala_code_context_set_nostdpkg", 
                "memchr", 
                "vala_report_error", 
                "vala_code_context_new", 
                "vala_code_context_set_version_header", 
                "g_option_error_quark", 
                "_ITM_registerTMCloneTable", 
                "g_str_has_prefix", 
                "g_shell_error_quark", 
                "g_once_init_leave", 
                "vala_code_context_set_compile_only", 
                "g_type_init", 
                "vala_code_context_set_use_header", 
                "g_shell_parse_argv", 
                "vala_report_get_errors", 
                "_ITM_deregisterTMCloneTable", 
                "vala_code_context_get_basedir", 
                "vala_code_context_add_define", 
                "strchr", 
                "g_type_create_instance", 
                "g_strdup_printf", 
                "g_log", 
                "chmod", 
                "vala_gir_writer_write_file", 
                "g_strdup", 
                "vala_code_context_get_directory", 
                "vala_code_context_set_gobject_tracing", 
                "vala_code_context_set_save_temps", 
                "vala_code_context_set_ccode_only", 
                "g_type_free_instance", 
                "vala_gd_bus_server_module_new", 
                "vala_code_context_get_entry_point", 
                "vala_code_context_push", 
                "vala_code_generator_emit", 
                "vala_source_file_unref", 
                "g_slice_alloc0", 
                "g_strcmp0", 
                "g_realloc_n", 
                "vala_genie_parser_parse", 
                "g_mkstemp", 
                "close", 
                "g_option_context_parse", 
                "g_main_loop_run", 
                "g_spawn_error_quark", 
                "vala_code_context_set_experimental", 
                "vala_code_writer_set_cheader_override", 
                "vala_parser_new", 
                "vala_gir_parser_new", 
                "g_malloc0", 
                "vala_parser_parse", 
                "vala_code_context_add_external_package", 
                "vala_code_context_set_directory", 
                "g_type_class_peek_parent", 
                "vala_code_context_set_deprecated", 
                "vala_code_writer_new", 
                "vala_code_context_set_mem_profiler", 
                "vala_code_context_realpath", 
                "g_type_check_value_holds", 
                "fwrite", 
                "g_option_context_free", 
                "g_once_init_enter", 
                "g_main_loop_quit", 
                "vala_code_context_add_source_file", 
                "g_type_name", 
                "vala_ccode_compiler_unref", 
                "g_type_fundamental_next", 
                "vala_code_context_set_codegen", 
                "g_type_check_instance_cast", 
                "g_clear_error", 
                "g_strndup", 
                "g_strconcat", 
                "vala_code_visitor_unref", 
                "vala_code_context_set_profile", 
                "g_type_check_class_cast", 
                "vala_code_context_set_header_filename", 
                "g_spawn_async", 
                "__libc_start_main", 
                "g_unlink", 
                "vala_code_context_set_target_glib_major", 
                "vala_code_context_set_checking", 
                "g_path_get_basename", 
                "g_main_loop_unref", 
                "vala_ccode_compiler_new", 
                "_Jv_RegisterClasses", 
                "vala_code_context_set_debug", 
                "g_option_context_set_help_enabled", 
                "g_type_register_fundamental", 
                "vala_report_get_warnings", 
                "vala_ccode_compiler_compile", 
                "vala_code_context_unref", 
                "g_type_class_add_private", 
                "g_malloc0_n", 
                "vala_code_context_set_verbose_mode", 
                "g_getenv", 
                "vala_code_context_set_output", 
                "g_quark_to_string", 
                "vala_code_context_set_internal_header_filename", 
                "vala_gir_writer_new", 
                "g_return_if_fail_warning", 
                "__gmon_start__", 
                "__isoc99_sscanf", 
                "g_type_instance_get_private", 
                "vala_code_context_set_use_fast_vapi", 
                "g_path_is_absolute", 
                "vala_report_set_verbose_errors", 
                "vala_code_context_check", 
                "g_param_spec_internal", 
                "vala_report_set_enable_warnings", 
                "g_slice_free1", 
                "g_utf8_strrchr", 
                "vala_code_context_add_source_filename", 
                "g_str_has_suffix", 
                "g_error_free", 
                "g_free", 
                "g_option_context_new", 
                "g_value_type_compatible", 
                "vala_genie_parser_new", 
                "g_type_check_instance_is_a", 
                "vala_source_file_new", 
                "__stack_chk_fail", 
                "vala_code_context_set_experimental_non_null", 
                "vala_code_context_set_basedir", 
                "g_option_context_add_main_entries", 
                "vala_code_context_set_assert", 
                "vala_code_writer_write_file", 
                "vala_code_context_write_dependencies", 
                "vala_code_context_set_run_output", 
                "vala_code_context_set_includedir", 
                "vala_code_context_get_target_glib_major", 
                "setlocale", 
                "vala_code_context_set_entry_point_name", 
                "g_main_loop_new", 
                "vala_code_context_get_codegen", 
                "__fprintf_chk", 
                "vala_code_context_set_thread", 
                "g_type_is_a", 
                "g_strcanon", 
                "g_child_watch_add_full", 
                "g_get_tmp_dir", 
                "vala_code_context_set_target_glib_minor", 
                "vala_code_context_get_report"
            ], 
            "rpm": "vala-0.20.1-3.el7.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Version": " 0.20.1", 
            "Name": " vala", 
            "License": " LGPLv2+ and BSD", 
            "URL": " http://live.gnome.org/Vala", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " x86-017.build.eng.bos.redhat.com", 
            "Description": "\nVala is a new programming language that aims to bring modern programming\nlanguage features to GNOME developers without imposing any additional\nruntime requirements and without using a different ABI compared to\napplications and libraries written in C.\n\nvalac, the Vala compiler, is a self-hosting compiler that translates\nVala source code into C source and header files. It uses the GObject\ntype system to create classes and interfaces declared in the Vala source\ncode. It's also planned to generate GIDL files when gobject-\nintrospection is ready.\n\nThe syntax of Vala is similar to C#, modified to better fit the GObject\ntype system.\n", 
            "Build Date": " Mon 27 Jan 2014 02:39:15 PM EST", 
            "Vendor": " Red Hat, Inc.", 
            "Source RPM": " vala-0.20.1-3.el7.src.rpm", 
            "warning": " /home/jason/fctl/swap/3/vala-0.20.1-3.el7.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID fd431d51: NOKEY", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Wed 02 Apr 2014 05:47:14 PM EDT, Key ID 199e2f91fd431d51", 
            "Release": " 3.el7", 
            "Group": " Unspecified", 
            "Packager": " Red Hat, Inc. <http://bugzilla.redhat.com/bugzilla>", 
            "Summary": " A modern programming language for GNOME", 
            "Size": " 9158772"
        }
    }
}