{
    "results": {
        "usr/lib/libsecret-1_so_0_0_0": {
            "report-functions": [
                "gcry_mpi_snew", 
                "_Jv_RegisterClasses", 
                "g_dbus_proxy_call", 
                "g_assertion_message_expr", 
                "g_variant_get_child_value", 
                "g_initable_new", 
                "g_list_free_full", 
                "g_dbus_connection_emit_signal", 
                "g_param_spec_variant", 
                "g_main_context_iteration", 
                "g_variant_unref", 
                "g_simple_async_result_is_valid", 
                "g_simple_async_result_propagate_error", 
                "munmap", 
                "malloc", 
                "g_param_spec_string", 
                "mlock", 
                "g_mutex_clear", 
                "g_dbus_proxy_call_sync", 
                "g_main_context_push_thread_default", 
                "g_hash_table_destroy", 
                "g_variant_n_children", 
                "g_variant_iter_free", 
                "g_variant_new", 
                "gcry_malloc", 
                "g_object_add_weak_pointer", 
                "g_variant_new_objv", 
                "g_variant_type_dup_string", 
                "g_list_copy", 
                "g_ptr_array_new", 
                "g_flags_register_static", 
                "__assert_fail", 
                "g_dbus_interface_skeleton_get_type", 
                "memmove", 
                "g_simple_async_result_set_op_res_gpointer", 
                "g_variant_builder_new", 
                "g_simple_async_result_get_op_res_gpointer", 
                "g_type_interface_peek", 
                "g_variant_get_string", 
                "g_variant_iter_next_value", 
                "g_hash_table_get_values", 
                "g_type_check_instance_cast", 
                "pthread_mutex_destroy", 
                "g_dbus_method_invocation_get_method_info", 
                "gcry_strerror", 
                "g_strdup_printf", 
                "pthread_mutex_init", 
                "g_value_set_variant", 
                "g_value_get_string", 
                "g_simple_async_result_get_type", 
                "g_once_init_leave", 
                "g_main_context_pop_thread_default", 
                "g_value_set_uint64", 
                "g_source_unref", 
                "g_variant_is_of_type", 
                "g_variant_iter_next", 
                "g_dbus_proxy_get_object_path", 
                "g_hash_table_insert", 
                "g_dbus_error_get_remote_error", 
                "g_list_free", 
                "g_variant_get_child", 
                "g_mutex_init", 
                "gcry_mpi_cmp_ui", 
                "g_variant_type_new", 
                "g_async_initable_new_finish", 
                "g_value_init", 
                "g_logv", 
                "g_variant_iter_loop", 
                "g_value_get_flags", 
                "g_type_add_instance_private", 
                "g_datalist_id_set_data_full", 
                "g_variant_builder_unref", 
                "g_variant_builder_init", 
                "g_string_free", 
                "g_strcmp0", 
                "srand", 
                "g_hash_table_iter_next", 
                "g_ptr_array_new_with_free_func", 
                "g_string_insert_c", 
                "g_hash_table_new", 
                "__cxa_finalize", 
                "g_hash_table_lookup", 
                "g_variant_builder_end", 
                "g_simple_async_result_get_op_res_gboolean", 
                "g_variant_new_from_data", 
                "gcry_mpi_cmp", 
                "g_source_destroy", 
                "gcry_is_secure", 
                "g_hash_table_unref", 
                "g_once_init_enter", 
                "g_string_sized_new", 
                "g_object_new", 
                "g_type_is_a", 
                "strchr", 
                "g_simple_async_result_set_error", 
                "g_dbus_proxy_get_cached_property", 
                "g_object_get_property", 
                "g_dbus_connection_call_finish", 
                "gcry_md_setkey", 
                "g_value_set_flags", 
                "g_getenv", 
                "g_object_remove_weak_pointer", 
                "g_value_take_boxed", 
                "g_quark_to_string", 
                "g_mutex_unlock", 
                "getenv", 
                "gcry_set_fatalerror_handler", 
                "g_main_context_unref", 
                "g_value_get_uint64", 
                "g_type_instance_get_private", 
                "g_malloc0_n", 
                "g_cancellable_get_type", 
                "free", 
                "g_dbus_method_invocation_get_message", 
                "g_variant_is_object_path", 
                "g_type_class_add_private", 
                "gcry_check_version", 
                "gcry_mpi_print", 
                "g_type_interface_peek_parent", 
                "g_variant_get", 
                "g_signal_emit_by_name", 
                "g_enum_get_value", 
                "g_param_spec_boxed", 
                "g_dbus_proxy_set_interface_info", 
                "g_hash_table_get_type", 
                "_ITM_deregisterTMCloneTable", 
                "g_dbus_proxy_get_name_owner", 
                "g_dbus_connection_call_sync", 
                "g_type_class_unref", 
                "g_value_get_uint", 
                "memchr", 
                "strrchr", 
                "g_source_set_callback", 
                "strerror", 
                "gcry_mpi_powm", 
                "g_error_matches", 
                "g_strdup", 
                "gcry_cipher_decrypt", 
                "pthread_mutex_unlock", 
                "g_async_result_get_type", 
                "g_mutex_lock", 
                "g_simple_async_result_complete_in_idle", 
                "g_utf8_validate", 
                "strlen", 
                "__stack_chk_fail", 
                "g_variant_ref_sink", 
                "g_object_unref", 
                "g_idle_source_new", 
                "_ITM_registerTMCloneTable", 
                "g_variant_type_free", 
                "g_test_run", 
                "g_signal_accumulator_true_handled", 
                "gcry_md_open", 
                "g_hash_table_ref", 
                "g_object_set_property", 
                "g_variant_get_boolean", 
                "gcry_md_close", 
                "g_simple_async_result_complete", 
                "g_value_set_object", 
                "getpagesize", 
                "mmap", 
                "g_hash_table_new_full", 
                "g_object_interface_install_property", 
                "memcpy", 
                "g_list_prepend", 
                "g_object_notify_by_pspec", 
                "g_source_set_name", 
                "g_dbus_proxy_get_connection", 
                "g_signal_emitv", 
                "g_str_has_prefix", 
                "gcry_cipher_setkey", 
                "g_return_if_fail_warning", 
                "g_type_class_peek_parent", 
                "g_slice_free1", 
                "g_value_get_int64", 
                "__gmon_start__", 
                "g_list_reverse", 
                "g_intern_static_string", 
                "g_quark_try_string", 
                "g_value_get_uchar", 
                "g_dbus_connection_signal_unsubscribe", 
                "g_hash_table_iter_init", 
                "g_variant_type_checked_", 
                "g_dbus_connection_call", 
                "g_str_hash", 
                "g_dbus_proxy_set_cached_property", 
                "g_dbus_method_invocation_return_value", 
                "g_variant_lookup", 
                "gcry_mpi_new", 
                "g_unix_fd_list_get_type", 
                "g_param_spec_uint64", 
                "g_object_get", 
                "g_main_context_get_thread_default", 
                "g_value_copy", 
                "g_value_get_variant", 
                "gcry_cipher_close", 
                "g_simple_async_result_new", 
                "memset", 
                "gcry_mpi_scan", 
                "g_bus_unwatch_name", 
                "g_object_set", 
                "g_variant_builder_add_value", 
                "g_main_context_new", 
                "g_object_class_find_property", 
                "g_type_check_class_cast", 
                "g_variant_type_copy", 
                "g_variant_dup_string", 
                "g_clear_error", 
                "gcry_control", 
                "__fprintf_chk", 
                "g_value_get_boxed", 
                "gcry_md_get_algo_dlen", 
                "g_value_get_double", 
                "g_malloc0", 
                "g_type_register_static_simple", 
                "g_dbus_connection_get_type", 
                "g_dbus_method_invocation_return_error", 
                "g_dbus_error_register_error_domain", 
                "pthread_mutex_lock", 
                "g_async_initable_new_async", 
                "g_dbus_interface_info_lookup_signal", 
                "g_set_error", 
                "g_dbus_proxy_get_name", 
                "g_type_class_ref", 
                "g_type_name", 
                "g_cancellable_new", 
                "g_ptr_array_free", 
                "g_object_thaw_notify", 
                "g_dbus_proxy_get_type", 
                "g_type_class_adjust_private_offset", 
                "g_simple_async_result_take_error", 
                "g_log", 
                "g_dbus_gvalue_to_gvariant", 
                "gcry_set_log_handler", 
                "g_simple_async_result_set_op_res_gboolean", 
                "g_variant_new_string", 
                "gcry_create_nonce", 
                "g_list_concat", 
                "g_dbus_connection_signal_subscribe", 
                "gcry_mpi_clear_highbit", 
                "g_main_loop_new", 
                "g_dbus_error_quark", 
                "gcry_mpi_aprint", 
                "g_param_spec_object", 
                "g_signal_new", 
                "realloc", 
                "munlock", 
                "g_dbus_interface_skeleton_get_connections", 
                "g_param_spec_flags", 
                "gcry_md_map_name", 
                "g_assertion_message", 
                "g_variant_get_objv", 
                "g_dbus_gvariant_to_gvalue", 
                "g_error_free", 
                "g_str_equal", 
                "g_enum_register_static", 
                "gcry_cipher_setiv", 
                "gcry_set_outofcore_handler", 
                "g_malloc", 
                "g_ascii_strtoll", 
                "g_source_remove", 
                "gcry_cipher_open", 
                "g_value_unset", 
                "g_type_interface_add_prerequisite", 
                "g_dbus_interface_skeleton_get_object_path", 
                "gcry_free", 
                "g_dgettext", 
                "g_async_result_get_source_object", 
                "g_source_set_priority", 
                "g_ascii_toupper", 
                "g_realloc", 
                "g_object_notify", 
                "g_strv_length", 
                "gcry_md_read", 
                "g_datalist_clear", 
                "g_signal_lookup", 
                "g_object_class_install_property", 
                "g_object_freeze_notify", 
                "g_value_get_int", 
                "memcmp", 
                "g_variant_take_ref", 
                "g_object_class_override_property", 
                "strcpy", 
                "g_ptr_array_unref", 
                "g_boxed_type_register_static", 
                "g_variant_get_type_string", 
                "g_slice_alloc0", 
                "g_bus_watch_name_on_connection", 
                "__errno_location", 
                "gcry_set_allocation_handler", 
                "g_variant_equal", 
                "g_dbus_interface_skeleton_get_connection", 
                "g_main_loop_unref", 
                "g_dbus_proxy_get_cached_property_names", 
                "g_type_check_instance_is_a", 
                "g_value_get_boolean", 
                "g_dbus_proxy_get_interface_name", 
                "g_timeout_add", 
                "g_variant_ref", 
                "gcry_mpi_randomize", 
                "g_strndup", 
                "g_string_append", 
                "g_strv_get_type", 
                "g_variant_new_boolean", 
                "g_main_loop_run", 
                "g_strfreev", 
                "gcry_md_write", 
                "gcry_md_reset", 
                "g_cancellable_connect", 
                "g_cancellable_cancel", 
                "g_type_add_interface_static", 
                "g_free", 
                "gcry_mpi_get_nbits", 
                "g_dbus_method_invocation_get_type", 
                "g_variant_builder_add", 
                "g_variant_builder_clear", 
                "g_source_attach", 
                "g_value_dup_object", 
                "g_dbus_proxy_call_finish", 
                "g_main_context_ref_thread_default", 
                "g_value_set_boolean", 
                "g_cclosure_marshal_generic", 
                "gcry_mpi_release", 
                "g_dbus_message_get_unix_fd_list", 
                "g_value_take_string", 
                "g_param_spec_boolean", 
                "g_dbus_error_strip_remote_error", 
                "g_object_ref", 
                "g_main_loop_quit", 
                "g_variant_get_uint64", 
                "g_dbus_interface_info_lookup_property", 
                "g_variant_get_fixed_array", 
                "g_async_initable_get_type", 
                "gcry_malloc_secure", 
                "gcry_cipher_encrypt", 
                "g_initable_get_type", 
                "g_ptr_array_add"
            ], 
            "rpm": "libsecret-0.18.5-2.el7.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/libsecret-1.so.0.0.0"
        }, 
        "usr/bin/secret-tool": {
            "report-functions": [
                "g_printerr", 
                "g_strerror", 
                "read", 
                "secret_password_wipe", 
                "g_strdup", 
                "g_type_check_instance_cast", 
                "setlocale", 
                "g_utf8_validate", 
                "secret_password_free", 
                "textdomain", 
                "g_dbus_proxy_get_type", 
                "secret_value_unref", 
                "g_list_free_full", 
                "secret_service_store_sync", 
                "g_option_context_new", 
                "g_hash_table_new_full", 
                "g_print", 
                "secret_service_clear_sync", 
                "g_malloc0", 
                "_ITM_registerTMCloneTable", 
                "exit", 
                "g_str_equal", 
                "g_date_time_format", 
                "g_object_unref", 
                "g_strfreev", 
                "g_hash_table_iter_next", 
                "secret_value_get", 
                "secret_service_get_sync", 
                "secret_item_get_attributes", 
                "g_return_if_fail_warning", 
                "getpass", 
                "g_hash_table_insert", 
                "g_str_hash", 
                "secret_value_new_full", 
                "secret_item_get_schema_name", 
                "secret_value_get_content_type", 
                "g_get_prgname", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "write", 
                "secret_item_get_label", 
                "secret_item_get_created", 
                "__stack_chk_fail", 
                "bind_textdomain_codeset", 
                "g_option_context_add_main_entries", 
                "isatty", 
                "g_str_has_prefix", 
                "g_hash_table_unref", 
                "g_date_time_new_from_unix_utc", 
                "g_hash_table_iter_init", 
                "g_free", 
                "g_dbus_proxy_get_object_path", 
                "g_date_time_unref", 
                "g_strconcat", 
                "g_option_context_parse", 
                "__libc_start_main", 
                "__errno_location", 
                "_Jv_RegisterClasses", 
                "bindtextdomain", 
                "secret_service_search_sync", 
                "g_option_context_free", 
                "secret_item_get_modified"
            ], 
            "rpm": "libsecret-0.18.5-2.el7.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/bin/secret-tool"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Version": " 0.18.5", 
            "Name": " libsecret", 
            "License": " LGPLv2+", 
            "URL": " https://wiki.gnome.org/Projects/Libsecret", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " x86-030.build.eng.bos.redhat.com", 
            "Description": "\nlibsecret is a library for storing and retrieving passwords and other secrets.\nIt communicates with the \"Secret Service\" using DBus. gnome-keyring and\nKSecretService are both implementations of a Secret Service.\n", 
            "Build Date": " Tue 21 Mar 2017 11:51:28 AM EDT", 
            "Vendor": " Red Hat, Inc.", 
            "Source RPM": " libsecret-0.18.5-2.el7.src.rpm", 
            "warning": " /home/jason/fctl/swap/1/libsecret-0.18.5-2.el7.i686.rpm: Header V3 RSA/SHA256 Signature, key ID fd431d51: NOKEY", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Tue 21 Mar 2017 12:59:35 PM EDT, Key ID 199e2f91fd431d51", 
            "Release": " 2.el7", 
            "Group": " Unspecified", 
            "Packager": " Red Hat, Inc. <http://bugzilla.redhat.com/bugzilla>", 
            "Summary": " Library for storing and retrieving passwords and other secrets", 
            "Size": " 469678"
        }
    }
}