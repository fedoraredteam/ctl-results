{
    "results": {
        "usr/lib64/libmediaart-2_0_so_0_901_0": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/libmediaart-2.0.so.0.901.0", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "g_input_stream_read", 
                "gdk_pixbuf_loader_get_pixbuf", 
                "g_type_class_peek_parent", 
                "g_mount_is_shadowed", 
                "g_task_get_type", 
                "g_hash_table_foreach", 
                "g_checksum_free", 
                "g_strchug", 
                "g_get_user_cache_dir", 
                "g_cancellable_set_error_if_cancelled", 
                "_ITM_deregisterTMCloneTable", 
                "g_hash_table_iter_next", 
                "g_dir_close", 
                "g_variant_unref", 
                "g_string_free", 
                "g_utf8_normalize", 
                "g_build_filename", 
                "dcgettext", 
                "g_file_get_type", 
                "g_type_add_instance_private", 
                "g_once_init_enter", 
                "g_malloc", 
                "g_input_stream_get_type", 
                "g_task_set_priority", 
                "g_str_has_suffix", 
                "_ITM_registerTMCloneTable", 
                "g_node_new", 
                "g_memdup", 
                "g_mkdir_with_parents", 
                "g_file_new_for_uri", 
                "g_file_read", 
                "g_dir_open", 
                "g_signal_connect_data", 
                "g_hash_table_insert", 
                "g_string_append_len", 
                "g_volume_get_drive", 
                "g_dbus_connection_call_finish", 
                "__stack_chk_fail", 
                "gdk_pixbuf_loader_write", 
                "g_initable_get_type", 
                "symlink", 
                "g_propagate_error", 
                "g_strfreev", 
                "g_filename_to_utf8", 
                "g_hash_table_lookup", 
                "g_bus_get_sync", 
                "rename", 
                "g_node_destroy", 
                "g_volume_get_identifier", 
                "g_file_error_quark", 
                "g_initable_new", 
                "g_mount_get_uuid", 
                "utime", 
                "g_task_return_boolean", 
                "g_hash_table_remove", 
                "g_object_unref", 
                "gdk_pixbuf_new_from_file", 
                "gdk_pixbuf_loader_set_size", 
                "g_list_length", 
                "gdk_pixbuf_loader_close", 
                "g_volume_monitor_get_mounts", 
                "g_cancellable_is_cancelled", 
                "g_string_new", 
                "g_strsplit", 
                "g_timeout_add_seconds_full", 
                "g_unix_mount_at", 
                "g_log", 
                "g_strconcat", 
                "g_io_error_quark", 
                "g_file_copy", 
                "g_dir_read_name", 
                "g_slice_alloc", 
                "g_strerror", 
                "__cxa_finalize", 
                "g_path_get_basename", 
                "g_hash_table_destroy", 
                "g_type_add_interface_static", 
                "g_slist_prepend", 
                "g_type_instance_get_private", 
                "g_node_insert_before", 
                "g_strrstr", 
                "g_type_class_add_private", 
                "g_strdup", 
                "g_set_error_literal", 
                "g_file_get_parent", 
                "g_slice_free1", 
                "g_set_error", 
                "strstr", 
                "g_checksum_get_string", 
                "g_type_check_instance_is_a", 
                "g_hash_table_iter_init", 
                "g_hash_table_unref", 
                "g_checksum_update", 
                "__errno_location", 
                "g_file_get_path", 
                "g_mount_get_name", 
                "g_free", 
                "g_type_check_instance_cast", 
                "g_mount_get_root", 
                "g_variant_new", 
                "g_input_stream_read_all", 
                "g_clear_error", 
                "gdk_pixbuf_loader_new", 
                "g_strjoinv", 
                "g_utf8_strchr", 
                "g_type_class_adjust_private_offset", 
                "g_list_free", 
                "g_str_hash", 
                "g_volume_monitor_get", 
                "g_task_set_task_data", 
                "g_object_new", 
                "_Jv_RegisterClasses", 
                "g_signal_new", 
                "gdk_pixbuf_save", 
                "g_task_run_in_thread", 
                "g_value_peek_pointer", 
                "g_str_has_prefix", 
                "g_file_new_for_path", 
                "g_str_equal", 
                "g_return_if_fail_warning", 
                "g_quark_from_static_string", 
                "g_source_remove", 
                "g_unlink", 
                "g_file_set_contents", 
                "g_list_prepend", 
                "g_signal_emit", 
                "g_file_query_info", 
                "g_file_get_uri", 
                "g_string_append", 
                "strlen", 
                "g_utf8_strdown", 
                "g_task_propagate_boolean", 
                "g_signal_connect_object", 
                "g_dbus_connection_call", 
                "g_type_register_static_simple", 
                "g_type_check_class_cast", 
                "g_error_new", 
                "g_strchomp", 
                "g_file_info_get_attribute_uint64", 
                "g_object_ref", 
                "g_unix_mount_get_fs_type", 
                "g_task_return_error", 
                "g_strcmp0", 
                "g_intern_static_string", 
                "g_task_new", 
                "g_task_is_valid", 
                "__gmon_start__", 
                "g_list_foreach", 
                "g_compute_checksum_for_string", 
                "g_mount_guess_content_type_sync", 
                "g_unix_mount_free", 
                "g_file_test", 
                "g_once_init_leave", 
                "g_node_traverse", 
                "g_volume_can_mount", 
                "g_hash_table_new_full", 
                "g_slice_alloc0", 
                "g_mount_get_volume", 
                "g_checksum_new"
            ], 
            "rpm": "libmediaart-1.9.1-1.el7.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Version": " 1.9.1", 
            "Name": " libmediaart", 
            "License": " LGPLv2+", 
            "URL": " https://github.com/curlybeast/libmediaart", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " x86-020.build.eng.bos.redhat.com", 
            "Description": "\nLibrary tasked with managing, extracting and handling media art caches.\n", 
            "Build Date": " Thu 09 Mar 2017 06:13:55 PM EST", 
            "Vendor": " Red Hat, Inc.", 
            "Source RPM": " libmediaart-1.9.1-1.el7.src.rpm", 
            "warning": " /home/jason/fctl/swap/1/libmediaart-1.9.1-1.el7.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID fd431d51: NOKEY", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Wed 29 Mar 2017 07:29:43 AM EDT, Key ID 199e2f91fd431d51", 
            "Release": " 1.el7", 
            "Group": " Unspecified", 
            "Packager": " Red Hat, Inc. <http://bugzilla.redhat.com/bugzilla>", 
            "Summary": " Library for managing media art caches", 
            "Size": " 94175"
        }
    }
}