{
    "results": {
        "usr/bin/fi_info": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/fi_info", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "getopt_long", 
                "putchar", 
                "fi_dupinfo", 
                "puts", 
                "strcmp", 
                "fi_getinfo", 
                "_Jv_RegisterClasses", 
                "__libc_start_main", 
                "__strdup", 
                "_ITM_deregisterTMCloneTable", 
                "__printf_chk", 
                "fi_tostr", 
                "__fprintf_chk", 
                "fi_freeparams", 
                "_ITM_registerTMCloneTable", 
                "__stack_chk_fail", 
                "fi_getparams", 
                "strtok", 
                "fi_freeinfo"
            ], 
            "rpm": "libfabric-1.1.0-2.el7.x86_64.rpm"
        }, 
        "usr/lib64/libfabric_so_1_1_0": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/libfabric.so.1.1.0", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "nl_close", 
                "pthread_self", 
                "ibv_create_comp_channel", 
                "socketpair", 
                "nl_socket_get_local_port", 
                "psm_ep_connect", 
                "ibv_get_device_list", 
                "nlmsg_alloc_simple", 
                "nl_socket_alloc", 
                "epoll_ctl", 
                "nlmsg_set_proto", 
                "pthread_mutex_destroy", 
                "sendto", 
                "pthread_setaffinity_np", 
                "__sprintf_chk", 
                "strerror", 
                "nlmsg_hdr", 
                "__stack_chk_fail", 
                "pthread_spin_destroy", 
                "pthread_attr_init", 
                "rdma_free_devices", 
                "fputs", 
                "__strsep_g", 
                "psm_mq_finalize", 
                "rdma_migrate_id", 
                "rdma_create_ep", 
                "malloc", 
                "nl_nlmsgtype2str", 
                "epoll_create", 
                "usleep", 
                "pthread_setcanceltype", 
                "if_nametoindex", 
                "gai_strerror", 
                "strcmp", 
                "pthread_attr_destroy", 
                "strtol", 
                "__ctype_b_loc", 
                "read", 
                "pthread_spin_unlock", 
                "rdma_create_event_channel", 
                "fwrite", 
                "__vsnprintf_chk", 
                "psm_error_register_handler", 
                "psm_error_get_string", 
                "pthread_exit", 
                "dlsym", 
                "accept", 
                "ibv_reg_mr", 
                "getsockname", 
                "getnameinfo", 
                "ibv_query_port", 
                "__printf_chk", 
                "psm_ep_num_devunits", 
                "__assert_fail", 
                "ibv_dealloc_pd", 
                "nlmsg_free", 
                "ibv_wc_status_str", 
                "perror", 
                "getsockopt", 
                "sscanf", 
                "select", 
                "psm_mq_ipeek", 
                "psm_mq_irecv", 
                "rdma_destroy_event_channel", 
                "psm_mq_init", 
                "getenv", 
                "pthread_cond_timedwait", 
                "realloc", 
                "ibv_alloc_pd", 
                "psm_am_register_handlers", 
                "psm_mq_send", 
                "ibv_free_device_list", 
                "ibv_get_cq_event", 
                "rdma_connect", 
                "_ITM_deregisterTMCloneTable", 
                "exit", 
                "__ctype_toupper_loc", 
                "rdma_reject", 
                "dlclose", 
                "__snprintf_chk", 
                "strnlen", 
                "nla_put_u32", 
                "nl_connect", 
                "madvise", 
                "psm_ep_epid_lookup", 
                "rdma_freeaddrinfo", 
                "eventfd", 
                "calloc", 
                "psm_am_get_parameters", 
                "close", 
                "memcpy", 
                "mmap", 
                "nlmsg_size", 
                "rdma_resolve_route", 
                "nlmsg_data", 
                "if_indextoname", 
                "pthread_yield", 
                "psm_init", 
                "rdma_destroy_ep", 
                "freeaddrinfo", 
                "bind", 
                "strncmp", 
                "scandir", 
                "rdma_resolve_addr", 
                "rdma_bind_addr", 
                "rdma_get_devices", 
                "nlmsg_parse", 
                "ibv_ack_cq_events", 
                "psm_epaddr_getctxt", 
                "pthread_cond_wait", 
                "__errno_location", 
                "ftruncate", 
                "closedir", 
                "psm_ep_open", 
                "pthread_mutex_lock", 
                "readdir", 
                "rdma_create_id", 
                "shm_open", 
                "psm_mq_iprobe", 
                "dlerror", 
                "open", 
                "recv", 
                "psm_mq_test", 
                "memcmp", 
                "__memcpy_chk", 
                "__fprintf_chk", 
                "recvfrom", 
                "ibv_create_qp", 
                "send", 
                "pthread_create", 
                "pthread_mutex_init", 
                "nl_send", 
                "ibv_create_cq", 
                "free", 
                "socket", 
                "psm_mq_cancel", 
                "_ITM_registerTMCloneTable", 
                "snprintf", 
                "psm_am_reply_short", 
                "nl_socket_modify_cb", 
                "gethostname", 
                "rdma_create_qp", 
                "clock_gettime", 
                "rdma_accept", 
                "pthread_spin_lock", 
                "memset", 
                "sysconf", 
                "psm_finalize", 
                "pthread_join", 
                "ibv_destroy_qp", 
                "connect", 
                "_Jv_RegisterClasses", 
                "rdma_listen", 
                "pthread_mutex_unlock", 
                "ibv_query_device", 
                "__asprintf_chk", 
                "ibv_dereg_mr", 
                "__strncpy_chk", 
                "pthread_cond_init", 
                "ibv_query_gid", 
                "strncpy", 
                "munmap", 
                "inet_ntoa", 
                "epoll_wait", 
                "setsockopt", 
                "ibv_get_device_name", 
                "opendir", 
                "pthread_setcancelstate", 
                "psm_ep_close", 
                "__cxa_finalize", 
                "shm_unlink", 
                "pthread_cond_destroy", 
                "pthread_cond_signal", 
                "rdma_ack_cm_event", 
                "nlmsg_append", 
                "__strcpy_chk", 
                "listen", 
                "psm_poll", 
                "ioctl", 
                "ibv_register_driver", 
                "abort", 
                "mremap", 
                "nl_socket_free", 
                "strcasecmp", 
                "inet_ntop", 
                "shutdown", 
                "time", 
                "pthread_once", 
                "fcntl", 
                "nl_socket_disable_seq_check", 
                "ibv_close_device", 
                "ibv_destroy_comp_channel", 
                "pthread_spin_init", 
                "rdma_getaddrinfo", 
                "__fdelt_chk", 
                "setenv", 
                "psm_ep_open_opts_get_defaults", 
                "__xstat", 
                "strlen", 
                "mmap64", 
                "__gmon_start__", 
                "sleep", 
                "psm_epaddr_setctxt", 
                "ibv_read_sysfs_file", 
                "write", 
                "psm_am_request_short", 
                "pthread_attr_setdetachstate", 
                "psm_mq_isend", 
                "nl_recvmsgs_default", 
                "getaddrinfo", 
                "ibv_destroy_cq", 
                "nl_socket_get_fd", 
                "rdma_destroy_id", 
                "rdma_get_cm_event", 
                "nla_get_u32", 
                "ibv_open_device", 
                "poll", 
                "__strdup", 
                "gettimeofday"
            ], 
            "rpm": "libfabric-1.1.0-2.el7.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Version": " 1.1.0", 
            "Name": " libfabric", 
            "License": " GPLv2 or BSD", 
            "URL": " http://www.github.com/ofiwg/libfabric", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " x86-034.build.eng.bos.redhat.com", 
            "Description": "\nlibfabric provides a user-space API to access high-performance fabric\nservices, such as RDMA.\n", 
            "Build Date": " Wed 30 Sep 2015 12:04:09 PM EDT", 
            "Vendor": " Red Hat, Inc.", 
            "Source RPM": " libfabric-1.1.0-2.el7.src.rpm", 
            "warning": " /home/jason/fctl/swap/1/libfabric-1.1.0-2.el7.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID fd431d51: NOKEY", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Wed 21 Oct 2015 07:17:23 AM EDT, Key ID 199e2f91fd431d51", 
            "Release": " 2.el7", 
            "Group": " System Environment/Libraries", 
            "Packager": " Red Hat, Inc. <http://bugzilla.redhat.com/bugzilla>", 
            "Summary": " User-space RDMA Fabric Interfaces", 
            "Size": " 548447"
        }
    }
}