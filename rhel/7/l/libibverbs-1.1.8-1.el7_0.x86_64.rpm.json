{
    "results": {
        "usr/lib64/libibverbs_so_1_0_0": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/libibverbs.so.1.0.0", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "pthread_mutex_unlock", 
                "memset", 
                "sendto", 
                "memmove", 
                "__strcpy_chk", 
                "nlmsg_free", 
                "rtnl_route_nh_get_gateway", 
                "rtnl_link_is_vlan", 
                "nl_socket_get_fd", 
                "nl_socket_free", 
                "rtnl_neigh_set_ifindex", 
                "socket", 
                "getrlimit", 
                "nl_cache_mngt_provide", 
                "nl_send_auto_complete", 
                "rtnl_link_put", 
                "nl_connect", 
                "dlclose", 
                "_ITM_deregisterTMCloneTable", 
                "rtnl_route_alloc_cache", 
                "opendir", 
                "nl_socket_disable_seq_check", 
                "bind", 
                "__snprintf_chk", 
                "strlen", 
                "_ITM_registerTMCloneTable", 
                "fgets", 
                "timerfd_create", 
                "nl_addr_get_len", 
                "nla_put_addr", 
                "__strndup", 
                "fopen", 
                "rtnl_route_get_pref_src", 
                "sscanf", 
                "open", 
                "nl_addr_get_family", 
                "timerfd_settime", 
                "freeaddrinfo", 
                "write", 
                "rtnl_link_get", 
                "pthread_once", 
                "snprintf", 
                "rtnl_neigh_get", 
                "__cxa_atexit", 
                "malloc", 
                "closedir", 
                "nl_addr_get_prefixlen", 
                "__cxa_finalize", 
                "nl_addr_clone", 
                "nl_geterror", 
                "__stack_chk_fail", 
                "pthread_mutex_trylock", 
                "rtnl_link_vlan_get_id", 
                "getifaddrs", 
                "strtol", 
                "nl_addr_put", 
                "rtnl_route_get_type", 
                "__asprintf_chk", 
                "rtnl_neigh_put", 
                "pthread_mutex_init", 
                "rtnl_route_nexthop_n", 
                "nl_socket_add_membership", 
                "nl_addr_fill_sockaddr", 
                "memcpy", 
                "nl_recvmsgs_default", 
                "if_nametoindex", 
                "dlopen", 
                "nl_close", 
                "nlmsg_alloc_simple", 
                "calloc", 
                "close", 
                "rtnl_link_alloc_cache", 
                "nl_addr_build", 
                "pthread_cond_wait", 
                "__xstat", 
                "nl_cache_refill", 
                "rtnl_neigh_alloc", 
                "rtnl_neigh_set_dst", 
                "nl_addr_get_binary_addr", 
                "nl_socket_alloc", 
                "__getdelim", 
                "getuid", 
                "geteuid", 
                "pthread_cond_init", 
                "__fprintf_chk", 
                "realloc", 
                "nl_addr_info", 
                "pthread_cond_signal", 
                "nl_socket_modify_cb", 
                "madvise", 
                "_Jv_RegisterClasses", 
                "__fdelt_chk", 
                "select", 
                "fwrite", 
                "__errno_location", 
                "posix_memalign", 
                "nl_msg_parse", 
                "nl_cache_mngt_unprovide", 
                "nl_object_match_filter", 
                "nl_cache_free", 
                "rtnl_route_nh_get_ifindex", 
                "dlerror", 
                "fclose", 
                "strcpy", 
                "getpid", 
                "__strdup", 
                "__gmon_start__", 
                "nl_addr_set_prefixlen", 
                "strstr", 
                "free", 
                "pthread_mutex_lock", 
                "rtnl_neigh_get_lladdr", 
                "nlmsg_append", 
                "rtnl_neigh_alloc_cache", 
                "memcmp", 
                "nla_put_u32", 
                "read", 
                "freeifaddrs", 
                "readdir", 
                "rtnl_link_get_addr"
            ], 
            "rpm": "libibverbs-1.1.8-1.el7_0.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Version": " 1.1.8", 
            "Name": " libibverbs", 
            "License": " GPLv2 or BSD", 
            "URL": " https://www.openfabrics.org/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " x86-020.build.eng.bos.redhat.com", 
            "Description": "\nlibibverbs is a library that allows userspace processes to use RDMA\n\"verbs\" as described in the InfiniBand Architecture Specification and\nthe RDMA Protocol Verbs Specification.  This includes direct hardware\naccess from userspace to InfiniBand/iWARP adapters (kernel bypass) for\nfast path operations.\n\nFor this library to be useful, a device-specific plug-in module should\nalso be installed.\n", 
            "Build Date": " Thu 24 Jul 2014 01:53:09 PM EDT", 
            "Vendor": " Red Hat, Inc.", 
            "Source RPM": " libibverbs-1.1.8-1.el7_0.src.rpm", 
            "warning": " /home/jason/fctl/swap/1/libibverbs-1.1.8-1.el7_0.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID fd431d51: NOKEY", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Wed 07 Jan 2015 10:37:20 PM EST, Key ID 199e2f91fd431d51", 
            "Release": " 1.el7_0", 
            "Group": " System Environment/Libraries", 
            "Packager": " Red Hat, Inc. <http://bugzilla.redhat.com/bugzilla>", 
            "Summary": " A library for direct userspace use of RDMA (InfiniBand/iWARP) hardware", 
            "Size": " 127699"
        }
    }
}