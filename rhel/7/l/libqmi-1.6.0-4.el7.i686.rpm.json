{
    "results": {
        "usr/lib/libqmi-glib_so_1_0_0": {
            "report-functions": [
                "g_io_channel_write_chars", 
                "g_hash_table_foreach_remove", 
                "g_hash_table_insert", 
                "g_malloc0", 
                "g_io_channel_set_buffered", 
                "g_simple_async_result_propagate_error", 
                "strerror", 
                "g_object_ref", 
                "g_prefix_error", 
                "g_io_channel_set_flags", 
                "g_signal_handler_disconnect", 
                "g_hash_table_unref", 
                "g_io_channel_set_close_on_unref", 
                "g_simple_async_result_set_op_res_gboolean", 
                "g_byte_array_remove_range", 
                "g_async_initable_get_type", 
                "g_async_initable_new_async", 
                "g_object_get", 
                "g_error_matches", 
                "g_file_query_info_finish", 
                "__snprintf_chk", 
                "g_strdup", 
                "g_value_set_object", 
                "g_hash_table_new_full", 
                "g_value_dup_object", 
                "g_io_channel_shutdown", 
                "g_io_channel_read_chars", 
                "g_warn_message", 
                "g_byte_array_prepend", 
                "g_enum_register_static", 
                "g_once_init_enter", 
                "g_filename_display_name", 
                "g_array_insert_vals", 
                "g_type_class_peek_parent", 
                "g_byte_array_sized_new", 
                "g_string_append", 
                "g_object_unref", 
                "g_log", 
                "g_flags_register_static", 
                "g_simple_async_result_set_error", 
                "g_byte_array_set_size", 
                "g_error_new", 
                "g_hash_table_new", 
                "g_simple_async_result_set_from_error", 
                "_Jv_RegisterClasses", 
                "g_signal_connect_data", 
                "g_object_set", 
                "strlen", 
                "g_type_add_interface_static", 
                "g_simple_async_result_new", 
                "g_array_set_clear_func", 
                "g_param_spec_enum", 
                "g_slice_alloc", 
                "g_byte_array_ref", 
                "g_string_append_printf", 
                "g_signal_new", 
                "g_intern_static_string", 
                "g_source_remove", 
                "g_file_info_get_file_type", 
                "g_assertion_message_error", 
                "g_file_get_type", 
                "g_simple_async_result_complete_in_idle", 
                "g_signal_emit", 
                "g_simple_async_result_take_error", 
                "open", 
                "__gmon_start__", 
                "g_array_ref", 
                "g_propagate_error", 
                "g_set_error", 
                "__cxa_finalize", 
                "g_object_get_data", 
                "g_array_unref", 
                "g_hash_table_iter_next", 
                "g_type_class_add_private", 
                "g_object_set_data", 
                "__errno_location", 
                "g_free", 
                "g_slice_alloc0", 
                "g_value_set_enum", 
                "g_io_channel_unref", 
                "g_return_if_fail_warning", 
                "g_cancellable_disconnect", 
                "g_value_get_object", 
                "g_io_add_watch", 
                "g_byte_array_new_take", 
                "g_type_name", 
                "g_assertion_message_expr", 
                "g_simple_async_result_get_op_res_gpointer", 
                "g_timeout_add_seconds", 
                "g_type_check_instance_cast", 
                "g_simple_async_result_set_op_res_gpointer", 
                "g_async_result_get_type", 
                "g_byte_array_unref", 
                "g_value_set_uint", 
                "g_value_get_uint", 
                "g_object_new", 
                "g_error_free", 
                "g_direct_equal", 
                "g_once_init_leave", 
                "g_slice_free1", 
                "g_strdup_printf", 
                "g_object_class_install_property", 
                "g_type_check_class_cast", 
                "g_io_channel_set_encoding", 
                "g_assertion_message", 
                "g_async_result_get_source_object", 
                "g_file_query_info_async", 
                "g_hash_table_lookup", 
                "g_async_initable_new_finish", 
                "g_string_new", 
                "g_dbus_error_register_error_domain", 
                "g_simple_async_result_get_type", 
                "__stack_chk_fail", 
                "g_hash_table_remove", 
                "g_array_sized_new", 
                "g_type_check_instance_is_a", 
                "g_type_register_static_simple", 
                "g_value_get_enum", 
                "g_byte_array_append", 
                "g_idle_add", 
                "g_param_spec_uint", 
                "_ITM_registerTMCloneTable", 
                "g_file_get_path", 
                "g_string_free", 
                "g_array_append_vals", 
                "g_type_instance_get_private", 
                "g_malloc", 
                "g_simple_async_result_complete", 
                "g_cancellable_connect", 
                "g_param_spec_object", 
                "g_hash_table_size", 
                "g_io_channel_unix_new", 
                "_ITM_deregisterTMCloneTable", 
                "g_hash_table_iter_init", 
                "g_direct_hash", 
                "memcpy"
            ], 
            "rpm": "libqmi-1.6.0-4.el7.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/libqmi-glib.so.1.0.0"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Version": " 1.6.0", 
            "Name": " libqmi", 
            "License": " LGPLv2+", 
            "URL": " http://www.freedesktop.org/software/libqmi", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " x86-030.build.eng.bos.redhat.com", 
            "Description": "\nThis package contains the libraries that make it easier to use QMI functionality\nfrom applications that use glib.\n", 
            "Build Date": " Wed 22 Oct 2014 08:33:29 AM EDT", 
            "Vendor": " Red Hat, Inc.", 
            "Source RPM": " libqmi-1.6.0-4.el7.src.rpm", 
            "warning": " /home/jason/fctl/swap/1/libqmi-1.6.0-4.el7.i686.rpm: Header V3 RSA/SHA256 Signature, key ID fd431d51: NOKEY", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Wed 29 Oct 2014 06:54:05 AM EDT, Key ID 199e2f91fd431d51", 
            "Release": " 4.el7", 
            "Group": " Development/Libraries", 
            "Packager": " Red Hat, Inc. <http://bugzilla.redhat.com/bugzilla>", 
            "Summary": " Support library to use the Qualcomm MSM Interface (QMI) protocol", 
            "Size": " 1668102"
        }
    }
}