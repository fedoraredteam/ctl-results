{
    "results": {
        "usr/lib/libgsf-1_so_114_0_26": {
            "report-functions": [
                "chown", 
                "g_io_channel_shutdown", 
                "g_intern_static_string", 
                "__xmlGenericError", 
                "g_strerror", 
                "g_free", 
                "qsort", 
                "_ITM_registerTMCloneTable", 
                "g_string_append_len", 
                "g_slist_reverse", 
                "g_param_spec_string", 
                "g_value_set_float", 
                "g_file_error_from_errno", 
                "g_printerr", 
                "g_strndup", 
                "g_slist_prepend", 
                "g_direct_hash", 
                "g_ptr_array_sized_new", 
                "g_ptr_array_free", 
                "g_slist_nth_data", 
                "g_mkstemp", 
                "g_ascii_formatd", 
                "g_value_set_uint", 
                "g_convert", 
                "g_strdup_value_contents", 
                "inflateEnd", 
                "g_logv", 
                "g_value_set_string", 
                "g_value_get_string", 
                "g_file_info_get_name", 
                "g_type_class_peek", 
                "g_strfreev", 
                "g_value_array_free", 
                "g_slist_length", 
                "g_ascii_tolower", 
                "g_value_set_double", 
                "fseeko64", 
                "g_hash_table_steal", 
                "strchr", 
                "g_file_read", 
                "g_utf8_strchr", 
                "g_value_set_schar", 
                "g_direct_equal", 
                "g_value_get_schar", 
                "g_path_get_dirname", 
                "g_error_copy", 
                "xmlParseCharEncoding", 
                "fclose", 
                "memset", 
                "g_utf8_validate", 
                "BZ2_bzCompress", 
                "g_enum_register_static", 
                "g_string_sized_new", 
                "g_hash_table_remove", 
                "xmlNanoHTTPRead", 
                "xmlCreateIOParserCtxt", 
                "g_enum_get_value", 
                "g_file_replace", 
                "inflate", 
                "g_dir_close", 
                "g_param_spec_object", 
                "g_base64_encode_close", 
                "g_date_time_unref", 
                "g_convert_with_fallback", 
                "open64", 
                "g_value_get_float", 
                "strlen", 
                "g_filename_to_utf8", 
                "chmod", 
                "g_value_array_new", 
                "g_str_equal", 
                "g_value_get_int64", 
                "xmlFreeParserCtxt", 
                "xmlFindCharEncodingHandler", 
                "g_object_weak_ref", 
                "g_ptr_array_add", 
                "g_param_spec_enum", 
                "g_dir_read_name", 
                "xmlGetPredefinedEntity", 
                "g_file_error_quark", 
                "g_param_spec_int", 
                "__sprintf_chk", 
                "BZ2_bzDecompressInit", 
                "g_strcmp0", 
                "g_string_append_unichar", 
                "inflateReset", 
                "g_byte_array_new", 
                "g_realloc_n", 
                "g_type_name", 
                "g_try_malloc", 
                "g_value_set_int64", 
                "g_unichar_isspace", 
                "g_value_get_uchar", 
                "g_flags_get_value_by_nick", 
                "g_value_get_long", 
                "g_string_append", 
                "g_list_prepend", 
                "g_signal_connect_data", 
                "_Jv_RegisterClasses", 
                "g_malloc_n", 
                "g_value_get_flags", 
                "g_value_get_uint", 
                "g_base64_encode_step", 
                "g_dgettext", 
                "g_input_stream_read", 
                "g_list_free", 
                "fread", 
                "g_list_reverse", 
                "g_enum_get_value_by_name", 
                "xmlParseDocument", 
                "getuid", 
                "g_type_value_table_peek", 
                "g_hash_table_new", 
                "memcmp", 
                "g_io_channel_read_to_end", 
                "g_io_channel_write_chars", 
                "g_object_new", 
                "g_array_new", 
                "g_strdup_vprintf", 
                "g_string_prepend", 
                "_ITM_deregisterTMCloneTable", 
                "xmlSaveFormatFileTo", 
                "g_object_newv", 
                "g_type_check_class_cast", 
                "g_ptr_array_new", 
                "g_value_set_boxed", 
                "g_list_append", 
                "g_slist_remove", 
                "g_list_foreach", 
                "g_file_new_for_path", 
                "g_object_notify", 
                "g_type_init", 
                "g_hash_table_lookup", 
                "g_utf8_to_utf16", 
                "g_byte_array_free", 
                "g_seekable_can_seek", 
                "g_assertion_message", 
                "__xmlGenericErrorContext", 
                "g_string_free", 
                "g_string_prepend_c", 
                "g_list_insert_sorted", 
                "__cxa_finalize", 
                "setlocale", 
                "__stack_chk_fail", 
                "g_malloc", 
                "g_list_length", 
                "g_base64_decode_step", 
                "g_slist_free", 
                "g_object_ref", 
                "g_error_new", 
                "localtime", 
                "fileno", 
                "g_set_error", 
                "g_value_set_enum", 
                "bindtextdomain", 
                "strtol", 
                "strncmp", 
                "g_object_get_data", 
                "g_ptr_array_set_size", 
                "g_output_stream_close", 
                "g_file_test", 
                "g_string_insert_c", 
                "g_param_spec_int64", 
                "g_value_get_object", 
                "g_param_spec_boolean", 
                "deflateInit2_", 
                "g_array_sized_new", 
                "g_error_free", 
                "g_quark_from_static_string", 
                "g_value_register_transform_func", 
                "g_iconv_open", 
                "BZ2_bzCompressInit", 
                "g_value_set_long", 
                "g_utf8_prev_char", 
                "feof", 
                "g_object_class_install_property", 
                "g_build_filename", 
                "close", 
                "g_file_new_for_uri", 
                "g_value_set_flags", 
                "g_value_dup_string", 
                "time", 
                "mmap64", 
                "g_flags_get_value_by_name", 
                "g_hash_table_new_full", 
                "memcpy", 
                "g_object_set_data", 
                "g_value_set_static_string", 
                "xmlAllocOutputBuffer", 
                "xmlCreatePushParserCtxt", 
                "g_boxed_type_register_static", 
                "g_object_weak_unref", 
                "g_object_unref", 
                "g_seekable_get_type", 
                "g_enum_get_value_by_nick", 
                "g_value_copy", 
                "deflate", 
                "strcmp", 
                "g_array_append_vals", 
                "g_value_set_boolean", 
                "g_value_set_uchar", 
                "g_array_set_size", 
                "getgid", 
                "g_value_set_object", 
                "fdopen", 
                "g_error_new_literal", 
                "ferror", 
                "g_hash_table_replace", 
                "g_byte_array_append", 
                "g_object_set_data_full", 
                "g_list_nth_data", 
                "g_strdup", 
                "g_unichar_toupper", 
                "xmlNanoHTTPOpen", 
                "g_return_if_fail_warning", 
                "g_parse_debug_string", 
                "g_value_set_int", 
                "__errno_location", 
                "g_type_check_instance_cast", 
                "g_type_check_instance_is_a", 
                "mkdir", 
                "g_value_array_append", 
                "g_value_get_boxed", 
                "__gmon_start__", 
                "deflateEnd", 
                "g_unlink", 
                "getenv", 
                "bind_textdomain_codeset", 
                "g_type_check_value_holds", 
                "g_date_time_new_utc", 
                "g_print", 
                "g_io_channel_seek_position", 
                "g_str_has_prefix", 
                "g_array_free", 
                "BZ2_bzCompressEnd", 
                "g_object_get", 
                "g_strtod", 
                "g_getenv", 
                "g_output_stream_write", 
                "g_input_stream_close", 
                "xmlNanoHTTPClose", 
                "g_path_is_absolute", 
                "g_file_query_info", 
                "__fxstat64", 
                "g_clear_error", 
                "g_realloc", 
                "g_value_get_enum", 
                "g_type_check_value", 
                "rename", 
                "g_value_get_double", 
                "g_utf16_to_utf8", 
                "inflateInit2_", 
                "g_str_hash", 
                "__isoc99_sscanf", 
                "g_date_time_to_unix", 
                "g_strdup_printf", 
                "__xstat64", 
                "g_value_set_uint64", 
                "g_hash_table_insert", 
                "g_hash_table_foreach", 
                "memmove", 
                "g_filename_display_name", 
                "g_io_channel_unref", 
                "g_assertion_message_expr", 
                "g_type_class_unref", 
                "g_string_new", 
                "g_type_class_peek_parent", 
                "g_hash_table_size", 
                "g_iconv_close", 
                "g_value_set_ulong", 
                "crc32", 
                "g_value_get_boolean", 
                "fopen64", 
                "g_malloc0_n", 
                "gmtime_r", 
                "g_slist_insert_sorted", 
                "g_object_new_valist", 
                "xmlNanoHTTPContentLength", 
                "g_file_read_link", 
                "g_log", 
                "BZ2_bzDecompress", 
                "g_value_get_ulong", 
                "fwrite", 
                "g_type_instance_get_private", 
                "g_hash_table_destroy", 
                "g_strsplit", 
                "g_file_dup", 
                "__vfprintf_chk", 
                "g_access", 
                "g_type_register_static", 
                "xmlParseChunk", 
                "g_type_class_add_private", 
                "g_try_malloc_n", 
                "g_object_class_find_property", 
                "munmap", 
                "strtoul", 
                "g_malloc0", 
                "g_seekable_seek", 
                "g_utf8_get_char_validated", 
                "g_slist_append", 
                "umask", 
                "g_value_get_int", 
                "g_type_fundamental", 
                "BZ2_bzDecompressEnd", 
                "fflush", 
                "g_string_truncate", 
                "g_value_init", 
                "g_file_info_get_size", 
                "g_value_array_get_nth", 
                "g_dir_open", 
                "g_utf8_get_char", 
                "g_value_unset", 
                "statfs64", 
                "g_vsnprintf", 
                "g_convert_with_iconv"
            ], 
            "rpm": "libgsf-1.14.26-6.el7.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/libgsf-1.so.114.0.26"
        }, 
        "usr/bin/gsf-office-thumbnailer": {
            "report-functions": [
                "gsf_clip_data_get_type", 
                "gsf_open_pkg_open_rel_by_type", 
                "g_option_context_parse", 
                "gsf_clip_data_peek_real_data", 
                "gsf_infile_child_by_name", 
                "setrlimit64", 
                "gsf_clip_data_get_format", 
                "g_object_unref", 
                "gsf_init", 
                "g_value_get_object", 
                "g_free", 
                "g_option_context_add_main_entries", 
                "gsf_input_read", 
                "gsf_doc_meta_data_read_from_msole", 
                "gsf_input_mmap_new", 
                "gsf_doc_prop_get_val", 
                "fdopen", 
                "gsf_infile_zip_new", 
                "gdk_pixbuf_save", 
                "_ITM_registerTMCloneTable", 
                "gsf_input_stdio_new", 
                "_ITM_deregisterTMCloneTable", 
                "g_strdup_printf", 
                "perror", 
                "g_error_free", 
                "__stack_chk_fail", 
                "g_printerr", 
                "gsf_input_get_type", 
                "__libc_start_main", 
                "gsf_input_uncompress", 
                "gsf_clip_data_get_windows_clipboard_format", 
                "_Jv_RegisterClasses", 
                "gsf_doc_meta_data_new", 
                "fclose", 
                "gsf_infile_msole_new", 
                "fwrite", 
                "g_shell_quote", 
                "gsf_input_remaining", 
                "__gmon_start__", 
                "g_type_check_instance_cast", 
                "gsf_infile_child_by_vname", 
                "g_spawn_command_line_sync", 
                "gsf_doc_meta_data_lookup", 
                "gdk_pixbuf_new_from_file_at_scale", 
                "g_option_context_new", 
                "g_file_open_tmp"
            ], 
            "rpm": "libgsf-1.14.26-6.el7.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/bin/gsf-office-thumbnailer"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Version": " 1.14.26", 
            "Name": " libgsf", 
            "License": " LGPLv2", 
            "URL": " http://www.gnome.org/projects/libgsf/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " x86-017.build.eng.bos.redhat.com", 
            "Description": "\nA library for reading and writing structured files (e.g. MS OLE and Zip)\n", 
            "Build Date": " Sun 26 Jan 2014 06:37:59 AM EST", 
            "Vendor": " Red Hat, Inc.", 
            "Source RPM": " libgsf-1.14.26-6.el7.src.rpm", 
            "warning": " /home/jason/fctl/swap/1/libgsf-1.14.26-6.el7.i686.rpm: Header V3 RSA/SHA256 Signature, key ID fd431d51: NOKEY", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Tue 01 Apr 2014 05:01:31 PM EDT, Key ID 199e2f91fd431d51", 
            "Release": " 6.el7", 
            "Group": " System Environment/Libraries", 
            "Packager": " Red Hat, Inc. <http://bugzilla.redhat.com/bugzilla>", 
            "Summary": " GNOME Structured File library", 
            "Size": " 541021"
        }
    }
}