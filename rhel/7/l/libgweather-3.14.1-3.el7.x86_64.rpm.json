{
    "results": {
        "usr/lib64/libgweather-3_so_6_3_2": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/libgweather-3.so.6.3.2", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "g_slice_free1", 
                "soup_session_add_feature", 
                "soup_session_async_new", 
                "g_str_equal", 
                "g_clear_error", 
                "g_error_free", 
                "soup_session_add_feature_by_type", 
                "xmlTextReaderConstName", 
                "__cxa_finalize", 
                "g_hash_table_insert", 
                "regcomp", 
                "gtk_entry_completion_insert_action_text", 
                "xmlXPathFreeContext", 
                "g_hash_table_lookup", 
                "gtk_editable_set_position", 
                "g_date_time_format", 
                "cos", 
                "g_log", 
                "pow", 
                "g_param_spec_flags", 
                "g_io_error_quark", 
                "g_slist_append", 
                "geocode_place_get_town", 
                "mktime", 
                "soup_cache_dump", 
                "gtk_combo_box_get_type", 
                "_Jv_RegisterClasses", 
                "gtk_combo_box_set_active_iter", 
                "g_slist_prepend", 
                "g_value_get_string", 
                "gdk_pixbuf_loader_write", 
                "bindtextdomain", 
                "g_list_append", 
                "xmlTextReaderConstValue", 
                "g_string_free", 
                "geocode_reverse_get_type", 
                "g_dgettext", 
                "atan2", 
                "g_strcmp0", 
                "xmlXPathEval", 
                "strptime", 
                "g_file_test", 
                "gtk_editable_get_type", 
                "soup_message_body_set_accumulate", 
                "xmlXPathNewContext", 
                "g_param_spec_string", 
                "g_intern_static_string", 
                "g_date_time_new", 
                "floor", 
                "g_object_notify", 
                "geocode_forward_search_finish", 
                "g_simple_async_result_get_op_res_gpointer", 
                "g_dpgettext2", 
                "geocode_place_get_country_code", 
                "gtk_combo_box_set_model", 
                "gtk_cell_layout_get_type", 
                "g_cancellable_cancel", 
                "g_type_name", 
                "geocode_location_get_longitude", 
                "g_hash_table_replace", 
                "xmlTextReaderMoveToNextAttribute", 
                "g_variant_get_child", 
                "xmlDocGetRootElement", 
                "_ITM_deregisterTMCloneTable", 
                "gtk_entry_completion_get_model", 
                "g_type_check_instance_cast", 
                "g_param_spec_boxed", 
                "g_type_class_add_private", 
                "geocode_reverse_resolve_async", 
                "g_object_set", 
                "g_assertion_message_expr", 
                "g_type_instance_get_private", 
                "geocode_reverse_new_for_location", 
                "g_mkdir_with_parents", 
                "gtk_tree_store_set", 
                "soup_cache_new", 
                "xmlTextReaderNext", 
                "gtk_cell_layout_get_cells", 
                "g_object_unref", 
                "g_signal_emit", 
                "geocode_reverse_resolve_finish", 
                "g_simple_async_result_set_from_error", 
                "xmlNewTextReaderFilename", 
                "gtk_cell_layout_pack_start", 
                "g_simple_async_result_set_op_res_gpointer", 
                "gtk_cell_layout_set_attributes", 
                "xmlTextReaderRead", 
                "geocode_forward_get_type", 
                "g_settings_new", 
                "g_date_time_to_unix", 
                "g_variant_get", 
                "strtol", 
                "gtk_entry_get_completion", 
                "g_strdup", 
                "gtk_combo_box_set_row_separator_func", 
                "g_date_time_unref", 
                "soup_content_decoder_get_type", 
                "g_type_register_static_simple", 
                "g_object_get_data", 
                "g_free", 
                "xmlTextReaderIsEmptyElement", 
                "gtk_entry_set_completion", 
                "g_signal_new", 
                "soup_proxy_resolver_default_get_type", 
                "_ITM_registerTMCloneTable", 
                "g_unichar_isalpha", 
                "g_type_check_instance_is_a", 
                "xmlTextReaderNodeType", 
                "g_slist_free_full", 
                "g_value_get_boxed", 
                "g_utf8_prev_char", 
                "g_variant_new", 
                "gtk_cell_renderer_text_new", 
                "gtk_tree_model_get_iter_first", 
                "gdk_pixbuf_loader_new", 
                "gtk_tree_store_new", 
                "bsearch", 
                "g_once_init_leave", 
                "g_strdup_printf", 
                "gtk_entry_completion_get_entry", 
                "asin", 
                "gtk_entry_completion_set_match_func", 
                "strspn", 
                "g_hash_table_new_full", 
                "g_simple_async_result_complete_in_idle", 
                "geocode_location_get_description", 
                "__isnan", 
                "gtk_combo_box_get_model", 
                "g_return_if_fail_warning", 
                "g_flags_register_static", 
                "g_object_add_weak_pointer", 
                "g_date_time_new_from_unix_local", 
                "gtk_entry_completion_set_text_column", 
                "g_hash_table_ref", 
                "g_markup_printf_escaped", 
                "g_list_foreach", 
                "xmlGetProp", 
                "g_variant_type_checked_", 
                "g_value_set_string", 
                "strcmp", 
                "g_string_append_printf", 
                "g_variant_builder_init", 
                "g_simple_async_result_is_valid", 
                "g_dpgettext", 
                "g_ptr_array_sort", 
                "g_signal_connect_object", 
                "gtk_entry_set_text", 
                "geocode_forward_new_for_string", 
                "sqrt", 
                "geocode_location_new", 
                "g_file_get_contents", 
                "g_settings_get_enum", 
                "xmlTextReaderValue", 
                "gtk_cell_layout_set_cell_data_func", 
                "g_strndup", 
                "gtk_entry_completion_set_popup_set_width", 
                "gtk_entry_completion_complete", 
                "gmtime", 
                "gtk_tree_model_get_type", 
                "g_once_init_enter", 
                "log10", 
                "g_variant_n_children", 
                "g_time_zone_new", 
                "xmlParseMemory", 
                "g_type_check_class_cast", 
                "gtk_search_entry_get_type", 
                "g_build_filename", 
                "gdk_pixbuf_loader_get_animation", 
                "g_time_zone_unref", 
                "g_object_class_install_property", 
                "g_enum_register_static", 
                "strtod", 
                "g_time_val_from_iso8601", 
                "soup_message_new", 
                "g_print", 
                "gtk_entry_get_text", 
                "g_boxed_type_register_static", 
                "xmlTextReaderGetAttribute", 
                "g_signal_connect_data", 
                "xmlTextReaderName", 
                "gtk_tree_model_get", 
                "localtime_r", 
                "g_value_set_boxed", 
                "g_slice_alloc0", 
                "g_variant_builder_add", 
                "g_object_set_data_full", 
                "gtk_entry_get_type", 
                "g_str_hash", 
                "g_utf8_collate", 
                "xmlXPathRegisterNs", 
                "g_cclosure_marshal_VOID__VOID", 
                "g_slist_remove", 
                "gtk_combo_box_set_active", 
                "soup_cache_load", 
                "gdk_pixbuf_loader_close", 
                "g_object_ref", 
                "strlen", 
                "g_hash_table_unref", 
                "strncmp", 
                "g_simple_async_result_set_check_cancellable", 
                "gtk_tree_store_append", 
                "g_string_new", 
                "g_ptr_array_add", 
                "nl_langinfo", 
                "gtk_entry_completion_new", 
                "g_variant_unref", 
                "g_variant_is_of_type", 
                "g_ptr_array_new", 
                "strchr", 
                "g_simple_async_result_new", 
                "g_settings_get_string", 
                "xmlFreeDoc", 
                "soup_session_cancel_message", 
                "g_value_get_flags", 
                "g_ascii_strtod", 
                "g_object_new", 
                "atan", 
                "gtk_entry_completion_delete_action", 
                "g_slist_free", 
                "g_string_append", 
                "g_cancellable_new", 
                "geocode_forward_search_async", 
                "g_simple_async_result_propagate_error", 
                "gtk_entry_completion_set_model", 
                "gtk_tree_model_foreach", 
                "time", 
                "acos", 
                "__gmon_start__", 
                "g_settings_get_value", 
                "gtk_tree_model_filter_get_type", 
                "g_utf8_get_char", 
                "fmod", 
                "geocode_location_get_latitude", 
                "geocode_place_get_type", 
                "xmlFreeTextReader", 
                "gtk_tree_model_iter_has_child", 
                "tan", 
                "gtk_entry_completion_get_type", 
                "g_utf8_casefold", 
                "xmlNodeGetContent", 
                "g_list_free", 
                "g_get_user_cache_dir", 
                "g_utf8_normalize", 
                "sincos", 
                "g_ptr_array_free", 
                "gtk_tree_model_iter_next", 
                "__strncpy_chk", 
                "strncpy", 
                "__stack_chk_fail", 
                "g_value_set_flags", 
                "__isoc99_sscanf", 
                "regexec", 
                "gtk_tree_model_filter_convert_iter_to_child_iter", 
                "gtk_combo_box_get_active_iter", 
                "sin", 
                "soup_form_request_new", 
                "xmlHasFeature", 
                "g_error_matches", 
                "strstr", 
                "g_type_class_peek_parent", 
                "gtk_tree_model_iter_n_children", 
                "geocode_place_get_location", 
                "g_ascii_dtostr", 
                "soup_session_feature_get_type", 
                "soup_session_queue_message", 
                "g_type_class_adjust_private_offset", 
                "g_list_free_full"
            ], 
            "rpm": "libgweather-3.14.1-3.el7.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Version": " 3.14.1", 
            "Name": " libgweather", 
            "License": " GPLv2+", 
            "URL": " http://www.gnome.org", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " x86-019.build.eng.bos.redhat.com", 
            "Description": "\nlibgweather is a library to access weather information from online\nservices for numerous locations.\n", 
            "Build Date": " Wed 31 Aug 2016 02:09:37 AM EDT", 
            "Vendor": " Red Hat, Inc.", 
            "Source RPM": " libgweather-3.14.1-3.el7.src.rpm", 
            "warning": " /home/jason/fctl/swap/1/libgweather-3.14.1-3.el7.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID fd431d51: NOKEY", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Wed 31 Aug 2016 09:30:15 PM EDT, Key ID 199e2f91fd431d51", 
            "Release": " 3.el7", 
            "Group": " System Environment/Libraries", 
            "Packager": " Red Hat, Inc. <http://bugzilla.redhat.com/bugzilla>", 
            "Summary": " A library for weather information", 
            "Size": " 21147255"
        }
    }
}