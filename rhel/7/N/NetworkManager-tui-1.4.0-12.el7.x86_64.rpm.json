{
    "results": {
        "usr/lib/device-mapper/libdevmapper-event-lvm2mirror_so": {
            "report-functions": [
                "dm_split_words", 
                "strchr", 
                "dm_get_next_target", 
                "dmeventd_lvm2_init", 
                "strcmp", 
                "_ITM_registerTMCloneTable", 
                "dm_task_get_name", 
                "dm_free_wrapper", 
                "dmeventd_lvm2_lock", 
                "dm_malloc_wrapper", 
                "_ITM_deregisterTMCloneTable", 
                "dmeventd_lvm2_pool", 
                "__stack_chk_fail", 
                "__cxa_finalize", 
                "__syslog_chk", 
                "strlen", 
                "__gmon_start__", 
                "dmeventd_lvm2_run", 
                "dmeventd_lvm2_exit", 
                "dmeventd_lvm2_unlock", 
                "_Jv_RegisterClasses", 
                "dmeventd_lvm2_command"
            ], 
            "rpm": "NetworkManager-tui-1.4.0-12.el7.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2mirror.so"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2raid_so": {
            "report-functions": [
                "_Jv_RegisterClasses", 
                "dmeventd_lvm2_init", 
                "dmeventd_lvm2_command", 
                "__stack_chk_fail", 
                "__syslog_chk", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "dmeventd_lvm2_exit", 
                "dmeventd_lvm2_unlock", 
                "_ITM_registerTMCloneTable", 
                "strchr", 
                "dm_split_words", 
                "dmeventd_lvm2_pool", 
                "strcmp", 
                "__cxa_finalize", 
                "dm_task_get_name", 
                "dm_get_next_target", 
                "dmeventd_lvm2_lock", 
                "dmeventd_lvm2_run"
            ], 
            "rpm": "NetworkManager-tui-1.4.0-12.el7.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2raid.so"
        }, 
        "usr/bin/nmtui": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/nmtui", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "g_value_get_gtype", 
                "g_value_dup_boxed", 
                "nm_setting_wireless_security_get_wep_tx_keyidx", 
                "newtFormAddComponents", 
                "newtPopWindow", 
                "g_type_name", 
                "g_array_new", 
                "g_malloc", 
                "g_get_prgname", 
                "nm_client_get_connections", 
                "g_strv_get_type", 
                "g_free", 
                "g_value_get_object", 
                "g_str_has_prefix", 
                "g_hash_table_new_full", 
                "nm_setting_bridge_get_type", 
                "bind_textdomain_codeset", 
                "g_param_spec_pointer", 
                "g_propagate_error", 
                "g_value_dup_string", 
                "nm_client_new", 
                "newtListboxSetCurrent", 
                "strcmp", 
                "g_type_instance_get_private", 
                "nm_client_save_hostname_finish", 
                "nm_ip_address_get_prefix", 
                "newtTextbox", 
                "g_type_class_peek_parent", 
                "nm_vpn_plugin_error_quark", 
                "g_return_if_fail_warning", 
                "g_idle_add", 
                "g_slice_alloc0", 
                "kill", 
                "nm_vpn_plugin_info_list_find_by_service", 
                "g_slist_insert_sorted", 
                "g_type_check_instance_cast", 
                "g_ptr_array_remove_index", 
                "nm_connection_get_virtual_device_description", 
                "g_bytes_get_size", 
                "g_value_set_int", 
                "nm_client_activate_connection_async", 
                "g_io_channel_unix_new", 
                "g_value_set_uint", 
                "g_error_new_literal", 
                "g_ptr_array_new", 
                "nm_utils_iface_valid_name", 
                "nm_connection_get_setting_wired", 
                "g_bytes_new", 
                "nm_setting_connection_get_uuid", 
                "nm_setting_wireless_security_get_type", 
                "g_main_context_iteration", 
                "nm_ip_route_set_prefix", 
                "dcgettext", 
                "g_ptr_array_free", 
                "g_array_unref", 
                "g_getenv", 
                "nm_vpn_plugin_info_get_filename", 
                "g_signal_connect_data", 
                "newtComponentAddDestroyCallback", 
                "nm_setting_bridge_new", 
                "g_variant_unref", 
                "nm_setting_wireless_security_get_wep_key", 
                "nm_client_add_and_activate_connection_finish", 
                "g_param_spec_string", 
                "newtListboxSetWidth", 
                "newtFormAddComponent", 
                "nm_connection_clear_secrets", 
                "newtGridSetField", 
                "newtOpenWindow", 
                "nm_connection_get_setting_pppoe", 
                "nm_device_connection_valid", 
                "nm_setting_vpn_get_type", 
                "g_strndup", 
                "g_ptr_array_set_size", 
                "nm_client_get_active_connections", 
                "nm_ip_route_set_metric", 
                "g_slice_alloc", 
                "nm_connection_get_setting_802_1x", 
                "nm_setting_vpn_get_secret", 
                "nm_setting_bond_get_valid_options", 
                "g_strfreev", 
                "nm_ip_route_set_next_hop", 
                "g_locale_from_utf8", 
                "g_object_weak_ref", 
                "nm_remote_connection_get_secrets_finish", 
                "nm_ip_route_new", 
                "nm_secret_agent_old_get_type", 
                "g_value_get_uint", 
                "g_value_transform", 
                "g_object_notify", 
                "g_initable_new", 
                "g_source_set_can_recurse", 
                "exit", 
                "g_signal_new", 
                "g_object_class_install_property", 
                "nm_setting_infiniband_get_transport_mode", 
                "g_strsplit_set", 
                "nm_setting_bond_new", 
                "nm_client_get_connection_by_id", 
                "g_slist_remove", 
                "nm_setting_duplicate", 
                "g_variant_ref", 
                "g_log_set_default_handler", 
                "nm_device_bridge_get_type", 
                "nm_setting_team_get_type", 
                "nm_access_point_get_strength", 
                "g_value_set_gtype", 
                "nm_setting_lookup_type", 
                "nm_active_connection_get_connection", 
                "nm_remote_connection_get_secrets_async", 
                "g_param_spec_int", 
                "__stack_chk_fail", 
                "newtListboxGetCurrent", 
                "nm_setting_vlan_get_id", 
                "nm_secret_agent_error_quark", 
                "nm_setting_connection_new", 
                "g_get_user_name", 
                "g_ptr_array_unref", 
                "nm_device_bond_get_type", 
                "nm_device_disambiguate_names", 
                "nm_ip_address_set_prefix", 
                "g_once_init_leave", 
                "g_variant_iter_init", 
                "g_object_freeze_notify", 
                "g_str_hash", 
                "nm_connection_is_type", 
                "nm_connection_get_type", 
                "g_slist_free_full", 
                "g_realloc_n", 
                "nm_setting_wireless_security_get_auth_alg", 
                "g_malloc0", 
                "g_log_default_handler", 
                "g_array_sort", 
                "nm_device_get_ip_iface", 
                "nm_ip_route_get_next_hop", 
                "g_object_new", 
                "strrchr", 
                "nm_device_infiniband_get_type", 
                "_Jv_RegisterClasses", 
                "nm_connection_get_setting_connection", 
                "g_param_spec_gtype", 
                "newtFormRun", 
                "g_strjoinv", 
                "nm_connection_get_uuid", 
                "nm_ip_route_get_metric", 
                "g_value_register_transform_func", 
                "nm_setting_team_port_new", 
                "nm_connection_get_setting_ppp", 
                "__gmon_start__", 
                "g_value_set_string", 
                "nm_vpn_plugin_info_get_plugin", 
                "g_value_set_boolean", 
                "g_source_set_callback", 
                "_ITM_deregisterTMCloneTable", 
                "g_variant_new_string", 
                "g_object_get_data", 
                "newtListbox", 
                "g_ptr_array_get_type", 
                "g_slist_free", 
                "nm_client_get_nm_running", 
                "nm_setting_bridge_port_new", 
                "nm_remote_connection_commit_changes_finish", 
                "nm_setting_vpn_get_data_item", 
                "g_str_equal", 
                "newtCompactButton", 
                "textdomain", 
                "nm_ip_route_set_dest", 
                "nm_ip_address_set_address", 
                "newtFormGetCurrent", 
                "nm_vpn_plugin_info_get_name", 
                "g_value_set_boxed", 
                "g_hash_table_new", 
                "g_value_get_string", 
                "nm_setting_wireless_new", 
                "g_error_new", 
                "g_strdupv", 
                "nm_setting_ip4_config_new", 
                "g_signal_handlers_disconnect_matched", 
                "g_value_dup_object", 
                "newtCheckboxSetFlags", 
                "nm_connection_to_dbus", 
                "nm_utils_file_search_in_paths", 
                "nm_setting_ppp_get_lcp_echo_failure", 
                "nm_client_add_connection_finish", 
                "newtTextboxSetText", 
                "g_value_set_object", 
                "g_object_unref", 
                "nm_connection_get_setting_bond", 
                "nm_setting_vlan_get_type", 
                "nm_setting_ip4_config_get_type", 
                "nm_setting_vlan_new", 
                "newtComponentDestroy", 
                "nm_utils_hwaddr_len", 
                "nm_setting_bond_remove_option", 
                "g_binding_get_source_property", 
                "nm_object_get_type", 
                "newtSetSuspendCallback", 
                "nm_utils_hwaddr_aton", 
                "newtGetScreenSize", 
                "g_warn_message", 
                "newtButton", 
                "nm_ip_address_get_address", 
                "nm_vpn_service_plugin_get_secret_flags", 
                "g_strv_length", 
                "nm_simple_connection_new", 
                "nm_utils_wifi_strength_bars", 
                "nm_connection_get_setting_team_port", 
                "g_binding_get_source", 
                "g_value_take_string", 
                "nm_client_error_quark", 
                "nm_vpn_plugin_info_list_load", 
                "nm_utils_ipaddr_valid", 
                "nm_connection_get_setting_infiniband", 
                "newtLabelSetColors", 
                "nm_active_connection_get_type", 
                "newtSuspend", 
                "nm_client_deactivate_connection", 
                "inet_pton", 
                "nm_setting_connection_get_slave_type", 
                "newtFormSetTimer", 
                "newtVerticalScrollbar", 
                "g_variant_builder_add", 
                "nm_setting_get_name", 
                "strlen", 
                "newtLabel", 
                "nm_access_point_get_ssid", 
                "g_hash_table_insert", 
                "g_hash_table_iter_init", 
                "g_array_set_clear_func", 
                "nm_remote_connection_delete_async", 
                "nm_setting_connection_get_interface_name", 
                "nm_access_point_connection_valid", 
                "g_param_spec_boolean", 
                "g_slist_append", 
                "g_array_remove_index", 
                "nm_client_get_devices", 
                "nm_connection_replace_settings_from_connection", 
                "bindtextdomain", 
                "g_hash_table_replace", 
                "g_ptr_array_new_with_free_func", 
                "__memcpy_chk", 
                "nm_device_wifi_get_access_points", 
                "newtFormDestroy", 
                "_ITM_registerTMCloneTable", 
                "nm_setting_ppp_new", 
                "strtol", 
                "write", 
                "g_variant_builder_new", 
                "newtSetColor", 
                "g_type_register_static_simple", 
                "g_variant_iter_next", 
                "nm_client_get_type", 
                "nm_connection_get_setting_ip6_config", 
                "g_type_check_class_cast", 
                "g_main_loop_unref", 
                "g_param_spec_object", 
                "g_snprintf", 
                "g_object_ref_sink", 
                "getpid", 
                "g_strdup_vprintf", 
                "newtFinished", 
                "nm_secret_agent_old_unregister", 
                "nm_vpn_plugin_info_get_editor_plugin", 
                "nm_client_get_connection_by_uuid", 
                "g_object_bind_property", 
                "g_option_context_free", 
                "g_dpgettext", 
                "g_dngettext", 
                "_Unwind_Resume", 
                "g_hash_table_destroy", 
                "nm_device_vlan_get_type", 
                "newtInit", 
                "newtResume", 
                "nm_connection_get_setting_cdma", 
                "g_file_get_contents", 
                "nm_ip_route_get_prefix", 
                "nm_remote_connection_get_type", 
                "g_bytes_get_data", 
                "nm_device_team_get_type", 
                "g_intern_static_string", 
                "newtGridPlace", 
                "nm_setting_wired_new", 
                "g_unichar_iswide", 
                "g_ptr_array_sort", 
                "g_ascii_strcasecmp", 
                "newtRunForm", 
                "nm_ip_route_get_type", 
                "g_slist_prepend", 
                "nm_connection_update_secrets", 
                "nm_setting_wired_get_type", 
                "nm_device_wifi_get_type", 
                "g_spawn_check_exit_status", 
                "g_param_spec_boxed", 
                "nm_remote_connection_delete_finish", 
                "nm_ip_route_unref", 
                "nm_vpn_plugin_info_lookup_property", 
                "g_value_take_boxed", 
                "nm_ip_route_get_dest", 
                "nm_access_point_get_flags", 
                "nm_setting_connection_get_type", 
                "nm_object_get_path", 
                "g_option_context_parse", 
                "newtComponentAddCallback", 
                "g_clear_error", 
                "g_source_attach", 
                "g_compute_checksum_for_data", 
                "newtFormAddHotKey", 
                "g_printerr", 
                "newtWinChoice", 
                "g_value_get_int", 
                "nm_ip_route_ref", 
                "newtTextboxSetColors", 
                "nm_setting_connection_get_master", 
                "g_value_get_boxed", 
                "newtForm", 
                "g_unichar_iszerowidth", 
                "nm_simple_connection_new_clone", 
                "g_object_set", 
                "nm_setting_vpn_get_service_type", 
                "nm_utils_ssid_to_utf8", 
                "newtFormSetHeight", 
                "g_slist_reverse", 
                "nm_setting_bridge_port_get_type", 
                "nm_connection_get_setting", 
                "g_io_error_quark", 
                "nm_setting_bond_add_option", 
                "g_timeout_add", 
                "g_object_bind_property_full", 
                "nm_setting_wireless_security_get_key_mgmt", 
                "newtEntrySetFilter", 
                "nm_setting_ppp_get_lcp_echo_interval", 
                "g_hash_table_unref", 
                "g_object_get", 
                "nm_setting_infiniband_new", 
                "g_log", 
                "g_array_append_vals", 
                "g_strdup", 
                "nm_setting_wireless_get_ssid", 
                "newtCheckboxGetValue", 
                "nm_connection_get_setting_wireless", 
                "nm_access_point_get_rsn_flags", 
                "g_error_matches", 
                "g_slist_sort", 
                "g_file_error_quark", 
                "g_value_get_pointer", 
                "g_file_open_tmp", 
                "g_main_loop_new", 
                "newtCheckboxSetValue", 
                "nm_setting_pppoe_get_type", 
                "g_option_context_new", 
                "sleep", 
                "g_source_destroy", 
                "g_main_loop_run", 
                "nm_setting_bond_get_type", 
                "g_realloc", 
                "nm_vpn_editor_plugin_get_capabilities", 
                "newtComponentTakesFocus", 
                "nm_connection_get_setting_vpn", 
                "nm_setting_wireless_security_new", 
                "newtEntryGetValue", 
                "nm_setting_wireless_get_type", 
                "newtEntrySet", 
                "g_once_init_enter", 
                "nm_ip_address_new", 
                "g_type_class_add_private", 
                "newtEntry", 
                "g_object_set_data_full", 
                "g_io_create_watch", 
                "g_main_loop_quit", 
                "g_locale_to_utf8", 
                "g_value_set_pointer", 
                "g_source_remove", 
                "g_source_unref", 
                "nm_setting_team_new", 
                "g_value_get_boolean", 
                "newtCheckbox", 
                "newtListboxAppendEntry", 
                "__libc_start_main", 
                "g_set_error", 
                "nm_setting_802_1x_get_eap_method", 
                "g_utf8_collate", 
                "nm_setting_ip6_config_new", 
                "nm_connection_get_setting_vlan", 
                "memmove", 
                "nm_setting_vlan_get_parent", 
                "nm_device_ethernet_get_type", 
                "g_variant_builder_init", 
                "strtoul", 
                "newtFormSetCurrent", 
                "g_object_thaw_notify", 
                "nm_setting_pppoe_new", 
                "nm_connection_get_id", 
                "__gcc_personality_v0", 
                "g_param_spec_uint", 
                "g_signal_emit", 
                "nm_setting_connection_get_connection_type", 
                "g_hash_table_remove", 
                "g_ptr_array_add", 
                "g_array_sized_new", 
                "g_utf8_get_char", 
                "unlink", 
                "nm_access_point_get_mode", 
                "nm_setting_team_port_get_config", 
                "__errno_location", 
                "nm_setting_team_get_config", 
                "nm_client_activate_connection_finish", 
                "newtTextboxReflowed", 
                "nm_connection_add_setting", 
                "g_object_weak_unref", 
                "nm_setting_team_port_get_type", 
                "close", 
                "g_malloc0_n", 
                "nm_utils_hwaddr_matches", 
                "g_hash_table_add", 
                "g_variant_type_checked_", 
                "g_slist_length", 
                "g_hash_table_iter_next", 
                "nm_connection_get_setting_team", 
                "g_object_add_weak_pointer", 
                "nm_client_add_connection_async", 
                "newtCreateGrid", 
                "nm_remote_connection_commit_changes_async", 
                "newtGridWrappedWindow", 
                "nm_setting_get_type", 
                "nm_client_add_and_activate_connection_async", 
                "g_strcmp0", 
                "newtWinMessage", 
                "g_hash_table_get_values", 
                "strchr", 
                "g_hash_table_contains", 
                "newtPopWindowNoRefresh", 
                "nm_connection_get_setting_ip4_config", 
                "nm_connection_get_setting_wireless_security", 
                "g_error_copy", 
                "g_hash_table_lookup", 
                "g_option_context_add_main_entries", 
                "nm_utils_is_uuid", 
                "nm_utils_uuid_generate", 
                "g_type_check_instance_is_a", 
                "nm_vpn_plugin_info_load_editor_plugin", 
                "g_error_free", 
                "__cxa_finalize", 
                "nm_active_connection_get_state", 
                "g_strdup_printf", 
                "nm_connection_get_setting_bridge_port", 
                "nm_setting_bond_get_option_default", 
                "g_io_channel_unref", 
                "nm_connection_get_interface_name", 
                "nm_setting_ppp_get_type", 
                "nm_setting_connection_get_timestamp", 
                "g_variant_builder_end", 
                "g_assertion_message_expr", 
                "nm_connection_get_setting_by_name", 
                "nm_connection_get_setting_gsm", 
                "newtCls", 
                "setlocale", 
                "g_slice_free1", 
                "nm_client_save_hostname_async", 
                "nm_setting_wireless_security_get_wep_key_type", 
                "g_strsplit", 
                "g_initially_unowned_get_type", 
                "nm_device_get_iface", 
                "nm_connection_get_setting_bridge", 
                "nm_setting_bond_get_option_by_name", 
                "nm_setting_ip_config_get_method", 
                "newtGridFree", 
                "nm_setting_infiniband_get_type", 
                "nm_setting_ip_config_get_num_addresses", 
                "nm_access_point_get_wpa_flags", 
                "g_object_ref", 
                "g_spawn_sync"
            ], 
            "rpm": "NetworkManager-tui-1.4.0-12.el7.x86_64.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2thin_so": {
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "waitpid", 
                "execvp", 
                "dm_task_destroy", 
                "dm_mountinfo_read", 
                "dmeventd_lvm2_exit", 
                "_Jv_RegisterClasses", 
                "dmeventd_lvm2_unlock", 
                "__syslog_chk", 
                "dm_task_no_open_count", 
                "dm_bitset_destroy", 
                "dm_task_create", 
                "dm_pool_zalloc", 
                "strerror", 
                "dm_task_get_names", 
                "fork", 
                "dm_task_get_info", 
                "dm_get_next_target", 
                "exit", 
                "dm_task_run", 
                "__stack_chk_fail", 
                "dm_pool_destroy", 
                "dm_pool_free", 
                "dmeventd_lvm2_run", 
                "__gmon_start__", 
                "__errno_location", 
                "dmeventd_lvm2_init", 
                "dm_get_status_thin_pool", 
                "dm_pool_create", 
                "dm_bitset_create", 
                "_ITM_registerTMCloneTable", 
                "dm_task_get_deps", 
                "dm_task_set_name", 
                "dm_task_get_name", 
                "dmeventd_lvm2_lock"
            ], 
            "rpm": "NetworkManager-tui-1.4.0-12.el7.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2thin.so"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2mirror_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2mirror.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "strlen", 
                "dm_malloc_wrapper", 
                "dmeventd_lvm2_pool", 
                "dmeventd_lvm2_run", 
                "dmeventd_lvm2_command", 
                "dmeventd_lvm2_exit", 
                "strchr", 
                "_Jv_RegisterClasses", 
                "__stack_chk_fail", 
                "dmeventd_lvm2_unlock", 
                "__gmon_start__", 
                "dm_split_words", 
                "__syslog_chk", 
                "__cxa_finalize", 
                "dmeventd_lvm2_lock", 
                "strcmp", 
                "_ITM_registerTMCloneTable", 
                "dm_task_get_name", 
                "dm_get_next_target", 
                "dm_free_wrapper", 
                "dmeventd_lvm2_init", 
                "strtol"
            ], 
            "rpm": "NetworkManager-tui-1.4.0-12.el7.x86_64.rpm"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2raid_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2raid.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "dmeventd_lvm2_init", 
                "_ITM_registerTMCloneTable", 
                "dmeventd_lvm2_unlock", 
                "dm_split_words", 
                "dmeventd_lvm2_pool", 
                "__stack_chk_fail", 
                "_ITM_deregisterTMCloneTable", 
                "dmeventd_lvm2_run", 
                "strchr", 
                "strtol", 
                "__syslog_chk", 
                "dm_task_get_name", 
                "__gmon_start__", 
                "dmeventd_lvm2_command", 
                "strcmp", 
                "dmeventd_lvm2_lock", 
                "_Jv_RegisterClasses", 
                "dmeventd_lvm2_exit"
            ], 
            "rpm": "NetworkManager-tui-1.4.0-12.el7.x86_64.rpm"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2thin_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2thin.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "dm_pool_free", 
                "dm_pool_zalloc", 
                "execvp", 
                "dm_mountinfo_read", 
                "dm_task_get_name", 
                "dmeventd_lvm2_command", 
                "__cxa_finalize", 
                "strerror", 
                "dmeventd_lvm2_unlock", 
                "_ITM_deregisterTMCloneTable", 
                "dm_task_get_names", 
                "dm_task_create", 
                "_ITM_registerTMCloneTable", 
                "dmeventd_lvm2_exit", 
                "dm_bitset_destroy", 
                "dm_task_set_name", 
                "dm_pool_create", 
                "dm_task_destroy", 
                "__gmon_start__", 
                "dmeventd_lvm2_run", 
                "__syslog_chk", 
                "waitpid", 
                "dm_get_status_thin_pool", 
                "__stack_chk_fail", 
                "dm_task_get_deps", 
                "fork", 
                "dmeventd_lvm2_lock", 
                "dm_task_run", 
                "dm_bitset_create", 
                "dm_task_no_open_count", 
                "_Jv_RegisterClasses", 
                "dm_task_get_info", 
                "dm_pool_destroy", 
                "__errno_location", 
                "dm_get_next_target"
            ], 
            "rpm": "NetworkManager-tui-1.4.0-12.el7.x86_64.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2snapshot_so": {
            "report-functions": [
                "__gmon_start__", 
                "dmeventd_lvm2_exit", 
                "__cxa_finalize", 
                "dmeventd_lvm2_run", 
                "fopen64", 
                "dmeventd_lvm2_init", 
                "dm_get_status_snapshot", 
                "dm_split_words", 
                "__stack_chk_fail", 
                "fork", 
                "execvp", 
                "dm_pool_create", 
                "__errno_location", 
                "_ITM_registerTMCloneTable", 
                "dm_task_get_name", 
                "strerror", 
                "_ITM_deregisterTMCloneTable", 
                "dm_pool_free", 
                "dmeventd_lvm2_command", 
                "exit", 
                "dm_pool_zalloc", 
                "__syslog_chk", 
                "dm_get_next_target", 
                "dmeventd_lvm2_unlock", 
                "_Jv_RegisterClasses", 
                "feof", 
                "dm_task_get_info", 
                "fclose", 
                "dm_pool_destroy", 
                "fgets", 
                "waitpid"
            ], 
            "rpm": "NetworkManager-tui-1.4.0-12.el7.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2snapshot.so"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2snapshot_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2snapshot.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "dm_get_next_target", 
                "__cxa_finalize", 
                "dmeventd_lvm2_lock", 
                "_ITM_registerTMCloneTable", 
                "feof", 
                "dm_pool_free", 
                "fork", 
                "dm_pool_destroy", 
                "fopen64", 
                "dmeventd_lvm2_init", 
                "__xstat64", 
                "fgets", 
                "dm_task_get_name", 
                "dm_get_status_snapshot", 
                "exit", 
                "fclose", 
                "__syslog_chk", 
                "_Jv_RegisterClasses", 
                "dmeventd_lvm2_command", 
                "dm_pool_create", 
                "execvp", 
                "dmeventd_lvm2_unlock", 
                "__errno_location", 
                "strerror", 
                "__gmon_start__", 
                "dmeventd_lvm2_exit", 
                "__stack_chk_fail", 
                "_ITM_deregisterTMCloneTable", 
                "waitpid", 
                "dm_task_get_info", 
                "dmeventd_lvm2_run"
            ], 
            "rpm": "NetworkManager-tui-1.4.0-12.el7.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Version": " 1.4.0", 
            "Name": " NetworkManager-tui", 
            "License": " GPLv2+", 
            "URL": " http://www.gnome.org/projects/NetworkManager/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " x86-030.build.eng.bos.redhat.com", 
            "Source RPM": " NetworkManager-1.4.0-12.el7.src.rpm", 
            "Description": "\nThis adds a curses-based \"TUI\" (Text User Interface) to\nNetworkManager, to allow performing some of the operations supported\nby nm-connection-editor and nm-applet in a non-graphical environment.\n", 
            "Build Date": " Tue 27 Sep 2016 09:38:46 AM EDT", 
            "Vendor": " Red Hat, Inc.", 
            "Epoch": " 1", 
            "warning": " /home/jason/fctl/swap/2/NetworkManager-tui-1.4.0-12.el7.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID fd431d51: NOKEY", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Wed 28 Sep 2016 10:26:10 AM EDT, Key ID 199e2f91fd431d51", 
            "Release": " 12.el7", 
            "Group": " System Environment/Base", 
            "Packager": " Red Hat, Inc. <http://bugzilla.redhat.com/bugzilla>", 
            "Summary": " NetworkManager curses-based UI", 
            "Size": " 272694"
        }
    }
}