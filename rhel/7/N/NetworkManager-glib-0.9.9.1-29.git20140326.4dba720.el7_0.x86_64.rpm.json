{
    "results": {
        "usr/lib64/libnm-glib-vpn_so_1_1_0": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/libnm-glib-vpn.so.1.1.0", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "g_type_name", 
                "g_strv_get_type", 
                "g_hash_table_iter_next", 
                "g_once_init_enter", 
                "_ITM_deregisterTMCloneTable", 
                "__errno_location", 
                "g_assertion_message", 
                "g_return_if_fail_warning", 
                "g_value_init", 
                "g_type_interface_add_prerequisite", 
                "g_clear_error", 
                "g_error_free", 
                "g_cclosure_marshal_VOID__VOID", 
                "g_enum_register_static", 
                "g_signal_emit", 
                "dbus_g_type_get_map", 
                "g_param_spec_uint", 
                "g_log", 
                "dbus_g_connection_ref", 
                "g_value_get_string", 
                "g_idle_add", 
                "strtoul", 
                "g_hash_table_destroy", 
                "g_type_check_instance_is_a", 
                "g_slist_remove", 
                "g_hash_table_lookup", 
                "dbus_g_proxy_new_for_name", 
                "g_str_equal", 
                "g_value_get_boolean", 
                "g_warn_message", 
                "_Jv_RegisterClasses", 
                "g_hash_table_iter_init", 
                "g_cclosure_marshal_VOID__STRING", 
                "g_str_hash", 
                "g_object_unref", 
                "dbus_g_error_domain_register", 
                "g_set_error_literal", 
                "g_usleep", 
                "g_strdup", 
                "g_string_insert_c", 
                "g_set_error", 
                "g_hash_table_insert", 
                "g_slist_append", 
                "g_type_check_class_cast", 
                "g_object_interface_install_property", 
                "g_type_register_static", 
                "g_hash_table_new", 
                "sigaction", 
                "g_cclosure_marshal_VOID__BOXED", 
                "dbus_g_object_type_install_info", 
                "g_object_weak_ref", 
                "g_value_set_boolean", 
                "g_type_class_add_private", 
                "g_value_set_uint", 
                "__stack_chk_fail", 
                "g_value_set_string", 
                "g_type_check_instance_cast", 
                "g_flags_register_static", 
                "g_value_unset", 
                "g_type_register_static_simple", 
                "g_type_class_peek_parent", 
                "g_object_class_install_property", 
                "g_string_free", 
                "g_timeout_add_seconds_full", 
                "g_free", 
                "g_slist_foreach", 
                "__gmon_start__", 
                "g_value_get_type", 
                "g_error_copy", 
                "read", 
                "g_source_remove", 
                "nm_connection_lookup_setting_type_by_quark", 
                "g_quark_from_static_string", 
                "g_assertion_message_expr", 
                "sigemptyset", 
                "g_strdup_printf", 
                "g_cclosure_marshal_VOID__UINT", 
                "g_type_check_value", 
                "dbus_g_connection_register_g_object", 
                "nm_connection_new_from_hash", 
                "g_type_interface_peek", 
                "g_type_instance_get_private", 
                "dbus_g_proxy_call", 
                "_ITM_registerTMCloneTable", 
                "dbus_g_connection_unref", 
                "g_hash_table_new_full", 
                "g_param_spec_string", 
                "strlen", 
                "g_intern_static_string", 
                "g_string_truncate", 
                "g_value_peek_pointer", 
                "g_string_new", 
                "dbus_g_bus_get", 
                "g_value_get_uint", 
                "memset", 
                "g_once_init_leave", 
                "g_signal_new"
            ], 
            "rpm": "NetworkManager-glib-0.9.9.1-29.git20140326.4dba720.el7_0.x86_64.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2mirror_so": {
            "report-functions": [
                "_Jv_RegisterClasses", 
                "dmeventd_lvm2_run", 
                "strtol", 
                "__stack_chk_fail", 
                "dmeventd_lvm2_lock", 
                "strlen", 
                "dmeventd_lvm2_unlock", 
                "dm_free_wrapper", 
                "dmeventd_lvm2_exit", 
                "strcmp", 
                "dm_get_next_target", 
                "dmeventd_lvm2_pool", 
                "__gmon_start__", 
                "dmeventd_lvm2_command", 
                "_ITM_deregisterTMCloneTable", 
                "dmeventd_lvm2_init", 
                "dm_split_words", 
                "dm_task_get_name", 
                "__syslog_chk", 
                "dm_malloc_wrapper", 
                "strchr"
            ], 
            "rpm": "NetworkManager-glib-0.9.9.1-29.git20140326.4dba720.el7_0.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2mirror.so"
        }, 
        "usr/lib64/libnm-util_so_2_5_0": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/libnm-util.so.2.5.0", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "PK11_DestroyContext", 
                "g_string_append_len", 
                "g_assertion_message_cmpnum", 
                "g_byte_array_free", 
                "g_value_get_int64", 
                "__cxa_finalize", 
                "PR_GetError", 
                "dbus_g_type_collection_value_iterate", 
                "g_slist_free", 
                "g_utf8_validate", 
                "g_ascii_xdigit_value", 
                "g_value_type_compatible", 
                "inet_pton", 
                "inet_aton", 
                "_ITM_deregisterTMCloneTable", 
                "g_string_new_len", 
                "g_value_copy", 
                "g_value_get_double", 
                "g_value_get_uint", 
                "PK11_CreateDigestContext", 
                "__gmon_start__", 
                "g_hash_table_foreach", 
                "_Jv_RegisterClasses", 
                "g_type_class_ref", 
                "g_type_check_instance_cast", 
                "g_object_class_find_property", 
                "g_free", 
                "g_value_dup_boxed", 
                "dbus_g_type_is_collection", 
                "g_ptr_array_sized_new", 
                "g_param_spec_char", 
                "g_hash_table_lookup", 
                "g_clear_error", 
                "g_type_check_value_holds", 
                "g_ptr_array_add", 
                "g_string_free", 
                "dbus_g_type_is_struct", 
                "g_value_reset", 
                "g_value_unset", 
                "inet_ntop", 
                "g_set_error", 
                "g_param_type_register_static", 
                "g_ascii_strtoull", 
                "g_value_get_boolean", 
                "g_array_free", 
                "PK11_DigestOp", 
                "__errno_location", 
                "g_value_array_get_nth", 
                "g_hash_table_size", 
                "SEC_PKCS12DecoderStart", 
                "PK11_CipherOp", 
                "g_value_get_ulong", 
                "strrchr", 
                "g_malloc0", 
                "g_hash_table_new_full", 
                "g_object_freeze_notify", 
                "g_strdup_value_contents", 
                "NSS_NoDB_Init", 
                "g_signal_connect_data", 
                "g_prefix_error", 
                "strcasecmp", 
                "dbus_g_type_get_collection_specialization", 
                "memcmp", 
                "g_error_matches", 
                "g_signal_new", 
                "g_value_set_boxed", 
                "memcpy", 
                "g_byte_array_ref", 
                "g_value_set_uint64", 
                "g_strv_get_type", 
                "g_strdup_printf", 
                "g_str_hash", 
                "g_strchug", 
                "g_ascii_strup", 
                "strcmp", 
                "g_param_spec_uint", 
                "strlen", 
                "g_value_dup_string", 
                "PK11_DigestBegin", 
                "strtol", 
                "g_ptr_array_free", 
                "PK11_ParamFromIV", 
                "g_cclosure_marshal_VOID__STRING", 
                "g_slist_length", 
                "PK11_GetBestSlot", 
                "g_once_init_enter", 
                "g_value_transform", 
                "g_object_get", 
                "g_value_array_new", 
                "g_value_array_append", 
                "dbus_g_type_is_map", 
                "g_hash_table_insert", 
                "g_slist_delete_link", 
                "SEC_PKCS12DecoderFinish", 
                "PK11_FreeSymKey", 
                "g_param_spec_internal", 
                "g_hash_table_iter_next", 
                "g_ascii_strdown", 
                "g_quark_from_static_string", 
                "g_malloc", 
                "g_utf8_to_utf16", 
                "g_byte_array_unref", 
                "g_param_spec_uint64", 
                "PK11_CreateContextBySymKey", 
                "g_malloc_n", 
                "g_assertion_message_cmpstr", 
                "SEC_PKCS12EnableCipher", 
                "g_string_sized_new", 
                "g_value_get_schar", 
                "g_value_get_int", 
                "PORT_ZAlloc", 
                "g_set_error_literal", 
                "g_assertion_message_expr", 
                "g_value_set_schar", 
                "g_hash_table_iter_remove", 
                "g_param_spec_int", 
                "SEC_PKCS12DecoderUpdate", 
                "PR_Cleanup", 
                "PK11_DigestFinal", 
                "g_slist_nth_data", 
                "g_type_check_instance_is_a", 
                "g_strsplit_set", 
                "g_byte_array_new", 
                "g_param_spec_boolean", 
                "g_slice_free1", 
                "g_slist_reverse", 
                "g_object_set_property", 
                "PK11_GenerateRandom", 
                "dcgettext", 
                "SEC_PKCS12DecoderVerify", 
                "g_value_register_transform_func", 
                "g_slist_append", 
                "g_value_take_string", 
                "g_value_set_string", 
                "SECITEM_FreeItem", 
                "g_type_class_add_private", 
                "g_signal_emit", 
                "g_array_remove_index", 
                "g_value_get_string", 
                "g_object_class_install_property", 
                "g_type_instance_get_private", 
                "g_type_test_flags", 
                "SECITEM_ZfreeItem", 
                "g_value_get_uint64", 
                "__stack_chk_fail", 
                "g_hash_table_get_keys", 
                "g_object_set", 
                "g_once_init_leave", 
                "PK11_GetInternalKeySlot", 
                "strchr", 
                "g_intern_static_string", 
                "g_byte_array_sized_new", 
                "PK11_ImportSymKey", 
                "g_convert", 
                "g_value_get_type", 
                "g_error_free", 
                "dbus_g_type_collection_get_fixed", 
                "g_str_equal", 
                "dbus_g_type_get_map_key_specialization", 
                "g_return_if_fail_warning", 
                "g_base64_decode", 
                "g_object_unref", 
                "dbus_g_type_get_struct", 
                "g_string_new", 
                "g_array_remove_range", 
                "g_hash_table_iter_init", 
                "g_value_get_boxed", 
                "g_hash_table_lookup_extended", 
                "g_type_class_unref", 
                "g_log", 
                "g_array_append_vals", 
                "g_type_register_static_simple", 
                "g_object_class_list_properties", 
                "g_boxed_type_register_static", 
                "getenv", 
                "g_string_append_printf", 
                "g_object_get_property", 
                "g_cclosure_marshal_VOID__VOID", 
                "g_hash_table_remove", 
                "g_ptr_array_new", 
                "memset", 
                "strtoul", 
                "g_strdup", 
                "g_type_init", 
                "g_slist_free_full", 
                "SEC_PKCS12SetPreferredCipher", 
                "g_strchomp", 
                "g_value_set_boolean", 
                "g_slist_nth", 
                "g_signal_handlers_block_matched", 
                "g_value_set_uint", 
                "g_slist_insert_sorted", 
                "CERT_DecodeCertFromPackage", 
                "g_byte_array_append", 
                "g_ptr_array_set_free_func", 
                "g_hash_table_destroy", 
                "g_param_spec_string", 
                "g_object_notify", 
                "g_list_free", 
                "g_param_value_defaults", 
                "dbus_g_type_get_collection", 
                "dbus_g_type_get_map", 
                "g_convert_with_fallback", 
                "uuid_unparse_lower", 
                "g_hash_table_new", 
                "dbus_g_type_map_value_iterate", 
                "dbus_g_object_path_get_g_type", 
                "g_strsplit", 
                "g_enum_register_static", 
                "g_propagate_error", 
                "g_type_is_a", 
                "g_value_set_int", 
                "g_hash_table_remove_all", 
                "PORT_GetError", 
                "g_warn_message", 
                "g_object_thaw_notify", 
                "g_value_take_boxed", 
                "g_signal_handlers_disconnect_matched", 
                "g_list_nth_data", 
                "g_value_get_float", 
                "g_value_get_uchar", 
                "g_array_get_element_size", 
                "g_type_class_peek_parent", 
                "g_string_insert_c", 
                "g_strfreev", 
                "g_param_spec_get_name", 
                "g_value_init", 
                "PR_Init", 
                "g_slice_alloc0", 
                "ether_aton_r", 
                "g_type_name", 
                "g_strcmp0", 
                "g_object_new", 
                "g_slist_prepend", 
                "g_print", 
                "_ITM_registerTMCloneTable", 
                "uuid_generate_random", 
                "g_get_charset", 
                "CERT_DestroyCertificate", 
                "g_base64_encode", 
                "g_value_get_long", 
                "g_file_get_contents", 
                "g_type_ensure", 
                "PK11_FreeSlot", 
                "g_signal_handlers_unblock_matched", 
                "g_assertion_message", 
                "g_malloc0_n", 
                "g_object_newv", 
                "g_array_sized_new", 
                "__memcpy_chk", 
                "g_type_check_class_cast", 
                "g_string_append", 
                "g_strndup", 
                "g_param_value_set_default", 
                "g_strv_length"
            ], 
            "rpm": "NetworkManager-glib-0.9.9.1-29.git20140326.4dba720.el7_0.x86_64.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2raid_so": {
            "report-functions": [
                "__stack_chk_fail", 
                "__syslog_chk", 
                "dm_task_get_name", 
                "_ITM_registerTMCloneTable", 
                "dmeventd_lvm2_init", 
                "dmeventd_lvm2_exit", 
                "strcmp", 
                "dmeventd_lvm2_run", 
                "_Jv_RegisterClasses", 
                "dm_split_words", 
                "dmeventd_lvm2_pool", 
                "__cxa_finalize", 
                "dmeventd_lvm2_command", 
                "__gmon_start__", 
                "strtol", 
                "dmeventd_lvm2_lock", 
                "dm_get_next_target", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "NetworkManager-glib-0.9.9.1-29.git20140326.4dba720.el7_0.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2raid.so"
        }, 
        "usr/lib64/libnm-glib_so_4_7_0": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/libnm-glib.so.4.7.0", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "nm_utils_ip6_routes_to_gvalue", 
                "nm_connection_replace_settings", 
                "dbus_g_connection_get_g_type", 
                "nm_setting_wireless_get_channel", 
                "g_str_hash", 
                "dbus_g_proxy_end_call", 
                "g_slist_reverse", 
                "nm_utils_hwaddr_ntoa_len", 
                "dbus_error_is_set", 
                "nm_connection_get_setting_bond", 
                "g_ascii_strdown", 
                "g_thread_create", 
                "nm_setting_wireless_get_mode", 
                "g_hash_table_iter_next", 
                "nm_ip6_address_unref", 
                "nm_connection_get_setting_bluetooth", 
                "g_array_free", 
                "nm_connection_get_setting_bridge", 
                "g_value_get_long", 
                "g_strsplit", 
                "g_type_check_class_cast", 
                "g_signal_emit_by_name", 
                "g_hash_table_get_keys", 
                "g_type_register_static_simple", 
                "g_main_loop_run", 
                "g_signal_connect_data", 
                "nm_setting_bridge_get_interface_name", 
                "g_string_new_len", 
                "g_free", 
                "g_value_set_uint", 
                "nm_connection_get_setting_wimax", 
                "g_warn_message", 
                "nm_setting_infiniband_get_mac_address", 
                "g_strdup", 
                "dbus_connection_allocate_data_slot", 
                "nm_ip6_route_unref", 
                "g_value_set_object", 
                "g_string_append", 
                "nm_setting_vlan_get_interface_name", 
                "nm_utils_ip4_routes_from_gvalue", 
                "dbus_g_connection_register_g_object", 
                "g_value_get_string", 
                "g_hash_table_iter_init", 
                "g_hash_table_iter_remove", 
                "nm_connection_get_setting_wireless_security", 
                "g_type_class_peek_parent", 
                "g_value_get_uchar", 
                "dbus_message_get_type", 
                "dbus_g_connection_get_connection", 
                "nm_utils_ip4_routes_to_gvalue", 
                "g_cclosure_marshal_VOID__VOID", 
                "dbus_g_proxy_new_for_peer", 
                "dbus_g_proxy_begin_call_with_timeout", 
                "g_strv_get_type", 
                "g_type_check_value", 
                "g_param_spec_pointer", 
                "g_value_get_uint", 
                "dbus_g_error_quark", 
                "dcgettext", 
                "g_hash_table_new_full", 
                "g_quark_from_static_string", 
                "g_main_context_find_source_by_user_data", 
                "g_signal_handlers_unblock_matched", 
                "dbus_pending_call_set_notify", 
                "g_direct_hash", 
                "g_slice_free1", 
                "g_param_spec_uint", 
                "g_log", 
                "g_value_peek_pointer", 
                "nm_setting_cdma_get_type", 
                "g_simple_async_result_take_error", 
                "g_strdup_printf", 
                "nm_setting_wireless_get_ssid", 
                "g_slist_append", 
                "g_udev_client_new", 
                "nm_connection_get_setting_adsl", 
                "g_string_insert_c", 
                "g_strcmp0", 
                "g_hash_table_unref", 
                "g_array_append_vals", 
                "g_async_result_get_type", 
                "dbus_g_proxy_new_for_name", 
                "g_idle_add_full", 
                "getenv", 
                "dbus_g_proxy_connect_signal", 
                "nm_utils_hex2byte", 
                "g_object_class_find_property", 
                "dbus_g_type_get_map", 
                "nm_setting_wimax_get_network_name", 
                "g_error_matches", 
                "g_byte_array_append", 
                "dbus_g_type_struct_get", 
                "g_mutex_lock", 
                "dbus_pending_call_unref", 
                "g_type_add_interface_static", 
                "g_hash_table_get_type", 
                "g_value_set_int", 
                "nm_connection_get_setting_wired", 
                "g_type_check_instance_cast", 
                "g_param_spec_boxed", 
                "g_once_init_leave", 
                "g_value_get_ulong", 
                "g_malloc0", 
                "g_type_class_add_private", 
                "nm_ip4_address_unref", 
                "g_ptr_array_remove", 
                "g_simple_async_result_set_op_res_gboolean", 
                "g_hash_table_remove", 
                "nm_utils_ip4_addresses_to_gvalue", 
                "g_param_spec_boolean", 
                "g_object_new", 
                "g_udev_client_query_by_subsystem_and_name", 
                "nm_setting_wireless_get_band", 
                "dbus_connection_unref", 
                "nm_utils_init", 
                "g_flags_register_static", 
                "nm_setting_bond_get_interface_name", 
                "dbus_connection_close", 
                "dbus_g_method_return", 
                "g_source_unref", 
                "nm_setting_wireless_security_get_num_protos", 
                "g_cclosure_marshal_generic", 
                "g_hash_table_destroy", 
                "g_ptr_array_add", 
                "g_param_spec_string", 
                "dbus_g_connection_unref", 
                "g_signal_new", 
                "__cxa_finalize", 
                "strcmp", 
                "g_value_get_double", 
                "g_slice_alloc", 
                "dbus_g_thread_init", 
                "g_value_get_flags", 
                "nm_connection_get_setting_gsm", 
                "dbus_g_proxy_get_path", 
                "nm_setting_wired_get_type", 
                "nm_setting_infiniband_get_type", 
                "dbus_g_connection_unregister_g_object", 
                "g_return_if_fail_warning", 
                "nm_setting_olpc_mesh_get_type", 
                "g_clear_error", 
                "nm_connection_get_path", 
                "g_value_init", 
                "g_source_remove", 
                "g_initable_get_type", 
                "g_param_spec_flags", 
                "g_value_get_schar", 
                "g_async_initable_init_finish", 
                "g_signal_handler_find", 
                "dbus_g_method_get_sender", 
                "g_simple_async_result_propagate_error", 
                "g_slist_length", 
                "memcmp", 
                "g_value_unset", 
                "g_ptr_array_new", 
                "dbus_message_unref", 
                "g_hash_table_lookup", 
                "nm_setting_generic_get_type", 
                "__fprintf_chk", 
                "g_main_loop_unref", 
                "dbus_g_proxy_call", 
                "g_assertion_message", 
                "g_ascii_tolower", 
                "g_malloc_n", 
                "nm_ip4_route_unref", 
                "nm_connection_get_setting_vlan", 
                "g_cclosure_marshal_VOID__BOXED", 
                "nm_utils_hwaddr_aton", 
                "g_signal_handler_disconnect", 
                "g_idle_source_new", 
                "g_param_spec_uchar", 
                "g_simple_async_result_get_op_res_gboolean", 
                "nm_setting_vlan_get_id", 
                "g_snprintf", 
                "dbus_g_type_get_struct", 
                "dbus_message_new_method_call", 
                "dbus_g_proxy_get_interface", 
                "g_object_class_install_property", 
                "strlen", 
                "memset", 
                "g_source_attach", 
                "g_error_free", 
                "g_intern_static_string", 
                "g_value_set_static_string", 
                "nm_connection_new_from_hash", 
                "g_value_get_type", 
                "dbus_bus_get_private", 
                "g_cclosure_marshal_VOID__OBJECT", 
                "g_value_dup_boxed", 
                "dbus_g_proxy_cancel_call", 
                "dbus_bus_get_unix_user", 
                "dbus_g_type_struct_set", 
                "g_mutex_unlock", 
                "g_simple_async_result_get_type", 
                "nm_ip6_address_dup", 
                "nm_utils_ip6_routes_from_gvalue", 
                "ether_aton", 
                "dbus_connection_set_data", 
                "strstr", 
                "nm_setting_connection_get_connection_type", 
                "g_value_get_int", 
                "g_once_init_enter", 
                "nm_connection_set_path", 
                "g_main_loop_new", 
                "nm_setting_wimax_get_type", 
                "dbus_connection_setup_with_g_main", 
                "dbus_g_error_domain_register", 
                "dbus_g_error_has_name", 
                "nm_setting_wimax_get_mac_address", 
                "g_object_run_dispose", 
                "g_string_free", 
                "g_ptr_array_set_free_func", 
                "g_object_notify", 
                "nm_connection_get_setting_cdma", 
                "g_type_check_value_holds", 
                "memmove", 
                "g_utf8_validate", 
                "g_source_set_callback", 
                "g_source_destroy", 
                "dbus_connection_set_exit_on_disconnect", 
                "nm_connection_get_setting_team", 
                "g_value_get_boolean", 
                "g_object_unref", 
                "g_timeout_source_new", 
                "nm_connection_get_setting_infiniband", 
                "nm_setting_wireless_get_bssid", 
                "_ITM_deregisterTMCloneTable", 
                "g_byte_array_sized_new", 
                "dbus_error_free", 
                "nm_utils_ip6_addresses_from_gvalue", 
                "dbus_g_proxy_call_no_reply", 
                "nm_setting_adsl_get_type", 
                "g_ptr_array_free", 
                "dbus_g_bus_get", 
                "g_value_set_uchar", 
                "dbus_g_method_return_error", 
                "dbus_g_proxy_call_with_timeout", 
                "g_simple_async_result_set_from_error", 
                "g_dpgettext", 
                "nm_setting_wireless_get_mac_address", 
                "g_async_result_get_source_object", 
                "g_main_loop_quit", 
                "g_simple_async_result_is_valid", 
                "g_type_check_instance_is_a", 
                "nm_setting_wireless_get_type", 
                "g_slist_free", 
                "nm_setting_connection_get_interface_name", 
                "nm_utils_ip6_addresses_to_gvalue", 
                "g_type_init", 
                "g_async_initable_get_type", 
                "nm_connection_get_setting_olpc_mesh", 
                "nm_setting_wireless_security_get_key_mgmt", 
                "g_thread_join", 
                "g_idle_add", 
                "dbus_g_proxy_begin_call", 
                "g_strdup_value_contents", 
                "g_set_error", 
                "dbus_g_type_specialized_construct", 
                "dbus_set_error_from_message", 
                "nm_setting_team_get_interface_name", 
                "g_byte_array_free", 
                "geteuid", 
                "g_value_set_boolean", 
                "dbus_error_init", 
                "g_error_new", 
                "nm_utils_wifi_freq_to_channel", 
                "g_object_ref", 
                "g_array_sized_new", 
                "g_main_context_unref", 
                "__memcpy_chk", 
                "nm_setting_bluetooth_get_type", 
                "g_simple_async_result_set_op_res_gpointer", 
                "dbus_connection_get_data", 
                "dbus_bus_add_match", 
                "g_signal_handlers_block_matched", 
                "dbus_message_get_args", 
                "g_signal_emit", 
                "dbus_g_object_type_install_info", 
                "g_main_context_new", 
                "g_simple_async_result_new", 
                "nm_connection_to_hash", 
                "nm_setting_wireless_ap_security_compatible", 
                "dbus_g_object_register_marshaller", 
                "g_value_dup_string", 
                "dbus_connection_send_with_reply", 
                "nm_connection_get_setting_wireless", 
                "g_type_name", 
                "nm_setting_wireless_security_get_proto", 
                "dbus_pending_call_steal_reply", 
                "nm_setting_bluetooth_get_bdaddr", 
                "dbus_g_object_path_get_g_type", 
                "g_initable_init", 
                "g_malloc0_n", 
                "nm_setting_wired_get_mac_address", 
                "g_set_error_literal", 
                "g_str_has_prefix", 
                "dbus_g_proxy_add_signal", 
                "g_simple_async_result_set_check_cancellable", 
                "g_object_set_data_full", 
                "g_strfreev", 
                "nm_utils_ip4_addresses_from_gvalue", 
                "g_assertion_message_expr", 
                "_Jv_RegisterClasses", 
                "g_slist_prepend", 
                "nm_setting_gsm_get_type", 
                "g_simple_async_result_get_op_res_gpointer", 
                "g_value_set_string", 
                "g_boxed_type_register_static", 
                "g_simple_async_result_complete_in_idle", 
                "dbus_g_connection_open", 
                "nm_setting_bridge_get_type", 
                "g_cclosure_marshal_VOID__BOOLEAN", 
                "g_str_equal", 
                "g_usleep", 
                "g_slist_remove_link", 
                "dbus_connection_add_filter", 
                "g_hash_table_insert", 
                "dbus_g_proxy_set_default_timeout", 
                "dbus_message_is_signal", 
                "g_type_class_peek", 
                "g_udev_device_get_parent", 
                "g_signal_handlers_disconnect_matched", 
                "g_param_spec_object", 
                "g_value_set_flags", 
                "g_slist_remove", 
                "g_ptr_array_sized_new", 
                "g_value_get_boxed", 
                "g_mutex_free", 
                "dbus_g_type_get_collection", 
                "g_hash_table_remove_all", 
                "g_slice_alloc0", 
                "g_enum_register_static", 
                "__gmon_start__", 
                "g_mutex_new", 
                "g_udev_device_get_property", 
                "g_type_instance_get_private", 
                "g_malloc", 
                "nm_setting_bond_get_type", 
                "g_object_steal_data", 
                "nm_setting_team_get_type", 
                "nm_setting_bluetooth_get_connection_type", 
                "__stack_chk_fail", 
                "nm_connection_get_uuid", 
                "memcpy", 
                "g_param_spec_int", 
                "g_simple_async_result_complete", 
                "g_type_interface_peek_parent", 
                "_ITM_registerTMCloneTable", 
                "nm_ip6_route_dup", 
                "g_direct_equal", 
                "g_list_free", 
                "g_error_new_literal", 
                "g_hash_table_new", 
                "nm_setting_vlan_get_type", 
                "nm_connection_get_id", 
                "g_slist_free_full", 
                "g_boxed_free", 
                "g_value_set_boxed", 
                "nm_connection_get_setting_connection", 
                "g_async_initable_init_async", 
                "nm_connection_get_type"
            ], 
            "rpm": "NetworkManager-glib-0.9.9.1-29.git20140326.4dba720.el7_0.x86_64.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2thin_so": {
            "report-functions": [
                "dm_task_get_deps", 
                "dmeventd_lvm2_unlock", 
                "dm_task_destroy", 
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable", 
                "dm_pool_free", 
                "dm_get_next_target", 
                "dm_bitset_create", 
                "strerror", 
                "dm_task_run", 
                "__errno_location", 
                "dm_task_set_name", 
                "exit", 
                "dmeventd_lvm2_exit", 
                "dm_pool_create", 
                "dm_task_no_open_count", 
                "dm_mountinfo_read", 
                "dmeventd_lvm2_lock", 
                "__stack_chk_fail", 
                "dm_bitset_destroy", 
                "dmeventd_lvm2_command", 
                "dm_pool_zalloc", 
                "_ITM_registerTMCloneTable", 
                "execvp", 
                "waitpid", 
                "dmeventd_lvm2_init", 
                "__syslog_chk", 
                "dm_task_get_names", 
                "dm_task_get_info", 
                "dm_task_create", 
                "fork", 
                "dmeventd_lvm2_run", 
                "dm_pool_destroy", 
                "dm_task_get_name", 
                "dm_get_status_thin_pool"
            ], 
            "rpm": "NetworkManager-glib-0.9.9.1-29.git20140326.4dba720.el7_0.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2thin.so"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2mirror_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2mirror.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "dmeventd_lvm2_run", 
                "__cxa_finalize", 
                "__syslog_chk", 
                "dm_free_wrapper", 
                "__gmon_start__", 
                "strlen", 
                "dmeventd_lvm2_command", 
                "_ITM_registerTMCloneTable", 
                "dm_get_next_target", 
                "_Jv_RegisterClasses", 
                "strchr", 
                "dm_malloc_wrapper", 
                "dm_task_get_name", 
                "dmeventd_lvm2_init", 
                "strcmp", 
                "__stack_chk_fail", 
                "dmeventd_lvm2_exit", 
                "dm_split_words", 
                "dmeventd_lvm2_lock", 
                "dmeventd_lvm2_pool"
            ], 
            "rpm": "NetworkManager-glib-0.9.9.1-29.git20140326.4dba720.el7_0.x86_64.rpm"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2raid_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2raid.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "strcmp", 
                "dm_get_next_target", 
                "dmeventd_lvm2_run", 
                "__gmon_start__", 
                "_Jv_RegisterClasses", 
                "dmeventd_lvm2_command", 
                "__cxa_finalize", 
                "__syslog_chk", 
                "strchr", 
                "_ITM_deregisterTMCloneTable", 
                "dm_task_get_name", 
                "dmeventd_lvm2_unlock", 
                "dmeventd_lvm2_exit", 
                "strtol", 
                "dmeventd_lvm2_init", 
                "dm_split_words", 
                "dmeventd_lvm2_lock", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "NetworkManager-glib-0.9.9.1-29.git20140326.4dba720.el7_0.x86_64.rpm"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2thin_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2thin.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "dm_get_status_thin_pool", 
                "dmeventd_lvm2_lock", 
                "dm_get_next_target", 
                "dm_bitset_create", 
                "execvp", 
                "dm_task_run", 
                "_Jv_RegisterClasses", 
                "dm_task_get_name", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "dm_task_no_open_count", 
                "__cxa_finalize", 
                "__errno_location", 
                "dm_pool_zalloc", 
                "dm_task_get_deps", 
                "dmeventd_lvm2_unlock", 
                "dm_pool_destroy", 
                "dm_mountinfo_read", 
                "__stack_chk_fail", 
                "_ITM_registerTMCloneTable", 
                "dmeventd_lvm2_run", 
                "strerror", 
                "dmeventd_lvm2_exit", 
                "dm_task_set_name", 
                "dm_pool_free", 
                "dm_bitset_destroy", 
                "dm_task_get_names", 
                "__syslog_chk", 
                "dm_pool_create", 
                "dmeventd_lvm2_command", 
                "dmeventd_lvm2_init", 
                "dm_task_create", 
                "exit", 
                "dm_task_destroy", 
                "waitpid"
            ], 
            "rpm": "NetworkManager-glib-0.9.9.1-29.git20140326.4dba720.el7_0.x86_64.rpm"
        }, 
        "usr/lib/device-mapper/libdevmapper-event-lvm2snapshot_so": {
            "report-functions": [
                "fopen64", 
                "feof", 
                "dm_task_get_info", 
                "fork", 
                "dmeventd_lvm2_lock", 
                "dm_pool_free", 
                "fgets", 
                "execvp", 
                "dm_pool_destroy", 
                "dmeventd_lvm2_exit", 
                "dm_pool_zalloc", 
                "dmeventd_lvm2_init", 
                "fclose", 
                "dm_split_words", 
                "__errno_location", 
                "_Jv_RegisterClasses", 
                "waitpid", 
                "dm_get_next_target", 
                "dm_get_status_snapshot", 
                "dmeventd_lvm2_command", 
                "strerror", 
                "__cxa_finalize", 
                "__syslog_chk", 
                "_ITM_deregisterTMCloneTable", 
                "__xstat64", 
                "exit", 
                "__gmon_start__", 
                "dmeventd_lvm2_run", 
                "dm_pool_create", 
                "dmeventd_lvm2_unlock", 
                "__stack_chk_fail"
            ], 
            "rpm": "NetworkManager-glib-0.9.9.1-29.git20140326.4dba720.el7_0.x86_64.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/device-mapper/libdevmapper-event-lvm2snapshot.so"
        }, 
        "usr/lib64/device-mapper/libdevmapper-event-lvm2snapshot_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/device-mapper/libdevmapper-event-lvm2snapshot.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "dmeventd_lvm2_exit", 
                "__cxa_finalize", 
                "exit", 
                "waitpid", 
                "__xstat64", 
                "strerror", 
                "__stack_chk_fail", 
                "dmeventd_lvm2_init", 
                "dm_split_words", 
                "fork", 
                "dm_pool_zalloc", 
                "dmeventd_lvm2_unlock", 
                "dmeventd_lvm2_run", 
                "_ITM_registerTMCloneTable", 
                "feof", 
                "_ITM_deregisterTMCloneTable", 
                "fclose", 
                "dm_pool_destroy", 
                "_Jv_RegisterClasses", 
                "dmeventd_lvm2_command", 
                "fopen64", 
                "dm_pool_create", 
                "execvp", 
                "dm_task_get_info", 
                "dm_task_get_name", 
                "__syslog_chk", 
                "__errno_location", 
                "dm_pool_free", 
                "__gmon_start__", 
                "dmeventd_lvm2_lock", 
                "dm_get_next_target"
            ], 
            "rpm": "NetworkManager-glib-0.9.9.1-29.git20140326.4dba720.el7_0.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Version": " 0.9.9.1", 
            "Name": " NetworkManager-glib", 
            "License": " GPLv2+", 
            "URL": " http://www.gnome.org/projects/NetworkManager/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " x86-021.build.eng.bos.redhat.com", 
            "Source RPM": " NetworkManager-0.9.9.1-29.git20140326.4dba720.el7_0.src.rpm", 
            "Description": "\nThis package contains the libraries that make it easier to use some NetworkManager\nfunctionality from applications that use glib.\n", 
            "Build Date": " Tue 02 Dec 2014 12:47:07 PM EST", 
            "Vendor": " Red Hat, Inc.", 
            "Epoch": " 1", 
            "warning": " /home/jason/fctl/swap/2/NetworkManager-glib-0.9.9.1-29.git20140326.4dba720.el7_0.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID fd431d51: NOKEY", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Thu 04 Dec 2014 10:20:16 AM EST, Key ID 199e2f91fd431d51", 
            "Release": " 29.git20140326.4dba720.el7_0", 
            "Group": " Development/Libraries", 
            "Packager": " Red Hat, Inc. <http://bugzilla.redhat.com/bugzilla>", 
            "Summary": " Libraries for adding NetworkManager support to applications that use glib.", 
            "Size": " 1006576"
        }
    }
}