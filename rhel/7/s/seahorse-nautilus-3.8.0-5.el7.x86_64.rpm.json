{
    "results": {
        "usr/bin/seahorse-tool": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/seahorse-tool", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "g_date_strftime", 
                "g_object_unref", 
                "gtk_misc_set_alignment", 
                "_ITM_deregisterTMCloneTable", 
                "g_file_replace_finish", 
                "gtk_statusbar_get_context_id", 
                "g_malloc", 
                "__errno_location", 
                "gpgme_data_new_from_cbs", 
                "g_strsplit", 
                "gpgme_engine_check_version", 
                "g_seekable_get_type", 
                "gtk_list_store_new", 
                "bind_textdomain_codeset", 
                "g_string_append_len", 
                "gtk_box_pack_start", 
                "g_value_dup_string", 
                "gtk_label_set_text", 
                "gtk_entry_set_text", 
                "g_type_check_instance_cast", 
                "g_object_class_install_property", 
                "g_spawn_command_line_sync", 
                "gtk_label_get_type", 
                "g_file_info_get_file_type", 
                "g_string_new", 
                "g_signal_connect_data", 
                "g_child_watch_add", 
                "g_seekable_can_seek", 
                "cryptui_key_store_get_all_keys", 
                "g_settings_new_with_path", 
                "gcr_prompt_password_run", 
                "g_list_free", 
                "g_log", 
                "gtk_file_chooser_get_uri", 
                "g_file_info_get_size", 
                "gtk_combo_box_text_get_type", 
                "_ITM_registerTMCloneTable", 
                "gpgme_op_encrypt_sign_start", 
                "gtk_tree_model_get_type", 
                "notify_notification_get_type", 
                "g_signal_emit", 
                "g_input_stream_read_async", 
                "gpgme_set_io_cbs", 
                "g_ascii_strcasecmp", 
                "gtk_toggle_button_get_type", 
                "gpgme_op_keylist_ext_start", 
                "g_type_register_static", 
                "g_file_info_get_display_name", 
                "gtk_widget_set_sensitive", 
                "gtk_builder_get_object", 
                "g_string_append_printf", 
                "g_strsplit_set", 
                "gtk_cell_renderer_text_new", 
                "g_main_context_pending", 
                "gtk_progress_bar_get_type", 
                "gtk_window_set_title", 
                "g_output_stream_get_type", 
                "g_strfreev", 
                "g_hash_table_remove", 
                "exit", 
                "g_markup_parse_context_free", 
                "g_list_foreach", 
                "gtk_file_filter_set_name", 
                "cryptui_key_store_new", 
                "gpgme_cancel", 
                "gtk_file_filter_add_pattern", 
                "g_type_class_peek_parent", 
                "gtk_window_set_transient_for", 
                "g_timeout_add", 
                "notify_is_initted", 
                "cryptui_keyset_key_get_string", 
                "g_main_loop_quit", 
                "g_cclosure_marshal_VOID__VOID", 
                "g_io_channel_read_line", 
                "gcr_prompt_set_cancel_label", 
                "gpgme_op_keylist_end", 
                "g_get_current_dir", 
                "g_timeout_add_seconds", 
                "gpgme_set_keylist_mode", 
                "bindtextdomain", 
                "g_input_stream_read_finish", 
                "g_string_free", 
                "g_date_set_time_t", 
                "gcr_system_prompt_open_finish", 
                "gpgme_data_set_file_name", 
                "g_spawn_async_with_pipes", 
                "g_input_stream_close_async", 
                "strcmp", 
                "g_date_new", 
                "gtk_combo_box_set_active", 
                "gcr_system_prompt_open_async", 
                "gpgme_err_code_from_errno", 
                "gtk_box_new", 
                "g_file_info_get_name", 
                "dbus_g_proxy_end_call", 
                "g_type_class_add_private", 
                "textdomain", 
                "g_io_channel_unix_new", 
                "strtod", 
                "g_strv_get_type", 
                "gtk_window_set_icon_name", 
                "notify_init", 
                "gtk_statusbar_get_type", 
                "cryptui_display_notification", 
                "g_io_channel_set_encoding", 
                "gpgme_op_decrypt_verify_start", 
                "gtk_container_get_children", 
                "gtk_image_new_from_stock", 
                "g_uri_unescape_string", 
                "g_print", 
                "gpgme_op_encrypt_start", 
                "g_file_new_for_path", 
                "g_object_ref", 
                "g_array_new", 
                "g_file_enumerate_children", 
                "g_once_init_leave", 
                "g_array_append_vals", 
                "gtk_init", 
                "g_file_resolve_relative_path", 
                "gtk_label_new", 
                "g_shell_quote", 
                "cryptui_keyset_new", 
                "gtk_file_filter_add_mime_type", 
                "gtk_progress_bar_get_pulse_step", 
                "gtk_toggle_button_set_active", 
                "g_value_set_uint", 
                "g_once_init_enter", 
                "gtk_box_get_type", 
                "gtk_window_resize", 
                "g_settings_get_boolean", 
                "g_str_equal", 
                "gtk_cell_layout_pack_start", 
                "gtk_editable_select_region", 
                "g_assertion_message", 
                "g_file_replace_async", 
                "g_value_set_double", 
                "notify_notification_show", 
                "g_main_loop_unref", 
                "gtk_file_chooser_set_local_only", 
                "gtk_builder_new", 
                "g_input_stream_get_type", 
                "gtk_progress_bar_set_pulse_step", 
                "g_hash_table_size", 
                "g_io_channel_unix_get_fd", 
                "g_hash_table_lookup", 
                "g_param_spec_string", 
                "g_io_add_watch", 
                "notify_notification_set_urgency", 
                "g_file_read_async", 
                "gpgme_new", 
                "g_object_get_data", 
                "gcr_system_prompt_close_async", 
                "gtk_main_quit", 
                "gtk_file_chooser_add_filter", 
                "cryptui_prompt_recipients", 
                "g_markup_parse_context_new", 
                "gpgme_set_textmode", 
                "gtk_combo_box_set_model", 
                "gpgme_strerror", 
                "gtk_image_new_from_file", 
                "gpgme_key_unref", 
                "g_markup_escape_text", 
                "g_locale_to_utf8", 
                "__stack_chk_fail", 
                "gtk_dialog_set_default_response", 
                "g_option_context_add_main_entries", 
                "gtk_widget_show", 
                "gtk_init_with_args", 
                "cryptui_keyset_key_flags", 
                "g_value_get_uint", 
                "gcr_prompt_set_continue_label", 
                "g_strcmp0", 
                "chmod", 
                "cryptui_prompt_signer", 
                "gtk_label_set_line_wrap", 
                "gtk_dialog_run", 
                "g_file_get_child_for_display_name", 
                "g_hash_table_destroy", 
                "g_list_prepend", 
                "cryptui_keyset_key_raw_keyid", 
                "dbus_g_error_quark", 
                "g_main_context_iteration", 
                "__gmon_start__", 
                "gtk_file_chooser_select_uri", 
                "gtk_file_chooser_set_filter", 
                "g_cancellable_new", 
                "g_io_channel_unref", 
                "g_return_if_fail_warning", 
                "gtk_dialog_get_type", 
                "g_io_add_watch_full", 
                "gtk_window_get_size", 
                "g_assertion_message_expr", 
                "g_list_reverse", 
                "g_markup_parse_context_parse", 
                "gcr_prompt_set_description", 
                "gpgme_op_verify_start", 
                "g_settings_get_int", 
                "g_output_stream_flush_async", 
                "gtk_label_set_selectable", 
                "g_file_query_exists", 
                "g_seekable_seek", 
                "g_signal_handlers_disconnect_matched", 
                "g_param_spec_double", 
                "g_cancellable_cancel", 
                "cryptui_need_to_get_keys", 
                "gtk_cell_layout_set_attributes", 
                "gtk_window_present", 
                "gtk_file_chooser_set_uri", 
                "gtk_label_set_markup", 
                "gtk_misc_get_type", 
                "g_hash_table_insert", 
                "g_string_printf", 
                "strlen", 
                "g_type_instance_get_private", 
                "dcngettext", 
                "gpgme_set_passphrase_cb", 
                "g_option_context_new", 
                "g_file_get_parent", 
                "g_idle_add_full", 
                "gpgme_data_release", 
                "gtk_main", 
                "gtk_progress_bar_set_fraction", 
                "g_value_peek_pointer", 
                "gtk_file_chooser_dialog_new", 
                "gpgme_set_protocol", 
                "g_settings_set_int", 
                "gpgme_release", 
                "gpgme_get_key", 
                "g_file_get_uri", 
                "notify_notification_new", 
                "g_string_append", 
                "g_strdup", 
                "g_thread_yield", 
                "g_output_stream_close_async", 
                "cryptui_key_store_set_filter", 
                "gpgme_signers_clear", 
                "gpgme_set_armor", 
                "g_uri_parse_scheme", 
                "gpgme_check_version_internal", 
                "g_error_free", 
                "__libc_start_main", 
                "gpgme_op_verify_result", 
                "gtk_toggle_button_get_active", 
                "gtk_file_filter_new", 
                "gtk_file_chooser_get_type", 
                "gcr_prompt_set_password_new", 
                "g_output_stream_flush_finish", 
                "g_settings_set_string", 
                "cryptui_key_store_get_count", 
                "gpgme_set_progress_cb", 
                "g_strchug", 
                "g_main_loop_new", 
                "g_file_enumerator_next_file", 
                "cryptui_keyset_keys_raw_keyids", 
                "gtk_builder_connect_signals", 
                "gtk_widget_get_type", 
                "gcr_prompt_set_message", 
                "gtk_window_get_type", 
                "g_signal_new", 
                "gtk_combo_box_text_append_text", 
                "dbus_g_proxy_begin_call", 
                "write", 
                "cryptui_keyset_get_count", 
                "g_type_register_static_simple", 
                "strrchr", 
                "gtk_entry_get_text", 
                "g_param_spec_uint", 
                "g_value_get_string", 
                "gtk_entry_get_type", 
                "g_set_error", 
                "strstr", 
                "g_list_remove", 
                "gtk_statusbar_push", 
                "g_value_set_string", 
                "g_strndup", 
                "dbus_g_error_get_name", 
                "g_spawn_close_pid", 
                "strerror", 
                "g_type_check_instance_is_a", 
                "dbus_g_proxy_new_for_name", 
                "g_file_get_path", 
                "g_file_get_basename", 
                "gpgme_op_keylist_next", 
                "gpgme_op_sign_start", 
                "g_intern_static_string", 
                "dcgettext", 
                "gtk_widget_grab_focus", 
                "gtk_cell_layout_clear", 
                "gtk_statusbar_pop", 
                "gtk_window_move", 
                "notify_notification_update", 
                "gpgme_signers_add", 
                "gtk_widget_show_all", 
                "g_quark_from_static_string", 
                "kill", 
                "g_strdup_vprintf", 
                "gtk_progress_bar_pulse", 
                "g_strdup_printf", 
                "g_file_read_finish", 
                "g_param_spec_pointer", 
                "g_object_set", 
                "g_str_hash", 
                "g_clear_error", 
                "g_error_copy", 
                "gtk_builder_add_from_file", 
                "g_markup_printf_escaped", 
                "dbus_g_bus_get", 
                "gtk_container_remove", 
                "g_strv_length", 
                "gpgme_data_read", 
                "g_hash_table_new", 
                "g_strchomp", 
                "g_list_append", 
                "gtk_widget_set_size_request", 
                "g_settings_new", 
                "g_source_remove", 
                "g_value_set_pointer", 
                "g_output_stream_write_finish", 
                "g_free", 
                "_Jv_RegisterClasses", 
                "gtk_cell_layout_get_type", 
                "g_io_error_quark", 
                "g_object_set_data_full", 
                "g_object_new", 
                "g_find_program_in_path", 
                "gtk_widget_destroy", 
                "gtk_combo_box_text_get_active_text", 
                "g_settings_set_boolean", 
                "g_malloc0", 
                "g_main_loop_run", 
                "g_file_query_info", 
                "gtk_editable_get_type", 
                "gcr_system_prompt_get_type", 
                "gtk_message_dialog_new_with_markup", 
                "g_output_stream_write_async", 
                "g_utf8_validate", 
                "g_array_free", 
                "gtk_message_dialog_new", 
                "g_object_set_data", 
                "gtk_box_reorder_child", 
                "g_type_check_class_cast", 
                "fwrite", 
                "g_settings_get_string", 
                "gtk_dialog_add_buttons", 
                "g_file_new_for_uri"
            ], 
            "rpm": "seahorse-nautilus-3.8.0-5.el7.x86_64.rpm"
        }, 
        "usr/lib64/nautilus/extensions-3_0/libnautilus-seahorse_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/nautilus/extensions-3.0/libnautilus-seahorse.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "g_assertion_message_expr", 
                "g_free", 
                "g_string_free", 
                "_ITM_deregisterTMCloneTable", 
                "bind_textdomain_codeset", 
                "g_type_check_instance_cast", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "g_type_class_peek_parent", 
                "g_object_set_data_full", 
                "nautilus_file_info_is_mime_type", 
                "nautilus_menu_item_new", 
                "dcngettext", 
                "nautilus_file_info_list_copy", 
                "nautilus_menu_provider_get_type", 
                "g_log", 
                "g_type_module_add_interface", 
                "g_shell_quote", 
                "g_spawn_command_line_async", 
                "g_ascii_strncasecmp", 
                "bindtextdomain", 
                "g_print", 
                "__cxa_finalize", 
                "g_signal_connect_data", 
                "g_type_module_register_type", 
                "g_string_append_printf", 
                "g_string_new", 
                "g_list_append", 
                "g_dgettext", 
                "nautilus_file_info_get_uri", 
                "nautilus_file_info_list_free", 
                "g_list_length"
            ], 
            "rpm": "seahorse-nautilus-3.8.0-5.el7.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Version": " 3.8.0", 
            "Name": " seahorse-nautilus", 
            "License": " GPLv2+", 
            "URL": " https://live.gnome.org/Seahorse", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " x86-020.build.eng.bos.redhat.com", 
            "Description": "\nSeahorse nautilus is an extension for nautilus which allows encryption\nand decryption of OpenPGP files using GnuPG.\n", 
            "Build Date": " Fri 02 May 2014 08:13:14 AM EDT", 
            "Vendor": " Red Hat, Inc.", 
            "Source RPM": " seahorse-nautilus-3.8.0-5.el7.src.rpm", 
            "warning": " /home/jason/fctl/swap/3/seahorse-nautilus-3.8.0-5.el7.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID fd431d51: NOKEY", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Mon 05 May 2014 03:53:20 AM EDT, Key ID 199e2f91fd431d51", 
            "Release": " 5.el7", 
            "Group": " Unspecified", 
            "Packager": " Red Hat, Inc. <http://bugzilla.redhat.com/bugzilla>", 
            "Summary": " PGP encryption and signing for nautilus", 
            "Size": " 837850"
        }
    }
}