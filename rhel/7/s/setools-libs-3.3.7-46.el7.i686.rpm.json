{
    "results": {
        "usr/lib/libsefs_so_4_0_3": {
            "report-functions": [
                "apol_str_to_objclass", 
                "apol_str_strcmp", 
                "lgetfilecon", 
                "regexec", 
                "sqlite3_result_int", 
                "memcpy", 
                "lgetfilecon_raw", 
                "readlink", 
                "__cxa_begin_catch", 
                "sqlite3_errmsg", 
                "apol_mls_range_create_from_string", 
                "apol_vector_sort_uniquify", 
                "sqlite3_value_text", 
                "qpol_iterator_next", 
                "apol_context_set_range", 
                "apol_context_set_role", 
                "apol_str_trim", 
                "calloc", 
                "_ZNSsC1EPKcRKSaIcE", 
                "__errno_location", 
                "_ZNSs4_Rep10_M_destroyERKSaIcE", 
                "apol_bst_create", 
                "__gxx_personality_v0", 
                "apol_vector_create_with_capacity", 
                "__asprintf_chk", 
                "_ITM_registerTMCloneTable", 
                "context_user_get", 
                "feof", 
                "apol_bst_inorder_map", 
                "apol_vector_get_element", 
                "qpol_type_get_type_iter", 
                "apol_context_get_range", 
                "fchdir", 
                "_ITM_deregisterTMCloneTable", 
                "_ZNSt16invalid_argumentC1ERKSs", 
                "selinux_file_context_path", 
                "_Unwind_Resume", 
                "_ZNSt9bad_allocD1Ev", 
                "apol_str_appendf", 
                "strdup", 
                "_ZdlPv", 
                "_ZNSt13runtime_errorD1Ev", 
                "regcomp", 
                "__pthread_key_create", 
                "apol_mls_range_compare", 
                "qpol_type_get_isalias", 
                "context_new", 
                "gethostname", 
                "fputc", 
                "fopen64", 
                "_ZNSt16invalid_argumentD1Ev", 
                "__cxa_throw", 
                "strlen", 
                "readdir64", 
                "exit", 
                "malloc", 
                "qpol_type_get_isattr", 
                "__cxa_pure_virtual", 
                "context_role_get", 
                "sqlite3_create_function", 
                "apol_bst_insert_and_get", 
                "apol_context_set_type", 
                "apol_policy_get_qpol", 
                "apol_bst_get_element", 
                "free", 
                "strptime", 
                "fwrite", 
                "regfree", 
                "apol_vector_remove", 
                "__cxa_end_catch", 
                "apol_mls_range_destroy", 
                "apol_str_append", 
                "_ZNSs4_Rep10_M_disposeERKSaIcE", 
                "_Jv_RegisterClasses", 
                "tsearch", 
                "getmntent_r", 
                "sqlite3_close", 
                "closedir", 
                "__cxa_allocate_exception", 
                "qpol_iterator_destroy", 
                "regerror", 
                "__cxa_finalize", 
                "apol_vector_append", 
                "apol_bst_destroy", 
                "dirfd", 
                "chdir", 
                "__xstat64", 
                "strtoul", 
                "strtol", 
                "__gmon_start__", 
                "qpol_type_get_attr_iter", 
                "memset", 
                "qpol_type_get_name", 
                "apol_bst_insert", 
                "context_range_get", 
                "__cxa_free_exception", 
                "context_free", 
                "time", 
                "sqlite3_exec", 
                "_ZNSt13runtime_errorC1ERKSs", 
                "__cxa_call_unexpected", 
                "__strdup", 
                "apol_context_convert", 
                "apol_vector_get_index", 
                "_Znwj", 
                "qpol_iterator_get_item", 
                "realloc", 
                "stpcpy", 
                "apol_vector_create", 
                "opendir", 
                "tdestroy", 
                "__cxa_rethrow", 
                "qpol_policy_get_type_iter", 
                "__getdelim", 
                "tfind", 
                "context_type_get", 
                "sqlite3_open", 
                "apol_mls_range_create_from_literal", 
                "apol_context_destroy", 
                "freecon", 
                "apol_context_set_user", 
                "__stack_chk_fail", 
                "access", 
                "apol_vector_destroy", 
                "sqlite3_user_data", 
                "sqlite3_free", 
                "apol_context_create", 
                "qpol_policy_get_type_by_name", 
                "fclose", 
                "qpol_iterator_end", 
                "mktime", 
                "strerror", 
                "getcwd", 
                "apol_vector_get_size", 
                "__rawmemchr", 
                "qpol_type_get_alias_iter", 
                "strcmp"
            ], 
            "rpm": "setools-libs-3.3.7-46.el7.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/libsefs.so.4.0.3"
        }, 
        "usr/lib/libapol_so_4_3": {
            "report-functions": [
                "qpol_level_get_value", 
                "qpol_terule_get_syn_terule_iter", 
                "qpol_terule_get_object_class", 
                "__vfprintf_chk", 
                "qpol_user_get_range", 
                "qpol_type_set_get_is_star", 
                "qpol_filename_trans_get_filename", 
                "qpol_type_get_isalias", 
                "qpol_avrule_get_syn_avrule_iter", 
                "time", 
                "fclose", 
                "qpol_terule_get_source_type", 
                "__stack_chk_fail", 
                "qpol_filename_trans_get_target_type", 
                "qpol_avrule_get_target_type", 
                "qpol_fs_use_get_name", 
                "qpol_filename_trans_get_source_type", 
                "qpol_policy_has_capability", 
                "qpol_context_get_type", 
                "qpol_policy_get_range_trans_iter", 
                "qpol_terule_get_cond", 
                "qpol_policy_get_constraint_iter", 
                "qpol_policy_append_module", 
                "qpol_avrule_get_perm_iter", 
                "qpol_module_create_from_file", 
                "qpol_policy_get_fs_use_iter", 
                "qpol_syn_avrule_get_is_target_self", 
                "qpol_policy_get_class_by_name", 
                "qpol_terule_get_default_type", 
                "qpol_type_set_get_subtracted_types_iter", 
                "qpol_class_get_value", 
                "getenv", 
                "qpol_genfscon_get_name", 
                "qpol_syn_terule_get_target_type_set", 
                "qpol_policy_get_user_iter", 
                "qpol_policy_get_filename_trans_iter", 
                "qpol_policy_get_bool_iter", 
                "qpol_syn_avrule_get_source_type_set", 
                "memcpy", 
                "qpol_policy_get_role_trans_iter", 
                "qpol_policy_get_portcon_iter", 
                "qpol_terule_get_target_type", 
                "qpol_policy_get_validatetrans_iter", 
                "regerror", 
                "qpol_nodecon_get_protocol", 
                "qpol_class_get_common", 
                "qpol_syn_terule_get_default_type", 
                "__strsep_g", 
                "qpol_type_get_attr_iter", 
                "qpol_policy_get_role_by_name", 
                "qpol_isid_get_name", 
                "swab", 
                "qpol_portcon_get_low_port", 
                "qpol_class_get_perm_iter", 
                "regcomp", 
                "strlen", 
                "qpol_avrule_get_cond", 
                "free", 
                "qpol_constraint_get_class", 
                "qpol_portcon_get_context", 
                "malloc", 
                "strchr", 
                "qpol_syn_avrule_get_rule_type", 
                "qpol_genfscon_get_path", 
                "qpol_mls_level_get_sens_name", 
                "qpol_policy_get_cond_iter", 
                "memmove", 
                "qpol_cat_get_value", 
                "qpol_iterator_destroy", 
                "qpol_range_trans_get_range", 
                "qpol_avrule_get_rule_type", 
                "qpol_nodecon_get_addr", 
                "qpol_syn_terule_get_source_type_set", 
                "qpol_syn_avrule_get_target_type_set", 
                "qpol_syn_avrule_get_perm_iter", 
                "qpol_type_get_type_iter", 
                "qpol_user_get_dfltlevel", 
                "qpol_type_get_alias_iter", 
                "qpol_level_get_cat_iter", 
                "qpol_fs_use_get_behavior", 
                "qpol_context_get_user", 
                "qpol_nodecon_get_mask", 
                "qpol_policy_get_permissive_iter", 
                "access", 
                "qpol_role_get_type_iter", 
                "qpol_mls_range_get_high_level", 
                "qpol_iterator_get_size", 
                "ctime", 
                "strcasecmp", 
                "qpol_cat_get_alias_iter", 
                "qpol_genfscon_get_class", 
                "fwrite", 
                "qpol_policy_get_cat_by_name", 
                "qpol_permissive_get_name", 
                "qpol_cat_get_isalias", 
                "qpol_class_get_name", 
                "__snprintf_chk", 
                "qpol_user_get_role_iter", 
                "qpol_terule_get_rule_type", 
                "qpol_isid_get_context", 
                "qpol_range_trans_get_target_class", 
                "regfree", 
                "fputc", 
                "qpol_policy_get_user_by_name", 
                "_ITM_deregisterTMCloneTable", 
                "sscanf", 
                "qpol_range_trans_get_target_type", 
                "feof", 
                "qpol_type_get_name", 
                "strcat", 
                "qpol_genfscon_get_context", 
                "__ctype_b_loc", 
                "memcmp", 
                "fgets", 
                "__getdelim", 
                "qpol_policy_rebuild", 
                "__asprintf_chk", 
                "qpol_avrule_get_is_enabled", 
                "regexec", 
                "qpol_role_get_value", 
                "qpol_avrule_get_source_type", 
                "qpol_range_trans_get_source_type", 
                "qpol_mls_level_get_cat_iter", 
                "qpol_netifcon_get_name", 
                "qpol_type_set_get_included_types_iter", 
                "qpol_iterator_get_item", 
                "qpol_netifcon_get_if_con", 
                "qpol_level_get_name", 
                "qpol_iterator_end", 
                "realloc", 
                "qpol_policy_get_genfscon_iter", 
                "qpol_syn_terule_get_class_iter", 
                "qpol_filename_trans_get_default_type", 
                "fopen64", 
                "qpol_context_get_role", 
                "qpol_role_allow_get_target_role", 
                "fread", 
                "qpol_cat_get_name", 
                "qpol_user_get_name", 
                "qpol_role_trans_get_default_role", 
                "qpol_policy_get_nodecon_iter", 
                "qpol_filename_trans_get_object_class", 
                "inet_pton", 
                "qpol_policy_get_cat_iter", 
                "qpol_portcon_get_protocol", 
                "qpol_role_trans_get_source_role", 
                "qpol_policy_get_netifcon_iter", 
                "__gmon_start__", 
                "qpol_module_destroy", 
                "strcmp", 
                "qpol_policy_get_terule_iter", 
                "qpol_user_get_value", 
                "qpol_policy_get_class_iter", 
                "calloc", 
                "qpol_policy_get_type_by_name", 
                "qpol_policy_get_isid_iter", 
                "qpol_context_get_range", 
                "qpol_policy_get_common_iter", 
                "qpol_policy_get_role_allow_iter", 
                "qpol_fs_use_get_context", 
                "qpol_policy_get_type_iter", 
                "qpol_constraint_get_perm_iter", 
                "_Jv_RegisterClasses", 
                "qpol_level_get_isalias", 
                "qpol_policy_get_avrule_iter", 
                "qpol_mls_range_get_low_level", 
                "qpol_level_get_alias_iter", 
                "qpol_nodecon_get_context", 
                "qpol_type_set_get_is_comp", 
                "rewind", 
                "qpol_polcap_get_name", 
                "qpol_role_get_name", 
                "qpol_cond_expr_node_get_bool", 
                "strcpy", 
                "qpol_type_get_value", 
                "qpol_policy_get_role_iter", 
                "strtol", 
                "qpol_type_get_isattr", 
                "qpol_role_trans_get_target_type", 
                "qpol_syn_terule_get_rule_type", 
                "qpol_common_get_name", 
                "qpol_policy_get_policy_version", 
                "__fprintf_chk", 
                "qpol_syn_terule_get_lineno", 
                "qpol_role_allow_get_source_role", 
                "qpol_policy_get_level_iter", 
                "__errno_location", 
                "__vasprintf_chk", 
                "qpol_syn_avrule_get_lineno", 
                "qpol_validatetrans_get_class", 
                "qpol_iterator_next", 
                "qpol_portcon_get_high_port", 
                "qpol_cond_expr_node_get_expr_type", 
                "qpol_policy_get_polcap_iter", 
                "__strndup", 
                "qpol_policy_open_from_file", 
                "__sprintf_chk", 
                "qpol_bool_get_name", 
                "qpol_cond_get_expr_node_iter", 
                "qpol_syn_avrule_get_class_iter", 
                "strerror", 
                "_ITM_registerTMCloneTable", 
                "qpol_common_get_perm_iter", 
                "qpol_avrule_get_object_class", 
                "__strdup", 
                "qpol_terule_get_is_enabled", 
                "qpol_policy_destroy", 
                "qpol_policy_get_level_by_name", 
                "__cxa_finalize"
            ], 
            "rpm": "setools-libs-3.3.7-46.el7.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/libapol.so.4.3"
        }, 
        "usr/lib/setools/apol_tcl/libapol_tcl_so_4_3": {
            "report-functions": [
                "qpol_policy_get_policy_version", 
                "qpol_terule_get_is_enabled", 
                "qpol_terule_get_source_type", 
                "ctime", 
                "qpol_syn_avrule_get_class_iter", 
                "qpol_terule_get_default_type", 
                "getenv", 
                "qpol_policy_get_cat_by_name", 
                "context_free", 
                "qpol_syn_avrule_get_target_type_set", 
                "qpol_policy_get_level_by_name", 
                "__gxx_personality_v0", 
                "qpol_syn_avrule_get_perm_iter", 
                "qpol_level_get_value", 
                "__stack_chk_fail", 
                "_ZdaPv", 
                "__pthread_key_create", 
                "__strndup", 
                "Tcl_SetErrorCode", 
                "strstr", 
                "strcmp", 
                "qpol_type_set_get_is_comp", 
                "regcomp", 
                "__cxa_rethrow", 
                "Tcl_GetLongFromObj", 
                "fopen64", 
                "_Unwind_Resume", 
                "qpol_syn_terule_get_class_iter", 
                "fread", 
                "strptime", 
                "__rawmemchr", 
                "sqlite3_open", 
                "inet_pton", 
                "sqlite3_errmsg", 
                "qpol_policy_open_from_file", 
                "qpol_context_get_range", 
                "Tcl_NewIntObj", 
                "qpol_syn_avrule_get_lineno", 
                "qpol_user_get_dfltlevel", 
                "memcpy", 
                "__strcpy_chk", 
                "readlink", 
                "qpol_terule_get_cond", 
                "__cxa_free_exception", 
                "dirfd", 
                "qpol_common_get_perm_iter", 
                "free", 
                "malloc", 
                "qpol_class_get_common", 
                "Tcl_GetObjResult", 
                "_ZNSt13runtime_errorC1ERKSs", 
                "qpol_permissive_get_name", 
                "qpol_policy_get_user_iter", 
                "qpol_syn_terule_get_source_type_set", 
                "qpol_class_get_name", 
                "lgetfilecon_raw", 
                "qpol_type_set_get_is_star", 
                "Tcl_ResetResult", 
                "Tcl_NewStringObj", 
                "context_role_get", 
                "Tcl_PkgProvide", 
                "_ITM_deregisterTMCloneTable", 
                "__snprintf_chk", 
                "context_user_get", 
                "Tcl_SetObjResult", 
                "qpol_iterator_get_item", 
                "freecon", 
                "qpol_level_get_alias_iter", 
                "qpol_avrule_get_is_enabled", 
                "qpol_policy_get_class_by_name", 
                "readdir64", 
                "mktime", 
                "qpol_role_get_name", 
                "qpol_avrule_get_target_type", 
                "qpol_cat_get_name", 
                "__cxa_throw", 
                "closedir", 
                "_ZNSs4_Rep10_M_disposeERKSaIcE", 
                "_Znwj", 
                "_ITM_registerTMCloneTable", 
                "qpol_iterator_get_size", 
                "tdestroy", 
                "Tcl_SetResult", 
                "qpol_iterator_next", 
                "__cxa_end_catch", 
                "getcwd", 
                "strerror", 
                "qpol_polcap_get_name", 
                "TclFreeObj", 
                "qpol_level_get_isalias", 
                "qpol_policy_get_class_iter", 
                "strtoul", 
                "_ZNSt9bad_allocD1Ev", 
                "qpol_type_get_value", 
                "__asprintf_chk", 
                "qpol_terule_get_target_type", 
                "opendir", 
                "qpol_module_create_from_file", 
                "Tcl_AppendElement", 
                "__fprintf_chk", 
                "fwrite", 
                "qpol_cond_expr_node_get_bool", 
                "qpol_policy_append_module", 
                "_ZNSs4_Rep10_M_destroyERKSaIcE", 
                "qpol_terule_get_rule_type", 
                "qpol_class_get_value", 
                "__cxa_finalize", 
                "qpol_cat_get_isalias", 
                "chdir", 
                "qpol_syn_avrule_get_source_type_set", 
                "Tcl_SetVar", 
                "qpol_policy_destroy", 
                "_Jv_RegisterClasses", 
                "qpol_syn_avrule_get_rule_type", 
                "qpol_avrule_get_source_type", 
                "qpol_cond_expr_node_get_expr_type", 
                "memset", 
                "qpol_type_get_attr_iter", 
                "tfind", 
                "qpol_type_get_type_iter", 
                "qpol_context_get_role", 
                "strchr", 
                "sscanf", 
                "sqlite3_create_function", 
                "regerror", 
                "qpol_module_destroy", 
                "strcasecmp", 
                "sqlite3_free", 
                "sqlite3_value_text", 
                "__cxa_begin_catch", 
                "feof", 
                "qpol_mls_level_get_cat_iter", 
                "__vasprintf_chk", 
                "sqlite3_close", 
                "Tcl_GetDoubleFromObj", 
                "qpol_level_get_cat_iter", 
                "qpol_terule_get_syn_terule_iter", 
                "Tcl_Eval", 
                "qpol_avrule_get_perm_iter", 
                "qpol_avrule_get_syn_avrule_iter", 
                "qpol_user_get_range", 
                "sqlite3_result_int", 
                "qpol_mls_range_get_low_level", 
                "__ctype_b_loc", 
                "context_new", 
                "__strsep_g", 
                "fchdir", 
                "qpol_syn_terule_get_lineno", 
                "exit", 
                "Tcl_GetString", 
                "qpol_context_get_user", 
                "qpol_level_get_name", 
                "_ZNSt16invalid_argumentD1Ev", 
                "_ZNSt13runtime_errorD1Ev", 
                "qpol_policy_get_type_iter", 
                "__cxa_call_unexpected", 
                "qpol_avrule_get_rule_type", 
                "Tcl_InitHashTable", 
                "qpol_role_get_type_iter", 
                "Tcl_DuplicateObj", 
                "qpol_type_set_get_subtracted_types_iter", 
                "fputc", 
                "rewind", 
                "__cxa_allocate_exception", 
                "ctime_r", 
                "Tcl_DeleteHashEntry", 
                "calloc", 
                "qpol_iterator_destroy", 
                "__errno_location", 
                "qpol_user_get_value", 
                "qpol_cond_get_expr_node_iter", 
                "__xstat64", 
                "qpol_policy_get_user_by_name", 
                "Tcl_VarEval", 
                "Tcl_GetStringResult", 
                "qpol_bool_get_name", 
                "Tcl_CreateObjCommand", 
                "qpol_policy_get_cat_iter", 
                "strdup", 
                "_ZNSt16invalid_argumentC1ERKSs", 
                "qpol_user_get_role_iter", 
                "qpol_mls_range_get_high_level", 
                "qpol_mls_level_get_sens_name", 
                "fgets", 
                "qpol_role_get_value", 
                "strcpy", 
                "sqlite3_user_data", 
                "qpol_type_get_isalias", 
                "__vfprintf_chk", 
                "qpol_syn_terule_get_rule_type", 
                "qpol_policy_get_terule_iter", 
                "qpol_user_get_name", 
                "qpol_context_get_type", 
                "Tcl_DoOneEvent", 
                "access", 
                "gethostname", 
                "_ZdlPv", 
                "strtol", 
                "Tcl_ObjSetVar2", 
                "Tcl_GetVar", 
                "qpol_syn_terule_get_target_type_set", 
                "qpol_policy_rebuild", 
                "__sprintf_chk", 
                "regexec", 
                "realloc", 
                "regfree", 
                "qpol_syn_terule_get_default_type", 
                "qpol_type_set_get_included_types_iter", 
                "strlen", 
                "qpol_type_get_isattr", 
                "strcat", 
                "__gmon_start__", 
                "_ZNSsC1EPKcRKSaIcE", 
                "stpcpy", 
                "getmntent_r", 
                "_Znaj", 
                "__memcpy_chk", 
                "qpol_policy_get_avrule_iter", 
                "sqlite3_exec", 
                "qpol_class_get_perm_iter", 
                "lgetfilecon", 
                "qpol_cat_get_alias_iter", 
                "qpol_policy_get_role_by_name", 
                "context_type_get", 
                "Tcl_GetCommandInfo", 
                "qpol_avrule_get_object_class", 
                "__assert_fail", 
                "qpol_terule_get_object_class", 
                "qpol_policy_get_level_iter", 
                "time", 
                "qpol_policy_has_capability", 
                "qpol_policy_get_role_iter", 
                "__strdup", 
                "qpol_type_get_name", 
                "qpol_policy_get_type_by_name", 
                "Tcl_AppendResult", 
                "qpol_cat_get_value", 
                "__cxa_pure_virtual", 
                "Tcl_DeleteCommandFromToken", 
                "qpol_syn_avrule_get_is_target_self", 
                "fclose", 
                "qpol_type_get_alias_iter", 
                "Tcl_EvalObjv", 
                "memmove", 
                "qpol_avrule_get_cond", 
                "qpol_iterator_end", 
                "tsearch", 
                "Tcl_GetStringFromObj"
            ], 
            "rpm": "setools-libs-3.3.7-46.el7.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/setools/apol_tcl/libapol_tcl.so.4.3"
        }, 
        "usr/lib/libseaudit_so_4_4": {
            "report-functions": [
                "context_role_get", 
                "apol_vector_create_from_vector", 
                "calloc", 
                "xmlStrcmp", 
                "xmlSAXUserParseFile", 
                "context_range_get", 
                "strlen", 
                "strstr", 
                "access", 
                "apol_str_is_only_white_space", 
                "xmlFreeTextReader", 
                "context_new", 
                "fnmatch", 
                "clearerr", 
                "free", 
                "strtol", 
                "apol_vector_sort", 
                "__strdup", 
                "xmlURIUnescapeString", 
                "__errno_location", 
                "xmlTextReaderValue", 
                "time", 
                "apol_vector_append", 
                "fgets", 
                "apol_bst_get_element", 
                "xmlTextReaderGetAttribute", 
                "_ITM_registerTMCloneTable", 
                "tzset", 
                "strcat", 
                "fwrite", 
                "fclose", 
                "apol_bst_get_vector", 
                "__cxa_finalize", 
                "apol_vector_compare", 
                "strftime", 
                "strrchr", 
                "__fprintf_chk", 
                "strerror", 
                "memcpy", 
                "apol_bst_destroy", 
                "apol_str_strcmp", 
                "__asprintf_chk", 
                "localtime_r", 
                "_Jv_RegisterClasses", 
                "xmlStrndup", 
                "xmlTextReaderRead", 
                "xmlTextReaderMoveToNextAttribute", 
                "apol_file_find", 
                "xmlTextReaderAttributeCount", 
                "context_user_get", 
                "__stack_chk_fail", 
                "apol_vector_cat", 
                "__vfprintf_chk", 
                "fputc", 
                "feof", 
                "context_type_get", 
                "xmlNewTextReaderFilename", 
                "apol_vector_remove", 
                "__getdelim", 
                "asctime", 
                "strncasecmp", 
                "_ITM_deregisterTMCloneTable", 
                "xmlURIEscapeStr", 
                "apol_vector_get_element", 
                "realloc", 
                "apol_str_appendf", 
                "apol_str_trim", 
                "fputs", 
                "apol_bst_insert", 
                "context_free", 
                "malloc", 
                "strcmp", 
                "apol_str_append", 
                "apol_str_strdup", 
                "xmlTextReaderHasAttributes", 
                "__gmon_start__", 
                "ctime", 
                "apol_vector_create", 
                "xmlCharStrdup", 
                "xmlTextReaderNodeType", 
                "apol_bst_create", 
                "fopen64", 
                "strchr", 
                "xmlTextReaderName", 
                "strtoul", 
                "apol_vector_destroy", 
                "apol_bst_insert_and_get", 
                "apol_vector_get_size", 
                "apol_vector_get_index"
            ], 
            "rpm": "setools-libs-3.3.7-46.el7.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/libseaudit.so.4.4"
        }, 
        "usr/lib/libqpol_so_1_6": {
            "report-functions": [
                "__gmon_start__", 
                "BZ2_bzReadClose", 
                "__assert_fail", 
                "__cxa_finalize", 
                "memcmp", 
                "memset", 
                "strcpy", 
                "__snprintf_chk", 
                "selinux_policy_root", 
                "strncpy", 
                "strncasecmp", 
                "rewind", 
                "__stack_chk_fail", 
                "__strdup", 
                "__errno_location", 
                "snprintf", 
                "fseek", 
                "__vsnprintf_chk", 
                "__fprintf_chk", 
                "memcpy", 
                "puts", 
                "fclose", 
                "realloc", 
                "isatty", 
                "_ITM_registerTMCloneTable", 
                "selinux_current_policy_path", 
                "strcmp", 
                "__printf_chk", 
                "fputc", 
                "__ctype_b_loc", 
                "BZ2_bzReadOpen", 
                "exit", 
                "__asprintf_chk", 
                "strerror", 
                "strlen", 
                "mmap64", 
                "_ITM_deregisterTMCloneTable", 
                "security_policyvers", 
                "strchr", 
                "munmap", 
                "strcasecmp", 
                "fread", 
                "__strtok_r", 
                "malloc", 
                "fopen", 
                "_Jv_RegisterClasses", 
                "access", 
                "calloc", 
                "ftell", 
                "strrchr", 
                "BZ2_bzRead", 
                "strncmp", 
                "__fsetlocking", 
                "strtol", 
                "free", 
                "__getdelim", 
                "__memcpy_chk", 
                "strtoul", 
                "inet_ntop", 
                "fwrite", 
                "__vfprintf_chk", 
                "__fxstat", 
                "inet_pton", 
                "fopen64"
            ], 
            "rpm": "setools-libs-3.3.7-46.el7.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/libqpol.so.1.6"
        }, 
        "usr/lib/libpoldiff_so_1_3_2": {
            "report-functions": [
                "qpol_cat_get_name", 
                "qpol_role_get_name", 
                "qpol_terule_get_source_type", 
                "apol_class_get_by_query", 
                "qpol_policy_get_role_allow_iter", 
                "qpol_cat_get_value", 
                "qpol_policy_has_capability", 
                "apol_vector_create_from_vector", 
                "qpol_role_allow_get_target_role", 
                "apol_mls_range_render", 
                "qpol_class_get_common", 
                "strerror", 
                "memcpy", 
                "apol_str_appendf", 
                "qpol_type_get_attr_iter", 
                "qpol_avrule_get_cond", 
                "qpol_bool_set_state_no_eval", 
                "apol_bool_get_by_query", 
                "qpol_common_get_name", 
                "qpol_user_get_range", 
                "__errno_location", 
                "qpol_role_trans_get_target_type", 
                "qpol_range_trans_get_target_type", 
                "apol_mls_level_create_from_qpol_mls_level", 
                "qpol_common_get_perm_iter", 
                "qpol_terule_get_which_list", 
                "qpol_policy_get_range_trans_iter", 
                "apol_cond_expr_render", 
                "apol_type_get_by_query", 
                "apol_policy_destroy", 
                "apol_mls_range_create_from_qpol_mls_range", 
                "apol_bst_get_vector", 
                "realloc", 
                "apol_vector_get_element", 
                "qpol_type_get_name", 
                "qpol_avrule_get_syn_avrule_iter", 
                "apol_vector_create_with_capacity", 
                "qpol_policy_get_common_iter", 
                "apol_rule_type_to_str", 
                "__stack_chk_fail", 
                "qpol_cond_expr_node_get_expr_type", 
                "qpol_cond_get_expr_node_iter", 
                "qpol_range_trans_get_target_class", 
                "__cxa_finalize", 
                "qpol_syn_avrule_get_lineno", 
                "qpol_policy_rebuild", 
                "apol_bst_insert_and_get", 
                "qpol_policy_get_type_by_name", 
                "_ITM_registerTMCloneTable", 
                "qpol_cond_expr_node_get_bool", 
                "qpol_iterator_get_size", 
                "apol_mls_range_destroy", 
                "apol_vector_cat", 
                "qpol_type_get_type_iter", 
                "apol_vector_sort", 
                "qpol_type_get_value", 
                "qpol_avrule_get_object_class", 
                "qpol_type_get_isattr", 
                "qpol_bool_get_name", 
                "qpol_policy_get_terule_iter", 
                "apol_vector_append", 
                "qpol_iterator_get_item", 
                "qpol_avrule_get_perm_iter", 
                "qpol_avrule_get_target_type", 
                "apol_vector_remove", 
                "qpol_level_get_cat_iter", 
                "qpol_terule_get_default_type", 
                "qpol_avrule_get_source_type", 
                "__gmon_start__", 
                "qpol_terule_get_object_class", 
                "apol_policy_get_qpol", 
                "qpol_policy_get_level_iter", 
                "qpol_policy_get_avrule_iter", 
                "_ITM_deregisterTMCloneTable", 
                "apol_vector_create", 
                "qpol_user_get_name", 
                "qpol_policy_get_cat_by_name", 
                "qpol_terule_get_cond", 
                "qpol_level_get_name", 
                "apol_bst_create", 
                "free", 
                "qpol_avrule_get_which_list", 
                "qpol_type_get_alias_iter", 
                "qpol_level_get_value", 
                "qpol_policy_get_level_by_name", 
                "apol_bst_destroy", 
                "qpol_syn_avrule_get_perm_iter", 
                "apol_vector_sort_uniquify", 
                "apol_str_strcmp", 
                "apol_mls_level_destroy", 
                "__strdup", 
                "qpol_terule_get_target_type", 
                "__asprintf_chk", 
                "qpol_role_trans_get_source_role", 
                "memmove", 
                "qpol_policy_get_class_iter", 
                "qpol_policy_get_bool_iter", 
                "_Jv_RegisterClasses", 
                "qpol_syn_terule_get_lineno", 
                "qpol_policy_reevaluate_conds", 
                "qpol_user_get_role_iter", 
                "qpol_policy_get_role_iter", 
                "qpol_iterator_end", 
                "qpol_terule_get_rule_type", 
                "apol_str_append", 
                "qpol_terule_get_syn_terule_iter", 
                "apol_perm_get_by_query", 
                "apol_mls_level_get_cats", 
                "qpol_role_trans_get_default_role", 
                "qpol_iterator_destroy", 
                "calloc", 
                "__assert_fail", 
                "apol_vector_get_size", 
                "apol_mls_range_get_low", 
                "qpol_range_trans_get_range", 
                "qpol_policy_get_type_iter", 
                "apol_vector_destroy", 
                "qpol_role_allow_get_source_role", 
                "qpol_policy_get_user_iter", 
                "apol_vector_get_index", 
                "fwrite", 
                "qpol_range_trans_get_source_type", 
                "qpol_policy_build_syn_rule_table", 
                "__vfprintf_chk", 
                "qpol_role_get_type_iter", 
                "qpol_policy_get_cat_iter", 
                "qpol_iterator_next", 
                "qpol_class_get_perm_iter", 
                "apol_vector_append_unique", 
                "qpol_cond_eval", 
                "strcmp", 
                "apol_mls_level_get_sens", 
                "qpol_class_get_name", 
                "apol_str_strdup", 
                "apol_vector_create_from_iter", 
                "qpol_type_get_isalias", 
                "apol_mls_range_get_levels", 
                "qpol_avrule_get_rule_type", 
                "qpol_user_get_dfltlevel", 
                "apol_vector_compare", 
                "apol_bst_get_element", 
                "fputc"
            ], 
            "rpm": "setools-libs-3.3.7-46.el7.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/libpoldiff.so.1.3.2"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Version": " 3.3.7", 
            "Name": " setools-libs", 
            "License": " LGPLv2", 
            "URL": " http://oss.tresys.com/projects/setools", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " x86-025.build.eng.bos.redhat.com", 
            "Description": "\nSETools is a collection of graphical tools, command-line tools, and\nlibraries designed to facilitate SELinux policy analysis.\n\nThis package includes the following run-time libraries:\n\n  libapol       policy analysis library\n  libpoldiff    semantic policy difference library\n  libqpol       library that abstracts policy internals\n  libseaudit    parse and filter SELinux audit messages in log files\n  libsefs       SELinux file contexts library\n", 
            "Build Date": " Mon 24 Mar 2014 08:16:26 AM EDT", 
            "Vendor": " Red Hat, Inc.", 
            "Source RPM": " setools-3.3.7-46.el7.src.rpm", 
            "warning": " /home/jason/fctl/swap/3/setools-libs-3.3.7-46.el7.i686.rpm: Header V3 RSA/SHA256 Signature, key ID fd431d51: NOKEY", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Wed 02 Apr 2014 04:13:07 PM EDT, Key ID 199e2f91fd431d51", 
            "Release": " 46.el7", 
            "Group": " System Environment/Libraries", 
            "Packager": " Red Hat, Inc. <http://bugzilla.redhat.com/bugzilla>", 
            "Summary": " Policy analysis support libraries for SELinux", 
            "Size": " 1528488"
        }
    }
}