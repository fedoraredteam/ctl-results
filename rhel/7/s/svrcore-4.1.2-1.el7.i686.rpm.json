{
    "results": {
        "usr/lib/libsvrcore_so_0_0_0": {
            "report-functions": [
                "setsockopt", 
                "free", 
                "rename", 
                "__cxa_finalize", 
                "SECITEM_ZfreeItem", 
                "__stack_chk_fail", 
                "umask", 
                "malloc", 
                "clock_gettime", 
                "PK11_IsInternal", 
                "PK11_CheckUserPassword", 
                "getpid", 
                "PK11_DestroyContext", 
                "__errno_location", 
                "PK11_FreeSymKey", 
                "__printf_chk", 
                "PK11_SetPasswordFunc", 
                "_ITM_deregisterTMCloneTable", 
                "memset", 
                "tcsetattr", 
                "__strdup", 
                "__fprintf_chk", 
                "PK11_GetBlockSize", 
                "PK11_CipherOp", 
                "close", 
                "fopen", 
                "isatty", 
                "fflush", 
                "PK11_GetTokenName", 
                "fclose", 
                "sleep", 
                "strchr", 
                "strncpy", 
                "fileno", 
                "bind", 
                "PK11_TokenKeyGenWithFlags", 
                "fgets", 
                "_Jv_RegisterClasses", 
                "__gmon_start__", 
                "PK11_Finalize", 
                "strcmp", 
                "strcpy", 
                "putchar", 
                "mkdir", 
                "PK11_GenerateNewParam", 
                "_ITM_registerTMCloneTable", 
                "PK11_DoesMechanism", 
                "__snprintf_chk", 
                "unlink", 
                "strlen", 
                "tcgetattr", 
                "PK11_FreeSlot", 
                "PK11_FindSlotByName", 
                "fwrite", 
                "PK11_CreateContextBySymKey"
            ], 
            "rpm": "svrcore-4.1.2-1.el7.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/libsvrcore.so.0.0.0"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Version": " 4.1.2", 
            "Name": " svrcore", 
            "License": " MPL2.0", 
            "URL": " https://pagure.io/svrcore", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " x86-030.build.eng.bos.redhat.com", 
            "Description": "\nsvrcore provides applications with several ways to handle secure PIN storage\ne.g. in an application that must be restarted, but needs the PIN to unlock\nthe private key and other crypto material, without user intervention.  svrcore\nuses the facilities provided by NSS.\n", 
            "Build Date": " Thu 21 Apr 2016 04:43:29 PM EDT", 
            "Vendor": " Red Hat, Inc.", 
            "Source RPM": " svrcore-4.1.2-1.el7.src.rpm", 
            "warning": " /home/jason/fctl/swap/3/svrcore-4.1.2-1.el7.i686.rpm: Header V3 RSA/SHA256 Signature, key ID fd431d51: NOKEY", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Sun 11 Sep 2016 10:27:39 PM EDT, Key ID 199e2f91fd431d51", 
            "Release": " 1.el7", 
            "Group": " Development/Libraries", 
            "Packager": " Red Hat, Inc. <http://bugzilla.redhat.com/bugzilla>", 
            "Summary": " Secure PIN handling using NSS crypto", 
            "Size": " 27307"
        }
    }
}