{
    "results": {
        "usr/sbin/ipset": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/sbin/ipset", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "ipset_parse_setname", 
                "ipset_envopt_parse", 
                "ipset_parse_output", 
                "__ctype_b_loc", 
                "ipset_parse_typename", 
                "ipset_parse_elem", 
                "__fprintf_chk", 
                "ipset_types", 
                "fclose", 
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable", 
                "strcmp", 
                "fputc", 
                "__stack_chk_fail", 
                "strtok", 
                "ipset_session_lineno", 
                "strlen", 
                "ipset_commit", 
                "strerror", 
                "strncmp", 
                "ipset_match_typename", 
                "__printf_chk", 
                "puts", 
                "ipset_session_report_reset", 
                "ipset_session_warning", 
                "fgets", 
                "_Jv_RegisterClasses", 
                "ipset_data_flags", 
                "ipset_type_get", 
                "ipset_data_family", 
                "ipset_cmd", 
                "exit", 
                "ipset_session_outfn", 
                "__errno_location", 
                "ipset_envopt_test", 
                "__vfprintf_chk", 
                "printf", 
                "ipset_load_types", 
                "__libc_start_main", 
                "ipset_session_error", 
                "fopen", 
                "ipset_call_parser", 
                "fputs", 
                "__gmon_start__", 
                "ipset_session_data"
            ], 
            "rpm": "ipset-6.19-4.el7.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Version": " 6.19", 
            "Name": " ipset", 
            "License": " GPLv2", 
            "URL": " http://ipset.netfilter.org/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " x86-017.build.eng.bos.redhat.com", 
            "Description": "\nIP sets are a framework inside the Linux 2.4.x and 2.6.x kernel, which can be\nadministered by the ipset utility. Depending on the type, currently an IP set\nmay store IP addresses, (TCP/UDP) port numbers or IP addresses with MAC\naddresses in a way, which ensures lightning speed when matching an entry\nagainst a set.\n\nIf you want to:\n - store multiple IP addresses or port numbers and match against the collection\n   by iptables at one swoop;\n - dynamically update iptables rules against IP addresses or ports without\n   performance penalty;\n - express complex IP address and ports based rulesets with one single iptables\n   rule and benefit from the speed of IP sets\nthen ipset may be the proper tool for you.\n", 
            "Build Date": " Fri 24 Jan 2014 10:48:40 PM EST", 
            "Vendor": " Red Hat, Inc.", 
            "Source RPM": " ipset-6.19-4.el7.src.rpm", 
            "warning": " /home/jason/fctl/swap/1/ipset-6.19-4.el7.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID fd431d51: NOKEY", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Tue 01 Apr 2014 02:31:50 PM EDT, Key ID 199e2f91fd431d51", 
            "Release": " 4.el7", 
            "Group": " Unspecified", 
            "Packager": " Red Hat, Inc. <http://bugzilla.redhat.com/bugzilla>", 
            "Summary": " Manage Linux IP sets", 
            "Size": " 66617"
        }
    }
}