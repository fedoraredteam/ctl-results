{
    "results": {
        "usr/sbin/soundmodem": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/sbin/soundmodem", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "pthread_mutex_init", 
                "random", 
                "rig_init", 
                "openlog", 
                "strncpy", 
                "snd_pcm_sw_params_current", 
                "snd_pcm_hw_params_get_rate", 
                "__sprintf_chk", 
                "write", 
                "pthread_attr_init", 
                "snd_pcm_prepare", 
                "snd_pcm_hw_params_set_format_mask", 
                "pthread_attr_setschedparam", 
                "xmlParseFile", 
                "read", 
                "poll", 
                "rig_open", 
                "afCloseFile", 
                "malloc", 
                "fclose", 
                "pipe", 
                "__fprintf_chk", 
                "signal", 
                "snd_pcm_hw_params_set_period_time_near", 
                "pthread_attr_setschedpolicy", 
                "strtoul", 
                "strtod", 
                "snd_pcm_hw_params_sizeof", 
                "afGetFrameSize", 
                "__libc_start_main", 
                "srand", 
                "__cxa_finalize", 
                "sqrtf", 
                "rig_close", 
                "strchr", 
                "getopt_long", 
                "strerror", 
                "snd_pcm_format_mask_set", 
                "strcmp", 
                "__strdup", 
                "openpty", 
                "calloc", 
                "snd_pcm_nonblock", 
                "__vsnprintf_chk", 
                "snd_pcm_hw_params_get_period_size", 
                "strrchr", 
                "tcsetattr", 
                "snd_pcm_open", 
                "__poll_chk", 
                "pthread_cond_destroy", 
                "snd_pcm_sw_params_set_xfer_align", 
                "snd_pcm_hw_params_set_buffer_time_near", 
                "sched_get_priority_min", 
                "pthread_mutex_destroy", 
                "rig_set_ptt", 
                "pthread_cond_wait", 
                "__stack_chk_fail", 
                "inet_ntoa", 
                "memmove", 
                "strlen", 
                "snd_pcm_hw_params_set_channels", 
                "atan2", 
                "snd_pcm_hw_params_get_buffer_size", 
                "sscanf", 
                "snd_pcm_readi", 
                "snd_pcm_format_mask_sizeof", 
                "afGetSampleFormat", 
                "__syslog_chk", 
                "memcpy", 
                "fwrite", 
                "afReadFrames", 
                "snd_pcm_start", 
                "ioctl", 
                "pthread_cond_init", 
                "afGetFrameCount", 
                "socket", 
                "fflush", 
                "getpid", 
                "__vfprintf_chk", 
                "close", 
                "snd_pcm_hw_params_any", 
                "afOpenFile", 
                "pthread_exit", 
                "pow", 
                "__snprintf_chk", 
                "rig_token_lookup", 
                "snd_pcm_close", 
                "abort", 
                "rand", 
                "snd_pcm_sw_params_set_start_threshold", 
                "exit", 
                "pthread_attr_getstacksize", 
                "_ITM_registerTMCloneTable", 
                "snd_pcm_hw_params_get_sbits", 
                "cos", 
                "sincos", 
                "afSeekFrame", 
                "pthread_mutex_lock", 
                "sched_setscheduler", 
                "log10", 
                "free", 
                "unlink", 
                "snd_pcm_drain", 
                "snd_pcm_sw_params_sizeof", 
                "rigerror", 
                "pthread_cond_broadcast", 
                "closelog", 
                "setsid", 
                "pthread_mutex_unlock", 
                "snd_pcm_hw_params_get_format", 
                "symlink", 
                "xmlGetProp", 
                "sqrt", 
                "afGetChannels", 
                "snd_pcm_hw_params", 
                "sin", 
                "snd_pcm_hw_params_set_access", 
                "afGetRate", 
                "strcasecmp", 
                "rig_cleanup", 
                "pthread_attr_destroy", 
                "fork", 
                "__memcpy_chk", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "snd_pcm_sw_params_set_avail_min", 
                "__printf_chk", 
                "inet_aton", 
                "time", 
                "snd_pcm_hw_params_set_rate_near", 
                "open", 
                "pthread_create", 
                "snd_pcm_writei", 
                "fcntl", 
                "afGetByteOrder", 
                "memset", 
                "pthread_attr_setstacksize", 
                "snd_pcm_sw_params", 
                "log", 
                "__errno_location", 
                "usleep", 
                "memchr", 
                "__open_2", 
                "rig_set_conf", 
                "snd_strerror", 
                "xmlFreeDoc"
            ], 
            "rpm": "soundmodem-0.20-6.fc26.x86_64.rpm"
        }, 
        "usr/bin/soundmodemconfig": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/soundmodemconfig", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "gtk_tree_view_get_type", 
                "g_object_ref", 
                "xmlSetProp", 
                "pango_font_description_from_string", 
                "gdk_window_move_resize", 
                "gtk_widget_set_can_default", 
                "strtoul", 
                "g_list_prepend", 
                "gtk_spin_button_new", 
                "gdk_pixmap_new", 
                "g_object_new", 
                "strerror", 
                "__gmon_start__", 
                "textdomain", 
                "snd_pcm_format_mask_sizeof", 
                "gtk_button_box_get_type", 
                "g_timeout_add", 
                "cos", 
                "g_return_if_fail_warning", 
                "gtk_button_new_with_mnemonic", 
                "gtk_text_view_set_editable", 
                "gtk_notebook_set_tab_label", 
                "gtk_misc_get_type", 
                "gtk_widget_is_drawable", 
                "gtk_main", 
                "gtk_toggle_button_new_with_mnemonic", 
                "gtk_notebook_append_page", 
                "g_path_get_dirname", 
                "gtk_image_set_from_pixbuf", 
                "gtk_widget_get_type", 
                "g_list_append", 
                "gtk_toggle_button_get_active", 
                "gtk_check_menu_item_get_type", 
                "g_type_check_class_cast", 
                "gtk_text_buffer_set_text", 
                "gtk_widget_set_size_request", 
                "gtk_tree_model_iter_children", 
                "free", 
                "gtk_widget_get_events", 
                "atk_action_set_description", 
                "gtk_text_view_new", 
                "gtk_label_set_line_wrap", 
                "pow", 
                "__sprintf_chk", 
                "fwrite", 
                "gtk_check_menu_item_get_active", 
                "gtk_misc_set_alignment", 
                "__vsnprintf_chk", 
                "memmove", 
                "__syslog_chk", 
                "gtk_window_add_accel_group", 
                "log10", 
                "gtk_widget_set_allocation", 
                "sqrt", 
                "gtk_entry_get_type", 
                "gtk_widget_set_events", 
                "gtk_widget_get_colormap", 
                "gtk_editable_get_type", 
                "gtk_tree_store_get_type", 
                "gtk_table_new", 
                "sincos", 
                "rig_set_ptt", 
                "gtk_widget_get_allocation", 
                "atan2", 
                "gtk_paned_pack2", 
                "__strdup", 
                "sin", 
                "gtk_tree_selection_get_selected", 
                "g_object_set_data", 
                "g_strdup_printf", 
                "gtk_vpaned_new", 
                "gtk_hseparator_new", 
                "fcntl", 
                "gtk_notebook_set_current_page", 
                "strcasecmp", 
                "gtk_table_get_type", 
                "gtk_box_set_spacing", 
                "gtk_window_set_default_size", 
                "gtk_notebook_get_current_page", 
                "strncpy", 
                "__stack_chk_fail", 
                "xmlFreeNode", 
                "gtk_hbox_new", 
                "gtk_tree_view_new", 
                "gtk_widget_set_window", 
                "rigerror", 
                "gtk_image_new", 
                "gtk_tree_path_free", 
                "g_type_check_instance_cast", 
                "afGetFrameCount", 
                "gtk_widget_hide", 
                "__memcpy_chk", 
                "gtk_window_set_title", 
                "gtk_widget_show", 
                "gtk_widget_get_state", 
                "gtk_tree_store_remove", 
                "g_type_class_peek", 
                "gtk_tree_view_expand_all", 
                "snd_pcm_sw_params_sizeof", 
                "gtk_statusbar_new", 
                "gtk_tree_view_expand_row", 
                "xmlGetProp", 
                "snd_pcm_hw_params_set_period_time_near", 
                "gtk_notebook_get_type", 
                "g_free", 
                "snd_pcm_sw_params", 
                "gtk_init", 
                "xmlFreeDoc", 
                "gtk_box_pack_start", 
                "pthread_mutex_init", 
                "gtk_frame_set_label_align", 
                "gdk_draw_drawable", 
                "gtk_notebook_new", 
                "gtk_set_locale", 
                "atk_action_get_name", 
                "g_file_test", 
                "exit", 
                "strlen", 
                "gtk_entry_set_invisible_char", 
                "gtk_text_view_get_type", 
                "g_source_remove", 
                "gtk_widget_destroy", 
                "poll", 
                "snd_pcm_nonblock", 
                "gdk_draw_segments", 
                "gdk_pixbuf_new_from_xpm_data", 
                "gtk_widget_set_style", 
                "gtk_dialog_get_content_area", 
                "gtk_dialog_new", 
                "log", 
                "gtk_tree_selection_set_mode", 
                "rand", 
                "gtk_hbutton_box_new", 
                "snd_pcm_hw_params_set_channels", 
                "gtk_handle_box_new", 
                "gtk_editable_set_editable", 
                "gtk_label_set_justify", 
                "snd_pcm_hw_params_get_period_size", 
                "gtk_scrolled_window_get_type", 
                "gtk_adjustment_new", 
                "gtk_widget_set_can_focus", 
                "getpid", 
                "snd_pcm_hw_params", 
                "gtk_tree_selection_unselect_all", 
                "snd_pcm_close", 
                "bind_textdomain_codeset", 
                "strchr", 
                "gtk_notebook_remove_page", 
                "xmlNewChild", 
                "malloc", 
                "fflush", 
                "gtk_tree_view_column_get_type", 
                "snd_pcm_sw_params_current", 
                "gdk_window_new", 
                "snd_pcm_sw_params_set_avail_min", 
                "pthread_cond_wait", 
                "__cxa_finalize", 
                "snd_pcm_hw_params_set_access", 
                "gtk_tree_model_get_path", 
                "memcpy", 
                "gtk_vbox_new", 
                "gtk_widget_add_accelerator", 
                "gtk_box_get_type", 
                "_ITM_deregisterTMCloneTable", 
                "snd_pcm_sw_params_set_start_threshold", 
                "_ITM_registerTMCloneTable", 
                "afOpenFile", 
                "g_print", 
                "gtk_style_set_background", 
                "gtk_image_new_from_file", 
                "getopt_long", 
                "gtk_toggle_button_set_active", 
                "gtk_container_add", 
                "closelog", 
                "g_object_set_data_full", 
                "gtk_tree_model_get_type", 
                "gtk_adjustment_get_type", 
                "xmlParseFile", 
                "gtk_tree_view_get_selection", 
                "g_type_register_static", 
                "gtk_window_set_transient_for", 
                "gtk_text_buffer_get_char_count", 
                "pthread_mutex_unlock", 
                "gtk_entry_get_text", 
                "gtk_widget_get_parent", 
                "gtk_box_pack_end", 
                "gtk_window_set_modal", 
                "gtk_dialog_get_action_area", 
                "__snprintf_chk", 
                "gdk_window_set_user_data", 
                "gtk_menu_bar_new", 
                "afGetFileFormat", 
                "gtk_window_get_type", 
                "g_type_check_instance_is_a", 
                "snprintf", 
                "gtk_gc_get", 
                "snd_pcm_start", 
                "__vfprintf_chk", 
                "__printf_chk", 
                "gtk_spin_button_get_value", 
                "afCloseFile", 
                "gtk_tree_store_new", 
                "srand", 
                "afGetSampleFormat", 
                "sscanf", 
                "snd_pcm_open", 
                "xmlNewDoc", 
                "gtk_scrolled_window_new", 
                "gtk_menu_item_get_type", 
                "gtk_dialog_get_type", 
                "g_object_get_data", 
                "__fprintf_chk", 
                "gtk_window_set_type_hint", 
                "ioctl", 
                "gtk_label_set_text", 
                "gtk_tree_view_append_column", 
                "gtk_combo_box_new_text", 
                "gtk_frame_get_type", 
                "gtk_viewport_new", 
                "snd_pcm_hw_params_set_rate_near", 
                "gtk_widget_set_realized", 
                "gtk_menu_get_attach_widget", 
                "gtk_label_new", 
                "gtk_widget_style_attach", 
                "gtk_text_view_scroll_mark_onscreen", 
                "gtk_image_new_from_pixbuf", 
                "open", 
                "g_idle_add_full", 
                "snd_pcm_readi", 
                "gtk_cell_renderer_text_new", 
                "sqrtf", 
                "snd_pcm_prepare", 
                "rig_close", 
                "gtk_main_quit", 
                "pthread_create", 
                "snd_pcm_hw_params_get_sbits", 
                "afSeekFrame", 
                "snd_pcm_sw_params_set_xfer_align", 
                "gdk_pixbuf_new_from_file", 
                "puts", 
                "gtk_widget_get_parent_window", 
                "gtk_tree_model_iter_next", 
                "gtk_tree_selection_get_type", 
                "__open_2", 
                "gtk_window_new", 
                "pthread_cond_destroy", 
                "gtk_tree_view_set_model", 
                "snd_pcm_hw_params_get_format", 
                "gtk_toggle_button_get_type", 
                "gtk_widget_set_sensitive", 
                "gtk_combo_box_entry_new_text", 
                "g_printerr", 
                "gtk_menu_new", 
                "snd_pcm_format_mask_set", 
                "gtk_spin_button_get_type", 
                "snd_pcm_hw_params_get_rate", 
                "gtk_check_menu_item_new_with_mnemonic", 
                "bindtextdomain", 
                "__libc_start_main", 
                "gtk_image_get_type", 
                "gtk_tree_store_set", 
                "afGetChannels", 
                "xmlSaveFormatFile", 
                "gtk_entry_set_text", 
                "pthread_cond_broadcast", 
                "g_list_free", 
                "gtk_button_box_set_layout", 
                "pthread_join", 
                "gdk_colormap_alloc_color", 
                "snd_pcm_drain", 
                "random", 
                "gtk_widget_get_visual", 
                "calloc", 
                "afGetFrameSize", 
                "gtk_menu_get_type", 
                "gtk_menu_item_new", 
                "snd_pcm_hw_params_set_format_mask", 
                "snd_strerror", 
                "g_signal_connect_data", 
                "xmlUnlinkNode", 
                "g_error_free", 
                "afGetByteOrder", 
                "gtk_combo_box_get_type", 
                "gtk_combo_box_get_active_text", 
                "gtk_widget_get_realized", 
                "afReadFrames", 
                "snd_pcm_writei", 
                "gtk_entry_new", 
                "gtk_widget_set_has_window", 
                "gtk_text_view_get_buffer", 
                "gtk_widget_set_tooltip_text", 
                "gtk_text_buffer_insert_at_cursor", 
                "xmlNewDocNode", 
                "pthread_mutex_destroy", 
                "time", 
                "gtk_accel_group_new", 
                "gtk_gc_release", 
                "strrchr", 
                "g_object_unref", 
                "gtk_tree_model_get_iter_first", 
                "g_strdup", 
                "write", 
                "gtk_label_get_type", 
                "gtk_misc_set_padding", 
                "gtk_paned_pack1", 
                "gtk_menu_item_new_with_mnemonic", 
                "gtk_table_attach", 
                "gtk_tree_view_column_new_with_attributes", 
                "openlog", 
                "g_mkdir_with_parents", 
                "gtk_container_get_type", 
                "gdk_draw_lines", 
                "gtk_widget_get_window", 
                "strcmp", 
                "afGetRate", 
                "gtk_combo_box_set_active", 
                "dcgettext", 
                "gtk_text_buffer_get_iter_at_offset", 
                "gtk_frame_set_label_widget", 
                "gtk_frame_new", 
                "snd_pcm_hw_params_set_buffer_time_near", 
                "gtk_tree_store_append", 
                "memset", 
                "__errno_location", 
                "gtk_text_buffer_get_text", 
                "rig_token_lookup", 
                "gtk_scrolled_window_set_shadow_type", 
                "rig_open", 
                "strtod", 
                "gtk_tree_model_get", 
                "pthread_cond_init", 
                "gtk_style_copy", 
                "pthread_mutex_lock", 
                "rig_set_conf", 
                "gtk_notebook_get_nth_page", 
                "gtk_menu_item_set_submenu", 
                "abort", 
                "gtk_text_buffer_get_insert", 
                "gdk_draw_rectangle", 
                "snd_pcm_hw_params_get_buffer_size", 
                "gtk_widget_event", 
                "gtk_tree_view_set_headers_visible", 
                "close", 
                "rig_init", 
                "gdk_draw_line", 
                "pthread_exit", 
                "gtk_check_button_new", 
                "snd_pcm_hw_params_sizeof", 
                "gtk_widget_get_style", 
                "gtk_text_view_set_wrap_mode", 
                "gtk_scrolled_window_set_policy", 
                "read", 
                "gtk_container_set_border_width", 
                "snd_pcm_hw_params_any", 
                "g_log", 
                "atk_action_get_n_actions", 
                "rig_cleanup"
            ], 
            "rpm": "soundmodem-0.20-6.fc26.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Applications/Communications", 
            "Name": " soundmodem", 
            "License": " GPLv2+", 
            "URL": " http://gna.org/projects/soundmodem", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-31.phx2.fedoraproject.org", 
            "Description": "\nThis package contains the driver and the diagnostic utility for\nuserspace SoundModem. It allows you to use soundcards\nas Amateur Packet Radio modems.\n", 
            "Build Date": " Sat 11 Feb 2017 09:31:38 PM EST", 
            "Source RPM": " soundmodem-0.20-6.fc26.src.rpm", 
            "Version": " 0.20", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Sat 25 Feb 2017 03:23:07 PM EST, Key ID f55e7430f5282ee4", 
            "Release": " 6.fc26", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Soundcard Packet Radio Modem", 
            "Size": " 436596"
        }
    }
}