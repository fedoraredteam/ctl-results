{
    "results": {
        "usr/bin/sketch": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/sketch", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__vfprintf_chk", 
                "__sprintf_chk", 
                "__printf_chk", 
                "fopen", 
                "fclose", 
                "sincos", 
                "strncmp", 
                "strcpy", 
                "malloc", 
                "strchr", 
                "sqrt", 
                "__stack_chk_fail", 
                "__libc_start_main", 
                "fputc", 
                "free", 
                "strncpy", 
                "strcmp", 
                "__gmon_start__", 
                "ferror", 
                "sin", 
                "feof", 
                "_IO_getc", 
                "fputs", 
                "pow", 
                "asin", 
                "__strcpy_chk", 
                "fwrite", 
                "memcpy", 
                "acos", 
                "atan2", 
                "strlen", 
                "strstr", 
                "__isoc99_sscanf", 
                "fread", 
                "realloc", 
                "exit", 
                "isatty", 
                "__fprintf_chk", 
                "cos"
            ], 
            "rpm": "sketch-0.3.7-2.fc27.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Applications/Publishing", 
            "Name": " sketch", 
            "License": " GPLv3+", 
            "URL": " http://www.frontiernet.net/~eugene.ressler", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-28.phx2.fedoraproject.org", 
            "Description": "\nSketch is a small, simple system for producing line drawings of two- or\nthree-dimensional solid objects and scenes. It began as a way to make\nillustrations for a textbook after we could find no suitable tool for this\npurpose. Existing scene processors emphasized GUIs and/or photo-realism,\nboth un-useful to us. We wanted to produce finely wrought, mathematically-based\nillustrations with no extraneous detail. The input language is reminiscent of\nPSTricks, so will be easy to learn for current PSTricks users.\n", 
            "Build Date": " Fri 04 Aug 2017 04:24:38 PM EDT", 
            "Source RPM": " sketch-0.3.7-2.fc27.src.rpm", 
            "Version": " 0.3.7", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Sat 05 Aug 2017 03:45:56 PM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 2.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " A 3D Scene Description Translator.", 
            "Size": " 312309"
        }
    }
}