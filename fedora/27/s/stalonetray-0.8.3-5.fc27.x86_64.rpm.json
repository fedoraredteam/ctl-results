{
    "results": {
        "usr/bin/stalonetray": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/stalonetray", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "select", 
                "XSelectInput", 
                "free", 
                "XChangeProperty", 
                "strcmp", 
                "XCopyArea", 
                "XGetWindowProperty", 
                "XIfEvent", 
                "time", 
                "__fprintf_chk", 
                "XAllPlanes", 
                "XGetSelectionOwner", 
                "XmbTextListToTextProperty", 
                "XSetCommand", 
                "ferror", 
                "strtol", 
                "__errno_location", 
                "XDefaultColormap", 
                "__printf_chk", 
                "XParseGeometry", 
                "XLowerWindow", 
                "strerror", 
                "XSynchronize", 
                "XGetGeometry", 
                "getenv", 
                "signal", 
                "XMoveResizeWindow", 
                "XUnmapWindow", 
                "XGetImage", 
                "malloc", 
                "XClearWindow", 
                "XInternAtom", 
                "strftime", 
                "XAllocColor", 
                "XSetWMHints", 
                "_ITM_deregisterTMCloneTable", 
                "XWMGeometry", 
                "XCreateGC", 
                "XGetAtomName", 
                "strcasecmp", 
                "XSetSelectionOwner", 
                "XSendEvent", 
                "XLookupString", 
                "XSetWMNormalHints", 
                "XMapWindow", 
                "XGetWMNormalHints", 
                "__gmon_start__", 
                "exit", 
                "XPutImage", 
                "XSetWindowBackground", 
                "XSync", 
                "XFree", 
                "__cxa_atexit", 
                "__vsnprintf_chk", 
                "XClearArea", 
                "fputs", 
                "XSetInputFocus", 
                "XNextEvent", 
                "XGetErrorText", 
                "XGetErrorDatabaseText", 
                "abort", 
                "XOpenDisplay", 
                "fopen", 
                "XParseColor", 
                "psignal", 
                "XGetWindowAttributes", 
                "XSetIOErrorHandler", 
                "strlen", 
                "__snprintf_chk", 
                "__ctype_b_loc", 
                "XQueryTree", 
                "puts", 
                "system", 
                "XSetErrorHandler", 
                "XSetWMProtocols", 
                "__libc_start_main", 
                "XMapRaised", 
                "XCreateSimpleWindow", 
                "fclose", 
                "XPending", 
                "fgets", 
                "localtime", 
                "XCreatePixmap", 
                "XFreeGC", 
                "__assert_fail", 
                "realloc", 
                "__ctype_tolower_loc", 
                "__cxa_finalize", 
                "XMoveWindow", 
                "XSetWMName", 
                "XReparentWindow", 
                "strchr", 
                "XTranslateCoordinates", 
                "XRootWindow", 
                "feof", 
                "strstr", 
                "XDestroyWindow", 
                "XSetWindowBackgroundPixmap", 
                "__stack_chk_fail", 
                "XResizeWindow", 
                "XCloseDisplay", 
                "strdup", 
                "memset", 
                "XSetClassHint", 
                "XFreePixmap", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "stalonetray-0.8.3-5.fc27.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " User Interface/Desktops", 
            "Name": " stalonetray", 
            "License": " GPLv2+", 
            "URL": " http://stalonetray.sourceforge.net/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-13.phx2.fedoraproject.org", 
            "Description": "\nThe stalonetray is a STAnd-aLONE system TRAY (notification area).\nIt has minimal build and run-time dependencies: the Xlib only. The XEMBED\nsupport is planned. Stalonetray runs under virtually any window manager.\n", 
            "Build Date": " Fri 04 Aug 2017 07:04:09 PM EDT", 
            "Source RPM": " stalonetray-0.8.3-5.fc27.src.rpm", 
            "Version": " 0.8.3", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Sat 05 Aug 2017 05:01:56 PM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 5.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " A stand alone notification area", 
            "Size": " 269435"
        }
    }
}