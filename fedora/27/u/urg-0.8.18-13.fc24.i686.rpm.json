{
    "results": {
        "usr/lib/libc_urg_connection_so_0_0_0": {
            "report-functions": [
                "_Jv_RegisterClasses", 
                "cfsetispeed", 
                "__errno_location", 
                "__gmon_start__", 
                "__fdelt_chk", 
                "tcflush", 
                "tcsetattr", 
                "select", 
                "__cxa_finalize", 
                "__stack_chk_fail", 
                "_ITM_registerTMCloneTable", 
                "read", 
                "__xpg_strerror_r", 
                "_ITM_deregisterTMCloneTable", 
                "cfsetospeed", 
                "write", 
                "fcntl", 
                "tcdrain", 
                "tcgetattr"
            ], 
            "rpm": "urg-0.8.18-13.fc24.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libc_urg_connection.so.0.0.0"
        }, 
        "usr/lib/liburg_connection_sdl_so_0_0_0": {
            "report-functions": [
                "__cxa_rethrow", 
                "__cxa_finalize", 
                "_Znwj", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_", 
                "SDLNet_TCP_Send", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj", 
                "_ZSt17__throw_bad_allocv", 
                "SDLNet_TCP_Open", 
                "SDLNet_AllocSocketSet", 
                "SDLNet_DelSocket", 
                "_Unwind_Resume", 
                "SDLNet_ResolveHost", 
                "__gxx_personality_v0", 
                "__sprintf_chk", 
                "__snprintf_chk", 
                "SDLNet_TCP_Close", 
                "_ITM_registerTMCloneTable", 
                "SDLNet_FreeSocketSet", 
                "SDL_GetError", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj", 
                "__cxa_atexit", 
                "SDLNet_Quit", 
                "_ZSt20__throw_length_errorPKc", 
                "SDLNet_TCP_Recv", 
                "_Jv_RegisterClasses", 
                "_ZSt19__throw_logic_errorPKc", 
                "_ZdlPv", 
                "__cxa_end_catch", 
                "_ZN3qrk7SdlInitC2Ev", 
                "SDLNet_AddSocket", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj", 
                "SDLNet_Init", 
                "SDLNet_TCP_Accept", 
                "_ZN3qrk7SdlInitD2Ev", 
                "__gmon_start__", 
                "__cxa_begin_catch", 
                "__stack_chk_fail", 
                "memmove", 
                "strlen", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "urg-0.8.18-13.fc24.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/liburg_connection_sdl.so.0.0.0"
        }, 
        "usr/lib/libc_urg_system_so_0_0_0": {
            "report-functions": [
                "__gmon_start__", 
                "gettimeofday", 
                "_Jv_RegisterClasses", 
                "__cxa_finalize", 
                "usleep", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "urg-0.8.18-13.fc24.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libc_urg_system.so.0.0.0"
        }, 
        "usr/lib/liburg_connection_so_0_0_0": {
            "report-functions": [
                "tcgetattr", 
                "open", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj", 
                "__gxx_personality_v0", 
                "__errno_location", 
                "_ITM_registerTMCloneTable", 
                "strlen", 
                "opendir", 
                "__cxa_rethrow", 
                "readdir", 
                "tcdrain", 
                "close", 
                "__fdelt_chk", 
                "__cxa_end_catch", 
                "read", 
                "_ZSt17__throw_bad_allocv", 
                "_ZSt20__throw_length_errorPKc", 
                "__gmon_start__", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_", 
                "strerror", 
                "select", 
                "_Znwj", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj", 
                "_ITM_deregisterTMCloneTable", 
                "__xstat", 
                "tcflush", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_", 
                "memcmp", 
                "__cxa_finalize", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj", 
                "_ZdlPv", 
                "_Jv_RegisterClasses", 
                "memmove", 
                "__cxa_begin_catch", 
                "fcntl", 
                "__stack_chk_fail", 
                "cfsetospeed", 
                "write", 
                "strrchr", 
                "__sprintf_chk", 
                "cfsetispeed", 
                "_Unwind_Resume"
            ], 
            "rpm": "urg-0.8.18-13.fc24.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/liburg_connection.so.0.0.0"
        }, 
        "usr/lib/libc_urg_so_0_0_0": {
            "report-functions": [
                "_Jv_RegisterClasses", 
                "strncpy", 
                "__cxa_finalize", 
                "serial_disconnect", 
                "strlen", 
                "serial_send", 
                "serial_initialize", 
                "serial_isLF", 
                "serial_getLine", 
                "strtol", 
                "__gmon_start__", 
                "serial_skip", 
                "serial_recv", 
                "strncmp", 
                "floor", 
                "__stack_chk_fail", 
                "urg_delay", 
                "_ITM_registerTMCloneTable", 
                "serial_connect", 
                "serial_setBaudrate", 
                "serial_isConnected", 
                "_ITM_deregisterTMCloneTable", 
                "__snprintf_chk", 
                "serial_clear", 
                "urg_ticks"
            ], 
            "rpm": "urg-0.8.18-13.fc24.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libc_urg.so.0.0.0"
        }, 
        "usr/lib/liburg_geometry_so_0_0_0": {
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "__cxa_finalize", 
                "__stack_chk_fail"
            ], 
            "rpm": "urg-0.8.18-13.fc24.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/liburg_geometry.so.0.0.0"
        }, 
        "usr/lib/liburg_common_so_0_0_0": {
            "report-functions": [
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj", 
                "_ITM_registerTMCloneTable", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_", 
                "__stack_chk_fail", 
                "__cxa_finalize", 
                "__gmon_start__", 
                "_Znwj", 
                "strlen", 
                "_Unwind_Resume", 
                "__cxa_begin_catch", 
                "_ITM_deregisterTMCloneTable", 
                "_Jv_RegisterClasses", 
                "_ZSt19__throw_logic_errorPKc", 
                "_ZdlPv", 
                "__gxx_personality_v0"
            ], 
            "rpm": "urg-0.8.18-13.fc24.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/liburg_common.so.0.0.0"
        }, 
        "usr/lib/liburg_so_0_0_0": {
            "report-functions": [
                "_ZSt24__throw_out_of_range_fmtPKcz", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj", 
                "_ZSt19__throw_logic_errorPKc", 
                "_ZN3qrk6Thread3runEi", 
                "__cxa_end_catch", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKc", 
                "_ZSt17__throw_bad_allocv", 
                "_ZN3qrk12FindComPorts11addBaseNameEPKc", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj", 
                "_ZN3qrk4LockC1Ev", 
                "_ITM_deregisterTMCloneTable", 
                "_ZN3qrk6ThreadC1EPFiPvES1_", 
                "_ZN3qrk12FindComPortsC1Ev", 
                "strncmp", 
                "_ZNSt8ios_base4InitD1Ev", 
                "__gmon_start__", 
                "__cxa_begin_catch", 
                "_ZN3qrk12FindComPortsD1Ev", 
                "_ZNK3qrk6Thread9isRunningEv", 
                "_ZN3qrk4skipEPNS_10ConnectionEii", 
                "__gxx_personality_v0", 
                "__stack_chk_fail", 
                "_ZN3qrk16isUsingComDriverEPKcS1_", 
                "_ITM_registerTMCloneTable", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc", 
                "_ZN3qrk5delayEi", 
                "_Jv_RegisterClasses", 
                "strtol", 
                "__cxa_rethrow", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj", 
                "_ZN3qrk12FindComPorts4findERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EEb", 
                "_ZTIN3qrk10CoordinateE", 
                "_ZN3qrk4LockD1Ev", 
                "__snprintf_chk", 
                "_ZN3qrk10CoordinateD2Ev", 
                "_ZN3qrk9LockGuardC1ERNS_4LockE", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_Znwj", 
                "_ZN3qrk12SerialDeviceC1Ev", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj", 
                "_ZN3qrk5ticksEv", 
                "__cxa_atexit", 
                "_ZN3qrk10CoordinateC2Ev", 
                "_ZdlPv", 
                "_ZN3qrk10log_printfEPKcz", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_", 
                "_ZN3qrk8readlineEPNS_10ConnectionEPcji", 
                "__cxa_finalize", 
                "_ZSt20__throw_length_errorPKc", 
                "_ZN3qrk9LockGuardD1Ev", 
                "strlen", 
                "_ZN3qrk6Thread4waitEv", 
                "_Unwind_Resume", 
                "_ZN3qrk6ThreadD1Ev"
            ], 
            "rpm": "urg-0.8.18-13.fc24.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/liburg.so.0.0.0"
        }, 
        "usr/lib/liburg_monitor_so_0_0_0": {
            "report-functions": [
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "_ZN3qrk17ConditionVariableC1Ev", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEED1Ev", 
                "_ZNSolsEs", 
                "_ZThn8_N3qrk9UrgDevice7connectEPKcl", 
                "_ZN3qrk6Thread3runEi", 
                "_ZN3qrk9UrgDevice14setCaptureModeENS_16RangeCaptureModeE", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_ZNSt12__basic_fileIcED1Ev", 
                "_ZN3qrk4LockC1Ev", 
                "_ITM_deregisterTMCloneTable", 
                "_ZNKSt12__basic_fileIcE7is_openEv", 
                "__cxa_guard_release", 
                "_ZNK3qrk9UrgDevice11isConnectedEv", 
                "_ZNSo5flushEv", 
                "__cxa_end_catch", 
                "_ZThn8_N3qrk9UrgDevice20captureWithIntensityERSt6vectorIlSaIlEES4_Pl", 
                "_ZN3qrk6Thread4waitEv", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj", 
                "_ZN3qrk5ticksEv", 
                "_ZN3qrk12SerialDeviceC1Ev", 
                "_Jv_RegisterClasses", 
                "_ZN3qrk9UrgDevice6rebootEv", 
                "_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev", 
                "_ZThn8_NK3qrk9UrgDevice4whatEv", 
                "_ZNSo9_M_insertIlEERSoT_", 
                "_ZN3qrk9UrgDevice7connectEPKcl", 
                "_ZN3qrk9UrgDevice12setTimestampEiPiS1_", 
                "_ZThn8_NK3qrk9UrgDevice11minDistanceEv", 
                "_ZN3qrk17ConditionVariable6wakeupEv", 
                "_ZThn8_NK3qrk9UrgDevice15recentTimestampEv", 
                "__gmon_start__", 
                "_ZN3qrk9UrgDevice12setParameterERKNS_20RangeSensorParameterE", 
                "_ZN3qrk9UrgDevice7captureERSt6vectorIlSaIlEEPl", 
                "_ZNK3qrk9UrgDevice9index2radEi", 
                "_ZNSt8__detail15_List_node_base9_M_unhookEv", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEEC1Ev", 
                "_ZNK3qrk6Thread9isRunningEv", 
                "_ZTIN3qrk9UrgDeviceE", 
                "_ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EES4_", 
                "_ZNK3qrk9UrgDevice12maxScanLinesEv", 
                "_ZThn8_NK3qrk9UrgDevice12maxScanLinesEv", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode", 
                "_ZNSi4readEPci", 
                "_ZNK3qrk9UrgDevice11maxDistanceEv", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj", 
                "_Unwind_Resume", 
                "_ZThn8_N3qrk9UrgDevice12setTimestampEiPiS1_", 
                "_ZNK3qrk9UrgDevice8scanMsecEv", 
                "_ZThn8_NK3qrk9UrgDevice11isConnectedEv", 
                "_ZNSolsEi", 
                "_ZNSt8ios_baseC2Ev", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "__gxx_personality_v0", 
                "_ZNSt6localeD1Ev", 
                "_ZNSt8ios_base4InitD1Ev", 
                "_ZN3qrk9UrgDevice13setConnectionEPNS_10ConnectionE", 
                "_ZNK3qrk9UrgDevice9rad2indexEd", 
                "__stack_chk_fail", 
                "_ZNK3qrk9UrgDevice9parameterEv", 
                "__cxa_atexit", 
                "_ZSt24__throw_out_of_range_fmtPKcz", 
                "_ZN3qrk9UrgDevice11captureModeEv", 
                "_ZNK3qrk9UrgDevice15recentTimestampEv", 
                "__cxa_finalize", 
                "_ZNSo5writeEPKci", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_", 
                "_ZN3qrk9UrgDevice13loadParameterEv", 
                "_ZN3qrk5splitERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EERKS6_PKcb", 
                "_ZN3qrk9UrgDevice10disconnectEv", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "_ZThn8_N3qrk9UrgDevice7captureERSt6vectorIlSaIlEEPl", 
                "_ZThn8_N3qrk9UrgDevice10connectionEv", 
                "_ZN3qrk17ConditionVariableD1Ev", 
                "_ZN3qrk9UrgDevice10connectionEv", 
                "_ZThn8_NK3qrk9UrgDevice9parameterEv", 
                "_ZN3qrk9UrgDevice20captureWithIntensityERSt6vectorIlSaIlEES4_Pl", 
                "_ZN3qrk9UrgDeviceD2Ev", 
                "_ZNK3qrk9UrgDevice11minDistanceEv", 
                "_ZN3qrk9UrgDevice4stopEv", 
                "_ZThn8_N3qrk9UrgDevice14setCaptureModeENS_16RangeCaptureModeE", 
                "perror", 
                "_ZThn8_NK3qrk9UrgDevice9rad2indexEd", 
                "_ZN3qrk6ThreadD1Ev", 
                "__cxa_guard_acquire", 
                "strlen", 
                "_ZN3qrk9UrgDevice19setCaptureSkipLinesEj", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_i", 
                "__fprintf_chk", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj", 
                "_ZN3qrk9UrgDevice18remainCaptureTimesEv", 
                "_ZNSi10_M_extractIlEERSiRT_", 
                "_ZN3qrk9UrgDevice13setRetryTimesEj", 
                "_ZThn8_NK3qrk9UrgDevice9index2radEi", 
                "_ZSt20__throw_length_errorPKc", 
                "_ZNSi10_M_extractIjEERSiRT_", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate", 
                "_ZThn8_N3qrk9UrgDevice13setConnectionEPNS_10ConnectionE", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj", 
                "_ZN3qrk9UrgDeviceC2Ev", 
                "_ZdlPv", 
                "_ZNSt8__detail15_List_node_base11_M_transferEPS0_S1_", 
                "_ZN3qrk6Thread4stopEv", 
                "_ZSt19__throw_logic_errorPKc", 
                "__cxa_rethrow", 
                "__snprintf_chk", 
                "strtol", 
                "_ZNSo9_M_insertImEERSoT_", 
                "_ZN3qrk9UrgDevice14setLaserOutputEb", 
                "_ZN3qrk9UrgDevice15setCaptureTimesEj", 
                "_ZN3qrk4Lock6unlockEv", 
                "_ZThn8_NK3qrk9UrgDevice8scanMsecEv", 
                "_ZN3qrk11TcpipSocketC1Ev", 
                "_ZNSirsERs", 
                "__cxa_guard_abort", 
                "_ZThn8_N3qrk9UrgDevice14setLaserOutputEb", 
                "memcmp", 
                "_ZThn8_N3qrk9UrgDevice11captureModeEv", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj", 
                "_ZN3qrk4Lock4lockEv", 
                "_ZN3qrk17ConditionVariable9isWaitingEv", 
                "_ZN3qrk9UrgDevice15setCaptureRangeEii", 
                "_Znwj", 
                "_ZNSt8ios_baseD2Ev", 
                "_ZThn8_N3qrk9UrgDevice10disconnectEv", 
                "_ITM_registerTMCloneTable", 
                "_ZN3qrk6ThreadC1EPFiPvES1_", 
                "_ZThn8_NK3qrk9UrgDevice11maxDistanceEv", 
                "_ZNK3qrk9UrgDevice4whatEv", 
                "_ZN3qrk5delayEi", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "_ZNSo9_M_insertIbEERSoT_", 
                "_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev", 
                "_ZN3qrk17ConditionVariable4waitEPNS_4LockEi", 
                "_ZThn8_N3qrk9UrgDevice12setParameterERKNS_20RangeSensorParameterE", 
                "_ZN3qrk4LockD1Ev", 
                "_ZN3qrk9UrgDevice23setCaptureFrameIntervalEj", 
                "_ZN3qrk9UrgDevice12versionLinesERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE"
            ], 
            "rpm": "urg-0.8.18-13.fc24.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/liburg_monitor.so.0.0.0"
        }, 
        "usr/lib/liburg_system_so_0_0_0": {
            "report-functions": [
                "SDL_SemValue", 
                "_Znwj", 
                "SDL_Init", 
                "SDL_SemWait", 
                "SDL_CreateSemaphore", 
                "fopen", 
                "__cxa_guard_release", 
                "__gxx_personality_v0", 
                "SDL_mutexV", 
                "SDL_CondBroadcast", 
                "SDL_CreateMutex", 
                "SDL_Quit", 
                "SDL_SemPost", 
                "__stack_chk_fail", 
                "SDL_CreateThread", 
                "fflush", 
                "SDL_WaitThread", 
                "SDL_GetTicks", 
                "__cxa_finalize", 
                "SDL_KillThread", 
                "_Unwind_Resume", 
                "SDL_CondSignal", 
                "__vfprintf_chk", 
                "_ITM_deregisterTMCloneTable", 
                "SDL_CreateCond", 
                "SDL_CondWait", 
                "SDL_CondWaitTimeout", 
                "__cxa_guard_acquire", 
                "__cxa_guard_abort", 
                "SDL_mutexP", 
                "SDL_DestroyMutex", 
                "_Jv_RegisterClasses", 
                "_ITM_registerTMCloneTable", 
                "SDL_Delay", 
                "SDL_DestroyCond", 
                "_ZdlPv", 
                "__cxa_atexit", 
                "SDL_DestroySemaphore"
            ], 
            "rpm": "urg-0.8.18-13.fc24.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/liburg_system.so.0.0.0"
        }, 
        "usr/lib/liburg_coordinate_so_0_0_0": {
            "report-functions": [
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "__cxa_rethrow", 
                "__cxa_atexit", 
                "_ZN3qrk5AngleC1Ev", 
                "_ITM_registerTMCloneTable", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "__gxx_personality_v0", 
                "__cxa_end_catch", 
                "fwrite", 
                "_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_", 
                "__cxa_guard_release", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_guard_acquire", 
                "_ZNSt8ios_base4InitD1Ev", 
                "sincos", 
                "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base", 
                "_Unwind_Resume", 
                "__cxa_begin_catch", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "_ZdlPv", 
                "__stack_chk_fail", 
                "_Jv_RegisterClasses", 
                "_ZN3qrk5AnglepLERKS0_", 
                "__cxa_guard_abort", 
                "_ZN3qrk5AngleC1ERKS0_", 
                "_ZN3qrk5AnglemIERKS0_", 
                "_ZN3qrk3degEi", 
                "__cxa_finalize", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_ZN3qrk5AngleaSERKS0_", 
                "_Znwj"
            ], 
            "rpm": "urg-0.8.18-13.fc24.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/liburg_coordinate.so.0.0.0"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " System Environment/Libraries", 
            "Name": " urg", 
            "License": " LGPLv3", 
            "URL": " http://www.hokuyo-aut.jp/cgi-bin/urg_programs_en/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-26.phx2.fedoraproject.org", 
            "Description": "\nThis library uses the SCIP2.0 protocol to provide access to devices of\nHokuyo URG laser range finder series.\n", 
            "Build Date": " Sat 16 Jan 2016 01:24:53 PM EST", 
            "Source RPM": " urg-0.8.18-13.fc24.src.rpm", 
            "Version": " 0.8.18", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Fri 24 Feb 2017 06:25:37 AM EST, Key ID f55e7430f5282ee4", 
            "Release": " 13.fc24", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Library to access Hokuyo URG laser range finders", 
            "Size": " 318450"
        }
    }
}