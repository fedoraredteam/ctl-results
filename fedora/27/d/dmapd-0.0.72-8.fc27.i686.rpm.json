{
    "results": {
        "complexity": {
            "r2aa": {
                "afCc": null, 
                "afC": null
            }
        }, 
        "usr/sbin/dmapd": {
            "report-functions": [
                "g_strdup_printf", 
                "setsid", 
                "g_print", 
                "dacp_share_player_updated", 
                "g_hash_table_lookup", 
                "g_object_get", 
                "dmapd_daap_record_factory_get_type", 
                "lockf", 
                "g_log", 
                "g_signal_connect_data", 
                "g_object_new", 
                "g_slist_append", 
                "g_signal_connect_object", 
                "g_main_loop_new", 
                "db_builder_build_db_starting_at", 
                "dmap_db_foreach", 
                "slist_deep_free", 
                "g_main_loop_quit", 
                "stringleton_deinit", 
                "__isoc99_scanf", 
                "dmap_mdns_browser_start", 
                "dmap_record_factory_get_type", 
                "g_strdup", 
                "g_option_context_parse", 
                "getpwnam", 
                "dmap_container_db_get_type", 
                "chdir", 
                "g_object_unref", 
                "daap_share_new", 
                "dmap_mdns_browser_new", 
                "g_key_file_new", 
                "av_render_get_option_group", 
                "g_str_equal", 
                "db_builder_get_type", 
                "g_type_check_instance_cast", 
                "g_key_file_get_string_list", 
                "g_main_loop_unref", 
                "open", 
                "dmapd_dmap_db_get_type", 
                "dacp_share_new", 
                "exit", 
                "daap_share_get_type", 
                "g_str_hash", 
                "g_hash_table_new", 
                "g_strconcat", 
                "dacp_share_pair", 
                "av_meta_reader_get_option_group", 
                "g_key_file_free", 
                "dacp_player_get_type", 
                "stringleton_init", 
                "g_option_context_add_main_entries", 
                "g_option_context_free", 
                "object_from_module", 
                "write", 
                "parse_plugin_option", 
                "_ITM_deregisterTMCloneTable", 
                "g_get_user_name", 
                "g_assertion_message_expr", 
                "getenv", 
                "__cxa_finalize", 
                "av_render_get_type", 
                "dpap_share_new", 
                "dacp_share_start_lookup", 
                "dmap_share_get_type", 
                "dmap_db_get_type", 
                "g_key_file_get_string", 
                "dmapd_dpap_record_factory_get_type", 
                "g_hash_table_destroy", 
                "setgid", 
                "signal", 
                "getpid", 
                "dpap_share_get_type", 
                "strcmp", 
                "g_option_context_new", 
                "__stack_chk_fail", 
                "g_key_file_load_from_file", 
                "photo_meta_reader_get_option_group", 
                "_ITM_registerTMCloneTable", 
                "g_free", 
                "fork", 
                "g_main_loop_run", 
                "photo_meta_reader_get_type", 
                "dmapd_dmap_container_db_new", 
                "g_option_context_get_help", 
                "setuid", 
                "av_meta_reader_get_type", 
                "g_option_context_add_group", 
                "__libc_start_main", 
                "g_get_real_name", 
                "g_log_set_handler", 
                "g_key_file_get_boolean", 
                "transcode_cache", 
                "getgrnam"
            ], 
            "rpm": "dmapd-0.0.72-8.fc27.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/sbin/dmapd"
        }, 
        "usr/bin/dmapd-transcode": {
            "report-functions": [
                "g_main_loop_new", 
                "g_free", 
                "_ITM_registerTMCloneTable", 
                "db_builder_build_db_starting_at", 
                "__libc_start_main", 
                "object_from_module", 
                "__cxa_finalize", 
                "g_main_loop_quit", 
                "g_strdup", 
                "g_slist_append", 
                "g_option_context_add_group", 
                "transcode_cache", 
                "g_type_check_instance_cast", 
                "stringleton_deinit", 
                "exit", 
                "g_log", 
                "stringleton_init", 
                "dmap_db_get_type", 
                "g_option_context_free", 
                "g_object_new", 
                "slist_deep_free", 
                "av_meta_reader_get_type", 
                "dmapd_daap_record_factory_get_type", 
                "signal", 
                "dmapd_dmap_db_get_type", 
                "g_log_set_handler", 
                "g_object_unref", 
                "dmap_record_factory_get_type", 
                "g_assertion_message_expr", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "g_option_context_add_main_entries", 
                "dmapd_dmap_container_db_new", 
                "dmap_db_foreach", 
                "db_builder_get_type", 
                "g_print", 
                "getenv", 
                "g_option_context_parse", 
                "g_option_context_new", 
                "av_meta_reader_get_option_group"
            ], 
            "rpm": "dmapd-0.0.72-8.fc27.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/dmapd-transcode"
        }, 
        "usr/bin/dmapd-hashgen": {
            "report-functions": [
                "__fprintf_chk", 
                "puts", 
                "g_filename_to_uri", 
                "_ITM_deregisterTMCloneTable", 
                "dmap_hash_progressive_to_string", 
                "exit", 
                "g_free", 
                "g_log", 
                "g_strdup", 
                "__libc_start_main", 
                "__gmon_start__", 
                "g_path_is_absolute", 
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable", 
                "dmapd_util_hash_file"
            ], 
            "rpm": "dmapd-0.0.72-8.fc27.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/dmapd-hashgen"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " dmapd", 
            "License": " GPLv2+", 
            "URL": " http://www.flyn.org/projects/dmapd/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-04.phx2.fedoraproject.org", 
            "Description": "\nThe dmapd project provides a GObject-based, Open Source implementation\nof DMAP sharing with the following features:\n\n o Support for both DAAP and DPAP\n\n o Support for realtime transcoding of media formats not natively\n supported by clients\n\n o Support for many metadata formats, such as those associated with Ogg\n Vorbis and MP3 (e.g., ID3)\n\n o Detection of video streams so that clients may play them as video\n\n o Use of GStreamer to support a wide range of audio and video CODECs\n\n o Caching of photograph thumbnails to avoid regenerating them each time\n the server restarts\n\nDmapd runs on Linux and other POSIX operating systems. It has been\nused on OpenWrt Linux-based systems with as little as 32MB of memory\nto serve music, video and photograph libraries containing thousands of\nfiles.\n", 
            "Build Date": " Wed 02 Aug 2017 04:29:25 PM EDT", 
            "Source RPM": " dmapd-0.0.72-8.fc27.src.rpm", 
            "Version": " 0.0.72", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Mon 07 Aug 2017 12:24:42 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 8.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " A server that provides DAAP and DPAP shares", 
            "Size": " 287992"
        }
    }
}