{
    "results": {
        "usr/lib/libdaaladec_so_0_0_1": {
            "report-functions": [
                "__stack_chk_fail", 
                "od_accounting_reset", 
                "od_ec_dec_bits_", 
                "od_img_edge_ext", 
                "free", 
                "od_pvq_decode", 
                "od_apply_prefilter_frame_sbs", 
                "__memset_chk", 
                "od_accounting_init", 
                "pow", 
                "od_qm_offset", 
                "od_haar", 
                "od_codedquantizer_to_quantizer", 
                "od_init_qm", 
                "od_state_set_mv_res", 
                "__gmon_start__", 
                "od_mv_split_flag_cdf", 
                "_ITM_registerTMCloneTable", 
                "daala_comment_init", 
                "od_accounting_set_location", 
                "od_dering", 
                "od_output_queue_add", 
                "od_state_mc_predict", 
                "od_postfilter_split", 
                "od_decode_cdf_adapt_", 
                "oggbyte_bytes_left", 
                "od_img_copy", 
                "_ITM_deregisterTMCloneTable", 
                "od_state_get_predictor", 
                "od_adapt_ctx_reset", 
                "od_prefilter_split", 
                "od_haar_inv", 
                "od_hv_intra_pred", 
                "od_state_clear", 
                "od_ref_plane_to_coeff", 
                "od_qm_get_index", 
                "generic_decode_", 
                "od_raster_to_coding_order", 
                "od_state_mvs_clear", 
                "od_state_init", 
                "od_mc_get_ref_predictor", 
                "od_accounting_clear", 
                "od_apply_postfilter_frame_sbs", 
                "od_ec_decode_bool_q15_", 
                "od_ec_dec_uint_", 
                "oggbyte_read1", 
                "malloc", 
                "od_output_queue_next", 
                "od_output_queue_clear", 
                "calloc", 
                "oggbyte_read4", 
                "daala_comment_clear", 
                "od_coeff_to_ref_plane", 
                "__cxa_finalize", 
                "oggbyte_readinit", 
                "od_ec_dec_init", 
                "od_coding_order_to_raster", 
                "od_output_queue_init", 
                "od_resample_luma_coeffs"
            ], 
            "rpm": "daala-libs-0-8.20170616git7278368.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libdaaladec.so.0.0.1"
        }, 
        "usr/lib/libdaalaenc_so_0_0_1": {
            "report-functions": [
                "od_apply_postfilter_frame_sbs", 
                "oggbyte_get_buffer", 
                "od_haar_inv", 
                "_ITM_registerTMCloneTable", 
                "od_qm_offset", 
                "od_pvq_compute_theta", 
                "od_state_init_superblock_split", 
                "od_raster_to_coding_order", 
                "od_mv_split_flag_cdf", 
                "acos", 
                "od_prefilter_split", 
                "free", 
                "od_adapt_ctx_reset", 
                "od_malloc_2d", 
                "od_state_pred_block_from_setup", 
                "memset", 
                "od_quantizer_to_codedquantizer", 
                "exp", 
                "od_haar", 
                "__printf_chk", 
                "od_codedquantizer_to_quantizer", 
                "_ITM_deregisterTMCloneTable", 
                "od_log_matrix_uchar", 
                "__memset_chk", 
                "od_coeff_to_ref_plane", 
                "oggbyte_write1", 
                "od_coding_order_to_raster", 
                "od_zero_2d", 
                "od_hv_intra_pred", 
                "od_dering", 
                "od_img_copy", 
                "od_pvq_size_ctx", 
                "od_state_mc_predict", 
                "od_pvq_cos", 
                "od_ref_buf_to_coeff", 
                "od_init_qm", 
                "od_img_edge_ext", 
                "__gmon_start__", 
                "log_ex", 
                "od_postfilter_split", 
                "qsort", 
                "oggbyte_writecopy", 
                "oggbyte_reset", 
                "od_ec_tell_frac", 
                "od_state_clear", 
                "pow", 
                "od_state_get_predictor", 
                "calloc", 
                "__stack_chk_fail", 
                "__cxa_finalize", 
                "od_gain_expand", 
                "log", 
                "od_pvq_sin", 
                "od_pvq_compute_k", 
                "od_img_plane_copy", 
                "od_free_2d", 
                "malloc", 
                "od_ref_plane_to_coeff", 
                "od_apply_householder", 
                "od_state_init_border", 
                "oggbyte_writeinit", 
                "od_init_skipped_coeffs", 
                "memmove", 
                "od_apply_prefilter_frame_sbs", 
                "realloc", 
                "od_resample_luma_coeffs", 
                "od_mc_get_ref_predictor", 
                "ceil", 
                "oggbyte_write4", 
                "od_calloc_2d", 
                "od_cdf_adapt_q15", 
                "generic_model_update", 
                "od_qm_get_index", 
                "od_state_init", 
                "od_pvq_compute_gain", 
                "oggbyte_bytes", 
                "od_compute_householder", 
                "oggbyte_writeclear", 
                "sqrt", 
                "od_pvq_synthesis_partial", 
                "od_pvq_compute_max_theta", 
                "od_aligned_free", 
                "od_state_set_mv_res", 
                "od_aligned_malloc", 
                "od_restore_fpu", 
                "floor", 
                "strlen"
            ], 
            "rpm": "daala-libs-0-8.20170616git7278368.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libdaalaenc.so.0.0.1"
        }, 
        "usr/lib/libdaalabase_so_0_0_1": {
            "report-functions": [
                "strchr", 
                "__memset_chk", 
                "cos", 
                "_ITM_registerTMCloneTable", 
                "calloc", 
                "strcmp", 
                "strcpy", 
                "__cxa_finalize", 
                "fputc", 
                "pow", 
                "getenv", 
                "__snprintf_chk", 
                "realloc", 
                "__gmon_start__", 
                "__sprintf_chk", 
                "memset", 
                "strlen", 
                "free", 
                "__fprintf_chk", 
                "fwrite", 
                "strtoul", 
                "memmove", 
                "__stack_chk_fail", 
                "_ITM_deregisterTMCloneTable", 
                "sin", 
                "malloc", 
                "floor", 
                "fopen64"
            ], 
            "rpm": "daala-libs-0-8.20170616git7278368.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libdaalabase.so.0.0.1"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " daala-libs", 
            "License": " BSD", 
            "URL": " http://xiph.org/daala/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-02.phx2.fedoraproject.org", 
            "Description": "\nA new video compression technology. The goal of the project is to provide a\nvideo format that's free to implement, use and distribute, and a reference\nimplementation with technical performance superior to H.265.\n", 
            "Build Date": " Mon 11 Sep 2017 09:19:35 AM EDT", 
            "Source RPM": " daala-0-8.20170616git7278368.fc27.src.rpm", 
            "Version": " 0", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Mon 11 Sep 2017 09:29:25 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 8.20170616git7278368.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Daala video codec libraries", 
            "Size": " 384427"
        }
    }
}