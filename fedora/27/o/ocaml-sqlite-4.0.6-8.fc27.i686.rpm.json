{
    "results": {
        "usr/lib/ocaml/sqlite3/sqlite3_cmxs": {
            "report-functions": [
                "sqlite3_bind_parameter_count", 
                "sqlite3_value_double", 
                "caml_young_ptr", 
                "sqlite3_errcode", 
                "sqlite3_result_text", 
                "sqlite3_bind_text", 
                "caml_stat_free", 
                "pthread_getspecific", 
                "caml_copy_int64", 
                "sqlite3_bind_parameter_name", 
                "caml_modify", 
                "caml_callback_exn", 
                "caml_alloc_final", 
                "sqlite3_result_int64", 
                "sqlite3_step", 
                "sqlite3_result_blob", 
                "sqlite3_user_data", 
                "__gmon_start__", 
                "caml_named_value", 
                "sqlite3_column_name", 
                "sqlite3_clear_bindings", 
                "sqlite3_column_int64", 
                "caml_fresh_oo_id", 
                "strcmp", 
                "sqlite3_prepare_v2", 
                "sqlite3_bind_blob", 
                "caml_ml_array_bound_error", 
                "sqlite3_column_type", 
                "sqlite3_finalize", 
                "caml_string_length", 
                "sqlite3_result_null", 
                "sqlite3_value_int64", 
                "_ITM_registerTMCloneTable", 
                "sqlite3_value_text", 
                "sqlite3_busy_timeout", 
                "pthread_key_create", 
                "_ITM_deregisterTMCloneTable", 
                "camlPrintf__sprintf_1315", 
                "sqlite3_aggregate_context", 
                "sqlite3_result_double", 
                "sqlite3_value_bytes", 
                "sqlite3_column_count", 
                "caml_young_limit", 
                "sqlite3_exec", 
                "caml_local_roots", 
                "sqlite3_data_count", 
                "sqlite3_bind_int64", 
                "caml_stat_alloc", 
                "caml_raise_with_string", 
                "sqlite3_value_type", 
                "caml_callback2_exn", 
                "caml_alloc_string", 
                "caml_atom_table", 
                "caml_leave_blocking_section", 
                "sqlite3_enable_load_extension", 
                "caml_copy_double", 
                "sqlite3_result_error", 
                "sqlite3_errmsg", 
                "sqlite3_column_double", 
                "sqlite3_column_text", 
                "caml_raise_not_found", 
                "sqlite3_create_function", 
                "sqlite3_value_blob", 
                "caml_register_generational_global_root", 
                "sqlite3_bind_double", 
                "caml_raise", 
                "__stack_chk_fail", 
                "caml_register_global_root", 
                "sqlite3_changes", 
                "sqlite3_reset", 
                "sqlite3_column_bytes", 
                "__vsnprintf_chk", 
                "caml_alloc3", 
                "sqlite3_close", 
                "sqlite3_bind_null", 
                "camlPervasives__string_of_float_1161", 
                "camlInt64__to_string_1238", 
                "caml_alloc2", 
                "caml_enter_blocking_section", 
                "caml_c_call", 
                "caml_alloc", 
                "sqlite3_sleep", 
                "caml_remove_global_root", 
                "sqlite3_column_blob", 
                "sqlite3_bind_parameter_index", 
                "caml_allocN", 
                "__cxa_finalize", 
                "camlCallback__register_exception_1265", 
                "sqlite3_open_v2", 
                "sqlite3_last_insert_rowid", 
                "camlArray__init_1217", 
                "caml_alloc_small", 
                "sqlite3_column_decltype", 
                "caml_copy_string", 
                "caml_call_gc"
            ], 
            "rpm": "ocaml-sqlite-4.0.6-8.fc27.i686.rpm", 
            "complexity": {
                "r2aa": {
                    "afCc": null, 
                    "afC": null
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/ocaml/sqlite3/sqlite3.cmxs"
        }, 
        "usr/lib/ocaml/stublibs/dllsqlite3_stubs_so": {
            "report-functions": [
                "sqlite3_open_v2", 
                "sqlite3_column_decltype", 
                "caml_register_global_root", 
                "sqlite3_last_insert_rowid", 
                "sqlite3_errcode", 
                "caml_raise_not_found", 
                "caml_local_roots", 
                "sqlite3_data_count", 
                "sqlite3_column_count", 
                "sqlite3_changes", 
                "sqlite3_value_double", 
                "pthread_getspecific", 
                "sqlite3_enable_load_extension", 
                "sqlite3_user_data", 
                "caml_copy_double", 
                "sqlite3_result_double", 
                "caml_leave_blocking_section", 
                "sqlite3_value_int64", 
                "sqlite3_finalize", 
                "caml_alloc_final", 
                "sqlite3_bind_parameter_count", 
                "sqlite3_reset", 
                "sqlite3_column_blob", 
                "sqlite3_value_type", 
                "sqlite3_column_type", 
                "sqlite3_close", 
                "__stack_chk_fail", 
                "sqlite3_value_blob", 
                "sqlite3_column_bytes", 
                "sqlite3_create_function", 
                "sqlite3_exec", 
                "sqlite3_step", 
                "sqlite3_result_blob", 
                "caml_enter_blocking_section", 
                "caml_remove_global_root", 
                "caml_raise_with_string", 
                "__vsnprintf_chk", 
                "sqlite3_bind_null", 
                "sqlite3_bind_int64", 
                "sqlite3_busy_timeout", 
                "_ITM_deregisterTMCloneTable", 
                "sqlite3_errmsg", 
                "sqlite3_result_null", 
                "sqlite3_bind_parameter_index", 
                "pthread_key_create", 
                "sqlite3_column_name", 
                "caml_atom_table", 
                "caml_register_generational_global_root", 
                "sqlite3_result_text", 
                "caml_alloc_small", 
                "sqlite3_bind_text", 
                "caml_callback_exn", 
                "sqlite3_value_text", 
                "caml_named_value", 
                "sqlite3_clear_bindings", 
                "__gmon_start__", 
                "sqlite3_column_int64", 
                "caml_callback2_exn", 
                "caml_raise", 
                "caml_remove_generational_global_root", 
                "sqlite3_column_text", 
                "sqlite3_prepare_v2", 
                "sqlite3_column_double", 
                "strcmp", 
                "caml_alloc_string", 
                "pthread_setspecific", 
                "__cxa_finalize", 
                "sqlite3_result_error", 
                "sqlite3_value_bytes", 
                "_ITM_registerTMCloneTable", 
                "caml_copy_string", 
                "caml_alloc", 
                "caml_stat_free", 
                "sqlite3_result_int64", 
                "sqlite3_bind_parameter_name", 
                "sqlite3_aggregate_context", 
                "caml_copy_int64", 
                "sqlite3_bind_double", 
                "caml_string_length", 
                "sqlite3_sleep", 
                "sqlite3_bind_blob"
            ], 
            "rpm": "ocaml-sqlite-4.0.6-8.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: 'NoneType' object is not iterable"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/ocaml/stublibs/dllsqlite3_stubs.so"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " ocaml-sqlite", 
            "License": " BSD", 
            "URL": " https://github.com/mmottl/sqlite3-ocaml", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-09.phx2.fedoraproject.org", 
            "Description": "\nSQLite 3 database library wrapper for OCaml.\n", 
            "Build Date": " Tue 08 Aug 2017 02:58:58 PM EDT", 
            "Source RPM": " ocaml-sqlite-4.0.6-8.fc27.src.rpm", 
            "Version": " 4.0.6", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Wed 09 Aug 2017 10:09:27 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 8.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " OCaml library for accessing SQLite3 databases", 
            "Size": " 337102"
        }
    }
}