{
    "results": {
        "usr/lib/ocaml/ocamlgraph/graph_cmxs": {
            "report-functions": [
                "camlSet__min_elt_1319", 
                "caml_sys_remove", 
                "camlPrintf__sprintf_1315", 
                "caml_int64_to_int", 
                "camlQueue__take_1229", 
                "camlFilename__temp_file_inner_1806", 
                "camlHashtbl__iter_1474", 
                "camlSet__mem_1368", 
                "camlArray__blit_1246", 
                "camlBuffer__resize_1237", 
                "camlRandom__int_1249", 
                "camlList__assoc_1381", 
                "caml_compare", 
                "camlArray__iter_1252", 
                "caml_int64_div", 
                "camlFormat__pp_print_flush_1531", 
                "camlRandom__rawfloat_1278", 
                "caml_c_call", 
                "camlHashtbl__find_1416", 
                "caml_backtrace_pos", 
                "camlList__stable_sort_1482", 
                "camlBytes__make_1216", 
                "caml_int64_of_int", 
                "camlList__partition_1445", 
                "camlList__mem_1371", 
                "caml_greaterequal", 
                "camlPervasives__exit_1398", 
                "camlList__fold_right_1292", 
                "caml_alloc2", 
                "camlSys", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlPervasives__failwith_1005", 
                "caml_notequal", 
                "camlSet__remove_1375", 
                "caml_alloc1", 
                "caml_modify", 
                "camlList__iter_1272", 
                "caml_young_ptr", 
                "caml_alloc3", 
                "camlSet__fold_1466", 
                "camlMap__mem_1383", 
                "camlRandom__int64_1270", 
                "camlList__exists_1350", 
                "camlArray", 
                "camlQueue", 
                "caml_young_limit", 
                "camlList__find_all_1437", 
                "camlHashtbl__add_1596", 
                "caml_exn_Invalid_argument", 
                "camlSet__subset_1449", 
                "caml_int_compare", 
                "camlList__fold_left_1286", 
                "caml_ml_close_channel", 
                "camlSet__for_all_1473", 
                "camlLexing__engine_1237", 
                "camlList__rev_append_1236", 
                "camlCamlinternalMod__update_mod_1279", 
                "caml_float_of_string", 
                "camlParsing__peek_val_1372", 
                "camlList__for_all_1345", 
                "camlMap__fun_2919", 
                "camlPervasives__30", 
                "caml_nativeint_ops", 
                "camlBytes__sub_1234", 
                "camlHashtbl__mem_1672", 
                "camlPervasives__open_in_gen_1242", 
                "camlHashtbl__add_1391", 
                "camlLexing__new_engine_1242", 
                "caml_int32_ops", 
                "camlHashtbl", 
                "camlSet__iter_1460", 
                "camlPervasives__output_string_1213", 
                "caml_ml_flush", 
                "caml_int64_ops", 
                "__cxa_finalize", 
                "camlFormat__formatter_of_out_channel_1659", 
                "caml_equal", 
                "caml_int64_shift_right_unsigned", 
                "camlArray__sub_1236", 
                "camlHashtbl__create_inner_2188", 
                "camlSet__union_1384", 
                "camlPervasives", 
                "caml_update_dummy", 
                "camlList__map_1248", 
                "caml_allocN", 
                "caml_extra_params", 
                "camlStack__push_1215", 
                "camlStack__pop_1218", 
                "sqrt", 
                "camlPervasives__$5e_1117", 
                "camlSet__filter_1485", 
                "camlMap__remove_1424", 
                "caml_make_vect", 
                "caml_raise_exn", 
                "__gmon_start__", 
                "camlHashtbl__Make_1702", 
                "camlList", 
                "camlPervasives__max_1030", 
                "camlMap__bindings_aux_1658", 
                "camlList__split_1454", 
                "caml_fresh_oo_id", 
                "caml_int_of_string", 
                "camlPervasives__open_out_gen_1190", 
                "camlHashtbl__replace_1461", 
                "camlMap__find_1303", 
                "camlFormat__fprintf_1894", 
                "caml_int64_add", 
                "camlBytes__map_1332", 
                "caml_exception_pointer", 
                "camlFormat__pp_print_string_1500", 
                "camlCamlinternalMod__init_mod_1271", 
                "caml_alloc_dummy", 
                "camlPervasives__invalid_arg_1007", 
                "camlInt64__2", 
                "camlSet__elements_aux_1509", 
                "camlParsing__yyparse_1350", 
                "camlHashtbl__fold_1506", 
                "caml_exn_Division_by_zero", 
                "camlPervasives__$40_1166", 
                "camlMap__iter_1434", 
                "camlMap__filter_1590", 
                "camlHashtbl__6", 
                "camlParsing", 
                "camlHashtbl__replace_1666", 
                "camlList__length_aux_1204", 
                "camlFilename", 
                "camlMap__add_1291", 
                "caml_call_gc", 
                "caml_lessthan", 
                "camlSet__singleton_1291", 
                "caml_ml_array_bound_error", 
                "caml_hash", 
                "camlPervasives__23", 
                "caml_exn_Assert_failure", 
                "camlCamlinternalMod", 
                "camlChar", 
                "camlMap__fold_1463", 
                "camlPervasives__close_out_1236", 
                "camlSet__cardinal_1505", 
                "camlHashtbl__clear_1343", 
                "camlHashtbl__find_all_1651", 
                "caml_int64_mul", 
                "caml_greaterthan", 
                "camlArray__init_1217", 
                "camlSet__fun_2940", 
                "caml_exn_Not_found", 
                "camlString", 
                "camlArray__fold_left_1304", 
                "camlSet__compare_1443", 
                "camlHashtbl__remove_1611", 
                "camlPervasives__min_1027", 
                "camlPrintf__fprintf_1294", 
                "caml_sys_system_command", 
                "camlArray__fold_right_1310", 
                "camlLexing__from_channel_1262", 
                "camlStack", 
                "camlRandom", 
                "camlQueue__add_1219", 
                "caml_obj_dup", 
                "camlMap__map_1441", 
                "camlArray__copy_1229", 
                "camlHashtbl__find_1621", 
                "_ITM_registerTMCloneTable", 
                "camlList__1", 
                "camlSet__exists_1479", 
                "caml_int64_sub", 
                "camlBuffer__create_1209", 
                "_ITM_deregisterTMCloneTable", 
                "camlPervasives__string_of_int_1150"
            ], 
            "rpm": "ocaml-ocamlgraph-1.8.7-10.fc27.i686.rpm", 
            "complexity": {
                "r2aa": {
                    "afCc": null, 
                    "afC": null
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/ocaml/ocamlgraph/graph.cmxs"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " ocaml-ocamlgraph", 
            "License": " LGPLv2 with exceptions", 
            "URL": " http://ocamlgraph.lri.fr/index.en.html", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildhw-08.phx2.fedoraproject.org", 
            "Description": "\nOcamlgraph provides several different implementations of graph data\nstructures. It also provides implementations for a number of classical\ngraph algorithms like Kruskal's algorithm for MSTs, topological\nordering of DAGs, Dijkstra's shortest paths algorithm, and\nFord-Fulkerson's maximal-flow algorithm to name a few. The algorithms\nand data structures are written functorially for maximal\nreusability. Also has input and output capability for Graph Modeling\nLanguage file format and Dot and Neato graphviz (graph visualization)\ntools.\n", 
            "Build Date": " Mon 07 Aug 2017 03:06:16 PM EDT", 
            "Source RPM": " ocaml-ocamlgraph-1.8.7-10.fc27.src.rpm", 
            "Version": " 1.8.7", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Wed 09 Aug 2017 10:04:14 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 10.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " OCaml library for arc and node graphs", 
            "Size": " 8235404"
        }
    }
}