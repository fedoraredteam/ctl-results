{
    "results": {
        "usr/lib/ocaml/apron/octMPQ_cmxs": {
            "report-functions": [
                "__cxa_finalize", 
                "caml_alloc", 
                "camlidl_apron_custom_manager_ptr", 
                "camlidl_ml2c_generator0_struct_ap_generator0_array_t", 
                "caml_c_call", 
                "_ITM_deregisterTMCloneTable", 
                "ap_abstract0_oct_add_epsilon", 
                "oct_manager_alloc", 
                "ap_abstract0_oct_widening_thresholds", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "camlidl_apron_heap", 
                "camlidl_c2ml_manager_struct_ap_exclog_t", 
                "caml_raise_with_arg", 
                "camlidl_abstract0_ap_abstract0_manager", 
                "caml_string_compare", 
                "camlidl_apron_custom_abstract0_ptr", 
                "camlidl_ml2c_scalar_ap_scalar_ptr", 
                "camlidl_manager_ap_manager_get_library", 
                "ap_abstract0_oct_add_epsilon_bin", 
                "camlidl_free", 
                "camlidl_ml2c_scalar_struct_ap_scalar_array_t", 
                "caml_named_value", 
                "camlPervasives__failwith_1005", 
                "ap_abstract0_oct_narrowing", 
                "__stack_chk_fail", 
                "ap_abstract0_size", 
                "ap_abstract0_oct_of_generator_array"
            ], 
            "rpm": "ocaml-apron-0.9.11-11.1097.svn20160801.fc27.i686.rpm", 
            "complexity": {
                "r2aa": {
                    "afCc": null, 
                    "afC": null
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/ocaml/apron/octMPQ.cmxs"
        }, 
        "usr/lib/ocaml/apron/t1pMPFR_cmxs": {
            "report-functions": [
                "__stack_chk_fail", 
                "t1p_manager_alloc", 
                "camlidl_free", 
                "caml_alloc_custom", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "camlidl_apron_custom_manager_ptr"
            ], 
            "rpm": "ocaml-apron-0.9.11-11.1097.svn20160801.fc27.i686.rpm", 
            "complexity": {
                "r2aa": {
                    "afCc": null, 
                    "afC": null
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/ocaml/apron/t1pMPFR.cmxs"
        }, 
        "usr/lib/ocaml/apron/dllt1pD_caml_so": {
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "t1p_manager_alloc", 
                "__cxa_finalize", 
                "camlidl_apron_custom_manager_ptr", 
                "__stack_chk_fail"
            ], 
            "rpm": "ocaml-apron-0.9.11-11.1097.svn20160801.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: 'NoneType' object is not iterable"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/ocaml/apron/dllt1pD_caml.so"
        }, 
        "usr/lib/ocaml/apron/dlloctD_caml_so": {
            "report-functions": [
                "camlidl_apron_custom_abstract0_ptr", 
                "camlidl_ml2c_scalar_ap_scalar_ptr", 
                "ap_abstract0_size", 
                "ap_abstract0_oct_widening_thresholds", 
                "__gmon_start__", 
                "ap_abstract0_oct_of_generator_array", 
                "ap_abstract0_oct_narrowing", 
                "camlidl_free", 
                "__stack_chk_fail", 
                "caml_raise_with_arg", 
                "ap_abstract0_oct_add_epsilon_bin", 
                "camlidl_c2ml_manager_struct_ap_exclog_t", 
                "camlidl_apron_heap", 
                "caml_alloc_custom", 
                "caml_named_value", 
                "oct_manager_alloc", 
                "__cxa_finalize", 
                "camlidl_apron_custom_manager_ptr", 
                "_ITM_deregisterTMCloneTable", 
                "caml_alloc", 
                "ap_abstract0_oct_add_epsilon", 
                "camlidl_ml2c_generator0_struct_ap_generator0_array_t"
            ], 
            "rpm": "ocaml-apron-0.9.11-11.1097.svn20160801.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: 'NoneType' object is not iterable"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/ocaml/apron/dlloctD_caml.so"
        }, 
        "usr/lib/ocaml/apron/apron_d_cmxs": {
            "report-functions": [
                "camlidl_mpq_mpq_get_num", 
                "abort", 
                "ap_abstract0_widening", 
                "ap_abstract0_bound_dimension", 
                "ap_texpr1_extend_environment", 
                "ap_abstract0_expand", 
                "ap_abstract1_bound_variable", 
                "ap_policy_manager_free", 
                "ap_scalar_free", 
                "ap_abstract1_top", 
                "ap_abstract0_apply_dimchange2", 
                "ap_environment_rename", 
                "caml_young_ptr", 
                "camlFormat__pp_print_char_1512", 
                "camlLexing__engine_1237", 
                "camlLexing__from_string_1266", 
                "ap_texpr0_binop", 
                "ap_abstract0_policy_meet_tcons_array_improve", 
                "ap_abstract0_add_ray_array", 
                "ap_abstract0_meet", 
                "ap_texpr0_is_interval_cst", 
                "ap_abstract0_closure", 
                "camlMpfrf__2", 
                "ap_lincons1_array_extend_environment", 
                "camlCallback__register_exception_1265", 
                "camlidl_mpz_mpz_sgn", 
                "caml_raise_with_arg", 
                "ap_coeff_init_set", 
                "ap_abstract0_is_leq", 
                "ap_tcons1_array_extend_environment", 
                "_ITM_deregisterTMCloneTable", 
                "ap_abstract0_sat_interval", 
                "ap_abstract1_minimize_environment", 
                "ap_abstract1_fold", 
                "caml_alloc", 
                "ap_abstract0_policy_meet_lincons_array_apply", 
                "ap_manager_get_library", 
                "camlidl_malloc_string", 
                "ap_abstract0_to_generator_array", 
                "camlidl_mpq_ptr_ml2c", 
                "camlidl_mpfr_ptr_ml2c", 
                "ap_environment_alloc", 
                "ap_funopt_init", 
                "ap_policy_hash", 
                "ap_abstract0_dimension", 
                "camlidl_mpfr_mpfr_get_z_exp", 
                "ap_abstract1_meet_array", 
                "ap_abstract1_substitute_linexpr_array", 
                "ap_texpr0_is_interval_polyfrac", 
                "caml_ml_array_bound_error", 
                "ap_abstract1_meet_lincons_array", 
                "ap_abstract0_add_dimensions", 
                "ap_disjunction_to_lincons0_set", 
                "ap_generator1_array_extend_environment_with", 
                "ap_linexpr0_alloc", 
                "ap_texpr1_extend_environment_with", 
                "ap_abstract0_remove_dimensions", 
                "ap_abstract1_is_eq", 
                "ap_linexpr1_coeffref", 
                "camlidl_mpq_mpq_cmp_si", 
                "ap_abstract0_assign_texpr_array", 
                "ap_texpr1_unop", 
                "ap_dimchange2_clear", 
                "ap_abstract0_copy", 
                "ap_abstract0_policy_meet_array_apply", 
                "ap_abstract0_size", 
                "ap_abstract0_policy_meet_array_improve", 
                "camlMpqf__neg_1298", 
                "ap_abstract1_is_variable_unconstrained", 
                "ap_linexpr0_is_real", 
                "free", 
                "strlen", 
                "camlidl_mpfr_mpfr_set", 
                "ap_abstract0_sat_tcons", 
                "ap_linexpr0_minimize", 
                "camlFormat__pp_print_string_1500", 
                "caml_alloc_small", 
                "ap_abstract0_substitute_texpr_array", 
                "caml_equal", 
                "caml_deserialize_block_1", 
                "ap_texpr0_cst", 
                "ap_texpr1_cst", 
                "caml_fresh_oo_id", 
                "ap_texpr0_equal", 
                "camlidl_mpq_mpq_set_num", 
                "ap_environment_dim_of_var", 
                "ap_abstract1_meet_tcons_array", 
                "ap_disjunction_manager_alloc", 
                "camlidl_mpfr_ptr_c2ml", 
                "ap_abstract0_bound_linexpr", 
                "ap_generator1_get_coeff", 
                "ap_lincons1_make_unsat", 
                "ap_abstract1_policy_meet_lincons_array_improve", 
                "ap_abstract0_to_lincons_array", 
                "ap_abstract0_of_box", 
                "_ITM_registerTMCloneTable", 
                "ap_linexpr0_is_integer", 
                "camlidl_mpfr_mpfr__get_str", 
                "__snprintf_chk", 
                "ap_policy_fprint", 
                "ap_abstract0_meet_lincons_array", 
                "ap_policy_equal", 
                "ap_abstract1_policy_meet_improve", 
                "caml_copy_double", 
                "camlPervasives__failwith_1005", 
                "ap_lincons1_extend_environment_with", 
                "caml_allocN", 
                "ap_policy_sprint", 
                "ap_abstract0_is_bottom", 
                "caml_serialize_int_8", 
                "ap_abstract0_sat_lincons", 
                "camlMpfr__1", 
                "camlList__stable_sort_1482", 
                "ap_manager_get_flag_exact", 
                "camlidl_mpfr_mpfr_init2", 
                "ap_abstract1_change_environment", 
                "ap_linexpr1_extend_environment_with", 
                "camlidl_mpq_mpq_set_d", 
                "ap_environment_is_eq", 
                "ap_abstract0_join_array", 
                "ap_abstract1_bound_linexpr", 
                "__gmpq_init", 
                "camlidl_mpfr_mpfr_get_prec", 
                "ap_manager_free", 
                "camlArray__init_1217", 
                "ap_abstract1_of_box", 
                "__gmon_start__", 
                "camlidl_mpq_mpq_cmp", 
                "caml_exn_Assert_failure", 
                "ap_abstract0_deserialize_raw", 
                "ap_abstract0_hash", 
                "ap_abstract1_closure", 
                "ap_abstract1_rename_array", 
                "ap_abstract0_bottom", 
                "ap_texpr0_copy", 
                "camlMpfr__9", 
                "camlidl_mpz_mpz_mul_2exp", 
                "ap_abstract1_widening_threshold", 
                "ap_abstract0_serialize_raw", 
                "ap_abstract1_policy_meet_tcons_array_apply", 
                "ap_environment_free2", 
                "__gmpq_set", 
                "ap_abstract1_policy_meet_lincons_array_apply", 
                "ap_environment_compare", 
                "ap_abstract1_unify", 
                "ap_coeff_clear", 
                "ap_abstract1_forget_array", 
                "ap_texpr1_binop", 
                "fflush", 
                "camlidl_mpz_mpz_init_set_si", 
                "ap_generator1_array_extend_environment", 
                "ap_abstract0_free", 
                "camlidl_mpq_mpq_sgn", 
                "ap_abstract0_fold", 
                "ap_abstract0_minimize", 
                "ap_abstract1_is_leq", 
                "ap_manager_get_flag_best", 
                "ap_abstract0_canonicalize", 
                "caml_serialize_block_1", 
                "caml_float_of_string", 
                "ap_abstract0_bound_texpr", 
                "camlidl_mpz_mpz_init", 
                "mpfr_set4", 
                "caml_invalid_argument", 
                "__cxa_finalize", 
                "ap_environment_remove", 
                "camlParsing__yyparse_1350", 
                "ap_abstract1_assign_texpr_array", 
                "strcmp", 
                "ap_texpr0_is_scalar", 
                "camlidl_mpq_mpq_get_den", 
                "__assert_fail", 
                "ap_abstract1_join", 
                "caml_local_roots", 
                "camlMpfr__2", 
                "camlParsing__peek_val_1372", 
                "ap_disjunction_compose", 
                "ap_abstract1_policy_meet_apply", 
                "ap_tcons1_array_extend_environment_with", 
                "camlidl_mpq_mpq__get_str", 
                "ap_abstract1_sat_tcons", 
                "caml_extra_params", 
                "camlMpfr__13", 
                "caml_callback2", 
                "ap_generator1_coeffref", 
                "ap_environment_hash", 
                "ap_abstract1_policy_meet_tcons_array_improve", 
                "caml_young_limit", 
                "camlidl_mpq_mpq_equal", 
                "caml_string_equal", 
                "ap_abstract0_to_tcons_array", 
                "ap_abstract0_join", 
                "ap_generator1_extend_environment", 
                "camlidl_free", 
                "camlPervasives__$5e_1117", 
                "ap_abstract0_policy_meet_apply", 
                "__fprintf_chk", 
                "ap_abstract1_meet", 
                "ap_abstract0_policy_meet_improve", 
                "camlidl_mpq_mpq_canonicalize", 
                "ap_linexpr0_get_coeff", 
                "caml_make_vect", 
                "ap_abstract0_widening_threshold", 
                "ap_dimchange_init", 
                "ap_abstract0_is_eq", 
                "ap_environment_lce", 
                "ap_policy_copy", 
                "ap_abstract1_bottom", 
                "caml_named_value", 
                "camlidl_mpfr_mpfr_sgn", 
                "ap_linexpr0_free", 
                "camlArray__iter_1252", 
                "ap_linexpr1_get_coeff", 
                "ap_abstract0_fdump", 
                "ap_generator1_extend_environment_with", 
                "malloc", 
                "ap_linexpr0_copy", 
                "ap_abstract1_widening", 
                "ap_interval_free", 
                "camlidl_mpfr_mpfr_inf_p", 
                "caml_register_custom_operations", 
                "camlList__length_aux_1204", 
                "ap_abstract0_approximate", 
                "ap_abstract1_sat_interval", 
                "caml_modify", 
                "ap_texpr0_dim", 
                "ap_abstract1_expand", 
                "ap_disjunction_decompose", 
                "caml_make_array", 
                "ap_texpr0_hash", 
                "ap_linexpr0_hash", 
                "ap_dimchange2_free", 
                "caml_alloc2", 
                "ap_texpr0_is_interval_polynomial", 
                "ap_manager_set_abort_if_exception", 
                "caml_exception_pointer", 
                "camlidl_mpfr_mpfr_cmp", 
                "ap_environment_dimchange", 
                "ap_environment_add", 
                "ap_lincons1_array_extend_environment_with", 
                "camlFormat__sprintf_1911", 
                "camlBytes__sub_1234", 
                "caml_alloc_custom", 
                "ap_abstract1_bound_texpr", 
                "ap_texpr0_free", 
                "__stack_chk_fail", 
                "ap_lincons0_is_unsat", 
                "caml_deserialize_uint_8", 
                "camlidl_mpfr_mpfr_cmp_si", 
                "camlidl_mpq_mpq_set_den", 
                "ap_linexpr0_compare", 
                "ap_lincons1_coeffref", 
                "ap_linexpr1_extend_environment", 
                "ap_texpr0_unop", 
                "ap_manager_get_funopt", 
                "ap_texpr1_copy", 
                "ap_manager_set_funopt", 
                "ap_abstract0_to_box", 
                "ap_lincons1_extend_environment", 
                "ap_abstract1_add_ray_array", 
                "camlidl_mpq_mpq_set", 
                "ap_tcons1_extend_environment_with", 
                "ap_abstract0_forget_array", 
                "ap_tcons1_extend_environment", 
                "camlFormat__fprintf_1894", 
                "ap_abstract1_join_array", 
                "camlidl_mpq_mpq_set_si", 
                "camlidl_mpq_mpq_init", 
                "ap_linexpr0_coeffref", 
                "ap_coeff_init", 
                "camlidl_malloc", 
                "camlidl_mpq_ptr_c2ml", 
                "ap_texpr0_is_interval_linear", 
                "ap_coeff_set", 
                "ap_abstract0_is_top", 
                "ap_abstract0_substitute_linexpr_array", 
                "caml_obj_dup", 
                "ap_abstract0_top", 
                "ap_abstract1_policy_meet_array_improve", 
                "mpfr_init2", 
                "ap_abstract0_is_dimension_unconstrained", 
                "caml_string_compare", 
                "ap_abstract0_policy_meet_tcons_array_apply", 
                "ap_abstract1_fdump", 
                "ap_abstract0_assign_linexpr_array", 
                "ap_abstract1_policy_meet_array_apply", 
                "camlidl_mpfr_mpfr_neg", 
                "ap_abstract0_policy_meet_lincons_array_improve", 
                "ap_abstract1_sat_lincons", 
                "camlList__iter_1272", 
                "caml_float_compare_unboxed", 
                "camlidl_mpq_mpq__set_str", 
                "ap_texpr0_from_linexpr0", 
                "ap_environment_dimchange2", 
                "ap_abstract1_assign_linexpr_array", 
                "caml_copy_string", 
                "camlidl_find_enum", 
                "caml_c_call", 
                "ap_policy_dimension", 
                "ap_interval_array_free", 
                "ap_abstract0_meet_array", 
                "ap_lincons1_get_coeff", 
                "ap_abstract0_meet_tcons_array", 
                "camlPervasives__string_of_float_1161", 
                "ap_abstract1_substitute_texpr_array", 
                "camlPervasives", 
                "ap_policy_free", 
                "camlParsing", 
                "caml_failwith", 
                "ap_manager_get_version"
            ], 
            "rpm": "ocaml-apron-0.9.11-11.1097.svn20160801.fc27.i686.rpm", 
            "complexity": {
                "r2aa": {
                    "afCc": null, 
                    "afC": null
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/ocaml/apron/apron.d.cmxs"
        }, 
        "usr/lib/ocaml/apron/dllpolkaRll_caml_so": {
            "report-functions": [
                "caml_alloc_custom", 
                "caml_alloc", 
                "pk_get_approximate_max_coeff_size", 
                "pkeq_manager_alloc", 
                "__stack_chk_fail", 
                "camlidl_free", 
                "camlidl_apron_custom_manager_ptr", 
                "pk_set_approximate_max_coeff_size", 
                "_ITM_deregisterTMCloneTable", 
                "pk_get_max_coeff_size", 
                "pk_set_max_coeff_size", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "ap_manager_set_abort_if_exception"
            ], 
            "rpm": "ocaml-apron-0.9.11-11.1097.svn20160801.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: 'NoneType' object is not iterable"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/ocaml/apron/dllpolkaRll_caml.so"
        }, 
        "usr/lib/ocaml/apron/dllpolkaMPQ_caml_so": {
            "report-functions": [
                "pkeq_manager_alloc", 
                "pk_set_approximate_max_coeff_size", 
                "__stack_chk_fail", 
                "ap_manager_set_abort_if_exception", 
                "__cxa_finalize", 
                "camlidl_free", 
                "pk_get_max_coeff_size", 
                "__gmon_start__", 
                "camlidl_apron_custom_manager_ptr", 
                "pk_set_max_coeff_size", 
                "pk_get_approximate_max_coeff_size", 
                "pk_manager_alloc", 
                "caml_alloc_custom", 
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "ocaml-apron-0.9.11-11.1097.svn20160801.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: 'NoneType' object is not iterable"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/ocaml/apron/dllpolkaMPQ_caml.so"
        }, 
        "usr/lib/ocaml/apron/t1pD_cmxs": {
            "report-functions": [
                "__gmon_start__", 
                "caml_alloc_custom", 
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize", 
                "camlidl_apron_custom_manager_ptr", 
                "t1p_manager_alloc"
            ], 
            "rpm": "ocaml-apron-0.9.11-11.1097.svn20160801.fc27.i686.rpm", 
            "complexity": {
                "r2aa": {
                    "afCc": null, 
                    "afC": null
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/ocaml/apron/t1pD.cmxs"
        }, 
        "usr/lib/ocaml/apron/t1pMPQ_cmxs": {
            "report-functions": [
                "camlidl_apron_custom_manager_ptr", 
                "camlidl_free", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable", 
                "t1p_manager_alloc", 
                "__stack_chk_fail"
            ], 
            "rpm": "ocaml-apron-0.9.11-11.1097.svn20160801.fc27.i686.rpm", 
            "complexity": {
                "r2aa": {
                    "afCc": null, 
                    "afC": null
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/ocaml/apron/t1pMPQ.cmxs"
        }, 
        "usr/lib/ocaml/apron/dllboxD_caml_so": {
            "report-functions": [
                "__gmon_start__", 
                "camlidl_apron_custom_policy_manager_ptr", 
                "ap_manager_set_abort_if_exception", 
                "camlidl_apron_custom_manager_ptr", 
                "__cxa_finalize", 
                "caml_alloc_custom", 
                "_ITM_deregisterTMCloneTable", 
                "__stack_chk_fail", 
                "box_policy_manager_alloc", 
                "box_manager_alloc"
            ], 
            "rpm": "ocaml-apron-0.9.11-11.1097.svn20160801.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: 'NoneType' object is not iterable"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/ocaml/apron/dllboxD_caml.so"
        }, 
        "usr/lib/ocaml/apron/ppl_cmxs": {
            "report-functions": [
                "__cxa_finalize", 
                "camlidl_apron_custom_manager_ptr", 
                "_ITM_deregisterTMCloneTable", 
                "caml_allocN", 
                "__gmon_start__", 
                "camlidl_manager_ap_manager_get_library", 
                "__stack_chk_fail", 
                "ap_ppl_grid_manager_alloc", 
                "camlidl_abstract0_ap_abstract0_manager", 
                "caml_exception_pointer", 
                "ap_ppl_poly_manager_alloc", 
                "caml_string_compare", 
                "camlPervasives__failwith_1005", 
                "caml_c_call", 
                "caml_alloc_custom", 
                "camlidl_free", 
                "camlBytes__sub_1234"
            ], 
            "rpm": "ocaml-apron-0.9.11-11.1097.svn20160801.fc27.i686.rpm", 
            "complexity": {
                "r2aa": {
                    "afCc": null, 
                    "afC": null
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/ocaml/apron/ppl.cmxs"
        }, 
        "usr/lib/ocaml/apron/octD_cmxs": {
            "report-functions": [
                "ap_abstract0_oct_widening_thresholds", 
                "caml_alloc_custom", 
                "ap_abstract0_size", 
                "camlidl_abstract0_ap_abstract0_manager", 
                "caml_named_value", 
                "__cxa_finalize", 
                "camlidl_apron_custom_manager_ptr", 
                "ap_abstract0_oct_add_epsilon_bin", 
                "oct_manager_alloc", 
                "camlidl_ml2c_generator0_struct_ap_generator0_array_t", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "ap_abstract0_oct_add_epsilon", 
                "ap_abstract0_oct_of_generator_array", 
                "caml_alloc", 
                "camlPervasives__failwith_1005", 
                "__stack_chk_fail", 
                "camlidl_apron_heap", 
                "caml_string_compare", 
                "camlidl_c2ml_manager_struct_ap_exclog_t", 
                "camlidl_free", 
                "_ITM_deregisterTMCloneTable", 
                "caml_c_call", 
                "caml_allocN", 
                "ap_abstract0_oct_narrowing", 
                "caml_raise_with_arg", 
                "camlidl_ml2c_scalar_ap_scalar_ptr", 
                "camlidl_manager_ap_manager_get_library"
            ], 
            "rpm": "ocaml-apron-0.9.11-11.1097.svn20160801.fc27.i686.rpm", 
            "complexity": {
                "r2aa": {
                    "afCc": null, 
                    "afC": null
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/ocaml/apron/octD.cmxs"
        }, 
        "usr/lib/ocaml/apron/dllt1pMPFR_caml_so": {
            "report-functions": [
                "__stack_chk_fail", 
                "__cxa_finalize", 
                "__gmon_start__", 
                "caml_alloc_custom", 
                "camlidl_free", 
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable", 
                "t1p_manager_alloc"
            ], 
            "rpm": "ocaml-apron-0.9.11-11.1097.svn20160801.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: 'NoneType' object is not iterable"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/ocaml/apron/dllt1pMPFR_caml.so"
        }, 
        "usr/lib/ocaml/apron/dllpolkaGrid_caml_so": {
            "report-functions": [
                "ap_reducedproduct_compose", 
                "__gmon_start__", 
                "ap_reducedproduct_decompose", 
                "caml_alloc_small", 
                "camlidl_apron_custom_abstract0_ptr", 
                "_ITM_deregisterTMCloneTable", 
                "camlidl_apron_custom_manager_ptr", 
                "malloc", 
                "caml_local_roots", 
                "free", 
                "__stack_chk_fail", 
                "__cxa_finalize", 
                "caml_alloc_custom", 
                "camlidl_apron_manager_check_exception", 
                "camlidl_free", 
                "camlidl_apron_heap", 
                "ap_abstract0_size", 
                "ap_manager_set_abort_if_exception", 
                "caml_failwith"
            ], 
            "rpm": "ocaml-apron-0.9.11-11.1097.svn20160801.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: 'NoneType' object is not iterable"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/ocaml/apron/dllpolkaGrid_caml.so"
        }, 
        "usr/lib/ocaml/apron/dllap_ppl_caml_so": {
            "report-functions": [
                "caml_alloc_custom", 
                "camlidl_apron_custom_manager_ptr", 
                "__stack_chk_fail", 
                "camlidl_free", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "ap_ppl_poly_manager_alloc", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "ocaml-apron-0.9.11-11.1097.svn20160801.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: 'NoneType' object is not iterable"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/ocaml/apron/dllap_ppl_caml.so"
        }, 
        "usr/lib/ocaml/apron/polkaMPQ_cmxs": {
            "report-functions": [
                "camlidl_abstract0_ap_abstract0_manager", 
                "caml_exception_pointer", 
                "caml_alloc_custom", 
                "camlidl_free", 
                "caml_alloc", 
                "ap_manager_set_abort_if_exception", 
                "pk_set_max_coeff_size", 
                "pk_set_approximate_max_coeff_size", 
                "pk_get_approximate_max_coeff_size", 
                "caml_c_call", 
                "_ITM_registerTMCloneTable", 
                "pkeq_manager_alloc", 
                "caml_string_compare", 
                "camlidl_apron_custom_manager_ptr", 
                "pk_get_max_coeff_size", 
                "__gmon_start__", 
                "camlPervasives__failwith_1005", 
                "camlBytes__sub_1234", 
                "caml_allocN", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "__stack_chk_fail", 
                "camlidl_manager_ap_manager_get_library"
            ], 
            "rpm": "ocaml-apron-0.9.11-11.1097.svn20160801.fc27.i686.rpm", 
            "complexity": {
                "r2aa": {
                    "afCc": null, 
                    "afC": null
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/ocaml/apron/polkaMPQ.cmxs"
        }, 
        "usr/lib/ocaml/apron/polkaRll_d_cmxs": {
            "report-functions": [
                "camlidl_free", 
                "camlBytes__sub_1234", 
                "__cxa_finalize", 
                "pk_set_approximate_max_coeff_size", 
                "caml_string_compare", 
                "caml_alloc_custom", 
                "pk_get_approximate_max_coeff_size", 
                "camlidl_manager_ap_manager_get_library", 
                "pk_set_max_coeff_size", 
                "pkeq_manager_alloc", 
                "_ITM_registerTMCloneTable", 
                "camlidl_abstract0_ap_abstract0_manager", 
                "camlPervasives__failwith_1005", 
                "camlidl_apron_custom_manager_ptr", 
                "_ITM_deregisterTMCloneTable", 
                "caml_allocN", 
                "__stack_chk_fail", 
                "caml_alloc", 
                "pk_get_max_coeff_size", 
                "caml_exn_Invalid_argument", 
                "ap_manager_set_abort_if_exception", 
                "caml_c_call", 
                "__gmon_start__"
            ], 
            "rpm": "ocaml-apron-0.9.11-11.1097.svn20160801.fc27.i686.rpm", 
            "complexity": {
                "r2aa": {
                    "afCc": null, 
                    "afC": null
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/ocaml/apron/polkaRll.d.cmxs"
        }, 
        "usr/lib/ocaml/apron/boxMPQ_cmxs": {
            "report-functions": [
                "camlidl_abstract0_ap_abstract0_manager", 
                "camlApron__Abstract0__10", 
                "camlidl_var_ap_var_to_string", 
                "camlidl_manager_ap_manager_get_library", 
                "__gmon_start__", 
                "camlApron__Abstract0__print_array_inner_1702", 
                "caml_allocN", 
                "camlArray__of_list_1294", 
                "caml_c_call", 
                "camlApron__Abstract0__16", 
                "caml_call_gc", 
                "camlidl_apron_custom_manager_ptr", 
                "__cxa_finalize", 
                "ap_manager_set_abort_if_exception", 
                "_ITM_deregisterTMCloneTable", 
                "camlPervasives", 
                "camlPervasives__failwith_1005", 
                "caml_young_limit", 
                "camlidl_free", 
                "caml_alloc_custom", 
                "caml_young_ptr", 
                "camlidl_environment_ap_environment_var_of_dim", 
                "__stack_chk_fail", 
                "box_manager_alloc", 
                "camlApron__Abstract0__21", 
                "camlList__rev_append_1236", 
                "caml_string_compare", 
                "camlidl_policy_ap_policy_manager_get_manager", 
                "camlFormat__fprintf_1894", 
                "camlidl_apron_custom_policy_manager_ptr", 
                "camlApron", 
                "camlidl_policy_ap_policy_to_string", 
                "camlidl_policy_ap_policy_manager", 
                "caml_ml_array_bound_error"
            ], 
            "rpm": "ocaml-apron-0.9.11-11.1097.svn20160801.fc27.i686.rpm", 
            "complexity": {
                "r2aa": {
                    "afCc": null, 
                    "afC": null
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/ocaml/apron/boxMPQ.cmxs"
        }, 
        "usr/lib/ocaml/apron/polkaGrid_cmxs": {
            "report-functions": [
                "free", 
                "_ITM_registerTMCloneTable", 
                "ap_abstract0_size", 
                "caml_allocN", 
                "ap_reducedproduct_compose", 
                "ap_reducedproduct_decompose", 
                "malloc", 
                "camlidl_apron_custom_abstract0_ptr", 
                "camlidl_apron_custom_manager_ptr", 
                "caml_exn_Invalid_argument", 
                "caml_local_roots", 
                "caml_alloc_small", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "caml_string_compare", 
                "camlPervasives__failwith_1005", 
                "camlidl_apron_manager_check_exception", 
                "camlidl_apron_heap", 
                "caml_failwith", 
                "ap_pkgrid_manager_alloc", 
                "caml_alloc_custom", 
                "camlidl_manager_ap_manager_get_library", 
                "__stack_chk_fail", 
                "camlBytes__sub_1234", 
                "caml_c_call", 
                "camlidl_abstract0_ap_abstract0_manager", 
                "camlidl_free", 
                "__cxa_finalize"
            ], 
            "rpm": "ocaml-apron-0.9.11-11.1097.svn20160801.fc27.i686.rpm", 
            "complexity": {
                "r2aa": {
                    "afCc": null, 
                    "afC": null
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/ocaml/apron/polkaGrid.cmxs"
        }, 
        "usr/lib/ocaml/apron/dllt1pMPQ_caml_so": {
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "__stack_chk_fail", 
                "_ITM_deregisterTMCloneTable", 
                "caml_alloc_custom", 
                "t1p_manager_alloc", 
                "camlidl_apron_custom_manager_ptr", 
                "__cxa_finalize"
            ], 
            "rpm": "ocaml-apron-0.9.11-11.1097.svn20160801.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: 'NoneType' object is not iterable"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/ocaml/apron/dllt1pMPQ_caml.so"
        }, 
        "usr/lib/ocaml/apron/dllapron_caml_so": {
            "report-functions": [
                "ap_interval_free", 
                "ap_abstract1_sat_tcons", 
                "ap_texpr1_extend_environment_with", 
                "ap_abstract0_to_lincons_array", 
                "ap_abstract1_minimize_environment", 
                "__gmon_start__", 
                "ap_abstract1_closure", 
                "ap_environment_dimchange2", 
                "caml_failwith", 
                "ap_abstract1_bottom", 
                "ap_environment_compare", 
                "ap_environment_is_eq", 
                "ap_tcons1_array_extend_environment_with", 
                "ap_abstract0_substitute_linexpr_array", 
                "ap_abstract0_join", 
                "ap_abstract0_bound_linexpr", 
                "camlidl_mpq_ptr_c2ml", 
                "ap_linexpr0_is_integer", 
                "strcmp", 
                "ap_environment_lce", 
                "camlidl_malloc", 
                "ap_linexpr0_get_coeff", 
                "_ITM_deregisterTMCloneTable", 
                "ap_abstract1_meet", 
                "ap_linexpr0_hash", 
                "ap_lincons1_array_extend_environment_with", 
                "ap_texpr0_equal", 
                "camlidl_find_enum", 
                "ap_abstract1_substitute_texpr_array", 
                "caml_deserialize_block_1", 
                "camlidl_mpfr_ptr_ml2c", 
                "caml_modify", 
                "ap_lincons1_coeffref", 
                "ap_disjunction_manager_alloc", 
                "ap_interval_array_free", 
                "camlidl_malloc_string", 
                "ap_linexpr0_minimize", 
                "__gmpq_init", 
                "ap_abstract1_forget_array", 
                "ap_policy_manager_free", 
                "ap_abstract0_to_box", 
                "ap_texpr0_binop", 
                "ap_abstract1_bound_variable", 
                "ap_abstract1_assign_linexpr_array", 
                "mpfr_set4", 
                "ap_generator1_array_extend_environment", 
                "ap_abstract1_widening", 
                "ap_abstract0_is_leq", 
                "ap_abstract0_policy_meet_apply", 
                "free", 
                "ap_abstract0_policy_meet_array_improve", 
                "ap_policy_sprint", 
                "ap_abstract1_add_ray_array", 
                "ap_environment_hash", 
                "ap_manager_set_funopt", 
                "ap_abstract0_to_generator_array", 
                "ap_abstract0_policy_meet_lincons_array_apply", 
                "ap_disjunction_compose", 
                "ap_environment_alloc", 
                "ap_abstract1_unify", 
                "__fprintf_chk", 
                "ap_abstract1_substitute_linexpr_array", 
                "ap_abstract0_is_bottom", 
                "ap_dimchange2_clear", 
                "ap_texpr0_is_interval_cst", 
                "ap_linexpr0_compare", 
                "__snprintf_chk", 
                "ap_abstract1_meet_tcons_array", 
                "ap_abstract1_bound_linexpr", 
                "ap_abstract1_policy_meet_improve", 
                "caml_raise_with_arg", 
                "ap_abstract0_assign_texpr_array", 
                "ap_texpr0_is_interval_polyfrac", 
                "ap_abstract0_of_box", 
                "ap_abstract0_policy_meet_tcons_array_apply", 
                "ap_linexpr1_get_coeff", 
                "ap_lincons1_array_extend_environment", 
                "camlidl_mpfr_ptr_c2ml", 
                "ap_texpr0_is_interval_polynomial", 
                "ap_abstract1_policy_meet_array_apply", 
                "ap_abstract0_is_top", 
                "ap_linexpr0_alloc", 
                "ap_abstract0_add_ray_array", 
                "ap_dimchange_init", 
                "ap_texpr0_is_interval_linear", 
                "ap_abstract0_permute_dimensions", 
                "ap_abstract0_join_array", 
                "ap_policy_copy", 
                "caml_copy_string", 
                "ap_abstract1_fold", 
                "ap_abstract1_sat_lincons", 
                "caml_alloc_custom", 
                "ap_texpr0_is_scalar", 
                "ap_texpr0_cst", 
                "ap_scalar_free", 
                "ap_disjunction_decompose", 
                "ap_lincons1_extend_environment", 
                "ap_abstract0_deserialize_raw", 
                "ap_manager_free", 
                "ap_manager_get_flag_exact", 
                "ap_abstract0_meet_lincons_array", 
                "ap_abstract0_remove_dimensions", 
                "ap_manager_get_flag_best", 
                "ap_abstract0_meet", 
                "ap_abstract1_policy_meet_tcons_array_apply", 
                "caml_callback2", 
                "ap_environment_dimchange", 
                "ap_abstract1_rename_array", 
                "caml_register_custom_operations", 
                "caml_copy_double", 
                "ap_abstract1_policy_meet_lincons_array_apply", 
                "ap_abstract0_canonicalize", 
                "ap_generator1_extend_environment_with", 
                "ap_coeff_clear", 
                "ap_texpr1_unop", 
                "ap_texpr1_copy", 
                "ap_abstract0_serialize_raw", 
                "ap_abstract0_policy_meet_tcons_array_improve", 
                "ap_abstract0_substitute_texpr_array", 
                "ap_texpr0_free", 
                "ap_abstract0_assign_linexpr_array", 
                "ap_abstract1_top", 
                "ap_abstract0_minimize", 
                "ap_abstract0_fdump", 
                "ap_abstract0_is_dimension_unconstrained", 
                "ap_generator1_array_extend_environment_with", 
                "ap_environment_remove", 
                "ap_abstract1_join_array", 
                "ap_abstract1_policy_meet_lincons_array_improve", 
                "ap_abstract0_fold", 
                "__stack_chk_fail", 
                "caml_local_roots", 
                "ap_abstract0_to_tcons_array", 
                "ap_policy_hash", 
                "ap_abstract1_is_leq", 
                "ap_texpr0_unop", 
                "ap_abstract1_is_variable_unconstrained", 
                "ap_abstract0_copy", 
                "ap_manager_get_library", 
                "ap_abstract0_is_eq", 
                "ap_tcons1_extend_environment", 
                "ap_abstract0_sat_lincons", 
                "ap_abstract0_bound_dimension", 
                "_ITM_registerTMCloneTable", 
                "ap_coeff_init_set", 
                "ap_texpr0_copy", 
                "ap_abstract0_bottom", 
                "caml_serialize_block_1", 
                "ap_abstract1_join", 
                "ap_abstract0_policy_meet_lincons_array_improve", 
                "strlen", 
                "ap_generator1_coeffref", 
                "ap_abstract1_fdump", 
                "camlidl_mpq_ptr_ml2c", 
                "ap_abstract1_policy_meet_apply", 
                "ap_abstract0_policy_meet_improve", 
                "ap_dimchange2_free", 
                "ap_texpr0_dim", 
                "ap_disjunction_to_lincons0_set", 
                "caml_alloc", 
                "abort", 
                "ap_manager_get_funopt", 
                "ap_abstract0_add_dimensions", 
                "ap_coeff_set", 
                "fflush", 
                "ap_abstract0_sat_tcons", 
                "ap_coeff_init", 
                "ap_environment_free2", 
                "camlidl_free", 
                "ap_environment_rename", 
                "__cxa_finalize", 
                "ap_generator1_extend_environment", 
                "ap_manager_get_version", 
                "__gmpq_set", 
                "ap_abstract1_is_eq", 
                "ap_policy_fprint", 
                "ap_linexpr0_coeffref", 
                "ap_texpr1_extend_environment", 
                "mpfr_init2", 
                "ap_abstract0_meet_array", 
                "ap_linexpr0_free", 
                "ap_texpr1_binop", 
                "ap_abstract0_top", 
                "ap_abstract1_change_environment", 
                "caml_serialize_int_8", 
                "ap_abstract0_approximate", 
                "caml_deserialize_uint_8", 
                "ap_lincons1_make_unsat", 
                "ap_linexpr1_extend_environment", 
                "ap_tcons1_array_extend_environment", 
                "ap_abstract1_assign_texpr_array", 
                "ap_abstract0_widening", 
                "ap_abstract0_size", 
                "ap_policy_free", 
                "ap_abstract0_widening_threshold", 
                "ap_texpr1_cst", 
                "ap_abstract0_forget_array", 
                "ap_tcons1_extend_environment_with", 
                "ap_abstract0_bound_texpr", 
                "ap_abstract0_hash", 
                "ap_abstract1_meet_lincons_array", 
                "ap_abstract1_of_box", 
                "ap_lincons0_is_unsat", 
                "ap_abstract0_apply_dimchange2", 
                "ap_abstract1_widening_threshold", 
                "ap_abstract1_bound_texpr", 
                "ap_linexpr1_coeffref", 
                "ap_texpr0_from_linexpr0", 
                "caml_invalid_argument", 
                "ap_policy_equal", 
                "ap_abstract0_closure", 
                "ap_abstract0_dimension", 
                "ap_environment_dim_of_var", 
                "caml_named_value", 
                "ap_texpr0_hash", 
                "ap_abstract1_policy_meet_tcons_array_improve", 
                "ap_funopt_init", 
                "ap_lincons1_get_coeff", 
                "ap_abstract0_meet_tcons_array", 
                "ap_abstract0_sat_interval", 
                "ap_linexpr0_copy", 
                "caml_alloc_small", 
                "ap_abstract0_free", 
                "ap_abstract1_sat_interval", 
                "ap_abstract0_expand", 
                "ap_manager_set_abort_if_exception", 
                "ap_abstract1_policy_meet_array_improve", 
                "ap_abstract1_meet_array", 
                "ap_lincons1_extend_environment_with", 
                "ap_abstract1_expand", 
                "ap_abstract0_policy_meet_array_apply", 
                "ap_linexpr1_extend_environment_with", 
                "ap_environment_add", 
                "ap_linexpr0_is_real", 
                "malloc"
            ], 
            "rpm": "ocaml-apron-0.9.11-11.1097.svn20160801.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: 'NoneType' object is not iterable"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/ocaml/apron/dllapron_caml.so"
        }, 
        "usr/lib/ocaml/apron/dllboxMPFR_caml_so": {
            "report-functions": [
                "__stack_chk_fail", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "camlidl_apron_custom_policy_manager_ptr", 
                "box_policy_manager_alloc", 
                "_ITM_registerTMCloneTable", 
                "camlidl_apron_custom_manager_ptr", 
                "__cxa_finalize", 
                "camlidl_free", 
                "box_manager_alloc"
            ], 
            "rpm": "ocaml-apron-0.9.11-11.1097.svn20160801.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: 'NoneType' object is not iterable"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/ocaml/apron/dllboxMPFR_caml.so"
        }, 
        "usr/lib/ocaml/apron/boxMPFR_cmxs": {
            "report-functions": [
                "box_manager_alloc", 
                "caml_string_compare", 
                "camlApron__Abstract0__21", 
                "camlList__rev_append_1236", 
                "camlidl_free", 
                "camlApron", 
                "camlidl_apron_custom_policy_manager_ptr", 
                "camlidl_var_ap_var_to_string", 
                "camlidl_policy_ap_policy_manager", 
                "camlArray__of_list_1294", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "camlApron__Abstract0__10", 
                "box_policy_manager_alloc", 
                "__stack_chk_fail", 
                "camlApron__Abstract0__16", 
                "camlidl_policy_ap_policy_manager_get_manager", 
                "camlApron__Abstract0__print_array_inner_1702", 
                "__cxa_finalize", 
                "caml_young_ptr", 
                "caml_ml_array_bound_error", 
                "_ITM_deregisterTMCloneTable", 
                "camlPervasives", 
                "camlidl_abstract0_ap_abstract0_manager", 
                "caml_call_gc", 
                "caml_alloc_custom", 
                "caml_allocN", 
                "camlidl_environment_ap_environment_var_of_dim", 
                "ap_manager_set_abort_if_exception", 
                "camlidl_apron_custom_manager_ptr", 
                "camlidl_manager_ap_manager_get_library", 
                "caml_young_limit", 
                "camlPervasives__failwith_1005", 
                "camlFormat__fprintf_1894"
            ], 
            "rpm": "ocaml-apron-0.9.11-11.1097.svn20160801.fc27.i686.rpm", 
            "complexity": {
                "r2aa": {
                    "afCc": null, 
                    "afC": null
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/ocaml/apron/boxMPFR.cmxs"
        }, 
        "usr/lib/ocaml/apron/polkaMPQ_d_cmxs": {
            "report-functions": [
                "pk_set_approximate_max_coeff_size", 
                "camlidl_apron_custom_manager_ptr", 
                "camlPervasives__failwith_1005", 
                "caml_exception_pointer", 
                "_ITM_deregisterTMCloneTable", 
                "caml_alloc", 
                "caml_string_compare", 
                "caml_allocN", 
                "_ITM_registerTMCloneTable", 
                "pk_get_max_coeff_size", 
                "caml_exn_Invalid_argument", 
                "pk_manager_alloc", 
                "__gmon_start__", 
                "camlidl_free", 
                "camlidl_abstract0_ap_abstract0_manager", 
                "pkeq_manager_alloc", 
                "camlidl_manager_ap_manager_get_library", 
                "ap_manager_set_abort_if_exception", 
                "caml_alloc_custom", 
                "camlBytes__sub_1234", 
                "pk_get_approximate_max_coeff_size", 
                "__stack_chk_fail", 
                "pk_set_max_coeff_size", 
                "caml_c_call"
            ], 
            "rpm": "ocaml-apron-0.9.11-11.1097.svn20160801.fc27.i686.rpm", 
            "complexity": {
                "r2aa": {
                    "afCc": null, 
                    "afC": null
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/ocaml/apron/polkaMPQ.d.cmxs"
        }, 
        "usr/lib/ocaml/apron/dlloctMPQ_caml_so": {
            "report-functions": [
                "oct_manager_alloc", 
                "ap_abstract0_oct_of_generator_array", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "__stack_chk_fail", 
                "ap_abstract0_oct_narrowing", 
                "camlidl_apron_heap", 
                "ap_abstract0_oct_widening_thresholds", 
                "caml_alloc_custom", 
                "camlidl_apron_custom_abstract0_ptr", 
                "_ITM_registerTMCloneTable", 
                "camlidl_c2ml_manager_struct_ap_exclog_t", 
                "caml_raise_with_arg", 
                "ap_abstract0_oct_add_epsilon", 
                "caml_alloc", 
                "camlidl_ml2c_scalar_ap_scalar_ptr", 
                "__gmon_start__", 
                "camlidl_ml2c_scalar_struct_ap_scalar_array_t", 
                "camlidl_free", 
                "caml_named_value", 
                "camlidl_apron_custom_manager_ptr", 
                "ap_abstract0_size"
            ], 
            "rpm": "ocaml-apron-0.9.11-11.1097.svn20160801.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: 'NoneType' object is not iterable"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/ocaml/apron/dlloctMPQ_caml.so"
        }, 
        "usr/lib/ocaml/apron/dllboxMPQ_caml_so": {
            "report-functions": [
                "__stack_chk_fail", 
                "__cxa_finalize", 
                "camlidl_apron_custom_policy_manager_ptr", 
                "box_manager_alloc", 
                "__gmon_start__", 
                "ap_manager_set_abort_if_exception", 
                "camlidl_free", 
                "camlidl_apron_custom_manager_ptr", 
                "caml_alloc_custom", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "ocaml-apron-0.9.11-11.1097.svn20160801.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: 'NoneType' object is not iterable"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/ocaml/apron/dllboxMPQ_caml.so"
        }, 
        "usr/lib/ocaml/apron/apron_cmxs": {
            "report-functions": [
                "ap_tcons1_array_extend_environment", 
                "caml_equal", 
                "ap_policy_manager_free", 
                "ap_abstract1_sat_tcons", 
                "ap_linexpr0_compare", 
                "ap_texpr0_is_interval_polyfrac", 
                "mpfr_init2", 
                "ap_abstract1_forget_array", 
                "ap_policy_equal", 
                "caml_raise_with_arg", 
                "ap_abstract0_substitute_texpr_array", 
                "camlMpfr__1", 
                "ap_abstract0_widening_threshold", 
                "ap_abstract0_apply_dimchange2", 
                "ap_abstract1_join", 
                "ap_lincons1_extend_environment", 
                "ap_abstract0_policy_meet_improve", 
                "caml_local_roots", 
                "ap_abstract1_widening", 
                "ap_abstract1_add_ray_array", 
                "ap_abstract0_substitute_linexpr_array", 
                "caml_string_equal", 
                "caml_alloc_small", 
                "camlidl_mpz_mpz_init_set_si", 
                "camlidl_mpq_mpq_equal", 
                "__gmpq_set", 
                "camlParsing", 
                "camlidl_mpfr_mpfr_init2", 
                "caml_young_ptr", 
                "ap_abstract0_to_tcons_array", 
                "ap_texpr0_equal", 
                "camlidl_mpq_mpq_sgn", 
                "ap_abstract0_assign_texpr_array", 
                "ap_abstract0_policy_meet_lincons_array_apply", 
                "ap_generator1_extend_environment", 
                "ap_abstract1_policy_meet_array_improve", 
                "camlList__stable_sort_1482", 
                "ap_generator1_get_coeff", 
                "ap_abstract1_rename_array", 
                "ap_texpr1_extend_environment", 
                "ap_environment_dimchange2", 
                "camlidl_mpfr_mpfr_inf_p", 
                "caml_fresh_oo_id", 
                "ap_environment_free2", 
                "camlidl_malloc_string", 
                "ap_abstract0_closure", 
                "ap_funopt_init", 
                "ap_texpr1_cst", 
                "camlPervasives", 
                "ap_texpr0_hash", 
                "ap_environment_remove", 
                "caml_float_compare_unboxed", 
                "ap_abstract1_meet_tcons_array", 
                "ap_interval_free", 
                "camlArray__iter_1252", 
                "ap_abstract1_policy_meet_improve", 
                "camlFormat__pp_print_char_1512", 
                "ap_policy_dimension", 
                "ap_abstract1_policy_meet_tcons_array_improve", 
                "strlen", 
                "ap_abstract0_add_dimensions", 
                "caml_exception_pointer", 
                "ap_linexpr0_is_integer", 
                "ap_linexpr0_coeffref", 
                "ap_abstract0_policy_meet_array_improve", 
                "ap_scalar_free", 
                "caml_make_array", 
                "ap_dimchange2_free", 
                "camlidl_mpq_mpq__get_str", 
                "ap_abstract0_to_generator_array", 
                "ap_abstract1_policy_meet_tcons_array_apply", 
                "ap_manager_get_funopt", 
                "ap_generator1_extend_environment_with", 
                "ap_abstract0_free", 
                "ap_abstract1_meet_lincons_array", 
                "ap_environment_hash", 
                "__gmon_start__", 
                "ap_generator1_array_extend_environment_with", 
                "ap_interval_array_free", 
                "camlArray__init_1217", 
                "ap_abstract1_fdump", 
                "caml_failwith", 
                "ap_linexpr1_extend_environment", 
                "strcmp", 
                "ap_texpr0_cst", 
                "caml_young_limit", 
                "ap_dimchange_init", 
                "ap_manager_get_flag_best", 
                "camlidl_mpq_mpq_set_d", 
                "ap_texpr0_from_linexpr0", 
                "camlMpfr__2", 
                "camlidl_mpfr_mpfr_set", 
                "camlidl_mpz_mpz_sgn", 
                "abort", 
                "ap_texpr0_is_interval_linear", 
                "camlPervasives__failwith_1005", 
                "ap_manager_get_flag_exact", 
                "camlidl_mpfr_mpfr_cmp", 
                "ap_manager_get_version", 
                "ap_abstract0_bottom", 
                "ap_abstract1_is_eq", 
                "ap_abstract0_add_ray_array", 
                "ap_lincons1_get_coeff", 
                "ap_environment_dimchange", 
                "camlidl_mpfr_mpfr_cmp_si", 
                "ap_texpr0_is_interval_cst", 
                "ap_abstract0_sat_lincons", 
                "ap_linexpr0_minimize", 
                "camlPervasives__string_of_float_1161", 
                "camlFormat__sprintf_1911", 
                "ap_texpr0_dim", 
                "camlBytes__sub_1234", 
                "caml_deserialize_uint_8", 
                "ap_texpr0_free", 
                "ap_abstract0_permute_dimensions", 
                "camlList__iter_1272", 
                "ap_tcons1_array_extend_environment_with", 
                "_ITM_deregisterTMCloneTable", 
                "camlidl_mpz_mpz_init", 
                "ap_abstract0_copy", 
                "ap_disjunction_manager_alloc", 
                "ap_abstract1_unify", 
                "ap_abstract0_widening", 
                "camlidl_mpq_mpq_get_num", 
                "ap_abstract1_bound_linexpr", 
                "ap_abstract0_minimize", 
                "ap_abstract1_policy_meet_lincons_array_improve", 
                "ap_abstract0_policy_meet_apply", 
                "ap_abstract0_fold", 
                "ap_abstract1_join_array", 
                "ap_linexpr1_coeffref", 
                "ap_linexpr0_alloc", 
                "ap_texpr1_copy", 
                "caml_c_call", 
                "ap_abstract0_canonicalize", 
                "camlPervasives__$5e_1117", 
                "ap_environment_compare", 
                "ap_environment_is_eq", 
                "__fprintf_chk", 
                "__stack_chk_fail", 
                "ap_texpr0_binop", 
                "ap_abstract1_fold", 
                "ap_texpr0_is_interval_polynomial", 
                "ap_abstract0_of_box", 
                "ap_abstract1_meet", 
                "caml_deserialize_block_1", 
                "camlParsing__peek_val_1372", 
                "camlidl_mpfr_ptr_ml2c", 
                "camlidl_mpfr_mpfr_get_z_exp", 
                "ap_abstract1_bound_variable", 
                "camlParsing__yyparse_1350", 
                "ap_abstract1_bound_texpr", 
                "caml_string_compare", 
                "camlidl_malloc", 
                "camlidl_free", 
                "ap_policy_free", 
                "ap_abstract1_substitute_texpr_array", 
                "ap_abstract0_meet_tcons_array", 
                "caml_alloc2", 
                "caml_invalid_argument", 
                "ap_abstract0_approximate", 
                "ap_lincons0_is_unsat", 
                "mpfr_set4", 
                "ap_disjunction_decompose", 
                "ap_linexpr0_get_coeff", 
                "ap_texpr1_binop", 
                "ap_abstract0_policy_meet_array_apply", 
                "ap_tcons1_extend_environment_with", 
                "caml_serialize_int_8", 
                "ap_abstract0_deserialize_raw", 
                "ap_texpr0_is_scalar", 
                "ap_dimchange2_clear", 
                "ap_texpr0_copy", 
                "ap_texpr0_unop", 
                "ap_abstract0_to_box", 
                "caml_alloc_custom", 
                "ap_linexpr0_copy", 
                "caml_callback2", 
                "ap_linexpr1_extend_environment_with", 
                "ap_linexpr0_is_real", 
                "camlidl_mpfr_mpfr_sgn", 
                "ap_abstract0_policy_meet_lincons_array_improve", 
                "ap_policy_copy", 
                "ap_abstract1_is_variable_unconstrained", 
                "ap_abstract0_meet", 
                "ap_abstract1_widening_threshold", 
                "ap_policy_fprint", 
                "camlidl_mpq_mpq_cmp", 
                "ap_abstract0_is_eq", 
                "ap_abstract0_is_leq", 
                "ap_abstract0_bound_dimension", 
                "caml_make_vect", 
                "ap_abstract0_sat_interval", 
                "__gmpq_init", 
                "camlMpqf__neg_1298", 
                "camlidl_mpz_mpz_mul_2exp", 
                "ap_abstract1_assign_linexpr_array", 
                "ap_environment_dim_of_var", 
                "camlMpfrf__2", 
                "camlidl_mpq_mpq_init", 
                "ap_abstract0_meet_lincons_array", 
                "camlidl_mpq_ptr_c2ml", 
                "caml_register_custom_operations", 
                "ap_abstract0_assign_linexpr_array", 
                "camlidl_mpq_mpq_cmp_si", 
                "caml_modify", 
                "caml_copy_string", 
                "ap_abstract1_is_leq", 
                "ap_abstract1_policy_meet_lincons_array_apply", 
                "ap_abstract0_policy_meet_tcons_array_improve", 
                "ap_abstract0_size", 
                "ap_abstract1_meet_array", 
                "ap_abstract0_serialize_raw", 
                "ap_coeff_init", 
                "_ITM_registerTMCloneTable", 
                "ap_abstract1_sat_interval", 
                "ap_abstract0_sat_tcons", 
                "ap_policy_sprint", 
                "caml_ml_array_bound_error", 
                "camlidl_mpfr_mpfr_neg", 
                "ap_coeff_set", 
                "ap_abstract0_top", 
                "caml_allocN", 
                "ap_abstract1_expand", 
                "camlMpfr__9", 
                "ap_abstract0_bound_texpr", 
                "ap_policy_hash", 
                "camlidl_mpq_mpq_set_den", 
                "ap_abstract1_policy_meet_array_apply", 
                "caml_serialize_block_1", 
                "fflush", 
                "ap_texpr1_unop", 
                "caml_float_of_string", 
                "camlidl_mpfr_mpfr__get_str", 
                "caml_copy_double", 
                "ap_abstract0_is_bottom", 
                "ap_abstract1_change_environment", 
                "ap_abstract0_fdump", 
                "ap_abstract0_bound_linexpr", 
                "caml_obj_dup", 
                "camlFormat__fprintf_1894", 
                "ap_linexpr0_free", 
                "ap_abstract0_remove_dimensions", 
                "ap_abstract0_join_array", 
                "camlLexing__from_string_1266", 
                "ap_environment_lce", 
                "ap_generator1_coeffref", 
                "caml_alloc", 
                "ap_lincons1_extend_environment_with", 
                "__snprintf_chk", 
                "camlidl_mpq_mpq_set", 
                "camlidl_find_enum", 
                "camlidl_mpq_mpq__set_str", 
                "camlCallback__register_exception_1265", 
                "camlidl_mpfr_ptr_c2ml", 
                "malloc", 
                "ap_lincons1_array_extend_environment", 
                "ap_abstract0_join", 
                "caml_call_gc", 
                "ap_abstract0_expand", 
                "ap_abstract0_to_lincons_array", 
                "ap_generator1_array_extend_environment", 
                "ap_abstract1_closure", 
                "ap_disjunction_to_lincons0_set", 
                "ap_environment_alloc", 
                "ap_disjunction_compose", 
                "ap_abstract1_bottom", 
                "caml_named_value", 
                "camlidl_mpq_mpq_get_den", 
                "camlLexing__engine_1237", 
                "ap_abstract1_minimize_environment", 
                "caml_extra_params", 
                "ap_linexpr1_get_coeff", 
                "__cxa_finalize", 
                "ap_abstract0_is_top", 
                "ap_abstract1_sat_lincons", 
                "ap_manager_get_library", 
                "camlFormat__pp_print_string_1500", 
                "ap_tcons1_extend_environment", 
                "camlidl_mpq_mpq_set_num", 
                "ap_abstract0_hash", 
                "ap_linexpr0_hash", 
                "ap_abstract0_policy_meet_tcons_array_apply", 
                "ap_texpr1_extend_environment_with", 
                "camlidl_mpq_ptr_ml2c", 
                "ap_manager_set_abort_if_exception", 
                "ap_coeff_clear", 
                "ap_abstract0_meet_array", 
                "ap_manager_free", 
                "ap_abstract1_top", 
                "camlidl_mpfr_mpfr_get_prec", 
                "ap_abstract0_forget_array", 
                "ap_abstract0_dimension", 
                "camlList__length_aux_1204", 
                "ap_environment_rename", 
                "ap_abstract1_of_box", 
                "ap_manager_set_funopt", 
                "ap_environment_add", 
                "ap_lincons1_array_extend_environment_with", 
                "ap_coeff_init_set", 
                "ap_abstract1_substitute_linexpr_array", 
                "camlidl_mpq_mpq_canonicalize", 
                "ap_lincons1_make_unsat", 
                "ap_abstract0_is_dimension_unconstrained", 
                "camlMpfr__13", 
                "ap_abstract1_policy_meet_apply", 
                "free", 
                "ap_abstract1_assign_texpr_array", 
                "ap_lincons1_coeffref"
            ], 
            "rpm": "ocaml-apron-0.9.11-11.1097.svn20160801.fc27.i686.rpm", 
            "complexity": {
                "r2aa": {
                    "afCc": null, 
                    "afC": null
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/ocaml/apron/apron.cmxs"
        }, 
        "usr/lib/ocaml/apron/polkaRll_cmxs": {
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable", 
                "caml_allocN", 
                "__cxa_finalize", 
                "pk_get_max_coeff_size", 
                "pk_set_max_coeff_size", 
                "pkeq_manager_alloc", 
                "caml_exception_pointer", 
                "ap_manager_set_abort_if_exception", 
                "caml_c_call", 
                "camlidl_abstract0_ap_abstract0_manager", 
                "caml_exn_Invalid_argument", 
                "camlidl_manager_ap_manager_get_library", 
                "caml_alloc_custom", 
                "pk_manager_alloc", 
                "camlBytes__sub_1234", 
                "camlPervasives__failwith_1005", 
                "__gmon_start__", 
                "camlidl_apron_custom_manager_ptr", 
                "caml_alloc", 
                "caml_string_compare", 
                "pk_get_approximate_max_coeff_size", 
                "pk_set_approximate_max_coeff_size"
            ], 
            "rpm": "ocaml-apron-0.9.11-11.1097.svn20160801.fc27.i686.rpm", 
            "complexity": {
                "r2aa": {
                    "afCc": null, 
                    "afC": null
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/ocaml/apron/polkaRll.cmxs"
        }, 
        "usr/lib/ocaml/apron/boxD_cmxs": {
            "report-functions": [
                "caml_young_limit", 
                "camlApron__Abstract0__21", 
                "camlidl_free", 
                "__gmon_start__", 
                "camlidl_manager_ap_manager_get_library", 
                "caml_alloc_custom", 
                "__cxa_finalize", 
                "camlList__rev_append_1236", 
                "box_policy_manager_alloc", 
                "camlidl_var_ap_var_to_string", 
                "caml_ml_array_bound_error", 
                "camlArray__of_list_1294", 
                "camlidl_policy_ap_policy_to_string", 
                "caml_allocN", 
                "camlApron", 
                "box_manager_alloc", 
                "caml_call_gc", 
                "camlidl_policy_ap_policy_manager_get_manager", 
                "caml_young_ptr", 
                "ap_manager_set_abort_if_exception", 
                "_ITM_deregisterTMCloneTable", 
                "camlApron__Abstract0__print_array_inner_1702", 
                "_ITM_registerTMCloneTable", 
                "camlApron__Abstract0__16", 
                "camlPervasives", 
                "camlidl_apron_custom_policy_manager_ptr", 
                "caml_c_call", 
                "camlidl_abstract0_ap_abstract0_manager", 
                "camlidl_apron_custom_manager_ptr", 
                "camlApron__Abstract0__10", 
                "caml_string_compare", 
                "camlPervasives__failwith_1005", 
                "__stack_chk_fail", 
                "camlidl_environment_ap_environment_var_of_dim"
            ], 
            "rpm": "ocaml-apron-0.9.11-11.1097.svn20160801.fc27.i686.rpm", 
            "complexity": {
                "r2aa": {
                    "afCc": null, 
                    "afC": null
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/ocaml/apron/boxD.cmxs"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " ocaml-apron", 
            "License": " LGPLv2+ and GPLv2+", 
            "URL": " http://apron.cri.ensmp.fr/library/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-32.phx2.fedoraproject.org", 
            "Description": "\nOcaml interface to the APRON library.\n", 
            "Build Date": " Tue 08 Aug 2017 11:32:00 AM EDT", 
            "Source RPM": " apron-0.9.11-11.1097.svn20160801.fc27.src.rpm", 
            "Version": " 0.9.11", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Wed 09 Aug 2017 09:36:45 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 11.1097.svn20160801.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Ocaml interface to APRON", 
            "Size": " 2724745"
        }
    }
}