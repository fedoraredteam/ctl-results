{
    "results": {
        "usr/lib64/libopencsg_so_1_4_2": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/libopencsg.so.1.4.2", 
            "complexity": {
                "r2aa": {
                    "afCc": null, 
                    "afC": null
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "glFrontFace", 
                "glPopMatrix", 
                "glCullFace", 
                "glXGetCurrentContext", 
                "glAlphaFunc", 
                "glEnableClientState", 
                "glXCreateContext", 
                "glDisableClientState", 
                "glClearStencil", 
                "glVertexPointer", 
                "glDisable", 
                "_Znam", 
                "glPixelStorei", 
                "memset", 
                "glClear", 
                "glStencilMask", 
                "glColorMask", 
                "glDeleteTextures", 
                "glPopAttrib", 
                "glStencilFunc", 
                "glDepthRange", 
                "glTexGeni", 
                "_ZdaPv", 
                "__vsnprintf_chk", 
                "glBindTexture", 
                "glDepthMask", 
                "glClearDepth", 
                "_ZSt24__throw_out_of_range_fmtPKcz", 
                "_ZSt20__throw_length_errorPKc", 
                "glGetFloatv", 
                "_ZSt17__throw_bad_allocv", 
                "__cxa_throw_bad_array_new_length", 
                "glReadPixels", 
                "glTexImage2D", 
                "glClearColor", 
                "glLoadMatrixf", 
                "__fprintf_chk", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm", 
                "glScissor", 
                "glDepthFunc", 
                "_Znwm", 
                "_ITM_registerTMCloneTable", 
                "_Unwind_Resume", 
                "strlen", 
                "glColor3f", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "__cxa_pure_virtual", 
                "glXMakeCurrent", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc", 
                "__gxx_personality_v0", 
                "memmove", 
                "glRasterPos2i", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcmm", 
                "glLoadIdentity", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "glTexEnvi", 
                "glGetIntegerv", 
                "fputs", 
                "__cxa_finalize", 
                "__gmon_start__", 
                "_ZdlPv", 
                "__printf_chk", 
                "_ITM_deregisterTMCloneTable", 
                "glPushMatrix", 
                "glTexGenfv", 
                "glColor4ubv", 
                "glMultMatrixf", 
                "glCopyTexSubImage2D", 
                "_ZSt19__throw_logic_errorPKc", 
                "glXGetCurrentDrawable", 
                "glColor4ub", 
                "__cxa_atexit", 
                "glTexParameteri", 
                "glDrawArrays", 
                "memcpy", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcmm", 
                "glStencilOp", 
                "__cxa_guard_acquire", 
                "glIsEnabled", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcmm", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "strtol", 
                "__stack_chk_fail", 
                "glMatrixMode", 
                "glDrawPixels", 
                "_ZdlPvm", 
                "fwrite", 
                "glEnable", 
                "glPushAttrib", 
                "_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_", 
                "glGenTextures", 
                "XFree", 
                "__cxa_guard_release"
            ], 
            "rpm": "opencsg-1.4.2-5.fc27.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " System Environment/Libraries", 
            "Name": " opencsg", 
            "License": " GPLv2 with exceptions", 
            "URL": " http://www.opencsg.org/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-28.phx2.fedoraproject.org", 
            "Description": "\nOpenCSG is a library that does image-based CSG rendering using OpenGL.\n\nCSG is short for Constructive Solid Geometry and denotes an approach to model\ncomplex 3D-shapes using simpler ones. I.e., two shapes can be combined by\ntaking the union of them, by intersecting them, or by subtracting one shape\nof the other. The most basic shapes, which are not result of such a CSG\noperation, are called primitives. Primitives must be solid, i.e., they must\nhave a clearly defined interior and exterior. By construction, a CSG shape is\nalso solid then.\n\nImage-based CSG rendering (also z-buffer CSG rendering) is a term that denotes\nalgorithms for rendering CSG shapes without an explicit calculation of the\ngeometric boundary of a CSG shape. Such algorithms use frame-buffer settings\nof the graphics hardware, e.g., the depth and stencil buffer, to compose CSG\nshapes. OpenCSG implements a variety of those algorithms, namely the\nGoldfeather algorithm and the SCS algorithm, both of them in several variants.\n", 
            "Build Date": " Fri 04 Aug 2017 02:07:36 AM EDT", 
            "Source RPM": " opencsg-1.4.2-5.fc27.src.rpm", 
            "Version": " 1.4.2", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Fri 04 Aug 2017 09:55:27 PM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 5.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Library for Constructive Solid Geometry using OpenGL", 
            "Size": " 337562"
        }
    }
}