{
    "results": {
        "usr/bin/XnSensorServer": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/XnSensorServer", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "XnDDKShutdown", 
                "xnLogSetOutputFolder", 
                "xnGetStatusString", 
                "XnSensorServerRun", 
                "puts", 
                "XnFormatsInitFromINIFile", 
                "__gmon_start__", 
                "XnSensorServerGetGlobalConfigFile", 
                "__libc_start_main"
            ], 
            "rpm": "openni-primesense-5.1.6.6-9.fc27.x86_64.rpm"
        }, 
        "usr/lib64/libXnCore_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/libXnCore.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__stack_chk_fail", 
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable", 
                "xnOSReadFile", 
                "__gxx_personality_v0", 
                "_ITM_deregisterTMCloneTable", 
                "xnOSTellFile64", 
                "xnOSReceiveNetworkBuffer", 
                "xnProfilingInitFromINI", 
                "xnOSMemCopy", 
                "xnOSWriteFile", 
                "xnOSShutdownNetwork", 
                "xnOSCloseFile", 
                "_ZdlPvm", 
                "xnOSInit", 
                "xnOSCallocAligned", 
                "xnLogClose", 
                "xnOSFreeAligned", 
                "xnLogInitSystem", 
                "xnLogInitFromINIFile", 
                "xnOSShutdown", 
                "xnProfilingShutdown", 
                "xnGetStatusString", 
                "xnOSSeekFile64", 
                "xnLogWrite", 
                "xnOSSendNetworkBuffer"
            ], 
            "rpm": "openni-primesense-5.1.6.6-9.fc27.x86_64.rpm"
        }, 
        "usr/lib64/libXnFormats_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/libXnFormats.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__longjmp_chk", 
                "xnRegisterErrorCodeMessages", 
                "jpeg_std_error", 
                "jpeg_write_scanlines", 
                "jpeg_CreateDecompress", 
                "_ITM_deregisterTMCloneTable", 
                "jpeg_CreateCompress", 
                "__gxx_personality_v0", 
                "xnLogWrite", 
                "jpeg_resync_to_restart", 
                "jpeg_set_defaults", 
                "__cxa_guard_release", 
                "_ITM_registerTMCloneTable", 
                "jpeg_read_scanlines", 
                "_setjmp", 
                "jpeg_read_header", 
                "jpeg_destroy_decompress", 
                "__stack_chk_fail", 
                "__cxa_guard_acquire", 
                "jpeg_finish_compress", 
                "xnOSMemSet", 
                "_Unwind_Resume", 
                "__cxa_finalize", 
                "jpeg_destroy_compress", 
                "XnInit", 
                "jpeg_start_decompress", 
                "__cxa_guard_abort", 
                "jpeg_start_compress", 
                "jpeg_finish_decompress", 
                "xnOSMemCopy", 
                "XnInitFromINIFile", 
                "__gmon_start__"
            ], 
            "rpm": "openni-primesense-5.1.6.6-9.fc27.x86_64.rpm"
        }, 
        "usr/lib64/libXnDeviceFile_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/libXnDeviceFile.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "XnStreamDataCheckSize", 
                "_ZN12XnDataPacker14ReadNextObjectEPj", 
                "_ZN12XnDeviceBase11CloseStreamEPKc", 
                "xnGetRealProperty", 
                "_ZNK14XnDeviceModule11GetPropertyEPKcPd", 
                "_ZN14XnDeviceStream9SetMirrorEj", 
                "xnLogWrite", 
                "_ZN14XnStreamDevice9SeekFrameEj", 
                "_ZN12XnDeviceBase11SetPropertyEPKcS1_y", 
                "__cxa_pure_virtual", 
                "_ZN14XnIOFileStreamC1EPKcj", 
                "_ZN20XnStreamReaderDevice15HandleNewStreamEPKcS1_PK22XnActualPropertiesHash", 
                "_ZN14XnDeviceStream5WriteEP12XnStreamData", 
                "XnShiftToDepthFree", 
                "XnPropertySetAddStringProperty", 
                "_ZN14XnStreamDevice4SeekEy", 
                "_ITM_registerTMCloneTable", 
                "_ZN12XnDeviceBase24RegisterToPropertyChangeEPKcS1_PFvPvS1_S1_S2_ES2_RS2_", 
                "xnEnumerationErrorsFree", 
                "_ZN12XnDataPacker19ReadStreamDataPropsEP12XnStreamDataP20XnCompressionFormatsPj", 
                "_ZN14XnDeviceModule20UnsafeUpdatePropertyEPKcy", 
                "_ZN12XnDeviceBase10FindModuleEPKcPP14XnDeviceModule", 
                "xnNodeInfoListFree", 
                "XnPropertySetDataAttachModule", 
                "_ZN12XnDeviceBase5WriteEP15XnStreamDataSet", 
                "xnGetCodecID", 
                "_ZN20XnStreamWriterDevice11SetPropertyEPKcS1_RK15XnGeneralBuffer", 
                "XnPropertySetAddIntProperty", 
                "XnBCDepthFormatToOutputFormat", 
                "XnPropertySetDestroy", 
                "_ZN12XnDeviceBase27UnregisterFromNewStreamDataEPv", 
                "xnEncodeData", 
                "xnGetRefContextFromNodeHandle", 
                "xnRemoveNeededNode", 
                "_ZN12XnDataPacker15ReadPropertySetEP13XnPropertySet", 
                "_ZN12XnDeviceBase17DoesPropertyExistEPKcS1_Pj", 
                "_ZN12XnDeviceBase27UnregisterFromStreamsChangeEPv", 
                "_ZN17XnGeneralPropertyC1EPKcP15XnGeneralBufferPFjPS_S1_S1_ES1_", 
                "_ZN12XnDeviceBase14OpenAllStreamsEv", 
                "_ZN19XnActualIntProperty11SetCallbackEPS_yPv", 
                "_ZN14XnDeviceStream5CloseEv", 
                "_ZN20XnStreamWriterDeviceC2EPKcj", 
                "_ZN12XnDeviceBase16CreateStreamDataEPKcPP12XnStreamData", 
                "_ZN19XnActualIntPropertyC1EPKcyS1_", 
                "xnOSCallocAligned", 
                "xnOSMemSet", 
                "_ZN20XnStreamReaderDevice18HandleRealPropertyEPKcS1_d", 
                "strcmp", 
                "_ZN12XnDataPacker14ReadStreamDataEP12XnStreamDataP7XnCodec", 
                "_ITM_deregisterTMCloneTable", 
                "_ZN12XnDeviceBase4TellEPy", 
                "xnOSQueryTimer", 
                "_ZN12XnDeviceBase11SetPropertyEPKcS1_d", 
                "_ZN10XnProperty17UnsafeUpdateValueEPKv", 
                "_ZN20XnStreamWriterStream9WriteImplEP12XnStreamData", 
                "_ZN14XnDeviceStream16CreateStreamDataEPP12XnStreamData", 
                "xnGetWaveOutputMode", 
                "xnGetNodeInfo", 
                "XnPropertySetCreate", 
                "_ZN12XnDeviceBase4ReadEP15XnStreamDataSet", 
                "_ZN20XnStreamWriterDevice11SetPropertyEPKcS1_y", 
                "_ZN14XnDeviceStream15SetOutputFormatE15XnOutputFormats", 
                "_ZN20XnStreamWriterDevice8InitImplEPK14XnDeviceConfig", 
                "_ZN12XnDeviceBase11WriteStreamEP12XnStreamData", 
                "XnPropertySetAddGeneralProperty", 
                "_ZN14XnIOFileStream4TellEPy", 
                "__gxx_personality_v0", 
                "xnGetIntProperty", 
                "_ZN20XnStreamWriterDeviceD2Ev", 
                "xnOSStopTimer", 
                "xnAddNeededNode", 
                "xnForceShutdown", 
                "XnStreamInitCompressImageJ", 
                "_ZN12XnDeviceBase24HasPrimaryStreamAdvancedEP15XnStreamDataSet", 
                "_ZN12XnDeviceBase15CloseAllStreamsEv", 
                "_ZNK14XnDeviceModule11GetPropertyEPKcPc", 
                "xnNodeInfoGetDescription", 
                "_ZN10XnProperty17UpdateSetCallbackEPFjPS_PKvPvES3_", 
                "_ZN12XnDataPacker13WritePropertyEPKcS1_y", 
                "_ZN20XnStreamReaderDevice16HandleStreamDataEP12XnStreamData20XnCompressionFormatsj", 
                "_ZN12XnDeviceBase11SetPropertyEPKcS1_RK15XnGeneralBuffer", 
                "_ZN12XnDeviceBase9SetMirrorEj", 
                "xnOSCreateCriticalSection", 
                "_ZNK20XnStreamWriterStream16CalcRequiredSizeEPj", 
                "XnStreamDataSetCopyToArray", 
                "_ZN12XnDeviceBase16StartTransactionEv", 
                "_ZN14XnDeviceModule11BatchConfigERK22XnActualPropertiesHash", 
                "XnStreamDataCreate", 
                "_ZN12XnDeviceBase11BatchConfigEPK13XnPropertySet", 
                "XnStreamCompressImage24J", 
                "xnContextRegisterForShutdown", 
                "_ZN14XnDeviceModule20UnsafeUpdatePropertyEPKcRK15XnGeneralBuffer", 
                "_ZN10XnProperty17UpdateGetCallbackEPFjPKS_PvS2_ES2_", 
                "xnGetNodeName", 
                "_ZN14XnDeviceModule11SetPropertyEPKcd", 
                "xnOSCalloc", 
                "XnStreamUncompressImageJ", 
                "_ZN26XnStreamDeviceStreamHolderC1EP14XnDeviceStreamj", 
                "xnProductionNodeAddRef", 
                "_ZN20XnStreamReaderDevice20HandleStringPropertyEPKcS1_S1_", 
                "__cxa_atexit", 
                "XnShiftToDepthInit", 
                "_ZN14XnDeviceModule13AddPropertiesEPP10XnPropertyj", 
                "_ZN12XnDeviceBase26ResetLastTimestampAndFrameEv", 
                "_ZN12XnDeviceBase10ReadStreamEP12XnStreamData", 
                "_ZN14XnIOFileStream4FreeEv", 
                "_ZN12XnDeviceBase11GetPropertyEPKcS1_RK15XnGeneralBuffer", 
                "_ZN12XnDeviceBase13CreateStreamsEPK13XnPropertySet", 
                "_ZN20XnStreamWriterStreamD2Ev", 
                "XnStreamFreeUncompressImageJ", 
                "_ZN20XnStreamReaderStream5ResetEv", 
                "xnContextAddRef", 
                "XnStreamDataDestroy", 
                "_ZN12XnDeviceBase4InitEPK14XnDeviceConfig", 
                "_ZN20XnStreamWriterStreamC2EPKcS1_P12XnDataPacker", 
                "_ZN14XnStreamDevice7DestroyEv", 
                "_ZN20XnStreamReaderDevice19DestroyStreamModuleEP20XnDeviceModuleHolder", 
                "_ZNK14XnDeviceModule11GetPropertyEPKcRK15XnGeneralBuffer", 
                "_ZN12XnDeviceBase18LoadConfigFromFileEPKcS1_", 
                "xnContextUnregisterFromShutdown", 
                "XnStreamCompressImage8J", 
                "_ZN12XnDataPacker17ReadStreamRemovedEPc", 
                "xnOSFree", 
                "_ZN14XnDeviceModule20UnsafeUpdatePropertyEPKcd", 
                "_ZN20XnStreamWriterDevice7DestroyEv", 
                "_ZN12XnDeviceBase19GetSupportedStreamsEPPKcPj", 
                "_ZN12XnDeviceBase13DestroyModuleEP20XnDeviceModuleHolder", 
                "_ZN12XnDeviceBase13WaitForStreamEP8_XnEventP14XnDeviceStream", 
                "_ZN14XnIOFileStream4InitEv", 
                "_ZN12XnDeviceBase9TellFrameEPj", 
                "_ZN12XnDeviceBase11GetPropertyEPKcS1_Pc", 
                "XnShiftToDepthUpdate", 
                "_ZN12XnDeviceBase14GetStreamsListER7XnListTIP20XnDeviceModuleHolder29XnLinkedNodeDefaultAllocatorTIS2_EE", 
                "_ZN14XnDeviceStream4ReadEP12XnStreamData", 
                "_ZN12XnDeviceBase15DoesModuleExistEPKcPj", 
                "XnPropertySetClear", 
                "_ZN14XnDeviceModule11SetPropertyEPKcy", 
                "_ZN14XnDeviceStream4FreeEv", 
                "_ZN12XnDeviceBase20WaitForPrimaryStreamEP8_XnEventP15XnStreamDataSet", 
                "xnOSLeaveCriticalSection", 
                "_ZN20XnStreamReaderDevice17HandleIntPropertyEPKcS1_y", 
                "xnOSMemCopy", 
                "_ZN12XnDeviceBase18CreateDeviceModuleEPP20XnDeviceModuleHolder", 
                "xnOSStartHighResTimer", 
                "_ZN14XnDeviceModule17UnsafeBatchConfigERK22XnActualPropertiesHash", 
                "__gmon_start__", 
                "_ZN12XnDeviceBase12CreateModuleEPKcPP20XnDeviceModuleHolder", 
                "_ZN20XnStreamReaderDevice18HandlePackedObjectEj", 
                "_ZN12XnDeviceBase11SetPropertyEPKcS1_S1_", 
                "_ZN7XnCodec31GetCodecIDFromCompressionFormatE20XnCompressionFormats", 
                "XnPropertySetAddModule", 
                "xnOSFreeAligned", 
                "_ZN12XnDeviceBase23RegisterToNewStreamDataEPFvRK24XnNewStreamDataEventArgsPvES3_RS3_", 
                "xnOSStrDup", 
                "XnPropertySetDataDetachModule", 
                "xnProductionNodeRelease", 
                "__stack_chk_fail", 
                "_ZN12XnDataPackerD1Ev", 
                "_ZN20XnStreamWriterDevice13DestroyStreamEPKc", 
                "_ZN12XnDeviceBase20SetHighresTimestampsEj", 
                "_ZN12XnDeviceBase16CreateStreamImplEPKcS1_PK22XnActualPropertiesHash", 
                "xnDecodeData", 
                "xnGetMapOutputMode", 
                "_ZN14XnDeviceStream4InitEv", 
                "_Unwind_Resume", 
                "_ZN12XnDeviceBase11GetPropertyEPKcS1_Py", 
                "_ZN12XnDataPacker4InitEv", 
                "_ZN12XnDataPacker4FreeEv", 
                "_ZN12XnDeviceBase16SetPrimaryStreamEPKc", 
                "__cxa_finalize", 
                "_ZdlPvm", 
                "_ZN12XnDeviceBase17DestroyStreamDataEPP12XnStreamData", 
                "_ZN12XnDeviceBase11GetPropertyEPKcS1_Pd", 
                "__dynamic_cast", 
                "_ZN20XnStreamWriterDevice21GetDefaultCompressionEPKc", 
                "_ZN12XnDeviceBase10OpenStreamEPKc", 
                "_ZN14XnStreamDevice10FindStreamEPKcPP26XnStreamDeviceStreamHolder", 
                "XnStreamFreeCompressImageJ", 
                "_ZN20XnStreamWriterDevice11SetPropertyEPKcS1_S1_", 
                "_ZN20XnStreamReaderStream15ReMarkDataAsNewEv", 
                "XnBCImageFormatToOutputFormat", 
                "_ZSt9terminatev", 
                "xnContextRelease", 
                "_ZN12XnDeviceBase19RollbackTransactionEv", 
                "_ZN12XnDataPacker13ReadNewStreamEPcS0_P13XnPropertySet", 
                "_ZN12XnDeviceBase13DestroyStreamEPKc", 
                "xnGetRefNodeHandleByName", 
                "xnGetDeviceMaxDepth", 
                "_ZN12XnDeviceBase17CommitTransactionEv", 
                "_ZN12XnDeviceBase15GetPropertyTypeEPKcS1_P14XnPropertyType", 
                "_ZN20XnStreamReaderDevice21HandleGeneralPropertyEPKcS1_RK15XnGeneralBuffer", 
                "_ZN14XnDeviceModule20UnsafeUpdatePropertyEPKcS1_", 
                "_Znwm", 
                "xnCreateCodec", 
                "_ZN14XnDeviceStream16NewDataAvailableEyj", 
                "_ZN20XnStreamWriterDevice11WriteStreamEP12XnStreamData", 
                "_ZN12XnDeviceBase28UnregisterFromPropertyChangeEPKcS1_Pv", 
                "_ZN20XnStreamWriterDevice5WriteEP15XnStreamDataSet", 
                "_ZN7XnCodec31GetCompressionFormatFromCodecIDEj", 
                "_ZN14XnDeviceModule11SetPropertyEPKcRK15XnGeneralBuffer", 
                "_ZN12XnDeviceBase14GetStreamNamesEPPKcPj", 
                "_ZN20XnStreamReaderDevice8InitImplEPK14XnDeviceConfig", 
                "_ZN14XnIOFileStream4SeekEy", 
                "xnOSEnterCriticalSection", 
                "_ZN12XnDeviceBase18IsNewDataAvailableEPKcPjPy", 
                "_ZN12XnDeviceBase15OnNewStreamDataEP14XnDeviceStreamyj", 
                "xnOSCloseCriticalSection", 
                "_ZN12XnDataPacker12ReadPropertyEPcS0_S0_", 
                "atan", 
                "_ZN22XnActualPropertiesHash6RemoveEPKc", 
                "XnPropertySetAddRealProperty", 
                "_ZN12XnDeviceBase12CreateStreamEPKcS1_PK13XnPropertySet", 
                "_ZN12XnDeviceBase23RegisterToStreamsChangeEPFvRK34XnStreamCollectionChangedEventArgsPvES3_RS3_", 
                "xnIsTypeDerivedFrom", 
                "XnBCAudioFormatToOutputFormat", 
                "_ZN20XnStreamReaderDevice23ReadNextEventFromStreamEPj", 
                "_ZN12XnDataPacker12ReadPropertyEPcS0_P15XnGeneralBuffer", 
                "xnOSSleep", 
                "_ZN20XnStreamReaderDeviceD2Ev", 
                "_ZN12XnDeviceBase16GetAllPropertiesEP13XnPropertySetjPKc", 
                "xnNodeInfoListAdd", 
                "_ZN12XnDataPacker12ReadPropertyEPcS0_Pd", 
                "_ZN20XnStreamWriterDevice11SetPropertyEPKcS1_d", 
                "xnOSStrCRC32", 
                "_ZN14XnDeviceModule11SetPropertyEPKcS1_", 
                "_ZN20XnStreamWriterDevice12CreateStreamEPKcS1_PK13XnPropertySet", 
                "_ZN20XnStreamReaderDeviceC2EPKcj", 
                "_ZN20XnStreamReaderDevice18CreateStreamModuleEPKcS1_PP20XnDeviceModuleHolder", 
                "_ZN20XnStreamReaderDevice16ReadInitialStateEP13XnPropertySet", 
                "_ZN12XnDataPacker12ReadPropertyEPcS0_Py", 
                "_ZN12XnDataPackerC1EP10XnIOStreamj", 
                "_ZNK14XnDeviceModule11GetPropertyEPKcPy", 
                "XnStreamInitUncompressImageJ", 
                "_ZN10XnPropertyD2Ev"
            ], 
            "rpm": "openni-primesense-5.1.6.6-9.fc27.x86_64.rpm"
        }, 
        "usr/lib64/libXnDeviceSensorV2_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/libXnDeviceSensorV2.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ZN12XnDataPacker17ReadStreamRemovedEPc", 
                "_ZN13XnPixelStream17AddSupportedModesEP12XnCmosPresetj", 
                "_ZN12XnDeviceBase13DestroyModuleEP20XnDeviceModuleHolder", 
                "_ZN20XnStreamReaderDevice21HandleGeneralPropertyEPKcS1_RK15XnGeneralBuffer", 
                "_ZN14XnDeviceModule20UnsafeUpdatePropertyEPKcRK15XnGeneralBuffer", 
                "xnOSCreateNamedEventEx", 
                "xnOSCalloc", 
                "_ZN13XnDepthStreamC2EPKcjtt", 
                "_ZNK14XnDeviceModule16GetAllPropertiesEP13XnPropertySet", 
                "_ZN12XnDeviceBase12CreateStreamEPKcS1_PK13XnPropertySet", 
                "__sprintf_chk", 
                "_ZN20XnStreamReaderDevice16HandleStreamDataEP12XnStreamData20XnCompressionFormatsj", 
                "xnProfilingSectionEnd", 
                "_ZN14XnDeviceStream16NewDataAvailableEyj", 
                "_ZN13XnAudioStream4InitEv", 
                "xnUSBFreeDevicesList", 
                "_ZN12XnDeviceBase24RegisterToPropertyChangeEPKcS1_PFvPvS1_S1_S2_ES2_RS2_", 
                "_ZN19XnActualIntPropertyC1EPKcyS1_", 
                "_ZN12XnDeviceBase7DestroyEv", 
                "_ZN20XnStreamReaderDevice15HandleNewStreamEPKcS1_PK22XnActualPropertiesHash", 
                "xnFPSInit", 
                "__dynamic_cast", 
                "xnNodeInfoGetDescription", 
                "_ZN12XnDeviceBase4InitEPK14XnDeviceConfig", 
                "XnStreamInitUncompressImageJ", 
                "pow", 
                "XnPropertySetRemoveProperty", 
                "_ZN12XnDeviceBase14OpenAllStreamsEv", 
                "_ZN14XnDeviceModuleD2Ev", 
                "xnGetRefContextFromNodeHandle", 
                "_ZN12XnBufferPool6AddRefEP8XnBuffer", 
                "xnLogIsDumpMaskEnabled", 
                "_ZN12XnDeviceBase11SetPropertyEPKcS1_RK15XnGeneralBuffer", 
                "xnUSBSendControl", 
                "xnGetNodeInfo", 
                "_ZN12XnDeviceBase16CreateStreamDataEPKcPP12XnStreamData", 
                "_ZN20XnStreamReaderStream4InitEv", 
                "_ZN12XnDeviceBase16CreateStreamImplEPKcS1_PK22XnActualPropertiesHash", 
                "xnFPSCalc", 
                "_ZN10XnProperty8SetValueEPKv", 
                "xnNodeInfoListGetFirst", 
                "__cxa_pure_virtual", 
                "_ZN20XnFrameBufferManager23MarkWriteBufferAsStableEyPj", 
                "__cxa_atexit", 
                "_ZN19XnActualIntProperty11SetCallbackEPS_yPv", 
                "_ZN12XnDeviceBase4TellEPy", 
                "xnOSGetCurrentProcessID", 
                "xnOSGetTimeStamp", 
                "_ZN12XnDataPacker15ReadPropertySetEP13XnPropertySet", 
                "_ITM_deregisterTMCloneTable", 
                "_ZN12XnDeviceBase9TellFrameEPj", 
                "xnVersionCompare", 
                "_ZN20XnStreamReaderDevice19HandleStreamRemovedEPKc", 
                "xnOSOpenNamedEventEx", 
                "_ZN13XnPixelStream4InitEv", 
                "_ZNK14XnDeviceModule11GetPropertyEPKcPc", 
                "_ZN13XnPixelStream7SetYResEj", 
                "XnStreamDataCreateNoBuffer", 
                "_ZN12XnDataPacker12ReadPropertyEPcS0_Py", 
                "xnFPSFree", 
                "_Znwm", 
                "strtol", 
                "_ZN14XnDeviceStream4ReadEP12XnStreamData", 
                "_ZN23XnActualGeneralPropertyD1Ev", 
                "xnOSInitNetwork", 
                "xnOSSetEvent", 
                "_ZdlPvm", 
                "_ZN20XnDeviceModuleHolderC2EP14XnDeviceModulej", 
                "xnOSMallocAligned", 
                "_ZN20XnStreamReaderStream8ReadImplEP12XnStreamData", 
                "xnEnumerateExistingNodesByType", 
                "XnStreamDataDestroy", 
                "_ZN12XnDataPacker14ReadCustomDataEjPvPj", 
                "_ZN25XnIntPropertySynchronizerC1Ev", 
                "strcpy", 
                "_ZNK14XnDeviceModule11GetPropertyEPKcPy", 
                "_ZN14XnDeviceStream4OpenEv", 
                "xnNodeInfoListGetNext", 
                "XnStreamDataSetCreate", 
                "xnGetIntProperty", 
                "_ZN12XnDeviceBase16SetPrimaryStreamEPKc", 
                "_ZN14XnDeviceModule11AddPropertyEP10XnProperty", 
                "xnOSStrCopy", 
                "_ZN14XnDeviceModule20UnsafeUpdatePropertyEPKcy", 
                "_xnDumpFileWriteBuffer", 
                "_ZNK13XnPixelStream6MirrorEP12XnStreamData", 
                "_ZN20XnDeviceModuleHolder4FreeEv", 
                "_ZN20XnStreamReaderStreamC2EPKcS1_", 
                "_ZN17XnIONetworkStream14SetReadTimeoutEj", 
                "puts", 
                "xnNodeQuerySetName", 
                "xnProfilingIsActive", 
                "xnLogWrite", 
                "_ZN12XnDeviceBase11WriteStreamEP12XnStreamData", 
                "_ZN12XnDeviceBase18CreateDeviceModuleEPP20XnDeviceModuleHolder", 
                "_ZN12XnDeviceBase14GetStreamsListER7XnListTIP20XnDeviceModuleHolder29XnLinkedNodeDefaultAllocatorTIS2_EE", 
                "xnOSMemCopy", 
                "xnUSBGetEndPointMaxPacketSize", 
                "xnNodeQuerySetVendor", 
                "_ZN13XnPixelStream11SetCroppingEPK10XnCropping", 
                "_ZN14XnDeviceModule17UnsafeBatchConfigERK22XnActualPropertiesHash", 
                "_ZN26XnStreamReaderStreamHolderC1EP14XnDeviceStream", 
                "xnOSSaveFile", 
                "_ZN12XnDeviceBase4ReadEP15XnStreamDataSet", 
                "_ZN12XnDeviceBase9SetMirrorEj", 
                "xnUSBInit", 
                "__cxa_throw_bad_array_new_length", 
                "_ZN17XnGeneralPropertyC1EPKcP15XnGeneralBufferPFjPS_S1_S1_ES1_", 
                "xnGetBytesPerPixelForPixelFormat", 
                "_ZN20XnStreamReaderDeviceC2EPKcj", 
                "_ZN8XnBuffer8AllocateEj", 
                "_ZN13XnDepthStream4InitEv", 
                "xnOSOpenSharedMemoryEx", 
                "xnNodeInfoListFree", 
                "xnUSBRegisterToConnectivityEvents", 
                "__printf_chk", 
                "XnPropertySetCloneModule", 
                "_ZN17XnIONetworkStreamC1EP10xnOSSocket", 
                "_ZN12XnDeviceBase20WaitForPrimaryStreamEP8_XnEventP15XnStreamDataSet", 
                "_ZN14XnDeviceStream15SetOutputFormatE15XnOutputFormats", 
                "xnProfilingSectionStart", 
                "_ZN12XnDataPackerD1Ev", 
                "_ZN12XnDataPacker12ReadPropertyEPcS0_Pd", 
                "xnOSAcceptSocket", 
                "xnProductionNodeAddRef", 
                "xnOSListenSocket", 
                "_ZN14XnDeviceModule11SetPropertyEPKcd", 
                "xnUSBUnregisterFromConnectivityEvents", 
                "_ZN13XnFrameStream4FreeEv", 
                "_ZN12XnDeviceBase11GetPropertyEPKcS1_RK15XnGeneralBuffer", 
                "_ZN13XnFrameStream15GetTripleBufferEPP20XnFrameBufferManager", 
                "xnOSCreateNamedMutex", 
                "_ZN12XnDataPacker15WriteCustomDataEjPKvj", 
                "_ZNK14XnDeviceModule11GetPropertyEPKcPP10XnProperty", 
                "xnNodeInfoListGetCurrent", 
                "_ZN13XnDepthStream4FreeEv", 
                "_ZN13XnPixelStream7SetXResEj", 
                "_ZN13XnPixelStream8CropImplEP12XnStreamDataPK10XnCropping", 
                "_ZN10XnProperty17UpdateGetCallbackEPFjPKS_PvS2_ES2_", 
                "XnStreamDataSetGet", 
                "xnNodeInfoListAllocate", 
                "xnOSIsEventSet", 
                "_ZN10XnProperty17UnsafeUpdateValueEPKv", 
                "xnOSReadIntFromINI", 
                "xnUSBWriteEndPoint", 
                "xnOSCreateCriticalSection", 
                "_ZN12XnDataPacker4InitEv", 
                "_ZN13XnFrameStream6SetFPSEj", 
                "xnOSBindSocket", 
                "xnNodeInfoGetInstanceName", 
                "_ZN13XnIntProperty17ReadValueFromFileEPKcS1_", 
                "_ZN12XnDeviceBase19GetSupportedStreamsEPPKcPj", 
                "_ZN12XnDeviceBaseD2Ev", 
                "_ZN12XnDeviceBase8InitImplEPK14XnDeviceConfig", 
                "strlen", 
                "xnLogIsEnabled", 
                "xnUSBOpenDeviceByPath", 
                "_ZN14XnDeviceStream4FreeEv", 
                "_ZN10XnPropertyD2Ev", 
                "xnOSCreateThread", 
                "xnOSGetHighResTimeStamp", 
                "xnContextRegisterForShutdown", 
                "xnProductionNodeRelease", 
                "_ZN13XnPixelStream16ValidateCroppingEPK10XnCropping", 
                "_ZN12XnDataPacker12ReadPropertyEPcS0_P15XnGeneralBuffer", 
                "xnOSUnLockMutex", 
                "_ZN12XnDeviceBase15GetPropertyTypeEPKcS1_P14XnPropertyType", 
                "_ZN12XnDeviceBase17CommitTransactionEv", 
                "_ZN12XnDeviceBase18IsNewDataAvailableEPKcPjPy", 
                "_ZN12XnDataPacker13WritePropertyEPKcS1_S1_", 
                "XnStreamDataSetAdd", 
                "_ZN16XnStringPropertyC1EPKcPcS1_", 
                "_ZNK13XnAudioStream16CalcRequiredSizeEPj", 
                "xnOSEnterCriticalSection", 
                "memset", 
                "xnOSCreateSocket", 
                "_ZN20XnStreamReaderDevice17HandleEndOfStreamEv", 
                "_Znam", 
                "strstr", 
                "xnOSMalloc", 
                "xnOSStrCRC32", 
                "_ZN12XnDeviceBase16StartTransactionEv", 
                "_ZN20XnStreamReaderDevice18HandlePackedObjectEj", 
                "_ZN12XnDeviceBase11BatchConfigEPK13XnPropertySet", 
                "xnDumpFileOpen", 
                "_ZN12XnDeviceBase23RegisterToStreamsChangeEPFvRK34XnStreamCollectionChangedEventArgsPvES3_RS3_", 
                "_ZN12XnDeviceBase27UnregisterFromStreamsChangeEPv", 
                "_ZN12XnDeviceBase15OnNewStreamDataEP14XnDeviceStreamyj", 
                "xnOSConnectSocket", 
                "_ZN20XnDeviceModuleHolderD2Ev", 
                "xnOSCreateSharedMemoryEx", 
                "_ZN22XnActualStringPropertyC1EPKcS1_S1_", 
                "_ZN10XnProperty10UpdateNameEPKcS1_", 
                "_ZN12XnDeviceBase18AddSupportedStreamEPKc", 
                "XnPropertySetAddIntProperty", 
                "_ZN12XnDeviceBase11SetPropertyEPKcS1_S1_", 
                "_ZN20XnStreamReaderDeviceD2Ev", 
                "_ZN12XnDeviceBase14GetStreamNamesEPPKcPj", 
                "XnStreamDataSetCopyToArray", 
                "_ZN12XnDataPacker13WritePropertyEPKcS1_y", 
                "xnEnumerationErrorsFree", 
                "XnPropertySetClear", 
                "_ZN13XnIntPropertyC1EPKcPyS1_", 
                "_ZN20XnStreamReaderDevice23ReadNextEventFromStreamEPj", 
                "_ZSt9terminatev", 
                "_ZN12XnDeviceBase13WaitForStreamEP8_XnEventP14XnDeviceStream", 
                "_ZN12XnDataPacker12ReadPropertyEPcS0_S0_", 
                "xnUSBCloseDevice", 
                "_ZN13XnDepthStream18ValidateDepthValueEt", 
                "strncpy", 
                "xnUSBSetInterface", 
                "_ZN12XnDeviceBase21CreateStreamsFromFileEPKcS1_", 
                "XnStreamDataSetDestroy", 
                "__gxx_personality_v0", 
                "_ZN12XnDataPacker4FreeEv", 
                "_ZN13XnFrameStream24ReallocTripleFrameBufferEv", 
                "xnOSStrCmp", 
                "_ZN12XnDeviceBase16GetAllPropertiesEP13XnPropertySetjPKc", 
                "xnUSBShutdownReadThread", 
                "atan", 
                "xnUSBInitReadThread", 
                "xnContextUnregisterFromShutdown", 
                "_ZN14XnDeviceModule20UnsafeUpdatePropertyEPKcS1_", 
                "_ZNK14XnDeviceModule11GetPropertyEPKcRK15XnGeneralBuffer", 
                "xnUSBReceiveControl", 
                "xnFPSMarkFrame", 
                "_ZN12XnDeviceBase27UnregisterFromNewStreamDataEPv", 
                "xnGetGeneralProperty", 
                "xnOSResetEvent", 
                "_ZN14XnDeviceModule11SetPropertyEPKcS1_", 
                "_ZN12XnDataPacker13WritePropertyEPKcS1_15XnGeneralBuffer", 
                "xnPixelFormatToString", 
                "_ZN13XnPixelStream21ValidateSupportedModeERK12XnCmosPreset", 
                "xnOSFree", 
                "xnContextRelease", 
                "_ZN14XnStreamDevice4SeekEy", 
                "_ZN12XnDeviceBase12CreateModuleEPKcPP20XnDeviceModuleHolder", 
                "_ZN23XnActualGeneralPropertyC1EPKcPvjPFjP17XnGeneralPropertyS1_S1_ES1_", 
                "_ZN20XnDeviceModuleHolder4InitEPK22XnActualPropertiesHash", 
                "_ZN14XnDeviceModule11SetPropertyEPKcRK15XnGeneralBuffer", 
                "_ZN12XnDeviceBase17DestroyStreamDataEPP12XnStreamData", 
                "_ZN13XnDepthStream11SetMinDepthEt", 
                "xnOSCallocAligned", 
                "xnOSCloseSharedMemory", 
                "xnUSBReadEndPoint", 
                "xnOSCreateProcess", 
                "_ZN12XnDeviceBase17DoesPropertyExistEPKcS1_Pj", 
                "_ZN12XnDeviceBase28UnregisterFromPropertyChangeEPKcS1_Pv", 
                "_ZN20XnStreamReaderDevice20HandleStringPropertyEPKcS1_S1_", 
                "_ZN12XnDataPacker14ReadNextObjectEPj", 
                "_ZN17XnStreamingStream16SetReadChunkSizeEj", 
                "_ZN20XnStreamReaderStream16NewDataAvailableEyj", 
                "_ZN12XnDeviceBase23RegisterToNewStreamDataEPFvRK24XnNewStreamDataEventArgsPvES3_RS3_", 
                "_ZN22XnActualPropertiesHash6RemoveEPKc", 
                "_ZN10XnIRStreamC2EPKcj", 
                "_ZN12XnDeviceBase10OpenStreamEPKc", 
                "XnStreamDataSetRemove", 
                "_ZN14XnStreamDevice10FindStreamEPKcPP26XnStreamDeviceStreamHolder", 
                "_ZN12XnDeviceBase11GetPropertyEPKcS1_Py", 
                "_ZN12XnDeviceBase10FindStreamEPKcPP20XnDeviceModuleHolder", 
                "XnDDKGetXYFromResolution", 
                "_ZN14XnDeviceModule11BatchConfigERK22XnActualPropertiesHash", 
                "_ZN12XnBufferPool6DecRefEP8XnBuffer", 
                "_ZN12XnDataPacker18WriteStreamRemovedEPKc", 
                "_ZN13XnAudioStreamC2EPKcj", 
                "_ZN12XnDeviceBase10ReadStreamEP12XnStreamData", 
                "xnOSStrAppend", 
                "__cxa_finalize", 
                "_ZN14XnDeviceModule11SetPropertyEPKcy", 
                "_ZN13XnPixelStream13SetResolutionE13XnResolutions", 
                "xnOSSharedMemoryGetAddress", 
                "xnGetMapOutputMode", 
                "xnOSCreateEvent", 
                "xnNodeQueryAddNeededNode", 
                "_ZN12XnDeviceBase13DestroyStreamEPKc", 
                "_ZN14XnDeviceStream9SetMirrorEj", 
                "_ZN12XnDataPacker14WriteNewStreamEPKcS1_PK13XnPropertySet", 
                "XnPropertySetAddModule", 
                "xnOSEndianSwapUINT16", 
                "_ZN20XnStreamReaderDevice8InitImplEPK14XnDeviceConfig", 
                "_ZN14XnDeviceModule20UnsafeUpdatePropertyEPKcd", 
                "xnNodeQueryFree", 
                "xnOSCloseCriticalSection", 
                "xnNodeInfoListAddNode", 
                "xnForceShutdown", 
                "_ZN12XnDataPackerC1EP10XnIOStreamj", 
                "_ZN12XnDeviceBase10FindModuleEPKcPP14XnDeviceModule", 
                "xnOSWaitEvent", 
                "_ZN12XnDeviceBase11GetPropertyEPKcS1_Pc", 
                "xnOSSleep", 
                "_ZN12XnDeviceBaseC2EPKcj", 
                "_ZN14XnDeviceModule13AddPropertiesEPP10XnPropertyj", 
                "xnOSLockMutex", 
                "_ZN13XnAudioStream19SetNumberOfChannelsEj", 
                "_ZN12XnDeviceBase15CloseAllStreamsEv", 
                "_ZN12XnDeviceBase5WriteEP15XnStreamDataSet", 
                "_Unwind_Resume", 
                "xnOSWaitForCondition", 
                "_ZN14XnDeviceModule18LoadConfigFromFileEPKcS1_", 
                "_ZN10XnProperty17UpdateSetCallbackEPFjPS_PKvPvES3_", 
                "_ZN13XnFrameStream16CreateStreamDataEPP12XnStreamData", 
                "xnOSFreeAligned", 
                "xnNodeInfoGetRefHandle", 
                "xnOSCloseMutex", 
                "xnOSCreateNamedMutexEx", 
                "_ZN13XnImageStreamC2EPKcj", 
                "xnNodeQuerySetMinVersion", 
                "_ZN25XnIntPropertySynchronizerD1Ev", 
                "xnOSCloseEvent", 
                "_ZN12XnDataPacker16WritePropertySetEPK13XnPropertySet", 
                "_ZN13XnDepthStream11SetMaxDepthEt", 
                "xnNodeInfoGetCreationInfo", 
                "XnStreamUncompressImageJ", 
                "xnUSBCloseEndPoint", 
                "xnOSCloseSocket", 
                "_ZdaPv", 
                "_xnDumpFileClose", 
                "xnGetStatusString", 
                "_ITM_registerTMCloneTable", 
                "_ZN12XnDeviceBase20SetHighresTimestampsEj", 
                "xnContextAddRef", 
                "_ZN26XnShiftToDepthStreamHelperD1Ev", 
                "_ZN14XnDeviceStream16CreateStreamDataEPP12XnStreamData", 
                "xnIsTypeDerivedFrom", 
                "xnLogGetFileName", 
                "__gmon_start__", 
                "xnOSStrFormat", 
                "_ZN13XnAudioStream13SetSampleRateE12XnSampleRate", 
                "_ZN12XnDeviceBase19RollbackTransactionEv", 
                "_ZN12XnDeviceBase11SetPropertyEPKcS1_d", 
                "_ZNK20XnStreamReaderStream16CalcRequiredSizeEPj", 
                "_ZN14XnStreamDevice9SeekFrameEj", 
                "xnEnumerateProductionTrees", 
                "_ZN20XnStreamReaderDevice17HandleIntPropertyEPKcS1_y", 
                "xnNodeQueryFilterList", 
                "_ZN14XnDeviceStream5WriteEP12XnStreamData", 
                "_ZN14XnStreamDevice7DestroyEv", 
                "__strcpy_chk", 
                "xnUSBOpenEndPoint", 
                "_ZN12XnDeviceBase11GetPropertyEPKcS1_Pd", 
                "xnOSDoesFileExist", 
                "xnNodeInfoGetNeededNodes", 
                "_ZN20XnStreamReaderDevice18HandleRealPropertyEPKcS1_d", 
                "_ZNK14XnDeviceModule11GetPropertyEPKcPd", 
                "_ZN17XnIONetworkStream4FreeEv", 
                "__stack_chk_fail", 
                "xnNodeInfoListIsEmpty", 
                "xnOSLeaveCriticalSection", 
                "_ZN12XnDeviceBase15DoesModuleExistEPKcPj", 
                "_ZNK13XnPixelStream16CalcRequiredSizeEPj", 
                "_ZN13XnFrameStream4ReadEP12XnStreamData", 
                "_ZN12XnDataPacker13WritePropertyEPKcS1_d", 
                "xnOSMemSet", 
                "_xnDumpFileWriteString", 
                "_ZN13XnPixelStream8ReadImplEP12XnStreamData", 
                "_ZN12XnDeviceBase11CloseStreamEPKc", 
                "strcmp", 
                "XnStreamFreeUncompressImageJ", 
                "_ZN12XnDeviceBase10FindStreamEPKcPP14XnDeviceStream", 
                "xnNodeInfoListIteratorIsValid", 
                "xnLogStartNewFile", 
                "xnNodeQueryAllocate", 
                "xnOSWaitAndTerminateThread", 
                "_ZN12XnDataPacker13ReadNewStreamEPcS0_P13XnPropertySet", 
                "_ZN12XnDeviceBase11SetPropertyEPKcS1_y", 
                "xnUSBEnumerateDevices", 
                "_ZN14XnDeviceStream5CloseEv", 
                "xnNodeQuerySetMaxVersion", 
                "xnOSStrDup"
            ], 
            "rpm": "openni-primesense-5.1.6.6-9.fc27.x86_64.rpm"
        }, 
        "usr/lib64/libXnDDK_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/libXnDDK.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "xnOSFreeLibrary", 
                "XnStreamUncompressImageJ", 
                "xnOSStrCRC32", 
                "strcpy", 
                "_xnDumpFileClose", 
                "xnOSMemCopy", 
                "xnOSSetEvent", 
                "xnOSCalloc", 
                "strchr", 
                "xnOSStrDup", 
                "xnOSReadIntFromINI", 
                "xnOSCloseEvent", 
                "_Unwind_Resume", 
                "xnGetStatusString", 
                "xnOSCallocAligned", 
                "xnOSGetFileList", 
                "xnOSMemSet", 
                "_ZSt9terminatev", 
                "XnStreamCompressDepth16ZWithEmbTable", 
                "XnFormatsShutdown", 
                "xnOSEnterCriticalSection", 
                "xnOSFreeAligned", 
                "XnStreamInitUncompressImageJ", 
                "XnFormatsMirrorPixelData", 
                "__stack_chk_fail", 
                "xnOSReadDoubleFromINI", 
                "xnOSFree", 
                "xnOSGetProcAddress", 
                "xnOSLeaveCriticalSection", 
                "xnLogWrite", 
                "memcmp", 
                "_ZN8XnBuffer8AllocateEj", 
                "__strcpy_chk", 
                "_Znam", 
                "_Znwm", 
                "__gmon_start__", 
                "xnOSGetHighResTimeStamp", 
                "xnResolutionGetYRes", 
                "_ZN8XnBuffer17SetExternalBufferEPhj", 
                "XnStreamUncompressDepth16ZWithEmbTable", 
                "xnOSCloseCriticalSection", 
                "__sprintf_chk", 
                "strcmp", 
                "xnOSStrFormat", 
                "XnFormatsInit", 
                "XnStreamUncompressDepth16Z", 
                "xnOSCreateEvent", 
                "strtok", 
                "xnOSMalloc", 
                "XnStreamUncompressImage8Z", 
                "xnResolutionGetFromXYRes", 
                "strncpy", 
                "xnOSStrAppend", 
                "XnStreamFreeCompressImageJ", 
                "XnStreamCompressDepth16Z", 
                "XnStreamCompressImage8J", 
                "xnOSStrCopy", 
                "XnStreamInitCompressImageJ", 
                "_ZN8XnBuffer5WriteEPKhj", 
                "xnOSLoadLibrary", 
                "__gxx_personality_v0", 
                "xnRegisterErrorCodeMessages", 
                "strncmp", 
                "XnFormatsInitFromINIFile", 
                "xnOSStrPrefix", 
                "_ZdlPvm", 
                "XnStreamCompressImage24J", 
                "xnResolutionGetXRes", 
                "__cxa_finalize", 
                "xnResolutionGetName", 
                "xnOSCreateCriticalSection", 
                "xnOSMallocAligned", 
                "xnOSWaitForCondition", 
                "xnOSReadStringFromINI", 
                "__cxa_atexit", 
                "XnStreamFreeUncompressImageJ", 
                "xnDumpFileOpen", 
                "_ZdaPv", 
                "_ITM_registerTMCloneTable", 
                "_xnDumpFileWriteString", 
                "strlen", 
                "__cxa_pure_virtual", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "openni-primesense-5.1.6.6-9.fc27.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " System Environment/Libraries", 
            "Name": " openni-primesense", 
            "License": " ASL 2.0", 
            "URL": " https://github.com/PrimeSense/Sensor", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-22.phx2.fedoraproject.org", 
            "Description": "\nThis modules enables OpenNI to make use of the PrimeSense, also known as\nKinect depth camera.\n", 
            "Build Date": " Fri 04 Aug 2017 02:29:45 AM EDT", 
            "Source RPM": " openni-primesense-5.1.6.6-9.fc27.src.rpm", 
            "Version": " 5.1.6.6", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Fri 04 Aug 2017 02:45:18 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 9.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " PrimeSensor/Kinect Modules for OpenNI", 
            "Size": " 1133582"
        }
    }
}