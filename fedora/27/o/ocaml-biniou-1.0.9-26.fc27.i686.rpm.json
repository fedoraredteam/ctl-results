{
    "results": {
        "usr/lib/ocaml/biniou/biniou_cmxs": {
            "report-functions": [
                "camlStream__junk_data_3250", 
                "camlEasy_format__to_channel_inner_2107", 
                "caml_young_ptr", 
                "caml_exception_pointer", 
                "_ITM_deregisterTMCloneTable", 
                "camlFilename", 
                "caml_int64_float_of_bits_unboxed", 
                "camlList__length_aux_1204", 
                "camlPervasives__invalid_arg_1007", 
                "camlPervasives__failwith_1005", 
                "camlChar__chr_1206", 
                "camlPervasives__string_of_int_1150", 
                "camlPervasives__input_line_1274", 
                "camlEasy_format__1", 
                "camlHashtbl__add_1596", 
                "caml_ml_close_channel", 
                "caml_int32_bits_of_float_unboxed", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlStream__from_4286", 
                "__gmon_start__", 
                "caml_update_dummy", 
                "camlHashtbl__add_1391", 
                "camlHashtbl__find_1621", 
                "caml_allocN", 
                "camlArray__sort_1341", 
                "camlPervasives", 
                "caml_call_gc", 
                "camlList__map_1248", 
                "camlList__rev_append_1236", 
                "camlHashtbl__clear_1343", 
                "caml_create_string", 
                "camlSys", 
                "camlArray__iter_1252", 
                "camlHashtbl", 
                "camlBytes__sub_1234", 
                "camlHashtbl__create_inner_2188", 
                "caml_make_vect", 
                "camlHashtbl__6", 
                "camlEasy_format__2", 
                "camlPervasives__23", 
                "camlStream__peek_data_2241", 
                "camlBuffer__resize_1237", 
                "caml_young_limit", 
                "camlEasy_format__3", 
                "camlPervasives__char_of_int_1125", 
                "camlPervasives__close_out_noerr_1238", 
                "camlString__concat_1300", 
                "camlPervasives__print_endline_1310", 
                "caml_string_notequal", 
                "caml_modify", 
                "camlPervasives__min_1027", 
                "camlList__iter_1272", 
                "camlStream__iter_4280", 
                "caml_raise_exn", 
                "caml_obj_block", 
                "caml_ml_input_char", 
                "camlPervasives__open_in_gen_1242", 
                "camlPervasives__30", 
                "camlBytes__blit_string_1267", 
                "camlPervasives__output_string_1213", 
                "camlArray__to_list_1285", 
                "caml_int_of_string", 
                "caml_alloc_dummy", 
                "caml_equal", 
                "camlPervasives__input_1253", 
                "camlPervasives__output_1216", 
                "camlPervasives__max_1030", 
                "camlPervasives__close_out_1236", 
                "caml_int64_bits_of_float_unboxed", 
                "camlPervasives__really_input_1264", 
                "camlPervasives__string_of_float_1161", 
                "camlBytes__make_1216", 
                "caml_ml_array_bound_error", 
                "camlArray__mapi_1279", 
                "caml_c_call", 
                "camlString", 
                "caml_int64_ops", 
                "camlPervasives__print_newline_1312", 
                "__cxa_finalize", 
                "camlArray__of_list_1294", 
                "camlPrintf__sprintf_1315", 
                "caml_exn_Assert_failure", 
                "_ITM_registerTMCloneTable", 
                "caml_ml_output_char", 
                "camlPrintf__fprintf_1294", 
                "caml_int32_ops", 
                "caml_sys_file_exists", 
                "camlFilename__concat_1337", 
                "caml_exn_Not_found", 
                "camlHashtbl__Make_1702", 
                "camlArray__map_1261", 
                "camlPrintexc__to_string_1304", 
                "camlPervasives__$5e_1117", 
                "caml_alloc2", 
                "camlEasy_format__to_string_1718", 
                "camlEasy_format__to_stdout_1733", 
                "caml_backtrace_pos", 
                "camlArray__init_1217", 
                "caml_fresh_oo_id", 
                "camlArray__fold_left_1304", 
                "camlPervasives__open_out_gen_1190", 
                "caml_exn_End_of_file", 
                "caml_int32_float_of_bits_unboxed", 
                "camlHashtbl__find_1416", 
                "camlBuffer__create_1209"
            ], 
            "rpm": "ocaml-biniou-1.0.9-26.fc27.i686.rpm", 
            "complexity": {
                "r2aa": {
                    "afCc": null, 
                    "afC": null
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/ocaml/biniou/biniou.cmxs"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " ocaml-biniou", 
            "License": " BSD", 
            "URL": " http://mjambon.com/biniou.html", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildhw-09.phx2.fedoraproject.org", 
            "Description": "\nBiniou (pronounced \"be new\") is a binary data format designed for\nspeed, safety, ease of use and backward compatibility as protocols\nevolve. Biniou is vastly equivalent to JSON in terms of functionality\nbut allows implementations several times faster (4 times faster than\nyojson), with 25-35% space savings.\n\nBiniou data can be decoded into human-readable form without knowledge\nof type definitions except for field and variant names which are\nrepresented by 31-bit hashes. A program named bdump is provided for\nroutine visualization of biniou data files.\n", 
            "Build Date": " Tue 08 Aug 2017 09:29:59 AM EDT", 
            "Source RPM": " ocaml-biniou-1.0.9-26.fc27.src.rpm", 
            "Version": " 1.0.9", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Wed 09 Aug 2017 09:50:27 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 26.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Safe and fast binary data format", 
            "Size": " 578583"
        }
    }
}