{
    "results": {
        "usr/bin/MinOZW": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/MinOZW", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "_ZNSt8__detail15_List_node_base9_M_unhookEv", 
                "__cxa_atexit", 
                "_ZN9OpenZWave7Manager11GetNodeNameB5cxx11Ejh", 
                "pthread_mutexattr_settype", 
                "__stack_chk_fail", 
                "_Znwm", 
                "pthread_mutex_unlock", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm", 
                "_ZN9OpenZWave7Manager6CreateEv", 
                "__cxa_finalize", 
                "sleep", 
                "_ZN9OpenZWave7Options13AddOptionBoolERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb", 
                "__gmon_start__", 
                "_ZN9OpenZWave7Options4LockEv", 
                "_ZN9OpenZWave7Manager18GetNodeProductNameB5cxx11Ejh", 
                "pthread_mutex_lock", 
                "_ZN9OpenZWave7Manager9AddDriverERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_6Driver19ControllerInterfaceE", 
                "pthread_mutex_init", 
                "_ZdlPvm", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "strcasecmp", 
                "_ZN9OpenZWave7Manager23GetNodeManufacturerNameB5cxx11Ejh", 
                "_ZN9OpenZWave7Manager13GetValueUnitsB5cxx11ERKNS_7ValueIDE", 
                "_ZNKSt5ctypeIcE13_M_widen_initEv", 
                "pthread_cond_broadcast", 
                "_ITM_registerTMCloneTable", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_ZN9OpenZWave7Options7DestroyEv", 
                "strlen", 
                "__printf_chk", 
                "_ZNSt8ios_base4InitD1Ev", 
                "_ZN9OpenZWave7Manager7DestroyEv", 
                "_ZNSo3putEc", 
                "_ZdlPv", 
                "pthread_mutexattr_init", 
                "_ZN9OpenZWave7Manager19GetDriverStatisticsEjPNS_6Driver10DriverDataE", 
                "_ZN9OpenZWave7Manager11GetValueMaxERKNS_7ValueIDE", 
                "_ZN9OpenZWave7Manager11GetValueMinERKNS_7ValueIDE", 
                "memcpy", 
                "_ITM_deregisterTMCloneTable", 
                "_ZN9OpenZWave7Manager12RemoveDriverERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", 
                "pthread_mutexattr_destroy", 
                "pthread_mutex_destroy", 
                "_ZN9OpenZWave7Manager13GetValueLabelB5cxx11ERKNS_7ValueIDEi", 
                "pthread_cond_wait", 
                "_ZNSo5flushEv", 
                "_ZN9OpenZWave7Manager13RemoveWatcherEPFvPKNS_12NotificationEPvES4_", 
                "__gxx_personality_v0", 
                "_ZlsRSoPKN9OpenZWave12NotificationE", 
                "__libc_start_main", 
                "_ZN9OpenZWave7Options12AddOptionIntERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi", 
                "_Unwind_Resume", 
                "_ZN9OpenZWave7Options6CreateERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_S8_", 
                "_ZSt16__throw_bad_castv", 
                "_ZN9OpenZWave7Manager18getVersionAsStringB5cxx11Ev", 
                "_ZN9OpenZWave7Manager10AddWatcherEPFvPKNS_12NotificationEPvES4_", 
                "_ZN9OpenZWave7Manager12GetValueHelpB5cxx11ERKNS_7ValueIDEi"
            ], 
            "rpm": "openzwave-1.5.0-0.20170724gitde1c0e6.fc27.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " openzwave", 
            "License": " LGPLv3+", 
            "URL": " http://www.openzwave.net", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-22.phx2.fedoraproject.org", 
            "Description": "\nOpenZWave is an open-source, cross-platform library designed to enable anyone to\nadd support for Z-Wave home-automation devices to their applications, without\nrequiring any in depth knowledge of the Z-Wave protocol.\n", 
            "Build Date": " Mon 31 Jul 2017 02:24:30 PM EDT", 
            "Source RPM": " openzwave-1.5.0-0.20170724gitde1c0e6.fc27.src.rpm", 
            "Version": " 1.5.0", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Mon 31 Jul 2017 02:32:50 PM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 0.20170724gitde1c0e6.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Sample Executables for OpenZWave", 
            "Size": " 19784"
        }
    }
}