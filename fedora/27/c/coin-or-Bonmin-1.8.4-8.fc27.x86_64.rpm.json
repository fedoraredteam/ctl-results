{
    "results": {
        "complexity": {
            "r2aa": {
                "afCc": 3, 
                "afC": 132
            }
        }, 
        "usr/bin/bonmin": {
            "report-functions": [
                "__cxa_begin_catch", 
                "_ZdaPv", 
                "__cxa_rethrow", 
                "_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc", 
                "__cxa_atexit", 
                "__libc_start_main", 
                "__gmon_start__", 
                "_Znam", 
                "_ZN6Bonmin11BonminSetupC1ERKS0_RNS_18OsiTMINLPInterfaceE", 
                "_ZN6Bonmin15BonminAmplSetup10initializeERPPc", 
                "__cxa_end_catch", 
                "_ITM_registerTMCloneTable", 
                "_ZN6Bonmin12BabSetupBase15readOptionsFileENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", 
                "_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_", 
                "__stack_chk_fail", 
                "_ZN6Bonmin12BabSetupBaseD2Ev", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l", 
                "_ZN6Bonmin11BonminSetupC2EPK18CoinMessageHandler", 
                "__gxx_personality_v0", 
                "__cxa_finalize", 
                "_Znwm", 
                "_ZdlPvm", 
                "_ITM_deregisterTMCloneTable", 
                "_ZN6Bonmin3BabC1Ev", 
                "_ZN6Bonmin11BonminSetupC1ERKS0_", 
                "_Unwind_Resume", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_ZN6Bonmin10TNLPSolver13UnsolvedError10printErrorERSo", 
                "_ZN6Bonmin3BabclERNS_12BabSetupBaseE", 
                "strcpy", 
                "_ZN6Bonmin11BonminSetup15registerOptionsEv", 
                "_ZN6Bonmin3BabD1Ev", 
                "_ZdlPv"
            ], 
            "rpm": "coin-or-Bonmin-1.8.4-8.fc27.x86_64.rpm", 
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/bonmin"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Applications/Engineering", 
            "Name": " coin-or-Bonmin", 
            "License": " CPL", 
            "URL": " http://projects.coin-or.org/Bonmin", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-20.phx2.fedoraproject.org", 
            "Description": "\nBonmin (Basic Open-source Nonlinear Mixed INteger programming) is an\nexperimental open-source C++ code for solving general MINLP (Mixed Integer\nNonLinear Programming) problems of the form:\n\n   min     f(x)\n\ns.t.\t   g_L <= g(x) <= g_U\n\t   x_L <=  x   <= x_U\n\t   x_i in Z for all i in I and,\n\t   x_i in R for all i not in I.\n\nwhere f(x): R^n --> R, g(x): R^n --> R^m are twice continuously differentiable\nfunctions and I is a subset of {1,..,n}.\n\nBonmin features several algorithms\n\n  * B-BB is a NLP-based branch-and-bound algorithm,\n  * B-OA is an outer-approximation decomposition algorithm,\n  * B-QG is an implementation of Quesada and Grossmann's branch-and-cut\n    algorithm,\n  * B-Hyb is a hybrid outer-approximation based branch-and-cut algorithm.\n\nThe algorithms in Bonmin are exact when the functions f and g are convex;\nin the case where f or g or both are non-convex they are heuristics.\n", 
            "Build Date": " Sun 30 Jul 2017 03:54:56 PM EDT", 
            "Source RPM": " coin-or-Bonmin-1.8.4-8.fc27.src.rpm", 
            "Version": " 1.8.4", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Sun 30 Jul 2017 04:10:17 PM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 8.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Basic Open-source Nonlinear Mixed INteger programming", 
            "Size": " 1313494"
        }
    }
}