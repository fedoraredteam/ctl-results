{
    "results": {
        "usr/lib/libsfml-graphics_so_1_6": {
            "report-functions": [
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc", 
                "__longjmp_chk", 
                "FT_Select_Charmap", 
                "__cxa_guard_acquire", 
                "jpeg_set_defaults", 
                "glViewport", 
                "jpeg_std_error", 
                "_Unwind_Resume", 
                "_ZNSt8ios_baseD2Ev", 
                "fmod", 
                "png_init_io", 
                "__gxx_personality_v0", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_", 
                "glTexCoord2f", 
                "_ITM_deregisterTMCloneTable", 
                "_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc", 
                "glDisable", 
                "glPopAttrib", 
                "png_write_info", 
                "jpeg_start_compress", 
                "glLoadIdentity", 
                "memcmp", 
                "jpeg_finish_compress", 
                "_ZNSt8ios_baseC2Ev", 
                "FT_New_Face", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj", 
                "fclose", 
                "_ZSt19__throw_logic_errorPKc", 
                "sincosf", 
                "FT_Glyph_To_Bitmap", 
                "glCopyTexSubImage2D", 
                "__cxa_guard_release", 
                "_ZNSolsEi", 
                "_ZdlPv", 
                "_ZN2sf6WindowD2Ev", 
                "FT_Set_Pixel_Sizes", 
                "_ZNK2sf6Window8GetWidthEv", 
                "glEnable", 
                "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base", 
                "_ZNSt6localeC1Ev", 
                "_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE7_M_syncEPcjj", 
                "__stack_chk_fail", 
                "glGetIntegerv", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev", 
                "glTexParameteri", 
                "_ZSt16__throw_bad_castv", 
                "png_set_IHDR", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_ITM_registerTMCloneTable", 
                "glEnd", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv", 
                "__cxa_rethrow", 
                "glGenTextures", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate", 
                "_ZNK2sf6Window9SetActiveEb", 
                "_ZSt9terminatev", 
                "_ZN2sf6WindowC2Ev", 
                "glGetTexImage", 
                "_setjmp", 
                "memmove", 
                "sqrtf", 
                "FT_Get_Glyph", 
                "glVertex2f", 
                "__cxa_begin_catch", 
                "_ZdlPvj", 
                "png_set_rows", 
                "png_destroy_write_struct", 
                "__cxa_guard_abort", 
                "_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEEC1Ev", 
                "SOIL_save_image", 
                "_ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EES4_", 
                "_ZN2sf7Unicode4TextC1EPKj", 
                "_ZNSo5flushEv", 
                "__cxa_end_catch", 
                "_ZNKSt5ctypeIcE13_M_widen_initEv", 
                "glScalef", 
                "_ZN2sf6Window7OnEventERKNS_5EventE", 
                "glBindTexture", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEED1Ev", 
                "_ZNSt12__basic_fileIcED1Ev", 
                "_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj", 
                "glReadPixels", 
                "SOIL_load_image", 
                "fopen", 
                "FT_Done_FreeType", 
                "jpeg_destroy_compress", 
                "png_create_info_struct", 
                "_Znwj", 
                "jpeg_stdio_dest", 
                "glPopMatrix", 
                "glMatrixMode", 
                "__cxa_finalize", 
                "_ZN2sf6Window6CreateEmRKNS_14WindowSettingsE", 
                "__gmon_start__", 
                "FT_Load_Char", 
                "_ZN2sf7Unicode4TextC1Ev", 
                "png_write_png", 
                "_ZN2sf7Context15IsContextActiveEv", 
                "FT_Init_FreeType", 
                "png_create_write_struct", 
                "jpeg_CreateCompress", 
                "FT_New_Memory_Face", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj", 
                "glClear", 
                "glPushAttrib", 
                "_ZNSo9_M_insertImEERSoT_", 
                "glGetError", 
                "glMultMatrixf", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode", 
                "_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev", 
                "_ZSt24__throw_out_of_range_fmtPKcz", 
                "SOIL_free_image_data", 
                "jpeg_write_scanlines", 
                "_ZN2sf7Context9GetGlobalEv", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "glTexSubImage2D", 
                "FT_Done_Face", 
                "sqrt", 
                "_ZN2sf6Window6CreateENS_9VideoModeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmRKNS_14WindowSettingsE", 
                "__cxa_atexit", 
                "png_write_end", 
                "glPushMatrix", 
                "glTexImage2D", 
                "SOIL_last_result", 
                "jpeg_set_quality", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_i", 
                "_ZN2sf7Context9SetActiveEb", 
                "_ZNSt6localeD1Ev", 
                "png_set_longjmp_fn", 
                "strlen", 
                "_ZNSt8ios_base4InitD1Ev", 
                "glLoadMatrixf", 
                "glBegin", 
                "_ZNK2sf7Unicode4TextcvRKNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEEEEv", 
                "glBlendFunc", 
                "glTranslatef", 
                "glClearColor", 
                "_ZSt17__throw_bad_allocv", 
                "_ZNK2sf6Window9GetHeightEv", 
                "FT_Done_Glyph", 
                "_ZNSo3putEc", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj", 
                "_ZNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj", 
                "glDeleteTextures", 
                "SOIL_load_image_from_memory", 
                "_ZSt20__throw_length_errorPKc", 
                "glewInit", 
                "glColor4f", 
                "_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base"
            ], 
            "rpm": "compat-SFML16-1.6-15.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/libsfml-graphics.so.1.6"
        }, 
        "usr/lib/libsfml-audio_so_1_6": {
            "report-functions": [
                "alcCaptureStop", 
                "alSource3f", 
                "_ZNSt8ios_base4InitD1Ev", 
                "alcCloseDevice", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "__cxa_atexit", 
                "_ZNSo5flushEv", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "alcMakeContextCurrent", 
                "ldexp", 
                "_Znwj", 
                "alSourceUnqueueBuffers", 
                "sf_close", 
                "free", 
                "alSourcePause", 
                "_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_", 
                "_ZSt24__throw_out_of_range_fmtPKcz", 
                "alBufferData", 
                "_ITM_registerTMCloneTable", 
                "_ZN2sf6ThreadD2Ev", 
                "alListenerf", 
                "__assert_fail", 
                "_ZSt16__throw_bad_castv", 
                "memmove", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_i", 
                "alcCreateContext", 
                "alcIsExtensionPresent", 
                "alDeleteSources", 
                "alcOpenDevice", 
                "sf_open", 
                "__gmon_start__", 
                "__memcpy_chk", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc", 
                "alcCaptureOpenDevice", 
                "alSourceStop", 
                "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base", 
                "_ZNSo3putEc", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj", 
                "__cxa_finalize", 
                "alcCaptureStart", 
                "_ZSt9terminatev", 
                "alSourcef", 
                "_ZSt20__throw_length_errorPKc", 
                "fseek", 
                "__cxa_pure_virtual", 
                "alSourceQueueBuffers", 
                "_ZNSo9_M_insertImEERSoT_", 
                "cos", 
                "memcmp", 
                "alGetBufferi", 
                "alcGetIntegerv", 
                "floor", 
                "sf_write_short", 
                "alSourcei", 
                "alGetListenerf", 
                "_ZN2sf6Thread6LaunchEv", 
                "exp", 
                "__stack_chk_fail", 
                "alDeleteBuffers", 
                "alGetSourcef", 
                "fread", 
                "sincos", 
                "sin", 
                "_ZdlPvj", 
                "alGetListenerfv", 
                "_ZN2sf5SleepEf", 
                "alGenSources", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_", 
                "pow", 
                "alGetError", 
                "_ZNKSt5ctypeIcE13_M_widen_initEv", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj", 
                "alGetListener3f", 
                "fgetc", 
                "alGetEnumValue", 
                "alcCaptureCloseDevice", 
                "_ZNSo9_M_insertIPKvEERSoT_", 
                "malloc", 
                "alGetSourcei", 
                "_ITM_deregisterTMCloneTable", 
                "log", 
                "alListenerfv", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_ZdlPv", 
                "fopen", 
                "_ZN2sf6Thread4WaitEv", 
                "sf_open_virtual", 
                "_ZSt19__throw_logic_errorPKc", 
                "alListener3f", 
                "realloc", 
                "alGetSource3f", 
                "_ZSt17__throw_bad_allocv", 
                "__gxx_personality_v0", 
                "alGenBuffers", 
                "sf_read_short", 
                "alSourcePlay", 
                "alcDestroyContext", 
                "_Unwind_Resume", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj", 
                "ftell", 
                "_ZN2sf6ThreadC2Ev", 
                "alcCaptureSamples"
            ], 
            "rpm": "compat-SFML16-1.6-15.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/libsfml-audio.so.1.6"
        }, 
        "usr/lib/libsfml-network_so_1_6": {
            "report-functions": [
                "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base", 
                "_ZNSt6localeD1Ev", 
                "__cxa_finalize", 
                "__cxa_guard_acquire", 
                "__cxa_atexit", 
                "send", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj", 
                "_ZNSi5tellgEv", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcj", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv", 
                "setsockopt", 
                "_ZSt20__throw_length_errorPKc", 
                "_ZNSi5seekgExSt12_Ios_Seekdir", 
                "__errno_location", 
                "tolower", 
                "_ZNSt12__basic_fileIcED1Ev", 
                "fcntl", 
                "strlen", 
                "_ZNSo5flushEv", 
                "connect", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_", 
                "recvfrom", 
                "_ZNSo3putEc", 
                "recv", 
                "close", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc", 
                "_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE7_M_syncEPcjj", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev", 
                "_ZNSt8ios_baseD2Ev", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_i", 
                "_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EES4_", 
                "__cxa_guard_release", 
                "_ZSt24__throw_out_of_range_fmtPKcz", 
                "_ZSt19__throw_logic_errorPKc", 
                "_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_mutateEjjPKwj", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj", 
                "_ZdlPvj", 
                "_ZNSo5writeEPKci", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc", 
                "_ZNSirsERi", 
                "__gxx_personality_v0", 
                "getsockname", 
                "__stack_chk_fail", 
                "_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev", 
                "sendto", 
                "__cxa_end_catch", 
                "__cxa_begin_catch", 
                "__cxa_guard_abort", 
                "_ZSt16__throw_bad_castv", 
                "memcmp", 
                "_ZNSt8ios_base4InitD1Ev", 
                "_ZNSi4readEPci", 
                "_ZNSt6localeC1Ev", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcjj", 
                "_ZdlPv", 
                "_ZNSi6ignoreEii", 
                "bind", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj", 
                "inet_ntoa", 
                "listen", 
                "_ZNSi3getERc", 
                "select", 
                "accept", 
                "memmove", 
                "_ZNSo9_M_insertImEERSoT_", 
                "_ZNKSt5ctypeIcE13_M_widen_initEv", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "_ZNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "_ITM_deregisterTMCloneTable", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEEC1Ev", 
                "_ZNSi10_M_extractIjEERSiRT_", 
                "inet_addr", 
                "gethostbyname", 
                "_Znwj", 
                "__fdelt_chk", 
                "_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj", 
                "_ITM_registerTMCloneTable", 
                "socket", 
                "getpeername", 
                "_Unwind_Resume", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEED1Ev", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate", 
                "__cxa_rethrow", 
                "_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev"
            ], 
            "rpm": "compat-SFML16-1.6-15.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/libsfml-network.so.1.6"
        }, 
        "usr/lib/libsfml-window_so_1_6": {
            "report-functions": [
                "XQueryExtension", 
                "glXSwapBuffers", 
                "XCheckIfEvent", 
                "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base", 
                "XDestroyWindow", 
                "XRRGetScreenInfo", 
                "_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj", 
                "XFilterEvent", 
                "XCreatePixmap", 
                "__cxa_end_catch", 
                "__cxa_guard_abort", 
                "__cxa_finalize", 
                "_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "_Unwind_Resume", 
                "__cxa_guard_acquire", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "_ZNSt6localeD1Ev", 
                "__stack_chk_fail", 
                "XConvertCase", 
                "XRRSetScreenConfig", 
                "XSetWMHints", 
                "__cxa_rethrow", 
                "_ZNSt8ios_baseC2Ev", 
                "XUnsetICFocus", 
                "XFreePixmap", 
                "memmove", 
                "glXGetConfig", 
                "read", 
                "_ZNK2sf5Clock14GetElapsedTimeEv", 
                "__gmon_start__", 
                "XStoreName", 
                "XAllocWMHints", 
                "XRRFreeScreenConfigInfo", 
                "XOpenIM", 
                "__cxa_begin_catch", 
                "_ZN2sf5SleepEf", 
                "_ZdlPv", 
                "glEnable", 
                "_ZNSo3putEc", 
                "_Znaj", 
                "XSetICFocus", 
                "fcntl", 
                "XListDepths", 
                "XPutImage", 
                "XSetWindowColormap", 
                "_ZN2sf5Clock5ResetEv", 
                "__cxa_pure_virtual", 
                "XCreatePixmapFromBitmapData", 
                "glXCreateContext", 
                "_Znwj", 
                "XResizeWindow", 
                "_ZSt16__throw_bad_castv", 
                "Xutf8LookupString", 
                "XSelectInput", 
                "XDrawPoint", 
                "_ZNSt6localeC1Ev", 
                "XCreateGC", 
                "XCreatePixmapCursor", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_i", 
                "_ZNSt8ios_base4InitC1Ev", 
                "XFree", 
                "XInternAtom", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_", 
                "XOpenDisplay", 
                "glXGetCurrentContext", 
                "XRRConfigSizes", 
                "__gxx_personality_v0", 
                "XChangeProperty", 
                "__cxa_atexit", 
                "XVisualIDFromVisual", 
                "glXMakeCurrent", 
                "ioctl", 
                "XGetVisualInfo", 
                "_ZN2sf5ClockC1Ev", 
                "XCreateColormap", 
                "_ZNSt8ios_baseD2Ev", 
                "XWarpPointer", 
                "XFreeGC", 
                "XGrabPointer", 
                "XSetWMProtocols", 
                "XCloseIM", 
                "XCloseDisplay", 
                "_ZSt19__throw_logic_errorPKc", 
                "XRRConfigCurrentConfiguration", 
                "XUnmapWindow", 
                "__cxa_guard_release", 
                "XQueryKeymap", 
                "XLookupString", 
                "_ZdlPvj", 
                "_ZNSo5flushEv", 
                "XMoveWindow", 
                "XDestroyIC", 
                "XGrabKeyboard", 
                "XCreateWindow", 
                "glXGetProcAddress", 
                "XGetWindowAttributes", 
                "_ZNKSt5ctypeIcE13_M_widen_initEv", 
                "XCreateImage", 
                "open", 
                "XCreateIC", 
                "XFlush", 
                "_ZNSo9_M_insertImEERSoT_", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "XMapWindow", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "XDefineCursor", 
                "glXDestroyContext", 
                "_ZSt17__throw_bad_allocv", 
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "compat-SFML16-1.6-15.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/libsfml-window.so.1.6"
        }, 
        "usr/lib/libsfml-system_so_1_6": {
            "report-functions": [
                "_ZNSt6localeC1EPKc", 
                "memmove", 
                "_ZNSt6localeD1Ev", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_i", 
                "_ZSt20__throw_length_errorPKc", 
                "_ZSt16__throw_bad_castv", 
                "pthread_join", 
                "_ZNKSt5ctypeIcE13_M_widen_initEv", 
                "__gmon_start__", 
                "_ZdlPv", 
                "_ZSt17__throw_bad_allocv", 
                "usleep", 
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize", 
                "_ZSt9use_facetISt5ctypeIwEERKT_RKSt6locale", 
                "_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE7reserveEj", 
                "_Unwind_Resume", 
                "_ZNSt6localeC1Ev", 
                "__cxa_end_catch", 
                "_ZNSt8ios_base4InitC1Ev", 
                "pthread_mutex_lock", 
                "_ZNSt8ios_base4InitD1Ev", 
                "pthread_cancel", 
                "__cxa_atexit", 
                "__cxa_begin_catch", 
                "rand", 
                "__cxa_guard_acquire", 
                "pthread_mutex_init", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj", 
                "__cxa_guard_abort", 
                "_Znwj", 
                "pthread_setcanceltype", 
                "_ZNSo5flushEv", 
                "__gxx_personality_v0", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj", 
                "time", 
                "__stack_chk_fail", 
                "pthread_create", 
                "srand", 
                "_ZNSo3putEc", 
                "__cxa_guard_release", 
                "_ZdlPvj", 
                "gettimeofday", 
                "_ITM_deregisterTMCloneTable", 
                "pthread_mutex_unlock"
            ], 
            "rpm": "compat-SFML16-1.6-15.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/libsfml-system.so.1.6"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " compat-SFML16", 
            "License": " zlib and Public Domain", 
            "URL": " http://www.sfml-dev.org/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildhw-04.phx2.fedoraproject.org", 
            "Description": "\nSFML is a portable and easy to use multimedia API written in C++. You can see\nit as a modern, object-oriented alternative to SDL.\nSFML is composed of several packages to perfectly suit your needs. You can use\nSFML as a minimal windowing system to interface with OpenGL, or as a\nfully-featured multimedia library for building games or interactive programs.\n", 
            "Build Date": " Wed 02 Aug 2017 03:12:42 PM EDT", 
            "Source RPM": " compat-SFML16-1.6-15.fc27.src.rpm", 
            "Version": " 1.6", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Mon 07 Aug 2017 02:26:13 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 15.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Simple and Fast Multimedia Library", 
            "Size": " 640043"
        }
    }
}