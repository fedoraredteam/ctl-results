{
    "results": {
        "usr/lib/libemon_so_1_3_1": {
            "report-functions": [
                "_ZN9CoinModel6addRowEiPKiPKdddPKc", 
                "__cxa_throw", 
                "_ZNK9CoinModel6columnEPKc", 
                "_ZNSt8ios_base4InitC1Ev", 
                "glp_copy_prob", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "_ZNK9CoinModel13getColumnNameEi", 
                "glp_write_lp", 
                "glp_set_row_name", 
                "_ZN23CglMixedIntegerRoundingD1Ev", 
                "__cxa_call_unexpected", 
                "_ZN10CglProbingC1Ev", 
                "_ZN10CglProbing11setMaxProbeEi", 
                "_ZN16CbcHeuristicRINSC1ER8CbcModel", 
                "glp_get_col_stat", 
                "_ZN9CoinModel6getRowEiPiPd", 
                "_ZN9CoinModel9deleteRowEi", 
                "__stack_chk_fail", 
                "_ZNK9CoinModel10getElementEii", 
                "_ZNSt6localeC1Ev", 
                "_ZNK8CbcModel21isContinuousUnboundedEv", 
                "_ZN23CbcHeuristicGreedyCoverD1Ev", 
                "__cxa_free_exception", 
                "_ZNK9CoinModel18getColumnObjectiveEi", 
                "gettimeofday", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_", 
                "glp_get_prim_stat", 
                "_ZNSo5flushEv", 
                "_ZNK9CoinModel18getColumnIsIntegerEi", 
                "glp_get_sjj", 
                "_ZN17CbcHeuristicFPumpC1ER8CbcModeldb", 
                "_ZNSo3putEc", 
                "glp_del_cols", 
                "ctime_r", 
                "_ZN10ClpSimplexC1Eb", 
                "glp_get_row_lb", 
                "glp_set_col_kind", 
                "_ZNK9CoinModel14getColumnUpperEi", 
                "_ZNSt9exceptionD2Ev", 
                "_Unwind_Resume", 
                "glp_set_row_bnds", 
                "strlen", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc", 
                "_ZNSt8ios_base4InitD1Ev", 
                "_ZN9CglGomory8setLimitEi", 
                "_ZNK9CoinModel3rowEPKc", 
                "_ZNK9CoinModel14getColumnLowerEi", 
                "_ZSt16__throw_bad_castv", 
                "_ZN10CglOddHole19setMinimumViolationEd", 
                "_ZNK8CbcModel23isInitialSolveAbandonedEv", 
                "memmove", 
                "_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_", 
                "_ZNK8ClpModel13getColumnNameB5cxx11Ei", 
                "__gxx_personality_v0", 
                "_ZN9CoinModel11setRowUpperEid", 
                "_ZN10CglProbingD1Ev", 
                "glp_get_row_bind", 
                "_ZNKSt5ctypeIcE13_M_widen_initEv", 
                "_ZN10ClpSimplex14setColumnLowerEid", 
                "__cxa_end_catch", 
                "glp_create_prob", 
                "glp_get_rii", 
                "glp_get_col_dual", 
                "_ZNSt6localeD1Ev", 
                "glp_get_col_type", 
                "_ZN9CoinModel12deleteColumnEi", 
                "_ZNK8CbcModel36isInitialSolveProvenPrimalInfeasibleEv", 
                "glp_set_col_bnds", 
                "_ZN10ClpSimplexC1ERKS_i", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj", 
                "glp_get_dual_stat", 
                "glp_get_row_dual", 
                "_ZN10CglProbing10setMaxLookEi", 
                "glp_create_index", 
                "__dynamic_cast", 
                "_ZN10ClpSimplex14setColumnUpperEid", 
                "glp_add_cols", 
                "_ZN16CbcHeuristicRINSD1Ev", 
                "glp_mip_col_val", 
                "glp_get_row_stat", 
                "_ZNSirsERi", 
                "_ZN23CbcHeuristicGreedyCoverC1ER8CbcModel", 
                "glp_mip_status", 
                "_ZNSi10_M_extractIdEERSiRT_", 
                "_ZN10ClpSimplexD1Ev", 
                "_ZN8ClpModel10deleteRowsEiPKi", 
                "getpid", 
                "__gmon_start__", 
                "glp_btran", 
                "_ZN9CoinModel11setRowLowerEid", 
                "_ZN10ClpSimplex11setRowLowerEid", 
                "_ZN12CglFlowCoverC1Ev", 
                "_ZdlPvj", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "_ZN23CglMixedIntegerRoundingC1Ev", 
                "_ZN10CglProbing10setRowCutsEi", 
                "_ZN8ClpModel10setRowNameEiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", 
                "_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE7_M_syncEPcjj", 
                "_ZN17CbcHeuristicFPumpD1Ev", 
                "_ZN8ClpModel9addColumnEiPKiPKdddd", 
                "glp_get_col_prim", 
                "glp_find_col", 
                "glp_free_env", 
                "glp_mip_obj_val", 
                "_ZN9CoinModel9getColumnEiPiPd", 
                "glp_get_col_ub", 
                "_ZSt24__throw_out_of_range_fmtPKcz", 
                "_ZN10ClpSimplex11setRowUpperEid", 
                "_ITM_registerTMCloneTable", 
                "glp_erase_prob", 
                "glp_get_row_name", 
                "_ZN17CbcHeuristicLocalC1ER8CbcModel", 
                "glp_get_col_lb", 
                "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base", 
                "glp_write_mps", 
                "glp_get_row_prim", 
                "_ZN8CbcModel14branchAndBoundEi", 
                "_ZNK9CoinModel10getRowNameEi", 
                "glp_term_out", 
                "__cxa_allocate_exception", 
                "sysconf", 
                "_ZN10ClpSimplex6primalEii", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_i", 
                "times", 
                "_ZN9CoinModel14setColumnLowerEid", 
                "_ZNK8CbcModel11isAbandonedEv", 
                "__cxa_begin_catch", 
                "glp_get_obj_dir", 
                "glp_get_num_cols", 
                "_ZN10CglOddHoleC1Ev", 
                "_ZN9CoinModel13setColumnNameEiPKc", 
                "glp_get_unbnd_ray", 
                "__cxa_finalize", 
                "glp_get_obj_val", 
                "glp_get_mat_row", 
                "_ZN10CglOddHole17setMaximumEntriesEi", 
                "glp_get_mat_col", 
                "_ZN21OsiClpSolverInterface19setupForRepeatedUseEii", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "_ZSt20__throw_length_errorPKc", 
                "_ZN9CoinModelC1Ev", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj", 
                "glp_adv_basis", 
                "_ZN9CglCliqueC1Ebb", 
                "glp_delete_prob", 
                "_ZN10CglOddHole22setMinimumViolationPerEd", 
                "_ZN8ClpModel24setOptimizationDirectionEd", 
                "glp_simplex", 
                "_ZN10ClpSimplex7barrierEb", 
                "glp_get_row_type", 
                "_ZN11CbcRoundingD1Ev", 
                "_ZN9CoinModel9addColumnEiPKiPKddddPKcb", 
                "_ZN9CoinModel10setRowNameEiPKc", 
                "glp_get_bhead", 
                "_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "_ITM_deregisterTMCloneTable", 
                "_ZN10CglProbing17setUsingObjectiveEi", 
                "_ZNK8CbcModel27isInitialSolveProvenOptimalEv", 
                "_ZNSt8ios_baseC2Ev", 
                "glp_get_col_name", 
                "_ZNSt8ios_baseD2Ev", 
                "_ZN16CglKnapsackCoverD1Ev", 
                "glp_set_mat_col", 
                "glp_eval_tab_col", 
                "_ZN8CbcModel11setLogLevelEi", 
                "__cxa_rethrow", 
                "exit", 
                "_Znwj", 
                "_ZSt19__throw_logic_errorPKc", 
                "_ZN16CglKnapsackCoverC1Ev", 
                "_ZN8CbcModelC1ERK18OsiSolverInterface", 
                "_ZN11CbcRoundingC1ER8CbcModel", 
                "glp_get_col_bind", 
                "_ZNK8CbcModel34isInitialSolveProvenDualInfeasibleEv", 
                "glp_get_obj_coef", 
                "_ZN8CbcModel15addCutGeneratorEP15CglCutGeneratoriPKcbbbiii", 
                "glp_init_iocp", 
                "_ZN9CoinModel18setColumnObjectiveEid", 
                "_ZdlPv", 
                "_ZN18CoinMessageHandler11setLogLevelEi", 
                "__cxa_atexit", 
                "_ZN8ClpModel6addRowEiPKiPKddd", 
                "__cxa_pure_virtual", 
                "_ZN9CglGomoryD1Ev", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "_ZNK8ClpModel10getRowNameB5cxx11Ei", 
                "glp_find_row", 
                "memcmp", 
                "_ZNK8CbcModel15isProvenOptimalEv", 
                "_ZN9CoinModel10setElementEiid", 
                "_ZN13CoinBaseModel14setProblemNameEPKc", 
                "glp_set_obj_dir", 
                "glp_intopt", 
                "_ZN8ClpModel13deleteColumnsEiPKi", 
                "_ZN9CoinModel14setColumnUpperEid", 
                "glp_del_rows", 
                "_ZN8CbcModel12addHeuristicEP12CbcHeuristicPKci", 
                "_ZNK9CoinModel11getRowUpperEi", 
                "glp_get_row_ub", 
                "_ZdaPv", 
                "_ZN8CbcModel12initialSolveEv", 
                "_ZN9CoinModel18setColumnIsIntegerEib", 
                "glp_get_status", 
                "glp_get_num_rows", 
                "glp_set_obj_coef", 
                "_ZN10CglProbing10setMaxPassEi", 
                "_ZN12CglFlowCoverD1Ev", 
                "glp_init_smcp", 
                "_ZN10ClpSimplex23setObjectiveCoefficientEid", 
                "_ZSt17__throw_bad_allocv", 
                "_ZN8CbcModel15setNumberStrongEi", 
                "glp_set_col_name", 
                "_ZN10ClpSimplex4dualEii", 
                "glp_set_mat_row", 
                "_ZNK9CoinModel11getRowLowerEi", 
                "_ZN15CglCutGeneratorD2Ev", 
                "glp_add_rows", 
                "_ZNK8ClpModel12unboundedRayEv", 
                "_ZN9CoinModelC1ERKS_", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "_ZNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "_ZN17CbcHeuristicLocalD1Ev", 
                "_ZN10CglOddHoleD1Ev", 
                "_ZN9CglGomoryC1Ev", 
                "glp_get_col_kind", 
                "_ZN21OsiClpSolverInterfaceC1Ev"
            ], 
            "rpm": "coin-or-lemon-1.3.1-13.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libemon.so.1.3.1"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " coin-or-lemon", 
            "License": " Boost and BSD", 
            "URL": " http://lemon.cs.elte.hu/trac/lemon", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-14.phx2.fedoraproject.org", 
            "Description": "\nLEMON stands for Library for Efficient Modeling and Optimization in\nNetworks. It is a C++ template library providing efficient\nimplementations of common data structures and algorithms with focus on\ncombinatorial optimization tasks connected mainly with graphs and\nnetworks.\n", 
            "Build Date": " Wed 02 Aug 2017 03:19:58 PM EDT", 
            "Source RPM": " coin-or-lemon-1.3.1-13.fc27.src.rpm", 
            "Version": " 1.3.1", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Sun 06 Aug 2017 11:27:16 PM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 13.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " A C++ template library providing many common graph algorithms", 
            "Size": " 235137"
        }
    }
}