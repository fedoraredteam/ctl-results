{
    "results": {
        "usr/lib64/coq/plugins/ltac/ltac_plugin_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/ltac/ltac_plugin.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/NatInt/_coq-native/NCoq_Numbers_NatInt_NZGcd_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/NatInt/.coq-native/NCoq_Numbers_NatInt_NZGcd.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/MSets/_coq-native/NCoq_MSets_MSetList_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/MSets/.coq-native/NCoq_MSets_MSetList.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_young_limit", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_name_6297", 
                "__cxa_finalize", 
                "caml_call_gc"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/Abstract/_coq-native/NCoq_Numbers_Integer_Abstract_ZSgnAbs_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/Abstract/.coq-native/NCoq_Numbers_Integer_Abstract_ZSgnAbs.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/fourier/fourier_plugin_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/fourier/fourier_plugin.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlArray__to_list_1285", 
                "camlNames__repr3_3352", 
                "camlProofview__nf_enter_6485", 
                "camlLoc__3", 
                "camlProofview", 
                "camlCoqlib__build_coq_not_5766", 
                "__gmon_start__", 
                "caml_ml_array_bound_error", 
                "camlCoqlib__build_coq_eq_sym_5700", 
                "caml_alloc2", 
                "caml_backtrace_pos", 
                "camlCErrors__error_1336", 
                "caml_allocN", 
                "caml_c_call", 
                "camlMltop__declare_cache_obj_3915", 
                "camlHashtbl__6", 
                "camlProofview__tclPROGRESS_6145", 
                "camlTactics__intro_using_12819", 
                "camlList__combine_1461", 
                "caml_call_gc", 
                "caml_notequal", 
                "camlPervasives__failwith_1005", 
                "camlHashtbl__replace_1666", 
                "camlList__map_1248", 
                "camlList__length_aux_1204", 
                "caml_modify", 
                "caml_raise_exn", 
                "camlList__1", 
                "__cxa_finalize", 
                "camlPervasives__output_string_1213", 
                "camlHashtbl__iter_1474", 
                "caml_make_array", 
                "caml_exn_Failure", 
                "camlConstr__mkApp_4803", 
                "caml_exn_Division_by_zero", 
                "camlHashtbl__mem_1672", 
                "caml_alloc1", 
                "caml_exn_Assert_failure", 
                "camlBytes__copy_1226", 
                "camlHashtbl", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlTerm__strip_outer_cast_4695", 
                "camlPervasives__string_of_int_1150", 
                "camlHashtbl__Make_1702", 
                "camlTactics__exact_check_15952", 
                "caml_make_vect", 
                "camlList__2", 
                "camlPervasives__$40_1166", 
                "camlNames__of_string_1937", 
                "camlNames", 
                "camlPervasives", 
                "_ITM_deregisterTMCloneTable", 
                "caml_equal", 
                "camlCoqlib__build_coq_eq_5694", 
                "caml_young_limit", 
                "camlCoqlib__build_coq_False_5763", 
                "camlTactics__apply_14849", 
                "camlTacenv__register_ltac_5535", 
                "camlContradiction__contradiction_4606", 
                "camlTactics__change_concl_12672", 
                "camlGlobnames__eq_gr_4115", 
                "camlCoqlib", 
                "camlTerm", 
                "camlCoqlib__check_required_library_5404", 
                "caml_string_equal", 
                "camlNames__to_string_2462", 
                "camlTacticals__tclTHENS_6750", 
                "camlHashtbl__find_1621", 
                "camlTactics", 
                "camlHashtbl__create_inner_2188", 
                "camlEquality__replace_using_leibniz_9376", 
                "camlList__iter_1272", 
                "_ITM_registerTMCloneTable", 
                "camlTacenv__register_ml_tactic_inner_5972", 
                "caml_fresh_oo_id", 
                "camlLocusops__5", 
                "camlCoqlib__coq_constant_5305", 
                "caml_young_ptr", 
                "camlList__map2_1298", 
                "camlTactics__cut_13058", 
                "camlMltop__add_known_module_3856", 
                "camlTacticals__tclORELSE0_6524", 
                "camlHashtbl__add_1596", 
                "camlArray__of_list_1294"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/syntax/string_syntax_plugin_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/syntax/string_syntax_plugin.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlBuffer__create_1209", 
                "_ITM_deregisterTMCloneTable", 
                "caml_allocN", 
                "camlGlobnames__eq_gr_4115", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlMltop__add_known_module_3856", 
                "camlAscii_syntax_plugin__Ascii_syntax__interp_ascii_5093", 
                "__gmon_start__", 
                "caml_alloc2", 
                "camlAscii_syntax_plugin__Ascii_syntax__uninterp_ascii_5312", 
                "camlAscii_syntax_plugin__Ascii_syntax__make_path_4915", 
                "caml_young_limit", 
                "camlAscii_syntax_plugin__Ascii_syntax__make_kn_4884", 
                "camlBuffer__resize_1237", 
                "camlLoc__3", 
                "camlChar__chr_1206", 
                "_ITM_registerTMCloneTable", 
                "caml_raise_exn", 
                "caml_call_gc", 
                "camlCoqlib__find_reference_5296", 
                "caml_fresh_oo_id", 
                "camlNotation__declare_string_interpreter_6298", 
                "caml_ml_array_bound_error", 
                "caml_backtrace_pos"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/QArith/_coq-native/NCoq_QArith_Qreals_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/QArith/.coq-native/NCoq_QArith_Qreals.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qnum_2666", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301", 
                "caml_call_gc", 
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable", 
                "caml_young_limit", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__gmon_start__", 
                "camlNCoq_Reals_Raxioms__const_NCoq_Reals_Raxioms_IZR_2729"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Init/_coq-native/NCoq_Init_Wf_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Init/.coq-native/NCoq_Init_Wf.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativevalues__mk_sw_accu_5114", 
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativecode__get_const_6301", 
                "caml_young_limit", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativevalues__is_accu_5182", 
                "__gmon_start__", 
                "caml_call_gc"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Structures/_coq-native/NCoq_Structures_DecidableTypeEx_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Structures/.coq-native/NCoq_Structures_DecidableTypeEx.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativecode__get_name_6297", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lt_4420", 
                "camlNCoq_PArith_BinPos", 
                "camlNCoq_Arith_PeanoNat", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_Arith_Compare_dec", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Structures_OrderedType", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_ZArith_BinInt", 
                "camlNCoq_Arith_PeanoNat__x_compare_101_2804", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_compare_3449", 
                "caml_young_limit", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_NArith_BinNat", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_call_gc", 
                "_ITM_deregisterTMCloneTable", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_Init_Logic", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Peano", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_compare_2865", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_sym_2912", 
                "camlNCoq_Structures_OrderedTypeEx", 
                "camlNativecode__get_const_6301", 
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Structures/_coq-native/NCoq_Structures_OrdersTac_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Structures/.coq-native/NCoq_Structures_OrdersTac.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_ind_accu_4947", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativecode__get_ind_6309", 
                "_ITM_registerTMCloneTable", 
                "caml_young_limit", 
                "caml_call_gc"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/NatInt/_coq-native/NCoq_Numbers_NatInt_NZLog_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/NatInt/.coq-native/NCoq_Numbers_NatInt_NZLog.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/omega/_coq-native/NCoq_omega_OmegaLemmas_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/omega/.coq-native/NCoq_omega_OmegaLemmas.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_apply3", 
                "caml_curry7", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "caml_call_gc", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_const_6301", 
                "caml_curry4", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_opp_2764", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751", 
                "camlNCoq_ZArith_BinInt", 
                "caml_apply5", 
                "caml_young_limit", 
                "caml_apply2", 
                "caml_curry5", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_mul_2790", 
                "caml_curry8", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_apply7", 
                "caml_curry9", 
                "camlNCoq_Numbers_BinNums", 
                "caml_apply6", 
                "camlNativevalues__str_decode_5828", 
                "caml_curry3"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_BinInt_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_BinInt.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "caml_alloc3", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_div2_up_3063", 
                "camlNCoq_PArith_BinPos__x_eqb_445_3384", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_lxor_4011", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_CompSpec2Type_3465", 
                "camlNCoq_NArith_BinNat__x_ldiff_298_3996", 
                "camlNCoq_PArith_BinPos__x_pred_double_137_2778", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_CompOpp_3174", 
                "camlNCoq_PArith_BinPos", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_snd_3023", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_young_limit", 
                "camlNCoq_Init_Specif", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_PArith_BinPos__x_sqrtrem_494_3457", 
                "caml_alloc1", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_pred_N_2796", 
                "camlNCoq_Classes_Morphisms", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_rect_2887", 
                "camlNCoq_PArith_BinPos__x_size_371_3096", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_land_3971", 
                "camlNCoq_NArith_BinNat__x_pos_div_eucl_194_3842", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_to_nat_3949", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_eq_dec_4107", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_Reflexive_2972", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_iter_3024", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_lor_3958", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_testbit_4055", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNCoq_Init_Datatypes", 
                "_ITM_deregisterTMCloneTable", 
                "caml_call_gc", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_equivalence_2978", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlNCoq_PArith_BinPos__x_mul_313_2995", 
                "camlNCoq_PArith_BinPos__x_of_succ_nat_874_3979", 
                "camlNCoq_PArith_BinPos__x_square_343_3047", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_PArith_BinPos__x_land_704_3743", 
                "camlNCoq_PArith_BinPos__x_testbit_832_3913", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_div2_3055", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_sumbool_rec_2969", 
                "__cxa_finalize", 
                "camlNCoq_PArith_BinPos__x_lxor_762_3811", 
                "camlNativevalues__is_accu_5182", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "camlNCoq_Numbers_BinNums__const_NCoq_Numbers_BinNums_Z_rec_2765", 
                "camlNCoq_Numbers_BinNums", 
                "__gmon_start__", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_sqrt_3465", 
                "camlNCoq_PArith_BinPos__x_lor_676_3705", 
                "caml_allocN", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_ggcd_3662", 
                "camlNCoq_PArith_BinPos__x_add_67_2739", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_PER_2889", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_succ_pos_2689", 
                "camlNCoq_Bool_Bool__const_NCoq_Bool_Bool_iff_reflect_3024", 
                "camlNCoq_PArith_BinPos__x_ldiff_734_3780"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Znat_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Znat.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Init_Peano", 
                "caml_call_gc", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_le_4426", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lt_4420", 
                "camlNativecode__get_name_6297", 
                "caml_young_limit", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_alloc1", 
                "caml_curry2", 
                "camlNCoq_Init_Peano__const_NCoq_Init_Peano_lt_2785", 
                "caml_apply2", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_apply3", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_ge_4429", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_gt_4423", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_ZArith_BinInt", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_of_nat_3187"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_Integral_domain_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_Integral_domain.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_sw_accu_5114", 
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_of_nat_4068", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301", 
                "__cxa_finalize", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__gmon_start__", 
                "caml_young_limit", 
                "camlNativevalues__mk_ind_accu_4947", 
                "_ITM_deregisterTMCloneTable", 
                "caml_call_gc", 
                "camlNativecode__get_name_6297"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/toploop/tacworkertop_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/toploop/tacworkertop.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlAsyncTaskQueue__fun_5939", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "camlAsyncTaskQueue__init_stdout_4344", 
                "camlStm", 
                "camlFlags", 
                "_ITM_deregisterTMCloneTable", 
                "camlCoqtop", 
                "camlCoqworkmgrApi__init_1618"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Lists/_coq-native/NCoq_Lists_Streams_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Lists/.coq-native/NCoq_Lists_Streams.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__upd_cofix_5194", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_curry2", 
                "caml_apply2", 
                "camlNativecode__get_const_6301", 
                "caml_call_gc", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_curry3", 
                "camlNativevalues__mk_cofix_accu_5190", 
                "caml_curry4", 
                "caml_curry6", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__force_cofix_5201", 
                "caml_young_limit", 
                "camlNativecode__get_ind_6309", 
                "caml_apply3", 
                "caml_curry5", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_ind_accu_4947"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_ZArithRing_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_ZArithRing.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_Factorial_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_Factorial.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_call_gc", 
                "caml_alloc3", 
                "__cxa_finalize", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_match_6305", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Datatypes", 
                "camlNativecode__get_value_6218", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Nat__x_mul_27_2706", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_young_limit"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Program/_coq-native/NCoq_Program_Wf_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Program/.coq-native/NCoq_Program_Wf.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_curry6", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_proj2_sig_2816", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_proj1_sig_2802", 
                "caml_call_gc", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Wf__const_NCoq_Init_Wf_Acc_inv_2730", 
                "caml_apply2", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__str_decode_5828", 
                "caml_curry2", 
                "caml_apply4", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Init_Wf", 
                "camlNCoq_Init_Wf__const_NCoq_Init_Wf_well_founded_ind_2755", 
                "camlNativecode__get_const_6301", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_curry4", 
                "caml_curry3", 
                "caml_curry5", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_young_limit"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/NatInt/_coq-native/NCoq_Numbers_NatInt_NZBits_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/NatInt/.coq-native/NCoq_Numbers_NatInt_NZBits.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_ClassicalFacts_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_ClassicalFacts.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativecode__get_name_6297", 
                "__gmon_start__", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_sort_accu_4950", 
                "__cxa_finalize", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Peano", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Init_Datatypes", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_sort_6293"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zwf_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zwf.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_apply2", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_le_4426", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Logic", 
                "caml_curry3"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_ProofIrrelevanceFacts_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_ProofIrrelevanceFacts.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/QArith/_coq-native/NCoq_QArith_QArith_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/QArith/.coq-native/NCoq_QArith_QArith.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "__cxa_finalize", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/micromega/_coq-native/NCoq_micromega_Refl_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/micromega/.coq-native/NCoq_micromega_Refl.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_sort_accu_4950", 
                "caml_alloc3", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Datatypes", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_call_gc", 
                "__cxa_finalize", 
                "caml_young_limit", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_match_6305"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_Classical_Pred_Type_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_Classical_Pred_Type.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/micromega/_coq-native/NCoq_micromega_EnvRing_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/micromega/.coq-native/NCoq_micromega_EnvRing.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_curry8", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_pow_pos_2687", 
                "caml_young_limit", 
                "camlNativevalues__is_accu_5182", 
                "camlNCoq_Init_Datatypes", 
                "caml_apply6", 
                "camlNCoq_micromega_Env", 
                "caml_curry5", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_micromega_Env__const_NCoq_micromega_Env_tail_2676", 
                "caml_curry7", 
                "camlNCoq_Classes_Morphisms", 
                "camlNativecode__get_const_6301", 
                "caml_curry9", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_sub_2974", 
                "camlNCoq_ZArith_BinInt__x_pos_sub_42_2722", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativevalues__str_decode_5828", 
                "caml_apply2", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_ZArith_BinInt", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_PArith_BinPos__x_add_67_2739", 
                "caml_apply4", 
                "caml_curry13", 
                "camlNCoq_PArith_BinPos__x_pred_double_137_2778", 
                "camlNCoq_Init_Logic", 
                "caml_curry2", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_pred_2786", 
                "caml_apply3", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_sort_accu_4950", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_apply11", 
                "caml_curry4", 
                "caml_curry3", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_match_6305", 
                "caml_curry11", 
                "caml_apply5", 
                "caml_curry10", 
                "camlNCoq_micromega_Env__const_NCoq_micromega_Env_Env_2654", 
                "caml_curry12", 
                "camlNCoq_PArith_BinPos", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_ind_6309"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/fourier/_coq-native/NCoq_fourier_Fourier_util_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/fourier/.coq-native/NCoq_fourier_Fourier_util.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zdigits_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zdigits.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "caml_call_gc", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rec_2894", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Bool_Bvector", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rect_2885", 
                "caml_apply3", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_div2_3431", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_name_6297", 
                "caml_curry3", 
                "camlNativevalues__str_decode_5828", 
                "caml_curry2", 
                "caml_young_limit", 
                "caml_alloc1", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_odd_3420", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_mul_2790", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_opp_2764", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_apply2", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_rec_2685", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_sort_accu_4950"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FMapList_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FMapList.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__gmon_start__", 
                "__cxa_finalize", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Lists/_coq-native/NCoq_Lists_SetoidList_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Lists/.coq-native/NCoq_Lists_SetoidList.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Datatypes", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "camlNCoq_Program_Basics", 
                "__gmon_start__", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_list_rec_3096", 
                "caml_young_limit", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Specif", 
                "camlNativecode__get_name_6297", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "__cxa_finalize", 
                "caml_call_gc", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Classes_Morphisms", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rtrigo_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rtrigo.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Structures/_coq-native/NCoq_Structures_OrderedTypeEx_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Structures/.coq-native/NCoq_Structures_OrderedTypeEx.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_Init_Datatypes", 
                "caml_call_gc", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Init_Peano", 
                "caml_alloc3", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_sym_2912", 
                "camlNCoq_Arith_PeanoNat__x_compare_101_2804", 
                "camlNCoq_Init_Logic", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Structures_OrderedType", 
                "caml_alloc1", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Arith_Compare_dec", 
                "__gmon_start__", 
                "camlNCoq_Arith_PeanoNat", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_compare_3449", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_ZArith_BinInt", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNativecode__get_match_6305", 
                "__cxa_finalize", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_compare_2865", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_PArith_BinPos", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__mk_prod_accu_5119", 
                "_ITM_deregisterTMCloneTable", 
                "caml_allocN", 
                "caml_young_limit", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lt_4420", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_name_6297"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/MSets/_coq-native/NCoq_MSets_MSetFacts_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/MSets/.coq-native/NCoq_MSets_MSetFacts.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Rational/SpecViaQ/_coq-native/NCoq_Numbers_Rational_SpecViaQ_QSig_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Rational/SpecViaQ/.coq-native/NCoq_Numbers_Rational_SpecViaQ_QSig.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_curry2", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qlt_2685", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qle_2682"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Constructive_sets_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Constructive_sets.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "__cxa_finalize", 
                "camlNativecode__get_const_6301", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Classes/_coq-native/NCoq_Classes_Equivalence_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Classes/.coq-native/NCoq_Classes_Equivalence.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_apply6", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_curry10", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_curry9", 
                "caml_curry7", 
                "caml_curry11", 
                "caml_curry6", 
                "camlNCoq_Init_Specif", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_name_6297", 
                "caml_call_gc", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "caml_apply8", 
                "caml_apply2", 
                "camlNativecode__get_const_6301", 
                "caml_young_limit", 
                "caml_curry3", 
                "camlNativecode__get_match_6305", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_curry12", 
                "caml_apply3", 
                "caml_curry4", 
                "camlNCoq_Classes_Morphisms", 
                "camlNativevalues__str_decode_5828", 
                "caml_curry8", 
                "camlCamlinternalLazy__force_lazy_block_1264"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_Field_theory_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_Field_theory.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_curry7", 
                "caml_apply3", 
                "caml_curry10", 
                "caml_apply29", 
                "caml_curry20", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_setoid_ring_BinList__const_NCoq_setoid_ring_BinList_nth_2713", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_curry18", 
                "camlNCoq_setoid_ring_Ring_polynom__const_NCoq_setoid_ring_Ring_polynom_Peq_3069", 
                "caml_apply5", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_ARmul_0_l_3057", 
                "caml_curry8", 
                "caml_apply6", 
                "camlNCoq_setoid_ring_Ring_polynom__const_NCoq_setoid_ring_Ring_polynom_Pphi_pow_6152", 
                "camlNCoq_setoid_ring_Ring_theory", 
                "caml_curry5", 
                "caml_curry16", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_ARmul_1_l_3032", 
                "caml_call_gc", 
                "camlNCoq_setoid_ring_Ring_polynom__const_NCoq_setoid_ring_Ring_polynom_norm_aux_5298", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_ARmul_assoc_3091", 
                "caml_apply2", 
                "camlNCoq_Init_Datatypes", 
                "caml_curry12", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_app_3138", 
                "camlNCoq_Setoids_Setoid", 
                "caml_curry6", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_morph0_3705", 
                "caml_curry11", 
                "caml_apply11", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_rpow_pow_N_4046", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_ARsub_def_3198", 
                "camlNCoq_setoid_ring_Ring_polynom__const_NCoq_setoid_ring_Ring_polynom_PNSubstL_4685", 
                "camlNativecode__get_const_6301", 
                "caml_apply4", 
                "caml_curry9", 
                "caml_young_limit", 
                "camlNCoq_setoid_ring_Ring_polynom__const_NCoq_setoid_ring_Ring_polynom_PEeval_5123", 
                "camlNCoq_PArith_BinPos__x_mul_313_2995", 
                "camlNCoq_PArith_BinPos", 
                "caml_curry14", 
                "caml_curry17", 
                "camlNCoq_Classes_Morphisms", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_curry15", 
                "caml_curry13", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_PArith_BinPos__x_eqb_445_3384", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_sub_2974", 
                "caml_curry3", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_pow_pos_2687", 
                "caml_apply13", 
                "camlNativevalues__mk_sort_accu_4950", 
                "caml_curry2", 
                "camlNCoq_NArith_BinNat__x_eqb_86_3482", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_setoid_ring_Ring_polynom", 
                "camlNCoq_ZArith_BinInt__x_pos_sub_42_2722", 
                "caml_apply30", 
                "caml_apply8", 
                "caml_apply15", 
                "camlNCoq_setoid_ring_Ring_polynom__const_NCoq_setoid_ring_Ring_polynom_Pphi_dev_6242", 
                "camlNCoq_Init_Logic", 
                "caml_apply10", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_morph1_3732", 
                "camlNCoq_ZArith_BinInt", 
                "camlNativevalues__mk_ind_accu_4947"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_DiscrR_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_DiscrR.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/MSets/_coq-native/NCoq_MSets_MSetToFiniteSet_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/MSets/.coq-native/NCoq_MSets_MSetToFiniteSet.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FSetInterface_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FSetInterface.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Init_Logic", 
                "caml_young_limit", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_prod_accu_5119", 
                "__cxa_finalize", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Init/_coq-native/NCoq_Init_Tauto_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Init/.coq-native/NCoq_Init_Tauto.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "_ITM_deregisterTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zdigits_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zdigits.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Init_Datatypes", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_odd_3420", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_rec_2685", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_opp_2764", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_mul_2790", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rec_2894", 
                "caml_alloc1", 
                "camlNativecode__get_name_6297", 
                "__gmon_start__", 
                "camlNativecode__get_const_6301", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_young_limit", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Vectors_Vector", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_rec_r_2961", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rect_2885", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_div2_3431", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_call_gc"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/rtauto/_coq-native/NCoq_rtauto_Rtauto_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/rtauto/.coq-native/NCoq_rtauto_Rtauto.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_rtauto_Bintree__const_NCoq_rtauto_Bintree_get_3074", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_apply5", 
                "caml_apply3", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_call_gc", 
                "caml_young_limit", 
                "caml_alloc3", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_curry7", 
                "caml_curry16", 
                "caml_apply2", 
                "caml_apply4", 
                "camlNativevalues__mk_ind_accu_4947", 
                "caml_curry6", 
                "caml_curry13", 
                "camlNCoq_rtauto_Bintree__const_NCoq_rtauto_Bintree_push_3070", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_curry5", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_andb_2713", 
                "caml_curry2", 
                "camlNCoq_Numbers_BinNums", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "caml_alloc1", 
                "camlNCoq_rtauto_Bintree", 
                "camlNativecode__get_const_6301", 
                "caml_curry14", 
                "camlNCoq_Init_Logic", 
                "caml_curry3", 
                "camlNativevalues__str_decode_5828", 
                "caml_curry4"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_Field_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_Field.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Abstract/_coq-native/NCoq_Numbers_Natural_Abstract_NBits_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Abstract/.coq-native/NCoq_Numbers_Natural_Abstract_NBits.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Wellfounded/_coq-native/NCoq_Wellfounded_Inverse_Image_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Wellfounded/.coq-native/NCoq_Wellfounded_Inverse_Image.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "camlNativecode__get_const_6301", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Wellfounded/_coq-native/NCoq_Wellfounded_Lexicographic_Exponentiation_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Wellfounded/.coq-native/NCoq_Wellfounded_Lexicographic_Exponentiation.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_const_6301", 
                "__gmon_start__", 
                "__cxa_finalize", 
                "camlNativevalues__mk_constant_accu_4657"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_auxiliary_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_auxiliary.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_constant_accu_4657"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zmin_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zmin.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize", 
                "__gmon_start__", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_SplitAbsolu_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_SplitAbsolu.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__gmon_start__", 
                "camlNativevalues__str_decode_5828", 
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/NatInt/_coq-native/NCoq_Numbers_NatInt_NZParity_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/NatInt/.coq-native/NCoq_Numbers_NatInt_NZParity.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/ssrmatching/ssrmatching_plugin_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/ssrmatching/ssrmatching_plugin.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlGoptions", 
                "camlGlobnames__global_of_constr_4438", 
                "caml_raise_exn", 
                "camlConstr", 
                "camlUState__union_5201", 
                "camlEvd__evar_filtered_hyps_5542", 
                "camlEvd__existential_value_6441", 
                "camlCList__append_1547", 
                "camlEvd", 
                "camlEvarconv__the_conv_x_leq_inner_11942", 
                "camlList__fold_left_1286", 
                "camlGenarg", 
                "camlEvd__define_7097", 
                "camlArray__sub_1236", 
                "caml_sys_getenv", 
                "camlConstr__fold_5003", 
                "_ITM_registerTMCloneTable", 
                "camlMap__mem_1383", 
                "camlTacinterp", 
                "camlTerm__mkNamedLetIn_4849", 
                "caml_exn_Invalid_argument", 
                "camlCErrors__anomaly_1311", 
                "camlCList__firstn_2298", 
                "caml_notequal", 
                "camlPp__glue_1211", 
                "camlNames__43", 
                "camlConstr__eq_constr_5406", 
                "camlUnification__41", 
                "camlGenarg__register0_7996", 
                "camlPrinter", 
                "camlMltop__add_known_module_3856", 
                "caml_exn_Not_found", 
                "camlBytes__make_1216", 
                "camlFtactic__return_1385", 
                "camlConstrintern__intern_gen_inner_13375", 
                "camlNames__of_string_1937", 
                "camlCErrors", 
                "camlMap__fold_1463", 
                "camlList__fold_right_1292", 
                "camlPcoq__extend_22173", 
                "camlPp__string_of_ppcmds_1866", 
                "camlTactics__convert_concl_inner_30043", 
                "camlFtactic__run_2598", 
                "camlEvd__create_evar_defs_6931", 
                "camlPervasives__$5e_1117", 
                "camlMap__bindings_aux_1658", 
                "camlPervasives", 
                "camlTerm__destEvar_4654", 
                "camlTacinterp__interp_genarg_12959", 
                "camlSet__singleton_1291", 
                "camlPervasives__string_of_int_1150", 
                "camlBytes__sub_1234", 
                "camlPp__hov_1649", 
                "camlConstr__map_5086", 
                "camlCErrors__error_1336", 
                "camlTacintern__intern_constr_gen_5801", 
                "camlReductionops__stack_red_of_state_red_8478", 
                "caml_alloc1", 
                "camlPrinter__pr_lglob_constr_env_5922", 
                "camlEvarutil__clear_hyps_in_evi_8260", 
                "caml_exn_Assert_failure", 
                "camlList__nth_1219", 
                "camlPp__prlist_sep_lastsep_1921", 
                "camlVars__closedn_3615", 
                "camlArray__iter_1252", 
                "__gmon_start__", 
                "camlPrintf__sprintf_1315", 
                "camlList__iter_1272", 
                "camlEvd__clear_metas_7714", 
                "camlPrinter__pr_constr_5530", 
                "caml_young_limit", 
                "camlGoal__mk_goal_2462", 
                "caml_allocN", 
                "camlCLexer", 
                "camlRecordops__find_projection_nparams_5352", 
                "camlCList__filter_1618", 
                "camlPcoq__new_entry_22377", 
                "camlEvd__add_with_name_inner_9862", 
                "camlProofview__of_tactic_6689", 
                "camlOption", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlPpconstr", 
                "camlPervasives__prerr_endline_1325", 
                "camlEvd__set_universe_context_7072", 
                "camlLoc__3", 
                "camlGlobal__assert_not_parsing_3775", 
                "camlPcoq", 
                "camlTacinterp__cast_10828", 
                "caml_string_equal", 
                "camlCArray__for_all2_1397", 
                "camlTypeclasses__resolve_typeclasses_inner_8774", 
                "camlGenarg__create_arg_7984", 
                "camlEvarutil", 
                "camlRecordops__lookup_canonical_conversion_6631", 
                "camlTacenv__register_ml_tactic_inner_5972", 
                "camlSet__add_1282", 
                "camlPp__str_1375", 
                "camlCString__3", 
                "camlPervasives__failwith_1005", 
                "camlEvd__evar_filtered_env_5663", 
                "camlCArray__map_left_1606", 
                "camlRefiner__pf_env_2311", 
                "camlCArray__cons_1446", 
                "camlUtil", 
                "caml_backtrace_pos", 
                "camlContext__fold_inside_4847", 
                "camlDyn__create_1474", 
                "camlPp__3", 
                "camlFtactic__nf_s_enter_2446", 
                "camlArray__map_1261", 
                "camlCErrors__errorlabstrm_1338", 
                "camlEvd__find_6390", 
                "camlTypeclasses", 
                "camlCLexer__terminal_19701", 
                "caml_exn_Failure", 
                "camlCList__filter_with_2250", 
                "camlTacsubst__subst_glob_constr_and_expr_2405", 
                "camlTacintern", 
                "caml_fresh_oo_id", 
                "camlTerm__mkNamedProd_4834", 
                "camlCErrors__noncritical_1426", 
                "camlEvd__meta_declare_inner_10207", 
                "camlPp__6", 
                "camlEvd__remove_6381", 
                "camlNames__of_string_soft_1940", 
                "camlCArray__chop_1546", 
                "camlProofview__tactic_6596", 
                "camlTermops__occur_existential_6202", 
                "camlEvd__merge_universe_context_7069", 
                "camlEvar", 
                "camlSorts__family_1715", 
                "camlCErrors__user_err_loc_1346", 
                "camlGeninterp__val_tag_3844", 
                "caml_alloc3", 
                "camlEvarconv__solve_unif_constraints_with_heuristics_inner_11905", 
                "camlPrinter__pr_glob_constr_env_5975", 
                "caml_make_vect", 
                "camlEvarutil__nf_evar_5841", 
                "camlMltop__declare_cache_obj_3915", 
                "camlPp", 
                "_ITM_deregisterTMCloneTable", 
                "camlCList__chop_2277", 
                "caml_ml_array_bound_error", 
                "camlDyn__repr_1602", 
                "camlPervasives__max_1030", 
                "camlEvarutil__nf_evar_info_6135", 
                "camlEvd__existential_opt_value_6448", 
                "camlSet__for_all_1473", 
                "camlArray__append_1232", 
                "camlPptactic__declare_extra_genarg_pprule_5591", 
                "camlProofview", 
                "camlRefiner__goal_goal_list_2436", 
                "camlConstr__mkRel_4620", 
                "camlContext__lookup_4837", 
                "camlEvd__mem_6396", 
                "__cxa_finalize", 
                "camlNames__equal_3394", 
                "camlReduction", 
                "camlConstrarg", 
                "camlTacmach__of_old_5019", 
                "camlTacentries__create_ltac_quotation_8901", 
                "caml_c_call", 
                "camlGenintern", 
                "camlInt__find_1843", 
                "caml_call_gc", 
                "camlPretype_errors", 
                "camlGoal__partial_solution_to_4095", 
                "camlNames", 
                "camlList__length_aux_1204", 
                "camlVars__subst1_3772", 
                "camlConstr__mkConst_4816", 
                "camlReductionops", 
                "camlEvd__evars_of_term_7158", 
                "camlTacenv__register_ltac_5535", 
                "caml_modify", 
                "camlArray__of_list_1294", 
                "camlConstr__mkApp_4803", 
                "camlUtil__stream_nth_2974", 
                "camlPp__ws_1398", 
                "caml_equal", 
                "camlPp__strbrk_1420", 
                "camlMap__find_1303", 
                "caml_young_ptr", 
                "camlUnification__w_unify_inner_11726", 
                "camlTermops__map_constr_with_binders_left_to_right_5969", 
                "camlGeninterp__register_val0_3883", 
                "camlBytes__copy_1226", 
                "camlConstr__18", 
                "camlGeninterp__inject_3814", 
                "camlTacentries__add_ml_tactic_notation_8862", 
                "camlTacmach", 
                "camlList__mem_1371", 
                "camlNames__44", 
                "camlList__1", 
                "camlReduction__gen_conv_6148", 
                "caml_alloc2", 
                "camlFeedback", 
                "camlCompat__to_coqloc_3266", 
                "camlPcoq__grammar_extend_22116", 
                "camlGeninterp", 
                "camlTerm__destLetIn_4634", 
                "camlGlobal", 
                "camlTerm", 
                "camlEvarconv__the_conv_x_inner_11928", 
                "unix_gettimeofday", 
                "camlPre_env__push_rel_4645"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Classical_sets_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Classical_sets.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301", 
                "_ITM_registerTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FMaps_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FMaps.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Init/_coq-native/NCoq_Init_Tauto_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Init/.coq-native/NCoq_Init_Tauto.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Peano/_coq-native/NCoq_Numbers_Natural_Peano_NPeano_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Peano/.coq-native/NCoq_Numbers_Natural_Peano_NPeano.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Init_Datatypes", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_snd_3023", 
                "caml_curry5", 
                "caml_young_limit", 
                "caml_curry6", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_const_6301", 
                "caml_apply3", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rect_2885", 
                "camlNCoq_Init_Wf__const_NCoq_Init_Wf_well_founded_2736", 
                "camlNCoq_Arith_PeanoNat", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_PER_2889", 
                "camlNCoq_Relations_Relation_Definitions__const_NCoq_Relations_Relation_Definitions_relation_2654", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_rect_2887", 
                "camlNCoq_Init_Nat__x_mul_27_2706", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Program_Basics", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "caml_curry7", 
                "camlNCoq_Init_Nat__x_sub_45_2728", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_CompSpec2Type_3465", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "caml_curry2", 
                "camlNCoq_Init_Nat", 
                "camlNCoq_Init_Peano", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Classes_Morphisms", 
                "caml_alloc1", 
                "caml_apply11", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_equivalence_2978", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rec_2894", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNativevalues__str_decode_5828", 
                "caml_apply2", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_relation_equivalence_3279", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "caml_apply10", 
                "caml_alloc3", 
                "caml_curry3", 
                "camlNCoq_Init_Peano__const_NCoq_Init_Peano_lt_2785", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "caml_allocN", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "camlNCoq_Bool_Bool__const_NCoq_Bool_Bool_iff_reflect_3024", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_apply4", 
                "camlNCoq_Init_Wf", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "camlNCoq_Classes_Morphisms_Prop", 
                "caml_call_gc", 
                "caml_apply5", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_andb_2713"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_Classical_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_Classical.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Cyclic/Int31/_coq-native/NCoq_Numbers_Cyclic_Int31_Int31_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Cyclic/Int31/.coq-native/NCoq_Numbers_Cyclic_Int31_Int31.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__decomp_uint_5900", 
                "caml_alloc3", 
                "camlNCoq_Init_Datatypes", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativevalues__diveucl_5707", 
                "__cxa_finalize", 
                "caml_call_gc", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lor_4331", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType", 
                "camlNativevalues__compare_5770", 
                "camlNativevalues__div21_5718", 
                "camlNativevalues__sub_5581", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlNativevalues__is_accu_5182", 
                "camlNativevalues__no_check_div21_5711", 
                "camlNativevalues__mul_5588", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751", 
                "camlNativevalues__subc_5667", 
                "camlNativevalues__l_and_5623", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mulc_5698", 
                "__gmon_start__", 
                "camlNativevalues__mk_sort_accu_4950", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_div_eucl_3311", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNativecode__get_value_6218", 
                "camlNativevalues__l_xor_5630", 
                "camlUint31", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lxor_4409", 
                "camlNativevalues__add_5574", 
                "camlNativevalues__no_check_addc_5655", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_mul_2790", 
                "caml_alloc1", 
                "caml_young_limit", 
                "camlNativevalues__addc_5659", 
                "camlNativevalues__no_check_compare_5766", 
                "camlNativevalues__no_check_mulc_5695", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Nat__x_mul_27_2706", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_compare_2865", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_land_4355", 
                "camlNCoq_ZArith_BinInt", 
                "camlNativevalues__no_check_subc_5663", 
                "camlNativevalues__mk_I31_accu_5836", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_div_3330", 
                "caml_allocN"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/MSets/_coq-native/NCoq_MSets_MSetRBT_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/MSets/.coq-native/NCoq_MSets_MSetRBT.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_curry2", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_apply2", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Logic", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_name_6297", 
                "caml_young_limit", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_ind_accu_4947", 
                "caml_call_gc", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNativecode__get_const_6301"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_WKL_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_WKL.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_call_gc", 
                "caml_curry2", 
                "camlNativecode__get_name_6297", 
                "camlNativecode__get_sort_6293", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Logic", 
                "caml_curry6", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "caml_alloc3", 
                "caml_curry7", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_apply2", 
                "camlNativecode__get_match_6305", 
                "caml_apply6", 
                "camlNCoq_Init_Datatypes", 
                "caml_curry3", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_length_3112", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_const_6301", 
                "caml_curry8", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_curry5", 
                "caml_apply3", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_sort_accu_4950", 
                "caml_apply5", 
                "camlNCoq_Logic_WeakFan__x_approx_44_2763", 
                "caml_young_limit", 
                "camlNativevalues__mk_ind_accu_4947"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Powerset_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Powerset.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__cxa_finalize", 
                "camlNCoq_Sets_Ensembles__const_NCoq_Sets_Ensembles_Included_2688", 
                "caml_young_limit", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828", 
                "caml_call_gc", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Sets_Ensembles", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_constant_accu_4657"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Lists/_coq-native/NCoq_Lists_ListDec_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Lists/.coq-native/NCoq_Lists_ListDec.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Logic_Decidable__const_NCoq_Logic_Decidable_decidable_2654", 
                "caml_call_gc", 
                "camlNCoq_Lists_List__const_NCoq_Lists_List_in_dec_2824", 
                "camlNativecode__get_const_6301", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_young_limit", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Lists_List", 
                "caml_curry2", 
                "caml_apply3"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_RList_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_RList.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Init_Logic", 
                "camlNCoq_Init_Nat__const_NCoq_Init_Nat_pred_2665", 
                "_ITM_deregisterTMCloneTable", 
                "caml_young_limit", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Reals_RIneq", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rabs_2732", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rmin_2660", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rdiv_2704", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_allocN", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rminus_2701", 
                "__gmon_start__", 
                "camlNativecode__get_ind_6309", 
                "camlNativecode__get_match_6305", 
                "caml_alloc3", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rmax_2709", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rle_2695", 
                "camlNativecode__get_const_6301", 
                "caml_call_gc", 
                "camlNativecode__get_sort_6293", 
                "__cxa_finalize", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativevalues__mk_ind_accu_4947", 
                "caml_alloc1", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/NArith/_coq-native/NCoq_NArith_BinNat_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/NArith/.coq-native/NCoq_NArith_BinNat.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "caml_curry4", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__str_decode_5828", 
                "caml_curry6", 
                "camlNCoq_PArith_BinPos__x_square_343_3047", 
                "camlNCoq_Numbers_BinNums__const_NCoq_Numbers_BinNums_N_rec_2734", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_PArith_BinPos__x_testbit_832_3913", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_Classes_Morphisms", 
                "camlNCoq_PArith_BinPos__x_of_succ_nat_874_3979", 
                "camlNCoq_PArith_BinPos__x_testbit_nat_807_3876", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_apply11", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Classes_Morphisms_Prop", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_PArith_BinPos__x_lor_676_3705", 
                "caml_apply10", 
                "camlNCoq_PArith_BinPos__x_peano_rect_1003_4250", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "camlNCoq_Init_Wf", 
                "camlNCoq_Program_Basics", 
                "caml_curry5", 
                "camlNCoq_PArith_BinPos__x_mul_313_2995", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_CompSpec2Type_3465", 
                "caml_curry2", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNCoq_PArith_BinPos__x_eqb_445_3384", 
                "camlNCoq_PArith_BinPos__x_ldiff_734_3780", 
                "camlNCoq_PArith_BinPos__x_land_704_3743", 
                "caml_alloc1", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_PER_2889", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_relation_equivalence_3279", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_Reflexive_2972", 
                "camlNCoq_PArith_BinPos__x_sqrtrem_494_3457", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_rect_2887", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rect_2885", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "caml_allocN", 
                "camlNCoq_Numbers_BinNums__const_NCoq_Numbers_BinNums_positive_rect_2699", 
                "camlNCoq_PArith_BinPos__x_size_nat_362_3082", 
                "camlNCoq_PArith_BinPos__x_succ_8_2676", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_eq_dec_4107", 
                "camlNCoq_PArith_BinPos", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_sumbool_rec_2969", 
                "camlNCoq_PArith_BinPos__x_add_67_2739", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_ggcd_3662", 
                "camlNCoq_PArith_BinPos__x_size_371_3096", 
                "caml_apply3", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "caml_apply2", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_pow_3032", 
                "caml_curry3", 
                "caml_apply4", 
                "camlNCoq_Bool_Bool__const_NCoq_Bool_Bool_iff_reflect_3024", 
                "camlNCoq_Relations_Relation_Definitions__const_NCoq_Relations_Relation_Definitions_relation_2654", 
                "camlNCoq_Init_Datatypes", 
                "caml_young_limit", 
                "caml_curry7", 
                "caml_call_gc", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_snd_3023", 
                "camlNCoq_PArith_BinPos__x_sub_mask_239_2946", 
                "caml_apply8", 
                "camlNCoq_Init_Wf__const_NCoq_Init_Wf_well_founded_2736", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_sqrt_3465", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_alloc3", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_equivalence_2978", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_iter_3024", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_shiftl_3832", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_pred_N_2796", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_to_nat_3949", 
                "camlNCoq_PArith_BinPos__x_lxor_762_3811", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_gcd_3532"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_WeakFan_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_WeakFan.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_sort_accu_4950", 
                "caml_call_gc", 
                "camlNativecode__get_const_6301", 
                "__gmon_start__", 
                "caml_alloc3", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_length_3112", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativecode__get_ind_6309", 
                "camlNativecode__get_sort_6293", 
                "caml_young_limit", 
                "camlNCoq_Init_Datatypes", 
                "camlNativecode__get_name_6297"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/NArith/_coq-native/NCoq_NArith_Nsqrt_def_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/NArith/.coq-native/NCoq_NArith_Nsqrt_def.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Bool/_coq-native/NCoq_Bool_BoolEq_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Bool/.coq-native/NCoq_Bool_BoolEq.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Init_Specif", 
                "caml_call_gc", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_curry5", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Init_Datatypes", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Logic", 
                "caml_young_limit", 
                "caml_curry7", 
                "caml_curry4", 
                "camlNCoq_Bool_Bool", 
                "caml_curry2", 
                "caml_apply2", 
                "camlNativevalues__mk_prod_accu_5119", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNativecode__get_name_6297", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_sym_2912", 
                "camlNativevalues__mk_sort_accu_4950", 
                "caml_apply3"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_SplitAbsolu_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_SplitAbsolu.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/Abstract/_coq-native/NCoq_Numbers_Integer_Abstract_ZMulOrder_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/Abstract/.coq-native/NCoq_Numbers_Integer_Abstract_ZMulOrder.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/NatInt/_coq-native/NCoq_Numbers_NatInt_NZGcd_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/NatInt/.coq-native/NCoq_Numbers_NatInt_NZGcd.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/extraction/_coq-native/NCoq_extraction_ExtrHaskellNatNum_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/extraction/.coq-native/NCoq_extraction_ExtrHaskellNatNum.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Int_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Int.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_gt_4423", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_ge_4429", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_le_4426", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_allocN", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Init_Specif", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_ZArith_BinInt", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_ltb_3080", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Numbers_BinNums", 
                "caml_young_limit", 
                "camlNativevalues__str_decode_5828", 
                "caml_call_gc", 
                "__gmon_start__", 
                "camlNCoq_Init_Logic", 
                "camlNativecode__get_match_6305", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Init_Datatypes"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/MSets/_coq-native/NCoq_MSets_MSetGenTree_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/MSets/.coq-native/NCoq_MSets_MSetGenTree.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828", 
                "__gmon_start__", 
                "__cxa_finalize", 
                "camlNativecode__get_const_6301", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Abstract/_coq-native/NCoq_Numbers_Natural_Abstract_NPow_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Abstract/.coq-native/NCoq_Numbers_Natural_Abstract_NPow.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/extraction/_coq-native/NCoq_extraction_ExtrOcamlIntConv_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/extraction/.coq-native/NCoq_extraction_ExtrOcamlIntConv.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_apply4", 
                "caml_apply3", 
                "caml_young_limit", 
                "camlNativevalues__str_decode_5828", 
                "caml_alloc1", 
                "camlNativecode__get_name_6297", 
                "caml_apply2", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_alloc3", 
                "caml_curry3", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_curry2", 
                "caml_allocN", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Numbers_BinNums", 
                "caml_call_gc"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/QArith/_coq-native/NCoq_QArith_Qring_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/QArith/.coq-native/NCoq_QArith_Qring.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Wellfounded/_coq-native/NCoq_Wellfounded_Union_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Wellfounded/.coq-native/NCoq_Wellfounded_Union.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_const_6301"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Init/_coq-native/NCoq_Init_Notations_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Init/.coq-native/NCoq_Init_Notations.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FMapAVL_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FMapAVL.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/extraction/_coq-native/NCoq_extraction_ExtrHaskellNatNum_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/extraction/.coq-native/NCoq_extraction_ExtrHaskellNatNum.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Vectors/_coq-native/NCoq_Vectors_Vector_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Vectors/.coq-native/NCoq_Vectors_Vector.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Arith_Plus__x_tail_plus_35_2786", 
                "camlNCoq_Vectors_VectorEq", 
                "camlNCoq_Arith_PeanoNat", 
                "__cxa_finalize", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_length_3112", 
                "camlNCoq_Vectors_VectorDef__const_NCoq_Vectors_VectorDef_hd_3002", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_andb_2713", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_Init_Logic", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "caml_call_gc", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Arith_Plus", 
                "camlNCoq_Arith_Gt", 
                "camlNCoq_Init_Peano__const_NCoq_Init_Peano_lt_2785", 
                "camlNCoq_Vectors_VectorDef__const_NCoq_Vectors_VectorDef_tl_3149", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Vectors_Fin__x_of_nat_lt_259_3075", 
                "camlNCoq_Init_Peano", 
                "camlNCoq_Vectors_VectorDef", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_sym_2912", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_rect_r_2969", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "camlNativecode__get_ind_6309", 
                "caml_alloc3", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_rect_2887", 
                "camlNCoq_Init_Nat__x_sub_45_2728", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rect_2885", 
                "camlNCoq_Vectors_VectorSpec", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Datatypes", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_rect_2680", 
                "camlNCoq_Arith_Minus", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Vectors_VectorDef__const_NCoq_Vectors_VectorDef_caseS_2897", 
                "camlNativevalues__is_accu_5182", 
                "camlNCoq_Init_Nat"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FMapInterface_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FMapInterface.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "camlNativecode__get_match_6305", 
                "caml_call_gc", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__mk_sw_accu_5114", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "caml_curry4", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlNativecode__get_name_6297", 
                "caml_curry2", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301", 
                "caml_apply4", 
                "caml_young_limit", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_alloc1", 
                "caml_curry3", 
                "caml_apply3"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Znumtheory_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Znumtheory.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_ind_6309", 
                "caml_apply3", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_Zplus_assoc_reverse_2716", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_gcd_4191", 
                "camlNativecode__get_name_6297", 
                "caml_apply4", 
                "camlNCoq_ZArith_Wf_Z", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751", 
                "caml_call_gc", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_Zred_factor0_2790", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Classes_Morphisms_Prop", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_and_ind_2720", 
                "camlNCoq_omega_OmegaLemmas", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_Zred_factor5_2854", 
                "caml_young_limit", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_eq_dec_4548", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_le_4426", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_ZArith_ZArith_dec__const_NCoq_ZArith_ZArith_dec_Z_lt_dec_2950", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_Zplus_comm_2711", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_Zopp_eq_mult_neg_1_2794", 
                "caml_curry2", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativevalues__str_decode_5828", 
                "caml_apply11", 
                "caml_curry4", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_mul_2790", 
                "camlNCoq_ZArith_auxiliary", 
                "caml_curry6", 
                "camlNCoq_ZArith_Zorder", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lt_4420", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_modulo_3338", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_OMEGA10_2734", 
                "caml_curry5", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlNativecode__get_match_6305", 
                "caml_apply8", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Classes_Morphisms", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "caml_apply2", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_OMEGA11_2744", 
                "camlNCoq_Program_Basics", 
                "caml_curry7", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_divide_4432", 
                "caml_curry3", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_OMEGA13_2776", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_ZArith_BinInt"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/BigN/_coq-native/NCoq_Numbers_Natural_BigN_Nbasic_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/BigN/.coq-native/NCoq_Numbers_Natural_BigN_Nbasic.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativecode__get_ind_6309", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_opp_2764", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_snd_3023", 
                "camlNCoq_PArith_BinPos__x_succ_8_2676", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Arith_PeanoNat", 
                "caml_young_limit", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "__gmon_start__", 
                "caml_call_gc", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "caml_alloc1", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_pred_2786", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_div_3330", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751", 
                "_ITM_registerTMCloneTable", 
                "caml_alloc3", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_mul_2790", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType__x_word_67_2796", 
                "camlNCoq_Init_Logic", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Numbers_BinNums"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_WKL_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_WKL.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Logic_WeakFan__x_approx_44_2763", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_length_3112", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "caml_call_gc", 
                "caml_alloc3", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__mk_sw_accu_5114", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativecode__get_sort_6293", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Datatypes", 
                "__cxa_finalize", 
                "camlNativecode__get_ind_6309", 
                "__gmon_start__", 
                "caml_young_limit", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativevalues__mk_sort_accu_4950"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/SpecViaZ/_coq-native/NCoq_Numbers_Integer_SpecViaZ_ZSig_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/SpecViaZ/.coq-native/NCoq_Numbers_Integer_SpecViaZ_ZSig.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_le_4426", 
                "__gmon_start__", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_call_gc", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lt_4420", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Numbers_BinNums", 
                "caml_young_limit", 
                "camlNativecode__get_const_6301"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zeuclid_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zeuclid.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_mul_2790", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_div_3330", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_modulo_3338", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_abs_3148", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Bool/_coq-native/NCoq_Bool_DecBool_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Bool/.coq-native/NCoq_Bool_DecBool.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_curry4", 
                "caml_young_limit", 
                "caml_curry2", 
                "camlNativecode__get_match_6305", 
                "caml_call_gc", 
                "caml_curry6", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_const_6301"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Abstract/_coq-native/NCoq_Numbers_Natural_Abstract_NStrongRec_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Abstract/.coq-native/NCoq_Numbers_Natural_Abstract_NStrongRec.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_ArithProp_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_ArithProp.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/MSets/_coq-native/NCoq_MSets_MSetWeakList_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/MSets/.coq-native/NCoq_MSets_MSetWeakList.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_BinList_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_BinList.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Lists_List__const_NCoq_Lists_List_hd_2662", 
                "__gmon_start__", 
                "camlNativevalues__mk_fix_accu_5185", 
                "__cxa_finalize", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Numbers_BinNums", 
                "_ITM_deregisterTMCloneTable", 
                "caml_call_gc", 
                "camlNativecode__get_const_6301", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Lists_List__const_NCoq_Lists_List_tl_2685", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_name_6297", 
                "caml_young_limit"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FMapPositive_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FMapPositive.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_call_gc", 
                "caml_curry2", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "camlNCoq_FSets_FMapInterface", 
                "camlNCoq_Lists_SetoidList", 
                "caml_alloc3", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_FSets_FMapInterface__const_NCoq_FSets_FMapInterface_Cmp_2654", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_allocN", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "caml_apply4", 
                "caml_young_limit", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_app_3138", 
                "camlNativecode__get_ind_6309", 
                "caml_curry8", 
                "caml_apply2", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_andb_2713", 
                "caml_curry7", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_snd_3023", 
                "camlNativevalues__is_accu_5182", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_sym_2912", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Structures_OrderedType__const_NCoq_Structures_OrderedType_Compare_rec_2714", 
                "caml_curry4", 
                "caml_curry10", 
                "camlNCoq_Structures_OrderedTypeEx", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_curry6", 
                "camlNCoq_Numbers_BinNums", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_apply5", 
                "caml_curry5", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_option_map_2933", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_apply3", 
                "caml_alloc1", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_sort_accu_4950", 
                "caml_curry3", 
                "camlNativecode__get_name_6297"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_Berardi_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_Berardi.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_ind_accu_4947", 
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_sort_6293", 
                "caml_call_gc", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__str_decode_5828", 
                "__cxa_finalize", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_young_limit", 
                "__gmon_start__", 
                "camlNCoq_Init_Logic", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativecode__get_ind_6309", 
                "camlNativecode__get_match_6305", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_prod_accu_5119"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Lists/_coq-native/NCoq_Lists_ListTactics_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Lists/.coq-native/NCoq_Lists_ListTactics.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/bin/coq_makefile": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/coq_makefile", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "getitimer", 
                "connect", 
                "floor", 
                "fchown", 
                "closedir", 
                "getpwnam", 
                "frexp", 
                "getprotobyname", 
                "gettimeofday", 
                "log10", 
                "__isoc99_sscanf", 
                "ceil", 
                "getegid", 
                "exit", 
                "__recv_chk", 
                "setsid", 
                "chdir", 
                "__stack_chk_fail", 
                "umask", 
                "__register_atfork", 
                "initgroups", 
                "fcntl", 
                "modf", 
                "fmod", 
                "ftruncate64", 
                "tcsetattr", 
                "setuid", 
                "getservbyname", 
                "execv", 
                "__libc_start_main", 
                "getprotobynumber", 
                "pthread_attr_setdetachstate", 
                "__gmon_start__", 
                "__fdelt_chk", 
                "strlen", 
                "sqrt", 
                "isatty", 
                "getgroups", 
                "fwrite", 
                "tcgetattr", 
                "realloc", 
                "execvp", 
                "atan", 
                "strerror", 
                "getsockname", 
                "sigemptyset", 
                "munmap", 
                "select", 
                "lseek64", 
                "kill", 
                "rewinddir", 
                "getenv", 
                "fputs", 
                "sigaddset", 
                "expm1", 
                "pthread_sigmask", 
                "dup3", 
                "malloc", 
                "gethostbyaddr_r", 
                "getcwd", 
                "pthread_mutex_unlock", 
                "getgid", 
                "memset", 
                "secure_getenv", 
                "cfgetispeed", 
                "__fprintf_chk", 
                "__read_chk", 
                "inet_ntop", 
                "__snprintf_chk", 
                "tcdrain", 
                "setsockopt", 
                "listen", 
                "getsockopt", 
                "freeaddrinfo", 
                "tanh", 
                "gethostname", 
                "pthread_cond_init", 
                "fmin", 
                "wait", 
                "gmtime", 
                "sigwait", 
                "opendir", 
                "setgroups", 
                "__sigsetjmp", 
                "getlogin", 
                "link", 
                "sigismember", 
                "pthread_cond_broadcast", 
                "cfgetospeed", 
                "tcflow", 
                "__longjmp_chk", 
                "cfsetispeed", 
                "fchmod", 
                "gethostbyname_r", 
                "pthread_mutex_init", 
                "getpeername", 
                "pthread_getspecific", 
                "memcmp", 
                "exp", 
                "pthread_exit", 
                "getuid", 
                "pthread_cond_destroy", 
                "sigpending", 
                "__xstat64", 
                "__lxstat64", 
                "bind", 
                "send", 
                "utimes", 
                "accept4", 
                "log1p", 
                "pthread_mutex_trylock", 
                "pow", 
                "pthread_create", 
                "mmap64", 
                "getnameinfo", 
                "tcsendbreak", 
                "getrusage", 
                "fork", 
                "system", 
                "tcflush", 
                "getaddrinfo", 
                "mkdir", 
                "pthread_join", 
                "localtime", 
                "write", 
                "getpwuid", 
                "open64", 
                "strtod", 
                "sinh", 
                "sendto", 
                "shutdown", 
                "geteuid", 
                "waitpid", 
                "sigaltstack", 
                "symlink", 
                "nice", 
                "sin", 
                "calloc", 
                "mktime", 
                "socket", 
                "acos", 
                "sigprocmask", 
                "truncate64", 
                "getpid", 
                "close", 
                "pthread_attr_init", 
                "rename", 
                "readlink", 
                "setgid", 
                "getgrgid", 
                "dlerror", 
                "atan2", 
                "getservbyport", 
                "strtol", 
                "pthread_mutex_lock", 
                "chown", 
                "pthread_setspecific", 
                "dlsym", 
                "execve", 
                "sigdelset", 
                "free", 
                "tan", 
                "putenv", 
                "chroot", 
                "asin", 
                "time", 
                "unlink", 
                "hypot", 
                "strnlen", 
                "rmdir", 
                "sigsuspend", 
                "__errno_location", 
                "pipe2", 
                "socketpair", 
                "sigfillset", 
                "pthread_cond_signal", 
                "pthread_mutex_destroy", 
                "pthread_cond_wait", 
                "fputc", 
                "setitimer", 
                "strcmp", 
                "dlclose", 
                "memmove", 
                "pthread_key_create", 
                "ldexp", 
                "__fxstat64", 
                "getrlimit64", 
                "log", 
                "getgrnam", 
                "getppid", 
                "sigaction", 
                "__memcpy_chk", 
                "inet_pton", 
                "mkfifo", 
                "__recvfrom_chk", 
                "abort", 
                "memcpy", 
                "read", 
                "cos", 
                "readdir64", 
                "dlopen", 
                "cosh", 
                "__vsnprintf_chk", 
                "access", 
                "nanosleep", 
                "alarm", 
                "fflush", 
                "cfsetospeed"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Relations_2_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Relations_2.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_curry4", 
                "caml_curry8", 
                "caml_curry5", 
                "camlNCoq_Init_Logic", 
                "caml_apply7", 
                "caml_apply2", 
                "caml_call_gc", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_curry7", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_apply6", 
                "caml_curry6", 
                "caml_young_limit", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_ind_accu_4947", 
                "caml_apply3", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_apply4", 
                "caml_curry3", 
                "camlNativecode__get_name_6297", 
                "caml_curry2", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_Field_tac_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_Field_tac.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/micromega/_coq-native/NCoq_micromega_Env_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/micromega/.coq-native/NCoq_micromega_Env.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_PArith_BinPos__x_add_67_2739", 
                "caml_curry2", 
                "caml_curry3", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_young_limit", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_PArith_BinPos", 
                "camlNCoq_Numbers_BinNums", 
                "caml_curry4", 
                "camlNativecode__get_name_6297"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/NArith/_coq-native/NCoq_NArith_Nnat_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/NArith/.coq-native/NCoq_NArith_Nnat.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/Abstract/_coq-native/NCoq_Numbers_Integer_Abstract_ZPow_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/Abstract/.coq-native/NCoq_Numbers_Integer_Abstract_ZPow.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/micromega/_coq-native/NCoq_micromega_QMicromega_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/micromega/.coq-native/NCoq_micromega_QMicromega.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_QArith_QArith_base", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qplus_2748", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_cnf_normalise_4388", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qopp_2754", 
                "caml_allocN", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_eval_nformula_3176", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_micromega_RingMicromega", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qeq_2679", 
                "caml_curry3", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_micromega_Tauto__const_NCoq_micromega_Tauto_tauto_checker_3468", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_cnf_negate_4442", 
                "camlNCoq_setoid_ring_Ring_theory", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qle_2682", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_check_normalised_formulas_4068", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_pow_N_2736", 
                "camlNativecode__get_name_6297", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_micromega_EnvRing__const_NCoq_micromega_EnvRing_PEeval_4995", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_curry2", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_NFormula_3132", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qlt_2685", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_check_inconsistent_4051", 
                "caml_young_limit", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_nformula_plus_nformula_3463", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qpower_2872", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_of_N_3193", 
                "caml_call_gc", 
                "caml_alloc3", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_micromega_EnvRing", 
                "camlNCoq_micromega_Env__const_NCoq_micromega_Env_Env_2654", 
                "caml_alloc1", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qmult_2751", 
                "caml_apply2"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Abstract/_coq-native/NCoq_Numbers_Natural_Abstract_NMulOrder_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Abstract/.coq-native/NCoq_Numbers_Natural_Abstract_NMulOrder.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_JMeq_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_JMeq.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_young_limit", 
                "caml_call_gc", 
                "camlNativecode__get_ind_6309"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Binary/_coq-native/NCoq_Numbers_Natural_Binary_NBinary_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Binary/.coq-native/NCoq_Numbers_Natural_Binary_NBinary.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_snd_3023", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Classes_Morphisms", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_pred_N_2796", 
                "caml_young_limit", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_PArith_BinPos__x_size_371_3096", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_PArith_BinPos__x_eqb_445_3384", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "caml_alloc3", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Bool_Bool__const_NCoq_Bool_Bool_iff_reflect_3024", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_shiftl_3832", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "caml_call_gc", 
                "camlNCoq_PArith_BinPos__x_square_343_3047", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Numbers_BinNums__const_NCoq_Numbers_BinNums_positive_rect_2699", 
                "__cxa_finalize", 
                "camlNCoq_PArith_BinPos__x_size_nat_362_3082", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_alloc1", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_CompSpec2Type_3465", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_Numbers_BinNums__const_NCoq_Numbers_BinNums_N_rec_2734", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlNCoq_PArith_BinPos__x_testbit_nat_807_3876", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlNCoq_PArith_BinPos__x_mul_313_2995", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_rect_2887", 
                "camlNCoq_Program_Basics", 
                "camlNCoq_NArith_BinNat", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_Reflexive_2972", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_ggcd_3662", 
                "__gmon_start__", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNCoq_PArith_BinPos__x_lor_676_3705", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rect_2885", 
                "camlNCoq_Relations_Relation_Definitions__const_NCoq_Relations_Relation_Definitions_relation_2654", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_PArith_BinPos__x_lxor_762_3811", 
                "camlNCoq_PArith_BinPos__x_peano_rect_1003_4250", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_sqrt_3465", 
                "camlNCoq_PArith_BinPos__x_ldiff_734_3780", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_gcd_3532", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Init_Wf", 
                "camlNCoq_PArith_BinPos__x_add_67_2739", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_PArith_BinPos__x_testbit_832_3913", 
                "camlNCoq_PArith_BinPos__x_of_succ_nat_874_3979", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_pow_3032", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_iter_3024", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_relation_equivalence_3279", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_PER_2889", 
                "camlNCoq_PArith_BinPos__x_sub_mask_239_2946", 
                "caml_allocN", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_to_nat_3949", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_eq_dec_4107", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_PArith_BinPos__x_sqrtrem_494_3457", 
                "camlNCoq_Init_Wf__const_NCoq_Init_Wf_well_founded_2736", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_Classes_Morphisms_Prop", 
                "camlNCoq_PArith_BinPos", 
                "camlNCoq_PArith_BinPos__x_land_704_3743", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_equivalence_2978"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Sqrt_reg_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Sqrt_reg.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_Epsilon_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_Epsilon.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_call_gc", 
                "caml_young_limit", 
                "camlNCoq_Init_Logic", 
                "caml_curry3", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_proj1_sig_2802", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_name_6297", 
                "caml_apply2", 
                "caml_apply3", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_const_6301", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_proj2_sig_2816"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Classes/_coq-native/NCoq_Classes_CMorphisms_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Classes/.coq-native/NCoq_Classes_CMorphisms.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativecode__get_name_6297", 
                "caml_young_limit", 
                "camlNativecode__get_const_6301", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_ind_accu_4947", 
                "__gmon_start__", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues", 
                "caml_call_gc", 
                "caml_ml_array_bound_error", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_make_array", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "camlNativevalues__str_decode_5828", 
                "caml_c_call", 
                "camlNCoq_Classes_CRelationClasses__const_NCoq_Classes_CRelationClasses_relation_equivalence_3175", 
                "caml_allocN"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FSets_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FSets.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Program/_coq-native/NCoq_Program_Tactics_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Program/.coq-native/NCoq_Program_Tactics.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable", 
                "caml_call_gc", 
                "__gmon_start__", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828", 
                "caml_young_limit"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Classes/_coq-native/NCoq_Classes_CEquivalence_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Classes/.coq-native/NCoq_Classes_CEquivalence.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativecode__get_match_6305", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_level_6321", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_call_gc", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_c_call", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_projT1_2862", 
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_const_6301", 
                "__cxa_finalize", 
                "camlNCoq_Classes_CRelationClasses__const_NCoq_Classes_CRelationClasses_Equivalence_Symmetric_2967", 
                "caml_make_array", 
                "caml_young_ptr", 
                "caml_young_limit", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_Classes_CMorphisms__const_NCoq_Classes_CMorphisms_respectful_2728"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Cyclic/Int31/_coq-native/NCoq_Numbers_Cyclic_Int31_Int31_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Cyclic/Int31/.coq-native/NCoq_Numbers_Cyclic_Int31_Int31.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_value_6218", 
                "caml_curry26", 
                "camlNativevalues__add_5574", 
                "caml_alloc1", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__no_check_mulc_5695", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativevalues__mk_I31_accu_5836", 
                "caml_curry6", 
                "caml_curry21", 
                "camlNativevalues__no_check_addc_5655", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_compare_2865", 
                "camlNativevalues__no_check_subc_5663", 
                "caml_curry28", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "caml_curry22", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_div_3330", 
                "camlNativevalues__l_xor_5630", 
                "caml_curry12", 
                "caml_curry20", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lor_4331", 
                "caml_curry27", 
                "caml_curry11", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__str_decode_5828", 
                "caml_curry4", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_div_eucl_3311", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__subc_5667", 
                "caml_curry17", 
                "caml_curry8", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_mul_2790", 
                "camlNativevalues__no_check_div21_5711", 
                "camlNativevalues__no_check_compare_5766", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751", 
                "camlNativevalues__sub_5581", 
                "camlNativevalues__diveucl_5707", 
                "caml_young_limit", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_apply31", 
                "caml_curry15", 
                "camlNCoq_Init_Nat__x_mul_27_2706", 
                "caml_curry23", 
                "caml_apply2", 
                "caml_curry13", 
                "caml_curry14", 
                "caml_curry10", 
                "caml_alloc3", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lxor_4409", 
                "camlNativevalues__compare_5770", 
                "camlNativevalues__addc_5659", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType", 
                "caml_curry3", 
                "caml_curry2", 
                "caml_curry5", 
                "camlNativevalues__div21_5718", 
                "camlNativevalues__mulc_5698", 
                "caml_apply4", 
                "camlNativecode__get_sort_6293", 
                "caml_call_gc", 
                "camlUint31", 
                "camlNCoq_Init_Datatypes", 
                "caml_curry7", 
                "caml_apply5", 
                "caml_allocN", 
                "camlNCoq_Numbers_BinNums", 
                "caml_curry16", 
                "caml_curry29", 
                "caml_curry31", 
                "camlNativecode__get_match_6305", 
                "caml_curry24", 
                "camlNativevalues__mul_5588", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__l_and_5623", 
                "camlNCoq_ZArith_BinInt", 
                "caml_curry18", 
                "caml_apply3", 
                "caml_curry9", 
                "caml_curry30", 
                "camlNativevalues__is_accu_5182", 
                "camlNativevalues__decomp_uint_5900", 
                "caml_curry25", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_opp_2764", 
                "caml_curry19"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_R_Ifp_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_R_Ifp.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_opp_2764", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751", 
                "camlNCoq_Reals_Raxioms__const_NCoq_Reals_Raxioms_IZR_2729", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rminus_2701", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_value_6218"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_EqdepFacts_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_EqdepFacts.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_young_limit", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_call_gc", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__mk_sort_accu_4950", 
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_match_6305", 
                "__gmon_start__", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_projT1_2862", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_proj1_sig_2802", 
                "__cxa_finalize", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNCoq_Init_Specif", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_rect_2887", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_proj2_sig_2816", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativecode__get_value_6218", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_prod_accu_5119", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_ExtensionalityFacts_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_ExtensionalityFacts.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_name_6297", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Init_Logic", 
                "camlNativecode__get_ind_6309", 
                "_ITM_registerTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_call_gc", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__str_decode_5828", 
                "__cxa_finalize", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_ind_accu_4947", 
                "caml_young_limit", 
                "camlNativevalues__mk_prod_accu_5119"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Relations/_coq-native/NCoq_Relations_Relation_Operators_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Relations/.coq-native/NCoq_Relations_Relation_Operators.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_apply2", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Logic", 
                "caml_curry5", 
                "camlNativevalues__str_decode_5828", 
                "caml_apply4", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_proj1_sig_2802", 
                "camlNativecode__get_match_6305", 
                "caml_curry8", 
                "caml_curry9", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_app_3138", 
                "caml_curry10", 
                "camlNativecode__get_name_6297", 
                "caml_apply5", 
                "camlNCoq_Init_Specif", 
                "caml_call_gc", 
                "caml_curry3", 
                "caml_apply7", 
                "caml_curry2", 
                "caml_apply3", 
                "caml_curry11", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_curry6", 
                "camlNativevalues__mk_sw_accu_5114", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_curry7", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_young_limit", 
                "camlNativecode__get_ind_6309", 
                "caml_curry4"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_Classical_Prop_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_Classical_Prop.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/nsatz/nsatz_plugin_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/nsatz/nsatz_plugin.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlConstr__mkRel_4620", 
                "camlBytes__make_1216", 
                "camlBig_int__compare_big_int_1284", 
                "camlChar__chr_1206", 
                "camlHashtbl__remove_1406", 
                "camlBig_int__int_of_big_int_1386", 
                "camlList__nth_1219", 
                "camlNum__compare_num_1597", 
                "camlArray__iter_1252", 
                "caml_string_equal", 
                "camlList__find_all_1437", 
                "camlFormat__pp_open_box_gen_1444", 
                "camlPervasives__$5e_1117", 
                "camlNames__of_string_soft_1940", 
                "camlArray__of_list_1294", 
                "camlCArray__for_all2_1397", 
                "camlHashtbl__create_inner_2188", 
                "camlFormat__printf_1898", 
                "camlString__contains_from_1375", 
                "caml_backtrace_pos", 
                "camlNum", 
                "camlPervasives__$40_1166", 
                "camlNum__quo_num_1495", 
                "camlList__fold_left_1286", 
                "camlArray__iteri_1275", 
                "caml_young_ptr", 
                "camlNum__int_of_num_1640", 
                "camlBig_int__quomod_big_int_1354", 
                "camlNum__num_of_string_1677", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlUtil", 
                "__gmon_start__", 
                "camlHashtbl__6", 
                "camlList__rev_append_1236", 
                "caml_call_gc", 
                "caml_equal", 
                "camlArray__append_1232", 
                "camlCList__concat_1574", 
                "camlList__exists_1350", 
                "camlTactics__generalize_21015", 
                "camlList__map_1248", 
                "camlRatio__normalize_ratio_1350", 
                "camlBig_int__minus_big_int_1280", 
                "camlPervasives__string_of_int_1150", 
                "camlFormat__sprintf_1911", 
                "camlBig_int__big_int_of_int_1331", 
                "camlList__merge_1468", 
                "camlHashtbl__find_1416", 
                "camlList__2", 
                "camlNum__mult_num_1443", 
                "caml_exn_Assert_failure", 
                "camlTacenv__register_ltac_5535", 
                "camlNum__num_of_big_int_1400", 
                "camlHashtbl__find_1621", 
                "camlBig_int", 
                "__cxa_finalize", 
                "caml_make_array", 
                "caml_fresh_oo_id", 
                "camlHashtbl__Make_1702", 
                "camlCErrors__noncritical_1426", 
                "caml_modify", 
                "camlHashtbl", 
                "camlArray__to_list_1285", 
                "camlHashtbl__add_1391", 
                "camlFormat__pp_print_string_1500", 
                "camlList__length_aux_1204", 
                "caml_ml_array_bound_error", 
                "camlFlags", 
                "camlFormat__pp_print_break_1542", 
                "camlNum__string_of_num_1675", 
                "camlCList__append_1547", 
                "camlList__fold_right_1292", 
                "camlLoc__3", 
                "camlList__iter_1272", 
                "camlString__concat_1300", 
                "camlHashtbl__clear_1343", 
                "camlList__map2_1298", 
                "camlNum__mod_num_1514", 
                "camlNum__ratio_of_num_1490", 
                "camlTacinterp", 
                "camlArray__mapi_1279", 
                "caml_int_of_string", 
                "camlTacenv__register_ml_tactic_inner_5972", 
                "camlList__for_all_1345", 
                "camlArray__fold_left_1304", 
                "camlHashtbl__add_1596", 
                "caml_allocN", 
                "camlNum__minus_num_1434", 
                "camlPervasives__failwith_1005", 
                "camlCList__map_1515", 
                "camlList__stable_sort_1482", 
                "camlPervasives", 
                "camlNum__big_int_of_num_1661", 
                "camlArray__fold_right_1310", 
                "caml_notequal", 
                "camlNum__add_num_1411", 
                "camlBytes__sub_1234", 
                "camlCList__for_all2eq_1968", 
                "camlMltop__add_known_module_3856", 
                "camlCErrors__error_1336", 
                "camlList__1", 
                "caml_raise_exn", 
                "caml_young_limit", 
                "camlBig_int__abs_big_int_1282", 
                "camlList__iter2_1319", 
                "camlConstr__mkApp_4803", 
                "caml_make_vect", 
                "camlFlags__if_verbose_1334", 
                "_ITM_registerTMCloneTable", 
                "camlNum__eq_num_1572", 
                "caml_exn_Not_found", 
                "caml_c_call", 
                "unix_gettimeofday", 
                "_ITM_deregisterTMCloneTable", 
                "camlPervasives__output_string_1213", 
                "camlFormat", 
                "camlConstr__eq_constr_5406", 
                "caml_ml_flush", 
                "camlNum__num_of_int_1646", 
                "caml_lessthan", 
                "camlTacinterp__lift_constr_tac_to_ml_tac_16054", 
                "camlCoqlib__coq_constant_5305", 
                "camlNames__of_string_1937", 
                "caml_hash", 
                "camlArray__map_1261", 
                "camlMltop__declare_cache_obj_3915", 
                "caml_int_compare", 
                "camlPervasives__max_1030", 
                "caml_exn_Failure"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Classes/_coq-native/NCoq_Classes_Morphisms_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Classes/.coq-native/NCoq_Classes_Morphisms.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativecode__get_ind_6309", 
                "__gmon_start__", 
                "__cxa_finalize", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_relation_equivalence_3279", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_const_6301", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNativevalues__str_decode_5828", 
                "caml_young_limit", 
                "caml_call_gc", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__mk_sw_accu_5114", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_ind_accu_4947"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Wf_Z_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Wf_Z.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativecode__get_name_6297", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "__cxa_finalize", 
                "camlNCoq_ZArith_Znat", 
                "camlNCoq_Arith_Wf_nat__const_NCoq_Arith_Wf_nat_well_founded_lt_compat_2717", 
                "caml_alloc1", 
                "caml_young_limit", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lt_4420", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_compare_2865", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_rect_2680", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_to_nat_3175", 
                "camlNCoq_ZArith_BinInt", 
                "_ITM_deregisterTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_const_6301", 
                "caml_call_gc", 
                "camlNCoq_Init_Peano__const_NCoq_Init_Peano_lt_2785", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Arith_Wf_nat", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_le_4426", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Wf__const_NCoq_Init_Wf_well_founded_induction_type_2740", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Abstract/_coq-native/NCoq_Numbers_Natural_Abstract_NMaxMin_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Abstract/.coq-native/NCoq_Numbers_Natural_Abstract_NMaxMin.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_ROrderedType_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_ROrderedType.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "__gmon_start__", 
                "caml_call_gc", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Init_Datatypes", 
                "caml_allocN", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_equivalence_2978", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "__cxa_finalize", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_sym_2912", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "camlNCoq_Reals_Raxioms", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_sort_6293", 
                "caml_young_limit", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_Init_Specif", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_prod_accu_5119", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zcomplements_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zcomplements.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Numbers_BinNums", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_name_6297", 
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_sort_accu_4950", 
                "__gmon_start__", 
                "caml_allocN", 
                "caml_alloc3", 
                "caml_young_limit", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751", 
                "caml_call_gc", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_match_6305", 
                "__cxa_finalize", 
                "camlNCoq_ZArith_BinInt", 
                "camlNativecode__get_sort_6293"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Infinite_sets_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Infinite_sets.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_young_limit", 
                "caml_curry5", 
                "caml_apply2", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_curry6", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301", 
                "caml_call_gc", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_curry2", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_curry3", 
                "camlNativecode__get_match_6305", 
                "caml_curry4"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/Abstract/_coq-native/NCoq_Numbers_Integer_Abstract_ZBase_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/Abstract/.coq-native/NCoq_Numbers_Integer_Abstract_ZBase.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/Abstract/_coq-native/NCoq_Numbers_Integer_Abstract_ZProperties_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/Abstract/.coq-native/NCoq_Numbers_Integer_Abstract_ZProperties.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_auxiliary_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_auxiliary.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_const_6301", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_constant_accu_4657", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zabs_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zabs.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_abs_3148", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Specif", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828", 
                "__cxa_finalize", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_opp_2764", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Numbers_BinNums", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_Diaconescu_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_Diaconescu.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Init_Datatypes", 
                "caml_young_limit", 
                "camlNativecode__get_name_6297", 
                "caml_call_gc", 
                "caml_curry3", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_apply3", 
                "camlNativecode__get_value_6218", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "camlNativevalues__mk_constant_accu_4657"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/QArith/_coq-native/NCoq_QArith_Qring_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/QArith/.coq-native/NCoq_QArith_Qring.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/MSets/_coq-native/NCoq_MSets_MSetInterface_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/MSets/.coq-native/NCoq_MSets_MSetInterface.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "_ITM_deregisterTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_constant_accu_4657", 
                "__gmon_start__", 
                "caml_call_gc", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNativecode__get_const_6301"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/micromega/micromega_plugin_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/micromega/micromega_plugin.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlMap__fun_2919", 
                "camlList__fold_right_1292", 
                "camlTacticals__tclFAIL_6486", 
                "camlSorts__is_prop_1706", 
                "camlUnix", 
                "caml_channel_descriptor", 
                "camlConstr__mkApp_4803", 
                "camlPervasives__output_string_1213", 
                "camlNum__float_of_num_1683", 
                "camlSet__add_1282", 
                "camlTacticals__tclTHENLIST_6759", 
                "caml_call_gc", 
                "camlNum__big_int_of_num_1661", 
                "camlSet__fun_2940", 
                "camlList__fold_left_1286", 
                "camlNum__floor_num_1486", 
                "camlCoqlib", 
                "caml_make_array", 
                "camlConstr__eq_constr_5406", 
                "camlHashtbl", 
                "camlArray__of_list_1294", 
                "camlRetyping__get_type_of_inner_6892", 
                "caml_alloc1", 
                "camlTacticals__tclTHENS_6750", 
                "caml_lessthan", 
                "camlList__partition_1445", 
                "camlConstrarg", 
                "camlList__find_1427", 
                "camlTactics__exact_check_15952", 
                "camlMap__iter_1434", 
                "camlNum__div_num_1470", 
                "caml_compare", 
                "camlHashtbl__create_inner_2188", 
                "camlList__length_aux_1204", 
                "camlBig_int__mult_big_int_1347", 
                "camlTacenv__register_ltac_5535", 
                "caml_alloc2", 
                "camlMap__find_1303", 
                "caml_float_compare_unboxed", 
                "camlPervasives__$40_1166", 
                "camlList__mapi_1254", 
                "camlUnix__create_process_1870", 
                "camlPervasives__max_1030", 
                "camlTacenv__register_ml_tactic_inner_5972", 
                "camlList__map_1248", 
                "camlBig_int__quomod_big_int_1354", 
                "camlConstr__mkRel_4620", 
                "caml_int_compare", 
                "caml_int_of_string", 
                "camlTactics__keep_16123", 
                "caml_exn_Division_by_zero", 
                "camlList__exists_1350", 
                "caml_exn_Not_found", 
                "caml_backtrace_pos", 
                "camlList__nth_1219", 
                "caml_modify", 
                "unix_close", 
                "caml_hash", 
                "camlTactics__change_concl_12672", 
                "camlTermops", 
                "caml_exn_Failure", 
                "camlPervasives__close_in_noerr_1297", 
                "camlHashtbl__iter_1474", 
                "camlList__rev_append_1236", 
                "camlMap__compare_1622", 
                "camlPrintf__sprintf_1315", 
                "camlSystem__is_in_system_path_3146", 
                "camlTermops__dependent_main_6634", 
                "camlPervasives__close_out_1236", 
                "caml_ml_open_descriptor_in", 
                "camlPervasives__min_1027", 
                "caml_equal", 
                "camlTerm__mkNamedLetIn_4849", 
                "unix_open", 
                "camlTacmach__pf_hyps_types_2812", 
                "camlList", 
                "camlEvd__find_6390", 
                "camlHashtbl__clear_1343", 
                "camlNum__add_num_1411", 
                "caml_fresh_oo_id", 
                "caml_ml_array_bound_error", 
                "camlNames__44", 
                "camlRefiner__pf_env_2311", 
                "caml_c_call", 
                "camlTerm__prodn_5084", 
                "camlPervasives", 
                "camlTacmach__of_old_5019", 
                "camlPervasives__output_value_1229", 
                "caml_exn_Assert_failure", 
                "camlNum__compare_num_1597", 
                "unix_lockf", 
                "camlReductionops__is_conv_inner_12022", 
                "camlTacinterp__tactic_of_value_12952", 
                "camlNum__mult_num_1443", 
                "camlNames__of_string_soft_1940", 
                "camlBig_int__add_big_int_1322", 
                "_ITM_deregisterTMCloneTable", 
                "camlGoptions__declare_option_3583", 
                "camlNames__of_string_1937", 
                "camlList__split_1454", 
                "camlBig_int__big_int_of_int_1331", 
                "unix_times", 
                "camlFlags", 
                "camlRetyping__get_sort_of_inner_6871", 
                "camlMap__map_1441", 
                "caml_ml_flush", 
                "camlUniverses__constr_of_global_6604", 
                "camlBig_int__power_big_int_positive_int_1471", 
                "camlBytes__copy_1226", 
                "camlTactics__generalize_21015", 
                "caml_exn_Invalid_argument", 
                "camlPervasives__$5e_1117", 
                "camlProofview__nf_enter_6485", 
                "camlSet__union_1384", 
                "camlBig_int__mult_int_big_int_1340", 
                "camlHashtbl__fold_1506", 
                "camlList__rev_map_1264", 
                "camlBytes__sub_1234", 
                "camlHashtbl__replace_1666", 
                "camlList__1", 
                "camlPervasives__failwith_1005", 
                "camlNum__ceiling_num_1557", 
                "camlList__combine_1461", 
                "camlNum__abs_num_1698", 
                "camlSet__elements_aux_1509", 
                "camlTacinterp", 
                "camlTactics", 
                "caml_young_limit", 
                "camlPrintf__fprintf_1294", 
                "caml_output_value", 
                "camlTacinterp__cast_10828", 
                "camlTactics__forward_20861", 
                "camlList__2", 
                "camlSet__fold_1466", 
                "camlSet__mem_1368", 
                "caml_exn_End_of_file", 
                "camlMap__remove_1424", 
                "camlList__find_all_1437", 
                "camlBig_int__minus_big_int_1280", 
                "camlProofview", 
                "camlNum__eq_num_1572", 
                "camlNum__minus_num_1434", 
                "camlCoqlib__40", 
                "unix_lseek", 
                "__cxa_finalize", 
                "camlList__map2_1298", 
                "camlLoc__3", 
                "unix_pipe", 
                "camlNum__mod_num_1514", 
                "caml_input_value", 
                "camlMltop__add_known_module_3856", 
                "unix_waitpid", 
                "camlPervasives__string_of_int_1150", 
                "camlList__iter_1272", 
                "camlHashtbl__Make_1702", 
                "camlCoqlib__gen_reference_in_modules_5387", 
                "caml_allocN", 
                "camlList__assoc_1381", 
                "camlTactics__fresh_id_in_env_8750", 
                "camlPp__str_1375", 
                "camlConstr", 
                "camlMap__add_1291", 
                "camlConstr__18", 
                "camlNum__string_of_num_1675", 
                "camlList__for_all_1345", 
                "camlTerm", 
                "camlPrintexc__to_string_1304", 
                "camlBig_int", 
                "camlCoq_config__32", 
                "camlNames", 
                "camlTacentries__add_ml_tactic_notation_8862", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlBig_int__gcd_big_int_1372", 
                "camlSet__remove_1375", 
                "caml_raise_exn", 
                "camlGoptions", 
                "camlLibnames__path_of_string_5131", 
                "camlList__stable_sort_1482", 
                "camlPervasives__invalid_arg_1007", 
                "camlList__mem_1371", 
                "camlNametab__locate_6151", 
                "camlNum", 
                "__gmon_start__", 
                "camlMltop__declare_cache_obj_3915", 
                "camlHashtbl__find_1621", 
                "camlMap__fold_1463", 
                "camlSet__singleton_1291", 
                "camlHashtbl__add_1596", 
                "camlHashtbl__6", 
                "_ITM_registerTMCloneTable", 
                "camlCoqlib__24", 
                "camlFilename", 
                "caml_ml_open_descriptor_out", 
                "caml_young_ptr", 
                "camlTactics__introduction_inner_30019", 
                "camlBig_int__string_of_big_int_1426", 
                "camlBig_int__compare_big_int_1284", 
                "camlCErrors__noncritical_1426"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_Peano_dec_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_Peano_dec.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_value_6218", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Logic_Eqdep_dec", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Specif", 
                "caml_curry2", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_sumbool_ind_2965", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_young_limit", 
                "camlNCoq_Arith_PeanoNat", 
                "caml_apply2", 
                "caml_alloc1", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rec_2894", 
                "caml_call_gc", 
                "caml_apply3", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Arith_PeanoNat__const_NCoq_Arith_PeanoNat_Nat_eq_dec_3343", 
                "camlNCoq_Logic_Decidable__const_NCoq_Logic_Decidable_decidable_2654", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_Ring_theory_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_Ring_theory.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Classes_Morphisms", 
                "caml_curry24", 
                "caml_curry2", 
                "camlNativevalues__mk_ind_accu_4947", 
                "caml_young_limit", 
                "camlNativevalues__str_decode_5828", 
                "caml_curry3", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_curry19", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "camlNCoq_Init_Logic", 
                "caml_apply18", 
                "caml_curry5", 
                "camlNCoq_Numbers_BinNums", 
                "caml_apply6", 
                "caml_curry8", 
                "caml_curry4", 
                "caml_curry7", 
                "camlNCoq_Setoids_Setoid", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "caml_call_gc", 
                "camlNativevalues__mk_fix_accu_5185", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_Init_Datatypes", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_curry9", 
                "caml_apply2", 
                "camlNativecode__get_name_6297", 
                "caml_curry6", 
                "caml_curry14", 
                "caml_curry18", 
                "caml_curry17", 
                "camlNativecode__get_match_6305", 
                "camlNativecode__get_const_6301", 
                "camlNativecode__get_sort_6293", 
                "caml_apply4", 
                "caml_apply3"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FSetProperties_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FSetProperties.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/MSets/_coq-native/NCoq_MSets_MSetPositive_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/MSets/.coq-native/NCoq_MSets_MSetPositive.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Init_Datatypes", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_PArith_BinPos", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "caml_call_gc", 
                "__gmon_start__", 
                "camlNativecode__get_ind_6309", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Program_Basics", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_alloc3", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "caml_alloc1", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_andb_2713", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_sym_2912", 
                "camlNCoq_Bool_Bool__const_NCoq_Bool_Bool_eqb_2776", 
                "_ITM_registerTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlNCoq_Structures_OrdersEx", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_rect_2887", 
                "camlNCoq_Classes_Morphisms_Prop", 
                "caml_allocN", 
                "camlNCoq_Classes_Morphisms", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_equivalence_2978", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNCoq_PArith_BinPos__x_eqb_445_3384", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_option_map_2933", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Numbers_BinNums", 
                "__cxa_finalize", 
                "camlNativevalues__is_accu_5182", 
                "camlNativecode__get_const_6301", 
                "caml_young_limit", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/micromega/_coq-native/NCoq_micromega_Psatz_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/micromega/.coq-native/NCoq_micromega_Psatz.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Binomial_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Binomial.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_call_gc", 
                "__cxa_finalize", 
                "caml_young_limit", 
                "camlNCoq_Arith_Factorial__x_fact_7_2674", 
                "camlNCoq_Reals_Rdefinitions", 
                "__gmon_start__", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Nat__x_sub_45_2728", 
                "camlNCoq_Init_Nat", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rdiv_2704", 
                "camlNCoq_Reals_Raxioms__x_INR_12_2722", 
                "camlNativecode__get_const_6301"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Alembert_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Alembert.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Init_Logic", 
                "camlNCoq_Init_Specif", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Reals_Raxioms", 
                "camlNCoq_Arith_Compare_dec__const_NCoq_Arith_Compare_dec_lt_eq_lt_dec_2692", 
                "camlNCoq_Reals_DiscrR", 
                "camlNCoq_Reals_Rbasic_fun", 
                "__gmon_start__", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rabs_2732", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_Reals_Rseries__const_NCoq_Reals_Rseries_Pser_2742", 
                "camlNCoq_Reals_Rseries__const_NCoq_Reals_Rseries_EUn_2681", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rminus_2701", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_of_nat_4068", 
                "camlNCoq_Init_Nat__x_sub_45_2728", 
                "caml_young_limit", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Reals_Raxioms__const_NCoq_Reals_Raxioms_is_upper_bound_2734", 
                "camlNCoq_Init_Nat", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNCoq_Reals_RIneq", 
                "camlNCoq_Reals_Rfunctions__x_sum_f_R0_41_2802", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_ex_ind_2830", 
                "camlNCoq_Reals_PartSum", 
                "__cxa_finalize", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "camlNCoq_Reals_Raxioms__x_INR_12_2722", 
                "camlNCoq_setoid_ring_ArithRing", 
                "camlNCoq_Init_Peano", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Reals_Rpow_def__x_pow_10_2677", 
                "camlNCoq_Reals_ArithProp", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Reals_Rseries", 
                "camlNCoq_Reals_Raxioms__const_NCoq_Reals_Raxioms_IZR_2729", 
                "camlNCoq_setoid_ring_Ring_tac", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_and_ind_2720", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_setoid_ring_RealField", 
                "camlNCoq_Reals_Rseries__const_NCoq_Reals_Rseries_Un_cv_2685", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rdiv_2704", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rle_2695", 
                "caml_call_gc", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Arith_PeanoNat", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNCoq_Reals_Rfunctions", 
                "camlNCoq_Arith_PeanoNat__x_max_119_2827", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Bool/_coq-native/NCoq_Bool_IfProp_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Bool/.coq-native/NCoq_Bool_IfProp.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_call_gc", 
                "caml_curry2", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_ind_6309", 
                "caml_curry3", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828", 
                "caml_young_limit", 
                "caml_curry4", 
                "camlNativecode__get_match_6305"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_Plus_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_Plus.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_apply3", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_rec_2685", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Init_Peano", 
                "caml_curry3", 
                "camlNCoq_Init_Peano__const_NCoq_Init_Peano_eq_add_S_2687", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_apply2", 
                "caml_young_limit", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNCoq_Init_Logic", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_call_gc", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_Init_Datatypes", 
                "camlNativecode__get_name_6297", 
                "caml_curry2", 
                "camlNativecode__get_value_6218", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_sort_6293", 
                "camlNativecode__get_match_6305", 
                "caml_alloc3"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_Compare_dec_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_Compare_dec.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Init_Peano", 
                "caml_apply4", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Peano__const_NCoq_Init_Peano_lt_2785", 
                "caml_curry3", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "caml_curry2", 
                "camlNCoq_Init_Logic", 
                "caml_apply3", 
                "camlNCoq_Arith_Le", 
                "camlNCoq_Arith_PeanoNat", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rec_2894", 
                "caml_apply5", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_sumbool_rec_2969", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_value_6218", 
                "caml_call_gc", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Init_Datatypes", 
                "camlNativecode__get_match_6305", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Arith_Gt", 
                "caml_curry4", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__str_decode_5828", 
                "caml_young_limit", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_rec_2685", 
                "camlNCoq_Init_Specif"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_R_sqrt_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_R_sqrt.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "camlNCoq_Reals_RIneq__const_NCoq_Reals_RIneq_nonzero_3060", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rle_2695", 
                "camlNativevalues__mk_sw_accu_5114", 
                "_ITM_registerTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rdiv_2704", 
                "camlNCoq_Reals_Rbasic_fun", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Reals_Rsqrt_def__const_NCoq_Reals_Rsqrt_def_Rsqrt_2819", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNativecode__get_match_6305", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Reals_RIneq", 
                "caml_young_limit", 
                "camlNativecode__get_const_6301", 
                "__gmon_start__", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FMapWeakList_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FMapWeakList.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Cos_plus_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Cos_plus.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "caml_call_gc", 
                "__gmon_start__", 
                "camlNCoq_Init_Nat__x_mul_27_2706", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNCoq_Arith_Factorial__x_fact_7_2674", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Reals_Raxioms__x_INR_12_2722", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rmax_2709", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rdiv_2704", 
                "caml_young_limit", 
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_value_6218", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Reals_Rpow_def__x_pow_10_2677", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Abstract/_coq-native/NCoq_Numbers_Natural_Abstract_NOrder_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Abstract/.coq-native/NCoq_Numbers_Natural_Abstract_NOrder.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/Binary/_coq-native/NCoq_Numbers_Integer_Binary_ZBinary_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/Binary/.coq-native/NCoq_Numbers_Integer_Binary_ZBinary.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_apply4", 
                "caml_curry5", 
                "caml_apply2", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_div2_up_3063", 
                "caml_alloc1", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "caml_apply3", 
                "camlNCoq_PArith_BinPos__x_size_371_3096", 
                "caml_apply8", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_eq_dec_4107", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_PER_2889", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_snd_3023", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_sumbool_rec_2969", 
                "camlNativecode__get_sort_6293", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "caml_apply10", 
                "camlNCoq_PArith_BinPos__x_ldiff_734_3780", 
                "caml_curry6", 
                "camlNCoq_PArith_BinPos__x_testbit_832_3913", 
                "camlNCoq_PArith_BinPos__x_eqb_445_3384", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_rect_2887", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_lor_3958", 
                "camlNCoq_PArith_BinPos__x_add_67_2739", 
                "caml_curry7", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_ggcd_3662", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_succ_pos_2689", 
                "camlNCoq_PArith_BinPos__x_of_succ_nat_874_3979", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "camlNCoq_PArith_BinPos__x_mul_313_2995", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_CompSpec2Type_3465", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_testbit_4055", 
                "caml_alloc3", 
                "camlNCoq_NArith_BinNat__x_pos_div_eucl_194_3842", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_div2_3055", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_lxor_4011", 
                "camlNCoq_PArith_BinPos", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_pred_N_2796", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "caml_curry2", 
                "camlNCoq_Numbers_BinNums__const_NCoq_Numbers_BinNums_Z_rec_2765", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_to_nat_3949", 
                "camlNCoq_PArith_BinPos__x_sqrtrem_494_3457", 
                "camlNCoq_PArith_BinPos__x_lxor_762_3811", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Classes_Morphisms", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_CompOpp_3174", 
                "camlNCoq_PArith_BinPos__x_square_343_3047", 
                "camlNCoq_Bool_Bool__const_NCoq_Bool_Bool_iff_reflect_3024", 
                "caml_curry3", 
                "caml_apply5", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_gcd_3532", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_equivalence_2978", 
                "caml_curry4", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_sqrt_3465", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_allocN", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "camlNCoq_PArith_BinPos__x_lor_676_3705", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlNCoq_NArith_BinNat__x_ldiff_298_3996", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_iter_3024", 
                "camlNCoq_PArith_BinPos__x_land_704_3743", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_Reflexive_2972", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_land_3971", 
                "camlNCoq_ZArith_BinInt", 
                "camlNCoq_PArith_BinPos__x_pred_double_137_2778", 
                "caml_call_gc"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/Binary/_coq-native/NCoq_Numbers_Integer_Binary_ZBinary_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/Binary/.coq-native/NCoq_Numbers_Integer_Binary_ZBinary.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__is_accu_5182", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_pred_N_2796", 
                "caml_allocN", 
                "camlNCoq_NArith_BinNat__x_ldiff_298_3996", 
                "__cxa_finalize", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_land_3971", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_CompOpp_3174", 
                "camlNCoq_PArith_BinPos__x_eqb_445_3384", 
                "camlNCoq_PArith_BinPos__x_square_343_3047", 
                "camlNCoq_PArith_BinPos", 
                "camlNCoq_PArith_BinPos__x_ldiff_734_3780", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_PArith_BinPos__x_lor_676_3705", 
                "caml_alloc3", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_PArith_BinPos__x_pred_double_137_2778", 
                "camlNativecode__get_match_6305", 
                "caml_young_limit", 
                "camlNCoq_ZArith_BinInt", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_lxor_4011", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_equivalence_2978", 
                "__gmon_start__", 
                "caml_call_gc", 
                "camlNCoq_PArith_BinPos__x_mul_313_2995", 
                "camlNCoq_PArith_BinPos__x_add_67_2739", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_PArith_BinPos__x_lxor_762_3811", 
                "caml_alloc1", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_testbit_4055", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_succ_pos_2689", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_eq_dec_4107", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_PArith_BinPos__x_land_704_3743", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlNCoq_PArith_BinPos__x_size_371_3096", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_div2_up_3063", 
                "camlNCoq_PArith_BinPos__x_of_succ_nat_874_3979", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_ggcd_3662", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_rect_2887", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_lor_3958", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_snd_3023", 
                "camlNCoq_Classes_Morphisms", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_to_nat_3949", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_div2_3055", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_Reflexive_2972", 
                "camlNativecode__get_value_6218", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_PArith_BinPos__x_testbit_832_3913", 
                "camlNCoq_NArith_BinNat__x_pos_div_eucl_194_3842", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "camlNCoq_Bool_Bool__const_NCoq_Bool_Bool_iff_reflect_3024", 
                "camlNCoq_Numbers_BinNums__const_NCoq_Numbers_BinNums_Z_rec_2765", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_gcd_3532", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_sumbool_rec_2969", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_CompSpec2Type_3465", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_iter_3024", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_PER_2889"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Abstract/_coq-native/NCoq_Numbers_Natural_Abstract_NMaxMin_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Abstract/.coq-native/NCoq_Numbers_Natural_Abstract_NMaxMin.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_BinInt_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_BinInt.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_PArith_BinPos__x_eqb_445_3384", 
                "camlNativevalues__is_accu_5182", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_to_nat_3949", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_lxor_4011", 
                "camlNCoq_PArith_BinPos__x_land_704_3743", 
                "camlNCoq_PArith_BinPos__x_of_succ_nat_874_3979", 
                "caml_apply5", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_sqrt_3465", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_pred_N_2796", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_gcd_3532", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNativecode__get_value_6218", 
                "caml_apply3", 
                "camlNativecode__get_const_6301", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_PArith_BinPos__x_pred_double_137_2778", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_CompOpp_3174", 
                "camlNCoq_PArith_BinPos__x_testbit_832_3913", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "caml_apply2", 
                "camlNCoq_PArith_BinPos", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_equivalence_2978", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_testbit_4055", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Numbers_BinNums__const_NCoq_Numbers_BinNums_Z_rec_2765", 
                "camlNCoq_Bool_Bool__const_NCoq_Bool_Bool_iff_reflect_3024", 
                "camlNCoq_Classes_Morphisms", 
                "camlNCoq_PArith_BinPos__x_lxor_762_3811", 
                "caml_alloc3", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_div2_up_3063", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "camlNCoq_PArith_BinPos__x_sqrtrem_494_3457", 
                "caml_alloc1", 
                "caml_call_gc", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_snd_3023", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_succ_pos_2689", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_PER_2889", 
                "caml_young_limit", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_land_3971", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_lor_3958", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_sumbool_rec_2969", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_PArith_BinPos__x_square_343_3047", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_curry5", 
                "caml_curry6", 
                "camlNCoq_Numbers_BinNums", 
                "caml_curry4", 
                "camlNCoq_PArith_BinPos__x_ldiff_734_3780", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_PArith_BinPos__x_add_67_2739", 
                "camlNCoq_PArith_BinPos__x_size_371_3096", 
                "caml_curry3", 
                "camlNCoq_PArith_BinPos__x_mul_313_2995", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_CompSpec2Type_3465", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_rect_2887", 
                "caml_apply10", 
                "camlNativecode__get_name_6297", 
                "caml_apply4", 
                "camlNativecode__get_match_6305", 
                "caml_apply8", 
                "camlNCoq_Init_Logic", 
                "caml_curry2", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_ggcd_3662", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_div2_3055", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_iter_3024", 
                "caml_curry7", 
                "camlNCoq_PArith_BinPos__x_lor_676_3705", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNCoq_NArith_BinNat__x_ldiff_298_3996", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_Reflexive_2972", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_eq_dec_4107"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_RiemannInt_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_RiemannInt.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativecode__get_ind_6309", 
                "camlNCoq_Reals_RiemannInt_SF__const_NCoq_Reals_RiemannInt_SF_RiemannInt_SF_2832", 
                "__cxa_finalize", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Reals_Raxioms__x_INR_12_2722", 
                "camlNCoq_Reals_RiemannInt_SF__const_NCoq_Reals_RiemannInt_SF_fe_2749", 
                "caml_call_gc", 
                "camlNCoq_Reals_RIneq__const_NCoq_Reals_RIneq_pos_2997", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rmin_2660", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rmax_2709", 
                "camlNCoq_Reals_Raxioms", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Reals_RList", 
                "camlNCoq_Reals_Ranalysis1__const_NCoq_Reals_Ranalysis1_derivable_2805", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rminus_2701", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Reals_RIneq", 
                "caml_young_limit", 
                "caml_alloc3", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_projT1_2862", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Reals_Ranalysis1__const_NCoq_Reals_Ranalysis1_derive_pt_2808", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Reals_Ranalysis1", 
                "camlNCoq_Reals_Ranalysis1__const_NCoq_Reals_Ranalysis1_continuity_2735", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rabs_2732", 
                "camlNCoq_Reals_RiemannInt_SF", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rle_2695"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_PeanoNat_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_PeanoNat.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Init_Specif", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "caml_curry6", 
                "caml_young_limit", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_equivalence_2978", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "camlNCoq_Bool_Bool__const_NCoq_Bool_Bool_iff_reflect_3024", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rec_2894", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_PER_2889", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_relation_equivalence_3279", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Relations_Relation_Definitions__const_NCoq_Relations_Relation_Definitions_relation_2654", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "caml_curry2", 
                "camlNCoq_Init_Wf__const_NCoq_Init_Wf_well_founded_2736", 
                "camlNativecode__get_value_6218", 
                "caml_apply5", 
                "camlNCoq_Init_Peano__const_NCoq_Init_Peano_lt_2785", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "camlNCoq_Classes_Morphisms_Prop", 
                "caml_alloc1", 
                "caml_apply8", 
                "caml_curry3", 
                "camlNCoq_Init_Nat__x_sub_45_2728", 
                "camlNCoq_Program_Basics", 
                "camlNativecode__get_sort_6293", 
                "caml_curry7", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "camlNCoq_Init_Wf", 
                "caml_call_gc", 
                "caml_curry5", 
                "camlNativecode__get_const_6301", 
                "caml_allocN", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_andb_2713", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_CompSpec2Type_3465", 
                "caml_apply3", 
                "camlNCoq_Init_Peano", 
                "caml_apply2", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_snd_3023", 
                "caml_apply4", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rect_2885", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "caml_apply11", 
                "camlNCoq_Classes_Morphisms", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlNCoq_Init_Nat", 
                "camlNCoq_Init_Nat__x_mul_27_2706", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "caml_alloc3", 
                "caml_apply10", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_rect_2887", 
                "caml_curry4"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_EqNat_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_EqNat.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Init_Datatypes", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_call_gc", 
                "__gmon_start__", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "__cxa_finalize", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Arith_PeanoNat__x_eqb_64_2757", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Arith_PeanoNat", 
                "camlNCoq_Init_Specif", 
                "caml_young_limit", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_alloc3", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rec_2894", 
                "camlNativecode__get_const_6301"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/MSets/_coq-native/NCoq_MSets_MSetRBT_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/MSets/.coq-native/NCoq_MSets_MSetRBT.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_constant_accu_4657", 
                "__cxa_finalize", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_call_gc", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "caml_young_limit", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "__gmon_start__", 
                "camlNativecode__get_ind_6309"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/bin/coqmktop": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/coqmktop", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "shutdown", 
                "memset", 
                "link", 
                "execvp", 
                "fork", 
                "getpeername", 
                "chdir", 
                "getgrgid", 
                "sendto", 
                "lseek64", 
                "fputs", 
                "ftruncate64", 
                "floor", 
                "unlink", 
                "sigemptyset", 
                "rename", 
                "atan", 
                "setitimer", 
                "getrusage", 
                "tcflow", 
                "pthread_mutex_init", 
                "mkdir", 
                "pipe2", 
                "sigfillset", 
                "pthread_cond_init", 
                "hypot", 
                "listen", 
                "symlink", 
                "atan2", 
                "initgroups", 
                "mktime", 
                "memcmp", 
                "getuid", 
                "munmap", 
                "pow", 
                "tcsendbreak", 
                "getlogin", 
                "sigaction", 
                "log1p", 
                "fflush", 
                "pthread_mutex_lock", 
                "__xstat64", 
                "pthread_cond_signal", 
                "getsockopt", 
                "getgrnam", 
                "freeaddrinfo", 
                "pthread_attr_init", 
                "mmap64", 
                "putenv", 
                "connect", 
                "__fxstat64", 
                "__libc_start_main", 
                "tcdrain", 
                "getgid", 
                "memcpy", 
                "dlerror", 
                "opendir", 
                "execve", 
                "__isoc99_sscanf", 
                "setgid", 
                "write", 
                "sigwait", 
                "cfsetospeed", 
                "tcflush", 
                "__sigsetjmp", 
                "fmin", 
                "system", 
                "fcntl", 
                "__read_chk", 
                "chmod", 
                "getnameinfo", 
                "fchown", 
                "pthread_cond_destroy", 
                "strcmp", 
                "sqrt", 
                "strnlen", 
                "pthread_mutex_unlock", 
                "isatty", 
                "cfgetospeed", 
                "cos", 
                "getpwuid", 
                "select", 
                "read", 
                "readdir64", 
                "secure_getenv", 
                "gethostbyname_r", 
                "strtol", 
                "getsockname", 
                "sigaddset", 
                "getpid", 
                "dlclose", 
                "exp", 
                "fwrite", 
                "__fprintf_chk", 
                "rmdir", 
                "sigdelset", 
                "execv", 
                "log10", 
                "memmove", 
                "socketpair", 
                "malloc", 
                "__longjmp_chk", 
                "__lxstat64", 
                "pthread_cond_wait", 
                "accept4", 
                "readlink", 
                "dlopen", 
                "time", 
                "sigprocmask", 
                "mkfifo", 
                "__errno_location", 
                "strtod", 
                "geteuid", 
                "getrlimit64", 
                "__stack_chk_fail", 
                "access", 
                "realloc", 
                "getitimer", 
                "__vsnprintf_chk", 
                "strerror", 
                "pthread_mutex_trylock", 
                "pthread_create", 
                "pthread_key_create", 
                "inet_pton", 
                "gethostbyaddr_r", 
                "truncate64", 
                "bind", 
                "__gmon_start__", 
                "nice", 
                "getppid", 
                "setsockopt", 
                "getservbyport", 
                "setsid", 
                "pthread_join", 
                "tanh", 
                "setgroups", 
                "chroot", 
                "__recvfrom_chk", 
                "abort", 
                "__snprintf_chk", 
                "kill", 
                "sin", 
                "fmod", 
                "expm1", 
                "sigaltstack", 
                "getcwd", 
                "ceil", 
                "pthread_mutex_destroy", 
                "sigpending", 
                "__fdelt_chk", 
                "chown", 
                "setuid", 
                "pthread_sigmask", 
                "utimes", 
                "free", 
                "calloc", 
                "modf", 
                "getaddrinfo", 
                "send", 
                "__recv_chk", 
                "getpwnam", 
                "closedir", 
                "asin", 
                "fchmod", 
                "acos", 
                "ldexp", 
                "__register_atfork", 
                "getenv", 
                "pthread_attr_setdetachstate", 
                "pthread_cond_broadcast", 
                "cfgetispeed", 
                "gmtime", 
                "umask", 
                "gettimeofday", 
                "log", 
                "getgroups", 
                "getprotobyname", 
                "socket", 
                "cosh", 
                "__memcpy_chk", 
                "getservbyname", 
                "localtime", 
                "fputc", 
                "pthread_exit", 
                "__memmove_chk", 
                "sinh", 
                "dlsym", 
                "waitpid", 
                "strlen", 
                "exit", 
                "wait", 
                "cfsetispeed", 
                "sigismember", 
                "rewinddir", 
                "pthread_setspecific", 
                "tan", 
                "alarm", 
                "tcgetattr", 
                "tcsetattr", 
                "close", 
                "pthread_getspecific", 
                "getprotobynumber", 
                "inet_ntop", 
                "open64", 
                "nanosleep", 
                "gethostname", 
                "frexp", 
                "sigsuspend"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_Ring_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_Ring.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_young_limit", 
                "caml_curry2"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/QArith/_coq-native/NCoq_QArith_QOrderedType_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/QArith/.coq-native/NCoq_QArith_QOrderedType.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_match_6305", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "caml_call_gc", 
                "camlNCoq_QArith_QArith_base", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_name_6297", 
                "caml_young_limit", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Specif", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_sort_accu_4950", 
                "__gmon_start__", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qeq_bool_2735", 
                "__cxa_finalize", 
                "camlNCoq_Init_Logic", 
                "caml_allocN", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qeq_2679", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Cyclic/Abstract/_coq-native/NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Cyclic/Abstract/.coq-native/NCoq_Numbers_Cyclic_Abstract_CyclicAxioms.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lor_4331", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_land_4355", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_le_4426", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_of_N_3193", 
                "__cxa_finalize", 
                "caml_call_gc", 
                "__gmon_start__", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleType_interp_carry_2700", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_mul_2790", 
                "caml_young_limit", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_gt_4423", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_div_3330", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_pow_2805", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_compare_2865", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_ZArith_Znumtheory", 
                "camlNativevalues__mk_sw_accu_5114", 
                "_ITM_deregisterTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_snd_3023", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleType_base_2654", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_modulo_3338", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Datatypes", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleType_zn2z_to_Z_2746", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_opp_2764", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lt_4420", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lxor_4409"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Abstract/_coq-native/NCoq_Numbers_Natural_Abstract_NAddOrder_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Abstract/.coq-native/NCoq_Numbers_Natural_Abstract_NAddOrder.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_ClassicalEpsilon_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_ClassicalEpsilon.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Specif", 
                "caml_curry2", 
                "caml_apply3", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_ex_ind_2830", 
                "caml_apply2", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_curry5", 
                "caml_curry3", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_young_limit", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_inhabited_ind_3407", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_proj2_sig_2816", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_proj1_sig_2802", 
                "camlNativecode__get_const_6301"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/micromega/_coq-native/NCoq_micromega_ZCoeff_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/micromega/.coq-native/NCoq_micromega_ZCoeff.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_apply4", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_setoid_ring_InitialRing__const_NCoq_setoid_ring_InitialRing_gen_phiZ_2884", 
                "camlNCoq_micromega_OrderedRing__const_NCoq_micromega_OrderedRing_SORsetoid_2693", 
                "camlNCoq_Classes_Morphisms", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "camlNativecode__get_name_6297", 
                "caml_apply11", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "caml_curry2", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNativecode__get_sort_6293", 
                "caml_call_gc", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_curry11", 
                "camlNCoq_Init_Logic", 
                "caml_young_limit", 
                "caml_curry6", 
                "camlNCoq_setoid_ring_InitialRing"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/extraction/_coq-native/NCoq_extraction_ExtrHaskellNatInteger_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/extraction/.coq-native/NCoq_extraction_ExtrHaskellNatInteger.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "__gmon_start__", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Init/_coq-native/NCoq_Init_Logic_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Init/.coq-native/NCoq_Init_Logic.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_young_limit", 
                "camlNativecode__get_const_6301", 
                "camlNativecode__get_ind_6309", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_constant_accu_4657", 
                "__gmon_start__", 
                "__cxa_finalize", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_call_gc", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_ind_accu_4947", 
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Classes/_coq-native/NCoq_Classes_RelationClasses_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Classes/.coq-native/NCoq_Classes_RelationClasses.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_match_6305", 
                "camlNCoq_Program_Basics", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_call_gc", 
                "caml_curry4", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "caml_apply5", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_curry3", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativecode__get_sort_6293", 
                "caml_curry2", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_allocN", 
                "caml_curry8", 
                "camlNativevalues__mk_ind_accu_4947", 
                "caml_curry5", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_apply3", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_sym_2912", 
                "caml_curry6", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_apply4", 
                "camlNativecode__get_name_6297", 
                "caml_alloc3", 
                "camlNativecode__get_ind_6309", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "caml_young_limit"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_Ring_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_Ring.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_sw_accu_5114", 
                "__gmon_start__", 
                "caml_call_gc", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_deregisterTMCloneTable", 
                "caml_young_limit", 
                "camlNCoq_Init_Datatypes", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "__cxa_finalize", 
                "camlNativecode__get_match_6305"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_Algebra_syntax_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_Algebra_syntax.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_sort_accu_4950", 
                "caml_young_limit", 
                "camlNativecode__get_name_6297", 
                "caml_call_gc", 
                "caml_curry3", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_sort_6293"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/extraction/_coq-native/NCoq_extraction_ExtrHaskellZInt_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/extraction/.coq-native/NCoq_extraction_ExtrHaskellZInt.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/derive/_coq-native/NCoq_derive_Derive_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/derive/.coq-native/NCoq_derive_Derive.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize", 
                "__gmon_start__", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/btauto/_coq-native/NCoq_btauto_Btauto_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/btauto/.coq-native/NCoq_btauto_Btauto.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Vectors/_coq-native/NCoq_Vectors_VectorSpec_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Vectors/.coq-native/NCoq_Vectors_VectorSpec.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_apply3", 
                "caml_curry6", 
                "caml_curry4", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_sort_6293", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_value_6218", 
                "camlNativecode__get_match_6305", 
                "caml_curry7", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Vectors_VectorDef__const_NCoq_Vectors_VectorDef_tl_3149", 
                "camlNCoq_Vectors_VectorDef__const_NCoq_Vectors_VectorDef_hd_3002", 
                "camlNCoq_Vectors_VectorDef__const_NCoq_Vectors_VectorDef_caseS_2897", 
                "camlNCoq_Vectors_VectorDef", 
                "caml_curry3", 
                "caml_curry5", 
                "caml_curry2", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_call_gc", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Structures/_coq-native/NCoq_Structures_Orders_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Structures/.coq-native/NCoq_Structures_Orders.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Init_Logic", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_equivalence_2978", 
                "camlNativecode__get_const_6301", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_NArithRing_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_NArithRing.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "__gmon_start__", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_Le_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_Le.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_constant_accu_4657", 
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_const_6301", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Wellfounded/_coq-native/NCoq_Wellfounded_Union_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Wellfounded/.coq-native/NCoq_Wellfounded_Union.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "__cxa_finalize", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/Abstract/_coq-native/NCoq_Numbers_Integer_Abstract_ZMul_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/Abstract/.coq-native/NCoq_Numbers_Integer_Abstract_ZMul.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rtrigo_calc_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rtrigo_calc.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Reals_Rdefinitions", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_alloc1", 
                "camlNativecode__get_const_6301", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_Reals_Rtrigo_def__const_NCoq_Reals_Rtrigo_def_cos_2759", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Reals_Rtrigo1__const_NCoq_Reals_Rtrigo1_tan_2711", 
                "caml_apply2", 
                "camlNCoq_Reals_Rtrigo_def__const_NCoq_Reals_Rtrigo_def_sin_2779", 
                "camlNativevalues__mk_constant_accu_4657"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Abstract/_coq-native/NCoq_Numbers_Natural_Abstract_NSub_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Abstract/.coq-native/NCoq_Numbers_Natural_Abstract_NSub.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zpower_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zpower.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_apply5", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_ZArith_BinInt", 
                "camlNativecode__get_ind_6309", 
                "camlNativecode__get_match_6305", 
                "caml_call_gc", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_iter_3024", 
                "caml_curry5", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_mul_2790", 
                "caml_curry7", 
                "caml_apply2", 
                "caml_curry3", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_opp_2764", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Numbers_BinNums", 
                "caml_curry2", 
                "caml_young_limit", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rect_2885"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Relations/_coq-native/NCoq_Relations_Operators_Properties_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Relations/.coq-native/NCoq_Relations_Operators_Properties.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "__gmon_start__", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sorting/_coq-native/NCoq_Sorting_Sorted_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Sorting/.coq-native/NCoq_Sorting_Sorted.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_curry8", 
                "caml_curry4", 
                "caml_call_gc", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Lists_List", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "caml_apply6", 
                "camlNativecode__get_ind_6309", 
                "caml_curry2", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_curry5", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNativevalues__mk_ind_accu_4947", 
                "caml_apply2", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_and_rect_2712", 
                "camlNativecode__get_match_6305", 
                "caml_apply3", 
                "camlNCoq_Init_Logic", 
                "caml_curry7", 
                "camlNativecode__get_sort_6293", 
                "caml_curry6", 
                "caml_young_limit", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_list_rect_3084", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_apply5"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_Classical_Prop_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_Classical_Prop.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FSetFacts_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FSetFacts.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "__cxa_finalize", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FMapAVL_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FMapAVL.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FSetToFiniteSet_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FSetToFiniteSet.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Abstract/_coq-native/NCoq_Numbers_Natural_Abstract_NSqrt_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Abstract/.coq-native/NCoq_Numbers_Natural_Abstract_NSqrt.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_ClassicalFacts_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_ClassicalFacts.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_curry6", 
                "caml_curry2", 
                "camlNativecode__get_ind_6309", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_apply2", 
                "caml_young_limit", 
                "camlNativecode__get_sort_6293", 
                "caml_curry3", 
                "caml_apply3", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_name_6297", 
                "caml_call_gc", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNativevalues__mk_ind_accu_4947", 
                "caml_curry5", 
                "camlNCoq_Init_Datatypes", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Peano", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_sort_accu_4950"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/SpecViaZ/_coq-native/NCoq_Numbers_Integer_SpecViaZ_ZSig_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/SpecViaZ/.coq-native/NCoq_Numbers_Integer_SpecViaZ_ZSig.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lt_4420", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_le_4426", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_const_6301", 
                "caml_curry2", 
                "camlNativevalues__str_decode_5828", 
                "caml_apply3", 
                "camlNCoq_Init_Logic"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_Ncring_initial_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_Ncring_initial.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Init_Datatypes", 
                "caml_young_limit", 
                "camlNCoq_setoid_ring_Algebra_syntax__const_NCoq_setoid_ring_Algebra_syntax_Multiplication_2678", 
                "__cxa_finalize", 
                "camlNCoq_Classes_Morphisms", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_Reflexive_2972", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_Transitive_2976", 
                "camlNCoq_setoid_ring_Algebra_syntax__const_NCoq_setoid_ring_Algebra_syntax_Opposite_2694", 
                "__gmon_start__", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_PER_2889", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_call_gc", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "camlNCoq_setoid_ring_Algebra_syntax__const_NCoq_setoid_ring_Algebra_syntax_Addition_2664", 
                "camlNCoq_setoid_ring_Algebra_syntax__const_NCoq_setoid_ring_Algebra_syntax_Equality_2700", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Classes_RelationClasses", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_sub_def_3280", 
                "camlNativecode__get_value_6218", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_setoid_2789", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativecode__get_sort_6293", 
                "caml_alloc3", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_plus_comp_2834", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_Program_Basics", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_ZArith_BinInt", 
                "camlNCoq_setoid_ring_Algebra_syntax__const_NCoq_setoid_ring_Algebra_syntax_Subtraction_2687"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/PArith/_coq-native/NCoq_PArith_PArith_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/PArith/.coq-native/NCoq_PArith_PArith.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/_coq-native/NCoq_Numbers_NumPrelude_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/.coq-native/NCoq_Numbers_NumPrelude.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Structures/_coq-native/NCoq_Structures_OrderedTypeAlt_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Structures/.coq-native/NCoq_Structures_OrderedTypeAlt.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rtrigo_fun_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rtrigo_fun.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/Abstract/_coq-native/NCoq_Numbers_Integer_Abstract_ZLt_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/Abstract/.coq-native/NCoq_Numbers_Integer_Abstract_ZLt.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/micromega/_coq-native/NCoq_micromega_RMicromega_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/micromega/.coq-native/NCoq_micromega_RMicromega.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_eval_sformula_4588", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qinv_2766", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qmult_2751", 
                "__gmon_start__", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_cnf_normalise_4388", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qplus_2748", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_eval_nformula_3176", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qden_2674", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_check_normalised_formulas_4068", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_NArith_BinNat", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_NFormula_3132", 
                "camlNCoq_micromega_Tauto__x_map_bformula_101_2902", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_Reals_Raxioms__const_NCoq_Reals_Raxioms_IZR_2729", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_allocN", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qnum_2666", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_map_Formula_4548", 
                "camlNCoq_Reals_Rpow_def", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_micromega_Tauto__const_NCoq_micromega_Tauto_tauto_checker_3468", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativecode__get_value_6218", 
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize", 
                "caml_alloc1", 
                "caml_call_gc", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_eval_formula_4220", 
                "caml_young_limit", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rminus_2701", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qeq_bool_2735", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_check_inconsistent_4051", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qopp_2754", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_cnf_negate_4442", 
                "camlNCoq_Reals_Rdefinitions", 
                "caml_alloc3", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_nformula_plus_nformula_3463", 
                "camlNCoq_micromega_RingMicromega"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/micromega/csdpcert": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/micromega/csdpcert", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "fork", 
                "setgroups", 
                "tcgetattr", 
                "sigdelset", 
                "tcflush", 
                "strcmp", 
                "localtime", 
                "cosh", 
                "cfgetispeed", 
                "fcntl", 
                "execve", 
                "access", 
                "cfsetospeed", 
                "getservbyname", 
                "nice", 
                "gethostbyaddr_r", 
                "__read_chk", 
                "atan", 
                "__fxstat64", 
                "atan2", 
                "cos", 
                "pow", 
                "sqrt", 
                "dup3", 
                "sigpending", 
                "socketpair", 
                "fputc", 
                "__lxstat64", 
                "calloc", 
                "getsockname", 
                "cfgetospeed", 
                "sigaction", 
                "time", 
                "fflush", 
                "dlopen", 
                "execv", 
                "pipe2", 
                "asin", 
                "mmap64", 
                "exp", 
                "tan", 
                "write", 
                "__sigsetjmp", 
                "connect", 
                "inet_pton", 
                "read", 
                "sendto", 
                "fputs", 
                "symlink", 
                "fmin", 
                "__xstat64", 
                "utimes", 
                "truncate64", 
                "dlerror", 
                "sigaddset", 
                "sigemptyset", 
                "frexp", 
                "getprotobyname", 
                "modf", 
                "secure_getenv", 
                "getppid", 
                "close", 
                "cfsetispeed", 
                "shutdown", 
                "listen", 
                "nanosleep", 
                "strtol", 
                "__recvfrom_chk", 
                "sigsuspend", 
                "fwrite", 
                "ftruncate64", 
                "memset", 
                "putenv", 
                "__libc_start_main", 
                "umask", 
                "getitimer", 
                "kill", 
                "__vsnprintf_chk", 
                "ldexp", 
                "sigismember", 
                "hypot", 
                "fmod", 
                "gethostname", 
                "chroot", 
                "__errno_location", 
                "memcpy", 
                "lseek64", 
                "strerror", 
                "closedir", 
                "chdir", 
                "rewinddir", 
                "inet_ntop", 
                "getenv", 
                "dlsym", 
                "rmdir", 
                "getcwd", 
                "mktime", 
                "getpwuid", 
                "bind", 
                "__memcpy_chk", 
                "__gmon_start__", 
                "open64", 
                "expm1", 
                "setgid", 
                "realloc", 
                "floor", 
                "__memmove_chk", 
                "chmod", 
                "fchmod", 
                "__fdelt_chk", 
                "gethostbyname_r", 
                "sinh", 
                "waitpid", 
                "execvp", 
                "getpeername", 
                "munmap", 
                "ceil", 
                "tcsetattr", 
                "mkfifo", 
                "setsockopt", 
                "log", 
                "getnameinfo", 
                "tanh", 
                "free", 
                "unlink", 
                "getgrnam", 
                "getgid", 
                "strtod", 
                "getegid", 
                "setitimer", 
                "accept4", 
                "getgrgid", 
                "getpwnam", 
                "send", 
                "memmove", 
                "setuid", 
                "strnlen", 
                "sigaltstack", 
                "readdir64", 
                "geteuid", 
                "opendir", 
                "mkdir", 
                "log10", 
                "getsockopt", 
                "acos", 
                "strlen", 
                "isatty", 
                "freeaddrinfo", 
                "getuid", 
                "link", 
                "__recv_chk", 
                "sin", 
                "memcmp", 
                "system", 
                "tcflow", 
                "chown", 
                "socket", 
                "malloc", 
                "sigprocmask", 
                "tcdrain", 
                "__stack_chk_fail", 
                "getpid", 
                "getrlimit64", 
                "getaddrinfo", 
                "select", 
                "getprotobynumber", 
                "log1p", 
                "initgroups", 
                "setsid", 
                "getrusage", 
                "__fprintf_chk", 
                "rename", 
                "fchown", 
                "wait", 
                "getlogin", 
                "alarm", 
                "getservbyport", 
                "readlink", 
                "__isoc99_sscanf", 
                "getgroups", 
                "gmtime", 
                "gettimeofday", 
                "tcsendbreak", 
                "abort", 
                "dlclose"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Bool/_coq-native/NCoq_Bool_DecBool_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Bool/.coq-native/NCoq_Bool_DecBool.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "caml_young_limit", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_const_6301", 
                "__gmon_start__", 
                "caml_call_gc", 
                "__cxa_finalize", 
                "camlNativevalues__mk_sw_accu_5114", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rtrigo_alt_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rtrigo_alt.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_apply2", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_const_6301", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Reals_Raxioms__x_INR_12_2722", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rdiv_2704", 
                "camlNCoq_Reals_Rpow_def__x_pow_10_2677", 
                "camlNCoq_Init_Nat__x_mul_27_2706", 
                "caml_curry2", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNCoq_Reals_Raxioms", 
                "caml_young_limit", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Reals_Rfunctions__x_sum_f_R0_41_2802", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Arith_Factorial__x_fact_7_2674"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/extraction/_coq-native/NCoq_extraction_ExtrHaskellZInteger_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/extraction/.coq-native/NCoq_extraction_ExtrHaskellZInteger.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_Rings_R_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_Rings_R.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlNCoq_Reals_Raxioms", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_Symmetric_2974", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_deregisterTMCloneTable", 
                "caml_alloc3", 
                "camlNCoq_Init_Logic", 
                "__gmon_start__", 
                "__cxa_finalize", 
                "caml_alloc1", 
                "caml_call_gc"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_Between_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_Between.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_ind_accu_4947", 
                "__cxa_finalize", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Datatypes", 
                "camlNativecode__get_ind_6309", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_const_6301", 
                "caml_call_gc", 
                "caml_young_limit", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Init_Peano", 
                "__gmon_start__", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Peano__const_NCoq_Init_Peano_lt_2785"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zwf_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zwf.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_le_4426", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_constant_accu_4657", 
                "__cxa_finalize", 
                "caml_young_limit", 
                "caml_call_gc", 
                "__gmon_start__", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lt_4420"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_AltSeries_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_AltSeries.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "caml_alloc1", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "camlNativevalues__mk_prod_accu_5119", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Init_Nat__x_mul_27_2706", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNCoq_Reals_Raxioms", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "camlNativecode__get_match_6305", 
                "caml_young_limit", 
                "camlNCoq_Reals_Raxioms__x_INR_12_2722", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rle_2695", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__str_decode_5828", 
                "caml_call_gc", 
                "camlNCoq_Init_Datatypes", 
                "camlNativecode__get_value_6218", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_sw_accu_5114"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Ranalysis_reg_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Ranalysis_reg.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_const_6301"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zquot_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zquot.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "caml_call_gc", 
                "camlNativecode__get_const_6301", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_abs_3148", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lt_4420", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_le_4426", 
                "camlNCoq_Init_Logic", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_mul_2790", 
                "__gmon_start__", 
                "__cxa_finalize", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_opp_2764"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/NArith/_coq-native/NCoq_NArith_BinNatDef_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/NArith/.coq-native/NCoq_NArith_BinNatDef.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_PArith_BinPos__x_sqrtrem_494_3457", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_gcd_3532", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_snd_3023", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_sqrt_3465", 
                "caml_call_gc", 
                "camlNCoq_PArith_BinPos__x_lor_676_3705", 
                "camlNCoq_PArith_BinPos__x_testbit_nat_807_3876", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_PArith_BinPos__x_mul_313_2995", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rect_2885", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_to_nat_3949", 
                "caml_alloc3", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_shiftl_3832", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_iter_3024", 
                "camlNCoq_PArith_BinPos__x_size_nat_362_3082", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_PArith_BinPos__x_lxor_762_3811", 
                "camlNCoq_PArith_BinPos", 
                "camlNCoq_PArith_BinPos__x_sub_mask_239_2946", 
                "camlNCoq_PArith_BinPos__x_square_343_3047", 
                "camlNCoq_PArith_BinPos__x_testbit_832_3913", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_pred_N_2796", 
                "camlNCoq_PArith_BinPos__x_succ_8_2676", 
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_PArith_BinPos__x_eqb_445_3384", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_PArith_BinPos__x_land_704_3743", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__str_decode_5828", 
                "__gmon_start__", 
                "camlNCoq_PArith_BinPos__x_size_371_3096", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_ggcd_3662", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_pow_3032", 
                "camlNCoq_PArith_BinPos__x_of_succ_nat_874_3979", 
                "__cxa_finalize", 
                "camlNCoq_PArith_BinPos__x_ldiff_734_3780", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlNativecode__get_value_6218"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/btauto/_coq-native/NCoq_btauto_Algebra_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/btauto/.coq-native/NCoq_btauto_Algebra.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_apply2", 
                "camlNCoq_Init_Datatypes", 
                "caml_curry9", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_le_3993", 
                "caml_call_gc", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_PArith_BinPos", 
                "camlNCoq_Classes_DecidableClass__const_NCoq_Classes_DecidableClass_Decidable_witness_2667", 
                "camlNativecode__get_match_6305", 
                "caml_young_limit", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_xorb_2735", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_lt_3987", 
                "caml_allocN", 
                "camlNCoq_Classes_DecidableClass__const_NCoq_Classes_DecidableClass_Decidable_eq_bool_2719", 
                "caml_curry2", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_andb_2713", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "caml_apply10", 
                "camlNativevalues__is_accu_5182", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNativecode__get_value_6218", 
                "caml_curry4", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_curry8", 
                "caml_apply5", 
                "camlNCoq_PArith_BinPos__x_succ_8_2676", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_alloc3", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Numbers_BinNums", 
                "caml_curry5", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_leb_3393", 
                "camlNCoq_PArith_BinPos__x_eqb_445_3384", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_ltb_3399", 
                "camlNativevalues__mk_sort_accu_4950", 
                "caml_curry6", 
                "caml_alloc1", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Init_Logic", 
                "caml_apply3", 
                "caml_curry3", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_curry7"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Structures/_coq-native/NCoq_Structures_DecidableTypeEx_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Structures/.coq-native/NCoq_Structures_DecidableTypeEx.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Structures_OrderedTypeEx", 
                "caml_curry3", 
                "camlNCoq_Arith_PeanoNat__x_compare_101_2804", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Arith_PeanoNat", 
                "caml_call_gc", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_compare_3449", 
                "camlNCoq_PArith_BinPos", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_compare_2865", 
                "camlNCoq_Init_Logic", 
                "caml_apply5", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lt_4420", 
                "camlNativecode__get_const_6301", 
                "caml_curry2", 
                "camlNCoq_Arith_Compare_dec", 
                "camlNCoq_Init_Peano", 
                "camlNCoq_ZArith_BinInt", 
                "caml_apply2", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "caml_allocN", 
                "camlNCoq_NArith_BinNat", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_sym_2912", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_young_limit", 
                "camlNativecode__get_match_6305", 
                "caml_curry5", 
                "camlNCoq_Structures_OrderedType"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Cyclic/DoubleCyclic/_coq-native/NCoq_Numbers_Cyclic_DoubleCyclic_DoubleCyclic_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Cyclic/DoubleCyclic/.coq-native/NCoq_Numbers_Cyclic_DoubleCyclic_DoubleCyclic.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleMul__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleMul_w_mul_add_3245", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_mul_c_2967", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_opp_carry_2848", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_zdigits_2720", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_modulo_gt_3030", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleType_base_2654", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_call_gc", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_opp_c_2832", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_land_3121", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_pos_mod_3076", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_OW_4105", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleSqrt__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleSqrt_ww_head1_3283", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_zero_2779", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_pred_2938", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleDivn1__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleDivn1_high_3074", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_add_mul_div_3068", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_sub_2946", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_mul_2975", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__fun_23695", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType__x_word_67_2796", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_is_even_3084", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_one_2787", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_WO_4094", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_succ_c_2856", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_lor_3113", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_pred_c_2914", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_div21_3001", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_add_carry_c_2877", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_tail0_2771", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_square_c_2987", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_head0_2763", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_add_carry_2906", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_compare_2808", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_add_c_2869", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_div_gt_3014", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_minus_one_2795", 
                "__cxa_finalize", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleType_zn2z_to_Z_2746", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_sub_carry_c_2930", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_gcd_gt_3046", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_lxor_3129", 
                "__gmon_start__", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleMul", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__fun_23594", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_to_Z_2739", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_eq0_2820", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_opp_2840", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_digits_2709", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_sub_c_2922", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleSqrt__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleSqrt_ww_is_zero_3270", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_WW_4132", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_add_2898", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleSqrt__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleSqrt_split_2674", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_of_pos_2751", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_succ_2885", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_sqrt2_3097", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__fun_23589", 
                "camlNativevalues__is_accu_5182"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/rtauto/_coq-native/NCoq_rtauto_Rtauto_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/rtauto/.coq-native/NCoq_rtauto_Rtauto.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "caml_call_gc", 
                "camlNCoq_rtauto_Bintree__const_NCoq_rtauto_Bintree_get_3074", 
                "camlNCoq_Numbers_BinNums", 
                "caml_young_limit", 
                "caml_alloc1", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_rtauto_Bintree", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_andb_2713", 
                "caml_alloc3", 
                "camlNativecode__get_ind_6309", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNativecode__get_match_6305", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_rtauto_Bintree__const_NCoq_rtauto_Bintree_push_3070", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_ind_accu_4947", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__mk_fix_accu_5185", 
                "__cxa_finalize", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativevalues__mk_prod_accu_5119"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Program/_coq-native/NCoq_Program_Syntax_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Program/.coq-native/NCoq_Program_Syntax.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Abstract/_coq-native/NCoq_Numbers_Natural_Abstract_NLog_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Abstract/.coq-native/NCoq_Numbers_Natural_Abstract_NLog.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "__gmon_start__", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rgeom_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rgeom.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rminus_2701", 
                "camlNativevalues__str_decode_5828", 
                "caml_young_limit", 
                "camlNCoq_Reals_R_sqrt__const_NCoq_Reals_R_sqrt_sqrt_2660", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNCoq_Reals_Rtrigo_def__const_NCoq_Reals_Rtrigo_def_sin_2779", 
                "__cxa_finalize", 
                "caml_call_gc", 
                "camlNCoq_Reals_Rtrigo_def__const_NCoq_Reals_Rtrigo_def_cos_2759", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_const_6301", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/toploop/proofworkertop_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/toploop/proofworkertop.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlCoqworkmgrApi__init_1618", 
                "camlStm", 
                "__cxa_finalize", 
                "camlAsyncTaskQueue__init_stdout_4344", 
                "camlCoqtop", 
                "camlFlags", 
                "__gmon_start__", 
                "camlAsyncTaskQueue__fun_5939", 
                "caml_modify"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/Abstract/_coq-native/NCoq_Numbers_Integer_Abstract_ZGcd_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/Abstract/.coq-native/NCoq_Numbers_Integer_Abstract_ZGcd.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/extraction/_coq-native/NCoq_extraction_ExtrOcamlZInt_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/extraction/.coq-native/NCoq_extraction_ExtrOcamlZInt.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FSetFacts_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FSetFacts.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Compat/_coq-native/NCoq_Compat_Coq85_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Compat/.coq-native/NCoq_Compat_Coq85.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/Abstract/_coq-native/NCoq_Numbers_Integer_Abstract_ZDivEucl_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/Abstract/.coq-native/NCoq_Numbers_Integer_Abstract_ZDivEucl.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Powerset_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Powerset.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Sets_Ensembles", 
                "caml_curry6", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_ind_6309", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_match_6305", 
                "caml_curry3", 
                "caml_curry2", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Sets_Ensembles__const_NCoq_Sets_Ensembles_Included_2688", 
                "caml_young_limit", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_call_gc", 
                "caml_apply2"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/micromega/_coq-native/NCoq_micromega_OrderedRing_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/micromega/.coq-native/NCoq_micromega_OrderedRing.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativecode__get_const_6301", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "camlNativecode__get_ind_6309", 
                "caml_apply8", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_apply4", 
                "caml_curry2", 
                "camlNativecode__get_match_6305", 
                "caml_curry9", 
                "camlNCoq_Init_Logic", 
                "caml_curry3", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "caml_young_limit", 
                "caml_call_gc", 
                "caml_curry5", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "camlNCoq_Classes_Morphisms", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_Setoids_Setoid", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_name_6297", 
                "caml_curry25", 
                "camlNCoq_setoid_ring_Ring_theory", 
                "caml_curry11", 
                "caml_curry4"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/Abstract/_coq-native/NCoq_Numbers_Integer_Abstract_ZMaxMin_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/Abstract/.coq-native/NCoq_Numbers_Integer_Abstract_ZMaxMin.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/omega/_coq-native/NCoq_omega_OmegaPlugin_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/omega/.coq-native/NCoq_omega_OmegaPlugin.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Lists/_coq-native/NCoq_Lists_ListTactics_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Lists/.coq-native/NCoq_Lists_ListTactics.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/NatInt/_coq-native/NCoq_Numbers_NatInt_NZMulOrder_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/NatInt/.coq-native/NCoq_Numbers_NatInt_NZMulOrder.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zpow_def_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zpow_def.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_const_6301"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_ArithProp_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_ArithProp.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "__gmon_start__", 
                "__cxa_finalize", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FSetToFiniteSet_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FSetToFiniteSet.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_R_sqr_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_R_sqr.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_const_6301", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_Description_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_Description.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "__gmon_start__", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Cyclic/DoubleCyclic/_coq-native/NCoq_Numbers_Cyclic_DoubleCyclic_DoubleLift_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Cyclic/DoubleCyclic/.coq-native/NCoq_Numbers_Cyclic_DoubleCyclic_DoubleLift.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_apply2", 
                "camlNativecode__get_match_6305", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_curry8", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType", 
                "caml_curry2", 
                "caml_young_limit", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_curry11", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_apply3", 
                "caml_curry13", 
                "caml_curry12", 
                "caml_call_gc", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_ProofIrrelevance_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_ProofIrrelevance.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_call_gc", 
                "camlNativecode__get_const_6301", 
                "__cxa_finalize", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__str_decode_5828", 
                "caml_young_limit", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Relations_2_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Relations_2.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "caml_call_gc", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_fix_accu_5185", 
                "__cxa_finalize", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_young_limit", 
                "camlNativecode__get_ind_6309"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Classes/_coq-native/NCoq_Classes_SetoidTactics_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Classes/.coq-native/NCoq_Classes_SetoidTactics.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_ind_accu_4947", 
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__str_decode_5828", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_Ring_base_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_Ring_base.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/Abstract/_coq-native/NCoq_Numbers_Integer_Abstract_ZAdd_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/Abstract/.coq-native/NCoq_Numbers_Integer_Abstract_ZAdd.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_Decidable_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_Decidable.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Logic", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_Arith_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_Arith.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_FinFun_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_FinFun.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Init_Logic", 
                "camlNativecode__get_match_6305", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_name_6297", 
                "caml_young_limit", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNativevalues__mk_constant_accu_4657", 
                "__gmon_start__", 
                "camlNCoq_Vectors_Fin__x_of_nat_lt_259_3075", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_proj2_sig_2816", 
                "camlNCoq_Vectors_Fin__x_to_nat_196_2972", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_proj1_sig_2802", 
                "camlNCoq_Init_Datatypes", 
                "__cxa_finalize", 
                "camlNCoq_Init_Peano__const_NCoq_Init_Peano_lt_2785", 
                "camlNCoq_Lists_List", 
                "camlNCoq_Vectors_Fin", 
                "caml_call_gc"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/micromega/_coq-native/NCoq_micromega_QMicromega_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/micromega/.coq-native/NCoq_micromega_QMicromega.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativecode__get_match_6305", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_check_inconsistent_4051", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_NFormula_3132", 
                "caml_call_gc", 
                "__cxa_finalize", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qeq_2679", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_eval_formula_4220", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qpower_2872", 
                "camlNativecode__get_name_6297", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qopp_2754", 
                "caml_alloc1", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qlt_2685", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_micromega_Tauto__const_NCoq_micromega_Tauto_tauto_checker_3468", 
                "camlNCoq_micromega_RingMicromega", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_cnf_negate_4442", 
                "caml_allocN", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_pow_N_2736", 
                "caml_alloc3", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_cnf_normalise_4388", 
                "camlNCoq_QArith_QArith_base", 
                "camlNCoq_micromega_EnvRing", 
                "camlNCoq_setoid_ring_Ring_theory", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_of_N_3193", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qplus_2748", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_eval_nformula_3176", 
                "camlNCoq_micromega_EnvRing__const_NCoq_micromega_EnvRing_PEeval_4995", 
                "camlNCoq_micromega_Env__const_NCoq_micromega_Env_Env_2654", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_nformula_plus_nformula_3463", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_check_normalised_formulas_4068", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_sort_accu_4950", 
                "__gmon_start__", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qmult_2751", 
                "camlNativevalues__mk_prod_accu_5119"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/QArith/_coq-native/NCoq_QArith_Qreduction_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/QArith/.coq-native/NCoq_QArith_Qreduction.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qopp_2754", 
                "caml_curry2", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_to_pos_3201", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_snd_3023", 
                "camlNativecode__get_match_6305", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Numbers_BinNums", 
                "caml_call_gc", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qmult_2751", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_apply4", 
                "caml_apply2", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_QArith_QArith_base", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qplus_2748", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_ggcd_4256", 
                "caml_alloc1", 
                "camlNCoq_Classes_Morphisms"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sorting/_coq-native/NCoq_Sorting_Permutation_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Sorting/.coq-native/NCoq_Sorting_Permutation.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_young_limit", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__mk_prod_accu_5119", 
                "__cxa_finalize", 
                "camlNCoq_Init_Datatypes", 
                "__gmon_start__", 
                "caml_call_gc", 
                "camlNativevalues__mk_fix_accu_5185", 
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_name_6297", 
                "camlNativecode__get_match_6305"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Cos_rel_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Cos_rel.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rminus_2701", 
                "camlNCoq_Reals_Raxioms", 
                "camlNCoq_Init_Nat__const_NCoq_Init_Nat_pred_2665", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Reals_Rpow_def__x_pow_10_2677", 
                "camlNCoq_Arith_Factorial__x_fact_7_2674", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "caml_young_limit", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Nat__x_sub_45_2728", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rdiv_2704", 
                "camlNCoq_Init_Nat", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Reals_Rdefinitions", 
                "caml_apply2", 
                "caml_curry2", 
                "caml_curry3", 
                "caml_call_gc", 
                "camlNCoq_Init_Nat__x_mul_27_2706", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Reals_Rfunctions__x_sum_f_R0_41_2802"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Vectors/_coq-native/NCoq_Vectors_VectorEq_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Vectors/.coq-native/NCoq_Vectors_VectorEq.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "camlNCoq_Vectors_VectorDef", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Logic", 
                "caml_young_limit", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_rect_2680", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_andb_2713", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Datatypes", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_sym_2912", 
                "__gmon_start__", 
                "camlNativevalues__mk_sw_accu_5114", 
                "__cxa_finalize", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNativevalues__mk_sort_accu_4950", 
                "caml_call_gc", 
                "caml_alloc3", 
                "camlNCoq_Init_Nat"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/Abstract/_coq-native/NCoq_Numbers_Integer_Abstract_ZParity_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/Abstract/.coq-native/NCoq_Numbers_Integer_Abstract_ZParity.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Finite_sets_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Finite_sets.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativecode__get_ind_6309", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_young_limit", 
                "__gmon_start__", 
                "caml_call_gc", 
                "camlNativevalues__str_decode_5828", 
                "__cxa_finalize", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_const_6301", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativecode__get_match_6305", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__mk_sw_accu_5114"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Unicode/_coq-native/NCoq_Unicode_Utf8_core_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Unicode/.coq-native/NCoq_Unicode_Utf8_core.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Init/_coq-native/NCoq_Init_Logic_Type_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Init/.coq-native/NCoq_Init_Logic_Type.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Init_Logic", 
                "camlNativecode__get_match_6305", 
                "caml_call_gc", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Datatypes", 
                "camlNativecode__get_const_6301", 
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_name_6297", 
                "__cxa_finalize", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/Abstract/_coq-native/NCoq_Numbers_Integer_Abstract_ZDivFloor_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/Abstract/.coq-native/NCoq_Numbers_Integer_Abstract_ZDivFloor.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Wellfounded/_coq-native/NCoq_Wellfounded_Well_Ordering_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Wellfounded/.coq-native/NCoq_Wellfounded_Well_Ordering.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "__cxa_finalize", 
                "camlNativecode__get_name_6297", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_young_limit", 
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_ind_6309", 
                "caml_call_gc", 
                "camlNCoq_Init_Specif", 
                "camlNativecode__get_const_6301", 
                "__gmon_start__", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_ind_accu_4947"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/BigZ/_coq-native/NCoq_Numbers_Integer_BigZ_BigZ_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/BigZ/.coq-native/NCoq_Numbers_Integer_BigZ_BigZ.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_call_gc", 
                "camlNCoq_Numbers_Natural_BigN_BigN__const_NCoq_Numbers_Natural_BigN_BigN_BigN_of_N_8988", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNCoq_ZArith_BinIntDef__const_NCoq_ZArith_BinIntDef_Z_testbit_4294", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_CompSpec2Type_3465", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "caml_apply4", 
                "camlNCoq_Numbers_Natural_BigN_BigN__const_NCoq_Numbers_Natural_BigN_BigN_BigN_eqb_6871", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lt_4420", 
                "caml_curry3", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751", 
                "camlNCoq_ZArith_BinIntDef__const_NCoq_ZArith_BinIntDef_Z_pow_2805", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "caml_apply2", 
                "camlNCoq_Numbers_Natural_BigN_BigN__const_NCoq_Numbers_Natural_BigN_BigN_BigN_odd_8972", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_opp_2764", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_curry5", 
                "camlNCoq_Numbers_Natural_BigN_BigN__const_NCoq_Numbers_Natural_BigN_BigN_BigN_gcd_8945", 
                "caml_young_limit", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_testbit_4294", 
                "camlNCoq_ZArith_BinIntDef__const_NCoq_ZArith_BinIntDef_Z_quotrem_3377", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_quotrem_3377", 
                "caml_curry4", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_div_3330", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_le_4426", 
                "camlNCoq_Numbers_Natural_BigN_BigN__x_pow_pos_4249_8800", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_ZArith_BinIntDef__const_NCoq_ZArith_BinIntDef_Z_mul_2790", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlNCoq_Bool_Bool__const_NCoq_Bool_Bool_iff_reflect_3024", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_modulo_3338", 
                "caml_allocN", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_PER_2889", 
                "camlNCoq_ZArith_BinIntDef__const_NCoq_ZArith_BinIntDef_Z_opp_2764", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "caml_curry7", 
                "camlNativecode__get_match_6305", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_Numbers_Natural_BigN_BigN__const_NCoq_Numbers_Natural_BigN_BigN_BigN_testbit_10324", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_snd_3023", 
                "camlNCoq_Numbers_Natural_BigN_BigN__const_NCoq_Numbers_Natural_BigN_BigN_BigN_shiftl_10319", 
                "caml_apply10", 
                "camlNCoq_ZArith_BinIntDef__const_NCoq_ZArith_BinIntDef_Z_modulo_3338", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_ZArith_BinIntDef__const_NCoq_ZArith_BinIntDef_Z_div_3330", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_pow_2805", 
                "camlNativevalues__str_decode_5828", 
                "caml_apply3", 
                "camlNCoq_Classes_Morphisms", 
                "camlNCoq_Numbers_Natural_BigN_BigN__const_NCoq_Numbers_Natural_BigN_BigN_BigN_div_eucl_8215", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNCoq_Numbers_Natural_BigN_BigN", 
                "camlNCoq_ZArith_BinIntDef", 
                "caml_curry2", 
                "camlNativecode__get_sort_6293", 
                "caml_apply5", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_ZArith_BinIntDef__const_NCoq_ZArith_BinIntDef_Z_add_2751", 
                "caml_alloc1", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_of_N_3193", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "caml_curry6", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_apply8", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_mul_2790", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Init/_coq-native/NCoq_Init_Nat_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Init/.coq-native/NCoq_Init_Nat.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_andb_2713", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rect_2885", 
                "caml_allocN", 
                "caml_curry2", 
                "camlNativecode__get_value_6218", 
                "camlNativevalues__str_decode_5828", 
                "caml_curry5", 
                "caml_young_limit", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_apply2", 
                "caml_curry3", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_snd_3023", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_call_gc", 
                "caml_alloc3", 
                "camlNativecode__get_name_6297", 
                "caml_apply4", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_curry4", 
                "camlNativevalues__mk_prod_accu_5119"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Relations_3_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Relations_3.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativecode__get_name_6297", 
                "__gmon_start__", 
                "caml_call_gc", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_young_limit", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_fix_accu_5185", 
                "__cxa_finalize", 
                "camlNCoq_Sets_Relations_2", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_match_6305"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/fourier/_coq-native/NCoq_fourier_Fourier_util_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/fourier/.coq-native/NCoq_fourier_Fourier_util.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_constant_accu_4657", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/romega/_coq-native/NCoq_romega_ROmega_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/romega/.coq-native/NCoq_romega_ROmega.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Abstract/_coq-native/NCoq_Numbers_Natural_Abstract_NGcd_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Abstract/.coq-native/NCoq_Numbers_Natural_Abstract_NGcd.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/micromega/_coq-native/NCoq_micromega_RingMicromega_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/micromega/.coq-native/NCoq_micromega_RingMicromega.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_micromega_OrderedRing__const_NCoq_micromega_OrderedRing_SORplus_wd_2730", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "caml_call_gc", 
                "camlNCoq_micromega_OrderedRing__const_NCoq_micromega_OrderedRing_SORtimes_wd_2749", 
                "camlNCoq_micromega_EnvRing__const_NCoq_micromega_EnvRing_PaddC_3224", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlNCoq_micromega_EnvRing__const_NCoq_micromega_EnvRing_Psub_3665", 
                "__cxa_finalize", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_micromega_EnvRing__const_NCoq_micromega_EnvRing_Pmul_3900", 
                "caml_alloc3", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativecode__get_name_6297", 
                "__gmon_start__", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativecode__get_ind_6309", 
                "camlNativecode__get_sort_6293", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "camlNCoq_micromega_EnvRing__const_NCoq_micromega_EnvRing_Padd_3564", 
                "camlNCoq_micromega_OrderedRing__const_NCoq_micromega_OrderedRing_SORrt_2859", 
                "camlNCoq_micromega_EnvRing__const_NCoq_micromega_EnvRing_norm_aux_5168", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_andb_2713", 
                "camlNCoq_micromega_Env__const_NCoq_micromega_Env_Env_2654", 
                "camlNCoq_micromega_EnvRing__const_NCoq_micromega_EnvRing_Pphi_4651", 
                "camlNCoq_PArith_BinPos", 
                "camlNCoq_micromega_EnvRing__const_NCoq_micromega_EnvRing_PEeval_4995", 
                "camlNCoq_micromega_EnvRing__const_NCoq_micromega_EnvRing_PsubC_3236", 
                "camlNCoq_setoid_ring_Ring_theory", 
                "camlNCoq_micromega_OrderedRing__const_NCoq_micromega_OrderedRing_SORopp_wd_2776", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "camlNCoq_Init_Logic", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_app_3138", 
                "caml_young_limit", 
                "camlNCoq_micromega_EnvRing__const_NCoq_micromega_EnvRing_Psquare_3963", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Lists_List__const_NCoq_Lists_List_nth_2884", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_micromega_OrderedRing__const_NCoq_micromega_OrderedRing_SORsetoid_2693", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_PArith_BinPos__x_add_67_2739", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_PArith_BinPos__x_succ_8_2676", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Lists_List__const_NCoq_Lists_List_map_3324"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_Eqdep_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_Eqdep.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__str_decode_5828", 
                "__gmon_start__", 
                "camlNativecode__get_const_6301", 
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Bool/_coq-native/NCoq_Bool_Bvector_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Bool/.coq-native/NCoq_Bool_Bvector.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Vectors_Vector__const_NCoq_Vectors_Vector_shiftrepeat_3199", 
                "caml_curry2", 
                "caml_allocN", 
                "camlNCoq_Vectors_Vector", 
                "camlNCoq_Vectors_Vector__const_NCoq_Vectors_Vector_const_3018", 
                "camlNCoq_Vectors_Vector__const_NCoq_Vectors_Vector_shiftout_3156", 
                "camlNativecode__get_match_6305", 
                "caml_curry3", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Vectors_Vector__x_shiftin_355_3191", 
                "caml_apply2", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_call_gc", 
                "camlNCoq_Vectors_Vector__const_NCoq_Vectors_Vector_map_3337", 
                "camlNCoq_Vectors_Vector__const_NCoq_Vectors_Vector_last_3009", 
                "camlNCoq_Vectors_Vector__const_NCoq_Vectors_Vector_tl_3149", 
                "caml_young_limit", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_apply3", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Vectors_Vector__const_NCoq_Vectors_Vector_hd_3002", 
                "caml_curry4", 
                "camlNativevalues__mk_sw_accu_5114", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlCamlinternalLazy__force_lazy_block_1264"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Abstract/_coq-native/NCoq_Numbers_Natural_Abstract_NParity_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Abstract/.coq-native/NCoq_Numbers_Natural_Abstract_NParity.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/NatInt/_coq-native/NCoq_Numbers_NatInt_NZDiv_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/NatInt/.coq-native/NCoq_Numbers_NatInt_NZDiv.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Strings/_coq-native/NCoq_Strings_String_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Strings/.coq-native/NCoq_Strings_String.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_curry2", 
                "camlNativecode__get_const_6301", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_call_gc", 
                "camlNativevalues__is_accu_5182", 
                "camlNCoq_Strings_Ascii__const_NCoq_Strings_Ascii_ascii_dec_2916", 
                "caml_curry3", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Init_Logic", 
                "caml_apply2", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "caml_curry4", 
                "camlNCoq_Strings_Ascii", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_sumbool_rec_2969", 
                "caml_apply4", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_name_6297", 
                "camlNativecode__get_value_6218", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__str_decode_5828", 
                "caml_alloc3", 
                "caml_apply3", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_young_limit", 
                "caml_curry5", 
                "caml_alloc1", 
                "camlNCoq_Init_Datatypes"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_PartSum_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_PartSum.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Reals_Rfunctions__x_sum_f_R0_41_2802", 
                "__cxa_finalize", 
                "camlNCoq_Reals_Rseries__const_NCoq_Reals_Rseries_Cauchy_crit_2693", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_call_gc"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Abstract/_coq-native/NCoq_Numbers_Natural_Abstract_NLcm_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Abstract/.coq-native/NCoq_Numbers_Natural_Abstract_NLcm.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Classes/_coq-native/NCoq_Classes_SetoidDec_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Classes/.coq-native/NCoq_Classes_SetoidDec.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlNCoq_Init_Datatypes", 
                "caml_curry3", 
                "caml_young_limit", 
                "caml_curry6", 
                "camlNCoq_Bool_Bool", 
                "caml_curry12", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_equivalence_2978", 
                "caml_apply3", 
                "camlNCoq_Arith_PeanoNat", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_complement_2669", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlNCoq_Init_Specif", 
                "caml_curry2", 
                "caml_curry4", 
                "camlNativecode__get_match_6305", 
                "caml_apply2", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Logic_Decidable__const_NCoq_Logic_Decidable_decidable_2654", 
                "caml_call_gc", 
                "camlNCoq_Classes_SetoidClass__const_NCoq_Classes_SetoidClass_equiv_2669", 
                "caml_curry15", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "caml_curry8", 
                "caml_curry14", 
                "caml_curry13", 
                "caml_apply5", 
                "caml_curry11", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_curry5", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_curry10", 
                "camlNCoq_Init_Logic"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/ltac/_coq-native/NCoq_ltac_LtacDummy_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/ltac/.coq-native/NCoq_ltac_LtacDummy.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Abstract/_coq-native/NCoq_Numbers_Natural_Abstract_NDiv_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Abstract/.coq-native/NCoq_Numbers_Natural_Abstract_NDiv.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__cxa_finalize", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/omega/_coq-native/NCoq_omega_Omega_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/omega/.coq-native/NCoq_omega_Omega.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_ZArith_base_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_ZArith_base.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/NatInt/_coq-native/NCoq_Numbers_NatInt_NZMulOrder_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/NatInt/.coq-native/NCoq_Numbers_NatInt_NZMulOrder.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Init/_coq-native/NCoq_Init_Nat_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Init/.coq-native/NCoq_Init_Nat.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_andb_2713", 
                "camlNCoq_Init_Datatypes", 
                "caml_call_gc", 
                "caml_young_limit", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rect_2885", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_snd_3023", 
                "camlNativevalues__mk_fix_accu_5185", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "__cxa_finalize", 
                "caml_alloc3"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Abstract/_coq-native/NCoq_Numbers_Natural_Abstract_NBase_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Abstract/.coq-native/NCoq_Numbers_Natural_Abstract_NBase.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/_coq-native/NCoq_Numbers_BinNums_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/.coq-native/NCoq_Numbers_BinNums.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_deregisterTMCloneTable", 
                "caml_young_limit", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_match_6305", 
                "camlNativecode__get_ind_6309", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativevalues__mk_sw_accu_5114", 
                "__cxa_finalize", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/QArith/_coq-native/NCoq_QArith_Qcanon_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/QArith/.coq-native/NCoq_QArith_Qcanon.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qcompare_2718", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qlt_2685", 
                "caml_alloc3", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qeq_2679", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qinv_2766", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Q_dec_2832", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qplus_2748", 
                "caml_curry3", 
                "camlNCoq_Init_Specif", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qlt_le_dec_2835", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_call_gc", 
                "caml_apply3", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qle_2682", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qmult_2751", 
                "camlNativevalues__str_decode_5828", 
                "caml_young_limit", 
                "caml_apply2", 
                "camlNativecode__get_value_6218", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_QArith_QArith_base", 
                "camlNCoq_QArith_Qreduction__const_NCoq_QArith_Qreduction_Qred_2664", 
                "caml_curry2", 
                "camlNCoq_Init_Logic", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qeq_dec_2732", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__mk_fix_accu_5185"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Ranalysis2_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Ranalysis2.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_InitialRing_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_InitialRing.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "camlNCoq_Setoids_Setoid", 
                "camlNativecode__get_ind_6309", 
                "caml_apply4", 
                "camlNCoq_Numbers_BinNums", 
                "caml_curry9", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "caml_apply3", 
                "camlNCoq_NArith_BinNat__x_eqb_86_3482", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_add_2702", 
                "camlNCoq_Classes_Morphisms", 
                "caml_curry3", 
                "caml_apply6", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_allocN", 
                "caml_call_gc", 
                "caml_curry7", 
                "caml_curry4", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "caml_curry5", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_curry2", 
                "caml_apply5", 
                "camlNCoq_NArith_BinNat", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativecode__get_value_6218", 
                "caml_alloc3", 
                "caml_curry11", 
                "camlNativevalues__mk_sort_accu_4950", 
                "caml_young_limit", 
                "camlNCoq_setoid_ring_Ring_theory", 
                "caml_apply2", 
                "caml_curry6", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_mul_3432", 
                "camlNativevalues__mk_prod_accu_5119", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativecode__get_const_6301", 
                "camlNativecode__get_name_6297", 
                "caml_apply11", 
                "caml_curry10", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/NArith/_coq-native/NCoq_NArith_Ngcd_def_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/NArith/.coq-native/NCoq_NArith_Ngcd_def.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rbase_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rbase.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/_coq-native/NCoq_Numbers_BigNumPrelude_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/.coq-native/NCoq_Numbers_BigNumPrelude.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_ZArith_Zdiv", 
                "caml_curry4", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_apply4"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zpow_alt_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zpow_alt.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Numbers_BinNums", 
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_const_6301", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_iter_op_3941", 
                "camlNativecode__get_match_6305", 
                "__gmon_start__", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_call_gc", 
                "caml_young_limit", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_ZArith_BinInt"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Init/_coq-native/NCoq_Init_Logic_Type_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Init/.coq-native/NCoq_Init_Logic_Type.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_young_limit", 
                "caml_curry3", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_call_gc", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_apply3", 
                "camlNCoq_Init_Logic", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_curry5", 
                "caml_curry6", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Datatypes"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sorting/_coq-native/NCoq_Sorting_Sorted_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Sorting/.coq-native/NCoq_Sorting_Sorted.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_and_rect_2712", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNativevalues__mk_sort_accu_4950", 
                "__gmon_start__", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Lists_List", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativecode__get_const_6301", 
                "camlNativecode__get_name_6297", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Init_Datatypes", 
                "caml_call_gc", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_list_rect_3084", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNativevalues__mk_ind_accu_4947", 
                "caml_young_limit"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Abstract/_coq-native/NCoq_Numbers_Natural_Abstract_NGcd_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Abstract/.coq-native/NCoq_Numbers_Natural_Abstract_NGcd.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Abstract/_coq-native/NCoq_Numbers_Natural_Abstract_NAddOrder_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Abstract/.coq-native/NCoq_Numbers_Natural_Abstract_NAddOrder.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Abstract/_coq-native/NCoq_Numbers_Natural_Abstract_NBase_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Abstract/.coq-native/NCoq_Numbers_Natural_Abstract_NBase.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FSetAVL_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FSetAVL.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/Abstract/_coq-native/NCoq_Numbers_Integer_Abstract_ZParity_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/Abstract/.coq-native/NCoq_Numbers_Integer_Abstract_ZParity.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "camlNativevalues__str_decode_5828", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/romega/_coq-native/NCoq_romega_ReflOmegaCore_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/romega/.coq-native/NCoq_romega_ReflOmegaCore.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_ZArith_BinIntDef__const_NCoq_ZArith_BinIntDef_Z_opp_2764", 
                "caml_curry30", 
                "camlNativecode__get_value_6218", 
                "caml_curry14", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Arith_PeanoNat", 
                "caml_curry13", 
                "camlNCoq_Lists_List__const_NCoq_Lists_List_nth_2884", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_Rmul_1_l_3290", 
                "caml_curry6", 
                "caml_curry27", 
                "caml_curry5", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_Rdistr_l_3342", 
                "caml_curry4", 
                "camlNCoq_Arith_PeanoNat__x_eqb_64_2757", 
                "caml_allocN", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Logic", 
                "caml_curry8", 
                "caml_call_gc", 
                "caml_apply4", 
                "caml_apply3", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_Radd_0_l_3238", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_Radd_assoc_3272", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_app_3138", 
                "caml_curry16", 
                "camlNativevalues__is_accu_5182", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_match_6305", 
                "camlNativecode__get_const_6301", 
                "caml_alloc1", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_le_4426", 
                "camlNCoq_ZArith_BinIntDef__const_NCoq_ZArith_BinIntDef_Z_mul_2790", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_Rmul_comm_3307", 
                "caml_curry3", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_Ropp_def_3388", 
                "camlNCoq_ZArith_BinIntDef__const_NCoq_ZArith_BinIntDef_Z_add_2751", 
                "caml_curry28", 
                "caml_curry7", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_Rsub_def_3361", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_ge_4429", 
                "camlNCoq_ZArith_Zorder", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_Rmul_assoc_3324", 
                "caml_apply2", 
                "camlNativevalues__mk_sort_accu_4950", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_ind_6309", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_apply6", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lt_4420", 
                "camlNCoq_ZArith_BinInt", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_andb_2713", 
                "camlNCoq_ZArith_BinIntDef", 
                "caml_curry9", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_alloc3", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_Radd_comm_3255", 
                "caml_curry2", 
                "caml_apply5", 
                "caml_apply7", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_gt_4423", 
                "camlNCoq_ZArith_BinIntDef__const_NCoq_ZArith_BinIntDef_Z_compare_2865", 
                "caml_young_limit"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_AltSeries_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_AltSeries.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_name_6297", 
                "camlNCoq_Reals_Rpow_def__x_pow_10_2677", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Reals_Raxioms", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_curry2", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_value_6218", 
                "caml_call_gc", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828", 
                "caml_apply2", 
                "caml_alloc1", 
                "camlNCoq_Reals_Raxioms__x_INR_12_2722", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rle_2695", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Nat__x_mul_27_2706", 
                "camlNCoq_Reals_Rdefinitions"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/Abstract/_coq-native/NCoq_Numbers_Integer_Abstract_ZPow_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/Abstract/.coq-native/NCoq_Numbers_Integer_Abstract_ZPow.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FSetBridge_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FSetBridge.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "__cxa_finalize", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/syntax/r_syntax_plugin_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/syntax/r_syntax_plugin.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlBigint__is_strictly_neg_1487", 
                "camlGlobnames__eq_gr_4115", 
                "camlList__rev_map_1264", 
                "camlBigint", 
                "_ITM_deregisterTMCloneTable", 
                "camlNames", 
                "camlCList__map_1515", 
                "camlMltop__add_known_module_3856", 
                "camlNotation__declare_numeral_interpreter_6269", 
                "caml_fresh_oo_id", 
                "camlBigint__neg_1468", 
                "caml_alloc1", 
                "caml_backtrace_pos", 
                "camlBigint__div2_with_rest_1483", 
                "camlBigint__less_than_1465", 
                "camlNames__of_string_1937", 
                "_ITM_registerTMCloneTable", 
                "caml_raise_exn", 
                "caml_young_limit", 
                "camlBigint__add_1453", 
                "camlBigint__sub_1456", 
                "caml_allocN", 
                "camlLoc__3", 
                "caml_alloc2", 
                "caml_call_gc", 
                "__gmon_start__", 
                "camlBigint__equal_1495"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/bin/coqchk": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/coqchk", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "mkfifo", 
                "send", 
                "getpeername", 
                "sigaltstack", 
                "fputc", 
                "calloc", 
                "truncate64", 
                "sigaction", 
                "system", 
                "abort", 
                "rename", 
                "dlerror", 
                "__libc_start_main", 
                "umask", 
                "sigfillset", 
                "tcdrain", 
                "getgrgid", 
                "geteuid", 
                "setuid", 
                "pthread_mutex_unlock", 
                "getenv", 
                "dlopen", 
                "readlink", 
                "listen", 
                "hypot", 
                "pthread_exit", 
                "modf", 
                "chown", 
                "fmin", 
                "setgroups", 
                "setgid", 
                "getservbyname", 
                "putenv", 
                "log10", 
                "chmod", 
                "close", 
                "sigpending", 
                "tan", 
                "getgroups", 
                "freeaddrinfo", 
                "connect", 
                "mmap64", 
                "__recvfrom_chk", 
                "pthread_cond_signal", 
                "frexp", 
                "open64", 
                "nice", 
                "tcgetattr", 
                "closedir", 
                "fmod", 
                "pthread_cond_wait", 
                "sigismember", 
                "memcmp", 
                "getrlimit64", 
                "__read_chk", 
                "__fprintf_chk", 
                "pthread_mutex_trylock", 
                "getrusage", 
                "__recv_chk", 
                "dlclose", 
                "inet_ntop", 
                "link", 
                "exit", 
                "strerror", 
                "sigemptyset", 
                "chroot", 
                "__sigsetjmp", 
                "wait", 
                "execve", 
                "__memmove_chk", 
                "strtol", 
                "getitimer", 
                "sqrt", 
                "pthread_attr_setdetachstate", 
                "expm1", 
                "sinh", 
                "tcflow", 
                "socketpair", 
                "chdir", 
                "memset", 
                "rmdir", 
                "cos", 
                "__gmon_start__", 
                "__vsnprintf_chk", 
                "memmove", 
                "setsockopt", 
                "execvp", 
                "tcflush", 
                "getgid", 
                "utimes", 
                "sin", 
                "access", 
                "alarm", 
                "dup3", 
                "pthread_create", 
                "isatty", 
                "free", 
                "__fxstat64", 
                "ceil", 
                "readdir64", 
                "sigsuspend", 
                "__memcpy_chk", 
                "fork", 
                "getpwuid", 
                "getpwnam", 
                "getnameinfo", 
                "initgroups", 
                "fputs", 
                "pthread_mutex_lock", 
                "atan2", 
                "log1p", 
                "pthread_setspecific", 
                "getsockopt", 
                "pow", 
                "socket", 
                "__errno_location", 
                "sigdelset", 
                "read", 
                "__xstat64", 
                "__lxstat64", 
                "tcsendbreak", 
                "accept4", 
                "waitpid", 
                "fwrite", 
                "unlink", 
                "memcpy", 
                "pthread_sigmask", 
                "getservbyport", 
                "fchmod", 
                "strlen", 
                "write", 
                "inet_pton", 
                "mktime", 
                "floor", 
                "bind", 
                "localtime", 
                "opendir", 
                "fflush", 
                "__longjmp_chk", 
                "fcntl", 
                "rewinddir", 
                "execv", 
                "exp", 
                "acos", 
                "strtod", 
                "pthread_mutex_destroy", 
                "__register_atfork", 
                "getgrnam", 
                "getprotobynumber", 
                "getaddrinfo", 
                "getpid", 
                "pthread_getspecific", 
                "tanh", 
                "munmap", 
                "setsid", 
                "getuid", 
                "cfgetospeed", 
                "getcwd", 
                "realloc", 
                "pthread_join", 
                "time", 
                "pthread_mutex_init", 
                "dlsym", 
                "getsockname", 
                "__snprintf_chk", 
                "pthread_attr_init", 
                "sendto", 
                "sigaddset", 
                "getegid", 
                "__isoc99_sscanf", 
                "ldexp", 
                "cfsetospeed", 
                "getppid", 
                "tcsetattr", 
                "gethostbyname_r", 
                "log", 
                "symlink", 
                "getprotobyname", 
                "cfgetispeed", 
                "fchown", 
                "getlogin", 
                "nanosleep", 
                "atan", 
                "ftruncate64", 
                "secure_getenv", 
                "select", 
                "pthread_cond_init", 
                "gmtime", 
                "kill", 
                "pthread_cond_broadcast", 
                "gethostname", 
                "__stack_chk_fail", 
                "sigwait", 
                "__fdelt_chk", 
                "sigprocmask", 
                "mkdir", 
                "pthread_cond_destroy", 
                "cosh", 
                "cfsetispeed", 
                "pipe2", 
                "gettimeofday", 
                "strnlen", 
                "asin", 
                "gethostbyaddr_r", 
                "pthread_key_create", 
                "malloc", 
                "lseek64", 
                "setitimer"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_Compare_dec_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_Compare_dec.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Datatypes", 
                "caml_young_limit", 
                "camlNCoq_Arith_Le", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Arith_Gt", 
                "camlNCoq_Init_Peano", 
                "camlNativecode__get_value_6218", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rec_2894", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_rec_2685", 
                "caml_call_gc", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Arith_Lt", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_sumbool_rec_2969", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "__gmon_start__", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Init_Peano__const_NCoq_Init_Peano_lt_2785", 
                "camlNativevalues__mk_sw_accu_5114", 
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize", 
                "camlNCoq_Arith_PeanoNat", 
                "camlNativecode__get_name_6297"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rminmax_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rminmax.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_curry4", 
                "camlNativecode__get_match_6305", 
                "caml_alloc1", 
                "caml_apply8", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rle_2695", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rmax_2709", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "caml_apply3", 
                "camlNCoq_Reals_ROrderedType__const_NCoq_Reals_ROrderedType_Rcompare_2792", 
                "camlNCoq_Init_Logic", 
                "caml_curry6", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "caml_apply4", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_Reals_ROrderedType", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "caml_young_limit", 
                "caml_apply10", 
                "caml_curry2", 
                "caml_apply2", 
                "camlNCoq_Reals_Rbasic_fun", 
                "caml_curry7", 
                "caml_curry3", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_curry5", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_PER_2889", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_CompSpec2Type_3465", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_Classes_Morphisms", 
                "caml_call_gc", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rmin_2660", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_rect_2887"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zhints_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zhints.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_Rings_Z_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_Rings_Z.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_alloc1", 
                "caml_young_limit", 
                "caml_call_gc", 
                "camlNCoq_ZArith_BinInt", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_RealField_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_RealField.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "_ITM_deregisterTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__cxa_finalize", 
                "__gmon_start__", 
                "camlNativecode__get_const_6301"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/micromega/_coq-native/NCoq_micromega_VarMap_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/micromega/.coq-native/NCoq_micromega_VarMap.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativecode__get_match_6305", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Numbers_BinNums", 
                "__cxa_finalize", 
                "camlNativevalues__mk_prod_accu_5119", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_ind_6309", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_young_limit", 
                "camlNativevalues__mk_ind_accu_4947", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/fourier/_coq-native/NCoq_fourier_Fourier_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/fourier/.coq-native/NCoq_fourier_Fourier.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_Lt_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_Lt.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "__cxa_finalize", 
                "camlNativecode__get_const_6301", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sorting/_coq-native/NCoq_Sorting_PermutEq_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Sorting/.coq-native/NCoq_Sorting_PermutEq.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_Ring_theory_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_Ring_theory.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Setoids_Setoid", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_ind_accu_4947", 
                "__gmon_start__", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "camlNativecode__get_name_6297", 
                "__cxa_finalize", 
                "caml_call_gc", 
                "camlNCoq_Init_Datatypes", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Classes_Morphisms", 
                "caml_young_limit", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativecode__get_match_6305"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Init/_coq-native/NCoq_Init_Wf_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Init/.coq-native/NCoq_Init_Wf.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_young_limit", 
                "camlNativecode__get_ind_6309", 
                "caml_curry5", 
                "caml_curry6", 
                "caml_apply3", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_call_gc", 
                "camlNativecode__get_const_6301", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_curry2", 
                "caml_apply2", 
                "caml_curry8", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__is_accu_5182", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__mk_sw_accu_5114"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_SeqSeries_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_SeqSeries.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_const_6301"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/toploop/coqidetop_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/toploop/coqidetop.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlBigint__to_string_1472", 
                "camlLexing__engine_1237", 
                "camlStm__current_proof_depth_12409", 
                "camlEvd__find_6390", 
                "camlEnviron", 
                "camlCErrors__anomaly_1311", 
                "camlPrintf__sprintf_1315", 
                "camlCoq_config__27", 
                "camlPp__hov_1649", 
                "camlPrintexc__to_string_1304", 
                "camlStm__finish_inner_20471", 
                "camlLoadpath__is_in_load_paths_4801", 
                "camlNametab__full_name_module_6170", 
                "camlPrinter__pr_ltype_env_5902", 
                "camlLibnames__string_of_path_5072", 
                "caml_int_of_string", 
                "camlPpannotation", 
                "camlPp__string_of_ppcmds_1866", 
                "camlFeedback__add_feeder_1621", 
                "camlFlags__14", 
                "camlPptactic__pr_raw_tactic_level_18044", 
                "camlPervasives__flush_all_1201", 
                "camlList__fold_right_1292", 
                "camlList__length_aux_1204", 
                "camlRichpp__raw_print_2526", 
                "camlExninfo__iraise_1245", 
                "camlStr__compile_1424", 
                "camlPp__v_1643", 
                "camlPp_control", 
                "camlPervasives__exit_1398", 
                "camlNotation__find_notation_extra_printing_rules_7580", 
                "camlPp__strbrk_1420", 
                "camlCoqworkmgrApi__init_1618", 
                "camlNames", 
                "camlStateid", 
                "camlList__rev_append_1236", 
                "camlFormat__pp_print_flush_1531", 
                "camlStm", 
                "camlFlags__15", 
                "camlPervasives__print_endline_1310", 
                "camlPpvernac__pr_vernac_6669", 
                "camlUtil", 
                "camlCompat__entry_parse_21022", 
                "camlList__iter_1272", 
                "camlLoc", 
                "camlGlobal", 
                "camlPervasives__12", 
                "unix_getpid", 
                "camlList__map_1248", 
                "camlLexing__from_function_1260", 
                "camlPrinter__pr_evar_7364", 
                "camlCamlinternalOO__set_methods_1825", 
                "camlPp__8", 
                "camlPpvernac", 
                "camlStr__parse_1538", 
                "camlBytes__blit_string_1267", 
                "camlMap__fold_1463", 
                "camlLibnames__qualid_of_reference_5310", 
                "camlContext__map_constr_4901", 
                "camlCoq_config__29", 
                "camlFeedback", 
                "camlBytes__sub_1234", 
                "camlRichpp__xml_of_rich_pp_2485", 
                "__cxa_finalize", 
                "camlUsage__add_to_usage_1230", 
                "camlVernac", 
                "caml_alloc2", 
                "camlFlags__12", 
                "camlStm__edit_at_12314", 
                "camlBacktrace__add_backtrace_1282", 
                "caml_exn_Not_found", 
                "caml_ml_flush", 
                "camlCList__find_map_1996", 
                "camlRichpp__rich_pp_1814", 
                "camlCoq_config__30", 
                "camlStack", 
                "camlPcoq", 
                "camlControl", 
                "camlCamlinternalOO__get_method_labels_1437", 
                "camlGoptions__set_option_value_3690", 
                "camlBytes__copy_1226", 
                "camlSpawned__get_channels_1693", 
                "_ITM_deregisterTMCloneTable", 
                "camlLexing__from_string_1266", 
                "camlStm__get_ast_12260", 
                "camlMap__bindings_aux_1658", 
                "camlStm__join_12072", 
                "camlReductionops", 
                "camlBuffer__create_1209", 
                "camlEnviron__fold_named_context_5174", 
                "camlPpconstr", 
                "caml_young_ptr", 
                "camlNames__to_string_2462", 
                "camlEvd__evar_filtered_env_5663", 
                "caml_backtrace_pos", 
                "camlStm__add_12274", 
                "camlPervasives__$5e_1117", 
                "camlLoc__make_loc_1218", 
                "camlPervasives__$40_1166", 
                "camlPp_control__4", 
                "caml_mutex_new", 
                "camlOption__map_1252", 
                "caml_fresh_oo_id", 
                "camlBuffer__resize_1237", 
                "camlCErrors__errorlabstrm_1338", 
                "caml_make_vect", 
                "camlCamlinternalOO__new_methods_variables_1493", 
                "camlPervasives__output_1216", 
                "camlHashtbl", 
                "camlList__1", 
                "caml_exn_Invalid_argument", 
                "camlGoptions", 
                "camlChar", 
                "camlSearch__fun_7791", 
                "camlCList__map_1515", 
                "camlStm__query_inner_20740", 
                "caml_mutex_unlock", 
                "caml_allocN", 
                "camlCoqtop", 
                "camlArray__iter_1252", 
                "camlStm__621", 
                "camlPrinter__pr_goal_concl_style_env_5900", 
                "camlPp__str_1375", 
                "camlHashtbl__add_1391", 
                "camlPptactic", 
                "caml_exn_Assert_failure", 
                "camlList__find_1427", 
                "camlCamlinternalOO__new_variable_1487", 
                "caml_ml_array_bound_error", 
                "camlProof_global__cur_pstate_4760", 
                "camlProof_using__to_string_4221", 
                "camlPp__3", 
                "camlPp_control__set_gp_1211", 
                "caml_call_gc", 
                "camlKindops__string_of_definition_kind_1224", 
                "camlStack__pop_1218", 
                "camlControl__check_for_interrupt_1300", 
                "camlCamlinternalOO__init_class_1519", 
                "camlLib", 
                "camlContext__to_tuple_4817", 
                "camlBuffer", 
                "__gmon_start__", 
                "camlCompat__parsable_21016", 
                "caml_mutex_lock", 
                "camlRichpp", 
                "camlBytes__map_1332", 
                "camlVernac__is_navigation_vernac_1923", 
                "camlConstrintern__intern_constr_pattern_inner_13533", 
                "camlEvarutil__nf_evar_5841", 
                "caml_modify", 
                "caml_exn_Failure", 
                "camlProof_global__get_all_proof_names_4550", 
                "camlPervasives__failwith_1005", 
                "camlList__find_all_1437", 
                "camlStateid__of_int_1213", 
                "camlRichpp__richpp_of_pp_2508", 
                "camlCThread__thread_friendly_read_1422", 
                "camlHashtbl__find_1416", 
                "camlStm__interp_12391", 
                "camlProof_global", 
                "camlCamlinternalOO__create_object_opt_1553", 
                "camlStack__push_1215", 
                "caml_raise_exn", 
                "camlPervasives__11", 
                "camlCList__append_1547", 
                "camlList__flatten_1243", 
                "camlPervasives__string_of_int_1150", 
                "camlLexing__from_channel_1262", 
                "camlPrintf__fprintf_1294", 
                "camlFlags__with_option_1204", 
                "camlCErrors", 
                "camlVernacentries", 
                "caml_young_limit", 
                "camlFlags__11", 
                "camlString__concat_1300", 
                "camlPervasives", 
                "camlList__rev_map_1264", 
                "camlCList__fold_left_until_1804", 
                "caml_c_call", 
                "camlList__exists_1350", 
                "camlProof__map_structured_proof_2028", 
                "caml_string_equal", 
                "camlSys__set_signal_1250", 
                "camlGlobal__assert_not_parsing_3775", 
                "_ITM_registerTMCloneTable", 
                "camlCamlinternalOO__make_class_1532", 
                "camlSys", 
                "camlPp__glue_1211", 
                "camlFilename", 
                "camlCErrors__print_inner_1903", 
                "camlPrinter__pr_var_list_decl_7044", 
                "camlStream__of_string_4292", 
                "camlConstrintern__132", 
                "camlCamlinternalOO__create_table_1512", 
                "caml_alloc1", 
                "camlOption", 
                "camlFormat__formatter_of_buffer_1663", 
                "camlFlags__13", 
                "camlFlags", 
                "camlLibnames__string_of_reference_5316", 
                "camlOption__equal_1210", 
                "camlEnviron__reset_with_named_context_5166", 
                "camlDyn__prj_2667", 
                "camlCErrors__user_err_loc_1346", 
                "camlTermops__compact_named_context_reverse_7058", 
                "camlList__fold_left_1286", 
                "camlPcoq__parse_string_22211", 
                "camlStm__cur_tip_7324", 
                "camlEvarutil__non_instantiated_6393", 
                "camlHashtbl__create_inner_2188", 
                "camlList__mem_1371", 
                "camlGoptions__get_tables_3754", 
                "camlKindops__string_of_theorem_kind_1221", 
                "camlAux_file__load_aux_file_for_1607"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/nsatz/_coq-native/NCoq_nsatz_Nsatz_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/nsatz/.coq-native/NCoq_nsatz_Nsatz.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_curry11", 
                "caml_apply2", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_setoid_ring_Ring_polynom", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_pow_N_2736", 
                "caml_curry12", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_NArith_BinNat", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_setoid_ring_InitialRing__const_NCoq_setoid_ring_InitialRing_gen_phiZ_2884", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_opp_def_3316", 
                "caml_allocN", 
                "camlNCoq_QArith_QArith_base", 
                "caml_curry6", 
                "caml_curry2", 
                "camlNCoq_Reals_Raxioms", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_setoid_ring_Ring_polynom__const_NCoq_setoid_ring_Ring_polynom_Padd_3564", 
                "caml_curry9", 
                "caml_alloc3", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_setoid_ring_Ring_polynom__const_NCoq_setoid_ring_Ring_polynom_Pmul_3900", 
                "camlNCoq_setoid_ring_Ring_polynom__const_NCoq_setoid_ring_Ring_polynom_Pphi_4739", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_add_0_l_2982", 
                "camlNCoq_setoid_ring_Integral_domain", 
                "camlNCoq_ZArith_BinInt", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_add_assoc_3057", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_call_gc", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_to_nat_4062", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_distr_l_3205", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_mul_1_l_3093", 
                "camlNCoq_setoid_ring_Ring_polynom__const_NCoq_setoid_ring_Ring_polynom_Peq_3069", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_add_comm_3019", 
                "caml_curry3", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_setoid_ring_Ring_polynom__const_NCoq_setoid_ring_Ring_polynom_PEeval_5123", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_sub_def_3280", 
                "camlNCoq_Numbers_BinNums", 
                "caml_curry4", 
                "camlNCoq_Reals_Rdefinitions", 
                "caml_apply3", 
                "caml_curry13", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_of_nat_4068", 
                "camlNCoq_setoid_ring_Ring_polynom__const_NCoq_setoid_ring_Ring_polynom_norm_aux_5298", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_mul_assoc_3167", 
                "camlNCoq_Lists_List__const_NCoq_Lists_List_map_3324", 
                "caml_curry10", 
                "camlNCoq_ZArith_Zbool", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_young_limit", 
                "camlNCoq_setoid_ring_InitialRing", 
                "camlNCoq_Reals_RIneq", 
                "caml_alloc1", 
                "camlNCoq_Lists_List__const_NCoq_Lists_List_nth_2884", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_Symmetric_2974", 
                "camlNativecode__get_name_6297"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/extraction/_coq-native/NCoq_extraction_ExtrHaskellZInteger_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/extraction/.coq-native/NCoq_extraction_ExtrHaskellZInteger.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_Field_theory_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_Field_theory.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "caml_call_gc", 
                "camlNCoq_setoid_ring_Ring_polynom__const_NCoq_setoid_ring_Ring_polynom_Peq_3069", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_morph1_3732", 
                "camlNCoq_setoid_ring_Ring_theory", 
                "camlNCoq_setoid_ring_Ring_polynom__const_NCoq_setoid_ring_Ring_polynom_Pphi_pow_6152", 
                "camlNCoq_ZArith_BinInt__x_pos_sub_42_2722", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Classes_Morphisms", 
                "camlNCoq_setoid_ring_Ring_polynom__const_NCoq_setoid_ring_Ring_polynom_Pphi_dev_6242", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Setoids_Setoid", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_ARmul_1_l_3032", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_ARmul_assoc_3091", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_sort_6293", 
                "__cxa_finalize", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_app_3138", 
                "camlNativecode__get_const_6301", 
                "caml_young_limit", 
                "camlNCoq_PArith_BinPos", 
                "camlNCoq_setoid_ring_Ring_polynom__const_NCoq_setoid_ring_Ring_polynom_PEeval_5123", 
                "camlNCoq_PArith_BinPos__x_eqb_445_3384", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_ARsub_def_3198", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_setoid_ring_Ring_polynom__const_NCoq_setoid_ring_Ring_polynom_PNSubstL_4685", 
                "camlNCoq_setoid_ring_Ring_polynom__const_NCoq_setoid_ring_Ring_polynom_norm_aux_5298", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_pow_pos_2687", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_morph0_3705", 
                "camlNCoq_NArith_BinNat__x_eqb_86_3482", 
                "camlNCoq_setoid_ring_BinList__const_NCoq_setoid_ring_BinList_nth_2713", 
                "camlNCoq_PArith_BinPos__x_mul_313_2995", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_ARopp_mul_l_3144", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_ARmul_0_l_3057", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "camlNCoq_setoid_ring_Ring_polynom", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_rpow_pow_N_4046"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rtrigo_calc_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rtrigo_calc.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "caml_alloc1", 
                "camlNCoq_Reals_Rtrigo1", 
                "camlNCoq_Reals_Rtrigo_def__const_NCoq_Reals_Rtrigo_def_sin_2779", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Reals_Rdefinitions", 
                "__gmon_start__", 
                "camlNCoq_Reals_Rtrigo1__const_NCoq_Reals_Rtrigo1_tan_2711", 
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize", 
                "camlNCoq_Reals_Rtrigo_def__const_NCoq_Reals_Rtrigo_def_cos_2759"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_RelationalChoice_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_RelationalChoice.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Peano/_coq-native/NCoq_Numbers_Natural_Peano_NPeano_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Peano/.coq-native/NCoq_Numbers_Natural_Peano_NPeano.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Wf__const_NCoq_Init_Wf_well_founded_2736", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "camlNCoq_Program_Basics", 
                "caml_alloc1", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_snd_3023", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rect_2885", 
                "camlNativecode__get_match_6305", 
                "caml_young_limit", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNCoq_Arith_PeanoNat", 
                "camlNCoq_Init_Peano", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_relation_equivalence_3279", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_equivalence_2978", 
                "camlNCoq_Init_Nat__x_sub_45_2728", 
                "camlNCoq_Classes_Morphisms_Prop", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Init_Peano__const_NCoq_Init_Peano_lt_2785", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Init_Nat__x_mul_27_2706", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNCoq_Init_Wf", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_PER_2889", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Classes_Morphisms", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "camlNCoq_Relations_Relation_Definitions__const_NCoq_Relations_Relation_Definitions_relation_2654", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Init_Nat", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_CompSpec2Type_3465", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_andb_2713", 
                "caml_alloc3", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rec_2894", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlNCoq_Bool_Bool__const_NCoq_Bool_Bool_iff_reflect_3024", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "caml_call_gc", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_rect_2887"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_Rings_Q_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_Rings_Q.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_call_gc", 
                "camlNativevalues__str_decode_5828", 
                "caml_curry3", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_QArith_QArith_base", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_curry2", 
                "caml_apply2", 
                "caml_apply3", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_value_6218", 
                "caml_alloc1", 
                "camlNativecode__get_const_6301", 
                "caml_young_limit"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/NatPairs/_coq-native/NCoq_Numbers_Integer_NatPairs_ZNatPairs_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/NatPairs/.coq-native/NCoq_Numbers_Integer_NatPairs_ZNatPairs.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_EqdepFacts_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_EqdepFacts.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_proj1_sig_2802", 
                "caml_apply6", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_projT1_2862", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_name_6297", 
                "caml_curry7", 
                "caml_apply2", 
                "caml_call_gc", 
                "caml_curry4", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_projT2_2876", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNativecode__get_match_6305", 
                "camlNativecode__get_value_6218", 
                "camlNativevalues__mk_ind_accu_4947", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_curry6", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_proj2_sig_2816", 
                "caml_curry8", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_sort_6293", 
                "caml_curry9", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_sort_accu_4950", 
                "caml_young_limit", 
                "caml_curry3", 
                "caml_curry5", 
                "camlNativevalues__str_decode_5828", 
                "caml_apply3", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_rect_2887"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/NatInt/_coq-native/NCoq_Numbers_NatInt_NZProperties_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/NatInt/.coq-native/NCoq_Numbers_NatInt_NZProperties.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rderiv_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rderiv.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_curry3", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "caml_apply3", 
                "caml_apply2", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rminus_2701", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rdiv_2704", 
                "camlNCoq_Init_Logic", 
                "caml_curry4", 
                "camlNativecode__get_const_6301", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_call_gc", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Reals_Rlimit__const_NCoq_Reals_Rlimit_limit1_in_2810"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FMapFullAVL_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FMapFullAVL.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/extraction/_coq-native/NCoq_extraction_ExtrHaskellBasic_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/extraction/.coq-native/NCoq_extraction_ExtrHaskellBasic.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/micromega/_coq-native/NCoq_micromega_OrderedRing_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/micromega/.coq-native/NCoq_micromega_OrderedRing.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNativecode__get_sort_6293", 
                "caml_call_gc", 
                "__cxa_finalize", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_prod_accu_5119", 
                "__gmon_start__", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "camlNCoq_setoid_ring_Ring_theory", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Setoids_Setoid", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_Classes_Morphisms", 
                "camlNativevalues__mk_sw_accu_5114", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rcomplete_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rcomplete.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/MSets/_coq-native/NCoq_MSets_MSetWeakList_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/MSets/.coq-native/NCoq_MSets_MSetWeakList.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zmax_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zmax.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_constant_accu_4657"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Machin_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Machin.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "camlNativevalues__str_decode_5828", 
                "caml_young_limit", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rdiv_2704", 
                "caml_call_gc", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNCoq_Reals_Ratan__const_NCoq_Reals_Ratan_Ratan_seq_2727", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/btauto/_coq-native/NCoq_btauto_Reflect_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/btauto/.coq-native/NCoq_btauto_Reflect.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_andb_2713", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_btauto_Algebra__const_NCoq_btauto_Algebra_Decidable_null_3040", 
                "caml_apply2", 
                "camlNativecode__get_const_6301", 
                "caml_curry4", 
                "caml_apply4", 
                "caml_curry11", 
                "camlNCoq_PArith_BinPos", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_orb_2719", 
                "caml_curry2", 
                "camlNCoq_btauto_Algebra__const_NCoq_btauto_Algebra_list_nth_3067", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "caml_apply6", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Classes_DecidableClass__const_NCoq_Classes_DecidableClass_Decidable_witness_2667", 
                "caml_alloc3", 
                "caml_apply3", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_btauto_Algebra__x_poly_add_308_3217", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_curry8", 
                "caml_curry9", 
                "camlNCoq_btauto_Algebra__x_poly_mul_378_3329", 
                "caml_young_limit", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_ind_accu_4947", 
                "caml_call_gc", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_xorb_2735", 
                "caml_curry3", 
                "camlNCoq_PArith_BinPos__x_peano_rect_1003_4250", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_btauto_Algebra"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zmisc_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zmisc.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__str_decode_5828", 
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sorting/_coq-native/NCoq_Sorting_PermutSetoid_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Sorting/.coq-native/NCoq_Sorting_PermutSetoid.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativecode__get_name_6297", 
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable", 
                "caml_call_gc", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Sets_Multiset__const_NCoq_Sets_Multiset_munion_2748", 
                "camlNCoq_Sets_Multiset", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Sets_Multiset__const_NCoq_Sets_Multiset_meq_2704", 
                "__cxa_finalize", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Sets_Multiset__const_NCoq_Sets_Multiset_EmptyBag_2681", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Sets_Multiset__const_NCoq_Sets_Multiset_SingletonBag_2688", 
                "caml_young_limit"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/extraction/extraction_plugin_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/extraction/extraction_plugin.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlCMap__fun_2503", 
                "camlPp__3", 
                "camlTypeops__type_of_constant_type_knowing_parameters_5798", 
                "camlList__length_aux_1204", 
                "camlSummary__ref_4624", 
                "camlList__nth_1219", 
                "camlInt__find_1843", 
                "camlHook__set_1214", 
                "camlOption__map_1252", 
                "camlPrinter", 
                "camlTerm__decompose_prod_n_5431", 
                "camlCList__init_1565", 
                "camlArray__to_list_1285", 
                "camlSet__elements_aux_1509", 
                "camlConstr__mkApp_4803", 
                "camlGenarg__register0_7996", 
                "camlPp__glue_1211", 
                "_ITM_deregisterTMCloneTable", 
                "camlVars__subst1_3772", 
                "camlGlobal__assert_not_parsing_3775", 
                "caml_string_compare", 
                "camlGoptions", 
                "camlOpaqueproof__force_proof_4852", 
                "camlNametab__basename_of_global_6218", 
                "camlLib", 
                "camlInductive", 
                "camlTacinterp__interp_genarg_12959", 
                "camlMltop__add_known_module_3856", 
                "camlCArray__exists_1379", 
                "caml_alloc2", 
                "camlGlobal__lookup_module_4746", 
                "camlFilename__chop_suffix_1341", 
                "camlMod_subst__kn_of_delta_5188", 
                "caml_exn_Not_found", 
                "camlTerm__lamdec_rec_5424", 
                "caml_allocN", 
                "caml_alloc_dummy", 
                "camlBytes__apply1_1348", 
                "camlCErrors__anomaly_1311", 
                "camlCList__combine_1603", 
                "camlVars__make_subst_3754", 
                "camlSet__singleton_1291", 
                "camlSorts__is_prop_1706", 
                "camlHMap__remove_1654", 
                "camlReductionops", 
                "camlArray__copy_1229", 
                "camlNametab", 
                "camlContext__lookup_4443", 
                "camlPervasives__failwith_1005", 
                "camlScanf", 
                "camlChar__chr_1206", 
                "camlTypeops__type_of_constant_knowing_parameters_5808", 
                "camlGlobnames", 
                "camlTermops", 
                "camlModops__add_module_5130", 
                "camlReductionops__splay_prod_8848", 
                "camlPcoq", 
                "camlModops__error_is_a_functor_4561", 
                "camlTermops__push_rels_assum_5567", 
                "caml_young_ptr", 
                "camlLibnames__string_of_path_5072", 
                "camlStr__compile_1424", 
                "camlSet__iter_1460", 
                "camlEvd__from_env_7032", 
                "camlUnicode__is_basic_ascii_1282", 
                "camlGlobnames__eq_gr_4115", 
                "camlGenarg__create_arg_7984", 
                "camlCList__for_all_i_1919", 
                "camlOption__equal_1210", 
                "camlEnviron__push_rec_types_4520", 
                "camlCArray__for_all_i_1424", 
                "camlChar", 
                "camlVernac_classifier__64", 
                "camlUniverses__fresh_inductive_instance_6528", 
                "camlPervasives__max_1030", 
                "camlPp_control__with_output_to_1348", 
                "camlCList__skipn_2319", 
                "camlGlobal__lookup_mind_4716", 
                "camlModops__add_structure_5129", 
                "camlSmartlocate__global_with_alias_3264", 
                "camlHMap__mem_2279", 
                "camlGenintern", 
                "camlGlobal__lookup_modtype_4757", 
                "camlDyn__repr_1602", 
                "camlPp__prvect_with_sep_1971", 
                "caml_exn_Assert_failure", 
                "caml_fresh_oo_id", 
                "camlTacsubst__subst_genarg_4426", 
                "camlCList__concat_1574", 
                "camlLibobject__default_object_2078", 
                "__gmon_start__", 
                "camlPervasives__string_of_int_1150", 
                "camlFlags__if_verbose_1334", 
                "camlOption", 
                "camlPp__h_1640", 
                "camlEgramml__extend_vernac_command_grammar_3774", 
                "camlGlobnames__subst_global_4374", 
                "camlLibobject", 
                "camlStr__parse_1538", 
                "camlStdarg", 
                "camlFilename", 
                "camlNames__equal_2926", 
                "camlHMap__elements_1802", 
                "camlVernac_classifier__66", 
                "camlMod_typing__translate_mse_5367", 
                "caml_exn_End_of_file", 
                "camlFormat__pp_set_min_space_left_1590", 
                "camlLibnames__parse_dir_4492", 
                "camlGenarg__out_gen_5922", 
                "camlCArray__equal_norefl_1364", 
                "caml_update_dummy", 
                "camlTermops__nbrec_6963", 
                "camlNames__to_string_2902", 
                "camlCErrors__noncritical_1426", 
                "camlChar__escaped_1211", 
                "camlList__rev_append_1236", 
                "camlCList__map_1515", 
                "camlHMap__add_2284", 
                "camlLibnames__qualid_of_reference_5310", 
                "camlGeninterp__val_tag_3844", 
                "camlMod_subst__force_6165", 
                "caml_backtrace_pos", 
                "camlArray__fold_left_1304", 
                "camlNames", 
                "camlCList__iteri_1913", 
                "camlCList__firstn_2298", 
                "__cxa_finalize", 
                "camlModops__module_body_of_type_4642", 
                "camlCList__index_f_1789", 
                "camlCList__map_i_1630", 
                "camlVars__substn_many_3745", 
                "camlGlobal__lookup_constant_4680", 
                "camlPcoq__new_entry_22377", 
                "camlCArray__smartmap_1550", 
                "camlPervasives__23", 
                "caml_string_equal", 
                "camlFormat__make_formatter_1655", 
                "camlNames__equal_2730", 
                "camlNames__equal_3118", 
                "camlNames__24", 
                "camlVernac_classifier__declare_vernac_classifier_1468", 
                "camlReduction__is_arity_6459", 
                "camlTacentries__create_ltac_quotation_8901", 
                "camlNames__make_3341", 
                "camlLoc__3", 
                "camlArray__init_1217", 
                "camlNamegen__next_ident_away_6375", 
                "camlPre_env__push_rel_4645", 
                "camlReduction__whd_all_5018", 
                "camlPervasives__close_out_1236", 
                "camlPp__prlist_sep_lastsep_1921", 
                "camlList__iter_1272", 
                "camlRetyping__get_sort_family_of_inner_6880", 
                "camlBytes__copy_1226", 
                "camlPervasives", 
                "camlMod_subst", 
                "camlNames__make2_3096", 
                "camlNametab__shortest_qualid_of_global_6228", 
                "camlArray__of_list_1294", 
                "camlReductionops__splay_prod_n_8898", 
                "caml_alloc1", 
                "camlCList__map_filter_2233", 
                "camlTacinterp", 
                "camlArray__mapi_1279", 
                "camlHMap__find_2408", 
                "camlTerm__prodec_rec_5416", 
                "camlCList__split_when_2282", 
                "camlList__memq_1376", 
                "camlBytes__sub_1234", 
                "camlPp__prlist_strict_1941", 
                "camlFeedback", 
                "camlList__1", 
                "camlSet__fun_2940", 
                "camlPp__strbrk_1420", 
                "camlPp__8", 
                "caml_c_call", 
                "camlTacintern", 
                "camlSet__diff_1412", 
                "camlCList__map2_1531", 
                "camlString__concat_1300", 
                "camlSet__mem_1368", 
                "camlUnicode__ascii_of_ident_1286", 
                "camlArray__iter_1252", 
                "camlCList__chop_2277", 
                "camlVars__lift_3730", 
                "camlInductive__lookup_mind_specif_4944", 
                "camlNames__equal_2432", 
                "camlReductionops__red_of_state_red_8494", 
                "camlNametab__path_of_global_6213", 
                "camlHMap__add_1643", 
                "camlHook__get_1210", 
                "camlPp__prlist_1916", 
                "camlArray__map_1261", 
                "camlPp__str_1375", 
                "camlUtil__iterate_f_2960", 
                "camlCArray__map2_1582", 
                "camlPervasives__$5e_1117", 
                "camlNameops", 
                "camlCList__filter_1618", 
                "camlMap__find_1303", 
                "camlFlags", 
                "camlNameops__lift_subscript_4442", 
                "camlLibobject__declare_object_2293", 
                "camlCList__smartmap_1714", 
                "camlFtactic__return_1385", 
                "camlHMap__fold_1755", 
                "camlList__merge_1468", 
                "camlTermops__push_rel_assum_5562", 
                "camlList__exists_1350", 
                "camlTerm__strip_outer_cast_4695", 
                "camlLibnames__split_dirpath_4132", 
                "camlArray__iteri_1275", 
                "camlPp__qstring_1687", 
                "camlScanf__kscanf_5019", 
                "camlSet__add_1282", 
                "camlGenarg__obj_8005", 
                "camlList__fold_left_1286", 
                "caml_young_limit", 
                "camlMod_subst__1", 
                "camlRetyping__expand_projection_6468", 
                "camlTacintern__intern_genarg_6288", 
                "camlPp__pp_with_1858", 
                "camlList__rev_map_1264", 
                "camlNames__of_string_1937", 
                "camlGlobal", 
                "camlTacsubst", 
                "camlNametab__error_global_not_found_4737", 
                "camlScanf__from_string_1374", 
                "camlPp__prvecti_with_sep_1958", 
                "camlVernacentries__dump_global_8058", 
                "camlStr__bounded_split_1696", 
                "caml_ml_array_bound_error", 
                "camlPp_control", 
                "camlGeninterp__inject_3814", 
                "camlInductive__type_of_inductive_gen_5837", 
                "camlUtil__repeat_2964", 
                "camlNames__repr3_3352", 
                "camlList__2", 
                "camlSet__cardinal_1505", 
                "camlInt", 
                "camlPp__v_1643", 
                "_ITM_registerTMCloneTable", 
                "camlList__for_all_1345", 
                "camlGeninterp", 
                "caml_raise_exn", 
                "camlReductionops__whd_all_8529", 
                "camlHMap__filter_1775", 
                "camlCList__lastn_2312", 
                "caml_alloc3", 
                "camlFormat__pp_set_margin_1600", 
                "camlCString__ordinal_1876", 
                "caml_call_gc", 
                "camlPp__hv_1646", 
                "camlFormat__formatter_of_buffer_1663", 
                "camlConstrarg", 
                "camlUtil", 
                "camlCErrors__error_1336", 
                "camlTerm", 
                "camlMap__mem_1383", 
                "caml_modify", 
                "camlPp__hov_1649", 
                "camlNames__equal_3394", 
                "camlString__contains_from_1375", 
                "camlLib__is_module_4407", 
                "camlCErrors__errorlabstrm_1338", 
                "camlMap__add_1291", 
                "camlPp", 
                "caml_exn_Failure", 
                "camlCList__last_2308", 
                "camlCList__interval_1685", 
                "camlReduction__dest_prod_6290", 
                "camlSet__union_1384", 
                "camlInductive__arities_of_constructors_6030", 
                "camlCList__equal_1646", 
                "camlVernacinterp__vinterp_add_1903", 
                "camlCArray__for_all_1391", 
                "caml_make_vect", 
                "camlEnviron", 
                "camlHook__make_1217", 
                "camlList__fold_right_1292", 
                "camlLib__add_anonymous_leaf_inner_6550", 
                "camlCErrors", 
                "camlDumpglob__add_glob_4143", 
                "camlNametab__pr_global_env_6246", 
                "camlModops", 
                "camlLib__is_modtype_4399", 
                "camlTerm__decompose_lam_n_5441", 
                "camlNametab__full_name_module_6170", 
                "camlCList__filteri_1972", 
                "camlCList__append_1547", 
                "camlGeninterp__register_val0_3883", 
                "caml_int_compare", 
                "camlPervasives__open_out_gen_1190", 
                "camlNames__compare_2914", 
                "camlCList__assoc_f_2392", 
                "camlPp__6", 
                "caml_compare", 
                "camlBuffer__create_1209", 
                "camlGlobal__type_of_global_unsafe_5209", 
                "camlCWarnings__create_inner_3027", 
                "camlGenarg", 
                "camlNametab__locate_module_6167", 
                "camlLibrary", 
                "camlHMap__mem_1484", 
                "camlCList__sep_last_1989", 
                "camlGoptions__declare_option_3583", 
                "camlPptactic__declare_extra_genarg_pprule_5591", 
                "camlNames__to_string_2462", 
                "caml_make_array", 
                "camlEvd", 
                "camlCLexer__terminal_19701", 
                "camlRecordops", 
                "camlPcoq__grammar_extend_22116"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Classes/_coq-native/NCoq_Classes_CMorphisms_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Classes/.coq-native/NCoq_Classes_CMorphisms.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_prod_accu_5119", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_curry9", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_curry4", 
                "caml_curry13", 
                "camlNativecode__get_match_6305", 
                "caml_young_limit", 
                "caml_apply8", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_c_call", 
                "caml_curry3", 
                "caml_young_ptr", 
                "caml_call_gc", 
                "caml_apply4", 
                "camlNativevalues", 
                "caml_make_array", 
                "caml_curry10", 
                "caml_allocN", 
                "caml_curry5", 
                "camlNativecode__get_ind_6309", 
                "caml_apply6", 
                "caml_curry7", 
                "caml_apply2", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_apply3", 
                "caml_ml_array_bound_error", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Classes_CRelationClasses__const_NCoq_Classes_CRelationClasses_relation_equivalence_3175", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativecode__get_name_6297"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/extraction/_coq-native/NCoq_extraction_ExtrHaskellZNum_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/extraction/.coq-native/NCoq_extraction_ExtrHaskellZNum.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Abstract/_coq-native/NCoq_Numbers_Natural_Abstract_NIso_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Abstract/.coq-native/NCoq_Numbers_Natural_Abstract_NIso.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/bin/coqworkmgr": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/coqworkmgr", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "truncate64", 
                "execvp", 
                "pthread_mutex_trylock", 
                "log", 
                "__longjmp_chk", 
                "__fprintf_chk", 
                "inet_ntop", 
                "pthread_attr_init", 
                "cfsetispeed", 
                "floor", 
                "__snprintf_chk", 
                "pthread_cond_broadcast", 
                "tcgetattr", 
                "shutdown", 
                "freeaddrinfo", 
                "pthread_cond_destroy", 
                "__memcpy_chk", 
                "link", 
                "setitimer", 
                "fork", 
                "write", 
                "wait", 
                "strerror", 
                "kill", 
                "atan", 
                "dlopen", 
                "__recvfrom_chk", 
                "fmin", 
                "dlsym", 
                "dlclose", 
                "sinh", 
                "fputs", 
                "secure_getenv", 
                "ldexp", 
                "utimes", 
                "mkfifo", 
                "acos", 
                "setuid", 
                "sigprocmask", 
                "tan", 
                "getsockname", 
                "execve", 
                "__errno_location", 
                "tcdrain", 
                "tanh", 
                "strtod", 
                "munmap", 
                "atan2", 
                "ceil", 
                "mmap64", 
                "alarm", 
                "getlogin", 
                "read", 
                "fchmod", 
                "getprotobynumber", 
                "__sigsetjmp", 
                "closedir", 
                "tcsendbreak", 
                "isatty", 
                "localtime", 
                "open64", 
                "chdir", 
                "calloc", 
                "memcmp", 
                "exp", 
                "setgid", 
                "log1p", 
                "getpwnam", 
                "sigismember", 
                "setsockopt", 
                "getgroups", 
                "putenv", 
                "__fdelt_chk", 
                "sendto", 
                "getnameinfo", 
                "gethostbyname_r", 
                "__memmove_chk", 
                "asin", 
                "unlink", 
                "pthread_mutex_lock", 
                "symlink", 
                "lseek64", 
                "access", 
                "hypot", 
                "log10", 
                "__vsnprintf_chk", 
                "getpid", 
                "socketpair", 
                "dlerror", 
                "sqrt", 
                "__fxstat64", 
                "getitimer", 
                "readlink", 
                "__recv_chk", 
                "rmdir", 
                "expm1", 
                "fwrite", 
                "strtol", 
                "__register_atfork", 
                "time", 
                "getppid", 
                "nice", 
                "__read_chk", 
                "send", 
                "readdir64", 
                "getprotobyname", 
                "memset", 
                "getgrnam", 
                "cosh", 
                "pthread_key_create", 
                "gmtime", 
                "getenv", 
                "cfgetospeed", 
                "rewinddir", 
                "sigsuspend", 
                "pthread_cond_init", 
                "memmove", 
                "pthread_getspecific", 
                "initgroups", 
                "mkdir", 
                "select", 
                "modf", 
                "pthread_create", 
                "pthread_setspecific", 
                "gethostbyaddr_r", 
                "system", 
                "getgid", 
                "execv", 
                "abort", 
                "umask", 
                "malloc", 
                "sigfillset", 
                "sin", 
                "pthread_mutex_init", 
                "fputc", 
                "__xstat64", 
                "__isoc99_sscanf", 
                "sigaltstack", 
                "chmod", 
                "mktime", 
                "pthread_sigmask", 
                "chroot", 
                "listen", 
                "sigpending", 
                "connect", 
                "exit", 
                "chown", 
                "getservbyname", 
                "sigemptyset", 
                "socket", 
                "gettimeofday", 
                "free", 
                "frexp", 
                "getaddrinfo", 
                "pthread_mutex_unlock", 
                "pipe2", 
                "strlen", 
                "pthread_cond_wait", 
                "sigaddset", 
                "getuid", 
                "sigwait", 
                "nanosleep", 
                "getgrgid", 
                "pthread_exit", 
                "pthread_join", 
                "pthread_attr_setdetachstate", 
                "getegid", 
                "dup3", 
                "inet_pton", 
                "sigaction", 
                "fchown", 
                "pow", 
                "__libc_start_main", 
                "accept4", 
                "getservbyport", 
                "__stack_chk_fail", 
                "tcsetattr", 
                "fmod", 
                "getcwd", 
                "getrusage", 
                "setsid", 
                "getrlimit64", 
                "__lxstat64", 
                "tcflow", 
                "waitpid", 
                "opendir", 
                "setgroups", 
                "geteuid", 
                "getpeername", 
                "__gmon_start__", 
                "tcflush", 
                "pthread_mutex_destroy", 
                "fflush", 
                "close", 
                "cos", 
                "sigdelset", 
                "realloc", 
                "cfgetispeed", 
                "strnlen", 
                "ftruncate64", 
                "pthread_cond_signal", 
                "cfsetospeed", 
                "fcntl", 
                "getsockopt", 
                "strcmp", 
                "rename", 
                "bind", 
                "memcpy"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/micromega/_coq-native/NCoq_micromega_Psatz_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/micromega/.coq-native/NCoq_micromega_Psatz.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Wellfounded/_coq-native/NCoq_Wellfounded_Lexicographic_Exponentiation_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Wellfounded/.coq-native/NCoq_Wellfounded_Lexicographic_Exponentiation.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FMapFullAVL_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FMapFullAVL.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/NatInt/_coq-native/NCoq_Numbers_NatInt_NZPow_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/NatInt/.coq-native/NCoq_Numbers_NatInt_NZPow.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Lists/_coq-native/NCoq_Lists_ListSet_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Lists/.coq-native/NCoq_Lists_ListSet.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Lists_List__const_NCoq_Lists_List_fold_right_3427", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Init_Datatypes", 
                "__gmon_start__", 
                "camlNativevalues__str_decode_5828", 
                "caml_call_gc", 
                "camlNCoq_Lists_List__const_NCoq_Lists_List_In_2736", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_const_6301", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Lists_List__const_NCoq_Lists_List_fold_left_3394", 
                "caml_young_limit"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rseries_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rseries.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_alloc1", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Reals_Rfunctions__const_NCoq_Reals_Rfunctions_infinite_sum_2823", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rle_2695", 
                "caml_young_limit", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_curry3", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rminus_2701", 
                "camlNativecode__get_const_6301", 
                "caml_apply3", 
                "caml_apply2", 
                "camlNCoq_Reals_Rpow_def__x_pow_10_2677", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rmax_2709", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rabs_2732", 
                "camlNCoq_Init_Peano", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_curry2", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_call_gc", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_prod_accu_5119"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Binomial_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Binomial.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Reals_Rdefinitions", 
                "camlNCoq_Reals_Raxioms__x_INR_12_2722", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_apply2", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rdiv_2704", 
                "camlNCoq_Init_Nat", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_curry2", 
                "camlNCoq_Init_Nat__x_sub_45_2728", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Int_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Int.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_Init_Logic", 
                "camlNativecode__get_name_6297", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_ge_4429", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_le_4426", 
                "caml_allocN", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_apply2", 
                "camlNativevalues__mk_sort_accu_4950", 
                "caml_curry3", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "caml_young_limit", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNCoq_ZArith_BinInt", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_gt_4423", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lt_4420", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_ltb_3080", 
                "camlNativevalues__str_decode_5828", 
                "caml_curry2", 
                "caml_apply3", 
                "camlNativecode__get_sort_6293", 
                "camlNativecode__get_match_6305", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/toploop/queryworkertop_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/toploop/queryworkertop.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlCoqworkmgrApi__init_1618", 
                "camlCoqtop", 
                "camlAsyncTaskQueue__init_stdout_4344", 
                "__gmon_start__", 
                "caml_modify", 
                "camlStm", 
                "camlFlags", 
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Classes/_coq-native/NCoq_Classes_Equivalence_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Classes/.coq-native/NCoq_Classes_Equivalence.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "caml_young_limit", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Specif", 
                "caml_call_gc", 
                "camlNativecode__get_name_6297", 
                "__gmon_start__", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_proj1_sig_2802", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Classes_Morphisms", 
                "_ITM_registerTMCloneTable", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativecode__get_match_6305", 
                "__cxa_finalize", 
                "camlNativecode__get_const_6301"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zhints_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zhints.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__cxa_finalize", 
                "camlNativevalues__str_decode_5828", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/syntax/nat_syntax_plugin_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/syntax/nat_syntax_plugin.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlLoc__3", 
                "camlPp__str_1375", 
                "_ITM_deregisterTMCloneTable", 
                "caml_notequal", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "caml_young_limit", 
                "camlCErrors__user_err_loc_1346", 
                "camlBigint__small_1419", 
                "camlBigint__is_pos_or_zero_1493", 
                "camlNotation__declare_numeral_interpreter_6269", 
                "caml_allocN", 
                "__cxa_finalize", 
                "caml_young_ptr", 
                "camlCoqlib", 
                "camlBigint__mkarray_1421", 
                "camlGlobnames__eq_gr_4115", 
                "caml_raise_exn", 
                "camlBigint", 
                "camlBigint__sub_1456", 
                "camlBigint__less_than_1465", 
                "camlBigint__add_1453", 
                "camlCWarnings__create_inner_3027", 
                "caml_backtrace_pos", 
                "caml_call_gc", 
                "caml_c_call", 
                "camlMltop__add_known_module_3856", 
                "caml_fresh_oo_id"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_Ncring_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_Ncring.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_curry28", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "caml_curry20", 
                "camlNativecode__get_match_6305", 
                "caml_curry2", 
                "caml_curry22", 
                "caml_curry9", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__str_decode_5828", 
                "caml_young_limit", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_curry8", 
                "caml_curry12", 
                "caml_curry11", 
                "caml_curry10", 
                "camlNativecode__get_const_6301", 
                "camlNativecode__get_name_6297", 
                "caml_curry3", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_curry24", 
                "caml_apply3", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_apply2", 
                "camlNCoq_Classes_Morphisms", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_Classes_RelationClasses", 
                "caml_call_gc"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Cyclic/DoubleCyclic/_coq-native/NCoq_Numbers_Cyclic_DoubleCyclic_DoubleDivn1_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Cyclic/DoubleCyclic/.coq-native/NCoq_Numbers_Cyclic_DoubleCyclic_DoubleDivn1.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__str_decode_5828", 
                "__cxa_finalize", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleBase__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleBase_double_split_2849", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleBase__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleBase_double_WW_2737", 
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType__x_word_67_2796", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleBase__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleBase_double_0_2827", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Datatypes", 
                "caml_call_gc", 
                "caml_young_limit"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Classes/_coq-native/NCoq_Classes_DecidableClass_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Classes/.coq-native/NCoq_Classes_DecidableClass.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "caml_young_limit", 
                "camlNCoq_Arith_PeanoNat__x_eqb_64_2757", 
                "__gmon_start__", 
                "camlNCoq_ZArith_BinInt__x_eqb_168_3121", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Arith_PeanoNat__x_leb_80_2773", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Bool_Bool__const_NCoq_Bool_Bool_eqb_2776", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Arith_PeanoNat", 
                "camlNativecode__get_const_6301", 
                "caml_call_gc", 
                "__cxa_finalize", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FSetProperties_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FSetProperties.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/micromega/_coq-native/NCoq_micromega_Lia_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/micromega/.coq-native/NCoq_micromega_Lia.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Program/_coq-native/NCoq_Program_Syntax_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Program/.coq-native/NCoq_Program_Syntax.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/extraction/_coq-native/NCoq_extraction_ExtrOcamlString_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/extraction/.coq-native/NCoq_extraction_ExtrOcamlString.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/NArith/_coq-native/NCoq_NArith_BinNat_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/NArith/.coq-native/NCoq_NArith_BinNat.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Init_Specif", 
                "camlNCoq_PArith_BinPos__x_mul_313_2995", 
                "camlNCoq_PArith_BinPos__x_eqb_445_3384", 
                "camlNCoq_Init_Wf__const_NCoq_Init_Wf_well_founded_2736", 
                "camlNCoq_PArith_BinPos__x_testbit_nat_807_3876", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_pred_N_2796", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_PArith_BinPos__x_size_371_3096", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Classes_Morphisms_Prop", 
                "camlNCoq_PArith_BinPos__x_land_704_3743", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_rect_2887", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_Reflexive_2972", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_PER_2889", 
                "camlNCoq_PArith_BinPos__x_add_67_2739", 
                "camlNCoq_PArith_BinPos__x_size_nat_362_3082", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_relation_equivalence_3279", 
                "caml_alloc3", 
                "caml_alloc1", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlNCoq_Relations_Relation_Definitions__const_NCoq_Relations_Relation_Definitions_relation_2654", 
                "camlNativecode__get_match_6305", 
                "__gmon_start__", 
                "camlNativecode__get_sort_6293", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_PArith_BinPos__x_sub_mask_239_2946", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_snd_3023", 
                "camlNCoq_PArith_BinPos__x_sqrtrem_494_3457", 
                "camlNCoq_PArith_BinPos__x_lxor_762_3811", 
                "camlNCoq_PArith_BinPos__x_testbit_832_3913", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_CompSpec2Type_3465", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_sumbool_rec_2969", 
                "camlNCoq_PArith_BinPos__x_succ_8_2676", 
                "camlNCoq_Bool_Bool__const_NCoq_Bool_Bool_iff_reflect_3024", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_ggcd_3662", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_pow_3032", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_young_limit", 
                "camlNCoq_Init_Wf", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_equivalence_2978", 
                "camlNCoq_Numbers_BinNums__const_NCoq_Numbers_BinNums_positive_rect_2699", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Program_Basics", 
                "camlNCoq_PArith_BinPos__x_ldiff_734_3780", 
                "camlNCoq_Numbers_BinNums__const_NCoq_Numbers_BinNums_N_rec_2734", 
                "camlNCoq_PArith_BinPos__x_peano_rect_1003_4250", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_sqrt_3465", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Numbers_BinNums", 
                "caml_allocN", 
                "camlNCoq_Classes_Morphisms", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_PArith_BinPos__x_square_343_3047", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_gcd_3532", 
                "camlNCoq_PArith_BinPos__x_of_succ_nat_874_3979", 
                "caml_call_gc", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_to_nat_3949", 
                "__cxa_finalize", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_eq_dec_4107", 
                "camlNCoq_PArith_BinPos", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_iter_3024", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "camlNCoq_PArith_BinPos__x_lor_676_3705", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rect_2885", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/ssrmatching/_coq-native/NCoq_ssrmatching_ssrmatching_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/ssrmatching/.coq-native/NCoq_ssrmatching_ssrmatching.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/NatInt/_coq-native/NCoq_Numbers_NatInt_NZBits_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/NatInt/.coq-native/NCoq_Numbers_NatInt_NZBits.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Strings/_coq-native/NCoq_Strings_Ascii_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Strings/.coq-native/NCoq_Strings_Ascii.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Init_Datatypes", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNCoq_Bool_Bool__const_NCoq_Bool_Bool_bool_dec_2702", 
                "caml_apply8", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativecode__get_match_6305", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_of_nat_4068", 
                "caml_alloc3", 
                "caml_curry3", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_mul_3432", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_to_nat_4062", 
                "caml_curry2", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_add_2702", 
                "caml_apply2", 
                "caml_curry8", 
                "camlNativevalues__mk_fix_accu_5185", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_young_limit", 
                "camlNativecode__get_name_6297", 
                "caml_curry9", 
                "caml_apply3", 
                "caml_call_gc", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Numbers_BinNums", 
                "caml_allocN", 
                "camlNCoq_Init_Specif", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_value_6218"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FSetCompat_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FSetCompat.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "__cxa_finalize", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/MSets/_coq-native/NCoq_MSets_MSetAVL_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/MSets/.coq-native/NCoq_MSets_MSetAVL.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "camlNativevalues__str_decode_5828", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Bool/_coq-native/NCoq_Bool_IfProp_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Bool/.coq-native/NCoq_Bool_IfProp.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "caml_call_gc", 
                "camlNativevalues__mk_ind_accu_4947", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_const_6301", 
                "camlNativecode__get_ind_6309", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_constant_accu_4657", 
                "__cxa_finalize", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_match_6305"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/NArith/_coq-native/NCoq_NArith_NArith_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/NArith/.coq-native/NCoq_NArith_NArith.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Unicode/_coq-native/NCoq_Unicode_Utf8_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Unicode/.coq-native/NCoq_Unicode_Utf8.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_Even_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_Even.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__str_decode_5828", 
                "__cxa_finalize", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_ind_6309", 
                "caml_young_limit", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_sumbool_rec_2969", 
                "caml_call_gc", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rec_2894", 
                "camlNCoq_Init_Specif", 
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_value_6218", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_SetIsType_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_SetIsType.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Classes/_coq-native/NCoq_Classes_Morphisms_Relations_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Classes/.coq-native/NCoq_Classes_Morphisms_Relations.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "__gmon_start__", 
                "camlNativecode__get_const_6301"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Cos_rel_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Cos_rel.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_young_limit", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Init_Nat", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rminus_2701", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNCoq_Init_Nat__x_sub_45_2728", 
                "caml_call_gc", 
                "camlNCoq_Reals_Rfunctions__x_sum_f_R0_41_2802", 
                "camlNCoq_Reals_Rpow_def__x_pow_10_2677", 
                "camlNCoq_Reals_Raxioms", 
                "camlNativecode__get_value_6218", 
                "_ITM_deregisterTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Nat__const_NCoq_Init_Nat_pred_2665", 
                "__cxa_finalize", 
                "camlNCoq_Init_Nat__x_mul_27_2706", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "camlNCoq_Reals_Raxioms__x_INR_12_2722"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rsigma_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rsigma.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_call_gc", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Init_Nat", 
                "camlNCoq_Init_Nat__x_sub_45_2728", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Reals_Rfunctions__x_sum_f_R0_41_2802", 
                "caml_young_limit", 
                "caml_curry3", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/Abstract/_coq-native/NCoq_Numbers_Integer_Abstract_ZDivTrunc_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/Abstract/.coq-native/NCoq_Numbers_Integer_Abstract_ZDivTrunc.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__gmon_start__", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_Ncring_tac_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_Ncring_tac.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_curry12", 
                "caml_curry4", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_call_gc", 
                "caml_curry24", 
                "caml_curry13", 
                "caml_young_limit", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_curry3", 
                "caml_curry17", 
                "caml_curry11", 
                "camlNativecode__get_const_6301", 
                "caml_curry14", 
                "caml_curry2", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativevalues__str_decode_5828", 
                "caml_curry15"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/QArith/_coq-native/NCoq_QArith_QOrderedType_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/QArith/.coq-native/NCoq_QArith_QOrderedType.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Init_Specif", 
                "camlNCoq_QArith_QArith_base", 
                "caml_curry3", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_match_6305", 
                "camlNativecode__get_name_6297", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_curry2", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "caml_apply2", 
                "caml_allocN", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qeq_bool_2735", 
                "caml_apply5", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qeq_2679", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_apply3", 
                "caml_call_gc", 
                "caml_young_limit"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/extraction/_coq-native/NCoq_extraction_ExtrOcamlBigIntConv_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/extraction/.coq-native/NCoq_extraction_ExtrOcamlBigIntConv.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_young_limit", 
                "caml_apply4", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_alloc1", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "caml_curry2", 
                "camlNativevalues__str_decode_5828", 
                "caml_allocN", 
                "caml_call_gc", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_apply3", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Numbers_BinNums", 
                "caml_alloc3", 
                "camlNativecode__get_match_6305", 
                "caml_apply2", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Datatypes", 
                "caml_curry3"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/omega/_coq-native/NCoq_omega_OmegaTactic_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/omega/.coq-native/NCoq_omega_OmegaTactic.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__cxa_finalize", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Setoids/_coq-native/NCoq_Setoids_Setoid_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Setoids/.coq-native/NCoq_Setoids_Setoid.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "caml_young_limit", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "camlNCoq_Classes_RelationClasses"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FMapInterface_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FMapInterface.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_alloc1", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_snd_3023", 
                "camlNCoq_Init_Datatypes", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "camlNativevalues__str_decode_5828", 
                "__cxa_finalize", 
                "camlNativecode__get_match_6305", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_const_6301", 
                "__gmon_start__", 
                "caml_call_gc", 
                "caml_young_limit"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/funind/_coq-native/NCoq_funind_FunInd_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/funind/.coq-native/NCoq_funind_FunInd.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_registerTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Ranalysis5_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Ranalysis5.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "caml_young_limit", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rminus_2701", 
                "__cxa_finalize", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Reals_Rdefinitions", 
                "__gmon_start__", 
                "caml_call_gc", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rdiv_2704", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Structures/_coq-native/NCoq_Structures_OrdersLists_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Structures/.coq-native/NCoq_Structures_OrdersLists.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_Minus_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_Minus.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "_ITM_registerTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_constant_accu_4657", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_Le_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_Le.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/Abstract/_coq-native/NCoq_Numbers_Integer_Abstract_ZAxioms_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/Abstract/.coq-native/NCoq_Numbers_Integer_Abstract_ZAxioms.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_apply2", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__str_decode_5828", 
                "caml_call_gc", 
                "caml_young_limit", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Logic"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_RiemannInt_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_RiemannInt.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_apply4", 
                "camlNCoq_Reals_RIneq", 
                "camlNCoq_Reals_RList", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rabs_2732", 
                "caml_apply3", 
                "camlNCoq_Reals_Ranalysis1", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rmin_2660", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Reals_RIneq__const_NCoq_Reals_RIneq_pos_2997", 
                "caml_alloc3", 
                "camlNCoq_Init_Specif", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Reals_Raxioms__x_INR_12_2722", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_curry5", 
                "caml_curry7", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rminus_2701", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rmax_2709", 
                "caml_curry6", 
                "camlNCoq_Reals_Ranalysis1__const_NCoq_Reals_Ranalysis1_continuity_2735", 
                "camlNativecode__get_const_6301", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_curry4", 
                "caml_apply2", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Reals_Ranalysis1__const_NCoq_Reals_Ranalysis1_derivable_2805", 
                "caml_curry3", 
                "caml_apply6", 
                "caml_young_limit", 
                "camlNCoq_Reals_RiemannInt_SF__const_NCoq_Reals_RiemannInt_SF_fe_2749", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_projT1_2862", 
                "camlNCoq_Reals_Ranalysis1__const_NCoq_Reals_Ranalysis1_derive_pt_2808", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Reals_RiemannInt_SF__const_NCoq_Reals_RiemannInt_SF_RiemannInt_SF_2832", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rle_2695", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Reals_RiemannInt_SF", 
                "caml_call_gc"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/extraction/_coq-native/NCoq_extraction_ExtrOcamlZBigInt_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/extraction/.coq-native/NCoq_extraction_ExtrOcamlZBigInt.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Bool/_coq-native/NCoq_Bool_Zerob_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Bool/.coq-native/NCoq_Bool_Zerob.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Init_Datatypes", 
                "__gmon_start__", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__str_decode_5828", 
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Cyclic/DoubleCyclic/_coq-native/NCoq_Numbers_Cyclic_DoubleCyclic_DoubleBase_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Cyclic/DoubleCyclic/.coq-native/NCoq_Numbers_Cyclic_DoubleCyclic_DoubleBase.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleType_base_2654", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleType_zn2z_to_Z_2746", 
                "caml_young_limit", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_prod_accu_5119", 
                "_ITM_deregisterTMCloneTable", 
                "caml_call_gc", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_shiftl_nat_3820", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType__x_word_67_2796", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_constant_accu_4657", 
                "__gmon_start__", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativecode__get_match_6305", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_FinFun_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_FinFun.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_call_gc", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_proj1_sig_2802", 
                "camlNCoq_Vectors_Fin", 
                "caml_apply2", 
                "caml_curry2", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_young_limit", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNCoq_Lists_List", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__str_decode_5828", 
                "caml_apply3", 
                "camlNCoq_Init_Datatypes", 
                "caml_curry3", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Arith_Compare_dec__const_NCoq_Arith_Compare_dec_le_lt_dec_2729", 
                "caml_curry4", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_proj2_sig_2816", 
                "camlNativevalues__mk_prod_accu_5119", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Vectors_Fin__x_of_nat_lt_259_3075", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_Vectors_Fin__x_to_nat_196_2972"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/NatInt/_coq-native/NCoq_Numbers_NatInt_NZBase_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/NatInt/.coq-native/NCoq_Numbers_NatInt_NZBase.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "__gmon_start__", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_ConstructiveEpsilon_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_ConstructiveEpsilon.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Init_Wf", 
                "__cxa_finalize", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_ex_ind_2830", 
                "caml_call_gc", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_proj1_sig_2802", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_and_ind_2720", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Init_Peano", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_proj2_sig_2816", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNativecode__get_ind_6309", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Specif", 
                "camlNativecode__get_const_6301", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_ind_2892", 
                "camlNCoq_Init_Wf__const_NCoq_Init_Wf_Fix_F_2773", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__is_accu_5182", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_unique_3379", 
                "_ITM_registerTMCloneTable", 
                "caml_young_limit", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Abstract/_coq-native/NCoq_Numbers_Natural_Abstract_NMulOrder_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Abstract/.coq-native/NCoq_Numbers_Natural_Abstract_NMulOrder.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_ExtensionalityFacts_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_ExtensionalityFacts.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_ind_accu_4947", 
                "caml_call_gc", 
                "caml_curry2", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_curry6", 
                "caml_curry4", 
                "caml_apply2", 
                "camlNativecode__get_name_6297", 
                "camlNativecode__get_const_6301", 
                "caml_apply3", 
                "camlNCoq_Init_Logic", 
                "caml_young_limit", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/Abstract/_coq-native/NCoq_Numbers_Integer_Abstract_ZAddOrder_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/Abstract/.coq-native/NCoq_Numbers_Integer_Abstract_ZAddOrder.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_BinList_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_BinList.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Lists_List__const_NCoq_Lists_List_tl_2685", 
                "camlNativecode__get_match_6305", 
                "caml_curry5", 
                "camlNCoq_Lists_List__const_NCoq_Lists_List_hd_2662", 
                "caml_call_gc", 
                "caml_curry2", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_curry3", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_name_6297", 
                "caml_apply2", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Init_Datatypes", 
                "caml_young_limit", 
                "caml_curry4"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Znumtheory_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Znumtheory.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_and_ind_2720", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_OMEGA13_2776", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_ZArith_auxiliary", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_eq_dec_4548", 
                "caml_call_gc", 
                "caml_young_limit", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNCoq_Classes_Morphisms", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lt_4420", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_Zred_factor5_2854", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_modulo_3338", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_divide_4432", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_gcd_4191", 
                "__gmon_start__", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_Zopp_eq_mult_neg_1_2794", 
                "camlNCoq_ZArith_ZArith_dec__const_NCoq_ZArith_ZArith_dec_Z_lt_dec_2950", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_OMEGA11_2744", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_Zred_factor0_2790", 
                "camlNCoq_ZArith_Zorder", 
                "camlNCoq_Classes_Morphisms_Prop", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_Zplus_comm_2711", 
                "camlNCoq_Program_Basics", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_le_4426", 
                "__cxa_finalize", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_mul_2790", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_OMEGA10_2734", 
                "camlNativecode__get_match_6305", 
                "_ITM_registerTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_ZArith_BinInt", 
                "camlNCoq_ZArith_Wf_Z", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_omega_OmegaLemmas", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/_coq-native/NCoq_Numbers_NumPrelude_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/.coq-native/NCoq_Numbers_NumPrelude.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Cyclic/Abstract/_coq-native/NCoq_Numbers_Cyclic_Abstract_NZCyclic_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Cyclic/Abstract/.coq-native/NCoq_Numbers_Cyclic_Abstract_NZCyclic.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/Abstract/_coq-native/NCoq_Numbers_Integer_Abstract_ZLcm_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/Abstract/.coq-native/NCoq_Numbers_Integer_Abstract_ZLcm.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Classes/_coq-native/NCoq_Classes_DecidableClass_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Classes/.coq-native/NCoq_Classes_DecidableClass.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Init_Logic", 
                "caml_call_gc", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Datatypes", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_apply2", 
                "camlNativecode__get_match_6305", 
                "caml_curry3", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_ZArith_BinInt__x_eqb_168_3121", 
                "camlNCoq_Arith_PeanoNat__x_eqb_64_2757", 
                "camlNCoq_Arith_PeanoNat", 
                "caml_young_limit", 
                "camlNativecode__get_ind_6309", 
                "caml_apply3", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "camlNativevalues__mk_ind_accu_4947", 
                "caml_curry2", 
                "camlNativevalues__mk_constant_accu_4657"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FSetList_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FSetList.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FSetDecide_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FSetDecide.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Ranalysis_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Ranalysis.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/PArith/_coq-native/NCoq_PArith_POrderedType_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/PArith/.coq-native/NCoq_PArith_POrderedType.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_PArith_BinPos", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_call_gc", 
                "camlNCoq_Numbers_BinNums__const_NCoq_Numbers_BinNums_positive_rec_2710", 
                "camlNCoq_Init_Nat", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rect_2885", 
                "caml_young_limit", 
                "caml_allocN", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Classes_Morphisms", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_PER_2889", 
                "__cxa_finalize", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_CompSpec2Type_3465", 
                "camlNCoq_Bool_Bool__const_NCoq_Bool_Bool_iff_reflect_3024", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativecode__get_const_6301", 
                "caml_alloc1", 
                "camlNativevalues__mk_sort_accu_4950", 
                "__gmon_start__", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlNCoq_Init_Specif", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_sumbool_rec_2969", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_equivalence_2978", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNativecode__get_name_6297", 
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_rect_2887", 
                "camlNativevalues__is_accu_5182", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "camlNCoq_Numbers_BinNums"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Bool/_coq-native/NCoq_Bool_Zerob_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Bool/.coq-native/NCoq_Bool_Zerob.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_match_6305", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_sw_accu_5114"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/micromega/_coq-native/NCoq_micromega_Lia_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/micromega/.coq-native/NCoq_micromega_Lia.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Cyclic/DoubleCyclic/_coq-native/NCoq_Numbers_Cyclic_DoubleCyclic_DoubleSub_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Cyclic/DoubleCyclic/.coq-native/NCoq_Numbers_Cyclic_DoubleCyclic_DoubleSub.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_curry12", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType", 
                "camlNativevalues__str_decode_5828", 
                "caml_curry10", 
                "caml_apply2", 
                "caml_curry2", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_match_6305", 
                "caml_curry5", 
                "camlNativecode__get_const_6301", 
                "caml_curry7", 
                "caml_curry11", 
                "caml_curry9", 
                "caml_call_gc", 
                "caml_young_limit", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_curry3", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_value_6218"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_Decidable_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_Decidable.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "_ITM_deregisterTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "__cxa_finalize", 
                "__gmon_start__", 
                "camlNCoq_Init_Logic"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/extraction/_coq-native/NCoq_extraction_ExtrOcamlNatInt_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/extraction/.coq-native/NCoq_extraction_ExtrOcamlNatInt.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_ZArith_dec_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_ZArith_dec.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Init_Logic", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Classes_Morphisms", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_eq_dec_4548", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNativecode__get_match_6305", 
                "caml_call_gc", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_sym_2912", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_sumbool_rec_2969", 
                "__cxa_finalize", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_ge_4429", 
                "camlNCoq_Program_Basics", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_and_ind_2720", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lt_4420", 
                "camlNCoq_Classes_Morphisms_Prop", 
                "camlNativecode__get_value_6218", 
                "caml_young_limit", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_ZArith_BinInt", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_comparison_rec_3168", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_rec_2685", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_prod_accu_5119", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_le_4426", 
                "__gmon_start__", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_gt_4423", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_compare_2865", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/Abstract/_coq-native/NCoq_Numbers_Integer_Abstract_ZBase_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/Abstract/.coq-native/NCoq_Numbers_Integer_Abstract_ZBase.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_Peano_dec_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_Peano_dec.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "caml_call_gc", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Arith_PeanoNat", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rec_2894", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Logic_Eqdep_dec", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_young_limit", 
                "__cxa_finalize", 
                "camlNCoq_Init_Specif", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_alloc1", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Arith_PeanoNat__const_NCoq_Arith_PeanoNat_Nat_eq_dec_3343", 
                "camlNCoq_Logic_Decidable__const_NCoq_Logic_Decidable_decidable_2654", 
                "camlNCoq_Init_Logic"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/extraction/_coq-native/NCoq_extraction_ExtrHaskellNatInteger_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/extraction/.coq-native/NCoq_extraction_ExtrHaskellNatInteger.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_RList_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_RList.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Init_Logic", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Reals_RIneq", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rle_2695", 
                "camlNCoq_Reals_Rdefinitions", 
                "caml_curry4", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rmin_2660", 
                "caml_curry3", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_name_6297", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Init_Nat__const_NCoq_Init_Nat_pred_2665", 
                "caml_curry2", 
                "caml_allocN", 
                "caml_alloc1", 
                "camlNCoq_Init_Peano__const_NCoq_Init_Peano_lt_2785", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rmax_2709", 
                "caml_curry5", 
                "caml_apply2", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rminus_2701", 
                "caml_call_gc", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_apply3", 
                "caml_alloc3", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rdiv_2704", 
                "caml_young_limit", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rabs_2732", 
                "camlNativecode__get_ind_6309", 
                "camlNativecode__get_const_6301", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/BigZ/_coq-native/NCoq_Numbers_Integer_BigZ_BigZ_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/BigZ/.coq-native/NCoq_Numbers_Integer_BigZ_BigZ.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_opp_2764", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_mul_2790", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "camlNCoq_Numbers_Natural_BigN_BigN__const_NCoq_Numbers_Natural_BigN_BigN_BigN_eqb_6871", 
                "caml_allocN", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "camlNCoq_Numbers_Natural_BigN_BigN__const_NCoq_Numbers_Natural_BigN_BigN_BigN_testbit_10324", 
                "camlNCoq_Classes_Morphisms", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_ZArith_BinIntDef__const_NCoq_ZArith_BinIntDef_Z_quotrem_3377", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_of_N_3193", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_pow_2805", 
                "camlNCoq_Numbers_Natural_BigN_BigN__x_pow_pos_4249_8800", 
                "caml_call_gc", 
                "camlNCoq_ZArith_BinIntDef__const_NCoq_ZArith_BinIntDef_Z_add_2751", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_PER_2889", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "caml_young_limit", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_CompSpec2Type_3465", 
                "__gmon_start__", 
                "camlNCoq_Bool_Bool__const_NCoq_Bool_Bool_iff_reflect_3024", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_le_4426", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_ZArith_BinIntDef__const_NCoq_ZArith_BinIntDef_Z_mul_2790", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_snd_3023", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_modulo_3338", 
                "camlNCoq_ZArith_BinIntDef__const_NCoq_ZArith_BinIntDef_Z_modulo_3338", 
                "camlNCoq_Numbers_Natural_BigN_BigN__const_NCoq_Numbers_Natural_BigN_BigN_BigN_odd_8972", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751", 
                "camlNCoq_ZArith_BinIntDef__const_NCoq_ZArith_BinIntDef_Z_opp_2764", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_quotrem_3377", 
                "camlNCoq_Numbers_Natural_BigN_BigN__const_NCoq_Numbers_Natural_BigN_BigN_BigN_gcd_8945", 
                "camlNCoq_Numbers_Natural_BigN_BigN", 
                "camlNCoq_Numbers_Natural_BigN_BigN__const_NCoq_Numbers_Natural_BigN_BigN_BigN_of_N_8988", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lt_4420", 
                "__cxa_finalize", 
                "camlNCoq_ZArith_BinIntDef", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_div_3330", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Numbers_Natural_BigN_BigN__const_NCoq_Numbers_Natural_BigN_BigN_BigN_div_eucl_8215", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_alloc1", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNativecode__get_match_6305", 
                "camlNativecode__get_name_6297", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__mk_sw_accu_5114", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_ZArith_BinIntDef__const_NCoq_ZArith_BinIntDef_Z_testbit_4294", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlNCoq_Numbers_Natural_BigN_BigN__const_NCoq_Numbers_Natural_BigN_BigN_BigN_shiftl_10319", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_ZArith_BinIntDef__const_NCoq_ZArith_BinIntDef_Z_pow_2805", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_ZArith_BinIntDef__const_NCoq_ZArith_BinIntDef_Z_div_3330", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_testbit_4294"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zeven_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zeven.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativecode__get_value_6218", 
                "camlNativevalues__mk_sort_accu_4950", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_young_limit", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__gmon_start__", 
                "camlNCoq_Init_Logic", 
                "camlNativecode__get_match_6305", 
                "caml_call_gc", 
                "camlNativecode__get_const_6301", 
                "__cxa_finalize", 
                "camlNativecode__get_sort_6293", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/omega/_coq-native/NCoq_omega_OmegaLemmas_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/omega/.coq-native/NCoq_omega_OmegaLemmas.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_opp_2764", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_mul_2790", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751", 
                "__cxa_finalize", 
                "caml_young_limit", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Numbers_BinNums", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "caml_call_gc", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlNativecode__get_value_6218", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Abstract/_coq-native/NCoq_Numbers_Natural_Abstract_NPow_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Abstract/.coq-native/NCoq_Numbers_Natural_Abstract_NPow.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/QArith/_coq-native/NCoq_QArith_Qreduction_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/QArith/.coq-native/NCoq_QArith_Qreduction.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Classes_Morphisms", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_Numbers_BinNums", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_ggcd_4256", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_snd_3023", 
                "caml_call_gc", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Datatypes", 
                "__cxa_finalize", 
                "__gmon_start__", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_QArith_QArith_base", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qmult_2751", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_name_6297", 
                "_ITM_registerTMCloneTable", 
                "caml_young_limit", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_to_pos_3201", 
                "caml_alloc1", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qplus_2748"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Permut_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Permut.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_constant_accu_4657"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/btauto/btauto_plugin_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/btauto/btauto_plugin.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlTacenv__register_ltac_5535", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "caml_young_ptr", 
                "camlTacticals__tclORELSE0_6524", 
                "camlProofview", 
                "_ITM_deregisterTMCloneTable", 
                "camlPp__glue_1211", 
                "camlTactics", 
                "caml_raise_exn", 
                "camlTacmach__pf_reduction_of_red_expr_4542", 
                "camlHashtbl__create_inner_2188", 
                "camlLoc__3", 
                "camlNames__equal_3394", 
                "camlCoqlib__coq_constant_5305", 
                "camlList__combine_1461", 
                "camlTacenv__register_ml_tactic_inner_5972", 
                "camlPervasives__invalid_arg_1007", 
                "caml_alloc1", 
                "caml_make_array", 
                "camlTactics__change_concl_12672", 
                "camlCErrors__noncritical_1426", 
                "camlTerm", 
                "camlConstr", 
                "camlMltop__declare_cache_obj_3915", 
                "camlTerm__strip_outer_cast_4695", 
                "caml_exn_Not_found", 
                "camlTacticals__tclFAIL_6486", 
                "camlPp__6", 
                "camlConstr__eq_constr_5406", 
                "camlHashtbl__add_1596", 
                "camlUniverses__constr_of_global_6604", 
                "camlNames__of_string_1937", 
                "camlLazy__from_fun_1209", 
                "camlConstr__mkApp_4803", 
                "caml_c_call", 
                "camlRefiner__tclFAIL_2447", 
                "camlGlobnames__destIndRef_4279", 
                "camlPp__str_1375", 
                "camlHashtbl__find_1621", 
                "camlList__map_1248", 
                "__cxa_finalize", 
                "camlHashtbl__Make_1702", 
                "camlTactics__apply_14849", 
                "camlMltop__add_known_module_3856", 
                "camlProofview__tactic_6596", 
                "camlList__stable_sort_1482", 
                "camlHashtbl", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "camlCoqlib__find_reference_5296", 
                "caml_int_compare", 
                "caml_call_gc", 
                "camlTacticals__tclTHENLIST_6759", 
                "camlHashtbl__6", 
                "caml_allocN", 
                "caml_ml_array_bound_error", 
                "caml_young_limit", 
                "camlPrinter__pr_constr_5530"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zpow_def_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zpow_def.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_constant_accu_4657"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Cyclic/DoubleCyclic/_coq-native/NCoq_Numbers_Cyclic_DoubleCyclic_DoubleLift_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Cyclic/DoubleCyclic/.coq-native/NCoq_Numbers_Cyclic_DoubleCyclic_DoubleLift.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "caml_call_gc", 
                "camlNativecode__get_match_6305", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType", 
                "__cxa_finalize", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Classes/_coq-native/NCoq_Classes_SetoidDec_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Classes/.coq-native/NCoq_Classes_SetoidDec.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativecode__get_match_6305", 
                "caml_young_limit", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Logic_Decidable__const_NCoq_Logic_Decidable_decidable_2654", 
                "camlNCoq_Classes_SetoidClass__const_NCoq_Classes_SetoidClass_equiv_2669", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Arith_PeanoNat", 
                "__cxa_finalize", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_equivalence_2978", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_complement_2669", 
                "camlNativecode__get_name_6297", 
                "__gmon_start__", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Logic", 
                "camlNativecode__get_const_6301", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Bool_Bool"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Cyclic/ZModulo/_coq-native/NCoq_Numbers_Cyclic_ZModulo_ZModulo_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Cyclic/ZModulo/.coq-native/NCoq_Numbers_Cyclic_ZModulo_ZModulo.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_div_eucl_3311", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_compare_2865", 
                "camlNativecode__get_name_6297", 
                "caml_call_gc", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_eq_dec_4548", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_sqrt_4176", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_ZArith_Zlogarithm__x_log_inf_8_2675", 
                "camlNCoq_Numbers_BinNums", 
                "__cxa_finalize", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_mul_2790", 
                "camlNCoq_Init_Datatypes", 
                "caml_alloc1", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_ZArith_ZArith_dec__const_NCoq_ZArith_ZArith_dec_Z_lt_le_dec_3103", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_sqrtrem_4166", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_opp_2764", 
                "caml_young_limit", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_modulo_3338", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleType_base_2654", 
                "camlNativecode__get_match_6305", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_gcd_4191", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_pow_2805", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_alloc3", 
                "camlNCoq_ZArith_BinInt", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_to_N_3181", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_ZArith_BinIntDef", 
                "camlNCoq_ZArith_BinInt__x_pos_div_eucl_266_3256", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_div_3330", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Compat/_coq-native/NCoq_Compat_Coq84_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Compat/.coq-native/NCoq_Compat_Coq84.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Structures/_coq-native/NCoq_Structures_OrdersAlt_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Structures/.coq-native/NCoq_Structures_OrdersAlt.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/fourier/_coq-native/NCoq_fourier_Fourier_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/fourier/.coq-native/NCoq_fourier_Fourier.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/NatInt/_coq-native/NCoq_Numbers_NatInt_NZDomain_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/NatInt/.coq-native/NCoq_Numbers_NatInt_NZDomain.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_WeakFan_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_WeakFan.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_apply3", 
                "caml_curry3", 
                "caml_alloc3", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_apply5", 
                "camlNativevalues__mk_sort_accu_4950", 
                "caml_curry5", 
                "caml_call_gc", 
                "caml_curry2", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_curry6", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__str_decode_5828", 
                "caml_young_limit", 
                "camlNativecode__get_sort_6293", 
                "camlNativecode__get_ind_6309", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_length_3112", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_curry4"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_Min_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_Min.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Arith_PeanoNat", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sorting/_coq-native/NCoq_Sorting_PermutSetoid_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Sorting/.coq-native/NCoq_Sorting_PermutSetoid.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Sets_Multiset", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_young_limit", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Sets_Multiset__const_NCoq_Sets_Multiset_EmptyBag_2681", 
                "caml_curry2", 
                "camlNativecode__get_const_6301", 
                "camlNativecode__get_match_6305", 
                "caml_curry5", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_call_gc", 
                "camlNativevalues__str_decode_5828", 
                "caml_curry3", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Sets_Multiset__const_NCoq_Sets_Multiset_meq_2704"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_Wf_nat_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_Wf_nat.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Init_Wf__const_NCoq_Init_Wf_well_founded_induction_2750", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Peano__const_NCoq_Init_Peano_lt_2785", 
                "camlNCoq_Arith_Lt", 
                "camlNCoq_Init_Wf", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_rec_2685", 
                "camlNCoq_Arith_PeanoNat", 
                "camlNativevalues__str_decode_5828", 
                "caml_young_limit", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_ITM_registerTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_call_gc", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_unique_3379", 
                "camlNCoq_Init_Logic", 
                "caml_alloc1", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rect_2885", 
                "__gmon_start__", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_ind_2892", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FMapWeakList_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FMapWeakList.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "__gmon_start__", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FSetCompat_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FSetCompat.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_Cring_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_Cring.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_mul_assoc_3167", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_add_assoc_3057", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_Reflexive_2972", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_mult_comp_2872", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_setoid_ring_Ncring_initial__const_NCoq_setoid_ring_Ncring_initial_gen_phiZ_3009", 
                "camlNCoq_setoid_ring_Ncring", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_opp_2764", 
                "camlNCoq_setoid_ring_Ncring_initial", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_add_0_l_2982", 
                "camlNCoq_setoid_ring_Algebra_syntax__const_NCoq_setoid_ring_Algebra_syntax_Equality_2700", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_mul_1_l_3093", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_setoid_ring_Ncring_tac", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_add_comm_3019", 
                "caml_call_gc", 
                "__gmon_start__", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Classes_Morphisms", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_pow_N_2736", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_plus_comp_2834", 
                "camlNCoq_Program_Basics", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_distr_l_3205", 
                "__cxa_finalize", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_setoid_2789", 
                "camlNCoq_ZArith_BinInt", 
                "camlNCoq_Classes_RelationClasses", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_PER_2889", 
                "camlNCoq_setoid_ring_InitialRing", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_sub_def_3280", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_opp_comp_2946", 
                "caml_young_limit"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Cos_plus_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Cos_plus.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_call_gc", 
                "camlNCoq_Reals_Raxioms__x_INR_12_2722", 
                "caml_young_limit", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rabs_2732", 
                "camlNCoq_Reals_Raxioms", 
                "camlNCoq_Reals_Rdefinitions", 
                "caml_curry3", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rdiv_2704", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Reals_Rpow_def__x_pow_10_2677", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rmax_2709", 
                "camlNCoq_Arith_Factorial__x_fact_7_2674", 
                "camlNCoq_Init_Nat__x_mul_27_2706"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rbase_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rbase.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/QArith/_coq-native/NCoq_QArith_Qcanon_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/QArith/.coq-native/NCoq_QArith_Qcanon.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qcompare_2718", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qinv_2766", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qeq_dec_2732", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Q_dec_2832", 
                "caml_young_limit", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qopp_2754", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qlt_2685", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qle_2682", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qplus_2748", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_QArith_QArith_base", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qlt_le_dec_2835", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qeq_2679", 
                "__gmon_start__", 
                "__cxa_finalize", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Init_Logic", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "caml_call_gc", 
                "caml_alloc3", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qmult_2751"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_Even_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_Even.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_ind_6309", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_sumbool_rec_2969", 
                "camlNativecode__get_value_6218", 
                "caml_apply3", 
                "caml_curry4", 
                "caml_call_gc", 
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rec_2894", 
                "caml_curry2", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_curry5", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_young_limit", 
                "camlNativecode__get_const_6301", 
                "caml_apply2"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/NArith/_coq-native/NCoq_NArith_Ndist_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/NArith/.coq-native/NCoq_NArith_Ndist.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_lxor_4011", 
                "camlNCoq_Init_Datatypes", 
                "caml_young_limit", 
                "camlNativecode__get_ind_6309", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativevalues__mk_ind_accu_4947", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_curry2", 
                "caml_alloc3", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_curry4", 
                "camlNCoq_Arith_PeanoNat", 
                "caml_apply3", 
                "camlNCoq_Arith_PeanoNat__x_min_135_2848", 
                "caml_call_gc", 
                "caml_curry3", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_match_6305"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Cyclic/DoubleCyclic/_coq-native/NCoq_Numbers_Cyclic_DoubleCyclic_DoubleBase_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Cyclic/DoubleCyclic/.coq-native/NCoq_Numbers_Cyclic_DoubleCyclic_DoubleBase.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "caml_curry4", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType__x_word_67_2796", 
                "caml_apply2", 
                "caml_curry5", 
                "caml_curry2", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleType_base_2654", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleType_zn2z_to_Z_2746", 
                "caml_young_limit", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_shiftl_nat_3820", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_curry3", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_call_gc", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_value_6218"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Abstract/_coq-native/NCoq_Numbers_Natural_Abstract_NDefOps_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Abstract/.coq-native/NCoq_Numbers_Natural_Abstract_NDefOps.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Powerset_Classical_facts_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Powerset_Classical_facts.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_const_6301"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/rtauto/_coq-native/NCoq_rtauto_Bintree_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/rtauto/.coq-native/NCoq_rtauto_Bintree.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_curry2", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_curry3", 
                "caml_apply3", 
                "caml_curry4", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlNativevalues__is_accu_5182", 
                "caml_curry5", 
                "camlNCoq_Numbers_BinNums__const_NCoq_Numbers_BinNums_positive_ind_2708", 
                "caml_apply5", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativecode__get_name_6297", 
                "caml_curry9", 
                "camlNativecode__get_const_6301", 
                "caml_curry8", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_Init_Datatypes", 
                "caml_apply2", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__str_decode_5828", 
                "caml_alloc3", 
                "caml_young_limit", 
                "caml_curry7", 
                "caml_curry6", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_fix_accu_5185", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_call_gc", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_apply4", 
                "camlNativecode__get_match_6305", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_rec_r_2961", 
                "camlNCoq_Init_Logic"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Reals_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Reals.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/micromega/_coq-native/NCoq_micromega_EnvRing_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/micromega/.coq-native/NCoq_micromega_EnvRing.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "__gmon_start__", 
                "camlNCoq_micromega_Env__const_NCoq_micromega_Env_tail_2676", 
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Datatypes", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__str_decode_5828", 
                "caml_young_limit", 
                "camlNCoq_Classes_Morphisms", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_sub_2974", 
                "camlNativevalues__is_accu_5182", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_PArith_BinPos__x_pred_double_137_2778", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_PArith_BinPos", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_PArith_BinPos__x_add_67_2739", 
                "camlNCoq_micromega_Env", 
                "camlNCoq_micromega_Env__const_NCoq_micromega_Env_Env_2654", 
                "camlNCoq_ZArith_BinInt", 
                "__cxa_finalize", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_pow_pos_2687", 
                "camlNativevalues__mk_ind_accu_4947", 
                "caml_call_gc", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_pred_2786"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/QArith/_coq-native/NCoq_QArith_Qreals_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/QArith/.coq-native/NCoq_QArith_Qreals.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_apply2", 
                "caml_call_gc", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qnum_2666", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_young_limit", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qden_2674", 
                "camlNCoq_Reals_Raxioms__const_NCoq_Reals_Raxioms_IZR_2729"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/NArith/_coq-native/NCoq_NArith_Ndiv_def_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/NArith/.coq-native/NCoq_NArith_Ndiv_def.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_NArith_BinNat__x_pos_div_eucl_194_3842", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_young_limit", 
                "caml_call_gc", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828", 
                "caml_curry2", 
                "camlNCoq_NArith_BinNat"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_ArithRing_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_ArithRing.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_constant_accu_4657"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/micromega/_coq-native/NCoq_micromega_ZMicromega_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/micromega/.coq-native/NCoq_micromega_ZMicromega.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_mul_2790", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Lists_List__const_NCoq_Lists_List_fold_right_3427", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_of_N_3193", 
                "camlNCoq_ZArith_Zbool__const_NCoq_ZArith_Zbool_Zeq_bool_2872", 
                "camlNCoq_micromega_EnvRing__const_NCoq_micromega_EnvRing_Pphi_4651", 
                "camlNCoq_Lists_List__const_NCoq_Lists_List_map_3324", 
                "caml_curry7", 
                "camlNCoq_micromega_EnvRing__const_NCoq_micromega_EnvRing_norm_aux_5168", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_pow_N_2736", 
                "caml_curry4", 
                "camlNCoq_Init_Datatypes", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_micromega_EnvRing__const_NCoq_micromega_EnvRing_Padd_3564", 
                "caml_curry5", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_gtb_3092", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_ind_accu_4947", 
                "caml_apply2", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_pow_2805", 
                "caml_curry8", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_xhyps_of_psatz_3605", 
                "caml_young_limit", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_gcd_4191", 
                "camlNCoq_micromega_Refl", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751", 
                "caml_allocN", 
                "camlNativevalues__str_decode_5828", 
                "caml_alloc3", 
                "caml_apply4", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_Arith_PeanoNat", 
                "camlNCoq_micromega_Env__const_NCoq_micromega_Env_Env_2654", 
                "camlNCoq_micromega_EnvRing__const_NCoq_micromega_EnvRing_PsubC_3236", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_eval_Psatz_3522", 
                "caml_curry6", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Lists_List__const_NCoq_Lists_List_fold_left_3394", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_setoid_ring_Ring_theory", 
                "caml_alloc1", 
                "camlNCoq_ZArith_Zbool", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_div_eucl_3311", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lt_4420", 
                "caml_call_gc", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_micromega_EnvRing", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_andb_2713", 
                "camlNCoq_micromega_EnvRing__const_NCoq_micromega_EnvRing_PEeval_4995", 
                "camlNativecode__get_ind_6309", 
                "caml_apply7", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_div_3330", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_check_inconsistent_4051", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_eval_nformula_3176", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_Arith_PeanoNat__x_max_119_2827", 
                "camlNCoq_micromega_EnvRing__const_NCoq_micromega_EnvRing_Psub_3665", 
                "camlNCoq_micromega_RingMicromega", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_eval_formula_4220", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_check_normalised_formulas_4068", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_le_4426", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_max_3132", 
                "camlNativevalues__is_accu_5182", 
                "camlNCoq_micromega_Tauto__const_NCoq_micromega_Tauto_tauto_checker_3468", 
                "caml_curry3", 
                "caml_apply3", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_opp_2764", 
                "caml_curry2", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_NFormula_3132"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/MSets/_coq-native/NCoq_MSets_MSetFacts_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/MSets/.coq-native/NCoq_MSets_MSetFacts.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Classes/_coq-native/NCoq_Classes_RelationClasses_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Classes/.coq-native/NCoq_Classes_RelationClasses.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_young_limit", 
                "camlNCoq_Init_Logic", 
                "caml_call_gc", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "__gmon_start__", 
                "__cxa_finalize", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_alloc3", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_sym_2912", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Program_Basics", 
                "caml_allocN", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_SplitRmult_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_SplitRmult.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Wellfounded/_coq-native/NCoq_Wellfounded_Inverse_Image_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Wellfounded/.coq-native/NCoq_Wellfounded_Inverse_Image.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/extraction/_coq-native/NCoq_extraction_ExtrOcamlNatBigInt_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/extraction/.coq-native/NCoq_extraction_ExtrOcamlNatBigInt.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Integration_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Integration.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/extraction/_coq-native/NCoq_extraction_ExtrHaskellString_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/extraction/.coq-native/NCoq_extraction_ExtrHaskellString.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rpow_def_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rpow_def.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_sw_accu_5114", 
                "__cxa_finalize", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__str_decode_5828", 
                "__gmon_start__", 
                "caml_young_limit", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Init_Datatypes", 
                "caml_alloc3", 
                "camlNativecode__get_name_6297", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_call_gc"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sorting/_coq-native/NCoq_Sorting_Mergesort_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Sorting/.coq-native/NCoq_Sorting_Mergesort.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_app_3138", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__str_decode_5828", 
                "caml_alloc3", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Sorting_Sorted", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__is_accu_5182", 
                "caml_call_gc", 
                "caml_apply3", 
                "caml_curry7", 
                "caml_curry3", 
                "caml_curry8", 
                "camlNativecode__get_value_6218", 
                "caml_young_limit", 
                "caml_allocN", 
                "caml_apply2", 
                "caml_alloc1", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_curry4", 
                "camlNativecode__get_const_6301", 
                "caml_curry5", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Abstract/_coq-native/NCoq_Numbers_Natural_Abstract_NBits_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Abstract/.coq-native/NCoq_Numbers_Natural_Abstract_NBits.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/_coq-native/NCoq_Numbers_NaryFunctions_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/.coq-native/NCoq_Numbers_NaryFunctions.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Lists_List__const_NCoq_Lists_List_fold_right_3427", 
                "camlNativevalues__mk_sw_accu_5114", 
                "__cxa_finalize", 
                "caml_call_gc", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_sort_6293", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_match_6305", 
                "caml_alloc3", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_length_3112", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_young_limit"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Relations_3_facts_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Relations_3_facts.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_RIneq_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_RIneq.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_apply2", 
                "caml_curry2", 
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_match_6305", 
                "caml_young_limit", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rle_2695", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "caml_apply3", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_Reals_Rdefinitions", 
                "caml_curry5", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Logic", 
                "caml_call_gc"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Cyclic/ZModulo/_coq-native/NCoq_Numbers_Cyclic_ZModulo_ZModulo_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Cyclic/ZModulo/.coq-native/NCoq_Numbers_Cyclic_ZModulo_ZModulo.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_ZArith_BinIntDef", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_modulo_3338", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_gcd_4191", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_compare_2865", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_mul_2790", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_div_eucl_3311", 
                "camlNCoq_ZArith_ZArith_dec__const_NCoq_ZArith_ZArith_dec_Z_lt_le_dec_3103", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_curry2", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_match_6305", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_alloc1", 
                "caml_curry3", 
                "camlNativevalues__str_decode_5828", 
                "caml_apply2", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_to_N_3181", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_pow_2805", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "caml_curry4", 
                "caml_alloc3", 
                "caml_call_gc", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_div_3330", 
                "camlNCoq_ZArith_BinInt", 
                "caml_young_limit", 
                "camlNCoq_ZArith_Zlogarithm__x_log_inf_8_2675", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_eq_dec_4548", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_sqrt_4176", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_opp_2764", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleType_base_2654"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Compat/_coq-native/NCoq_Compat_Coq86_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Compat/.coq-native/NCoq_Compat_Coq86.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Multiset_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Multiset.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Init_Logic", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "camlNativecode__get_ind_6309", 
                "camlNativecode__get_name_6297", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_young_limit", 
                "caml_curry3", 
                "caml_apply3", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_ind_accu_4947", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_value_6218", 
                "caml_call_gc", 
                "caml_curry4", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_const_6301", 
                "caml_curry2", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Datatypes"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Raxioms_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Raxioms.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Init_Logic", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "__gmon_start__", 
                "caml_alloc3", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rle_2695", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativecode__get_match_6305", 
                "_ITM_registerTMCloneTable", 
                "caml_young_limit", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_to_nat_3949", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_call_gc"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zorder_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zorder.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_prod_accu_5119", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_value_6218", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_compare_2865", 
                "caml_young_limit", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Numbers_BinNums", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_call_gc", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_ZArith_BinInt", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828", 
                "__gmon_start__", 
                "camlNativevalues__mk_sw_accu_5114"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Ratan_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Ratan.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Reals_Rpow_def__x_pow_10_2677", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rdiv_2704", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Reals_Raxioms", 
                "__cxa_finalize", 
                "__gmon_start__", 
                "camlNCoq_Reals_AltSeries", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Init_Nat__x_mul_27_2706", 
                "caml_young_limit", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Reals_Raxioms__x_INR_12_2722", 
                "caml_alloc1"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Abstract/_coq-native/NCoq_Numbers_Natural_Abstract_NDiv_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Abstract/.coq-native/NCoq_Numbers_Natural_Abstract_NDiv.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/MSets/_coq-native/NCoq_MSets_MSetGenTree_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/MSets/.coq-native/NCoq_MSets_MSetGenTree.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_constant_accu_4657"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FSetBridge_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FSetBridge.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Wellfounded/_coq-native/NCoq_Wellfounded_Transitive_Closure_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Wellfounded/.coq-native/NCoq_Wellfounded_Transitive_Closure.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Relations_Relation_Operators__const_NCoq_Relations_Relation_Operators_clos_trans_ind_2717", 
                "caml_curry4", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Wf__const_NCoq_Init_Wf_Acc_inv_2730", 
                "caml_curry8", 
                "caml_young_limit", 
                "caml_call_gc", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_apply3", 
                "camlNCoq_Init_Wf", 
                "caml_curry2", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Relations_Relation_Operators", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_const_6301", 
                "caml_apply4", 
                "camlNativecode__get_name_6297", 
                "caml_curry3"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/NArith/_coq-native/NCoq_NArith_NArith_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/NArith/.coq-native/NCoq_NArith_NArith.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_EqNat_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_EqNat.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_curry3", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Init_Logic", 
                "caml_call_gc", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "caml_young_limit", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Specif", 
                "caml_apply3", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rec_2894", 
                "camlNativecode__get_name_6297", 
                "caml_curry2", 
                "caml_alloc3", 
                "camlNCoq_Arith_PeanoNat__x_eqb_64_2757", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Arith_PeanoNat", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_ind_2892", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_sort_accu_4950"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_SeqProp_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_SeqProp.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_call_gc", 
                "camlNCoq_Init_Datatypes", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rle_2695", 
                "caml_young_limit", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Peano", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Reals_Rseries__const_NCoq_Reals_Rseries_EUn_2681", 
                "caml_apply2", 
                "caml_curry2", 
                "caml_apply3", 
                "camlNCoq_Reals_Rseries", 
                "camlNativecode__get_match_6305", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Reals_Raxioms__const_NCoq_Reals_Raxioms_bound_2739"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Structures/_coq-native/NCoq_Structures_OrdersFacts_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Structures/.coq-native/NCoq_Structures_OrdersFacts.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zquot_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zquot.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_abs_3148", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_mul_2790", 
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_curry3", 
                "caml_apply2", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_const_6301", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_le_4426"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Lists/_coq-native/NCoq_Lists_SetoidPermutation_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Lists/.coq-native/NCoq_Lists_SetoidPermutation.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_match_6305", 
                "caml_call_gc", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Init_Datatypes", 
                "camlNativecode__get_const_6301", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_ind_6309", 
                "_ITM_registerTMCloneTable", 
                "caml_young_limit", 
                "camlNativevalues__mk_sw_accu_5114", 
                "__gmon_start__", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Cpo_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Cpo.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_apply4", 
                "caml_apply2", 
                "caml_curry5", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__str_decode_5828", 
                "caml_call_gc", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_young_limit", 
                "camlNCoq_Sets_Partial_Order__const_NCoq_Sets_Partial_Order_Carrier_of_2675", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Sets_Ensembles", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Sets_Partial_Order__const_NCoq_Sets_Partial_Order_Rel_of_2686", 
                "caml_curry3", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_curry4", 
                "camlNativecode__get_name_6297", 
                "caml_apply3", 
                "camlNCoq_Sets_Partial_Order", 
                "camlNativecode__get_ind_6309", 
                "caml_curry2"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/QArith/_coq-native/NCoq_QArith_Qcabs_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/QArith/.coq-native/NCoq_QArith_Qcabs.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_QArith_Qcanon__const_NCoq_QArith_Qcanon_this_2666", 
                "caml_apply2", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_QArith_Qcanon__const_NCoq_QArith_Qcanon_canon_2674", 
                "caml_young_limit", 
                "camlNCoq_QArith_Qabs__const_NCoq_QArith_Qabs_Qabs_2660"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/bin/coq-tex": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/coq-tex", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "gettimeofday", 
                "strerror", 
                "sigdelset", 
                "modf", 
                "sigprocmask", 
                "dlsym", 
                "getppid", 
                "fflush", 
                "lseek64", 
                "open64", 
                "cos", 
                "dlclose", 
                "dlopen", 
                "calloc", 
                "getrlimit64", 
                "fmin", 
                "pow", 
                "__sigsetjmp", 
                "__gmon_start__", 
                "unlink", 
                "tan", 
                "mmap64", 
                "getenv", 
                "atan", 
                "memset", 
                "sigaddset", 
                "close", 
                "strcmp", 
                "dlerror", 
                "realloc", 
                "ldexp", 
                "sin", 
                "__errno_location", 
                "getcwd", 
                "hypot", 
                "malloc", 
                "munmap", 
                "sqrt", 
                "system", 
                "exit", 
                "sigaltstack", 
                "ceil", 
                "__memcpy_chk", 
                "chdir", 
                "memcmp", 
                "__stack_chk_fail", 
                "secure_getenv", 
                "__vsnprintf_chk", 
                "__isoc99_sscanf", 
                "frexp", 
                "fmod", 
                "cosh", 
                "atan2", 
                "getrusage", 
                "log", 
                "fcntl", 
                "abort", 
                "expm1", 
                "sigaction", 
                "free", 
                "write", 
                "getpid", 
                "rename", 
                "strtod", 
                "opendir", 
                "fwrite", 
                "__snprintf_chk", 
                "__xstat64", 
                "closedir", 
                "__libc_start_main", 
                "floor", 
                "memcpy", 
                "exp", 
                "memmove", 
                "readdir64", 
                "__fprintf_chk", 
                "read", 
                "fputs", 
                "strtol", 
                "isatty", 
                "acos", 
                "tanh", 
                "strlen", 
                "fputc", 
                "log1p", 
                "sigemptyset", 
                "sinh", 
                "asin"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Ranalysis3_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Ranalysis3.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Cyclic/DoubleCyclic/_coq-native/NCoq_Numbers_Cyclic_DoubleCyclic_DoubleAdd_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Cyclic/DoubleCyclic/.coq-native/NCoq_Numbers_Cyclic_DoubleCyclic_DoubleAdd.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "caml_call_gc", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_young_limit", 
                "__cxa_finalize", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_match_6305", 
                "camlNativecode__get_const_6301"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/ssrmatching/_coq-native/NCoq_ssrmatching_ssrmatching_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/ssrmatching/.coq-native/NCoq_ssrmatching_ssrmatching.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_Factorial_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_Factorial.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_prod_accu_5119", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_value_6218", 
                "caml_call_gc", 
                "caml_curry2", 
                "caml_alloc3", 
                "camlNCoq_Init_Datatypes", 
                "camlNativecode__get_match_6305", 
                "caml_young_limit", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Nat__x_mul_27_2706", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativecode__get_name_6297", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_constant_accu_4657"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Program/_coq-native/NCoq_Program_Basics_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Program/.coq-native/NCoq_Program_Basics.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_name_6297", 
                "caml_curry2", 
                "caml_call_gc", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828", 
                "caml_curry6", 
                "camlNativevalues__mk_prod_accu_5119", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_young_limit"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_RealField_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_RealField.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_constant_accu_4657"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rlimit_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rlimit.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rabs_2732", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "caml_young_limit", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rle_2695", 
                "__cxa_finalize", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__mk_prod_accu_5119", 
                "__gmon_start__", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rge_2698", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_alloc1", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Reals_Rdefinitions", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Reals_Rfunctions", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rminus_2701"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_MVT_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_MVT.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "camlNativevalues__mk_constant_accu_4657", 
                "__gmon_start__", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Structures/_coq-native/NCoq_Structures_OrdersFacts_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Structures/.coq-native/NCoq_Structures_OrdersFacts.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/NatInt/_coq-native/NCoq_Numbers_NatInt_NZPow_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/NatInt/.coq-native/NCoq_Numbers_NatInt_NZPow.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Cyclic/DoubleCyclic/_coq-native/NCoq_Numbers_Cyclic_DoubleCyclic_DoubleMul_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Cyclic/DoubleCyclic/.coq-native/NCoq_Numbers_Cyclic_DoubleCyclic_DoubleMul.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Init_Datatypes", 
                "caml_young_limit", 
                "caml_curry2", 
                "caml_curry13", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType", 
                "caml_apply3", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleBase__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleBase_extend_2814", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_curry10", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_curry4", 
                "caml_curry8", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType__x_word_67_2796", 
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_curry16", 
                "caml_curry6", 
                "camlNativecode__get_name_6297", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_apply2", 
                "caml_curry7", 
                "caml_curry9", 
                "caml_curry15", 
                "caml_apply6", 
                "caml_curry5", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_const_6301", 
                "caml_curry11", 
                "caml_call_gc", 
                "caml_curry14", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleBase__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleBase_double_WW_2737"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Compat/_coq-native/NCoq_Compat_Coq86_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Compat/.coq-native/NCoq_Compat_Coq86.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/QArith/_coq-native/NCoq_QArith_Qcabs_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/QArith/.coq-native/NCoq_QArith_Qcabs.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "camlNativecode__get_const_6301", 
                "__cxa_finalize", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_registerTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_QArith_Qabs__const_NCoq_QArith_Qabs_Qabs_2660", 
                "caml_call_gc", 
                "camlNCoq_QArith_Qcanon__const_NCoq_QArith_Qcanon_canon_2674", 
                "caml_young_limit", 
                "camlNCoq_QArith_Qcanon__const_NCoq_QArith_Qcanon_this_2666"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Program/_coq-native/NCoq_Program_Utils_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Program/.coq-native/NCoq_Program_Utils.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Program/_coq-native/NCoq_Program_Subset_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Program/.coq-native/NCoq_Program_Subset.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_young_limit", 
                "caml_curry4"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Classical_sets_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Classical_sets.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Structures/_coq-native/NCoq_Structures_OrdersEx_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Structures/.coq-native/NCoq_Structures_OrdersEx.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_gcd_3532", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_snd_3023", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_div2_up_3063", 
                "camlNCoq_PArith_BinPos__x_succ_8_2676", 
                "caml_alloc3", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_lxor_4011", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_sqrt_3465", 
                "camlNCoq_PArith_BinPos__x_square_343_3047", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rec_2894", 
                "camlNativecode__get_value_6218", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_div2_3055", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_sumbool_rec_2969", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Program_Basics", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rect_2885", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_shiftl_3832", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Numbers_BinNums__const_NCoq_Numbers_BinNums_N_rec_2734", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "caml_allocN", 
                "camlNCoq_NArith_BinNat", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "camlNCoq_Classes_Morphisms_Prop", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_to_nat_3949", 
                "caml_call_gc", 
                "camlNCoq_PArith_BinPos__x_mul_313_2995", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "caml_apply5", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_CompOpp_3174", 
                "caml_young_limit", 
                "camlNCoq_PArith_BinPos__x_of_succ_nat_874_3979", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_pow_3032", 
                "camlNCoq_Classes_Morphisms", 
                "camlNativevalues__is_accu_5182", 
                "caml_apply10", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_Numbers_BinNums__const_NCoq_Numbers_BinNums_positive_rec_2710", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_PArith_BinPos", 
                "caml_curry4", 
                "camlNCoq_PArith_BinPos__x_size_371_3096", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_alloc1", 
                "caml_apply4", 
                "camlNCoq_Init_Nat", 
                "camlNCoq_PArith_BinPos__x_size_nat_362_3082", 
                "caml_apply3", 
                "camlNCoq_PArith_BinPos__x_add_67_2739", 
                "camlNCoq_PArith_BinPos__x_pred_double_137_2778", 
                "camlNCoq_Arith_PeanoNat", 
                "camlNCoq_Init_Peano__const_NCoq_Init_Peano_lt_2785", 
                "camlNCoq_PArith_BinPos__x_land_704_3743", 
                "camlNCoq_Init_Nat__x_sub_45_2728", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_rect_2887", 
                "camlNCoq_PArith_BinPos__x_peano_rect_1003_4250", 
                "caml_apply11", 
                "camlNCoq_PArith_BinPos__x_sub_mask_239_2946", 
                "camlNCoq_Numbers_BinNums__const_NCoq_Numbers_BinNums_Z_rec_2765", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNCoq_Init_Peano", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "caml_curry2", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "camlNCoq_Bool_Bool__const_NCoq_Bool_Bool_iff_reflect_3024", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_PArith_BinPos__x_ldiff_734_3780", 
                "camlNCoq_PArith_BinPos__x_lor_676_3705", 
                "caml_curry3", 
                "camlNCoq_Init_Wf__const_NCoq_Init_Wf_well_founded_2736", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Init_Nat__x_mul_27_2706", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_equivalence_2978", 
                "caml_curry5", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_Numbers_BinNums__const_NCoq_Numbers_BinNums_positive_rect_2699", 
                "camlNCoq_PArith_BinPos__x_sqrtrem_494_3457", 
                "camlNCoq_PArith_BinPos__x_testbit_nat_807_3876", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_eq_dec_4107", 
                "camlNCoq_ZArith_BinInt", 
                "camlNCoq_PArith_BinPos__x_testbit_832_3913", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_relation_equivalence_3279", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_CompSpec2Type_3465", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_PER_2889", 
                "caml_curry8", 
                "camlNCoq_Init_Wf", 
                "caml_curry6", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_succ_pos_2689", 
                "caml_curry7", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_andb_2713", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_ggcd_3662", 
                "camlNCoq_NArith_BinNat__x_ldiff_298_3996", 
                "camlNCoq_NArith_BinNat__x_pos_div_eucl_194_3842", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_Reflexive_2972", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNCoq_PArith_BinPos__x_eqb_445_3384", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_iter_3024", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_lor_3958", 
                "camlNCoq_Relations_Relation_Definitions__const_NCoq_Relations_Relation_Definitions_relation_2654", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_land_3971", 
                "caml_apply8", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_testbit_4055", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_pred_N_2796", 
                "caml_apply2", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rcomplete_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rcomplete.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "__cxa_finalize", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__gmon_start__", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_constant_accu_4657"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/NatInt/_coq-native/NCoq_Numbers_NatInt_NZProperties_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/NatInt/.coq-native/NCoq_Numbers_NatInt_NZProperties.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_NArithRing_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_NArithRing.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_constant_accu_4657"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/romega/_coq-native/NCoq_romega_ROmega_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/romega/.coq-native/NCoq_romega_ROmega.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_RiemannInt_SF_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_RiemannInt_SF.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Init_Peano", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Peano__const_NCoq_Init_Peano_lt_2785", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rmin_2660", 
                "camlNativevalues__str_decode_5828", 
                "__cxa_finalize", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_projT1_2862", 
                "_ITM_registerTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_young_limit", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rminus_2701", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Reals_RList", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Reals_Ranalysis1__const_NCoq_Reals_Ranalysis1_constant_D_eq_2726", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_projT2_2876", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rmax_2709", 
                "camlNCoq_Reals_RList__x_pos_Rl_104_2888", 
                "camlNCoq_Reals_RIneq", 
                "camlNCoq_Reals_RList__const_NCoq_Reals_RList_ordered_Rlist_2897", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Nat__const_NCoq_Init_Nat_pred_2665", 
                "camlNativecode__get_ind_6309", 
                "caml_call_gc", 
                "camlNativevalues__mk_prod_accu_5119", 
                "__gmon_start__", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rle_2695", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Reals_RList__x_Rlength_42_2762", 
                "camlNativevalues__mk_fix_accu_5185"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_DiscrR_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_DiscrR.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Cyclic/DoubleCyclic/_coq-native/NCoq_Numbers_Cyclic_DoubleCyclic_DoubleAdd_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Cyclic/DoubleCyclic/.coq-native/NCoq_Numbers_Cyclic_DoubleCyclic_DoubleAdd.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_value_6218", 
                "caml_curry6", 
                "caml_curry9", 
                "caml_curry10", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType", 
                "camlNativecode__get_const_6301", 
                "caml_curry11", 
                "caml_curry7", 
                "caml_call_gc", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_apply2", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_match_6305", 
                "caml_curry8", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_curry3", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_curry2", 
                "caml_young_limit"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FSetEqProperties_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FSetEqProperties.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rtrigo_reg_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rtrigo_reg.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "__gmon_start__", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize", 
                "camlNativevalues__mk_constant_accu_4657"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_Mult_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_Mult.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_alloc3", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_young_limit", 
                "camlNativecode__get_const_6301", 
                "camlNativecode__get_match_6305", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Arith_Plus__x_tail_plus_35_2786", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__mk_sw_accu_5114", 
                "__gmon_start__", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/Abstract/_coq-native/NCoq_Numbers_Integer_Abstract_ZLcm_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/Abstract/.coq-native/NCoq_Numbers_Integer_Abstract_ZLcm.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/QArith/_coq-native/NCoq_QArith_QArith_base_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/QArith/.coq-native/NCoq_QArith_QArith_base.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_young_limit", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_opp_2764", 
                "caml_curry2", 
                "camlNCoq_Numbers_BinNums", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_mul_2790", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_PArith_BinPos__x_mul_313_2995", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_alloc1", 
                "camlNativecode__get_match_6305", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_ZArith_ZArith_dec__const_NCoq_ZArith_ZArith_dec_Z_dec$27_3305", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_leb_3074", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_le_4426", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lt_4420", 
                "camlNCoq_ZArith_ZArith_dec__const_NCoq_ZArith_ZArith_dec_Z_lt_le_dec_3103", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_pow_pos_2687", 
                "camlNCoq_ZArith_Zbool__const_NCoq_ZArith_Zbool_Zeq_bool_2872", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_eq_dec_4548", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_compare_2865", 
                "camlNativecode__get_value_6218", 
                "caml_apply3", 
                "camlNCoq_Init_Logic", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_const_6301", 
                "caml_call_gc"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/_coq-native/NCoq_Numbers_BigNumPrelude_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/.coq-native/NCoq_Numbers_BigNumPrelude.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "camlNCoq_ZArith_Zdiv", 
                "caml_young_limit", 
                "camlNativevalues__mk_constant_accu_4657", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/NatInt/_coq-native/NCoq_Numbers_NatInt_NZMul_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/NatInt/.coq-native/NCoq_Numbers_NatInt_NZMul.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Relations_3_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Relations_3.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_curry2", 
                "caml_call_gc", 
                "caml_young_limit", 
                "caml_curry5", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Init_Logic", 
                "caml_curry3", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Sets_Relations_2", 
                "camlNativecode__get_match_6305", 
                "caml_apply4", 
                "camlNativecode__get_name_6297", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_curry4", 
                "caml_apply2"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Ranalysis4_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Ranalysis4.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rpower_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rpower.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Reals_RIneq__const_NCoq_Reals_RIneq_pos_2997", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Reals_RIneq", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_curry2", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Reals_Rpow_def__x_pow_10_2677", 
                "caml_apply2", 
                "caml_young_limit", 
                "camlNCoq_Reals_RIneq__const_NCoq_Reals_RIneq_cond_pos_3005", 
                "caml_call_gc", 
                "camlNCoq_Reals_R_sqrt__const_NCoq_Reals_R_sqrt_sqrt_2660", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Reals_Rtrigo_def__const_NCoq_Reals_Rtrigo_def_exp_2692", 
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Reals_Rdefinitions"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rgeom_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rgeom.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_curry3", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rminus_2701", 
                "caml_curry4", 
                "camlNCoq_Reals_Rtrigo_def__const_NCoq_Reals_Rtrigo_def_sin_2779", 
                "caml_curry2", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNCoq_Reals_R_sqrt__const_NCoq_Reals_R_sqrt_sqrt_2660", 
                "camlNativecode__get_const_6301"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/micromega/_coq-native/NCoq_micromega_Tauto_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/micromega/.coq-native/NCoq_micromega_Tauto.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_app_3138", 
                "__cxa_finalize", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlNCoq_Lists_List__const_NCoq_Lists_List_fold_right_3427", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativecode__get_sort_6293", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_micromega_Refl", 
                "caml_alloc3", 
                "camlNCoq_Init_Datatypes", 
                "caml_call_gc", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Init_Logic", 
                "camlNativecode__get_match_6305", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_micromega_Refl__x_make_conj_44_2776", 
                "__gmon_start__", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_name_6297", 
                "caml_young_limit"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Vectors/_coq-native/NCoq_Vectors_VectorEq_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Vectors/.coq-native/NCoq_Vectors_VectorEq.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_apply3", 
                "camlNativevalues__mk_sort_accu_4950", 
                "caml_curry6", 
                "camlNativevalues__str_decode_5828", 
                "caml_apply6", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "caml_call_gc", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_rect_2680", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_alloc3", 
                "camlNCoq_Vectors_VectorDef", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_rect_2887", 
                "camlNativecode__get_name_6297", 
                "camlNativecode__get_const_6301", 
                "caml_curry3", 
                "caml_apply4", 
                "caml_curry4", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_sym_2912", 
                "caml_curry5", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_andb_2713", 
                "caml_curry7", 
                "caml_young_limit", 
                "caml_curry2", 
                "camlNCoq_Init_Logic", 
                "caml_curry8", 
                "camlNCoq_Init_Specif", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Nat", 
                "caml_apply2", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/MSets/_coq-native/NCoq_MSets_MSetToFiniteSet_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/MSets/.coq-native/NCoq_MSets_MSetToFiniteSet.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "__cxa_finalize", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_ZArith_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_ZArith.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_Integral_domain_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_Integral_domain.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_ind_6309", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_young_limit", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_curry11", 
                "camlNCoq_Init_Logic", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_pow_N_2736", 
                "caml_curry13", 
                "caml_curry12", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "caml_call_gc", 
                "caml_curry10", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_of_nat_4068"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/QArith/_coq-native/NCoq_QArith_Qminmax_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/QArith/.coq-native/NCoq_QArith_Qminmax.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Structures_GenericMinMax", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "camlNCoq_QArith_QArith_base", 
                "__gmon_start__", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qeq_2679", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_CompSpec2Type_3465", 
                "camlNativecode__get_const_6301", 
                "_ITM_deregisterTMCloneTable", 
                "caml_young_limit", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Structures_GenericMinMax__const_NCoq_Structures_GenericMinMax_gmin_2867", 
                "caml_allocN", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_QArith_QOrderedType", 
                "camlNCoq_Structures_GenericMinMax__const_NCoq_Structures_GenericMinMax_gmax_2856", 
                "caml_call_gc", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qlt_2685", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qcompare_2718", 
                "camlNCoq_Init_Specif", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__cxa_finalize", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qle_2682", 
                "camlNCoq_Classes_Morphisms", 
                "camlNativecode__get_name_6297"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Init/_coq-native/NCoq_Init_Specif_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Init/.coq-native/NCoq_Init_Specif.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Logic", 
                "caml_apply3", 
                "caml_curry6", 
                "camlNativecode__get_match_6305", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__str_decode_5828", 
                "caml_call_gc", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_apply2", 
                "caml_young_limit", 
                "caml_curry2", 
                "caml_curry5", 
                "caml_curry3", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_rec_2685", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_ind_2892", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativecode__get_ind_6309"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/MSets/_coq-native/NCoq_MSets_MSetPositive_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/MSets/.coq-native/NCoq_MSets_MSetPositive.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_alloc3", 
                "caml_allocN", 
                "camlNativecode__get_name_6297", 
                "camlNativecode__get_match_6305", 
                "caml_apply2", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_option_map_2933", 
                "caml_curry2", 
                "caml_apply8", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "caml_curry7", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNCoq_Classes_Morphisms", 
                "caml_apply5", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "caml_curry6", 
                "camlNCoq_Bool_Bool__const_NCoq_Bool_Bool_eqb_2776", 
                "camlNCoq_Program_Basics", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "camlNCoq_Init_Specif", 
                "caml_call_gc", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_sym_2912", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "caml_apply11", 
                "camlNativecode__get_value_6218", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "caml_curry4", 
                "caml_curry8", 
                "caml_apply4", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_PArith_BinPos__x_eqb_445_3384", 
                "caml_young_limit", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_rect_2887", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_equivalence_2978", 
                "camlNativecode__get_const_6301", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_orb_2719", 
                "camlNCoq_Structures_OrdersEx", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_apply3", 
                "caml_curry5", 
                "camlNCoq_PArith_BinPos", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "caml_curry3", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__is_accu_5182", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_andb_2713", 
                "camlNCoq_Classes_Morphisms_Prop"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_ClassicalDescription_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_ClassicalDescription.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "caml_call_gc", 
                "__cxa_finalize", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable", 
                "caml_young_limit", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_proj1_sig_2802", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_unique_3379", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_ProofIrrelevance_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_ProofIrrelevance.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_apply2", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_match_6305", 
                "caml_curry3", 
                "caml_young_limit", 
                "caml_call_gc", 
                "caml_curry2", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_SetIsType_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_SetIsType.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Init/_coq-native/NCoq_Init_Prelude_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Init/.coq-native/NCoq_Init_Prelude.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Init/_coq-native/NCoq_Init_Notations_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Init/.coq-native/NCoq_Init_Notations.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Structures/_coq-native/NCoq_Structures_OrderedType_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Structures/.coq-native/NCoq_Structures_OrderedType.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "caml_call_gc", 
                "caml_young_limit", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_ind_accu_4947", 
                "__cxa_finalize", 
                "camlNativecode__get_match_6305", 
                "__gmon_start__", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_SeqProp_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_SeqProp.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Reals_Rseries", 
                "camlNCoq_Init_Peano", 
                "camlNativevalues__mk_sw_accu_5114", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativecode__get_match_6305", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "camlNCoq_Reals_Raxioms__const_NCoq_Reals_Raxioms_bound_2739", 
                "caml_young_limit", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Init_Datatypes", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Reals_Rseries__const_NCoq_Reals_Rseries_EUn_2681", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rle_2695", 
                "__gmon_start__", 
                "caml_call_gc", 
                "camlNCoq_Reals_Rdefinitions", 
                "__cxa_finalize", 
                "camlNativevalues__mk_constant_accu_4657"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_IndefiniteDescription_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_IndefiniteDescription.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize", 
                "camlNativecode__get_const_6301", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_Mult_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_Mult.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "caml_apply3", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_young_limit", 
                "camlNativecode__get_match_6305", 
                "caml_curry4", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Arith_Plus__x_tail_plus_35_2786", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_alloc3", 
                "caml_curry2", 
                "camlNativevalues__mk_prod_accu_5119", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativecode__get_const_6301", 
                "caml_curry3"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/NArith/_coq-native/NCoq_NArith_Ngcd_def_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/NArith/.coq-native/NCoq_NArith_Ngcd_def.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Multiset_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Multiset.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Logic", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_value_6218", 
                "caml_young_limit", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Datatypes", 
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "caml_call_gc", 
                "camlNativevalues__mk_ind_accu_4947", 
                "__gmon_start__", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_match_6305"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/Abstract/_coq-native/NCoq_Numbers_Integer_Abstract_ZMaxMin_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/Abstract/.coq-native/NCoq_Numbers_Integer_Abstract_ZMaxMin.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "__gmon_start__", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Classes/_coq-native/NCoq_Classes_CRelationClasses_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Classes/.coq-native/NCoq_Classes_CRelationClasses.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_call_gc", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Init_Logic", 
                "caml_ml_array_bound_error", 
                "camlNativevalues", 
                "caml_make_array", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_ind_6309", 
                "caml_young_limit", 
                "caml_c_call", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "camlNativecode__get_const_6301", 
                "caml_allocN", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_match_6305", 
                "camlNativecode__get_name_6297", 
                "__gmon_start__", 
                "camlNCoq_Init_Datatypes", 
                "caml_young_ptr", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_prod_rect_2991", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_sym_2912", 
                "camlNativevalues__mk_sort_accu_4950"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/Abstract/_coq-native/NCoq_Numbers_Integer_Abstract_ZLt_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/Abstract/.coq-native/NCoq_Numbers_Integer_Abstract_ZLt.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__cxa_finalize", 
                "__gmon_start__", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_Rings_Q_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_Rings_Q.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "camlNativecode__get_value_6218", 
                "caml_young_limit", 
                "__gmon_start__", 
                "caml_alloc1", 
                "camlNCoq_QArith_QArith_base", 
                "__cxa_finalize", 
                "camlNativecode__get_const_6301", 
                "caml_alloc3", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_deregisterTMCloneTable", 
                "caml_call_gc"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/NatInt/_coq-native/NCoq_Numbers_NatInt_NZAxioms_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/NatInt/.coq-native/NCoq_Numbers_NatInt_NZAxioms.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_const_6301"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Vectors/_coq-native/NCoq_Vectors_Fin_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Vectors/.coq-native/NCoq_Vectors_Fin.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_alloc3", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rec_2894", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "caml_young_limit", 
                "camlNCoq_Init_Peano__const_NCoq_Init_Peano_lt_2785", 
                "camlNCoq_Init_Nat", 
                "caml_allocN", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Init_Nat__x_mul_27_2706", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_rect_2680", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__is_accu_5182", 
                "camlNCoq_Arith_PeanoNat__x_eqb_64_2757", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_sym_2912", 
                "camlNCoq_Init_Datatypes", 
                "caml_alloc1", 
                "camlNCoq_Arith_Lt", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_Arith_PeanoNat", 
                "__cxa_finalize", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Specif", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Relations_1_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Relations_1.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_sort_6293", 
                "caml_call_gc", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_match_6305", 
                "__cxa_finalize", 
                "camlNativecode__get_ind_6309", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_ind_accu_4947", 
                "caml_young_limit", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Logic", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/rtauto/_coq-native/NCoq_rtauto_Bintree_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/rtauto/.coq-native/NCoq_rtauto_Bintree.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "caml_young_limit", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Numbers_BinNums__const_NCoq_Numbers_BinNums_positive_ind_2708", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_PArith_BinPos__x_succ_8_2676", 
                "camlNativecode__get_ind_6309", 
                "caml_call_gc", 
                "camlNativecode__get_value_6218", 
                "camlNativecode__get_name_6297", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_const_6301", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Init_Datatypes", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_Init_Logic", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_rec_r_2961", 
                "__gmon_start__", 
                "__cxa_finalize", 
                "camlNativevalues__is_accu_5182", 
                "camlNCoq_Numbers_BinNums", 
                "caml_alloc3", 
                "camlNativevalues__mk_fix_accu_5185"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Ratan_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Ratan.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "caml_curry2", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rdiv_2704", 
                "camlNCoq_Init_Nat__x_mul_27_2706", 
                "caml_apply3", 
                "camlNativecode__get_value_6218", 
                "caml_young_limit", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Reals_Rpow_def__x_pow_10_2677", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Reals_AltSeries", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_alloc1", 
                "camlNCoq_Reals_Raxioms", 
                "caml_call_gc", 
                "camlNCoq_Reals_Raxioms__x_INR_12_2722"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Integration_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Integration.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_PartSum_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_PartSum.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Reals_Rseries__const_NCoq_Reals_Rseries_Cauchy_crit_2693", 
                "caml_call_gc", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Reals_Rfunctions__x_sum_f_R0_41_2802", 
                "camlNativevalues__str_decode_5828", 
                "caml_curry3", 
                "caml_apply2"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_MVT_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_MVT.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/omega/_coq-native/NCoq_omega_PreOmega_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/omega/.coq-native/NCoq_omega_PreOmega.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Numbers_BinNums"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FSetPositive_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FSetPositive.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "caml_curry4", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_sym_2912", 
                "caml_call_gc", 
                "caml_young_limit", 
                "caml_curry8", 
                "camlNCoq_Init_Logic", 
                "caml_allocN", 
                "caml_curry2", 
                "caml_curry7", 
                "caml_alloc1", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Specif", 
                "camlNativecode__get_ind_6309", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__is_accu_5182", 
                "caml_apply2", 
                "caml_alloc3", 
                "caml_apply3", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__str_decode_5828", 
                "caml_curry6", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_curry5", 
                "camlNativevalues__mk_ind_accu_4947", 
                "caml_apply5", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Structures_OrderedType", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Bool_Bool__const_NCoq_Bool_Bool_eqb_2776", 
                "camlNCoq_Structures_OrderedTypeEx", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "camlNCoq_Init_Datatypes", 
                "camlNativecode__get_value_6218", 
                "caml_curry3", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_andb_2713", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_orb_2719"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Setoids/_coq-native/NCoq_Setoids_Setoid_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Setoids/.coq-native/NCoq_Setoids_Setoid.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_apply3", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_const_6301", 
                "caml_apply5", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Classes_RelationClasses", 
                "camlNativevalues__str_decode_5828", 
                "caml_curry6", 
                "caml_curry4", 
                "caml_curry8", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_Ring_tac_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_Ring_tac.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_alloc1", 
                "camlNativecode__get_value_6218", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Nat__x_mul_27_2706"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Classes/_coq-native/NCoq_Classes_Morphisms_Prop_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Classes/.coq-native/NCoq_Classes_Morphisms_Prop.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_and_ind_2720", 
                "camlNativecode__get_match_6305", 
                "__cxa_finalize", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_name_6297", 
                "camlNativecode__get_const_6301", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__gmon_start__", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_call_gc", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_ex_ind_2830", 
                "caml_young_limit", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_or_ind_2779"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zpow_alt_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zpow_alt.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_curry2", 
                "caml_young_limit", 
                "caml_apply2", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_match_6305", 
                "caml_call_gc", 
                "camlNCoq_ZArith_BinInt", 
                "camlNativecode__get_value_6218", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Numbers_BinNums", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_iter_op_3941", 
                "camlNativevalues__mk_sw_accu_5114"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Abstract/_coq-native/NCoq_Numbers_Natural_Abstract_NStrongRec_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Abstract/.coq-native/NCoq_Numbers_Natural_Abstract_NStrongRec.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rbasic_fun_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rbasic_fun.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Reals_Rdefinitions", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__mk_sw_accu_5114", 
                "__gmon_start__", 
                "camlNCoq_Reals_RIneq", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_const_6301", 
                "caml_call_gc", 
                "camlNativecode__get_match_6305", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/PArith/_coq-native/NCoq_PArith_BinPos_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/PArith/.coq-native/NCoq_PArith_BinPos.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_rect_2887", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_sumbool_rec_2969", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "__cxa_finalize", 
                "camlNCoq_Numbers_BinNums__const_NCoq_Numbers_BinNums_positive_rec_2710", 
                "camlNCoq_Init_Specif", 
                "__gmon_start__", 
                "camlNCoq_Classes_Morphisms", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "caml_alloc3", 
                "camlNativevalues__is_accu_5182", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_CompSpec2Type_3465", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_Init_Nat", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_ind_6309", 
                "caml_call_gc", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rect_2885", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "caml_young_limit", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Bool_Bool__const_NCoq_Bool_Bool_iff_reflect_3024", 
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_match_6305", 
                "caml_allocN", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_PER_2889", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_equivalence_2978", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/MSets/_coq-native/NCoq_MSets_MSetDecide_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/MSets/.coq-native/NCoq_MSets_MSetDecide.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/NatInt/_coq-native/NCoq_Numbers_NatInt_NZAxioms_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/NatInt/.coq-native/NCoq_Numbers_NatInt_NZAxioms.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_FunctionalExtensionality_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_FunctionalExtensionality.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_apply3", 
                "camlNativecode__get_const_6301", 
                "camlNativecode__get_sort_6293", 
                "caml_curry3", 
                "caml_apply5", 
                "caml_call_gc", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_name_6297", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_curry4", 
                "caml_young_limit"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rbasic_fun_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rbasic_fun.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_curry3", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Reals_Rdefinitions", 
                "caml_call_gc", 
                "caml_apply2", 
                "caml_young_limit", 
                "caml_curry2", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Reals_RIneq", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/omega/_coq-native/NCoq_omega_OmegaPlugin_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/omega/.coq-native/NCoq_omega_OmegaPlugin.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/NatInt/_coq-native/NCoq_Numbers_NatInt_NZOrder_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/NatInt/.coq-native/NCoq_Numbers_NatInt_NZOrder.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Structures/_coq-native/NCoq_Structures_OrderedTypeEx_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Structures/.coq-native/NCoq_Structures_OrderedTypeEx.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_curry5", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lt_4420", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_compare_2865", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_Init_Peano", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_compare_3449", 
                "caml_apply3", 
                "caml_young_limit", 
                "caml_curry3", 
                "camlNativecode__get_match_6305", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Datatypes", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_PArith_BinPos", 
                "caml_curry2", 
                "camlNCoq_Structures_OrderedType", 
                "caml_alloc1", 
                "caml_alloc3", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_sym_2912", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Arith_PeanoNat", 
                "camlNCoq_NArith_BinNat", 
                "camlNCoq_Arith_Compare_dec", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "caml_apply5", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_apply2", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Arith_PeanoNat__x_compare_101_2804", 
                "caml_allocN", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Classes/_coq-native/NCoq_Classes_Init_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Classes/.coq-native/NCoq_Classes_Init.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Datatypes", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_young_limit", 
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable", 
                "caml_call_gc", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Cyclic/DoubleCyclic/_coq-native/NCoq_Numbers_Cyclic_DoubleCyclic_DoubleMul_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Cyclic/DoubleCyclic/.coq-native/NCoq_Numbers_Cyclic_DoubleCyclic_DoubleMul.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleBase__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleBase_extend_2814", 
                "camlNativecode__get_const_6301", 
                "caml_young_limit", 
                "camlNativevalues__mk_prod_accu_5119", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType__x_word_67_2796", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Init_Datatypes", 
                "__gmon_start__", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType", 
                "camlNativecode__get_match_6305", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_name_6297", 
                "__cxa_finalize", 
                "caml_call_gc", 
                "camlNativevalues__mk_constant_accu_4657"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Finite_sets_facts_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Finite_sets_facts.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Cyclic/DoubleCyclic/_coq-native/NCoq_Numbers_Cyclic_DoubleCyclic_DoubleCyclic_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Cyclic/DoubleCyclic/.coq-native/NCoq_Numbers_Cyclic_DoubleCyclic_DoubleCyclic.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_pred_c_2914", 
                "caml_curry12", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_succ_c_2856", 
                "caml_curry15", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleType_zn2z_to_Z_2746", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType__x_word_67_2796", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_add_c_2869", 
                "caml_apply3", 
                "caml_young_limit", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_square_c_2987", 
                "caml_curry11", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_OW_4105", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_sub_carry_2954", 
                "caml_curry5", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_opp_c_2832", 
                "caml_curry22", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_zero_2779", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_mul_c_2967", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_lor_3113", 
                "caml_curry30", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_pos_mod_3076", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_zdigits_2720", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_add_mul_div_3068", 
                "caml_curry17", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_add_carry_2906", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_gcd_gt_3046", 
                "caml_curry27", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_add_2898", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_add_carry_c_2877", 
                "caml_curry35", 
                "caml_curry25", 
                "camlNCoq_Numbers_BinNums", 
                "caml_curry34", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_div_gt_3014", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_minus_one_2795", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_WO_4094", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_to_Z_2739", 
                "camlNativecode__get_name_6297", 
                "caml_curry14", 
                "caml_curry32", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__fun_23695", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_mul_2975", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_sqrt2_3097", 
                "caml_curry16", 
                "caml_curry33", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_pred_2938", 
                "caml_curry8", 
                "caml_curry19", 
                "caml_apply4", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_is_even_3084", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_compare_2808", 
                "caml_curry31", 
                "caml_call_gc", 
                "caml_curry7", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_eq0_2820", 
                "caml_curry9", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_opp_carry_2848", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleSqrt__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleSqrt_ww_head1_3283", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType", 
                "caml_curry23", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_digits_2709", 
                "caml_curry13", 
                "camlNCoq_Init_Datatypes", 
                "caml_apply2", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_land_3121", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_sub_carry_c_2930", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleSqrt__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleSqrt_split_2674", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleType_base_2654", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__fun_23589", 
                "camlNativevalues__is_accu_5182", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleMul__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleMul_w_mul_add_3245", 
                "caml_curry26", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_one_2787", 
                "caml_curry24", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__fun_23594", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_WW_4132", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_opp_2840", 
                "caml_curry6", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_curry28", 
                "caml_curry3", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleMul", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleDivn1__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleDivn1_high_3074", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleSqrt__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleSqrt_ww_is_zero_3270", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_head0_2763", 
                "caml_curry10", 
                "caml_apply6", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_div21_3001", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_sub_c_2922", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_sub_2946", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_lxor_3129", 
                "caml_curry20", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_of_pos_2751", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_modulo_gt_3030", 
                "caml_curry2", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_tail0_2771", 
                "caml_curry36", 
                "caml_curry21", 
                "caml_curry18"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Cyclic/Abstract/_coq-native/NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Cyclic/Abstract/.coq-native/NCoq_Numbers_Cyclic_Abstract_CyclicAxioms.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_opp_2764", 
                "camlNativecode__get_const_6301", 
                "camlNativecode__get_match_6305", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleType_zn2z_to_Z_2746", 
                "camlNativecode__get_value_6218", 
                "caml_young_limit", 
                "caml_curry45", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleType_base_2654", 
                "caml_curry7", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lxor_4409", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lor_4331", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_mul_2790", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleType_interp_carry_2700", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType", 
                "camlNativevalues__mk_sort_accu_4950", 
                "caml_apply3", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_le_4426", 
                "caml_curry48", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_snd_3023", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_div_3330", 
                "caml_curry5", 
                "camlNCoq_Init_Datatypes", 
                "caml_call_gc", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_gt_4423", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_of_N_3193", 
                "caml_curry2", 
                "caml_curry6", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lt_4420", 
                "caml_curry4", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_land_4355", 
                "camlNCoq_ZArith_Znumtheory", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_modulo_3338", 
                "caml_curry3", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_compare_2865", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_pow_2805", 
                "camlNativecode__get_sort_6293", 
                "caml_apply2"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/syntax/ascii_syntax_plugin_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/syntax/ascii_syntax_plugin.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlPrintf__sprintf_1315", 
                "caml_alloc2", 
                "camlList__rev_map_1264", 
                "camlPp__str_1375", 
                "camlLoc__3", 
                "caml_c_call", 
                "caml_fresh_oo_id", 
                "caml_young_ptr", 
                "caml_int_of_string", 
                "camlBytes__make_1216", 
                "camlMltop__add_known_module_3856", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "caml_allocN", 
                "camlNames", 
                "camlCoqlib", 
                "caml_young_limit", 
                "caml_raise_exn", 
                "caml_ml_array_bound_error", 
                "caml_backtrace_pos", 
                "camlOption__map_1252", 
                "camlCoqlib__find_reference_5296", 
                "camlCErrors__user_err_loc_1346", 
                "camlNames__of_string_1937", 
                "caml_call_gc", 
                "__cxa_finalize", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "_ITM_deregisterTMCloneTable", 
                "camlGlobnames__eq_gr_4115", 
                "camlGlobnames__encode_mind_4786"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/NArith/_coq-native/NCoq_NArith_Ndigits_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/NArith/.coq-native/NCoq_NArith_Ndigits.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_Arith_PeanoNat", 
                "camlNCoq_PArith_BinPos__x_size_nat_362_3082", 
                "camlNativevalues__str_decode_5828", 
                "caml_curry3", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "caml_apply2", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_succ_double_2663", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_lxor_4011", 
                "caml_curry2", 
                "camlNCoq_Bool_Bvector", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_andb_2713", 
                "camlNCoq_Init_Logic", 
                "caml_young_limit", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_curry4", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_even_3752", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_div2_3711", 
                "caml_alloc1", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_size_nat_3799", 
                "camlNativecode__get_name_6297", 
                "caml_call_gc", 
                "caml_alloc3", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_apply3", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_double_2669", 
                "camlNativecode__get_match_6305"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zcompare_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zcompare.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Lists/_coq-native/NCoq_Lists_StreamMemo_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Lists/.coq-native/NCoq_Lists_StreamMemo.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativecode__get_value_6218", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Lists_Streams__const_NCoq_Lists_Streams_tl_2681", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_match_6305", 
                "caml_alloc3", 
                "__cxa_finalize", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_cofix_accu_5190", 
                "camlNCoq_Lists_Streams__const_NCoq_Lists_Streams_hd_2669", 
                "camlNCoq_Init_Datatypes", 
                "caml_call_gc", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Lists_Streams", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_young_limit", 
                "camlNativevalues__str_decode_5828", 
                "__gmon_start__", 
                "camlNativevalues__upd_cofix_5194", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Init_Specif", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Abstract/_coq-native/NCoq_Numbers_Natural_Abstract_NAxioms_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Abstract/.coq-native/NCoq_Numbers_Natural_Abstract_NAxioms.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "caml_call_gc", 
                "camlNativecode__get_const_6301", 
                "__gmon_start__", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_deregisterTMCloneTable", 
                "caml_young_limit", 
                "camlNCoq_Init_Logic", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zminmax_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zminmax.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/micromega/_coq-native/NCoq_micromega_Lra_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/micromega/.coq-native/NCoq_micromega_Lra.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FMapPositive_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FMapPositive.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativecode__get_match_6305", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlNCoq_Structures_OrderedType__const_NCoq_Structures_OrderedType_Compare_rec_2714", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_andb_2713", 
                "__cxa_finalize", 
                "caml_call_gc", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "camlNativecode__get_ind_6309", 
                "caml_young_limit", 
                "camlNativecode__get_name_6297", 
                "__gmon_start__", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_sym_2912", 
                "camlNCoq_FSets_FMapInterface", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Lists_SetoidList", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_FSets_FMapInterface__const_NCoq_FSets_FMapInterface_Cmp_2654", 
                "caml_alloc3", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_app_3138", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Structures_OrderedTypeEx", 
                "caml_allocN", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_option_map_2933", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Init_Specif", 
                "caml_alloc1", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_snd_3023", 
                "camlNCoq_Numbers_BinNums"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_Rings_R_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_Rings_R.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Reals_Rdefinitions", 
                "caml_apply2", 
                "camlNCoq_Init_Logic", 
                "camlNativecode__get_const_6301", 
                "caml_curry2", 
                "caml_curry3", 
                "caml_apply3", 
                "caml_alloc1", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_alloc3", 
                "camlNCoq_Reals_RIneq", 
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_call_gc", 
                "caml_young_limit", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_Reals_Raxioms", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "caml_curry6"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Classes/_coq-native/NCoq_Classes_Init_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Classes/.coq-native/NCoq_Classes_Init.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_curry4", 
                "caml_curry3"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zcompare_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zcompare.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_const_6301", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Cpo_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Cpo.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Sets_Partial_Order__const_NCoq_Sets_Partial_Order_Rel_of_2686", 
                "camlNCoq_Init_Logic", 
                "__cxa_finalize", 
                "camlNativevalues__str_decode_5828", 
                "__gmon_start__", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Sets_Partial_Order", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_ind_accu_4947", 
                "caml_call_gc", 
                "camlNCoq_Sets_Ensembles", 
                "camlNativecode__get_ind_6309", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Sets_Partial_Order__const_NCoq_Sets_Partial_Order_Carrier_of_2675", 
                "caml_young_limit", 
                "camlNativevalues__mk_sw_accu_5114"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rtrigo1_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rtrigo1.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Reals_Rtrigo_def__const_NCoq_Reals_Rtrigo_def_sin_2779", 
                "camlNativevalues__str_decode_5828", 
                "caml_apply3", 
                "camlNCoq_Reals_Rtrigo_alt__const_NCoq_Reals_Rtrigo_alt_cos_approx_2663", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNativecode__get_value_6218", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Logic", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rle_2695", 
                "caml_apply2", 
                "camlNCoq_Reals_Rtrigo_def__const_NCoq_Reals_Rtrigo_def_cos_2759", 
                "caml_alloc3", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rdiv_2704", 
                "camlNativecode__get_const_6301"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_Compare_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_Compare.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Init_Logic", 
                "caml_apply3", 
                "caml_curry2", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_const_6301", 
                "caml_apply2", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Peano__const_NCoq_Init_Peano_lt_2785", 
                "camlNCoq_Arith_Compare_dec"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rsqrt_def_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rsqrt_def.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "camlNCoq_Reals_RIneq__const_NCoq_Reals_RIneq_cond_nonneg_2984", 
                "_ITM_deregisterTMCloneTable", 
                "caml_allocN", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Reals_RIneq__const_NCoq_Reals_RIneq_nonneg_2976", 
                "camlNativecode__get_const_6301", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_call_gc", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__is_accu_5182", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Reals_Rdefinitions", 
                "caml_young_limit", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rdiv_2704", 
                "__cxa_finalize", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Reals_RIneq", 
                "camlNCoq_Reals_Rpow_def__x_pow_10_2677", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/funind/_coq-native/NCoq_funind_Recdef_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/funind/.coq-native/NCoq_funind_Recdef.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_curry5", 
                "caml_young_limit", 
                "camlNativecode__get_value_6218", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_apply3", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_apply2", 
                "caml_call_gc", 
                "caml_curry2", 
                "camlNativecode__get_ind_6309", 
                "caml_curry4", 
                "camlNCoq_Arith_PeanoNat", 
                "camlNCoq_Arith_Compare_dec__const_NCoq_Arith_Compare_dec_le_lt_dec_2729", 
                "camlNCoq_Init_Wf__const_NCoq_Init_Wf_Acc_intro_generator_2936", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_curry3"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Lists/_coq-native/NCoq_Lists_List_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Lists/.coq-native/NCoq_Lists_List.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_list_rect_3084", 
                "caml_curry3", 
                "camlNativecode__get_const_6301", 
                "caml_curry5", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_length_3112", 
                "camlNCoq_Init_Specif", 
                "caml_apply7", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "caml_apply5", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Init_Datatypes", 
                "camlNativecode__get_sort_6293", 
                "camlNativecode__get_ind_6309", 
                "caml_curry2", 
                "caml_apply3", 
                "caml_young_limit", 
                "camlNativevalues__str_decode_5828", 
                "caml_apply4", 
                "caml_curry4", 
                "caml_alloc1", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_andb_2713", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__is_accu_5182", 
                "camlNativecode__get_name_6297", 
                "caml_curry9", 
                "caml_alloc3", 
                "camlNativecode__get_value_6218", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_app_3138", 
                "caml_call_gc", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_sumbool_rec_2969", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_list_rec_3096", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_curry7", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_orb_2719", 
                "caml_apply2", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNCoq_Init_Logic"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Integers_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Integers.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "caml_call_gc", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_alloc1", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativevalues__mk_constant_accu_4657", 
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativecode__get_const_6301", 
                "camlNativecode__get_value_6218", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_ind_6309", 
                "camlNativecode__get_match_6305", 
                "caml_young_limit", 
                "camlNCoq_Init_Peano", 
                "camlNativevalues__mk_sw_accu_5114"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/extraction/_coq-native/NCoq_extraction_ExtrHaskellString_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/extraction/.coq-native/NCoq_extraction_ExtrHaskellString.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_NewtonInt_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_NewtonInt.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_call_gc", 
                "camlNCoq_setoid_ring_RealField", 
                "caml_apply2", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "caml_apply4", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rminus_2701", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_sig_rec_2684", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_ex_ind_2830", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_sym_2912", 
                "caml_apply3", 
                "camlNCoq_Reals_Ranalysis1__const_NCoq_Reals_Ranalysis1_derive_pt_2808", 
                "caml_curry3", 
                "camlNCoq_setoid_ring_Ring_tac", 
                "camlNCoq_Reals_RIneq", 
                "camlNCoq_Reals_Ranalysis1__const_NCoq_Reals_Ranalysis1_derivable_pt_2801", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_and_ind_2720", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_or_ind_2779", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rle_2695", 
                "camlNCoq_Init_Specif", 
                "caml_curry4", 
                "camlNCoq_Reals_Ranalysis1__const_NCoq_Reals_Ranalysis1_antiderivative_2817", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Reals_Ranalysis1__const_NCoq_Reals_Ranalysis1_mult_fct_2661", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "caml_apply6", 
                "camlNCoq_Reals_Ranalysis1__const_NCoq_Reals_Ranalysis1_plus_fct_2654", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_value_6218", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_curry2", 
                "camlNCoq_Reals_Ranalysis1__const_NCoq_Reals_Ranalysis1_derivable_pt_lim_2787", 
                "camlNCoq_Reals_Ranalysis1", 
                "caml_young_limit", 
                "camlNCoq_Init_Logic", 
                "caml_curry7", 
                "caml_apply5", 
                "caml_apply7", 
                "camlNCoq_Reals_Ranalysis1__const_NCoq_Reals_Ranalysis1_d1_2838"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/btauto/_coq-native/NCoq_btauto_Algebra_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/btauto/.coq-native/NCoq_btauto_Algebra.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_sw_accu_5114", 
                "__cxa_finalize", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_ltb_3399", 
                "caml_allocN", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_call_gc", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_le_3993", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_xorb_2735", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Classes_DecidableClass__const_NCoq_Classes_DecidableClass_Decidable_witness_2667", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_PArith_BinPos__x_peano_rect_1003_4250", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNCoq_PArith_BinPos__x_succ_8_2676", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_leb_3393", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_PArith_BinPos", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_PArith_BinPos__x_eqb_445_3384", 
                "caml_alloc1", 
                "camlNCoq_Classes_DecidableClass__const_NCoq_Classes_DecidableClass_Decidable_eq_bool_2719", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_lt_3987", 
                "__gmon_start__", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__is_accu_5182", 
                "_ITM_deregisterTMCloneTable", 
                "caml_young_limit", 
                "caml_alloc3", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_andb_2713", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlCamlinternalLazy__force_lazy_block_1264"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Wellfounded/_coq-native/NCoq_Wellfounded_Lexicographic_Product_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Wellfounded/.coq-native/NCoq_Wellfounded_Lexicographic_Product.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Init_Logic", 
                "caml_young_limit", 
                "camlNCoq_Init_Wf__const_NCoq_Init_Wf_Acc_ind_2709", 
                "camlNCoq_Relations_Relation_Operators", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Wf__const_NCoq_Init_Wf_Acc_inv_2730", 
                "camlNCoq_Init_Datatypes", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Specif", 
                "__gmon_start__", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "__cxa_finalize", 
                "camlNCoq_Logic_Eqdep", 
                "caml_call_gc", 
                "camlNativecode__get_name_6297", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Wf__const_NCoq_Init_Wf_well_founded_2736", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlNativevalues__mk_prod_accu_5119", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_Cring_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_Cring.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_apply8", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_add_assoc_3057", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_add_0_l_2982", 
                "caml_curry2", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_sub_def_3280", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_setoid_2789", 
                "caml_curry11", 
                "caml_apply10", 
                "caml_apply6", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_distr_l_3205", 
                "camlNCoq_ZArith_BinInt", 
                "camlNCoq_Classes_Morphisms", 
                "camlNCoq_Init_Logic", 
                "caml_apply3", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_sort_accu_4950", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_mul_2790", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_opp_comp_2946", 
                "caml_apply4", 
                "camlNCoq_setoid_ring_Ncring", 
                "caml_curry3", 
                "camlNCoq_setoid_ring_Ncring_initial", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_setoid_ring_Algebra_syntax__const_NCoq_setoid_ring_Algebra_syntax_Equality_2700", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_opp_2764", 
                "camlNCoq_setoid_ring_Ncring_tac", 
                "caml_apply11", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_PER_2889", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_pow_N_2736", 
                "caml_curry10", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_add_comm_3019", 
                "camlNCoq_setoid_ring_InitialRing", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751", 
                "camlNativevalues__str_decode_5828", 
                "caml_call_gc", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_plus_comp_2834", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_mult_comp_2872", 
                "camlNCoq_setoid_ring_Ncring_initial__const_NCoq_setoid_ring_Ncring_initial_gen_phiZ_3009", 
                "camlNCoq_Classes_RelationClasses", 
                "caml_curry6", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_mul_1_l_3093", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_Reflexive_2972", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_mul_assoc_3167", 
                "camlNCoq_Numbers_BinNums", 
                "caml_young_limit", 
                "camlNCoq_Program_Basics", 
                "caml_apply12", 
                "camlNativecode__get_value_6218"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/bin/coqdep": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/coqdep", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "atan", 
                "mkfifo", 
                "__fdelt_chk", 
                "gettimeofday", 
                "memcmp", 
                "pthread_join", 
                "accept4", 
                "unlink", 
                "rmdir", 
                "ceil", 
                "__fxstat64", 
                "getenv", 
                "expm1", 
                "sigismember", 
                "log10", 
                "realloc", 
                "pthread_key_create", 
                "utimes", 
                "getpwuid", 
                "dlopen", 
                "__libc_start_main", 
                "getgid", 
                "cosh", 
                "close", 
                "__isoc99_sscanf", 
                "floor", 
                "setsockopt", 
                "fflush", 
                "open64", 
                "tanh", 
                "__gmon_start__", 
                "fchmod", 
                "cos", 
                "getcwd", 
                "pipe2", 
                "fputc", 
                "nanosleep", 
                "setuid", 
                "strerror", 
                "chdir", 
                "getpid", 
                "send", 
                "sigpending", 
                "strtol", 
                "connect", 
                "pthread_create", 
                "geteuid", 
                "strtod", 
                "gethostbyaddr_r", 
                "opendir", 
                "fchown", 
                "getsockopt", 
                "setgroups", 
                "sinh", 
                "malloc", 
                "closedir", 
                "pthread_cond_wait", 
                "readlink", 
                "tcsendbreak", 
                "tcgetattr", 
                "pthread_attr_init", 
                "modf", 
                "readdir64", 
                "strlen", 
                "execv", 
                "mkdir", 
                "getrlimit64", 
                "pthread_sigmask", 
                "pthread_cond_signal", 
                "getgrgid", 
                "isatty", 
                "lseek64", 
                "__read_chk", 
                "__lxstat64", 
                "getnameinfo", 
                "pow", 
                "socket", 
                "getpeername", 
                "exp", 
                "sigaltstack", 
                "__errno_location", 
                "alarm", 
                "sigemptyset", 
                "gethostname", 
                "getsockname", 
                "getprotobyname", 
                "sigaction", 
                "rewinddir", 
                "cfsetispeed", 
                "log", 
                "read", 
                "hypot", 
                "__memcpy_chk", 
                "umask", 
                "abort", 
                "pthread_mutex_init", 
                "sigdelset", 
                "ftruncate64", 
                "setsid", 
                "pthread_attr_setdetachstate", 
                "time", 
                "cfgetispeed", 
                "pthread_cond_init", 
                "truncate64", 
                "link", 
                "strnlen", 
                "__fprintf_chk", 
                "ldexp", 
                "listen", 
                "memcpy", 
                "__stack_chk_fail", 
                "fmin", 
                "rename", 
                "getppid", 
                "__snprintf_chk", 
                "sigaddset", 
                "sendto", 
                "log1p", 
                "__xstat64", 
                "getuid", 
                "tcdrain", 
                "getgrnam", 
                "tcsetattr", 
                "setgid", 
                "getpwnam", 
                "__recvfrom_chk", 
                "exit", 
                "system", 
                "cfsetospeed", 
                "select", 
                "freeaddrinfo", 
                "pthread_setspecific", 
                "__vsnprintf_chk", 
                "sigwait", 
                "memset", 
                "setitimer", 
                "dlsym", 
                "access", 
                "acos", 
                "__recv_chk", 
                "sigprocmask", 
                "sqrt", 
                "symlink", 
                "getegid", 
                "fputs", 
                "shutdown", 
                "kill", 
                "getgroups", 
                "execve", 
                "tcflush", 
                "getservbyport", 
                "strcmp", 
                "pthread_cond_broadcast", 
                "fmod", 
                "mmap64", 
                "asin", 
                "munmap", 
                "__register_atfork", 
                "tcflow", 
                "gmtime", 
                "socketpair", 
                "nice", 
                "__memmove_chk", 
                "dlclose", 
                "execvp", 
                "wait", 
                "pthread_mutex_destroy", 
                "atan2", 
                "pthread_exit", 
                "fcntl", 
                "waitpid", 
                "pthread_mutex_lock", 
                "sin", 
                "localtime", 
                "getservbyname", 
                "fwrite", 
                "inet_pton", 
                "gethostbyname_r", 
                "frexp", 
                "initgroups", 
                "write", 
                "dlerror", 
                "getrusage", 
                "getlogin", 
                "getaddrinfo", 
                "fork", 
                "inet_ntop", 
                "chmod", 
                "sigfillset", 
                "secure_getenv", 
                "__longjmp_chk", 
                "bind", 
                "sigsuspend", 
                "memmove", 
                "calloc", 
                "cfgetospeed", 
                "putenv", 
                "getprotobynumber", 
                "__sigsetjmp", 
                "pthread_cond_destroy", 
                "pthread_getspecific", 
                "getitimer", 
                "pthread_mutex_trylock", 
                "chroot", 
                "mktime", 
                "tan", 
                "pthread_mutex_unlock", 
                "chown"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_Gt_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_Gt.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_const_6301"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/NArith/_coq-native/NCoq_NArith_Ndec_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/NArith/.coq-native/NCoq_NArith_Ndec.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "caml_young_limit", 
                "camlNCoq_Arith_PeanoNat__x_leb_80_2773", 
                "caml_call_gc", 
                "_ITM_registerTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_to_nat_4062", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Arith_PeanoNat", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/BigN/_coq-native/NCoq_Numbers_Natural_BigN_NMake_gen_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/BigN/.coq-native/NCoq_Numbers_Natural_BigN_NMake_gen.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Bool/_coq-native/NCoq_Bool_BoolEq_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Bool/.coq-native/NCoq_Bool_BoolEq.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_sym_2912", 
                "camlNCoq_Init_Specif", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__str_decode_5828", 
                "__cxa_finalize", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_name_6297", 
                "_ITM_deregisterTMCloneTable", 
                "caml_young_limit", 
                "caml_call_gc", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNCoq_Bool_Bool", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Cauchy_prod_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Cauchy_prod.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Structures/_coq-native/NCoq_Structures_OrdersTac_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Structures/.coq-native/NCoq_Structures_OrdersTac.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_curry2", 
                "camlNativecode__get_match_6305", 
                "caml_curry5", 
                "caml_curry4", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_ind_6309", 
                "caml_call_gc", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_ind_accu_4947", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Classes/_coq-native/NCoq_Classes_CRelationClasses_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Classes/.coq-native/NCoq_Classes_CRelationClasses.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Init_Datatypes", 
                "caml_call_gc", 
                "camlNativevalues__str_decode_5828", 
                "caml_young_limit", 
                "caml_curry9", 
                "caml_curry3", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_prod_rect_2991", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_sort_6293", 
                "caml_apply4", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_apply2", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "caml_curry4", 
                "caml_curry6", 
                "caml_curry7", 
                "caml_young_ptr", 
                "camlNativevalues__mk_sort_accu_4950", 
                "caml_curry5", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_allocN", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_sym_2912", 
                "camlNativecode__get_match_6305", 
                "caml_make_array", 
                "camlNativecode__get_const_6301", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_apply3", 
                "caml_ml_array_bound_error", 
                "camlNativecode__get_name_6297", 
                "caml_apply5", 
                "camlNativevalues__mk_ind_accu_4947", 
                "caml_curry8", 
                "caml_c_call"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Unicode/_coq-native/NCoq_Unicode_Utf8_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Unicode/.coq-native/NCoq_Unicode_Utf8.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Infinite_sets_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Infinite_sets.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativecode__get_match_6305", 
                "caml_young_limit", 
                "caml_call_gc", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__mk_sw_accu_5114", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/Abstract/_coq-native/NCoq_Numbers_Integer_Abstract_ZAdd_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/Abstract/.coq-native/NCoq_Numbers_Integer_Abstract_ZAdd.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/bin/coqwc": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/coqwc", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__memcpy_chk", 
                "__libc_start_main", 
                "getpid", 
                "munmap", 
                "isatty", 
                "memcmp", 
                "readdir64", 
                "getenv", 
                "__errno_location", 
                "close", 
                "sigaction", 
                "sigemptyset", 
                "getrusage", 
                "tan", 
                "closedir", 
                "dlsym", 
                "ldexp", 
                "sinh", 
                "memcpy", 
                "abort", 
                "realloc", 
                "dlopen", 
                "getppid", 
                "strcmp", 
                "exit", 
                "sin", 
                "getrlimit64", 
                "floor", 
                "ceil", 
                "malloc", 
                "cos", 
                "sigprocmask", 
                "fflush", 
                "fputc", 
                "acos", 
                "tanh", 
                "chdir", 
                "cosh", 
                "system", 
                "dlerror", 
                "sqrt", 
                "__snprintf_chk", 
                "exp", 
                "lseek64", 
                "memset", 
                "modf", 
                "atan2", 
                "fwrite", 
                "memmove", 
                "read", 
                "fmin", 
                "write", 
                "getcwd", 
                "__isoc99_sscanf", 
                "asin", 
                "readlink", 
                "fmod", 
                "strerror", 
                "gettimeofday", 
                "log10", 
                "atan", 
                "free", 
                "secure_getenv", 
                "pow", 
                "strlen", 
                "open64", 
                "__fprintf_chk", 
                "expm1", 
                "__sigsetjmp", 
                "hypot", 
                "__stack_chk_fail", 
                "calloc", 
                "sigdelset", 
                "frexp", 
                "strtod", 
                "fcntl", 
                "dlclose", 
                "__xstat64", 
                "rename", 
                "log1p", 
                "sigaltstack", 
                "__gmon_start__", 
                "mmap64", 
                "opendir", 
                "unlink", 
                "__vsnprintf_chk", 
                "log", 
                "fputs"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/NArith/_coq-native/NCoq_NArith_Ndec_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/NArith/.coq-native/NCoq_NArith_Ndec.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Arith_PeanoNat", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_curry2", 
                "camlNCoq_Arith_PeanoNat__x_leb_80_2773"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/extraction/_coq-native/NCoq_extraction_ExtrOcamlNatInt_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/extraction/.coq-native/NCoq_extraction_ExtrOcamlNatInt.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_Ring_polynom_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_Ring_polynom.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Classes_Morphisms", 
                "camlNCoq_Lists_List__const_NCoq_Lists_List_hd_2662", 
                "caml_apply6", 
                "caml_curry14", 
                "caml_curry8", 
                "caml_curry10", 
                "caml_call_gc", 
                "caml_curry20", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_pred_2786", 
                "caml_curry5", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Lists_List__const_NCoq_Lists_List_tl_2685", 
                "camlNCoq_Lists_List__const_NCoq_Lists_List_rev_append_3168", 
                "caml_curry2", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_snd_3023", 
                "camlNativevalues__is_accu_5182", 
                "caml_apply4", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_apply3", 
                "camlNativecode__get_const_6301", 
                "caml_curry12", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Numbers_BinNums", 
                "caml_curry19", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_pow_pos_2687", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_curry13", 
                "caml_curry17", 
                "caml_curry4", 
                "caml_apply2", 
                "caml_apply11", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_apply5", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_ZArith_BinInt", 
                "camlNativecode__get_name_6297", 
                "caml_curry3", 
                "camlNCoq_PArith_BinPos__x_add_67_2739", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_curry16", 
                "camlNCoq_ZArith_BinInt__x_pos_sub_42_2722", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_sub_2974", 
                "camlNCoq_PArith_BinPos", 
                "camlNativevalues__str_decode_5828", 
                "caml_curry7", 
                "camlNCoq_PArith_BinPos__x_pred_double_137_2778", 
                "caml_curry11", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_add_2702", 
                "caml_curry15", 
                "camlNativecode__get_sort_6293", 
                "caml_curry6", 
                "camlNCoq_setoid_ring_BinList__const_NCoq_setoid_ring_BinList_jump_2682", 
                "caml_young_limit", 
                "camlNativecode__get_ind_6309", 
                "camlCamlinternalLazy__force_lazy_block_1264"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/romega/romega_plugin_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/romega/romega_plugin.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNametab__dirpath_of_global_6216", 
                "camlLogic__catchable_exception_4969", 
                "camlTacenv__register_ltac_5535", 
                "camlList__map_1248", 
                "camlNametab__basename_of_global_6218", 
                "camlOmega_plugin__Omega__display_eq_1306", 
                "camlProofview", 
                "camlNames__of_string_1937", 
                "camlList__length_aux_1204", 
                "camlPervasives", 
                "caml_raise_exn", 
                "caml_string_equal", 
                "camlTactics__apply_14849", 
                "caml_exn_Assert_failure", 
                "camlGlobnames__destConstructRef_4282", 
                "camlPp__glue_1211", 
                "camlNames__make2_3096", 
                "camlCoqlib__find_reference_5296", 
                "camlHashtbl", 
                "caml_alloc2", 
                "camlEvd__find_6390", 
                "__cxa_finalize", 
                "camlProofview__tactic_6596", 
                "camlTactics__generalize_21015", 
                "camlRefiner__pf_env_2311", 
                "camlGlobal__is_polymorphic_5342", 
                "camlPervasives__print_newline_1312", 
                "camlCoqlib__gen_reference_in_modules_5387", 
                "camlTacmach", 
                "camlTacmach__pf_hyps_types_2812", 
                "camlPp__6", 
                "camlHashtbl__find_1416", 
                "camlCList__assoc_f_2392", 
                "camlList__fold_right_1292", 
                "camlCList__merge_uniq_2190", 
                "caml_ml_flush", 
                "camlCList__uniquize_sorted_2163", 
                "camlCList__append_1547", 
                "camlConstr__18", 
                "camlConstrarg", 
                "camlOmega_plugin__Omega__map_eq_linear_1423", 
                "camlHashtbl__add_1391", 
                "__gmon_start__", 
                "caml_exn_Invalid_argument", 
                "camlOmega_plugin__Omega__65", 
                "camlList__1", 
                "camlUniv", 
                "camlList__rev_append_1236", 
                "camlCoqlib__24", 
                "camlNameops__10", 
                "camlConstr", 
                "camlMltop__declare_cache_obj_3915", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlTacinterp__cast_10828", 
                "caml_exn_Failure", 
                "caml_c_call", 
                "camlBigint__equal_1495", 
                "camlNames", 
                "camlCList__union_1666", 
                "camlOmega_plugin__Omega__simplify_strong_2088", 
                "camlProofview__of_tactic_6689", 
                "camlTacinterp__eval_tactic_15916", 
                "camlConstr__eq_constr_5406", 
                "camlFeedback", 
                "caml_modify", 
                "camlTactics__change_concl_12672", 
                "camlList__mem_1371", 
                "caml_make_array", 
                "camlPervasives__failwith_1005", 
                "camlPervasives__$5e_1117", 
                "camlOmega_plugin__Omega__display_action_1361", 
                "camlTacentries__add_ml_tactic_notation_8862", 
                "camlOmega_plugin__Omega__67", 
                "camlString__concat_1300", 
                "camlOmega_plugin__Omega__MakeOmegaSolver_1217", 
                "camlBigint__mult_1459", 
                "_ITM_registerTMCloneTable", 
                "camlCList__uniquize_2002", 
                "camlPrintf__sprintf_1315", 
                "camlCoqlib__check_required_library_5404", 
                "camlTacticals", 
                "camlCString__mem_2093", 
                "camlCoqlib", 
                "camlList__stable_sort_1482", 
                "caml_int_compare", 
                "camlTactics", 
                "caml_young_ptr", 
                "camlHashtbl__iter_1474", 
                "camlMltop__add_known_module_3856", 
                "camlTacenv__register_ml_tactic_inner_5972", 
                "camlOmega_plugin__Omega__floor_div_1264", 
                "camlHashtbl__create_inner_2188", 
                "camlTerm__decompose_app_4826", 
                "camlCList__map_filter_2233", 
                "camlNames__of_string_soft_1940", 
                "camlBigint__is_strictly_pos_1489", 
                "camlUniverses__constr_of_global_6604", 
                "camlString", 
                "caml_allocN", 
                "camlOmega_plugin__Omega__66", 
                "camlPp__3", 
                "camlConstr__mkApp_4803", 
                "camlCErrors__error_1336", 
                "camlBytes__copy_1226", 
                "camlCoqlib__40", 
                "camlList__iter_1272", 
                "camlProofview__tclPROGRESS_6145", 
                "caml_equal", 
                "camlPp__str_1375", 
                "caml_call_gc", 
                "camlPervasives__output_string_1213", 
                "camlList__2", 
                "caml_exn_Not_found", 
                "camlLoc__3", 
                "caml_fresh_oo_id", 
                "camlBigint__add_1453", 
                "camlTacticals__tclREPEAT0_6798", 
                "camlUniv__of_array_6492", 
                "camlBigint__neg_1468", 
                "camlUtil", 
                "camlBigint__euclid_1462", 
                "camlCList__cartesian_2411", 
                "camlUniverses", 
                "camlGlobal__current_dirpath_5363", 
                "camlBigint", 
                "camlList__nth_1219", 
                "caml_young_limit", 
                "camlRefiner__goal_goal_list_2436", 
                "_ITM_deregisterTMCloneTable", 
                "camlTacenv", 
                "caml_backtrace_pos", 
                "camlPervasives__string_of_int_1150", 
                "camlPrinter__pr_lconstr_5526", 
                "camlBigint__to_string_1472", 
                "camlCList__except_1926", 
                "camlTacticals__tclTHENLIST_6759", 
                "camlPervasives__$40_1166", 
                "camlCList__map_1515", 
                "camlPrintf__fprintf_1294", 
                "camlTerm", 
                "camlArray__of_list_1294", 
                "camlRefiner__tclTHEN_2824", 
                "camlCList__index_f_1789", 
                "camlList__merge_1468", 
                "camlCErrors__noncritical_1426"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Cyclic/DoubleCyclic/_coq-native/NCoq_Numbers_Cyclic_DoubleCyclic_DoubleSub_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Cyclic/DoubleCyclic/.coq-native/NCoq_Numbers_Cyclic_DoubleCyclic_DoubleSub.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativecode__get_match_6305", 
                "__cxa_finalize", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_call_gc", 
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativecode__get_const_6301", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Init/_coq-native/NCoq_Init_Prelude_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Init/.coq-native/NCoq_Init_Prelude.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Wellfounded/_coq-native/NCoq_Wellfounded_Inclusion_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Wellfounded/.coq-native/NCoq_Wellfounded_Inclusion.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_const_6301"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zlogarithm_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zlogarithm.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_allocN", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_le_4426", 
                "caml_alloc3", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_ZArith_Zpower__const_NCoq_ZArith_Zpower_two_p_2753", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Logic", 
                "camlNativecode__get_value_6218", 
                "caml_curry2", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_apply2", 
                "caml_young_limit", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lt_4420", 
                "camlNativecode__get_name_6297", 
                "caml_apply3", 
                "camlNCoq_ZArith_BinInt", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_match_6305"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Compat/_coq-native/NCoq_Compat_Coq85_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Compat/.coq-native/NCoq_Compat_Coq85.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_Epsilon_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_Epsilon.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_unique_3379", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_proj2_sig_2816", 
                "_ITM_registerTMCloneTable", 
                "caml_young_limit", 
                "camlNativevalues__str_decode_5828", 
                "__gmon_start__", 
                "camlNativecode__get_name_6297", 
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable", 
                "caml_call_gc", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_proj1_sig_2802", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__mk_prod_accu_5119"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/NatInt/_coq-native/NCoq_Numbers_NatInt_NZAdd_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/NatInt/.coq-native/NCoq_Numbers_NatInt_NZAdd.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Finite_sets_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Finite_sets.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Sets_Ensembles__const_NCoq_Sets_Ensembles_Ensemble_2654", 
                "camlNativevalues__str_decode_5828", 
                "caml_call_gc", 
                "caml_curry6", 
                "caml_apply2", 
                "caml_apply3", 
                "camlNCoq_Init_Datatypes", 
                "caml_apply5", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_curry4", 
                "camlNativevalues__mk_ind_accu_4947", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_apply6", 
                "camlNativecode__get_const_6301", 
                "caml_curry2", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_young_limit", 
                "caml_curry5", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_ind_6309", 
                "caml_curry7"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Cyclic/DoubleCyclic/_coq-native/NCoq_Numbers_Cyclic_DoubleCyclic_DoubleDiv_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Cyclic/DoubleCyclic/.coq-native/NCoq_Numbers_Cyclic_DoubleCyclic_DoubleDiv.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleAdd__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleAdd_ww_add_2879", 
                "camlNativevalues__str_decode_5828", 
                "__cxa_finalize", 
                "caml_call_gc", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__is_accu_5182", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType__x_word_67_2796", 
                "camlNativecode__get_value_6218", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_name_6297", 
                "camlNativecode__get_const_6301", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_young_limit", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleAdd__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleAdd_ww_add_c_cont_2826"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/MSets/_coq-native/NCoq_MSets_MSetAVL_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/MSets/.coq-native/NCoq_MSets_MSetAVL.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rtopology_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rtopology.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Reals_Raxioms__x_INR_12_2722", 
                "camlNativecode__get_name_6297", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Reals_RList__x_In_33_2743", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNCoq_Init_Logic", 
                "caml_call_gc", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rabs_2732", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_curry3", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Reals_RList", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301", 
                "caml_curry2", 
                "camlNCoq_Reals_RIneq__const_NCoq_Reals_RIneq_pos_2997", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "camlNCoq_Reals_RIneq", 
                "caml_young_limit", 
                "caml_apply3", 
                "caml_apply2", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rle_2695", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rminus_2701", 
                "camlNCoq_Init_Peano", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Reals_Raxioms"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/PArith/_coq-native/NCoq_PArith_BinPos_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/PArith/.coq-native/NCoq_PArith_BinPos.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "caml_alloc3", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_CompSpec2Type_3465", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_Init_Nat", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "camlNativecode__get_ind_6309", 
                "caml_curry8", 
                "caml_curry6", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_apply3", 
                "caml_young_limit", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_PER_2889", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "caml_apply4", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__is_accu_5182", 
                "caml_call_gc", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "caml_apply5", 
                "camlNCoq_Numbers_BinNums__const_NCoq_Numbers_BinNums_positive_rec_2710", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "caml_curry2", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_sumbool_rec_2969", 
                "caml_curry5", 
                "caml_allocN", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_equivalence_2978", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "caml_curry4", 
                "caml_apply10", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rect_2885", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "camlNativecode__get_value_6218", 
                "caml_curry7", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Classes_Morphisms", 
                "caml_apply2", 
                "camlNCoq_Numbers_BinNums", 
                "caml_curry3", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_apply8", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_rect_2887", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/PArith/_coq-native/NCoq_PArith_Pnat_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/PArith/.coq-native/NCoq_PArith_Pnat.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rtrigo_fun_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rtrigo_fun.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_SeqSeries_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_SeqSeries.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "camlNativecode__get_const_6301", 
                "__cxa_finalize", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_ClassicalChoice_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_ClassicalChoice.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_prod_accu_5119", 
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable", 
                "caml_young_limit", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "camlNativevalues__mk_constant_accu_4657"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/quote/_coq-native/NCoq_quote_Quote_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/quote/.coq-native/NCoq_quote_Quote.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativevalues__mk_fix_accu_5185", 
                "_ITM_registerTMCloneTable", 
                "caml_allocN", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_match_6305", 
                "__cxa_finalize", 
                "camlNativecode__get_const_6301", 
                "camlNativecode__get_name_6297", 
                "caml_call_gc", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__gmon_start__", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__is_accu_5182", 
                "_ITM_deregisterTMCloneTable", 
                "caml_young_limit"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/derive/derive_plugin_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/derive/derive_plugin.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlPervasives__failwith_1005", 
                "camlCErrors__error_1336", 
                "camlGenarg__obj_8005", 
                "camlConstr__mkSort_4771", 
                "camlProof_global__start_dependent_proof_5441", 
                "camlDeclare__declare_constant_6569", 
                "camlProofview__tclFOCUS_3694", 
                "__cxa_finalize", 
                "camlConstrintern__interp_type_evars_inner_13524", 
                "camlCList__iteri_1913", 
                "camlPre_env__push_named_5124", 
                "camlGlobal", 
                "camlMltop__add_known_module_3856", 
                "caml_alloc2", 
                "_ITM_registerTMCloneTable", 
                "caml_exn_Assert_failure", 
                "caml_backtrace_pos", 
                "caml_call_gc", 
                "caml_young_limit", 
                "camlEgramml__extend_vernac_command_grammar_3774", 
                "camlGlobal__assert_not_parsing_3775", 
                "camlEvd__new_sort_variable_7332", 
                "camlVernac_classifier__declare_vernac_classifier_1468", 
                "camlConstr__mkConst_4816", 
                "_ITM_deregisterTMCloneTable", 
                "camlLoc__3", 
                "camlVernacinterp__vinterp_add_1903", 
                "camlEvd__from_env_7032", 
                "camlGenarg__out_gen_5922", 
                "camlEvd__30", 
                "camlProof__run_tactic_2711", 
                "camlFuture__chain_inner_3068", 
                "camlPcoq", 
                "camlProofview", 
                "caml_raise_exn", 
                "caml_allocN", 
                "camlVars__replace_vars_4114", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Image_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Image.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativecode__get_match_6305", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_ind_6309", 
                "camlNativecode__get_const_6301", 
                "__cxa_finalize", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_constant_accu_4657", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "caml_young_limit", 
                "caml_call_gc", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativecode__get_name_6297"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/omega/_coq-native/NCoq_omega_OmegaTactic_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/omega/.coq-native/NCoq_omega_OmegaTactic.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Alembert_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Alembert.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_curry6", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rabs_2732", 
                "camlNCoq_Reals_DiscrR", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rdiv_2704", 
                "camlNCoq_Reals_PartSum", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751", 
                "camlNCoq_Reals_Rpow_def__x_pow_10_2677", 
                "camlNCoq_Reals_Raxioms", 
                "camlNCoq_Reals_Rseries__const_NCoq_Reals_Rseries_EUn_2681", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_Reals_Raxioms__x_INR_12_2722", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_curry2", 
                "camlNCoq_Reals_Rseries", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "caml_young_limit", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_setoid_ring_RealField", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_of_nat_4068", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "caml_apply5", 
                "camlNCoq_Init_Nat", 
                "caml_curry7", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Reals_Rfunctions", 
                "caml_curry5", 
                "caml_curry3", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Reals_Rbasic_fun", 
                "camlNCoq_Arith_Compare_dec__const_NCoq_Arith_Compare_dec_lt_eq_lt_dec_2692", 
                "camlNCoq_setoid_ring_ArithRing", 
                "camlNCoq_Init_Peano", 
                "camlNCoq_Arith_PeanoNat", 
                "camlNativecode__get_name_6297", 
                "caml_curry4", 
                "camlNCoq_Reals_Rseries__const_NCoq_Reals_Rseries_Un_cv_2685", 
                "camlNCoq_Reals_ArithProp", 
                "caml_apply6", 
                "camlNCoq_Reals_Rdefinitions", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Init_Nat__x_sub_45_2728", 
                "camlNCoq_Reals_Raxioms__const_NCoq_Reals_Raxioms_IZR_2729", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_sym_2912", 
                "caml_apply3", 
                "camlNCoq_Init_Logic", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Arith_PeanoNat__x_max_119_2827", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_ex_ind_2830", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNCoq_setoid_ring_Ring_tac", 
                "camlNCoq_Reals_Rseries__const_NCoq_Reals_Rseries_Pser_2742", 
                "camlNCoq_Reals_RIneq", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rminus_2701", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rle_2695", 
                "camlNCoq_Reals_Raxioms__const_NCoq_Reals_Raxioms_is_upper_bound_2734", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_and_ind_2720", 
                "caml_apply2", 
                "camlNCoq_Reals_Rfunctions__x_sum_f_R0_41_2802", 
                "caml_apply7", 
                "caml_call_gc", 
                "caml_apply4"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Cyclic/DoubleCyclic/_coq-native/NCoq_Numbers_Cyclic_DoubleCyclic_DoubleType_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Cyclic/DoubleCyclic/.coq-native/NCoq_Numbers_Cyclic_DoubleCyclic_DoubleType.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_alloc3", 
                "caml_young_limit", 
                "caml_curry3", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_mul_2790", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_pow_2805", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_value_6218", 
                "camlNativecode__get_match_6305", 
                "camlNativecode__get_ind_6309", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_curry4", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Init_Datatypes", 
                "caml_curry2", 
                "camlNativevalues__mk_ind_accu_4947", 
                "caml_call_gc", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_name_6297", 
                "caml_apply2"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zmisc_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zmisc.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_constant_accu_4657"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Cyclic/DoubleCyclic/_coq-native/NCoq_Numbers_Cyclic_DoubleCyclic_DoubleSqrt_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Cyclic/DoubleCyclic/.coq-native/NCoq_Numbers_Cyclic_DoubleCyclic_DoubleSqrt.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_match_6305", 
                "__gmon_start__", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlNativecode__get_const_6301"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/SpecViaZ/_coq-native/NCoq_Numbers_Natural_SpecViaZ_NSigNAxioms_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/SpecViaZ/.coq-native/NCoq_Numbers_Natural_SpecViaZ_NSigNAxioms.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Classes/_coq-native/NCoq_Classes_Morphisms_Relations_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Classes/.coq-native/NCoq_Classes_Morphisms_Relations.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Ranalysis_reg_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Ranalysis_reg.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_constant_accu_4657"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sorting/_coq-native/NCoq_Sorting_Mergesort_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Sorting/.coq-native/NCoq_Sorting_Mergesort.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "caml_alloc3", 
                "camlNCoq_Sorting_Sorted", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828", 
                "caml_call_gc", 
                "camlNativecode__get_match_6305", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_name_6297", 
                "__gmon_start__", 
                "camlNativevalues__is_accu_5182", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Init_Logic", 
                "__cxa_finalize", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_app_3138", 
                "_ITM_registerTMCloneTable", 
                "caml_allocN", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativecode__get_value_6218", 
                "caml_alloc1"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rsqrt_def_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rsqrt_def.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_call_gc", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_curry4", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNativecode__get_const_6301", 
                "caml_curry3", 
                "caml_curry6", 
                "camlNCoq_Init_Datatypes", 
                "camlNativecode__get_match_6305", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Reals_Rpow_def__x_pow_10_2677", 
                "camlNCoq_Reals_RIneq__const_NCoq_Reals_RIneq_nonneg_2976", 
                "caml_apply2", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_young_limit", 
                "camlNCoq_Reals_RIneq", 
                "caml_apply4", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Reals_RIneq__const_NCoq_Reals_RIneq_cond_nonneg_2984", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rdiv_2704", 
                "camlNativevalues__is_accu_5182", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_allocN", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_Ncring_tac_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_Ncring_tac.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_const_6301", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__gmon_start__", 
                "camlNativevalues__mk_ind_accu_4947", 
                "caml_call_gc"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/micromega/_coq-native/NCoq_micromega_Tauto_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/micromega/.coq-native/NCoq_micromega_Tauto.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "caml_call_gc", 
                "camlNativevalues__mk_ind_accu_4947", 
                "caml_curry5", 
                "caml_apply2", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_curry8", 
                "camlNativevalues__str_decode_5828", 
                "caml_apply3", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Lists_List__const_NCoq_Lists_List_fold_right_3427", 
                "caml_curry4", 
                "camlNativecode__get_name_6297", 
                "caml_curry7", 
                "caml_apply4", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_curry3", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_alloc3", 
                "caml_curry2", 
                "camlNCoq_micromega_Refl__x_make_conj_44_2776", 
                "camlNativecode__get_ind_6309", 
                "caml_curry10", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_micromega_Refl", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "caml_young_limit", 
                "camlNativecode__get_match_6305", 
                "camlNativecode__get_const_6301", 
                "caml_curry11", 
                "camlNativevalues__mk_sort_accu_4950", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_curry6", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_app_3138"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_Min_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_Min.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Arith_PeanoNat", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Structures/_coq-native/NCoq_Structures_EqualitiesFacts_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Structures/.coq-native/NCoq_Structures_EqualitiesFacts.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_ZArith_dec_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_ZArith_dec.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_eq_dec_4548", 
                "caml_call_gc", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_comparison_rec_3168", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lt_4420", 
                "camlNCoq_Init_Datatypes", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_sym_2912", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_const_6301", 
                "camlNativecode__get_match_6305", 
                "caml_curry5", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "caml_curry3", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_gt_4423", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_rec_2685", 
                "camlNCoq_Init_Logic", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_sumbool_rec_2969", 
                "camlNativevalues__str_decode_5828", 
                "caml_apply11", 
                "caml_apply4", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "caml_apply5", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_compare_2865", 
                "caml_young_limit", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_Init_Specif", 
                "camlNativecode__get_value_6218", 
                "caml_apply3", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_le_4426", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751", 
                "camlNCoq_Classes_Morphisms_Prop", 
                "camlNCoq_Classes_Morphisms", 
                "caml_curry6", 
                "caml_apply8", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_ge_4429", 
                "caml_curry2", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_and_ind_2720", 
                "camlNCoq_Program_Basics", 
                "caml_curry4", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_ZArith_BinInt"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/NArith/_coq-native/NCoq_NArith_Ndiv_def_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/NArith/.coq-native/NCoq_NArith_Ndiv_def.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_NArith_BinNat__x_pos_div_eucl_194_3842", 
                "camlNCoq_NArith_BinNat", 
                "caml_young_limit", 
                "caml_call_gc", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Abstract/_coq-native/NCoq_Numbers_Natural_Abstract_NLog_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Abstract/.coq-native/NCoq_Numbers_Natural_Abstract_NLog.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_SplitRmult_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_SplitRmult.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Compat/_coq-native/NCoq_Compat_Coq84_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Compat/.coq-native/NCoq_Compat_Coq84.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "__cxa_finalize", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rfunctions_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rfunctions.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativecode__get_match_6305", 
                "caml_young_limit", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Nat", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rminus_2701", 
                "camlNCoq_Init_Peano", 
                "__cxa_finalize", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__str_decode_5828", 
                "caml_alloc3", 
                "camlNCoq_Init_Nat__x_sub_45_2728", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "_ITM_deregisterTMCloneTable", 
                "caml_call_gc", 
                "camlNCoq_Reals_Rpow_def__x_pow_10_2677", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rabs_2732", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Reals_Rdefinitions", 
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_to_nat_3949", 
                "__gmon_start__", 
                "camlNativevalues__mk_prod_accu_5119"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/Abstract/_coq-native/NCoq_Numbers_Integer_Abstract_ZMul_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/Abstract/.coq-native/NCoq_Numbers_Integer_Abstract_ZMul.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Wellfounded/_coq-native/NCoq_Wellfounded_Transitive_Closure_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Wellfounded/.coq-native/NCoq_Wellfounded_Transitive_Closure.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "camlNCoq_Init_Wf", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Relations_Relation_Operators__const_NCoq_Relations_Relation_Operators_clos_trans_ind_2717", 
                "__gmon_start__", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Wf__const_NCoq_Init_Wf_Acc_ind_2709", 
                "camlNCoq_Init_Wf__const_NCoq_Init_Wf_Acc_inv_2730", 
                "caml_call_gc", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__str_decode_5828", 
                "caml_young_limit", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Relations_Relation_Operators"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/QArith/_coq-native/NCoq_QArith_QArith_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/QArith/.coq-native/NCoq_QArith_QArith.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Program/_coq-native/NCoq_Program_Combinators_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Program/.coq-native/NCoq_Program_Combinators.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/MSets/_coq-native/NCoq_MSets_MSetEqProperties_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/MSets/.coq-native/NCoq_MSets_MSetEqProperties.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/nsatz/_coq-native/NCoq_nsatz_Nsatz_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/nsatz/.coq-native/NCoq_nsatz_Nsatz.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_NArith_BinNat", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_mul_1_l_3093", 
                "camlNCoq_ZArith_BinInt", 
                "caml_allocN", 
                "camlNCoq_QArith_QArith_base", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_setoid_ring_InitialRing", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_Lists_List__const_NCoq_Lists_List_nth_2884", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_sub_def_3280", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_add_0_l_2982", 
                "camlNCoq_Lists_List__const_NCoq_Lists_List_map_3324", 
                "camlNCoq_Init_Nat__const_NCoq_Init_Nat_pred_2665", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_add_comm_3019", 
                "camlNCoq_setoid_ring_InitialRing__const_NCoq_setoid_ring_InitialRing_gen_phiZ_2884", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_to_nat_4062", 
                "camlNCoq_Reals_RIneq", 
                "camlNCoq_setoid_ring_Ring_polynom__const_NCoq_setoid_ring_Ring_polynom_Pphi_4739", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_Symmetric_2974", 
                "caml_alloc1", 
                "camlNCoq_ZArith_Zbool", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_of_nat_4068", 
                "camlNCoq_setoid_ring_Ring_polynom__const_NCoq_setoid_ring_Ring_polynom_Pmul_3900", 
                "camlNCoq_setoid_ring_Integral_domain", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_setoid_ring_Ring_polynom", 
                "caml_call_gc", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Reals_Raxioms", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_add_assoc_3057", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_to_nat_3949", 
                "__gmon_start__", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_opp_def_3316", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_setoid_ring_Ring_polynom__const_NCoq_setoid_ring_Ring_polynom_norm_aux_5298", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_mul_assoc_3167", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_pow_N_2736", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_sw_accu_5114", 
                "__cxa_finalize", 
                "camlNCoq_setoid_ring_Ring_polynom__const_NCoq_setoid_ring_Ring_polynom_PEeval_5123", 
                "caml_alloc3", 
                "caml_young_limit", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_distr_l_3205", 
                "camlNCoq_setoid_ring_Ring_polynom__const_NCoq_setoid_ring_Ring_polynom_Padd_3564", 
                "camlNativevalues__mk_fix_accu_5185"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/QArith/_coq-native/NCoq_QArith_Qabs_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/QArith/.coq-native/NCoq_QArith_Qabs.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qopp_2754", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_QArith_QArith_base", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_match_6305", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_Classes_Morphisms", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qle_2682", 
                "caml_call_gc", 
                "caml_young_limit", 
                "caml_alloc1", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_abs_3148", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Relations_1_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Relations_1.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_match_6305", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_curry3", 
                "camlNativecode__get_ind_6309", 
                "camlNativecode__get_sort_6293", 
                "caml_curry5", 
                "caml_apply2", 
                "caml_call_gc", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_ind_accu_4947", 
                "caml_curry2", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_sort_accu_4950", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_young_limit", 
                "caml_curry4"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_Minus_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_Minus.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/bin/coqtop": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/coqtop", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__recvfrom_chk", 
                "pthread_cond_signal", 
                "fmod", 
                "putenv", 
                "listen", 
                "select", 
                "rename", 
                "__stack_chk_fail", 
                "getprotobyname", 
                "fputc", 
                "__vsnprintf_chk", 
                "sigwait", 
                "accept4", 
                "strcmp", 
                "pthread_mutex_init", 
                "pthread_cond_destroy", 
                "tcdrain", 
                "setuid", 
                "frexp", 
                "fork", 
                "access", 
                "getaddrinfo", 
                "sigaddset", 
                "pthread_cond_broadcast", 
                "__libc_start_main", 
                "sigemptyset", 
                "getgrnam", 
                "cfsetispeed", 
                "nice", 
                "link", 
                "chown", 
                "log", 
                "fflush", 
                "system", 
                "memcmp", 
                "__fdelt_chk", 
                "setsockopt", 
                "fchown", 
                "__isoc99_sscanf", 
                "__snprintf_chk", 
                "getitimer", 
                "log10", 
                "realloc", 
                "__lxstat64", 
                "sigprocmask", 
                "exp", 
                "memcpy", 
                "close", 
                "__memmove_chk", 
                "getpid", 
                "mmap64", 
                "execve", 
                "__fxstat64", 
                "tcflush", 
                "rewinddir", 
                "calloc", 
                "pthread_join", 
                "initgroups", 
                "tcgetattr", 
                "pipe2", 
                "cfgetospeed", 
                "getprotobynumber", 
                "gettimeofday", 
                "__read_chk", 
                "utimes", 
                "tcsetattr", 
                "fcntl", 
                "sigfillset", 
                "fwrite", 
                "read", 
                "waitpid", 
                "sigaltstack", 
                "getgrgid", 
                "inet_pton", 
                "__fprintf_chk", 
                "strlen", 
                "strtod", 
                "gmtime", 
                "pthread_attr_setdetachstate", 
                "acos", 
                "dlopen", 
                "pthread_create", 
                "getsockopt", 
                "gethostbyname_r", 
                "wait", 
                "socket", 
                "tcflow", 
                "cosh", 
                "__gmon_start__", 
                "pthread_mutex_trylock", 
                "memmove", 
                "pthread_getspecific", 
                "ftruncate64", 
                "dup3", 
                "open64", 
                "write", 
                "sigpending", 
                "cfgetispeed", 
                "closedir", 
                "pthread_attr_init", 
                "sendto", 
                "lseek64", 
                "fchmod", 
                "kill", 
                "truncate64", 
                "getuid", 
                "log1p", 
                "atan2", 
                "getrusage", 
                "chdir", 
                "tcsendbreak", 
                "gethostbyaddr_r", 
                "getrlimit64", 
                "exit", 
                "__memcpy_chk", 
                "freeaddrinfo", 
                "pthread_mutex_destroy", 
                "pthread_key_create", 
                "tanh", 
                "setsid", 
                "pthread_setspecific", 
                "socketpair", 
                "getservbyport", 
                "sinh", 
                "getlogin", 
                "getsockname", 
                "__longjmp_chk", 
                "time", 
                "pthread_exit", 
                "getenv", 
                "readlink", 
                "unlink", 
                "sigismember", 
                "modf", 
                "abort", 
                "pthread_mutex_unlock", 
                "pthread_cond_init", 
                "dlclose", 
                "symlink", 
                "__recv_chk", 
                "ldexp", 
                "hypot", 
                "getpwnam", 
                "opendir", 
                "shutdown", 
                "sigaction", 
                "mktime", 
                "munmap", 
                "execv", 
                "bind", 
                "getgroups", 
                "setitimer", 
                "dlsym", 
                "alarm", 
                "pthread_cond_wait", 
                "umask", 
                "send", 
                "expm1", 
                "ceil", 
                "chmod", 
                "execvp", 
                "__xstat64", 
                "sigdelset", 
                "getgid", 
                "localtime", 
                "getpeername", 
                "geteuid", 
                "inet_ntop", 
                "getnameinfo", 
                "sigsuspend", 
                "getegid", 
                "mkfifo", 
                "sin", 
                "pthread_sigmask", 
                "getppid", 
                "dlerror", 
                "cos", 
                "__register_atfork", 
                "sqrt", 
                "nanosleep", 
                "__errno_location", 
                "chroot", 
                "atan", 
                "secure_getenv", 
                "gethostname", 
                "setgid", 
                "getpwuid", 
                "malloc", 
                "isatty", 
                "tan", 
                "__sigsetjmp", 
                "strtol", 
                "fputs", 
                "fmin", 
                "readdir64", 
                "connect", 
                "free", 
                "strerror", 
                "pow", 
                "memset", 
                "strnlen", 
                "getcwd", 
                "asin", 
                "setgroups", 
                "mkdir", 
                "floor", 
                "getservbyname", 
                "cfsetospeed"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_Classical_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_Classical.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/funind/_coq-native/NCoq_funind_FunInd_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/funind/.coq-native/NCoq_funind_FunInd.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/syntax/z_syntax_plugin_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/syntax/z_syntax_plugin.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "caml_alloc2", 
                "_ITM_deregisterTMCloneTable", 
                "camlBigint__equal_1495", 
                "camlNotation__declare_numeral_interpreter_6269", 
                "caml_fresh_oo_id", 
                "camlGlobnames__eq_gr_4115", 
                "caml_raise_exn", 
                "_ITM_registerTMCloneTable", 
                "camlPp__str_1375", 
                "camlList__rev_map_1264", 
                "camlBigint__add_1453", 
                "camlCErrors__user_err_loc_1346", 
                "camlBigint__neg_1468", 
                "camlMltop__add_known_module_3856", 
                "camlNames", 
                "camlBigint__is_strictly_pos_1489", 
                "caml_allocN", 
                "__gmon_start__", 
                "camlGlobnames__encode_mind_4786", 
                "camlBigint", 
                "caml_young_limit", 
                "camlNames__of_string_1937", 
                "__cxa_finalize", 
                "caml_backtrace_pos", 
                "camlBigint__div2_with_rest_1483", 
                "camlLoc__3"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Vectors/_coq-native/NCoq_Vectors_VectorDef_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Vectors/.coq-native/NCoq_Vectors_VectorDef.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Init_Nat", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_rect_2887", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_curry9", 
                "camlNCoq_Init_Datatypes", 
                "caml_young_limit", 
                "camlNativevalues__is_accu_5182", 
                "caml_apply8", 
                "camlNCoq_Vectors_Fin", 
                "caml_curry2", 
                "caml_curry8", 
                "camlNativevalues__str_decode_5828", 
                "caml_curry7", 
                "caml_apply6", 
                "caml_apply7", 
                "caml_curry10", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_rect_r_2969", 
                "camlNCoq_Arith_Plus__x_tail_plus_35_2786", 
                "caml_curry6", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Init_Nat__x_sub_45_2728", 
                "camlNCoq_Arith_Plus", 
                "camlNativecode__get_match_6305", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_Init_Peano", 
                "camlNCoq_Init_Logic", 
                "caml_curry3", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_length_3112", 
                "caml_apply2", 
                "caml_curry4", 
                "camlNCoq_Arith_PeanoNat", 
                "camlNCoq_Arith_Gt", 
                "caml_apply4", 
                "camlNCoq_Arith_Minus", 
                "camlNCoq_Init_Peano__const_NCoq_Init_Peano_lt_2785", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_apply5", 
                "caml_alloc3", 
                "caml_curry5", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rect_2885", 
                "camlNCoq_Vectors_Fin__x_of_nat_lt_259_3075", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_rect_2680"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Powerset_Classical_facts_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Powerset_Classical_facts.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/QArith/_coq-native/NCoq_QArith_Qround_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/QArith/.coq-native/NCoq_QArith_Qround.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qopp_2754", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_div_3330", 
                "caml_young_limit", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Logic", 
                "camlNativecode__get_match_6305", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_QArith_QArith_base", 
                "camlNCoq_Classes_Morphisms", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "caml_apply4", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_opp_2764", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_alloc1", 
                "camlNativevalues__mk_sw_accu_5114"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Bool/_coq-native/NCoq_Bool_Sumbool_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Bool/.coq-native/NCoq_Bool_Sumbool.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Init_Datatypes", 
                "caml_call_gc", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_sumbool_rec_2969", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Logic", 
                "caml_apply2", 
                "caml_curry5", 
                "camlNativevalues__mk_sort_accu_4950", 
                "caml_young_limit", 
                "caml_curry3", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Specif", 
                "camlNativecode__get_value_6218", 
                "camlNativevalues__mk_prod_accu_5119", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_apply3", 
                "caml_curry6"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/Abstract/_coq-native/NCoq_Numbers_Integer_Abstract_ZMulOrder_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/Abstract/.coq-native/NCoq_Numbers_Integer_Abstract_ZMulOrder.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Abstract/_coq-native/NCoq_Numbers_Natural_Abstract_NLcm_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Abstract/.coq-native/NCoq_Numbers_Natural_Abstract_NLcm.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Cyclic/DoubleCyclic/_coq-native/NCoq_Numbers_Cyclic_DoubleCyclic_DoubleDivn1_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Cyclic/DoubleCyclic/.coq-native/NCoq_Numbers_Cyclic_DoubleCyclic_DoubleDivn1.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_young_limit", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_snd_3023", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828", 
                "caml_curry2", 
                "camlNativecode__get_name_6297", 
                "caml_curry6", 
                "caml_curry12", 
                "caml_apply2", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_curry4", 
                "caml_apply4", 
                "caml_curry5", 
                "caml_curry9", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_call_gc", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleBase__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleBase_double_0_2827", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleBase__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleBase_double_split_2849", 
                "caml_curry7", 
                "caml_curry8", 
                "caml_apply3", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_curry3", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleBase__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleBase_double_WW_2737", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType__x_word_67_2796", 
                "caml_curry11", 
                "camlNativevalues__mk_sw_accu_5114"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_Ncring_polynom_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_Ncring_polynom.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_PArith_BinPos__x_add_67_2739", 
                "caml_apply6", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_curry14", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativecode__get_const_6301", 
                "caml_curry10", 
                "camlNativecode__get_match_6305", 
                "caml_apply4", 
                "caml_curry3", 
                "camlNCoq_ZArith_BinInt__x_pos_sub_42_2722", 
                "caml_curry13", 
                "caml_apply2", 
                "caml_curry18", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativevalues__is_accu_5182", 
                "caml_curry8", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_call_gc", 
                "caml_young_limit", 
                "caml_curry6", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_curry21", 
                "camlNCoq_setoid_ring_BinList__const_NCoq_setoid_ring_BinList_nth_2713", 
                "camlNativecode__get_ind_6309", 
                "caml_alloc3", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_pow_pos_3375", 
                "camlNCoq_Init_Datatypes", 
                "caml_curry15", 
                "caml_curry4", 
                "caml_apply3", 
                "caml_curry5", 
                "caml_curry20", 
                "camlNCoq_ZArith_BinInt", 
                "camlNCoq_PArith_BinPos", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_curry12", 
                "caml_curry17", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_setoid_ring_Ring_polynom", 
                "caml_curry11", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_pow_N_3405", 
                "caml_curry9", 
                "caml_curry16", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Logic"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rfunctions_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rfunctions.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Reals_Rdefinitions", 
                "camlNCoq_Init_Nat__x_sub_45_2728", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Peano", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_curry2", 
                "caml_alloc3", 
                "caml_call_gc", 
                "camlNCoq_Init_Nat", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_to_nat_3949", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Reals_Rpow_def__x_pow_10_2677", 
                "caml_apply2", 
                "caml_young_limit", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rminus_2701", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_const_6301", 
                "caml_curry3", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rtrigo_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rtrigo.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_ChoiceFacts_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_ChoiceFacts.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_unique_3379", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_prod_accu_5119", 
                "__cxa_finalize", 
                "caml_call_gc", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_subrelation_3371", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_young_limit", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_name_6297", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_constant_accu_4657", 
                "__gmon_start__", 
                "camlNCoq_Init_Specif", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Structures/_coq-native/NCoq_Structures_EqualitiesFacts_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Structures/.coq-native/NCoq_Structures_EqualitiesFacts.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Abstract/_coq-native/NCoq_Numbers_Natural_Abstract_NSqrt_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Abstract/.coq-native/NCoq_Numbers_Natural_Abstract_NSqrt.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize", 
                "camlNativevalues__str_decode_5828", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Relations_3_facts_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Relations_3_facts.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Relations/_coq-native/NCoq_Relations_Relations_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Relations/.coq-native/NCoq_Relations_Relations.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Init/_coq-native/NCoq_Init_Tactics_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Init/.coq-native/NCoq_Init_Tactics.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_const_6301"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Ensembles_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Ensembles.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_curry7", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_curry8", 
                "caml_curry2", 
                "caml_curry4", 
                "caml_call_gc", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativevalues__mk_ind_accu_4947", 
                "caml_apply3", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Logic", 
                "caml_young_limit", 
                "caml_curry5", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__mk_sw_accu_5114", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_curry3", 
                "caml_apply2", 
                "camlNativecode__get_sort_6293", 
                "caml_curry10", 
                "camlNativecode__get_const_6301", 
                "camlNativecode__get_name_6297"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Cyclic/DoubleCyclic/_coq-native/NCoq_Numbers_Cyclic_DoubleCyclic_DoubleSqrt_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Cyclic/DoubleCyclic/.coq-native/NCoq_Numbers_Cyclic_DoubleCyclic_DoubleSqrt.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_curry21", 
                "caml_curry13", 
                "camlNCoq_Init_Datatypes", 
                "caml_curry17", 
                "caml_curry26", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType", 
                "caml_apply2", 
                "caml_call_gc", 
                "camlNativecode__get_const_6301", 
                "caml_curry4", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_curry3", 
                "caml_curry11", 
                "caml_curry14", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_curry5", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__str_decode_5828", 
                "caml_young_limit", 
                "caml_curry25", 
                "caml_curry24", 
                "caml_apply3", 
                "caml_curry15", 
                "caml_curry7", 
                "caml_curry10", 
                "caml_curry2", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_curry16"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_ClassicalUniqueChoice_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_ClassicalUniqueChoice.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FMapFacts_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FMapFacts.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rsigma_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rsigma.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "caml_young_limit", 
                "camlNCoq_Init_Nat__x_sub_45_2728", 
                "__cxa_finalize", 
                "camlNativecode__get_const_6301", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_call_gc", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Reals_Rfunctions__x_sum_f_R0_41_2802", 
                "camlNCoq_Init_Nat__x_add_15_2689"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/NatInt/_coq-native/NCoq_Numbers_NatInt_NZBase_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/NatInt/.coq-native/NCoq_Numbers_NatInt_NZBase.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zminmax_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zminmax.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_ROrderedType_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_ROrderedType.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_curry3", 
                "caml_apply3", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_equivalence_2978", 
                "caml_apply2", 
                "caml_alloc1", 
                "camlNCoq_Init_Datatypes", 
                "caml_young_limit", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "caml_curry2", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_sym_2912", 
                "caml_curry5", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Reals_Raxioms", 
                "camlNativevalues__mk_sort_accu_4950", 
                "caml_call_gc", 
                "caml_apply5", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_allocN", 
                "camlNativecode__get_name_6297", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Specif", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Relations/_coq-native/NCoq_Relations_Operators_Properties_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Relations/.coq-native/NCoq_Relations_Operators_Properties.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_const_6301"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/NatInt/_coq-native/NCoq_Numbers_NatInt_NZDiv_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/NatInt/.coq-native/NCoq_Numbers_NatInt_NZDiv.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__gmon_start__", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/BigN/_coq-native/NCoq_Numbers_Natural_BigN_Nbasic_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/BigN/.coq-native/NCoq_Numbers_Natural_BigN_Nbasic.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType", 
                "camlNativevalues__mk_ind_accu_4947", 
                "caml_curry6", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_curry2", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_alloc1", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType__x_word_67_2796", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_call_gc", 
                "caml_apply3", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_snd_3023", 
                "camlNCoq_Arith_PeanoNat", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_Arith_PeanoNat__x_max_119_2827", 
                "camlNCoq_PArith_BinPos__x_succ_8_2676", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "caml_curry8", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_mul_2790", 
                "caml_alloc3", 
                "caml_curry5", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_pred_2786", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Logic", 
                "caml_curry4", 
                "caml_apply2", 
                "camlNativecode__get_name_6297", 
                "caml_curry7", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_div_3330", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_opp_2764", 
                "camlNativecode__get_const_6301", 
                "caml_young_limit", 
                "camlNCoq_Init_Datatypes"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Abstract/_coq-native/NCoq_Numbers_Natural_Abstract_NAdd_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Abstract/.coq-native/NCoq_Numbers_Natural_Abstract_NAdd.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_Euclid_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_Euclid.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__gmon_start__", 
                "__cxa_finalize", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Arith_PeanoNat__x_add_15_2689", 
                "camlNCoq_Init_Nat", 
                "camlNCoq_Arith_PeanoNat", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Init_Specif", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_call_gc", 
                "camlNCoq_Arith_Minus", 
                "_ITM_deregisterTMCloneTable", 
                "caml_young_limit", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNCoq_Arith_Wf_nat__const_NCoq_Arith_Wf_nat_lt_wf_rec_2743", 
                "camlNCoq_Init_Peano__const_NCoq_Init_Peano_lt_2785", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Arith_Compare_dec__const_NCoq_Arith_Compare_dec_le_lt_dec_2729", 
                "camlNCoq_Init_Nat__x_sub_45_2728"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zabs_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zabs.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_apply3", 
                "camlNativevalues__mk_sw_accu_5114", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_abs_3148", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativecode__get_value_6218", 
                "caml_apply2", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_opp_2764", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Logic", 
                "camlNativecode__get_const_6301"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/extraction/_coq-native/NCoq_extraction_ExtrOcamlBasic_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/extraction/.coq-native/NCoq_extraction_ExtrOcamlBasic.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Structures/_coq-native/NCoq_Structures_OrderedType_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Structures/.coq-native/NCoq_Structures_OrderedType.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "caml_curry10", 
                "camlNativecode__get_match_6305", 
                "caml_curry2", 
                "caml_curry6", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_call_gc", 
                "camlNativecode__get_ind_6309", 
                "caml_curry4", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_young_limit", 
                "caml_curry5"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/QArith/_coq-native/NCoq_QArith_QArith_base_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/QArith/.coq-native/NCoq_QArith_QArith_base.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_young_limit", 
                "camlNCoq_Init_Logic", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lt_4420", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_eq_dec_4548", 
                "caml_alloc1", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_mul_2790", 
                "camlNCoq_ZArith_ZArith_dec__const_NCoq_ZArith_ZArith_dec_Z_lt_le_dec_3103", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_leb_3074", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_pow_pos_2687", 
                "camlNCoq_ZArith_ZArith_dec__const_NCoq_ZArith_ZArith_dec_Z_dec$27_3305", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_le_4426", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_opp_2764", 
                "camlNativecode__get_const_6301", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751", 
                "camlNCoq_PArith_BinPos__x_mul_313_2995", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_compare_2865", 
                "caml_call_gc"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rprod_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rprod.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "caml_curry3", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_call_gc", 
                "caml_curry2", 
                "camlNativecode__get_match_6305", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Init_Datatypes", 
                "caml_young_limit", 
                "caml_apply2", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_alloc3", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_fix_accu_5185"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Vectors/_coq-native/NCoq_Vectors_Fin_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Vectors/.coq-native/NCoq_Vectors_Fin.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_curry3", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_curry8", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_Arith_Lt", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Arith_PeanoNat", 
                "caml_apply4", 
                "caml_apply5", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__is_accu_5182", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "caml_call_gc", 
                "caml_young_limit", 
                "caml_alloc3", 
                "caml_curry6", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Init_Peano__const_NCoq_Init_Peano_lt_2785", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_sym_2912", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Nat", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rec_2894", 
                "caml_apply3", 
                "caml_apply2", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Init_Datatypes", 
                "camlNativecode__get_name_6297", 
                "caml_allocN", 
                "camlNCoq_Init_Nat__x_mul_27_2706", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "caml_curry2", 
                "caml_curry4", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNativevalues__str_decode_5828", 
                "caml_alloc1", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_rect_2887", 
                "camlNCoq_Arith_PeanoNat__x_eqb_64_2757", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_rect_2680", 
                "camlNativecode__get_sort_6293", 
                "caml_curry5"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Abstract/_coq-native/NCoq_Numbers_Natural_Abstract_NDefOps_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Abstract/.coq-native/NCoq_Numbers_Natural_Abstract_NDefOps.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_Gt_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_Gt.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "camlNativecode__get_const_6301", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Rational/BigQ/_coq-native/NCoq_Numbers_Rational_BigQ_QMake_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Rational/BigQ/.coq-native/NCoq_Numbers_Rational_BigQ_QMake.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Abstract/_coq-native/NCoq_Numbers_Natural_Abstract_NProperties_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Abstract/.coq-native/NCoq_Numbers_Natural_Abstract_NProperties.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sorting/_coq-native/NCoq_Sorting_Heap_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Sorting/.coq-native/NCoq_Sorting_Heap.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Sets_Multiset__const_NCoq_Sets_Multiset_meq_2704", 
                "caml_curry10", 
                "caml_curry6", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Sets_Multiset__const_NCoq_Sets_Multiset_EmptyBag_2681", 
                "caml_curry5", 
                "caml_call_gc", 
                "caml_apply2", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_curry4", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_match_6305", 
                "caml_curry2", 
                "caml_curry8", 
                "caml_apply3", 
                "caml_young_limit", 
                "camlNCoq_Sets_Multiset__const_NCoq_Sets_Multiset_SingletonBag_2688", 
                "caml_apply4", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativecode__get_name_6297", 
                "caml_curry9", 
                "camlNCoq_Sets_Multiset__const_NCoq_Sets_Multiset_munion_2748", 
                "camlNativecode__get_sort_6293", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_Sets_Multiset", 
                "caml_curry3", 
                "caml_apply5", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_curry7", 
                "caml_apply9", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__mk_sw_accu_5114"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_Between_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_Between.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_curry9", 
                "caml_call_gc", 
                "caml_apply5", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_Init_Peano", 
                "caml_curry6", 
                "caml_apply3", 
                "camlNCoq_Init_Peano__const_NCoq_Init_Peano_lt_2785", 
                "caml_young_limit", 
                "caml_curry4", 
                "camlNativecode__get_name_6297", 
                "caml_curry7", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Logic", 
                "caml_apply4", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_curry3", 
                "camlNativecode__get_const_6301", 
                "caml_curry5", 
                "caml_apply7", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_apply2", 
                "caml_curry2", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Init_Datatypes"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/MSets/_coq-native/NCoq_MSets_MSets_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/MSets/.coq-native/NCoq_MSets_MSets.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__cxa_finalize", 
                "__gmon_start__", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/Abstract/_coq-native/NCoq_Numbers_Integer_Abstract_ZProperties_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/Abstract/.coq-native/NCoq_Numbers_Integer_Abstract_ZProperties.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Classes/_coq-native/NCoq_Classes_Morphisms_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Classes/.coq-native/NCoq_Classes_Morphisms.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "caml_apply6", 
                "caml_young_limit", 
                "caml_curry3", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_match_6305", 
                "caml_curry5", 
                "caml_curry8", 
                "camlNativecode__get_ind_6309", 
                "caml_curry4", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_relation_equivalence_3279", 
                "caml_curry6", 
                "caml_apply2", 
                "caml_apply8", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_apply3", 
                "caml_apply4", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "caml_curry9", 
                "caml_curry12", 
                "camlNativecode__get_name_6297", 
                "caml_call_gc", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_curry2", 
                "camlNativevalues__mk_prod_accu_5119"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/QArith/_coq-native/NCoq_QArith_Qabs_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/QArith/.coq-native/NCoq_QArith_Qabs.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_young_limit", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Classes_Morphisms", 
                "caml_call_gc", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qopp_2754", 
                "camlNCoq_QArith_QArith_base", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_abs_3148", 
                "caml_curry3", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNativecode__get_const_6301", 
                "caml_alloc1", 
                "caml_apply4", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_value_6218", 
                "caml_apply2", 
                "camlNativecode__get_name_6297", 
                "caml_curry2", 
                "caml_curry4"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_PSeries_reg_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_PSeries_reg.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Reals_Rfunctions__x_sum_f_R0_41_2802", 
                "caml_young_limit", 
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Logic", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Init_Specif", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rminus_2701", 
                "camlNCoq_Reals_RIneq__const_NCoq_Reals_RIneq_pos_2997", 
                "camlNativevalues__mk_prod_accu_5119", 
                "__gmon_start__", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNCoq_Reals_RIneq", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_call_gc", 
                "camlNCoq_Init_Datatypes", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rle_2695", 
                "camlNCoq_Reals_Rseries__const_NCoq_Reals_Rseries_Un_cv_2685", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rabs_2732", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Peano", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_constant_accu_4657"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_Div2_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_Div2.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Arith_PeanoNat__x_div2_277_3057", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_constant_accu_4657", 
                "__gmon_start__", 
                "caml_call_gc", 
                "camlNativevalues__str_decode_5828", 
                "caml_young_limit", 
                "camlNCoq_Arith_PeanoNat", 
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_ConstructiveEpsilon_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_ConstructiveEpsilon.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "caml_apply4", 
                "camlNativevalues__is_accu_5182", 
                "camlNativevalues__str_decode_5828", 
                "caml_young_limit", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_curry2", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_and_ind_2720", 
                "camlNativecode__get_ind_6309", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Init_Peano", 
                "camlNCoq_Init_Datatypes", 
                "caml_apply2", 
                "camlNCoq_Init_Specif", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_apply3", 
                "caml_curry4", 
                "camlNativecode__get_name_6297", 
                "caml_curry3", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_proj2_sig_2816", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Wf", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_ex_ind_2830", 
                "caml_curry6", 
                "caml_call_gc", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_curry5", 
                "camlNCoq_Init_Wf__const_NCoq_Init_Wf_Fix_F_2773", 
                "caml_curry7", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_proj1_sig_2802", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_unique_3379"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Cyclic/Abstract/_coq-native/NCoq_Numbers_Cyclic_Abstract_NZCyclic_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Cyclic/Abstract/.coq-native/NCoq_Numbers_Cyclic_Abstract_NZCyclic.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_ChoiceFacts_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_ChoiceFacts.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_sort_accu_4950", 
                "caml_call_gc", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_subrelation_3371", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_sort_6293", 
                "caml_curry3", 
                "caml_curry2", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_unique_3379", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_curry5", 
                "camlNativecode__get_name_6297", 
                "caml_young_limit", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_curry6", 
                "camlNCoq_Init_Datatypes", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Specif", 
                "caml_apply3"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/extraction/_coq-native/NCoq_extraction_ExtrOcamlZBigInt_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/extraction/.coq-native/NCoq_extraction_ExtrOcamlZBigInt.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Ranalysis4_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Ranalysis4.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativecode__get_const_6301", 
                "__cxa_finalize", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/btauto/_coq-native/NCoq_btauto_Btauto_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/btauto/.coq-native/NCoq_btauto_Btauto.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Raxioms_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Raxioms.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_curry2", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rle_2695", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_curry3", 
                "camlNCoq_Init_Datatypes", 
                "caml_young_limit", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_to_nat_3949", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Reals_Rdefinitions", 
                "caml_apply2", 
                "caml_call_gc", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Logic", 
                "camlNativecode__get_name_6297", 
                "caml_alloc3", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Rational/BigQ/_coq-native/NCoq_Numbers_Rational_BigQ_QMake_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Rational/BigQ/.coq-native/NCoq_Numbers_Rational_BigQ_QMake.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_Rings_Z_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_Rings_Z.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_ZArith_BinInt", 
                "caml_young_limit", 
                "__cxa_finalize", 
                "camlNativecode__get_const_6301", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "caml_alloc1"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Lists/_coq-native/NCoq_Lists_Streams_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Lists/.coq-native/NCoq_Lists_Streams.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "caml_call_gc", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "camlNativevalues__force_cofix_5201", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__upd_cofix_5194", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_young_limit", 
                "__gmon_start__", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/QArith/_coq-native/NCoq_QArith_Qround_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/QArith/.coq-native/NCoq_QArith_Qround.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativecode__get_name_6297", 
                "camlNativecode__get_const_6301", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_match_6305", 
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_QArith_QArith_base", 
                "caml_call_gc", 
                "__cxa_finalize", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Classes_Morphisms", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qopp_2754", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Logic", 
                "caml_young_limit", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_div_3330", 
                "camlNativevalues__str_decode_5828", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNativevalues__mk_sw_accu_5114", 
                "__gmon_start__", 
                "camlNCoq_Numbers_BinNums"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_Field_tac_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_Field_tac.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "__gmon_start__", 
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/NatInt/_coq-native/NCoq_Numbers_NatInt_NZOrder_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/NatInt/.coq-native/NCoq_Numbers_NatInt_NZOrder.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "__gmon_start__", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Lists/_coq-native/NCoq_Lists_SetoidPermutation_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Lists/.coq-native/NCoq_Lists_SetoidPermutation.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Init_Datatypes", 
                "caml_apply2", 
                "caml_apply3", 
                "camlNativecode__get_ind_6309", 
                "caml_curry4", 
                "caml_curry2", 
                "camlNativecode__get_name_6297", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_apply4", 
                "camlNativecode__get_const_6301", 
                "caml_curry5", 
                "caml_apply7", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_curry8", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__str_decode_5828", 
                "caml_call_gc", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_curry7", 
                "caml_young_limit", 
                "caml_curry9"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/micromega/_coq-native/NCoq_micromega_ZMicromega_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/micromega/.coq-native/NCoq_micromega_ZMicromega.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Lists_List__const_NCoq_Lists_List_fold_left_3394", 
                "camlNCoq_micromega_RingMicromega", 
                "camlNCoq_micromega_Tauto__const_NCoq_micromega_Tauto_tauto_checker_3468", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_ZArith_Zbool", 
                "camlNCoq_ZArith_Zbool__const_NCoq_ZArith_Zbool_Zeq_bool_2872", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_micromega_EnvRing__const_NCoq_micromega_EnvRing_PEeval_4995", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_setoid_ring_Ring_theory", 
                "camlNCoq_micromega_EnvRing__const_NCoq_micromega_EnvRing_Psub_3665", 
                "camlNCoq_Lists_List__const_NCoq_Lists_List_map_3324", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_mul_2790", 
                "caml_alloc3", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_gtb_3092", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_pow_2805", 
                "camlNCoq_Arith_PeanoNat__x_max_119_2827", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lt_4420", 
                "camlNCoq_ZArith_BinInt", 
                "camlNCoq_micromega_EnvRing__const_NCoq_micromega_EnvRing_PsubC_3236", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "__cxa_finalize", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_eval_Psatz_3522", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Arith_PeanoNat", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_NFormula_3132", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_div_3330", 
                "caml_call_gc", 
                "caml_young_limit", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__is_accu_5182", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_pow_N_2736", 
                "caml_allocN", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_xhyps_of_psatz_3605", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Lists_List__const_NCoq_Lists_List_fold_right_3427", 
                "camlNCoq_micromega_EnvRing__const_NCoq_micromega_EnvRing_Padd_3564", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_eval_nformula_3176", 
                "__gmon_start__", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_of_N_3193", 
                "camlNativecode__get_value_6218", 
                "caml_alloc1", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_opp_2764", 
                "camlNCoq_micromega_Refl", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_max_3132", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_andb_2713", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_nformula_plus_nformula_3463", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_check_inconsistent_4051", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_gcd_4191", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_eval_formula_4220", 
                "camlNCoq_micromega_EnvRing", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_div_eucl_3311", 
                "camlNCoq_micromega_Env__const_NCoq_micromega_Env_Env_2654", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_check_normalised_formulas_4068", 
                "camlNCoq_micromega_EnvRing__const_NCoq_micromega_EnvRing_Pphi_4651", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_le_4426"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_Ncring_polynom_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_Ncring_polynom.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_sort_accu_4950", 
                "__gmon_start__", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_ZArith_BinInt__x_pos_sub_42_2722", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativevalues__is_accu_5182", 
                "__cxa_finalize", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_pow_N_3405", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_PArith_BinPos", 
                "caml_alloc3", 
                "camlNativecode__get_sort_6293", 
                "caml_young_limit", 
                "caml_call_gc", 
                "camlNCoq_ZArith_BinInt", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_pow_pos_3375", 
                "camlNativecode__get_ind_6309", 
                "camlNativecode__get_match_6305", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_setoid_ring_BinList__const_NCoq_setoid_ring_BinList_nth_2713", 
                "camlNCoq_PArith_BinPos__x_add_67_2739", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_ind_accu_4947"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/Abstract/_coq-native/NCoq_Numbers_Integer_Abstract_ZDivEucl_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/Abstract/.coq-native/NCoq_Numbers_Integer_Abstract_ZDivEucl.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_Lt_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_Lt.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_constant_accu_4657"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/micromega/_coq-native/NCoq_micromega_Lra_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/micromega/.coq-native/NCoq_micromega_Lra.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Structures/_coq-native/NCoq_Structures_OrdersLists_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Structures/.coq-native/NCoq_Structures_OrdersLists.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Ranalysis1_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Ranalysis1.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Init_Logic", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_Reals_Rpow_def__x_pow_10_2677", 
                "caml_young_limit", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rminus_2701", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Reals_RIneq__const_NCoq_Reals_RIneq_pos_2997", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rabs_2732", 
                "caml_call_gc", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rdiv_2704", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Reals_RIneq", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rle_2695", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Reals_Rderiv__const_NCoq_Reals_Rderiv_continue_in_2658", 
                "camlNativecode__get_ind_6309", 
                "caml_apply2", 
                "caml_apply3", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_proj1_sig_2802", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "caml_curry3", 
                "camlNativevalues__mk_prod_accu_5119"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zbool_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zbool.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_ZArith_ZArith_dec__const_NCoq_ZArith_ZArith_dec_Z_le_gt_dec_3119", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_leb_3074", 
                "camlNCoq_Bool_Sumbool__const_NCoq_Bool_Sumbool_bool_of_sumbool_2886", 
                "camlNCoq_ZArith_Zeven__const_NCoq_ZArith_Zeven_Zodd_2737", 
                "caml_young_limit", 
                "caml_apply2", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_ZArith_Zeven__const_NCoq_ZArith_Zeven_Zeven_2719", 
                "camlNCoq_ZArith_ZArith_dec__const_NCoq_ZArith_ZArith_dec_Z_ge_lt_dec_3136", 
                "camlNativecode__get_match_6305", 
                "caml_curry3", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_ge_4429", 
                "caml_call_gc", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lt_4420", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_ZArith_ZArith_dec__const_NCoq_ZArith_ZArith_dec_Z_lt_dec_2950", 
                "caml_curry2", 
                "camlNCoq_ZArith_BinInt", 
                "camlNCoq_Init_Datatypes", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_ZArith_ZArith_dec", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_compare_2865", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_eq_dec_4548", 
                "camlNCoq_ZArith_ZArith_dec__const_NCoq_ZArith_ZArith_dec_Z_gt_dec_3040", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_le_4426", 
                "camlNCoq_ZArith_Zeven__const_NCoq_ZArith_Zeven_Zeven_odd_dec_2792", 
                "caml_apply3"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Lists/_coq-native/NCoq_Lists_ListSet_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Lists/.coq-native/NCoq_Lists_ListSet.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_name_6297", 
                "caml_young_limit", 
                "caml_curry6", 
                "caml_call_gc", 
                "camlNCoq_Lists_List__const_NCoq_Lists_List_In_2736", 
                "caml_apply2", 
                "camlNativecode__get_const_6301", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Lists_List__const_NCoq_Lists_List_fold_right_3427", 
                "caml_curry5", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Lists_List__const_NCoq_Lists_List_fold_left_3394", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_curry4", 
                "camlNCoq_Init_Datatypes", 
                "caml_curry7", 
                "caml_curry2", 
                "caml_curry3", 
                "camlNativecode__get_match_6305"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/extraction/_coq-native/NCoq_extraction_ExtrOcamlNatBigInt_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/extraction/.coq-native/NCoq_extraction_ExtrOcamlNatBigInt.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/quote/_coq-native/NCoq_quote_Quote_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/quote/.coq-native/NCoq_quote_Quote.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__is_accu_5182", 
                "caml_apply2", 
                "caml_call_gc", 
                "caml_curry2", 
                "caml_curry6", 
                "caml_apply5", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_curry3", 
                "caml_curry5", 
                "camlNativecode__get_const_6301", 
                "camlNativecode__get_ind_6309", 
                "caml_young_limit", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_curry4", 
                "camlNCoq_Init_Datatypes", 
                "caml_allocN", 
                "caml_apply3", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_constant_accu_4657"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_ClassicalEpsilon_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_ClassicalEpsilon.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "caml_young_limit", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_call_gc", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_proj2_sig_2816", 
                "__cxa_finalize", 
                "camlNativecode__get_match_6305", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_ex_ind_2830", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Logic", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_proj1_sig_2802"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FSetAVL_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FSetAVL.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/PArith/_coq-native/NCoq_PArith_BinPosDef_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/PArith/.coq-native/NCoq_PArith_BinPosDef.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_allocN", 
                "camlNCoq_Init_Logic", 
                "caml_curry7", 
                "camlNativecode__get_name_6297", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Init_Datatypes", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_curry4", 
                "caml_young_limit", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rect_2885", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_alloc3", 
                "caml_curry5", 
                "caml_curry3", 
                "caml_apply2", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "caml_curry2", 
                "camlNativevalues__is_accu_5182", 
                "camlNCoq_Init_Nat", 
                "caml_curry6", 
                "caml_call_gc", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativecode__get_match_6305", 
                "camlNativecode__get_ind_6309"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Structures/_coq-native/NCoq_Structures_Orders_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Structures/.coq-native/NCoq_Structures_Orders.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "camlNativecode__get_const_6301", 
                "__cxa_finalize", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__str_decode_5828", 
                "caml_alloc3", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_equivalence_2978", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Init_Logic"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Ranalysis_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Ranalysis.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Program/_coq-native/NCoq_Program_Wf_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Program/.coq-native/NCoq_Program_Wf.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_proj1_sig_2802", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_name_6297", 
                "caml_call_gc", 
                "camlNCoq_Init_Wf__const_NCoq_Init_Wf_well_founded_ind_2755", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__mk_fix_accu_5185", 
                "__gmon_start__", 
                "camlNativecode__get_const_6301", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__is_accu_5182", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_proj2_sig_2816", 
                "caml_young_limit"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Vectors/_coq-native/NCoq_Vectors_VectorSpec_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Vectors/.coq-native/NCoq_Vectors_VectorSpec.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Init_Logic", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Vectors_VectorDef__const_NCoq_Vectors_VectorDef_tl_3149", 
                "camlNCoq_Vectors_VectorDef__const_NCoq_Vectors_VectorDef_hd_3002", 
                "camlNCoq_Vectors_VectorDef", 
                "__gmon_start__", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_call_gc", 
                "camlNativecode__get_value_6218", 
                "camlNativevalues__mk_prod_accu_5119", 
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Vectors_VectorDef__const_NCoq_Vectors_VectorDef_caseS_2897", 
                "caml_young_limit", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "camlNativevalues__mk_sort_accu_4950"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/BigZ/_coq-native/NCoq_Numbers_Integer_BigZ_ZMake_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/BigZ/.coq-native/NCoq_Numbers_Integer_BigZ_ZMake.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Reals_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Reals.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Structures/_coq-native/NCoq_Structures_Equalities_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Structures/.coq-native/NCoq_Structures_Equalities.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "__gmon_start__", 
                "__cxa_finalize", 
                "caml_alloc1", 
                "caml_call_gc", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "caml_alloc3", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_sym_2912", 
                "caml_allocN", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_equivalence_2978", 
                "caml_young_limit"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/NatInt/_coq-native/NCoq_Numbers_NatInt_NZMul_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/NatInt/.coq-native/NCoq_Numbers_NatInt_NZMul.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Wellfounded/_coq-native/NCoq_Wellfounded_Well_Ordering_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Wellfounded/.coq-native/NCoq_Wellfounded_Well_Ordering.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_call_gc", 
                "camlNCoq_Init_Specif", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_prod_accu_5119", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_ind_6309", 
                "caml_curry4", 
                "caml_curry7", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_apply3", 
                "caml_curry2", 
                "camlNativecode__get_name_6297", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_apply2", 
                "caml_curry3", 
                "caml_young_limit", 
                "camlNativecode__get_const_6301"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Wellfounded/_coq-native/NCoq_Wellfounded_Disjoint_Union_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Wellfounded/.coq-native/NCoq_Wellfounded_Disjoint_Union.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/newring_plugin_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/newring_plugin.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlCLexer__terminal_19701", 
                "camlGlobnames__global_of_constr_4438", 
                "caml_exn_Not_found", 
                "camlPp__qstring_1687", 
                "camlPp__strbrk_1420", 
                "camlGlobal__assert_not_parsing_3775", 
                "camlRetyping__get_type_of_inner_6892", 
                "camlCErrors__errorlabstrm_1338", 
                "camlCClosure__create_clos_infos_6755", 
                "camlMap__iter_1434", 
                "camlArray__sub_1236", 
                "camlEvarutil__e_new_global_5153", 
                "camlCClosure__kl_6686", 
                "camlGlobal", 
                "camlPpconstr", 
                "camlPp__surround_1979", 
                "camlArray__map_1261", 
                "camlStdarg", 
                "camlTaccoerce__to_constr_6517", 
                "camlCErrors__error_1336", 
                "camlTacsubst", 
                "camlPp__prlist_sep_lastsep_1921", 
                "caml_alloc2", 
                "camlMap__find_1303", 
                "camlTacenv__register_ml_tactic_inner_5972", 
                "camlCList__init_1565", 
                "caml_ml_array_bound_error", 
                "camlTacinterp__default_ist_15913", 
                "camlGenarg__obj_8005", 
                "camlNames__of_string_soft_1940", 
                "camlTacintern__glob_tactic_8797", 
                "caml_allocN", 
                "camlConstrintern__interp_open_constr_9075", 
                "camlTacinterp__eval_tactic_ist_15920", 
                "camlEvarutil__nf_evars_and_universes_6113", 
                "camlList__1", 
                "camlSummary__ref_4624", 
                "camlConstr__mkConst_4816", 
                "camlUniverses", 
                "camlUState__universe_context_5999", 
                "camlNameops__10", 
                "camlPp__hov_1649", 
                "camlPptactic__pr_raw_tactic_level_18044", 
                "caml_make_array", 
                "caml_young_ptr", 
                "camlConstr__18", 
                "camlGenarg__create_arg_7984", 
                "camlLibobject__default_object_2078", 
                "camlVernac_classifier__declare_vernac_classifier_1468", 
                "camlConstrintern__interp_constr_inner_13408", 
                "camlUniverses__restrict_universe_context_7527", 
                "camlUniverses__universes_of_constr_7517", 
                "camlGenarg", 
                "camlCMap__fun_2503", 
                "camlProofview__tclZERO_3424", 
                "camlTerm_typing__1", 
                "camlPervasives__failwith_1005", 
                "camlMltop__declare_cache_obj_3915", 
                "camlList__fold_right_1292", 
                "caml_modify", 
                "caml_alloc1", 
                "camlCClosure__mk_atom_5968", 
                "camlRewrite", 
                "caml_c_call", 
                "camlUtil", 
                "camlConstrarg", 
                "camlNames", 
                "camlUniverses__aux_6840", 
                "camlVernac_classifier__66", 
                "camlMltop__add_known_module_3856", 
                "camlTacinterp__of_closure_8780", 
                "camlMap__add_1291", 
                "camlTerm", 
                "camlConstr__eq_constr_nounivs_5550", 
                "camlCList__append_1547", 
                "camlTacinterp__cast_10828", 
                "camlCList__iteri_1913", 
                "camlTactics__reduct_option_inner_30852", 
                "camlPcoq", 
                "camlTacsubst__subst_tactic_4422", 
                "camlTaccoerce__of_constr_6446", 
                "caml_raise_exn", 
                "camlMod_subst__subst_mps_6016", 
                "camlQuote_plugin__Quote__closed_under_6011", 
                "camlProofview__enter_6507", 
                "camlPptactic", 
                "camlPp__glue_1211", 
                "caml_backtrace_pos", 
                "camlProofview__catchable_exception_6443", 
                "camlConstr__eq_constr_5406", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlLibobject__declare_object_2293", 
                "camlLoc__3", 
                "camlPcoq__new_entry_22377", 
                "camlPp__str_1375", 
                "camlTerm__decompose_app_4826", 
                "_ITM_deregisterTMCloneTable", 
                "camlGoal__mk_goal_2462", 
                "camlCoqlib__check_required_library_5404", 
                "_ITM_registerTMCloneTable", 
                "camlFlags__if_verbose_1334", 
                "camlCList__map_1515", 
                "caml_alloc3", 
                "camlPcoq__grammar_extend_22116", 
                "camlList__iter_1272", 
                "caml_exn_Assert_failure", 
                "camlLibnames", 
                "camlFeedback", 
                "camlArray__of_list_1294", 
                "camlConstr", 
                "camlTacticals__tclFAIL_6486", 
                "camlNames__of_string_1937", 
                "camlVernacinterp__vinterp_add_1903", 
                "camlCList__assoc_f_2392", 
                "camlProofview__of_tactic_6689", 
                "camlCoqlib__gen_reference_in_modules_5387", 
                "camlPrinter__pr_constr_5530", 
                "camlCoqlib__find_reference_5296", 
                "caml_call_gc", 
                "__cxa_finalize", 
                "camlGenarg__out_gen_5922", 
                "camlUniverses__constr_of_global_6604", 
                "camlBytes__copy_1226", 
                "camlArray__mapi_1279", 
                "camlVernac_classifier__64", 
                "camlNames__44", 
                "camlCArray__chop_1546", 
                "camlSmartlocate__global_with_alias_3264", 
                "camlProofview__tclEVARS_6362", 
                "camlReductionops__is_conv_inner_12022", 
                "camlConstr__mkApp_4803", 
                "camlCList__sep_last_1989", 
                "camlGlobnames__is_global_4447", 
                "camlGenarg__register0_7996", 
                "camlCClosure__mk_clos_deep_6213", 
                "camlEvd", 
                "camlDeclare__declare_constant_6569", 
                "camlArray__init_1217", 
                "camlRewrite__default_morphism_11222", 
                "camlTyping__e_solve_evars_5420", 
                "camlPp", 
                "camlCClosure__mk_clos_6202", 
                "camlVars__closedn_3615", 
                "camlUniv", 
                "camlRedexpr__declare_reduction_6377", 
                "camlRewrite__get_lemma_proof_11600", 
                "caml_young_limit", 
                "camlDeclare__definition_entry_inner_7910", 
                "camlCErrors__anomaly_1311", 
                "camlLib__add_leaf_4273", 
                "camlPervasives__string_of_int_1150", 
                "camlTacentries__add_ml_tactic_notation_8862", 
                "__gmon_start__", 
                "camlTacinterp", 
                "camlEvarutil__nf_evars_universes_6064", 
                "camlPp__6", 
                "camlCClosure", 
                "camlPervasives__$5e_1117", 
                "camlGlobnames", 
                "camlQuote_plugin", 
                "camlProofview", 
                "camlEvd__from_env_7032", 
                "camlCoqlib__build_coq_eq_data_5691"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Structures/_coq-native/NCoq_Structures_Equalities_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Structures/.coq-native/NCoq_Structures_Equalities.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Logic", 
                "caml_alloc1", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_sym_2912", 
                "caml_alloc3", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "caml_curry5", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_equivalence_2978", 
                "caml_allocN", 
                "caml_curry3", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_young_limit"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/NatInt/_coq-native/NCoq_Numbers_NatInt_NZParity_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/NatInt/.coq-native/NCoq_Numbers_NatInt_NZParity.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_deregisterTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/Abstract/_coq-native/NCoq_Numbers_Integer_Abstract_ZGcd_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/Abstract/.coq-native/NCoq_Numbers_Integer_Abstract_ZGcd.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Sqrt_reg_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Sqrt_reg.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/extraction/_coq-native/NCoq_extraction_ExtrHaskellNatInt_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/extraction/.coq-native/NCoq_extraction_ExtrHaskellNatInt.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Vectors/_coq-native/NCoq_Vectors_Vector_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Vectors/.coq-native/NCoq_Vectors_Vector.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNCoq_Init_Peano", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_rect_2887", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_length_3112", 
                "camlNCoq_Init_Peano__const_NCoq_Init_Peano_lt_2785", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_sym_2912", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_andb_2713", 
                "caml_curry9", 
                "caml_curry10", 
                "caml_curry3", 
                "caml_curry2", 
                "camlNCoq_Arith_Plus", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_rect_2680", 
                "caml_curry5", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "caml_apply2", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Vectors_VectorDef__const_NCoq_Vectors_VectorDef_tl_3149", 
                "camlNCoq_Arith_Plus__x_tail_plus_35_2786", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNCoq_Init_Nat", 
                "camlNCoq_Vectors_Fin", 
                "camlNCoq_Vectors_VectorEq", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Vectors_Fin__x_of_nat_lt_259_3075", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Vectors_VectorDef__const_NCoq_Vectors_VectorDef_hd_3002", 
                "caml_apply5", 
                "caml_young_limit", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rect_2885", 
                "camlNativecode__get_value_6218", 
                "caml_alloc3", 
                "caml_apply8", 
                "caml_call_gc", 
                "camlNCoq_Init_Nat__x_sub_45_2728", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "caml_curry4", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_rect_r_2969", 
                "caml_apply7", 
                "caml_curry8", 
                "camlNCoq_Arith_Minus", 
                "camlNCoq_Arith_PeanoNat", 
                "caml_apply6", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Arith_Gt", 
                "camlNCoq_Vectors_VectorSpec", 
                "camlNCoq_Vectors_VectorDef__const_NCoq_Vectors_VectorDef_caseS_2897", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Vectors_VectorDef", 
                "caml_apply4", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Init_Logic", 
                "caml_apply3", 
                "camlNativecode__get_ind_6309", 
                "camlNativecode__get_sort_6293", 
                "caml_curry6", 
                "caml_curry7"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/micromega/_coq-native/NCoq_micromega_ZCoeff_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/micromega/.coq-native/NCoq_micromega_ZCoeff.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNativevalues__mk_prod_accu_5119", 
                "_ITM_registerTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_setoid_ring_InitialRing__const_NCoq_setoid_ring_InitialRing_gen_phiZ_2884", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "camlNativecode__get_sort_6293", 
                "caml_young_limit", 
                "__cxa_finalize", 
                "camlNCoq_micromega_OrderedRing__const_NCoq_micromega_OrderedRing_SORsetoid_2693", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Classes_Morphisms", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_constant_accu_4657", 
                "__gmon_start__", 
                "caml_call_gc", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Exp_prop_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Exp_prop.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Init_Nat__x_mul_27_2706", 
                "camlNCoq_Init_Nat__const_NCoq_Init_Nat_pred_2665", 
                "caml_curry3", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Arith_PeanoNat__x_div2_277_3057", 
                "camlNCoq_Reals_Rfunctions__x_sum_f_R0_41_2802", 
                "camlNCoq_Reals_Rpow_def__x_pow_10_2677", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rdiv_2704", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Reals_Raxioms__x_INR_12_2722", 
                "caml_apply2", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Arith_PeanoNat", 
                "camlNCoq_Init_Nat__x_sub_45_2728", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rmax_2709", 
                "camlNCoq_Reals_Raxioms", 
                "camlNCoq_Arith_Factorial__x_fact_7_2674", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rabs_2732", 
                "caml_curry2", 
                "camlNCoq_Init_Nat", 
                "camlNativecode__get_const_6301", 
                "caml_call_gc", 
                "caml_young_limit"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Cyclic/Int31/_coq-native/NCoq_Numbers_Cyclic_Int31_Cyclic31_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Cyclic/Int31/.coq-native/NCoq_Numbers_Cyclic_Int31_Cyclic31.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_sort_accu_4950", 
                "caml_curry4", 
                "caml_curry2", 
                "camlNativecode__get_value_6218", 
                "camlNativevalues", 
                "caml_alloc1", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Numbers_Cyclic_Int31_Int31__const_NCoq_Numbers_Cyclic_Int31_Int31_firstr_3011", 
                "camlUint31", 
                "camlNCoq_Init_Datatypes", 
                "caml_apply2", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__diveucl_5707", 
                "caml_curry3", 
                "camlNCoq_Numbers_Cyclic_Int31_Int31__const_NCoq_Numbers_Cyclic_Int31_Int31_sneakl_2961", 
                "camlNativevalues__subc_5667", 
                "caml_curry6", 
                "camlNCoq_Numbers_Cyclic_Int31_Int31__const_NCoq_Numbers_Cyclic_Int31_Int31_firstl_3004", 
                "caml_young_limit", 
                "camlNativevalues__addc_5659", 
                "camlNCoq_ZArith_BinInt", 
                "caml_call_gc", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rect_2885", 
                "camlNativevalues__no_check_addmuldiv_5723", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__no_check_compare_5766", 
                "camlNativevalues__no_check_diveucl_5702", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__no_check_mulc_5695", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Logic", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mulc_5698", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Numbers_Cyclic_Int31_Int31", 
                "caml_curry5", 
                "caml_apply3", 
                "camlNativevalues__add_5574", 
                "caml_allocN", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__sub_5581", 
                "camlNativevalues__no_check_addc_5655", 
                "camlNativevalues__addmuldiv_5731", 
                "camlNativevalues__no_check_subc_5663", 
                "caml_apply5", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Numbers_BinNums"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Bool/_coq-native/NCoq_Bool_Bool_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Bool/.coq-native/NCoq_Bool_Bool.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_andb_2713", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "camlNativevalues__mk_sort_accu_4950", 
                "caml_young_limit", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_bool_rec_2706", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301", 
                "caml_call_gc", 
                "__cxa_finalize", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNativecode__get_value_6218", 
                "__gmon_start__", 
                "camlNCoq_Init_Specif", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__mk_ind_accu_4947", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_and_rec_2724", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_orb_2719"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_Field_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_Field.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/micromega/_coq-native/NCoq_micromega_Lqa_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/micromega/.coq-native/NCoq_micromega_Lqa.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/micromega/_coq-native/NCoq_micromega_Lqa_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/micromega/.coq-native/NCoq_micromega_Lqa.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FMapList_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FMapList.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Abstract/_coq-native/NCoq_Numbers_Natural_Abstract_NProperties_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Abstract/.coq-native/NCoq_Numbers_Natural_Abstract_NProperties.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_Eqdep_dec_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_Eqdep_dec.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_curry2", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Logic", 
                "caml_curry3", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__mk_sort_accu_4950", 
                "caml_apply4", 
                "camlNativevalues__str_decode_5828", 
                "caml_call_gc", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Init_Nat", 
                "camlNativecode__get_name_6297", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Nat__const_NCoq_Init_Nat_pred_2665", 
                "caml_young_limit", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_prod_accu_5119"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Ranalysis3_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Ranalysis3.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Lists/_coq-native/NCoq_Lists_SetoidList_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Lists/.coq-native/NCoq_Lists_SetoidList.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_list_rec_3096", 
                "caml_curry3", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativevalues__mk_ind_accu_4947", 
                "caml_curry7", 
                "caml_young_limit", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Classes_Morphisms", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_apply5", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "caml_apply4", 
                "caml_apply3", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "caml_apply2", 
                "caml_curry4", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlNativecode__get_const_6301", 
                "camlNativecode__get_sort_6293", 
                "camlNativecode__get_name_6297", 
                "caml_curry6", 
                "camlNCoq_Init_Specif", 
                "camlNativevalues__mk_sort_accu_4950", 
                "caml_curry5", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "caml_curry8", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNCoq_Program_Basics", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "caml_curry2", 
                "caml_call_gc", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rlogic_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rlogic.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_constant_accu_4657", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Wellfounded/_coq-native/NCoq_Wellfounded_Wellfounded_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Wellfounded/.coq-native/NCoq_Wellfounded_Wellfounded.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rtrigo1_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rtrigo1.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Reals_Rdefinitions", 
                "_ITM_registerTMCloneTable", 
                "caml_alloc3", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rle_2695", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Reals_Rtrigo_def__const_NCoq_Reals_Rtrigo_def_cos_2759", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Reals_Rtrigo_alt__const_NCoq_Reals_Rtrigo_alt_cos_approx_2663", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rdiv_2704", 
                "__cxa_finalize", 
                "camlNCoq_Reals_Rtrigo_def__const_NCoq_Reals_Rtrigo_def_sin_2779", 
                "camlNCoq_Reals_Rtrigo_alt__const_NCoq_Reals_Rtrigo_alt_sin_approx_2660", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_proj1_sig_2802", 
                "camlNativevalues__mk_constant_accu_4657", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Powerset_facts_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Powerset_facts.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativecode__get_const_6301", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_NewtonInt_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_NewtonInt.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Reals_Ranalysis1__const_NCoq_Reals_Ranalysis1_antiderivative_2817", 
                "camlNCoq_setoid_ring_Ring_tac", 
                "camlNCoq_Reals_Ranalysis1__const_NCoq_Reals_Ranalysis1_derivable_pt_2801", 
                "caml_young_limit", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_sym_2912", 
                "camlNativevalues__mk_prod_accu_5119", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_and_ind_2720", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_Reals_Ranalysis1__const_NCoq_Reals_Ranalysis1_derivable_pt_lim_2787", 
                "camlNCoq_Reals_Rdefinitions", 
                "__gmon_start__", 
                "camlNCoq_Reals_Ranalysis1__const_NCoq_Reals_Ranalysis1_derive_pt_2808", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Reals_Ranalysis1", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_or_ind_2779", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_ex_ind_2830", 
                "camlNativecode__get_name_6297", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rle_2695", 
                "camlNCoq_Reals_Ranalysis1__const_NCoq_Reals_Ranalysis1_mult_fct_2661", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNCoq_Reals_Ranalysis1__const_NCoq_Reals_Ranalysis1_plus_fct_2654", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_sig_rec_2684", 
                "camlNCoq_Reals_Ranalysis1__const_NCoq_Reals_Ranalysis1_cond_diff_2846", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNativecode__get_const_6301", 
                "caml_call_gc", 
                "camlNCoq_Reals_RIneq", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "__cxa_finalize", 
                "camlNCoq_Reals_Ranalysis1__const_NCoq_Reals_Ranalysis1_d1_2838"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Compat/_coq-native/NCoq_Compat_AdmitAxiom_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Compat/.coq-native/NCoq_Compat_AdmitAxiom.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_registerTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_const_6301", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/BigN/_coq-native/NCoq_Numbers_Natural_BigN_NMake_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/BigN/.coq-native/NCoq_Numbers_Natural_BigN_NMake.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_Max_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_Max.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/PArith/_coq-native/NCoq_PArith_Pnat_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/PArith/.coq-native/NCoq_PArith_Pnat.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301", 
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_IndefiniteDescription_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_IndefiniteDescription.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_constant_accu_4657"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Init/_coq-native/NCoq_Init_Peano_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Init/.coq-native/NCoq_Init_Peano.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "__gmon_start__", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301", 
                "_ITM_registerTMCloneTable", 
                "caml_alloc1", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_match_6305", 
                "camlNativecode__get_ind_6309", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__mk_sort_accu_4950", 
                "caml_young_limit", 
                "camlNativecode__get_name_6297", 
                "__cxa_finalize", 
                "caml_alloc3", 
                "caml_allocN", 
                "camlNativevalues__mk_fix_accu_5185", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rtrigo_def_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rtrigo_def.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNCoq_Reals_Rpow_def__x_pow_10_2677", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_ind_2892", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rabs_2732", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_apply3", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Arith_Factorial__x_fact_7_2674", 
                "camlNCoq_setoid_ring_Ring_tac", 
                "caml_apply7", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNativecode__get_match_6305", 
                "caml_apply4", 
                "camlNCoq_Reals_Rtrigo_fun", 
                "camlNCoq_Init_Peano", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Reals_PartSum", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_proj1_sig_2802", 
                "camlNativecode__get_value_6218", 
                "caml_alloc1", 
                "caml_young_limit", 
                "camlNCoq_Arith_PeanoNat", 
                "caml_curry3", 
                "caml_curry2", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rdiv_2704", 
                "camlNCoq_Reals_Rfunctions__x_sum_f_R0_41_2802", 
                "camlNCoq_setoid_ring_RealField", 
                "caml_apply2", 
                "camlNCoq_Reals_Rbasic_fun", 
                "camlNCoq_Reals_Raxioms", 
                "camlNativecode__get_name_6297", 
                "caml_call_gc", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rminus_2701", 
                "camlNCoq_Reals_Alembert__const_NCoq_Reals_Alembert_Alembert_C3_3966", 
                "camlNCoq_Reals_RIneq", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlNCoq_Init_Nat__x_mul_27_2706", 
                "camlNCoq_Reals_Rfunctions__const_NCoq_Reals_Rfunctions_infinite_sum_2823", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Wellfounded/_coq-native/NCoq_Wellfounded_Inclusion_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Wellfounded/.coq-native/NCoq_Wellfounded_Inclusion.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "camlNativevalues__str_decode_5828", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_constant_accu_4657"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Vectors/_coq-native/NCoq_Vectors_VectorDef_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Vectors/.coq-native/NCoq_Vectors_VectorDef.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_rect_2887", 
                "camlNativecode__get_sort_6293", 
                "__cxa_finalize", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNCoq_Arith_Plus", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__is_accu_5182", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Arith_Gt", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Vectors_Fin__x_of_nat_lt_259_3075", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rect_2885", 
                "camlNativecode__get_name_6297", 
                "camlNativecode__get_match_6305", 
                "caml_alloc3", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_call_gc", 
                "camlNCoq_Init_Nat__x_sub_45_2728", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Init_Peano", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_length_3112", 
                "camlNCoq_Arith_PeanoNat", 
                "camlNCoq_Arith_Minus", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Vectors_Fin", 
                "caml_young_limit", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_rect_r_2969", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_rect_2680", 
                "camlNCoq_Init_Peano__const_NCoq_Init_Peano_lt_2785", 
                "camlNCoq_Init_Nat", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Init_Nat__x_add_15_2689"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/omega/_coq-native/NCoq_omega_PreOmega_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/omega/.coq-native/NCoq_omega_PreOmega.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "__gmon_start__", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Numbers_BinNums", 
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_Classical_Pred_Type_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_Classical_Pred_Type.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_const_6301", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Ranalysis1_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Ranalysis1.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "caml_young_limit", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rminus_2701", 
                "camlNCoq_Reals_Rderiv__const_NCoq_Reals_Rderiv_continue_in_2658", 
                "__cxa_finalize", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rdiv_2704", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativecode__get_const_6301", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Reals_RIneq", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_proj1_sig_2802", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_Reals_RIneq__const_NCoq_Reals_RIneq_pos_2997", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNativevalues__mk_sw_accu_5114", 
                "__gmon_start__", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rabs_2732", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_call_gc", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rle_2695", 
                "camlNCoq_Reals_Rpow_def__x_pow_10_2677", 
                "_ITM_registerTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Permut_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Permut.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "camlNativecode__get_const_6301", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_Bool_nat_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_Bool_nat.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Init_Peano", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Bool_Sumbool__const_NCoq_Bool_Sumbool_bool_of_sumbool_2886", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_curry2", 
                "camlNCoq_Init_Peano__const_NCoq_Init_Peano_lt_2785", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Arith_PeanoNat__const_NCoq_Arith_PeanoNat_Nat_eq_dec_3343", 
                "camlNCoq_Arith_Compare_dec__const_NCoq_Arith_Compare_dec_le_lt_dec_2729", 
                "camlNCoq_Bool_Sumbool__const_NCoq_Bool_Sumbool_sumbool_not_2874", 
                "caml_apply2"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zpow_facts_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zpow_facts.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Numbers_BinNums", 
                "_ITM_registerTMCloneTable", 
                "caml_alloc3", 
                "__gmon_start__", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_call_gc", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301", 
                "caml_young_limit", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_modulo_3338", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__cxa_finalize", 
                "camlNativecode__get_name_6297", 
                "camlNativecode__get_value_6218", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__mk_constant_accu_4657"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/extraction/_coq-native/NCoq_extraction_Extraction_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/extraction/.coq-native/NCoq_extraction_Extraction.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FSetPositive_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FSetPositive.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_andb_2713", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "caml_call_gc", 
                "camlNativevalues__mk_sort_accu_4950", 
                "caml_young_limit", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_sym_2912", 
                "camlNCoq_Init_Datatypes", 
                "caml_alloc3", 
                "camlNCoq_Structures_OrderedType", 
                "__gmon_start__", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_orb_2719", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__is_accu_5182", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_Bool_Bool__const_NCoq_Bool_Bool_eqb_2776", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_alloc1", 
                "__cxa_finalize", 
                "camlNCoq_Structures_OrderedTypeEx", 
                "camlNativevalues__mk_fix_accu_5185"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/funind/recdef_plugin_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/funind/recdef_plugin.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlTacinterp__cast_10828", 
                "camlMiscops__map_cast_type_1671", 
                "camlCArray__exists_1379", 
                "camlPptactic__declare_extra_genarg_pprule_5591", 
                "camlPp", 
                "camlPretyping", 
                "camlSet__mem_1368", 
                "camlList__iter2_1319", 
                "camlInductiveops__constructor_nallargs_env_5720", 
                "camlConstr__map_with_binders_5215", 
                "camlList__exists2_1363", 
                "camlPre_env__push_rel_4645", 
                "camlPervasives__output_string_1213", 
                "camlProof_global__cur_pstate_4760", 
                "camlPervasives", 
                "camlRefiner__tclPROGRESS_2851", 
                "camlTacinterp", 
                "camlTerm__lamdec_rec_5424", 
                "camlTacticals__onNLastHypsId_5491", 
                "camlTacticals__nLastDecls_5460", 
                "camlPp__3", 
                "camlTacintern__intern_genarg_6288", 
                "camlHashtbl__find_1416", 
                "camlGlobnames__eq_gr_4115", 
                "camlLibnames__qualid_of_reference_5310", 
                "camlArray__fold_right_1310", 
                "camlLoc__3", 
                "camlEquality__injectable_9567", 
                "camlCErrors__print_inner_1903", 
                "camlEquality", 
                "camlTermops__nbrec_6969", 
                "camlInt", 
                "camlTactics__e_change_in_concl_11512", 
                "camlCoqlib__build_coq_False_5763", 
                "camlReductionops", 
                "camlPrinter__pr_named_context_of_7117", 
                "camlConstr__18", 
                "camlCStack__pop_1213", 
                "camlTactics__intro_then_gen_12779", 
                "camlDeclare__declare_variable_5585", 
                "camlList__fold_left_1286", 
                "camlSet__diff_1412", 
                "camlBytes__sub_1234", 
                "camlCArray__last_1443", 
                "camlMap__fold_1463", 
                "camlPrintf__fprintf_1294", 
                "camlLocusops__5", 
                "caml_alloc3", 
                "camlMap__bindings_aux_1658", 
                "camlPrinter__pr_lconstr_env_5503", 
                "camlCList__map2_1531", 
                "camlTopconstr__replace_vars_constr_expr_5552", 
                "camlConstrintern__global_reference_5466", 
                "camlRtree__is_infinite_2261", 
                "camlPcoq__new_entry_22377", 
                "caml_alloc2", 
                "camlArray__map_1261", 
                "camlTerm__lamdec_rec_5464", 
                "camlTactics__intro_using_12819", 
                "camlRefiner__tclDO_4440", 
                "camlIndrec__make_elimination_ident_7347", 
                "camlMod_subst__subst_constant_5695", 
                "camlImpargs__implicits_of_global_6242", 
                "camlTerm_typing__mk_pure_proof_5010", 
                "camlDeclareops", 
                "camlElim__decompose_and_5904", 
                "camlPfedit__by_5578", 
                "camlUniverses__new_sort_in_family_6729", 
                "camlGeninterp__register_val0_3883", 
                "camlEauto__gen_eauto_inner_9119", 
                "camlEquality__general_rewrite_9189", 
                "camlTermops__mkProd_or_LetIn_5804", 
                "caml_int_compare", 
                "camlTerm__destSort_4459", 
                "camlInductiveops__find_rectype_6640", 
                "camlGoal", 
                "camlList__iter_1272", 
                "camlTermops__ids_of_named_context_6774", 
                "camlEnviron__named_body_5160", 
                "camlExninfo__iraise_1245", 
                "camlCLexer__terminal_19701", 
                "camlTyping", 
                "camlEauto", 
                "caml_exn_Failure", 
                "camlEvarconv", 
                "camlTactics__eapply_with_bindings_14847", 
                "camlCWarnings__create_inner_3027", 
                "camlDeclare__definition_entry_inner_7910", 
                "camlEquality__subst_gen_10554", 
                "camlGenarg__register0_7996", 
                "camlTerm__destInd_4659", 
                "camlTactics__change_on_subterm_12631", 
                "camlInductiveops__type_of_inductive_5180", 
                "camlPp__prlist_sep_lastsep_1921", 
                "camlMltop__declare_cache_obj_3915", 
                "camlTactics__compute_elim_sig_21659", 
                "camlTactics__intro_patterns_to_16650", 
                "camlDeclare__definition_message_6859", 
                "camlInv__inv_7449", 
                "camlSet__exists_1479", 
                "caml_string_equal", 
                "camlConstr__map_5086", 
                "camlTacinterp__interp_genarg_12959", 
                "camlImpargs__make_implicit_args_5112", 
                "camlCClosure__norm_val_6744", 
                "camlCMap__fun_2503", 
                "camlCommand__interp_fixpoint_9383", 
                "camlGenintern", 
                "camlTopconstr", 
                "camlConstrintern__compute_internalization_data_6125", 
                "camlCoqlib", 
                "camlTyping__unsafe_type_of_5385", 
                "camlTacmach__pr_gls_4816", 
                "camlSet__add_1282", 
                "camlTerm__compose_prod_5097", 
                "camlGlobal__assert_not_parsing_3775", 
                "camlFuture__from_val_inner_2962", 
                "camlInt__find_1843", 
                "camlRefiner", 
                "camlGoal__abstract_type_4345", 
                "camlMap__iter_1434", 
                "camlTermops__occur_var_6258", 
                "camlCList__equal_1646", 
                "camlDetyping__detype_inner_9443", 
                "camlConstrintern__interp_type_inner_13416", 
                "camlCommand__interp_mutual_inductive_8447", 
                "camlMap__remove_1424", 
                "camlRefiner__tclTHENSFIRSTn_2806", 
                "camlTactics__intro_26944", 
                "camlRefiner__tclTHEN_i_2814", 
                "camlPptactic__pr_auto_using_17742", 
                "camlPrinter__pr_lconstr_5526", 
                "camlLocusops__1", 
                "camlCoqlib__find_reference_5296", 
                "camlEquality__general_rewrite_in_9213", 
                "camlVars__replace_vars_4114", 
                "camlVars__noccurn_3693", 
                "camlCList__addn_1692", 
                "camlKindops__logical_kind_of_goal_kind_1217", 
                "camlConstrintern__132", 
                "camlUniverses__constr_of_global_6604", 
                "camlInductive__lookup_mind_specif_4944", 
                "camlCoqlib__build_coq_eq_5694", 
                "camlConstrexpr_ops__mkLambdaC_5339", 
                "camlNames__equal_2304", 
                "camlTerm__decompose_app_4826", 
                "camlVars__closedn_3615", 
                "camlOption__map_1252", 
                "camlInductiveops", 
                "camlLibobject__default_object_2078", 
                "camlEvd", 
                "camlTacticals__onClause_7113", 
                "camlCList__split_1587", 
                "camlCList__map_i_1630", 
                "camlEvarconv__e_conv_inner_11956", 
                "camlRefiner__goal_goal_list_2436", 
                "camlList__map_1248", 
                "camlCommand__do_definition_7610", 
                "camlCoqlib__gen_reference_in_modules_5387", 
                "camlCClosure__59", 
                "camlNames__of_string_soft_1940", 
                "camlCArray__findi_1433", 
                "camlEvd__from_ctx_7053", 
                "camlTacentries__create_ltac_quotation_8901", 
                "camlNameops__10", 
                "camlCList__index_f_1789", 
                "camlCommand__extract_mutual_inductive_declaration_components_8673", 
                "camlPp__8", 
                "camlSmartlocate__global_of_extended_global_3227", 
                "camlLibnames__path_of_string_5131", 
                "camlCArray__map2_i_1590", 
                "camlConstrexpr_ops__names_of_local_assums_4435", 
                "camlIndrec__lookup_eliminator_7350", 
                "camlUState__universe_context_5999", 
                "camlCErrors__anomaly_1311", 
                "caml_string_compare", 
                "camlEgramml__extend_vernac_command_grammar_3774", 
                "camlTactics__constructor_tac_16362", 
                "camlTerm__decompose_prod_n_assum_5475", 
                "camlConstrintern__interp_type_evars_inner_13524", 
                "camlTacintern", 
                "camlTermops__it_named_context_quantifier_5830", 
                "camlList__rev_map_1264", 
                "camlGlobal__body_of_constant_body_4783", 
                "camlList__exists_1350", 
                "camlCommand__do_mutual_inductive_8754", 
                "camlGlobnames__destIndRef_4279", 
                "camlPpvernac__pr_vernac_6669", 
                "camlUniv__enforce_leq_6389", 
                "camlConstr__mkConst_4816", 
                "camlGlobal", 
                "caml_exn_Invalid_argument", 
                "camlArray__mapi_1279", 
                "camlCoqlib__coq_constant_5305", 
                "camlCbv__create_cbv_infos_5431", 
                "camlPcoq__extend_22173", 
                "camlCEphemeron__create_1293", 
                "camlContext__set_name_4035", 
                "camlImpargs", 
                "camlCommand__do_fixpoint_9745", 
                "camlPp__str_1375", 
                "camlPrintf__sprintf_1315", 
                "camlEvarutil__nf_evars_and_universes_6113", 
                "camlOption__smartmap_1256", 
                "camlSet__union_1384", 
                "caml_young_ptr", 
                "camlContext__map_name_4154", 
                "camlEauto__eauto_with_bases_inner_9069", 
                "camlAuto__h_auto_inner_8889", 
                "camlConstrexpr_ops__mkAppC_5356", 
                "camlLemmas__start_proof_inner_10011", 
                "camlCList__subtract_1674", 
                "camlConstrextern__extern_rel_context_7947", 
                "camlConstr__fold_5003", 
                "camlHashtbl__create_inner_2188", 
                "camlList__fold_right_1292", 
                "camlTactics__pattern_option_12693", 
                "camlLib__add_anonymous_leaf_inner_6550", 
                "camlDumpglob", 
                "camlTacmach__pf_hyps_types_2812", 
                "camlTacmach__pf_last_hyp_4520", 
                "camlTactics__clear_gen_8632", 
                "camlCompat__to_coqloc_3266", 
                "camlNametab__locate_6151", 
                "caml_make_vect", 
                "camlTactics__apply_14849", 
                "camlCClosure__mk_clos_6202", 
                "camlTacred__pattern_occs_8373", 
                "camlGenarg__obj_8005", 
                "camlRefiner__tclCOMPLETE_4436", 
                "camlTacmach__pf_ids_of_hyps_4528", 
                "camlTacmach__refine_4732", 
                "camlIndrec__build_case_analysis_scheme_default_7218", 
                "camlRefiner__tclTHEN_2824", 
                "camlTactics__apply_26946", 
                "camlTacmach__pf_nth_hyp_id_3133", 
                "camlRefiner__tclMAP_2843", 
                "camlPcoq__grammar_extend_22116", 
                "camlRefiner__tclORELSE_4391", 
                "camlTermops__occur_var_in_decl_6264", 
                "camlCArray__fold_left2_1482", 
                "camlConstrextern__extern_6549", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNames__equal_3394", 
                "camlGlobal__lookup_inductive_4711", 
                "camlTerm__prodec_rec_5452", 
                "camlEvd__from_env_7032", 
                "camlConstr__eq_constr_5406", 
                "__gmon_start__", 
                "camlGeninterp__val_tag_3844", 
                "camlEvd__evar_filtered_hyps_5542", 
                "camlLemmas__call_hook_5469", 
                "camlNamegen__rename_bound_vars_as_displayed_6447", 
                "camlCList__filter_1618", 
                "camlConstrexpr_ops__1", 
                "camlTermops__occur_existential_6202", 
                "caml_young_limit", 
                "camlCoqlib__build_coq_eq_refl_5697", 
                "camlEvd__fresh_global_inner_10078", 
                "camlCErrors__user_err_loc_1346", 
                "caml_modify", 
                "camlReductionops__is_conv_inner_12022", 
                "camlEquality__injHyp_10331", 
                "camlHMap__add_2284", 
                "caml_call_gc", 
                "camlPfedit__cook_proof_5147", 
                "camlLibnames__pr_reference_5322", 
                "camlTactics__reduce_12704", 
                "camlSet__remove_1375", 
                "camlTerm_typing__1", 
                "camlList__for_all_1345", 
                "camlGenarg", 
                "camlGeninterp", 
                "caml_backtrace_pos", 
                "camlCList__assoc_f_2392", 
                "camlSet__elements_aux_1509", 
                "camlTactics__induction_destruct_26245", 
                "camlUtil", 
                "camlTerm__mkLambda_or_LetIn_5068", 
                "camlBacktrace__add_backtrace_1282", 
                "camlNames__make3_3348", 
                "camlTerm__decompose_lam_n_5441", 
                "camlNames__43", 
                "camlEnviron__constant_opt_value_in_5894", 
                "camlMod_subst__subst_ind_5290", 
                "camlTacentries__add_ml_tactic_notation_8862", 
                "camlNames__44", 
                "camlVars__subst_var_4122", 
                "camlNamegen__next_ident_away_in_goal_6358", 
                "camlExtraction_plugin__Table__extraction_inline_6851", 
                "camlCList__union_1666", 
                "camlSet__filter_1485", 
                "camlPp__h_1640", 
                "camlCClosure", 
                "camlCoqlib__build_coq_I_5760", 
                "camlProofview__of_tactic_6689", 
                "camlPervasives__string_of_int_1150", 
                "camlUniv", 
                "camlPre_env__push_named_5124", 
                "camlArray__to_list_1285", 
                "camlMap__map_1441", 
                "camlTerm__destApp_4642", 
                "camlFlags__with_option_1204", 
                "camlCClosure__create_clos_infos_6755", 
                "camlCommand", 
                "camlCoqlib__build_coq_and_5769", 
                "camlNamegen__next_global_ident_away_6369", 
                "camlList__rev_append_1236", 
                "camlCoqlib__check_required_library_5404", 
                "camlPp__pr_enum_1951", 
                "camlProofview__tactic_6596", 
                "camlTerm__destLambda_4627", 
                "caml_ml_array_bound_error", 
                "camlTermops__is_section_variable_6782", 
                "caml_fresh_oo_id", 
                "camlTacred__fun_10261", 
                "camlReduction__whd_all_5018", 
                "camlTerm__prodec_rec_5416", 
                "camlFuture", 
                "camlCErrors__errorlabstrm_1338", 
                "camlGlob_ops__cases_pattern_of_glob_constr_6066", 
                "camlExtratactics__onSomeWithHoles_6144", 
                "camlConstr__mkConstructUi_4864", 
                "camlNames__eq_constructor_3850", 
                "camlTacinterp__eval_tactic_15916", 
                "camlGenarg__create_arg_7984", 
                "camlGlobal__globalize0_3868", 
                "camlCArray__equal_norefl_1364", 
                "camlRefiner__tclFAIL_2447", 
                "camlTacenv__register_ml_tactic_inner_5972", 
                "camlVars__substn_many_3745", 
                "camlBytes__copy_1226", 
                "camlLib__con_defined_in_sec_5431", 
                "camlRefiner__tclTRY_4404", 
                "camlNameops__lift_subscript_4442", 
                "camlTerm__destVar_4454", 
                "camlNametab__locate_5066", 
                "camlEquality__find_positions_9417", 
                "camlLocusops__onHyp_1238", 
                "camlTactics__simplest_case_14288", 
                "camlImpargs__make_contextual_implicit_args_5120", 
                "camlUniv__check_univ_leq_6385", 
                "camlTacsubst__subst_genarg_4426", 
                "camlArray__iteri_1275", 
                "camlConstr__mkRel_4620", 
                "camlCString__mem_2093", 
                "camlCoqlib__70", 
                "camlFeedback", 
                "camlConstrintern", 
                "camlSafe_typing__add_constraints_7166", 
                "camlHashtbl", 
                "camlCommand__extract_fixpoint_components_9571", 
                "camlTactics__mutual_fix_10045", 
                "camlPp__strbrk_1420", 
                "camlList__stable_sort_1482", 
                "camlPretyping__interp_elimination_sort_7621", 
                "camlCErrors__error_1336", 
                "camlConstrexpr_ops__prod_constr_expr_5536", 
                "camlFuture__force_1695", 
                "camlTacticals__tclCOMPLETE_6813", 
                "camlHMap__find_2408", 
                "camlTactics__forward_20861", 
                "camlPervasives__invalid_arg_1007", 
                "camlPervasives__failwith_1005", 
                "camlContext__fold_inside_4847", 
                "camlTermops", 
                "camlLemmas__save_proof_8237", 
                "camlInductiveops__find_inductive_6653", 
                "camlTacticals__nthDecl_4632", 
                "camlNamegen__next_ident_away_6375", 
                "camlUniverses__unsafe_constr_of_global_6646", 
                "camlConstr__eq_constr_nounivs_5550", 
                "camlConstr__mkInd_4856", 
                "camlPpconstr", 
                "camlSummary__ref_4624", 
                "camlTermops__ids_of_context_6778", 
                "camlTactics__elim_14330", 
                "camlPpconstr__fun_7935", 
                "camlList__1", 
                "caml_c_call", 
                "camlConstrintern__intern_gen_inner_13375", 
                "camlInductive__find_inductive_5160", 
                "camlTacticals__tclTHENLIST_6759", 
                "camlLib__make_kn_4183", 
                "camlGoptions", 
                "camlImpargs__make_strict_implicit_args_5114", 
                "camlGlob_ops", 
                "camlProof_global__discard_current_5101", 
                "camlTypeops__type_of_constant_type_knowing_parameters_5798", 
                "camlNames", 
                "camlTyping__e_type_of_inner_6079", 
                "camlSystem__get_time_3232", 
                "camlDetyping", 
                "camlConstrextern__extern_type_7612", 
                "camlConstrextern__35", 
                "camlEnviron", 
                "camlTactics__intros_using_12834", 
                "camlReduction__whd_betaiotazeta_5015", 
                "camlVernacinterp__vinterp_add_1903", 
                "camlGlobnames__pop_con_5005", 
                "camlNames__of_string_1937", 
                "camlContext__to_tuple_4211", 
                "camlTactics__assert_by_20875", 
                "camlFuture__get_1561", 
                "camlPptactic", 
                "camlDeclare__declare_constant_6569", 
                "camlTacmach__pf_eapply_4595", 
                "camlCoqlib__build_coq_True_5757", 
                "camlRefiner__tclTHENSV_2827", 
                "camlEvd__fresh_sort_in_family_inner_10055", 
                "camlNames__repr3_3352", 
                "camlRefiner__tclREPEAT_4445", 
                "camlEquality__discrHyp_9867", 
                "camlReductionops__clos_norm_flags_8544", 
                "camlConstrintern__interp_context_evars_inner_13629", 
                "camlTyping__type_of_inner_6067", 
                "camlFuture__transactify_1684", 
                "camlVars__subst1_3772", 
                "caml_allocN", 
                "camlVernac_classifier__64", 
                "camlTactics__try_intros_until_12940", 
                "camlSmartlocate__global_with_alias_3264", 
                "camlTactics__fix_10218", 
                "camlList__find_1427", 
                "camlVernac_classifier__classify_vernac_1490", 
                "camlGlobal__type_of_global_unsafe_5209", 
                "camlCList__concat_1574", 
                "camlTermops__dependent_main_6634", 
                "camlTactics__unfold_in_hyp_12689", 
                "camlConstr__compare_head_gen_leq_with_5273", 
                "camlTermops__free_rels_6277", 
                "camlHashtbl__add_1391", 
                "camlArray__append_1232", 
                "camlNameops__9", 
                "camlCList__append_1547", 
                "camlDumpglob__pause_1874", 
                "camlLibobject__declare_object_2293", 
                "camlPretyping__understand_inner_11563", 
                "caml_raise_exn", 
                "camlCArray__for_all_1391", 
                "camlArray__iter_1252", 
                "camlUniverses__aux_6840", 
                "camlTerm__destRel_4442", 
                "camlSorts__univ_of_sort_1691", 
                "camlVars__make_subst_3754", 
                "camlTermops__replace_term_gen_6725", 
                "__cxa_finalize", 
                "camlVars__lift_3730", 
                "camlHMap__fold_2337", 
                "camlPpconstr__pr_glob_sort_4960", 
                "camlPcoq", 
                "camlList__length_aux_1204", 
                "camlArray__of_list_1294", 
                "camlProofview", 
                "_ITM_registerTMCloneTable", 
                "camlTactics", 
                "camlCList__map_1515", 
                "camlTacenv", 
                "camlVernac_classifier__declare_vernac_classifier_1468", 
                "camlFormat__sprintf_1911", 
                "camlTactics__generalize_21015", 
                "camlConstrarg", 
                "camlLib", 
                "camlExplainErr__process_vernac_interp_error_inner_6406", 
                "camlMap__add_1291", 
                "camlCList__map_filter_2233", 
                "caml_alloc1", 
                "camlTacsubst", 
                "camlSorts__family_1715", 
                "camlEvd__find_6390", 
                "camlMltop__add_known_module_3856", 
                "camlGlob_ops__glob_constr_eq_4780", 
                "camlList__2", 
                "camlMap__find_1303", 
                "camlInductiveops__get_constructors_5971", 
                "camlTactics__simplest_elim_14338", 
                "camlTerm__decompose_prod_n_5431", 
                "camlPp__6", 
                "camlPervasives__min_1027", 
                "camlCErrors__noncritical_1426", 
                "camlConstr", 
                "camlPp__hov_1649", 
                "camlTypeops__type_of_constant_knowing_parameters_5808", 
                "camlCEphemeron__iter_opt_1359", 
                "camlEquality__general_rewrite_bindings_9180", 
                "camlPpvernac", 
                "camlTactics__assert_before_8997", 
                "camlVars__liftn_3725", 
                "camlTerm__destConst_4649", 
                "camlTacticals", 
                "camlTerm__destFix_4685", 
                "camlPervasives__$5e_1117", 
                "camlTermops__compare_constr_univ_6801", 
                "camlEvarutil__nf_evar_5841", 
                "camlTactics__run_delayed_12950", 
                "camlCList__chop_2277", 
                "camlTerm", 
                "camlConstrexpr_ops__mkIdentC_5331", 
                "camlContext", 
                "camlConstr__mkSort_4771", 
                "caml_exn_Not_found", 
                "camlPfedit__get_current_context_5547", 
                "camlGlobal__lookup_constant_4680", 
                "camlCErrors", 
                "caml_make_array", 
                "caml_exn_Assert_failure", 
                "camlContext__of_tuple_4824", 
                "camlConstr__mkApp_4803", 
                "camlCList__iteri_1913", 
                "camlRefiner__tclFIRST_4409", 
                "camlPp__pr_sequence_1948", 
                "camlConstrintern__interp_constr_inner_13408", 
                "camlProof_global", 
                "camlOption", 
                "camlStates__with_state_protection_1788", 
                "camlTerm__prod_applist_5384", 
                "camlCList__map3_1735", 
                "camlCList__combine_1603", 
                "camlCommand__declare_mutual_inductive_with_eliminations_8694", 
                "camlNames__make2_3096", 
                "camlCArray__fold_left_i_1464", 
                "camlTactics__introduction_inner_30019", 
                "camlPp__glue_1211", 
                "camlTactics__rename_hyp_8708", 
                "camlRefiner__tclTHENLIST_2839", 
                "camlTerm__compose_lam_5319", 
                "camlAuto", 
                "camlTactics__case_26952", 
                "camlTerm__destProd_4620", 
                "camlList__fold_left2_1327", 
                "camlTacticals__elimination_sort_of_goal_5785", 
                "camlVars", 
                "camlTactics__ipat_of_name_16672", 
                "camlConstrextern__extern_constr_inner_9711", 
                "camlContext__lookup_4443", 
                "camlNametab", 
                "camlDeclare", 
                "camlExninfo", 
                "camlConstr__19", 
                "camlCList__fold_left_i_1883", 
                "camlRefiner__pf_env_2311", 
                "camlTactics__exact_check_15952", 
                "camlIndrec__build_mutual_induction_scheme_7283", 
                "_ITM_deregisterTMCloneTable", 
                "camlList__nth_1219", 
                "camlArray__init_1217", 
                "camlTactics__intro_avoiding_12824", 
                "camlHints__empty_8163", 
                "camlTacticals__onAllHypsAndConcl_5505", 
                "camlGlobnames__global_of_constr_4438", 
                "camlPrinter", 
                "camlTactics__unfold_in_concl_12687", 
                "camlLibnames", 
                "camlCbv__cbv_norm_5427", 
                "camlGenarg__out_gen_5922", 
                "camlConstrextern", 
                "camlCArray__chop_1546", 
                "camlList__fold_right2_1336", 
                "camlPp__hv_1646", 
                "camlFlags", 
                "camlPrinter__pr_glob_constr_env_5975", 
                "camlTacmach", 
                "camlCArray__fold_right2_1472", 
                "camlGoptions__declare_option_3583"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/bin/coqdoc": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/coqdoc", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "cfsetispeed", 
                "sqrt", 
                "shutdown", 
                "memset", 
                "dup3", 
                "select", 
                "getcwd", 
                "memcpy", 
                "inet_pton", 
                "initgroups", 
                "chmod", 
                "strcmp", 
                "__read_chk", 
                "close", 
                "fork", 
                "dlclose", 
                "__fdelt_chk", 
                "fchmod", 
                "__memcpy_chk", 
                "strerror", 
                "getgid", 
                "setuid", 
                "access", 
                "strnlen", 
                "log1p", 
                "nice", 
                "umask", 
                "opendir", 
                "getprotobyname", 
                "__libc_start_main", 
                "sigemptyset", 
                "rewinddir", 
                "mmap64", 
                "bind", 
                "exp", 
                "pow", 
                "fchown", 
                "chown", 
                "__lxstat64", 
                "calloc", 
                "munmap", 
                "nanosleep", 
                "mktime", 
                "__stack_chk_fail", 
                "sigprocmask", 
                "mkfifo", 
                "dlerror", 
                "getpwuid", 
                "sigsuspend", 
                "expm1", 
                "floor", 
                "atan", 
                "strlen", 
                "log", 
                "execve", 
                "geteuid", 
                "sinh", 
                "getrusage", 
                "realloc", 
                "__errno_location", 
                "strtod", 
                "__memmove_chk", 
                "sendto", 
                "open64", 
                "getnameinfo", 
                "__recv_chk", 
                "mkdir", 
                "chdir", 
                "isatty", 
                "waitpid", 
                "setsid", 
                "execvp", 
                "chroot", 
                "getpwnam", 
                "getenv", 
                "cosh", 
                "strtol", 
                "setgid", 
                "__recvfrom_chk", 
                "asin", 
                "pipe2", 
                "fcntl", 
                "truncate64", 
                "tcflow", 
                "getpeername", 
                "system", 
                "ceil", 
                "unlink", 
                "getrlimit64", 
                "hypot", 
                "sigaltstack", 
                "getprotobynumber", 
                "putenv", 
                "memcmp", 
                "socketpair", 
                "symlink", 
                "sigaddset", 
                "link", 
                "modf", 
                "wait", 
                "__gmon_start__", 
                "memmove", 
                "connect", 
                "sigdelset", 
                "getgroups", 
                "tcsendbreak", 
                "gethostbyname_r", 
                "free", 
                "dlopen", 
                "log10", 
                "gethostbyaddr_r", 
                "fflush", 
                "ftruncate64", 
                "exit", 
                "acos", 
                "gettimeofday", 
                "send", 
                "accept4", 
                "tcgetattr", 
                "read", 
                "listen", 
                "tcdrain", 
                "__sigsetjmp", 
                "fmod", 
                "inet_ntop", 
                "__isoc99_sscanf", 
                "readdir64", 
                "time", 
                "atan2", 
                "tanh", 
                "execv", 
                "socket", 
                "tcflush", 
                "tcsetattr", 
                "sigpending", 
                "getsockopt", 
                "getppid", 
                "getuid", 
                "lseek64", 
                "setsockopt", 
                "fputc", 
                "cos", 
                "write", 
                "fwrite", 
                "kill", 
                "__vsnprintf_chk", 
                "sigaction", 
                "readlink", 
                "getservbyport", 
                "closedir", 
                "__snprintf_chk", 
                "cfsetospeed", 
                "alarm", 
                "setgroups", 
                "fputs", 
                "gmtime", 
                "malloc", 
                "cfgetospeed", 
                "rmdir", 
                "frexp", 
                "abort", 
                "getgrgid", 
                "fmin", 
                "rename", 
                "__fxstat64", 
                "getgrnam", 
                "setitimer", 
                "getpid", 
                "tan", 
                "__xstat64", 
                "freeaddrinfo", 
                "ldexp", 
                "getaddrinfo", 
                "dlsym", 
                "getlogin", 
                "getsockname", 
                "getservbyname", 
                "localtime", 
                "sigismember", 
                "sin", 
                "getegid", 
                "secure_getenv", 
                "utimes", 
                "cfgetispeed", 
                "__fprintf_chk"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Uniset_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Uniset.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_constant_accu_4657", 
                "__gmon_start__", 
                "camlNativevalues__mk_prod_accu_5119", 
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_orb_2719", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Bool_Bool__const_NCoq_Bool_Bool_leb_2763", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Datatypes", 
                "caml_young_limit", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_const_6301", 
                "camlNativecode__get_ind_6309", 
                "caml_call_gc", 
                "camlNativevalues__mk_ind_accu_4947"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Unicode/_coq-native/NCoq_Unicode_Utf8_core_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Unicode/.coq-native/NCoq_Unicode_Utf8_core.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_ClassicalChoice_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_ClassicalChoice.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_curry3", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_call_gc", 
                "caml_young_limit"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Uniset_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Uniset.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Init_Datatypes", 
                "caml_young_limit", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Bool_Bool__const_NCoq_Bool_Bool_leb_2763", 
                "caml_call_gc", 
                "caml_curry4", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Logic", 
                "camlNativecode__get_ind_6309", 
                "camlNativecode__get_name_6297", 
                "caml_apply3", 
                "caml_apply2", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_orb_2719", 
                "caml_curry3", 
                "camlNativecode__get_const_6301", 
                "caml_curry2"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/SpecViaZ/_coq-native/NCoq_Numbers_Natural_SpecViaZ_NSig_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/SpecViaZ/.coq-native/NCoq_Numbers_Natural_SpecViaZ_NSig.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Logic", 
                "__cxa_finalize", 
                "caml_young_limit", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_le_4426", 
                "_ITM_registerTMCloneTable", 
                "caml_call_gc", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_to_N_3181", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_const_6301", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_Ncring_initial_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_Ncring_initial.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_apply7", 
                "caml_young_limit", 
                "caml_curry9", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "caml_apply2", 
                "caml_curry10", 
                "caml_apply4", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_Reflexive_2972", 
                "caml_apply8", 
                "camlNCoq_ZArith_BinInt", 
                "camlNCoq_setoid_ring_Algebra_syntax__const_NCoq_setoid_ring_Algebra_syntax_Subtraction_2687", 
                "camlNCoq_setoid_ring_Algebra_syntax__const_NCoq_setoid_ring_Algebra_syntax_Equality_2700", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_setoid_2789", 
                "caml_apply10", 
                "camlNativecode__get_match_6305", 
                "caml_curry11", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_plus_comp_2834", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_alloc3", 
                "caml_apply14", 
                "camlNativecode__get_sort_6293", 
                "camlNativecode__get_value_6218", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_setoid_ring_Ncring__const_NCoq_setoid_ring_Ncring_ring_sub_def_3280", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "caml_call_gc", 
                "camlNCoq_setoid_ring_Algebra_syntax__const_NCoq_setoid_ring_Algebra_syntax_Multiplication_2678", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "caml_curry2", 
                "camlNCoq_setoid_ring_Algebra_syntax__const_NCoq_setoid_ring_Algebra_syntax_Addition_2664", 
                "caml_apply3", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_apply12", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_Transitive_2976", 
                "camlNCoq_setoid_ring_Algebra_syntax__const_NCoq_setoid_ring_Algebra_syntax_Opposite_2694", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Classes_RelationClasses", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_name_6297", 
                "caml_curry6", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_PER_2889", 
                "caml_curry3", 
                "caml_apply11", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_apply15", 
                "camlNCoq_Classes_Morphisms"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/btauto/_coq-native/NCoq_btauto_Reflect_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/btauto/.coq-native/NCoq_btauto_Reflect.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_btauto_Algebra__const_NCoq_btauto_Algebra_Decidable_null_3040", 
                "caml_alloc3", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_btauto_Algebra__const_NCoq_btauto_Algebra_list_nth_3067", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_andb_2713", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_orb_2719", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Classes_DecidableClass__const_NCoq_Classes_DecidableClass_Decidable_witness_2667", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_PArith_BinPos__x_peano_rect_1003_4250", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_xorb_2735", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_btauto_Algebra__x_poly_mul_378_3329", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_btauto_Algebra__x_poly_add_308_3217", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_btauto_Algebra", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Init_Datatypes", 
                "caml_call_gc", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlNCoq_PArith_BinPos", 
                "__gmon_start__", 
                "caml_young_limit"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Cyclic/DoubleCyclic/_coq-native/NCoq_Numbers_Cyclic_DoubleCyclic_DoubleType_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Cyclic/DoubleCyclic/.coq-native/NCoq_Numbers_Cyclic_DoubleCyclic_DoubleType.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751", 
                "camlNCoq_Numbers_BinNums", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_sort_6293", 
                "__gmon_start__", 
                "camlNativecode__get_name_6297", 
                "caml_young_limit", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_mul_2790", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828", 
                "caml_call_gc", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_pow_2805", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_value_6218", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Init_Datatypes", 
                "caml_alloc3"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Cauchy_prod_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Cauchy_prod.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "camlNativevalues__str_decode_5828", 
                "__gmon_start__", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_const_6301"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/_coq-native/NCoq_Numbers_BinNums_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/.coq-native/NCoq_Numbers_BinNums.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_call_gc", 
                "caml_young_limit", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_curry6", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativecode__get_name_6297", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_ind_6309", 
                "caml_curry3", 
                "caml_curry5", 
                "caml_apply2", 
                "caml_curry4", 
                "camlNativecode__get_match_6305"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rminmax_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rminmax.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Reals_Rbasic_fun", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "__gmon_start__", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_rect_2887", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "caml_call_gc", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_CompSpec2Type_3465", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "camlNCoq_Reals_ROrderedType", 
                "camlNCoq_Init_Logic", 
                "caml_young_limit", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rmax_2709", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rle_2695", 
                "camlNCoq_Reals_ROrderedType__const_NCoq_Reals_ROrderedType_Rcompare_2792", 
                "caml_alloc1", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Reals_Rdefinitions", 
                "__cxa_finalize", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rmin_2660", 
                "camlNativecode__get_sort_6293", 
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_PER_2889"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FSetWeakList_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FSetWeakList.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zcomplements_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zcomplements.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_allocN", 
                "caml_young_limit", 
                "caml_alloc3", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_curry3", 
                "camlNativecode__get_value_6218", 
                "camlNativevalues__mk_sort_accu_4950", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_curry4", 
                "caml_call_gc", 
                "caml_apply3", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_name_6297", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_ZArith_BinInt", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751", 
                "caml_curry2"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/QArith/_coq-native/NCoq_QArith_Qpower_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/QArith/.coq-native/NCoq_QArith_Qpower.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_constant_accu_4657"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/NatPairs/_coq-native/NCoq_Numbers_Integer_NatPairs_ZNatPairs_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/NatPairs/.coq-native/NCoq_Numbers_Integer_NatPairs_ZNatPairs.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/decl_mode/decl_mode_plugin_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/decl_mode/decl_mode_plugin.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlTacintern__intern_constr_gen_5801", 
                "camlTermops", 
                "camlPp__41", 
                "caml_ml_array_bound_error", 
                "camlGenarg__out_gen_5922", 
                "camlPretyping__understand_inner_11563", 
                "camlInt__find_1843", 
                "camlFeedback__feedback_1644", 
                "camlTactics__assert_before_8997", 
                "caml_alloc2", 
                "camlTerm__mkNamedProd_4834", 
                "camlInductive__arities_of_constructors_6030", 
                "camlEnviron__named_type_5125", 
                "caml_make_array", 
                "caml_call_gc", 
                "camlGlobal", 
                "camlStore__set_1225", 
                "camlPervasives__string_of_int_1150", 
                "camlVars__substn_many_3745", 
                "camlPervasives__max_1030", 
                "camlList__1", 
                "caml_c_call", 
                "camlEvd__evar_filtered_hyps_5542", 
                "camlTactics__forward_20861", 
                "camlProofview", 
                "caml_alloc1", 
                "camlGoptions__declare_option_3583", 
                "camlTerm__prodec_rec_5452", 
                "camlProof__top_goal_2948", 
                "camlSet__add_1282", 
                "camlLocusops__6", 
                "camlGoal__partial_solution_4091", 
                "camlPrinter__pr_constr_env_5505", 
                "camlConstr__eq_constr_5406", 
                "camlTermops__ids_of_named_context_6774", 
                "camlOption__map_1252", 
                "camlGenarg__register0_7996", 
                "camlUniverses__constr_of_global_6604", 
                "camlTactics__clear_body_16078", 
                "camlArray__mapi_1279", 
                "camlNames__equal_2304", 
                "camlProofview__of_tactic_6689", 
                "camlArray__of_list_1294", 
                "camlRefiner__tclTHENSV_2827", 
                "camlPcoq__extend_22173", 
                "camlProofview__tclINDEPENDENT_5759", 
                "camlCClosure__mk_clos_6202", 
                "camlGenarg__create_arg_7984", 
                "camlCoqlib__coq_constant_5305", 
                "camlEvd", 
                "camlEvd__meta_declare_inner_10207", 
                "camlHashtbl__add_1391", 
                "camlCClosure__create_clos_infos_6755", 
                "caml_exn_Assert_failure", 
                "camlLoc__3", 
                "camlCErrors__errorlabstrm_1338", 
                "camlTerm__destLetIn_4634", 
                "camlTerm__strip_outer_cast_4695", 
                "camlRefiner__tclORELSE_4391", 
                "camlCEphemeron__create_1293", 
                "camlTactics__letin_tac_20814", 
                "camlPervasives__invalid_arg_1007", 
                "camlPptactic__declare_extra_genarg_pprule_5591", 
                "camlTacinterp__tactic_of_value_12952", 
                "camlPfedit__by_5578", 
                "camlPp__8", 
                "camlTactics", 
                "camlPp__v_1643", 
                "camlRefiner__goal_goal_list_2436", 
                "camlProof_global__cur_pstate_4760", 
                "camlVars__subst_var_4122", 
                "camlCString__mem_2093", 
                "camlGenarg", 
                "camlCErrors__error_1336", 
                "camlType_errors", 
                "camlReductionops__red_of_state_red_8494", 
                "camlPcoq__new_entry_22377", 
                "camlCStack__pop_1213", 
                "camlGoal__nf_evar_4339", 
                "camlProof__unfocus_2299", 
                "camlPpconstr__pr_patt_5367", 
                "_ITM_registerTMCloneTable", 
                "camlPp__glue_1211", 
                "camlCList__fold_map_2367", 
                "camlList__for_all2_1355", 
                "camlRefiner__tclTHENLIST_2839", 
                "camlTactics__simplest_case_14288", 
                "camlProof_global", 
                "camlConstr__mkConstruct_4860", 
                "camlTactics__simplest_elim_14338", 
                "camlCList__iteri_1913", 
                "camlVars__lift_3730", 
                "camlArray__iteri_1275", 
                "camlTactics__rename_hyp_8708", 
                "camlPervasives__failwith_1005", 
                "camlReduction__dest_prod_6290", 
                "camlG_vernac", 
                "camlDetyping__detype_inner_9443", 
                "camlPre_env__push_named_5124", 
                "camlTacintern", 
                "camlCoqlib", 
                "camlLoc__raise_1264", 
                "camlList__iter_1272", 
                "camlTacmach__pf_get_hyp_4522", 
                "camlPp__6", 
                "camlBytes__copy_1226", 
                "camlTactics__simple_induct_26316", 
                "camlPp", 
                "camlTacticals", 
                "caml_exn_Not_found", 
                "camlList__fold_left_1286", 
                "camlTermops__subst_meta_6678", 
                "camlRefiner__tclFIRST_4409", 
                "camlPretyping", 
                "camlNames__equal_3394", 
                "camlProof_global__set_proof_mode_5112", 
                "camlProofview__partial_proof_2973", 
                "camlNameops", 
                "camlRefiner", 
                "camlCList__filter_1618", 
                "camlRefiner__tclMAP_2843", 
                "camlVernacinterp__vinterp_add_1903", 
                "camlContext__of_tuple_4824", 
                "camlTerm__destProd_4620", 
                "camlCList__append_1547", 
                "caml_young_limit", 
                "camlCList__map_i_1630", 
                "camlCClosure__norm_val_6744", 
                "camlTermops__dependent_main_6634", 
                "camlTerm__compose_lam_5319", 
                "camlTyping__e_sort_of_5392", 
                "camlStore__remove_1293", 
                "camlArray__map_1261", 
                "camlTermops__compare_constr_univ_6801", 
                "camlEgramml__extend_vernac_command_grammar_3774", 
                "camlSorts__family_1715", 
                "camlCList__chop_2277", 
                "camlTerm__prod_applist_5384", 
                "camlTactics__fresh_id_in_env_8750", 
                "camlTactics__find_intro_names_12764", 
                "camlRefiner__pf_env_2311", 
                "camlTerm__mkNamedLetIn_4849", 
                "camlProof__is_done_2257", 
                "camlGoptions", 
                "camlEvd__clear_metas_7714", 
                "camlTerm__mkNamedLambda_4845", 
                "camlNamegen__next_ident_away_6375", 
                "camlProof__get_in_focus_stack_2307", 
                "camlEvd__meta_assign_7687", 
                "camlTactics__intro_mustbe_force_12817", 
                "camlTerm__destInd_4659", 
                "camlSet__mem_1368", 
                "camlMltop__add_known_module_3856", 
                "camlPp__str_1375", 
                "camlGoal__mk_goal_2462", 
                "camlPrinter__pr_context_of_7175", 
                "camlList__rev_append_1236", 
                "camlInductiveops__control_only_guard_6845", 
                "_ITM_deregisterTMCloneTable", 
                "camlPpconstr", 
                "camlEvd__find_6390", 
                "camlTactics__generalize_21015", 
                "camlTactics__convert_concl_inner_30043", 
                "camlPretyping__understand_tcc_inner_11571", 
                "camlConstr__mkApp_4803", 
                "camlGlobal__assert_not_parsing_3775", 
                "camlUtil", 
                "camlCWarnings__create_inner_3027", 
                "camlTacmach__pf_ids_of_hyps_4528", 
                "caml_raise_exn", 
                "camlRefiner__tclTRY_4404", 
                "camlUnification__w_unify_inner_11726", 
                "camlCClosure", 
                "camlTacinterp__of_closure_8780", 
                "camlCompat__to_coqloc_3266", 
                "camlRtree__dest_node_1953", 
                "camlRefiner__ite_gen_4413", 
                "caml_young_ptr", 
                "camlTacmach", 
                "camlConstr__18", 
                "camlProofview__tactic_6596", 
                "__gmon_start__", 
                "camlUnification__elim_flags_evars_6622", 
                "camlCErrors__anomaly_1311", 
                "camlEvarutil", 
                "camlNameops__9", 
                "camlCClosure__59", 
                "camlProof__focus_2294", 
                "camlPrinter__pr_goal_concl_style_env_5900", 
                "camlInductiveops__mis_is_recursive_5662", 
                "camlTerm", 
                "camlTactics__exact_check_15952", 
                "camlGlob_ops__map_glob_constr_left_to_right_5174", 
                "camlNamegen__lambda_create_5856", 
                "camlPptactic__361", 
                "camlVernac_classifier__declare_vernac_classifier_1468", 
                "camlReductionops", 
                "camlProof__run_tactic_2711", 
                "camlList__fold_right_1292", 
                "camlOption", 
                "camlProof_global__simple_with_current_proof_4997", 
                "camlCClosure__whd_val_6741", 
                "camlInductive__lookup_mind_specif_4944", 
                "camlCErrors", 
                "camlContext__get_value_4594", 
                "camlReductionops__nf_meta_9028", 
                "camlEvarutil__clear_hyps_in_evi_8260", 
                "caml_modify", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlProof", 
                "camlNames__of_string_1937", 
                "camlTactics__refine_26962", 
                "camlTacintern__intern_pure_tactic_6284", 
                "camlList__length_aux_1204", 
                "camlPcoq", 
                "__cxa_finalize", 
                "caml_exn_Failure", 
                "camlTermops__subst_term_gen_6711", 
                "camlTerm__prodec_rec_5416", 
                "camlInductiveops__make_case_info_5926", 
                "camlConstrintern__intern_pattern_8726", 
                "camlMap__fold_1463", 
                "camlGenarg__obj_8005", 
                "caml_allocN", 
                "camlProofview__tclZERO_3424", 
                "camlTactics__transitivity_gen_26467", 
                "camlTacinterp__default_ist_15913", 
                "camlTactics__convert_hyp_inner_30112", 
                "camlTerm__compose_prod_5097", 
                "camlGlobal__lookup_inductive_4711", 
                "camlTerm__decompose_app_4826", 
                "camlPp__hov_1649", 
                "camlProof_global__with_current_proof_4773", 
                "camlEvd__evar_filtered_env_5663", 
                "camlVernac_classifier__65", 
                "camlVars__make_subst_3754", 
                "camlCList__map_1515", 
                "camlPp__3", 
                "camlSet__singleton_1291", 
                "caml_backtrace_pos", 
                "camlNames", 
                "camlCList__concat_1574", 
                "camlGoal__partial_solution_to_4095", 
                "camlTacmach__refine_4732", 
                "camlNamegen__hdchar_5693", 
                "camlConstr", 
                "camlProof__done_cond_inner_3835", 
                "camlTactics__ipat_of_name_16672", 
                "camlCList__init_1565", 
                "caml_alloc3", 
                "camlPp__strbrk_1420", 
                "camlRefiner__tclTHEN_2824", 
                "camlTactics__fix_10218", 
                "camlPrinter", 
                "caml_exn_Invalid_argument", 
                "camlCErrors__noncritical_1426", 
                "camlRefiner__tclDO_4440", 
                "camlCString__assoc_2097"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Strings/_coq-native/NCoq_Strings_Ascii_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Strings/.coq-native/NCoq_Strings_Ascii.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "caml_alloc3", 
                "camlNCoq_Init_Specif", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_allocN", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_mul_3432", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_to_nat_4062", 
                "camlNCoq_Bool_Bool__const_NCoq_Bool_Bool_bool_dec_2702", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_young_limit", 
                "__gmon_start__", 
                "__cxa_finalize", 
                "camlNativevalues__mk_fix_accu_5185", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_add_2702", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_of_nat_4068", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_sumbool_rec_2969", 
                "camlNCoq_Init_Datatypes", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Numbers_BinNums", 
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_const_6301", 
                "caml_call_gc"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/MSets/_coq-native/NCoq_MSets_MSetProperties_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/MSets/.coq-native/NCoq_MSets_MSetProperties.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__cxa_finalize", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/micromega/_coq-native/NCoq_micromega_Refl_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/micromega/.coq-native/NCoq_micromega_Refl.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_sort_6293", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Datatypes", 
                "camlNativecode__get_match_6305", 
                "caml_apply3", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_curry6", 
                "caml_alloc3", 
                "caml_curry3", 
                "caml_curry5", 
                "camlNativevalues__str_decode_5828", 
                "caml_apply4", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_call_gc", 
                "caml_young_limit", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_sort_accu_4950", 
                "caml_curry4", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Program/_coq-native/NCoq_Program_Combinators_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Program/.coq-native/NCoq_Program_Combinators.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_constant_accu_4657"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/NatInt/_coq-native/NCoq_Numbers_NatInt_NZDomain_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/NatInt/.coq-native/NCoq_Numbers_NatInt_NZDomain.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__cxa_finalize", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FSetInterface_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FSetInterface.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_apply2", 
                "caml_curry2", 
                "caml_call_gc", 
                "caml_curry3", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "camlNCoq_Init_Logic"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Relations/_coq-native/NCoq_Relations_Relations_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Relations/.coq-native/NCoq_Relations_Relations.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__mk_constant_accu_4657", 
                "__gmon_start__", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rlimit_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rlimit.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Reals_Rfunctions", 
                "camlNativecode__get_name_6297", 
                "caml_apply2", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_curry6", 
                "caml_curry4", 
                "camlNativecode__get_const_6301", 
                "camlNativecode__get_sort_6293", 
                "caml_curry2", 
                "caml_young_limit", 
                "caml_call_gc", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rge_2698", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rle_2695", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rabs_2732", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Logic", 
                "caml_apply3", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rminus_2701", 
                "caml_alloc1", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Lists/_coq-native/NCoq_Lists_List_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Lists/.coq-native/NCoq_Lists_List.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativecode__get_match_6305", 
                "camlNativecode__get_value_6218", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_app_3138", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "__cxa_finalize", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_alloc3", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_list_rect_3084", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_list_rec_3096", 
                "camlNativevalues__is_accu_5182", 
                "camlNCoq_Init_Peano", 
                "caml_alloc1", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_length_3112", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_andb_2713", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_young_limit", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_orb_2719", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_sumbool_rec_2969", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "caml_call_gc", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Init_Specif", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Powerset_facts_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Powerset_facts.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_const_6301"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rprod_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rprod.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "_ITM_deregisterTMCloneTable", 
                "caml_alloc3", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNCoq_Init_Datatypes", 
                "__gmon_start__", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_young_limit", 
                "__cxa_finalize", 
                "caml_call_gc", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativecode__get_name_6297", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_prod_accu_5119"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Relations_1_facts_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Relations_1_facts.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__gmon_start__", 
                "camlNativevalues__str_decode_5828", 
                "caml_call_gc"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_Compare_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_Compare.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Specif", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "caml_young_limit", 
                "camlNCoq_Init_Peano__const_NCoq_Init_Peano_lt_2785", 
                "caml_call_gc", 
                "_ITM_deregisterTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__cxa_finalize", 
                "camlNCoq_Arith_Compare_dec", 
                "camlNativecode__get_const_6301"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_Euclid_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_Euclid.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Logic", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Arith_Compare_dec__const_NCoq_Arith_Compare_dec_le_lt_dec_2729", 
                "camlNCoq_Arith_PeanoNat", 
                "camlNCoq_Init_Nat", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Arith_Minus", 
                "caml_apply3", 
                "camlNativecode__get_ind_6309", 
                "camlNativecode__get_match_6305", 
                "caml_curry5", 
                "caml_curry2", 
                "caml_apply2", 
                "camlNativevalues__str_decode_5828", 
                "caml_young_limit", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "camlNCoq_Init_Nat__x_sub_45_2728", 
                "camlNCoq_Arith_Wf_nat__const_NCoq_Arith_Wf_nat_lt_wf_rec_2743", 
                "camlNCoq_Arith_PeanoNat__x_add_15_2689", 
                "camlNCoq_Init_Peano__const_NCoq_Init_Peano_lt_2785", 
                "camlNCoq_Init_Nat__x_mul_27_2706", 
                "caml_call_gc", 
                "caml_curry3", 
                "camlNativevalues__mk_ind_accu_4947", 
                "caml_apply4", 
                "caml_curry6"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Classes/_coq-native/NCoq_Classes_SetoidClass_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Classes/.coq-native/NCoq_Classes_SetoidClass.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_call_gc", 
                "caml_alloc1", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_sort_6293", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_ind_accu_4947", 
                "caml_apply2", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "caml_young_limit", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_PER_2889", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Relations_Relation_Definitions__const_NCoq_Relations_Relation_Definitions_relation_2654", 
                "camlNCoq_Classes_Morphisms", 
                "caml_curry3", 
                "caml_apply3", 
                "caml_apply4", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_match_6305", 
                "caml_curry2", 
                "camlNativecode__get_ind_6309"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/QArith/_coq-native/NCoq_QArith_Qfield_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/QArith/.coq-native/NCoq_QArith_Qfield.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/BigN/_coq-native/NCoq_Numbers_Natural_BigN_NMake_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/BigN/.coq-native/NCoq_Numbers_Natural_BigN_NMake.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_ZArithRing_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_ZArithRing.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_constant_accu_4657", 
                "__cxa_finalize", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Constructive_sets_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Constructive_sets.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Structures/_coq-native/NCoq_Structures_GenericMinMax_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Structures/.coq-native/NCoq_Structures_GenericMinMax.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_apply2", 
                "camlNativecode__get_match_6305", 
                "caml_young_limit", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_curry4", 
                "caml_curry2", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Classes/_coq-native/NCoq_Classes_SetoidClass_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Classes/.coq-native/NCoq_Classes_SetoidClass.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_young_limit", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativecode__get_const_6301", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Classes_Morphisms", 
                "camlNCoq_Init_Logic", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "camlNCoq_Relations_Relation_Definitions__const_NCoq_Relations_Relation_Definitions_relation_2654", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Classes_RelationClasses", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_registerTMCloneTable", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_PER_2889", 
                "caml_alloc1", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativecode__get_ind_6309", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Relations/_coq-native/NCoq_Relations_Relation_Definitions_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Relations/.coq-native/NCoq_Relations_Relation_Definitions.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__mk_prod_accu_5119", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_sort_accu_4950", 
                "caml_apply2", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_match_6305", 
                "caml_curry3", 
                "caml_apply3", 
                "camlNativevalues__mk_ind_accu_4947", 
                "caml_curry4", 
                "caml_curry2", 
                "caml_young_limit", 
                "camlNativecode__get_sort_6293", 
                "caml_curry5"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zgcd_alt_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zgcd_alt.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_PArith_BinPos__x_size_nat_362_3082", 
                "caml_curry2", 
                "caml_curry5", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Init_Datatypes", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_match_6305", 
                "caml_curry4", 
                "camlNativecode__get_name_6297", 
                "caml_alloc3", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751", 
                "caml_apply3", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_call_gc", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_abs_3148", 
                "caml_young_limit", 
                "camlNCoq_Init_Nat__x_add_15_2689"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FSetWeakList_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FSetWeakList.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_Eqdep_dec_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_Eqdep_dec.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNativecode__get_const_6301", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_ind_2892", 
                "camlNCoq_Init_Nat__const_NCoq_Init_Nat_pred_2665", 
                "caml_young_limit", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Datatypes", 
                "__cxa_finalize", 
                "caml_call_gc", 
                "_ITM_deregisterTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Nat", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativecode__get_sort_6293"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/Abstract/_coq-native/NCoq_Numbers_Integer_Abstract_ZBits_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/Abstract/.coq-native/NCoq_Numbers_Integer_Abstract_ZBits.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/omega/omega_plugin_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/omega/omega_plugin.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlHashtbl", 
                "camlCoqlib__check_required_library_5404", 
                "camlTacticals__tclTHENS_6750", 
                "caml_ml_array_bound_error", 
                "camlTactics__intros_using_12834", 
                "camlTactics__elim_type_26336", 
                "camlTactics__simplest_elim_14338", 
                "camlTacticals__tclTRY_6765", 
                "camlList__iter_1272", 
                "camlTacticals__tclZEROMSG_6489", 
                "camlConstr__18", 
                "camlProofview__tclPROGRESS_6145", 
                "_ITM_registerTMCloneTable", 
                "caml_notequal", 
                "camlBigint__mult_1459", 
                "camlRefiner__tclTHEN_2824", 
                "camlPrintf__fprintf_1294", 
                "camlList__stable_sort_1482", 
                "camlList__map_1248", 
                "camlEvd__find_6390", 
                "caml_ml_flush", 
                "camlTactics__convert_hyp_inner_30112", 
                "camlCList__union_1666", 
                "caml_alloc1", 
                "camlTactics", 
                "camlContext__set_type_4725", 
                "camlPervasives__$40_1166", 
                "camlRefiner__pf_env_2311", 
                "camlMltop__declare_cache_obj_3915", 
                "camlArray__copy_1229", 
                "camlConstr__mkRel_4620", 
                "camlCList__append_1547", 
                "camlTacenv__register_ltac_5535", 
                "camlTacentries__add_ml_tactic_notation_8862", 
                "camlCErrors__anomaly_1311", 
                "camlPervasives__string_of_int_1150", 
                "camlProofview__nf_enter_6485", 
                "camlCoqlib__24", 
                "camlTactics__generalize_21015", 
                "caml_exn_Not_found", 
                "camlHashtbl__find_1416", 
                "camlTacmach__pf_hyps_types_5061", 
                "camlTacenv", 
                "camlProofview__of_tactic_6689", 
                "caml_allocN", 
                "camlHashtbl__iter_1474", 
                "camlTacinterp__cast_10828", 
                "camlPp__str_1375", 
                "camlContext__to_tuple_4817", 
                "camlHashtbl__add_1391", 
                "camlTacred__is_evaluable_5715", 
                "camlPervasives__failwith_1005", 
                "camlNames__of_string_1937", 
                "caml_fresh_oo_id", 
                "camlTactics__cut_13058", 
                "camlTactics__convert_concl_inner_30043", 
                "camlCErrors__error_1336", 
                "camlTacinterp__eval_tactic_15916", 
                "camlCoqlib__40", 
                "camlPrintf__sprintf_1315", 
                "camlLibnames__string_of_path_5072", 
                "camlGlobal", 
                "camlReductionops", 
                "caml_equal", 
                "camlTerm__decompose_app_4826", 
                "camlGoptions", 
                "camlProofview", 
                "caml_string_equal", 
                "camlRefiner__tclTRY_4404", 
                "camlTactics__apply_14849", 
                "camlBigint__sub_1456", 
                "camlConstr", 
                "camlCoqlib__build_coq_not_5766", 
                "camlUniverses__constr_of_global_6604", 
                "camlCList__except_1926", 
                "camlCoqlib", 
                "camlCoqlib__build_coq_ex_5778", 
                "camlList__1", 
                "caml_backtrace_pos", 
                "camlTacticals__tclREPEAT0_6798", 
                "camlNames__of_string_soft_1940", 
                "camlRefiner__tclTHENLIST_2839", 
                "camlTacticals__tclTHENLIST_6759", 
                "camlList__length_aux_1204", 
                "camlMltop__add_known_module_3856", 
                "camlCoqlib__build_coq_True_5757", 
                "camlCList__assoc_f_2392", 
                "camlNameops__repr_ident_4428", 
                "camlList__flatten_1243", 
                "camlTacmach", 
                "camlTacmach__pf_unsafe_type_of_5029", 
                "camlReductionops__is_conv_inner_12022", 
                "camlPervasives__$5e_1117", 
                "camlCList__map_1515", 
                "camlConstr__eq_constr_5406", 
                "camlTerm__is_Prop_4465", 
                "camlEvarutil", 
                "camlConstrintern__construct_reference_5537", 
                "__gmon_start__", 
                "camlCoqlib__build_coq_or_5775", 
                "camlCString__assoc_2097", 
                "camlList__assq_1393", 
                "camlContradiction__absurd_3379", 
                "caml_raise_exn", 
                "camlString", 
                "caml_call_gc", 
                "camlCList__uniquize_sorted_2163", 
                "camlConstr__mkApp_4803", 
                "camlTactics__clear_gen_8632", 
                "camlNames__make2_3096", 
                "camlTacmach__refine_4732", 
                "camlList__memq_1376", 
                "camlHashtbl__remove_1406", 
                "camlList", 
                "camlNames__44", 
                "caml_modify", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "caml_c_call", 
                "camlBigint__add_1453", 
                "camlNameops__make_ident_4433", 
                "camlList__rev_append_1236", 
                "camlLogic__catchable_exception_4969", 
                "camlPervasives__print_newline_1312", 
                "camlArray__of_list_1294", 
                "camlHMap__find_2408", 
                "camlBytes__copy_1226", 
                "camlGlobnames__is_global_4447", 
                "camlNames", 
                "camlBigint", 
                "camlEquality", 
                "camlPervasives__max_1030", 
                "camlTacenv__register_ml_tactic_inner_5972", 
                "camlHashtbl__clear_1343", 
                "caml_exn_Failure", 
                "camlGoptions__declare_option_3583", 
                "camlCoqlib__build_coq_False_5763", 
                "camlPervasives", 
                "camlList__partition_1445", 
                "camlTactics__introduction_inner_30019", 
                "camlTacmach__of_old_5019", 
                "camlTacmach__pf_global_4539", 
                "camlList__2", 
                "camlTactics__fresh_id_in_env_8750", 
                "camlHashtbl__create_inner_2188", 
                "camlList__fold_left_1286", 
                "caml_exn_Assert_failure", 
                "caml_young_ptr", 
                "camlLoc__3", 
                "__cxa_finalize", 
                "caml_alloc3", 
                "camlCoqlib__build_coq_eq_5694", 
                "caml_make_array", 
                "camlConstrarg", 
                "camlConstr__mkCast_4773", 
                "camlCErrors__noncritical_1426", 
                "camlNametab__path_of_global_6213", 
                "caml_young_limit", 
                "_ITM_deregisterTMCloneTable", 
                "camlCoqlib__gen_reference_in_modules_5387", 
                "camlTactics__constructor_tac_16362", 
                "camlTactics__intro_using_12819", 
                "camlCoqlib__build_coq_and_5769", 
                "camlProofview__tactic_6596", 
                "camlGlobal__assert_not_parsing_3775", 
                "camlTerm", 
                "camlTacticals", 
                "camlPervasives__output_string_1213"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_Hurkens_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_Hurkens.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "caml_call_gc", 
                "caml_make_array", 
                "camlNativecode__get_sort_6293", 
                "caml_young_ptr", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_name_6297", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Specif", 
                "caml_young_limit", 
                "caml_ml_array_bound_error", 
                "camlNativevalues__mk_sort_accu_4950", 
                "caml_allocN", 
                "camlNativevalues", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_proj1_sig_2802", 
                "__cxa_finalize", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__str_decode_5828", 
                "caml_c_call", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/quote/quote_plugin_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/quote/quote_plugin.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlTerm__decompose_app_4826", 
                "camlConstr_matching", 
                "camlHashtbl__Make_1702", 
                "caml_raise_exn", 
                "caml_c_call", 
                "camlPatternops__pattern_of_constr_6132", 
                "caml_modify", 
                "caml_backtrace_pos", 
                "camlMap__bindings_aux_1658", 
                "camlHashtbl", 
                "camlCArray__for_all_1391", 
                "camlArray__map_1261", 
                "camlTactics__convert_concl_inner_30043", 
                "camlCErrors__error_1336", 
                "caml_allocN", 
                "camlArray__of_list_1294", 
                "camlHashtbl__find_1621", 
                "__cxa_finalize", 
                "camlCArray__exists_1379", 
                "camlTacentries__add_ml_tactic_notation_8862", 
                "camlArray__init_1217", 
                "camlTerm__destRel_4442", 
                "camlProofview__nf_enter_6485", 
                "camlCoqlib__coq_constant_5305", 
                "_ITM_registerTMCloneTable", 
                "camlCoqlib__check_required_library_5404", 
                "camlLoc__3", 
                "camlCList__map_1515", 
                "caml_young_limit", 
                "camlConstrarg", 
                "camlPervasives__failwith_1005", 
                "camlHashtbl__add_1596", 
                "camlTaccoerce__of_constr_6446", 
                "camlPervasives__string_of_int_1150", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlBytes__copy_1226", 
                "camlNames__of_string_1937", 
                "caml_exn_Assert_failure", 
                "camlMltop__declare_cache_obj_3915", 
                "camlPp__str_1375", 
                "camlNames__of_string_soft_1940", 
                "camlTacinterp__eval_tactic_ist_15920", 
                "camlCArray__last_1443", 
                "camlMap__singleton_1259", 
                "camlGlobal", 
                "camlMap__add_1291", 
                "camlNames", 
                "camlMltop__add_known_module_3856", 
                "camlList__fold_right_1292", 
                "camlNames__44", 
                "camlVars__lift_3730", 
                "camlTacinterp__cast_10828", 
                "camlEvd", 
                "camlTermops", 
                "caml_ml_array_bound_error", 
                "caml_call_gc", 
                "camlPervasives__$5e_1117", 
                "camlList__rev_append_1236", 
                "caml_int_of_string", 
                "__gmon_start__", 
                "camlSet__fun_2940", 
                "camlTerm", 
                "camlTerm__destConst_4649", 
                "camlTacmach__pf_conv_x_4615", 
                "camlConstrintern__construct_reference_5537", 
                "camlTermops__subst_meta_6678", 
                "camlProofview", 
                "caml_alloc2", 
                "_ITM_deregisterTMCloneTable", 
                "camlConstr__mkApp_4803", 
                "camlList__1", 
                "camlTerm__strip_outer_cast_4695", 
                "camlReductionops__is_conv_inner_12022", 
                "camlTerm__lamdec_rec_5424", 
                "camlTacenv__register_ml_tactic_inner_5972", 
                "camlHashtbl__6", 
                "camlGlobal__assert_not_parsing_3775", 
                "caml_young_ptr", 
                "camlArray__iteri_1275", 
                "camlList__length_aux_1204", 
                "camlHashtbl__create_inner_2188", 
                "caml_exn_Not_found", 
                "camlGeninterp", 
                "camlCErrors__anomaly_1311", 
                "camlConstr", 
                "caml_make_array", 
                "camlEnviron__constant_value_in_5886", 
                "camlConstr_matching__matches_6745", 
                "camlConstr__eq_constr_5406"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/Abstract/_coq-native/NCoq_Numbers_Integer_Abstract_ZDivFloor_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/Abstract/.coq-native/NCoq_Numbers_Integer_Abstract_ZDivFloor.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/bin/gallina": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/gallina", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "log1p", 
                "open64", 
                "fcntl", 
                "opendir", 
                "gettimeofday", 
                "tan", 
                "memmove", 
                "system", 
                "getrusage", 
                "tanh", 
                "memcpy", 
                "getenv", 
                "strtod", 
                "realloc", 
                "sigaltstack", 
                "strcmp", 
                "abort", 
                "__xstat64", 
                "__isoc99_sscanf", 
                "fmod", 
                "isatty", 
                "dlerror", 
                "sigaddset", 
                "sigprocmask", 
                "__sigsetjmp", 
                "pow", 
                "fwrite", 
                "log", 
                "fflush", 
                "ldexp", 
                "munmap", 
                "__snprintf_chk", 
                "acos", 
                "lseek64", 
                "close", 
                "__libc_start_main", 
                "chdir", 
                "memcmp", 
                "getpid", 
                "getcwd", 
                "__errno_location", 
                "__vsnprintf_chk", 
                "sin", 
                "read", 
                "fputc", 
                "free", 
                "exit", 
                "memset", 
                "sinh", 
                "__stack_chk_fail", 
                "fputs", 
                "modf", 
                "__memcpy_chk", 
                "__gmon_start__", 
                "dlopen", 
                "getppid", 
                "dlsym", 
                "sqrt", 
                "hypot", 
                "closedir", 
                "sigemptyset", 
                "strtol", 
                "readdir64", 
                "write", 
                "atan2", 
                "expm1", 
                "strerror", 
                "getrlimit64", 
                "secure_getenv", 
                "malloc", 
                "unlink", 
                "cosh", 
                "__fprintf_chk", 
                "fmin", 
                "asin", 
                "sigdelset", 
                "log10", 
                "ceil", 
                "atan", 
                "floor", 
                "strlen", 
                "sigaction", 
                "readlink", 
                "cos", 
                "frexp", 
                "exp", 
                "calloc", 
                "rename"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_Berardi_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_Berardi.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_curry5", 
                "caml_curry3", 
                "camlNativecode__get_sort_6293", 
                "caml_apply2", 
                "camlNativevalues__mk_sort_accu_4950", 
                "caml_young_limit", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Logic", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_curry2", 
                "camlNativecode__get_ind_6309", 
                "caml_apply3", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_match_6305", 
                "camlNativecode__get_name_6297", 
                "camlNativecode__get_const_6301", 
                "caml_call_gc", 
                "camlNativevalues__mk_ind_accu_4947", 
                "caml_curry4"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/extraction/_coq-native/NCoq_extraction_ExtrOcamlBigIntConv_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/extraction/.coq-native/NCoq_extraction_ExtrOcamlBigIntConv.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_allocN", 
                "caml_alloc3", 
                "caml_alloc1", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_call_gc", 
                "camlNativecode__get_match_6305", 
                "caml_young_limit", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__str_decode_5828", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_const_6301", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Numbers_BinNums"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Compat/_coq-native/NCoq_Compat_AdmitAxiom_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Compat/.coq-native/NCoq_Compat_AdmitAxiom.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/extraction/_coq-native/NCoq_extraction_ExtrOcamlBasic_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/extraction/.coq-native/NCoq_extraction_ExtrOcamlBasic.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__gmon_start__", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_ClassicalUniqueChoice_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_ClassicalUniqueChoice.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_const_6301", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_constant_accu_4657"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/micromega/_coq-native/NCoq_micromega_Env_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/micromega/.coq-native/NCoq_micromega_Env.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_call_gc", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__mk_prod_accu_5119", 
                "__cxa_finalize", 
                "__gmon_start__", 
                "camlNCoq_PArith_BinPos__x_add_67_2739", 
                "camlNCoq_PArith_BinPos", 
                "camlNativecode__get_name_6297", 
                "caml_young_limit", 
                "camlNCoq_Numbers_BinNums"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/BigZ/_coq-native/NCoq_Numbers_Integer_BigZ_ZMake_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/BigZ/.coq-native/NCoq_Numbers_Integer_BigZ_ZMake.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Program/_coq-native/NCoq_Program_Subset_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Program/.coq-native/NCoq_Program_Subset.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "caml_call_gc", 
                "caml_young_limit", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Partial_Order_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Partial_Order.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Init_Logic", 
                "camlNativecode__get_const_6301", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_Sets_Ensembles", 
                "caml_curry7", 
                "camlNCoq_Sets_Relations_1", 
                "caml_curry5", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "caml_apply2", 
                "camlNCoq_Sets_Ensembles__const_NCoq_Sets_Ensembles_Ensemble_2654", 
                "camlNCoq_Sets_Relations_1__const_NCoq_Sets_Relations_1_Relation_2654", 
                "caml_curry6", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_curry3", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_call_gc", 
                "caml_young_limit", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__str_decode_5828", 
                "caml_curry2", 
                "camlNativecode__get_match_6305", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_ind_accu_4947", 
                "caml_curry4"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zmax_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zmax.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "__gmon_start__", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rtopology_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rtopology.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Reals_RIneq", 
                "camlNCoq_Reals_Rdefinitions", 
                "__cxa_finalize", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Reals_RList", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rabs_2732", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Reals_Raxioms__x_INR_12_2722", 
                "camlNCoq_Reals_RIneq__const_NCoq_Reals_RIneq_pos_2997", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rminus_2701", 
                "camlNativevalues__mk_constant_accu_4657", 
                "__gmon_start__", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_Reals_Raxioms", 
                "camlNCoq_Init_Peano", 
                "caml_call_gc", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_ind_accu_4947", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_Reals_RList__x_In_33_2743", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "camlNativecode__get_sort_6293", 
                "caml_young_limit", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Logic"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Abstract/_coq-native/NCoq_Numbers_Natural_Abstract_NAdd_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Abstract/.coq-native/NCoq_Numbers_Natural_Abstract_NAdd.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Relations_2_facts_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Relations_2_facts.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "__cxa_finalize", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Wellfounded/_coq-native/NCoq_Wellfounded_Lexicographic_Product_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Wellfounded/.coq-native/NCoq_Wellfounded_Lexicographic_Product.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Init_Wf__const_NCoq_Init_Wf_Acc_inv_2730", 
                "caml_curry3", 
                "caml_curry2", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Wf", 
                "caml_apply3", 
                "caml_curry14", 
                "caml_curry6", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__str_decode_5828", 
                "caml_apply4", 
                "caml_curry8", 
                "caml_curry11", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlNCoq_Logic_Eqdep", 
                "caml_apply5", 
                "caml_curry7", 
                "camlNCoq_Relations_Relation_Operators", 
                "camlNCoq_Init_Datatypes", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_curry9", 
                "camlNCoq_Init_Wf__const_NCoq_Init_Wf_Acc_ind_2709", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_apply2", 
                "caml_apply6", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNCoq_Init_Specif", 
                "caml_curry10", 
                "camlNCoq_Init_Wf__const_NCoq_Init_Wf_well_founded_2736", 
                "caml_curry5", 
                "caml_call_gc", 
                "camlNativecode__get_match_6305", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_young_limit", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/bin/coqc": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/coqc", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "tcgetattr", 
                "abort", 
                "getrusage", 
                "socketpair", 
                "fmin", 
                "sqrt", 
                "localtime", 
                "readlink", 
                "strcmp", 
                "getsockopt", 
                "getegid", 
                "listen", 
                "setitimer", 
                "symlink", 
                "sigsuspend", 
                "inet_pton", 
                "__vsnprintf_chk", 
                "pthread_cond_broadcast", 
                "rename", 
                "log", 
                "tcsetattr", 
                "fwrite", 
                "utimes", 
                "read", 
                "gethostname", 
                "dlsym", 
                "cfgetospeed", 
                "ftruncate64", 
                "__lxstat64", 
                "__sigsetjmp", 
                "cfsetospeed", 
                "setuid", 
                "pthread_getspecific", 
                "shutdown", 
                "memcmp", 
                "memset", 
                "mkfifo", 
                "opendir", 
                "chdir", 
                "dlclose", 
                "fcntl", 
                "cfsetispeed", 
                "setgroups", 
                "mktime", 
                "link", 
                "strnlen", 
                "fputc", 
                "getrlimit64", 
                "getprotobynumber", 
                "sendto", 
                "getppid", 
                "tcsendbreak", 
                "pthread_cond_wait", 
                "__libc_start_main", 
                "secure_getenv", 
                "cosh", 
                "dlerror", 
                "mkdir", 
                "access", 
                "rewinddir", 
                "fchown", 
                "gethostbyname_r", 
                "__errno_location", 
                "calloc", 
                "frexp", 
                "select", 
                "getenv", 
                "truncate64", 
                "time", 
                "geteuid", 
                "pthread_key_create", 
                "__stack_chk_fail", 
                "freeaddrinfo", 
                "getgid", 
                "strtol", 
                "getuid", 
                "pthread_cond_destroy", 
                "__fxstat64", 
                "atan", 
                "__memcpy_chk", 
                "getpwuid", 
                "strlen", 
                "modf", 
                "getgrnam", 
                "setgid", 
                "pthread_join", 
                "gmtime", 
                "tanh", 
                "chown", 
                "execve", 
                "sin", 
                "exit", 
                "wait", 
                "ceil", 
                "log10", 
                "unlink", 
                "hypot", 
                "socket", 
                "initgroups", 
                "fchmod", 
                "atan2", 
                "getaddrinfo", 
                "closedir", 
                "sigfillset", 
                "getcwd", 
                "execvp", 
                "pthread_cond_signal", 
                "exp", 
                "getpeername", 
                "kill", 
                "tcflow", 
                "sigaltstack", 
                "__read_chk", 
                "fork", 
                "waitpid", 
                "sigemptyset", 
                "pipe2", 
                "realloc", 
                "dlopen", 
                "pow", 
                "memcpy", 
                "getlogin", 
                "nanosleep", 
                "pthread_setspecific", 
                "pthread_mutex_lock", 
                "isatty", 
                "pthread_exit", 
                "sigpending", 
                "getservbyname", 
                "fflush", 
                "tan", 
                "__xstat64", 
                "asin", 
                "getpid", 
                "gethostbyaddr_r", 
                "getitimer", 
                "pthread_attr_init", 
                "dup3", 
                "__fprintf_chk", 
                "setsockopt", 
                "pthread_sigmask", 
                "pthread_mutex_destroy", 
                "close", 
                "getprotobyname", 
                "getnameinfo", 
                "inet_ntop", 
                "getservbyport", 
                "bind", 
                "pthread_mutex_unlock", 
                "execv", 
                "sigismember", 
                "free", 
                "pthread_mutex_init", 
                "putenv", 
                "strtod", 
                "sigprocmask", 
                "expm1", 
                "write", 
                "nice", 
                "acos", 
                "sigaction", 
                "send", 
                "getgroups", 
                "pthread_cond_init", 
                "__memmove_chk", 
                "__isoc99_sscanf", 
                "floor", 
                "munmap", 
                "cos", 
                "fputs", 
                "__recv_chk", 
                "strerror", 
                "system", 
                "cfgetispeed", 
                "log1p", 
                "accept4", 
                "sigwait", 
                "gettimeofday", 
                "pthread_attr_setdetachstate", 
                "lseek64", 
                "getgrgid", 
                "setsid", 
                "__longjmp_chk", 
                "getsockname", 
                "fmod", 
                "readdir64", 
                "umask", 
                "__recvfrom_chk", 
                "tcflush", 
                "sigdelset", 
                "malloc", 
                "connect", 
                "mmap64", 
                "ldexp", 
                "chroot", 
                "pthread_mutex_trylock", 
                "tcdrain", 
                "__fdelt_chk", 
                "open64", 
                "memmove", 
                "rmdir", 
                "chmod", 
                "sinh", 
                "sigaddset", 
                "alarm", 
                "getpwnam", 
                "__register_atfork", 
                "__snprintf_chk"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Lists/_coq-native/NCoq_Lists_StreamMemo_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Lists/.coq-native/NCoq_Lists_StreamMemo.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_name_6297", 
                "caml_curry3", 
                "caml_alloc3", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_curry2", 
                "caml_apply3", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Lists_Streams", 
                "camlNativecode__get_const_6301", 
                "caml_young_limit", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Datatypes", 
                "caml_curry5", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_curry4", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Lists_Streams__const_NCoq_Lists_Streams_tl_2681", 
                "camlNativevalues__upd_cofix_5194", 
                "camlNCoq_Init_Specif", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_call_gc", 
                "camlNativecode__get_value_6218", 
                "camlNativevalues__mk_cofix_accu_5190", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_Lists_Streams__const_NCoq_Lists_Streams_hd_2669", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "caml_apply2"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Relations_2_facts_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Relations_2_facts.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_const_6301", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_Ring_polynom_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_Ring_polynom.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_pred_2786", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_add_2702", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_setoid_ring_BinList__const_NCoq_setoid_ring_BinList_jump_2682", 
                "caml_young_limit", 
                "camlNCoq_ZArith_BinInt", 
                "__cxa_finalize", 
                "camlNCoq_Lists_List__const_NCoq_Lists_List_hd_2662", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Classes_Morphisms", 
                "camlNCoq_PArith_BinPos__x_pred_double_137_2778", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_pow_pos_2687", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_setoid_ring_BinList__const_NCoq_setoid_ring_BinList_nth_2713", 
                "camlNativevalues__is_accu_5182", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_PArith_BinPos", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_ZArith_BinInt__x_pos_sub_42_2722", 
                "__gmon_start__", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativecode__get_name_6297", 
                "_ITM_registerTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_call_gc", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_sub_2974", 
                "camlNCoq_Lists_List__const_NCoq_Lists_List_tl_2685", 
                "camlNCoq_PArith_BinPos__x_add_67_2739", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_snd_3023", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Logic"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/_coq-native/NCoq_Numbers_NaryFunctions_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/.coq-native/NCoq_Numbers_NaryFunctions.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_curry3", 
                "caml_apply6", 
                "caml_apply4", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Lists_List__const_NCoq_Lists_List_fold_right_3427", 
                "caml_curry2", 
                "caml_apply2", 
                "camlNCoq_Init_Datatypes", 
                "caml_curry5", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_length_3112", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_alloc3", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_call_gc", 
                "camlNativevalues__mk_sort_accu_4950", 
                "caml_curry6", 
                "caml_apply5", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_sort_6293", 
                "caml_young_limit", 
                "caml_curry4"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_BinIntDef_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_BinIntDef.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_div2_up_3063", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_PArith_BinPos__x_eqb_445_3384", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_div2_3055", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_pred_N_2796", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_succ_pos_2689", 
                "camlNCoq_NArith_BinNat__x_pos_div_eucl_194_3842", 
                "caml_curry4", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_sqrt_3465", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_gcd_3532", 
                "camlNCoq_NArith_BinNat__x_ldiff_298_3996", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_lxor_4011", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_PArith_BinPos__x_size_371_3096", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_alloc3", 
                "camlNCoq_Numbers_BinNums", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_CompOpp_3174", 
                "camlNCoq_PArith_BinPos__x_mul_313_2995", 
                "caml_young_limit", 
                "camlNativevalues__is_accu_5182", 
                "camlNCoq_PArith_BinPos__x_square_343_3047", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_PArith_BinPos__x_lxor_762_3811", 
                "camlNCoq_PArith_BinPos__x_land_704_3743", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_lor_3958", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_snd_3023", 
                "camlNCoq_PArith_BinPos__x_of_succ_nat_874_3979", 
                "camlNCoq_PArith_BinPos__x_sqrtrem_494_3457", 
                "camlNCoq_PArith_BinPos__x_pred_double_137_2778", 
                "camlNCoq_PArith_BinPos", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "caml_call_gc", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_testbit_4055", 
                "caml_apply2", 
                "caml_curry3", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_ggcd_3662", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_PArith_BinPos__x_lor_676_3705", 
                "caml_curry2", 
                "camlNCoq_PArith_BinPos__x_testbit_832_3913", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_to_nat_3949", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_iter_3024", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_PArith_BinPos__x_ldiff_734_3780"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_PeanoNat_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_PeanoNat.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativecode__get_match_6305", 
                "__cxa_finalize", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_CompSpec2Type_3465", 
                "caml_alloc3", 
                "camlNCoq_Init_Nat__x_sub_45_2728", 
                "camlNCoq_Init_Peano__const_NCoq_Init_Peano_lt_2785", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rec_2894", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_andb_2713", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_snd_3023", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "camlNCoq_Init_Wf", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "caml_allocN", 
                "camlNCoq_Bool_Bool__const_NCoq_Bool_Bool_iff_reflect_3024", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_relation_equivalence_3279", 
                "caml_alloc1", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "camlNCoq_Classes_Morphisms", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_rect_2887", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "camlNCoq_Classes_Morphisms_Prop", 
                "caml_call_gc", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_Relations_Relation_Definitions__const_NCoq_Relations_Relation_Definitions_relation_2654", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Wf__const_NCoq_Init_Wf_well_founded_2736", 
                "camlNCoq_Program_Basics", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rect_2885", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_PER_2889", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_equivalence_2978", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Nat", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "camlNCoq_Init_Nat__x_mul_27_2706", 
                "camlNativecode__get_const_6301"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FSets_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FSets.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/NatInt/_coq-native/NCoq_Numbers_NatInt_NZAddOrder_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/NatInt/.coq-native/NCoq_Numbers_NatInt_NZAddOrder.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sorting/_coq-native/NCoq_Sorting_Sorting_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Sorting/.coq-native/NCoq_Sorting_Sorting.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Relations_1_facts_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Relations_1_facts.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_curry4", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNativecode__get_const_6301", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828", 
                "caml_apply2"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zpower_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zpower.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_iter_3024", 
                "camlNCoq_ZArith_BinInt", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rect_2885", 
                "caml_call_gc", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_opp_2764", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Datatypes", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_value_6218", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_mul_2790", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_sw_accu_5114", 
                "__cxa_finalize", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/Abstract/_coq-native/NCoq_Numbers_Integer_Abstract_ZBits_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/Abstract/.coq-native/NCoq_Numbers_Integer_Abstract_ZBits.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/NArith/_coq-native/NCoq_NArith_Nsqrt_def_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/NArith/.coq-native/NCoq_NArith_Nsqrt_def.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_FunctionalExtensionality_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_FunctionalExtensionality.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_const_6301", 
                "caml_call_gc", 
                "__gmon_start__", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Logic", 
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_young_limit", 
                "camlNativevalues__str_decode_5828", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Structures/_coq-native/NCoq_Structures_DecidableType_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Structures/.coq-native/NCoq_Structures_DecidableType.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301", 
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "camlNativevalues__mk_constant_accu_4657"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/Abstract/_coq-native/NCoq_Numbers_Integer_Abstract_ZSgnAbs_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/Abstract/.coq-native/NCoq_Numbers_Integer_Abstract_ZSgnAbs.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Abstract/_coq-native/NCoq_Numbers_Natural_Abstract_NSub_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Abstract/.coq-native/NCoq_Numbers_Natural_Abstract_NSub.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "camlNativevalues__str_decode_5828", 
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Program/_coq-native/NCoq_Program_Utils_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Program/.coq-native/NCoq_Program_Utils.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Structures/_coq-native/NCoq_Structures_OrdersEx_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Structures/.coq-native/NCoq_Structures_OrdersEx.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "caml_alloc3", 
                "camlNCoq_PArith_BinPos__x_land_704_3743", 
                "camlNCoq_Init_Nat__x_mul_27_2706", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_succ_pos_2689", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_land_3971", 
                "caml_call_gc", 
                "camlNCoq_NArith_BinNat__x_pos_div_eucl_194_3842", 
                "caml_alloc1", 
                "camlNCoq_Classes_Morphisms_Prop", 
                "camlNCoq_Numbers_BinNums__const_NCoq_Numbers_BinNums_positive_rect_2699", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_to_nat_3949", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_Reflexive_2972", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Init_Wf", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_lor_3958", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "camlNCoq_PArith_BinPos__x_pred_double_137_2778", 
                "camlNCoq_PArith_BinPos__x_size_nat_362_3082", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_CompSpec2Type_3465", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlNCoq_Init_Peano", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rec_2894", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "camlNCoq_Numbers_BinNums", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Init_Nat", 
                "camlNCoq_Init_Wf__const_NCoq_Init_Wf_well_founded_2736", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_PER_2889", 
                "camlNCoq_PArith_BinPos__x_testbit_832_3913", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_sumbool_rec_2969", 
                "__cxa_finalize", 
                "camlNCoq_PArith_BinPos__x_succ_8_2676", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_pow_3032", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_sqrt_3465", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Numbers_BinNums__const_NCoq_Numbers_BinNums_positive_rec_2710", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_lxor_4011", 
                "camlNCoq_Init_Nat__x_sub_45_2728", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_div2_up_3063", 
                "camlNCoq_PArith_BinPos", 
                "caml_young_limit", 
                "camlNCoq_PArith_BinPos__x_mul_313_2995", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_relation_equivalence_3279", 
                "camlNCoq_Arith_PeanoNat", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNCoq_PArith_BinPos__x_square_343_3047", 
                "camlNCoq_PArith_BinPos__x_eqb_445_3384", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNCoq_Init_Peano__const_NCoq_Init_Peano_lt_2785", 
                "camlNCoq_Classes_Morphisms", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_andb_2713", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_CompOpp_3174", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_PArith_BinPos__x_size_371_3096", 
                "camlNCoq_ZArith_BinInt", 
                "camlNCoq_PArith_BinPos__x_lor_676_3705", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_PArith_BinPos__x_ldiff_734_3780", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_iter_3024", 
                "camlNCoq_PArith_BinPos__x_of_succ_nat_874_3979", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_eq_dec_4107", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_div2_3055", 
                "camlNCoq_Bool_Bool__const_NCoq_Bool_Bool_iff_reflect_3024", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "__gmon_start__", 
                "camlNCoq_PArith_BinPos__x_sqrtrem_494_3457", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_PArith_BinPos__x_lxor_762_3811", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_rect_2887", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Numbers_BinNums__const_NCoq_Numbers_BinNums_Z_rec_2765", 
                "camlNCoq_Relations_Relation_Definitions__const_NCoq_Relations_Relation_Definitions_relation_2654", 
                "camlNCoq_Program_Basics", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_snd_3023", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_testbit_4055", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_gcd_3532", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_equivalence_2978", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativecode__get_match_6305", 
                "caml_allocN", 
                "camlNCoq_PArith_BinPos__x_add_67_2739", 
                "camlNCoq_PArith_BinPos__x_sub_mask_239_2946", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_PArith_BinPos__x_testbit_nat_807_3876", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_pred_N_2796", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_Numbers_BinNums__const_NCoq_Numbers_BinNums_N_rec_2734", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rect_2885", 
                "camlNCoq_NArith_BinNat", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_ggcd_3662", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_PArith_BinPos__x_peano_rect_1003_4250", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_shiftl_3832"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Binary/_coq-native/NCoq_Numbers_Natural_Binary_NBinary_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Binary/.coq-native/NCoq_Numbers_Natural_Binary_NBinary.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_PArith_BinPos__x_add_67_2739", 
                "camlNCoq_PArith_BinPos__x_mul_313_2995", 
                "caml_alloc1", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_PER_2889", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_pred_N_2796", 
                "camlNCoq_PArith_BinPos__x_lxor_762_3811", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_iter_3024", 
                "camlNCoq_PArith_BinPos__x_size_nat_362_3082", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_Reflexive_2972", 
                "camlNCoq_PArith_BinPos__x_sub_mask_239_2946", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_sumbool_rec_2969", 
                "caml_curry4", 
                "camlNCoq_Numbers_BinNums__const_NCoq_Numbers_BinNums_positive_rect_2699", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "caml_alloc3", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "caml_apply5", 
                "caml_curry3", 
                "caml_apply10", 
                "camlNCoq_PArith_BinPos__x_testbit_nat_807_3876", 
                "camlNCoq_Init_Specif", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Numbers_BinNums__const_NCoq_Numbers_BinNums_N_rec_2734", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_relation_equivalence_3279", 
                "camlNCoq_Relations_Relation_Definitions__const_NCoq_Relations_Relation_Definitions_relation_2654", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "caml_curry7", 
                "camlNCoq_PArith_BinPos__x_of_succ_nat_874_3979", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Wf", 
                "caml_apply8", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_shiftl_3832", 
                "camlNCoq_PArith_BinPos__x_land_704_3743", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_snd_3023", 
                "camlNCoq_PArith_BinPos__x_square_343_3047", 
                "camlNCoq_NArith_BinNat", 
                "camlNCoq_Classes_Morphisms_Prop", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_to_nat_3949", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rect_2885", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_rect_2887", 
                "camlNCoq_PArith_BinPos__x_peano_rect_1003_4250", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_ggcd_3662", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_CompSpec2Type_3465", 
                "camlNCoq_Init_Wf__const_NCoq_Init_Wf_well_founded_2736", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "caml_apply3", 
                "camlNCoq_PArith_BinPos__x_ldiff_734_3780", 
                "caml_curry6", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_gcd_3532", 
                "caml_call_gc", 
                "camlNCoq_PArith_BinPos__x_sqrtrem_494_3457", 
                "caml_apply2", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_pow_3032", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_sqrt_3465", 
                "camlNCoq_PArith_BinPos__x_succ_8_2676", 
                "camlNCoq_Numbers_BinNums", 
                "caml_young_limit", 
                "caml_apply4", 
                "caml_apply11", 
                "camlNCoq_Bool_Bool__const_NCoq_Bool_Bool_iff_reflect_3024", 
                "camlNativecode__get_name_6297", 
                "caml_allocN", 
                "camlNCoq_PArith_BinPos__x_eqb_445_3384", 
                "camlNCoq_Classes_Morphisms", 
                "camlNCoq_PArith_BinPos__x_testbit_832_3913", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_PArith_BinPos__x_size_371_3096", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_curry5", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_eq_dec_4107", 
                "camlNCoq_Program_Basics", 
                "caml_curry2", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNCoq_PArith_BinPos", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlNativecode__get_sort_6293"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rseries_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rseries.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Reals_Rdefinitions", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rle_2695", 
                "camlNativecode__get_match_6305", 
                "caml_alloc1", 
                "camlNCoq_Init_Peano", 
                "__gmon_start__", 
                "caml_young_limit", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rabs_2732", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rmax_2709", 
                "caml_call_gc", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__str_decode_5828", 
                "__cxa_finalize", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Reals_Rfunctions__const_NCoq_Reals_Rfunctions_infinite_sum_2823", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rminus_2701", 
                "camlNCoq_Reals_Rpow_def__x_pow_10_2677", 
                "camlNCoq_Init_Datatypes"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_Div2_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_Div2.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Arith_PeanoNat__x_div2_277_3057", 
                "camlNCoq_Arith_PeanoNat", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_const_6301", 
                "caml_apply2", 
                "caml_young_limit", 
                "caml_call_gc", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_constant_accu_4657"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_ClassicalDescription_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_ClassicalDescription.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_proj1_sig_2802", 
                "camlNCoq_Init_Logic", 
                "caml_curry3", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_proj2_sig_2816", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__str_decode_5828", 
                "caml_apply2", 
                "camlNativecode__get_const_6301", 
                "caml_young_limit", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_name_6297", 
                "caml_call_gc", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Abstract/_coq-native/NCoq_Numbers_Natural_Abstract_NAxioms_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Abstract/.coq-native/NCoq_Numbers_Natural_Abstract_NAxioms.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_curry2", 
                "caml_call_gc", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_young_limit"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Rational/SpecViaQ/_coq-native/NCoq_Numbers_Rational_SpecViaQ_QSig_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Rational/SpecViaQ/.coq-native/NCoq_Numbers_Rational_SpecViaQ_QSig.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qeq_2679", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__gmon_start__", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qle_2682", 
                "camlNativecode__get_const_6301", 
                "caml_young_limit", 
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize", 
                "camlNativevalues__mk_constant_accu_4657"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_Ncring_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_Ncring.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "caml_call_gc", 
                "camlNCoq_Classes_RelationClasses", 
                "camlNativecode__get_match_6305", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Classes_Morphisms", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_const_6301", 
                "__gmon_start__", 
                "__cxa_finalize", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_young_limit"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/extraction/_coq-native/NCoq_extraction_ExtrOcamlZInt_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/extraction/.coq-native/NCoq_extraction_ExtrOcamlZInt.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/micromega/_coq-native/NCoq_micromega_VarMap_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/micromega/.coq-native/NCoq_micromega_VarMap.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_fix_accu_5185", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_apply2", 
                "caml_call_gc", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_young_limit", 
                "caml_curry4", 
                "caml_apply3", 
                "camlNativecode__get_match_6305", 
                "caml_curry2", 
                "caml_curry3", 
                "caml_curry5", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativevalues__str_decode_5828", 
                "caml_curry6", 
                "caml_curry7", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_name_6297", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zsqrt_compat_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zsqrt_compat.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Logic_Decidable", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_Zopp_mult_distr_r_2812", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_Zred_factor4_2848", 
                "caml_apply3", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Zne_6554", 
                "caml_apply4", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_Zopp_eq_mult_neg_1_2794", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_pow_2805", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_Zmult_comm_2798", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_Zred_factor3_2843", 
                "camlNCoq_setoid_ring_Ring_tac", 
                "camlNCoq_ZArith_Zorder", 
                "camlNCoq_ZArith_ZArith_dec__const_NCoq_ZArith_ZArith_dec_Z_le_gt_dec_3119", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "caml_apply5", 
                "caml_alloc3", 
                "camlNativecode__get_name_6297", 
                "caml_curry2", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_Zred_factor6_2859", 
                "camlNativecode__get_const_6301", 
                "caml_apply2", 
                "caml_curry3", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_Zplus_comm_2711", 
                "caml_call_gc", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNCoq_omega_OmegaLemmas", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_rec_2685", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_OMEGA15_2760", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_mul_2790", 
                "caml_apply7", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_opp_2764", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_Zmult_assoc_reverse_2828", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_Zmult_plus_distr_l_2817", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_Zplus_assoc_reverse_2716", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_Zred_factor0_2790", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_or_ind_2779", 
                "camlNCoq_ZArith_BinInt", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_Zopp_plus_distr_2803", 
                "caml_curry4", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_OMEGA14_2783", 
                "camlNCoq_Init_Specif", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_Zred_factor5_2854", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_young_limit", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_and_ind_2720", 
                "camlNCoq_ZArith_auxiliary", 
                "caml_apply6", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_OMEGA11_2744", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_Zplus_permute_2728", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_OMEGA13_2776", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_setoid_ring_ZArithRing", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_le_4426", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_ex_ind_2830", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_Zplus_assoc_2722", 
                "caml_curry6", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lt_4420", 
                "caml_curry5", 
                "camlNativevalues__mk_sw_accu_5114"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/PArith/_coq-native/NCoq_PArith_POrderedType_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/PArith/.coq-native/NCoq_PArith_POrderedType.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "caml_curry2", 
                "camlNCoq_Bool_Bool__const_NCoq_Bool_Bool_iff_reflect_3024", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_Init_Logic", 
                "caml_apply5", 
                "camlNativevalues__is_accu_5182", 
                "caml_allocN", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Classes_Morphisms", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rect_2885", 
                "caml_apply4", 
                "caml_alloc3", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_rect_2887", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_curry7", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "caml_alloc1", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_CompSpec2Type_3465", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_name_6297", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "caml_apply3", 
                "caml_apply2", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_equivalence_2978", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Numbers_BinNums", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_call_gc", 
                "camlNCoq_PArith_BinPos", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlNCoq_Init_Datatypes", 
                "caml_curry5", 
                "caml_curry6", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativecode__get_ind_6309", 
                "caml_apply10", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "caml_young_limit", 
                "caml_curry3", 
                "caml_curry4", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_sumbool_rec_2969", 
                "camlNCoq_Numbers_BinNums__const_NCoq_Numbers_BinNums_positive_rec_2710", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_PER_2889", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_curry8", 
                "camlNCoq_Init_Nat"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_ZArith_base_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_ZArith_base.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Structures/_coq-native/NCoq_Structures_OrdersAlt_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Structures/.coq-native/NCoq_Structures_OrdersAlt.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/rtauto/rtauto_plugin_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/rtauto/rtauto_plugin.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "caml_c_call", 
                "caml_call_gc", 
                "camlTermops", 
                "camlPp__3", 
                "caml_alloc1", 
                "_ITM_registerTMCloneTable", 
                "camlCClosure__mk_clos_6202", 
                "camlList__fold_right_1292", 
                "camlConstr__mkApp_4803", 
                "camlTactics__exact_no_check_15949", 
                "camlMltop__declare_cache_obj_3915", 
                "camlList__length_aux_1204", 
                "camlList__fold_left_1286", 
                "camlSet__mem_1368", 
                "camlSet__singleton_1291", 
                "camlList__exists_1350", 
                "caml_raise_exn", 
                "camlLoc__3", 
                "caml_ml_array_bound_error", 
                "__cxa_finalize", 
                "camlCoqlib", 
                "camlPp__glue_1211", 
                "camlCoqlib__coq_constant_5305", 
                "camlPp__str_1375", 
                "caml_alloc3", 
                "camlMltop__add_known_module_3856", 
                "camlCClosure__norm_val_6744", 
                "camlPp__25", 
                "camlCClosure", 
                "caml_alloc2", 
                "camlList__iter_1272", 
                "caml_make_array", 
                "caml_young_ptr", 
                "camlNames__of_string_1937", 
                "camlSet__union_1384", 
                "camlFeedback", 
                "camlRetyping__get_sort_family_of_inner_6880", 
                "camlTermops__dependent_main_6634", 
                "camlProofview__of_tactic_6689", 
                "camlList__find_1427", 
                "camlNames__equal_3394", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlExplore__fun_1517", 
                "camlCClosure__59", 
                "caml_fresh_oo_id", 
                "camlCErrors__anomaly_1311", 
                "camlEvd__evar_filtered_hyps_5542", 
                "camlTerm", 
                "camlMap__add_1291", 
                "camlGoptions__declare_option_3583", 
                "camlCMap__fun_2503", 
                "camlControl__check_for_interrupt_1300", 
                "camlConstr__mkRel_4620", 
                "camlGoptions", 
                "camlMap__iter_1434", 
                "camlSet__add_1282", 
                "camlEvd__find_6390", 
                "caml_allocN", 
                "camlPp__hv_1646", 
                "camlConstr__18", 
                "camlTactics__exact_check_15952", 
                "camlTacenv__register_ltac_5535", 
                "camlTacinterp", 
                "caml_modify", 
                "camlConstr", 
                "camlPp__8", 
                "camlSet__diff_1412", 
                "camlList__rev_append_1236", 
                "camlProofview__tactic_6596", 
                "caml_young_limit", 
                "camlMap__remove_1424", 
                "camlList__rev_map_1264", 
                "camlCClosure__whd_val_6741", 
                "camlRefiner__pf_env_2311", 
                "camlTerm__destInd_4659", 
                "camlSet__cardinal_1505", 
                "caml_int_compare", 
                "camlPervasives__string_of_int_1150", 
                "camlSystem__get_time_3232", 
                "camlCList__map_1515", 
                "camlCClosure__create_clos_infos_6755", 
                "camlPp__vb_1656", 
                "caml_backtrace_pos", 
                "camlArray__of_list_1294", 
                "camlSystem__fmt_time_difference_3450", 
                "camlPp__v_1643", 
                "camlMap__find_1303", 
                "camlSet__exists_1479", 
                "camlCErrors__errorlabstrm_1338", 
                "camlInt", 
                "__gmon_start__", 
                "caml_exn_Not_found", 
                "camlConstr__eq_constr_5406"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Structures/_coq-native/NCoq_Structures_OrderedTypeAlt_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Structures/.coq-native/NCoq_Structures_OrderedTypeAlt.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/extraction/_coq-native/NCoq_extraction_ExtrHaskellBasic_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/extraction/.coq-native/NCoq_extraction_ExtrHaskellBasic.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/micromega/_coq-native/NCoq_micromega_RMicromega_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/micromega/.coq-native/NCoq_micromega_RMicromega.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qeq_bool_2735", 
                "caml_curry3", 
                "camlNCoq_micromega_RingMicromega", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_map_Formula_4548", 
                "caml_apply3", 
                "camlNCoq_QArith_QArith_base", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_eval_formula_4220", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_nformula_plus_nformula_3463", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_check_inconsistent_4051", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_cnf_negate_4442", 
                "camlNCoq_micromega_Tauto__const_NCoq_micromega_Tauto_tauto_checker_3468", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qinv_2766", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qmult_2751", 
                "caml_apply4", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_micromega_Tauto__x_map_bformula_101_2902", 
                "camlNativecode__get_sort_6293", 
                "caml_call_gc", 
                "caml_curry12", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_sort_accu_4950", 
                "caml_apply2", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_cnf_normalise_4388", 
                "caml_alloc3", 
                "caml_young_limit", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_NFormula_3132", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_eval_sformula_4588", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rminus_2701", 
                "camlNCoq_Init_Datatypes", 
                "caml_curry10", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qden_2674", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qopp_2754", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qplus_2748", 
                "caml_alloc1", 
                "camlNCoq_NArith_BinNat", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_check_normalised_formulas_4068", 
                "camlNCoq_micromega_RingMicromega__const_NCoq_micromega_RingMicromega_eval_nformula_3176", 
                "camlNCoq_Reals_Raxioms__const_NCoq_Reals_Raxioms_IZR_2729", 
                "caml_curry9", 
                "camlNativecode__get_const_6301", 
                "caml_allocN", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_micromega_EnvRing__const_NCoq_micromega_EnvRing_PEeval_4995", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Reals_Rpow_def", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_ind_accu_4947"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sorting/_coq-native/NCoq_Sorting_PermutEq_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Sorting/.coq-native/NCoq_Sorting_PermutEq.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Rational/BigQ/_coq-native/NCoq_Numbers_Rational_BigQ_BigQ_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Rational/BigQ/.coq-native/NCoq_Numbers_Rational_BigQ_BigQ.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_CompSpec2Type_3465", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qopp_2754", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Numbers_Integer_BigZ_BigZ__const_NCoq_Numbers_Integer_BigZ_BigZ_BigZ_opp_3039", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qcompare_2718", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qlt_2685", 
                "camlNCoq_Numbers_Natural_BigN_BigN", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qplus_2748", 
                "camlNCoq_Numbers_Integer_BigZ_BigZ__const_NCoq_Numbers_Integer_BigZ_BigZ_BigZ_of_Z_2695", 
                "caml_call_gc", 
                "camlNCoq_Numbers_Integer_BigZ_BigZ__const_NCoq_Numbers_Integer_BigZ_BigZ_BigZ_to_N_3028", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNativevalues__mk_sw_accu_5114", 
                "__gmon_start__", 
                "camlNCoq_Numbers_Natural_BigN_BigN__x_pow_pos_4249_8800", 
                "camlNCoq_Numbers_Integer_BigZ_BigZ__const_NCoq_Numbers_Integer_BigZ_BigZ_BigZ_mul_3145", 
                "camlNCoq_QArith_QArith_base", 
                "caml_young_limit", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "camlNCoq_QArith_Qcanon__const_NCoq_QArith_Qcanon_this_2666", 
                "camlNCoq_Numbers_Integer_BigZ_BigZ__const_NCoq_Numbers_Integer_BigZ_BigZ_BigZ_pow_pos_3175", 
                "camlNCoq_Numbers_Natural_BigN_BigN__const_NCoq_Numbers_Natural_BigN_BigN_BigN_eqb_6871", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qpower_2872", 
                "__cxa_finalize", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Numbers_Integer_BigZ_BigZ__const_NCoq_Numbers_Integer_BigZ_BigZ_BigZ_div_eucl_3259", 
                "camlNCoq_QArith_Qcanon__const_NCoq_QArith_Qcanon_Q2Qc_2712", 
                "camlNCoq_Numbers_Natural_BigN_BigN__const_NCoq_Numbers_Natural_BigN_BigN_BigN_of_N_8988", 
                "camlNativecode__get_const_6301", 
                "caml_allocN", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_QArith_QOrderedType", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Numbers_Integer_BigZ_BigZ__const_NCoq_Numbers_Integer_BigZ_BigZ_BigZ_square_3159", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qmult_2751", 
                "camlNCoq_QArith_Qminmax", 
                "camlNCoq_Classes_Morphisms", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qeq_2679", 
                "camlNCoq_Numbers_Integer_BigZ_BigZ__const_NCoq_Numbers_Integer_BigZ_BigZ_BigZ_to_Z_2705", 
                "camlNCoq_Numbers_Integer_BigZ_BigZ__const_NCoq_Numbers_Integer_BigZ_BigZ_BigZ_compare_2963", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qle_2682", 
                "camlNCoq_Numbers_Natural_BigN_BigN__const_NCoq_Numbers_Natural_BigN_BigN_BigN_gcd_8945", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Numbers_Natural_BigN_BigN__const_NCoq_Numbers_Natural_BigN_BigN_BigN_div_eucl_8215", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qeq_bool_2735", 
                "camlNCoq_Numbers_Integer_BigZ_BigZ__const_NCoq_Numbers_Integer_BigZ_BigZ_BigZ_eqb_2979", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qinv_2766", 
                "_ITM_deregisterTMCloneTable", 
                "caml_alloc3", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_Numbers_Integer_BigZ_BigZ", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_to_pos_3201", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_Transitive_2976", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Numbers_Integer_BigZ_BigZ__const_NCoq_Numbers_Integer_BigZ_BigZ_BigZ_add_3080", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_PER_2889", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Cyclic/Int31/_coq-native/NCoq_Numbers_Cyclic_Int31_Ring31_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Cyclic/Int31/.coq-native/NCoq_Numbers_Cyclic_Int31_Ring31.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_match_6305", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_to_Z_2739", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Numbers_Cyclic_Int31_Cyclic31", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "__gmon_start__", 
                "caml_call_gc", 
                "camlNCoq_Init_Datatypes", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_young_limit", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Numbers_BinNums"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Abstract/_coq-native/NCoq_Numbers_Natural_Abstract_NOrder_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Abstract/.coq-native/NCoq_Numbers_Natural_Abstract_NOrder.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Program/_coq-native/NCoq_Program_Equality_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Program/.coq-native/NCoq_Program_Equality.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativecode__get_name_6297", 
                "caml_call_gc", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativevalues__str_decode_5828", 
                "__cxa_finalize", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Logic_Eqdep", 
                "camlNativecode__get_match_6305", 
                "_ITM_registerTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNativecode__get_sort_6293", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_rect_r_2969", 
                "camlNCoq_Init_Specif", 
                "caml_young_limit", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__mk_sort_accu_4950"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/NArith/_coq-native/NCoq_NArith_Nnat_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/NArith/.coq-native/NCoq_NArith_Nnat.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Structures/_coq-native/NCoq_Structures_DecidableType_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Structures/.coq-native/NCoq_Structures_DecidableType.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_constant_accu_4657"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Init/_coq-native/NCoq_Init_Datatypes_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Init/.coq-native/NCoq_Init_Datatypes.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_prod_accu_5119", 
                "__cxa_finalize", 
                "camlNativecode__get_sort_6293", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "caml_young_limit", 
                "caml_alloc1", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "caml_call_gc", 
                "camlNativecode__get_match_6305", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_sw_accu_5114"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_Wf_nat_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_Wf_nat.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Wf__const_NCoq_Init_Wf_well_founded_induction_2750", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__str_decode_5828", 
                "caml_apply3", 
                "camlNCoq_Arith_Lt", 
                "caml_curry3", 
                "caml_alloc1", 
                "caml_call_gc", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_unique_3379", 
                "caml_curry5", 
                "caml_young_limit", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_rec_2685", 
                "caml_curry2", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Arith_PeanoNat", 
                "caml_curry4", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_ind_2892", 
                "caml_apply5", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rect_2885", 
                "camlNCoq_Init_Peano__const_NCoq_Init_Peano_lt_2785", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNCoq_Init_Wf", 
                "caml_apply2", 
                "camlNativecode__get_name_6297"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_Ring_tac_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_Ring_tac.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "__gmon_start__", 
                "camlNativecode__get_value_6218", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "caml_alloc1", 
                "camlNCoq_Init_Nat__x_mul_27_2706"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/NatInt/_coq-native/NCoq_Numbers_NatInt_NZSqrt_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/NatInt/.coq-native/NCoq_Numbers_NatInt_NZSqrt.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/NatInt/_coq-native/NCoq_Numbers_NatInt_NZAddOrder_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/NatInt/.coq-native/NCoq_Numbers_NatInt_NZAddOrder.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "__cxa_finalize", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zdiv_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zdiv.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_le_4426", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lt_4420", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_sgn_2874", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_modulo_3338", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Numbers_BinNums", 
                "caml_apply2", 
                "camlNativecode__get_value_6218", 
                "caml_alloc3", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_opp_2764", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "caml_call_gc", 
                "caml_young_limit", 
                "camlNCoq_Init_Logic", 
                "caml_apply3", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_leb_3074", 
                "camlNativecode__get_const_6301", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_abs_3148", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_curry3", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_mul_2790", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_curry2", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751", 
                "camlNativevalues__mk_constant_accu_4657"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/extraction/_coq-native/NCoq_extraction_ExtrHaskellZInt_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/extraction/.coq-native/NCoq_extraction_ExtrHaskellZInt.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Classes/_coq-native/NCoq_Classes_EquivDec_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Classes/.coq-native/NCoq_Classes_EquivDec.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "camlNativecode__get_value_6218", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_young_limit", 
                "camlNCoq_Logic_Decidable__const_NCoq_Logic_Decidable_decidable_2654", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_and_ind_2720", 
                "camlNCoq_Arith_PeanoNat", 
                "__gmon_start__", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_call_gc", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_complement_2669", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNCoq_Init_Specif", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_equivalence_2978", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlNativecode__get_match_6305", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Bool_Bool", 
                "camlNCoq_Init_Datatypes"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_Algebra_syntax_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_Algebra_syntax.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "caml_call_gc", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_sort_6293", 
                "camlNativecode__get_name_6297", 
                "caml_young_limit", 
                "camlNativevalues__mk_sort_accu_4950", 
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Cyclic/DoubleCyclic/_coq-native/NCoq_Numbers_Cyclic_DoubleCyclic_DoubleDiv_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Cyclic/DoubleCyclic/.coq-native/NCoq_Numbers_Cyclic_DoubleCyclic_DoubleDiv.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_call_gc", 
                "caml_curry20", 
                "caml_curry23", 
                "caml_curry26", 
                "caml_curry3", 
                "camlNCoq_Numbers_BinNums", 
                "caml_curry10", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_curry5", 
                "caml_curry22", 
                "caml_curry6", 
                "caml_apply5", 
                "caml_curry8", 
                "caml_curry19", 
                "camlNativecode__get_const_6301", 
                "camlNativecode__get_match_6305", 
                "caml_curry24", 
                "camlNCoq_Init_Datatypes", 
                "caml_apply6", 
                "caml_curry25", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleAdd__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleAdd_ww_add_c_cont_2826", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleDivn1__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleDivn1_high_3074", 
                "caml_curry21", 
                "caml_curry2", 
                "caml_apply2", 
                "caml_young_limit", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType", 
                "caml_curry13", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_apply3", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__is_accu_5182", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType__x_word_67_2796", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_curry12", 
                "caml_curry7", 
                "caml_curry11", 
                "caml_curry9", 
                "caml_apply4", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_curry4", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Init/_coq-native/NCoq_Init_Datatypes_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Init/.coq-native/NCoq_Init_Datatypes.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_curry6", 
                "camlNativevalues__mk_ind_accu_4947", 
                "caml_curry4", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "caml_curry7", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativecode__get_ind_6309", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_sort_accu_4950", 
                "caml_apply3", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_apply2", 
                "caml_curry9", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_curry3", 
                "caml_apply4", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_match_6305", 
                "caml_alloc1", 
                "camlNativecode__get_name_6297", 
                "camlNativecode__get_sort_6293", 
                "camlNativecode__get_const_6301", 
                "caml_call_gc", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "caml_young_limit"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/Abstract/_coq-native/NCoq_Numbers_Integer_Abstract_ZAxioms_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/Abstract/.coq-native/NCoq_Numbers_Integer_Abstract_ZAxioms.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_young_limit", 
                "__gmon_start__", 
                "camlNCoq_Init_Logic", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "caml_call_gc"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/dllcoqrun_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/dllcoqrun.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "caml_minor_collection", 
                "caml_initialize", 
                "memmove", 
                "caml_atom_table", 
                "caml_pending_signals", 
                "caml_signals_are_pending", 
                "caml_process_pending_signals", 
                "fwrite", 
                "caml_raise_out_of_memory", 
                "__cxa_finalize", 
                "__gmon_start__", 
                "caml_young_limit", 
                "malloc", 
                "caml_alloc_shr", 
                "caml_scan_roots_hook", 
                "caml_failwith", 
                "free", 
                "caml_young_ptr", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/Abstract/_coq-native/NCoq_Numbers_Integer_Abstract_ZDivTrunc_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/Abstract/.coq-native/NCoq_Numbers_Integer_Abstract_ZDivTrunc.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/BigN/_coq-native/NCoq_Numbers_Natural_BigN_NMake_gen_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/BigN/.coq-native/NCoq_Numbers_Natural_BigN_NMake_gen.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "__gmon_start__", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/SpecViaZ/_coq-native/NCoq_Numbers_Integer_SpecViaZ_ZSigZAxioms_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/SpecViaZ/.coq-native/NCoq_Numbers_Integer_SpecViaZ_ZSigZAxioms.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Wf_Z_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Wf_Z.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Numbers_BinNums", 
                "caml_apply2", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_ZArith_BinInt", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_le_4426", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_apply4", 
                "caml_curry4", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Init_Peano__const_NCoq_Init_Peano_lt_2785", 
                "camlNCoq_Init_Wf__const_NCoq_Init_Wf_well_founded_induction_type_2740", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_call_gc", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_rect_2680", 
                "camlNativecode__get_match_6305", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lt_4420", 
                "camlNCoq_ZArith_Znat", 
                "camlNativevalues__mk_sort_accu_4950", 
                "caml_curry3", 
                "caml_young_limit", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Arith_Wf_nat", 
                "caml_alloc1", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_to_nat_3175", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_compare_2865", 
                "camlNCoq_Init_Datatypes", 
                "caml_apply5", 
                "caml_apply3", 
                "camlNativevalues__str_decode_5828", 
                "caml_curry2"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Structures/_coq-native/NCoq_Structures_GenericMinMax_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Structures/.coq-native/NCoq_Structures_GenericMinMax.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "__gmon_start__", 
                "__cxa_finalize", 
                "caml_young_limit", 
                "camlNativecode__get_match_6305", 
                "caml_call_gc"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_R_Ifp_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_R_Ifp.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Reals_Rdefinitions", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rminus_2701", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_opp_2764", 
                "__cxa_finalize", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Reals_Raxioms__const_NCoq_Reals_Raxioms_IZR_2729", 
                "camlNativecode__get_value_6218", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_R_sqr_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_R_sqr.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_Eqdep_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_Eqdep.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_Diaconescu_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_Diaconescu.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Init_Specif", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Logic", 
                "caml_young_limit", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_value_6218", 
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_name_6297", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__cxa_finalize", 
                "caml_call_gc"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zdiv_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zdiv.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_abs_3148", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lt_4420", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_name_6297", 
                "__cxa_finalize", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_leb_3074", 
                "caml_call_gc", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_opp_2764", 
                "caml_alloc3", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_modulo_3338", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_ltb_3080", 
                "caml_young_limit", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_const_6301", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_mul_2790", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_le_4426", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FMaps_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FMaps.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_registerTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/NArith/_coq-native/NCoq_NArith_Ndist_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/NArith/.coq-native/NCoq_NArith_Ndist.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Numbers_BinNums", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Datatypes", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Arith_PeanoNat", 
                "caml_young_limit", 
                "camlNativevalues__str_decode_5828", 
                "__cxa_finalize", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Arith_PeanoNat__x_min_135_2848", 
                "__gmon_start__", 
                "camlNativecode__get_ind_6309", 
                "caml_call_gc", 
                "camlNativecode__get_match_6305", 
                "caml_alloc3", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_lxor_4011"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Init/_coq-native/NCoq_Init_Tactics_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Init/.coq-native/NCoq_Init_Tactics.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_constant_accu_4657", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/PArith/_coq-native/NCoq_PArith_PArith_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/PArith/.coq-native/NCoq_PArith_PArith.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sorting/_coq-native/NCoq_Sorting_Heap_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Sorting/.coq-native/NCoq_Sorting_Heap.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_name_6297", 
                "camlNativecode__get_const_6301", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_young_limit", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Sets_Multiset", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__mk_sort_accu_4950", 
                "__gmon_start__", 
                "camlNCoq_Sets_Multiset__const_NCoq_Sets_Multiset_SingletonBag_2688", 
                "caml_call_gc", 
                "camlNCoq_Sets_Multiset__const_NCoq_Sets_Multiset_munion_2748", 
                "camlNativecode__get_ind_6309", 
                "__cxa_finalize", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Sets_Multiset__const_NCoq_Sets_Multiset_meq_2704"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/omega/_coq-native/NCoq_omega_Omega_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/omega/.coq-native/NCoq_omega_Omega.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zlogarithm_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zlogarithm.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_sort_6293", 
                "caml_allocN", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lt_4420", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_ZArith_BinInt", 
                "camlNativecode__get_value_6218", 
                "caml_alloc3", 
                "_ITM_deregisterTMCloneTable", 
                "caml_young_limit", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_le_4426", 
                "camlNativecode__get_name_6297", 
                "__cxa_finalize", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_constant_accu_4657", 
                "__gmon_start__", 
                "caml_call_gc", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_ZArith_Zpower__const_NCoq_ZArith_Zpower_two_p_2753", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/PArith/_coq-native/NCoq_PArith_BinPosDef_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/PArith/.coq-native/NCoq_PArith_BinPosDef.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_alloc3", 
                "camlNativevalues__mk_prod_accu_5119", 
                "__gmon_start__", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_Init_Logic", 
                "_ITM_deregisterTMCloneTable", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "caml_allocN", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rect_2885", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_value_6218", 
                "camlNativevalues__str_decode_5828", 
                "__cxa_finalize", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__is_accu_5182", 
                "camlNCoq_Init_Nat", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativecode__get_ind_6309", 
                "caml_call_gc"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_Arith_base_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_Arith_base.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/MSets/_coq-native/NCoq_MSets_MSetInterface_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/MSets/.coq-native/NCoq_MSets_MSetInterface.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_apply2", 
                "caml_young_limit", 
                "caml_call_gc", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_name_6297", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_curry2", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/NArith/_coq-native/NCoq_NArith_BinNatDef_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/NArith/.coq-native/NCoq_NArith_BinNatDef.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_gcd_3532", 
                "camlNCoq_PArith_BinPos__x_lor_676_3705", 
                "camlNCoq_PArith_BinPos__x_size_nat_362_3082", 
                "camlNCoq_PArith_BinPos__x_of_succ_nat_874_3979", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_pow_3032", 
                "camlNCoq_PArith_BinPos", 
                "camlNCoq_PArith_BinPos__x_sub_mask_239_2946", 
                "caml_curry4", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_PArith_BinPos__x_land_704_3743", 
                "caml_curry3", 
                "caml_young_limit", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_ggcd_3662", 
                "camlNCoq_PArith_BinPos__x_testbit_832_3913", 
                "camlNCoq_PArith_BinPos__x_testbit_nat_807_3876", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_PArith_BinPos__x_sqrtrem_494_3457", 
                "caml_alloc3", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_shiftl_3832", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlNCoq_PArith_BinPos__x_eqb_445_3384", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rect_2885", 
                "camlNCoq_PArith_BinPos__x_size_371_3096", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_to_nat_3949", 
                "camlNCoq_PArith_BinPos__x_lxor_762_3811", 
                "caml_apply2", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_sqrt_3465", 
                "camlNCoq_Init_Datatypes", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_PArith_BinPos__x_add_67_2739", 
                "caml_curry2", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_iter_3024", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_pred_N_2796", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlNCoq_PArith_BinPos__x_ldiff_734_3780", 
                "camlNCoq_PArith_BinPos__x_succ_8_2676", 
                "camlNCoq_PArith_BinPos__x_mul_313_2995", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_snd_3023", 
                "camlNCoq_PArith_BinPos__x_square_343_3047"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/syntax/numbers_syntax_plugin_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/syntax/numbers_syntax_plugin.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlPervasives__max_1030", 
                "_ITM_registerTMCloneTable", 
                "camlPp__str_1375", 
                "camlBigint__small_1419", 
                "camlNat_syntax_plugin__Nat_syntax__nat_of_int_1425", 
                "caml_allocN", 
                "camlMltop__add_known_module_3856", 
                "camlBigint__mult_1459", 
                "camlNotation__declare_numeral_interpreter_6269", 
                "caml_backtrace_pos", 
                "camlBigint__mkarray_1421", 
                "camlPervasives__min_1027", 
                "camlBigint__pow_aux_1499", 
                "__cxa_finalize", 
                "caml_call_gc", 
                "camlBigint__add_1453", 
                "__gmon_start__", 
                "camlLoc__3", 
                "camlBigint__div2_with_rest_1483", 
                "camlNames", 
                "caml_fresh_oo_id", 
                "camlList__rev_map_1264", 
                "camlBigint__less_than_1465", 
                "camlBigint", 
                "camlPervasives__$40_1166", 
                "camlList__rev_append_1236", 
                "_ITM_deregisterTMCloneTable", 
                "camlBigint__neg_1468", 
                "caml_raise_exn", 
                "camlBigint__euclid_1462", 
                "camlNames__make2_3096", 
                "camlGlobnames__eq_gr_4115", 
                "camlNames__of_string_1937", 
                "camlCErrors__user_err_loc_1346", 
                "camlBigint__is_pos_or_zero_1493"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/QArith/_coq-native/NCoq_QArith_Qminmax_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/QArith/.coq-native/NCoq_QArith_Qminmax.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_apply5", 
                "camlNCoq_QArith_QOrderedType", 
                "caml_curry3", 
                "caml_call_gc", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_allocN", 
                "caml_curry4", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_const_6301", 
                "caml_apply2", 
                "caml_apply10", 
                "caml_apply8", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qlt_2685", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qle_2682", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qeq_2679", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "caml_curry7", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "caml_curry5", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qcompare_2718", 
                "caml_apply3", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_CompSpec2Type_3465", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_PER_2889", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Classes_Morphisms", 
                "camlNCoq_QArith_QArith_base", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "caml_apply4", 
                "caml_curry6", 
                "caml_curry2", 
                "camlNativecode__get_name_6297", 
                "caml_young_limit", 
                "camlNCoq_Structures_GenericMinMax", 
                "camlNCoq_Structures_GenericMinMax__const_NCoq_Structures_GenericMinMax_gmin_2867", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__mk_constant_accu_4657"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rdefinitions_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rdefinitions.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301", 
                "__cxa_finalize", 
                "camlNCoq_Init_Logic", 
                "caml_young_limit", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_constant_accu_4657"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Finite_sets_facts_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Finite_sets_facts.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_InitialRing_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_InitialRing.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "caml_alloc3", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_setoid_ring_Ring_theory", 
                "camlNativecode__get_const_6301", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_NArith_BinNat", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__mk_sw_accu_5114", 
                "__cxa_finalize", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_add_2702", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "_ITM_deregisterTMCloneTable", 
                "caml_allocN", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_mul_3432", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativevalues__str_decode_5828", 
                "caml_call_gc", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_NArith_BinNat__x_eqb_86_3482", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "camlNCoq_Classes_Morphisms", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "camlNCoq_Setoids_Setoid", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_RIneq_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_RIneq.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_ind_accu_4947", 
                "__gmon_start__", 
                "caml_young_limit", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_deregisterTMCloneTable", 
                "caml_alloc1", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rle_2695", 
                "caml_call_gc", 
                "camlNativecode__get_const_6301", 
                "camlNativecode__get_ind_6309", 
                "__cxa_finalize", 
                "camlNCoq_Reals_Rdefinitions"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Lists/_coq-native/NCoq_Lists_ListDec_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Lists/.coq-native/NCoq_Lists_ListDec.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_const_6301", 
                "__cxa_finalize", 
                "camlNCoq_Logic_Decidable__const_NCoq_Logic_Decidable_decidable_2654", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Lists_List__const_NCoq_Lists_List_in_dec_2824", 
                "camlNCoq_Lists_List", 
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_name_6297", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_call_gc", 
                "camlNCoq_Init_Logic", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_R_sqrt_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_R_sqrt.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Reals_Rbasic_fun", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_apply3", 
                "camlNCoq_Reals_RIneq", 
                "camlNCoq_Reals_RIneq__const_NCoq_Reals_RIneq_nonzero_3060", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rle_2695", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rminus_2701", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301", 
                "caml_apply2", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rdiv_2704", 
                "caml_young_limit", 
                "caml_curry2", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNCoq_Reals_Rsqrt_def__const_NCoq_Reals_Rsqrt_def_Rsqrt_2819", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_match_6305"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rpower_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rpower.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Reals_R_sqrt__const_NCoq_Reals_R_sqrt_sqrt_2660", 
                "camlNCoq_Reals_Rtrigo_def__const_NCoq_Reals_Rtrigo_def_exp_2692", 
                "camlNCoq_Reals_Rpow_def__x_pow_10_2677", 
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Reals_RIneq__const_NCoq_Reals_RIneq_cond_pos_3005", 
                "__cxa_finalize", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Reals_RIneq__const_NCoq_Reals_RIneq_pos_2997", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_call_gc", 
                "__gmon_start__", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNativevalues__str_decode_5828", 
                "caml_young_limit", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/derive/_coq-native/NCoq_derive_Derive_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/derive/.coq-native/NCoq_derive_Derive.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/NatInt/_coq-native/NCoq_Numbers_NatInt_NZAdd_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/NatInt/.coq-native/NCoq_Numbers_NatInt_NZAdd.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/romega/_coq-native/NCoq_romega_ReflOmegaCore_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/romega/.coq-native/NCoq_romega_ReflOmegaCore.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "caml_young_limit", 
                "camlNCoq_ZArith_BinIntDef", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_Rmul_1_l_3290", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "caml_call_gc", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_app_3138", 
                "camlNativevalues__is_accu_5182", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_ZArith_BinIntDef__const_NCoq_ZArith_BinIntDef_Z_mul_2790", 
                "camlNCoq_Lists_List__const_NCoq_Lists_List_nth_2884", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_le_4426", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlNCoq_ZArith_BinIntDef__const_NCoq_ZArith_BinIntDef_Z_compare_2865", 
                "camlNCoq_ZArith_BinIntDef__const_NCoq_ZArith_BinIntDef_Z_opp_2764", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_Radd_comm_3255", 
                "camlNativecode__get_const_6301", 
                "camlNativecode__get_match_6305", 
                "caml_alloc1", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "__gmon_start__", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_Arith_PeanoNat", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_Radd_assoc_3272", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_Radd_0_l_3238", 
                "camlNCoq_Arith_PeanoNat__x_eqb_64_2757", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lt_4420", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_Rdistr_l_3342", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_ge_4429", 
                "camlNativecode__get_value_6218", 
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_name_6297", 
                "caml_alloc3", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_Ropp_def_3388", 
                "__cxa_finalize", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_ZArith_BinIntDef__const_NCoq_ZArith_BinIntDef_Z_add_2751", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_Rmul_comm_3307", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_ZArith_Zorder", 
                "camlNCoq_ZArith_BinInt", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_Rmul_assoc_3324", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_gt_4423", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_andb_2713", 
                "camlNCoq_setoid_ring_Ring_theory__const_NCoq_setoid_ring_Ring_theory_Rsub_def_3361"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_Plus_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_Plus.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Init_Datatypes", 
                "caml_call_gc", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Init_Peano__const_NCoq_Init_Peano_eq_add_S_2687", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Specif", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Peano", 
                "__gmon_start__", 
                "camlNativevalues__mk_sort_accu_4950", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativecode__get_value_6218", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_rec_2685", 
                "__cxa_finalize", 
                "camlNativecode__get_name_6297", 
                "caml_young_limit", 
                "camlNCoq_Init_Logic", 
                "camlNativecode__get_sort_6293", 
                "caml_alloc3"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Relations/_coq-native/NCoq_Relations_Relation_Definitions_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Relations/.coq-native/NCoq_Relations_Relation_Definitions.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "caml_call_gc", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativecode__get_name_6297", 
                "__cxa_finalize", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Logic", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_ind_6309", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_young_limit", 
                "__gmon_start__", 
                "camlNativecode__get_sort_6293"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/ltac/_coq-native/NCoq_ltac_LtacDummy_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/ltac/.coq-native/NCoq_ltac_LtacDummy.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__gmon_start__", 
                "camlNativevalues__str_decode_5828", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Wellfounded/_coq-native/NCoq_Wellfounded_Disjoint_Union_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Wellfounded/.coq-native/NCoq_Wellfounded_Disjoint_Union.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_const_6301", 
                "__cxa_finalize", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rderiv_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rderiv.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "caml_call_gc", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_const_6301", 
                "caml_young_limit", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Reals_Rdefinitions", 
                "__cxa_finalize", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rdiv_2704", 
                "camlNCoq_Reals_Rlimit__const_NCoq_Reals_Rlimit_limit1_in_2810", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rminus_2701", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/extraction/_coq-native/NCoq_extraction_ExtrOcamlString_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/extraction/.coq-native/NCoq_extraction_ExtrOcamlString.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zsqrt_compat_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zsqrt_compat.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Zne_6554", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_Zopp_mult_distr_r_2812", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_Zopp_eq_mult_neg_1_2794", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_or_ind_2779", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_Zred_factor6_2859", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_ZArith_auxiliary", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_le_4426", 
                "caml_call_gc", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_setoid_ring_Ring_tac", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_OMEGA15_2760", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_Zplus_assoc_2722", 
                "camlNativevalues__mk_constant_accu_4657", 
                "__gmon_start__", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_Zred_factor3_2843", 
                "camlNCoq_setoid_ring_ZArithRing", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_rec_2685", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_Zred_factor4_2848", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lt_4420", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_OMEGA11_2744", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_OMEGA14_2783", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_Zopp_plus_distr_2803", 
                "__cxa_finalize", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_Zred_factor0_2790", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_ex_ind_2830", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Logic_Decidable", 
                "caml_alloc3", 
                "caml_young_limit", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_OMEGA13_2776", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_opp_2764", 
                "camlNCoq_ZArith_BinInt", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_Zplus_permute_2728", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_ZArith_ZArith_dec__const_NCoq_ZArith_ZArith_dec_Z_le_gt_dec_3119", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_pow_2805", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_and_ind_2720", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_Zmult_assoc_reverse_2828", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_Zmult_comm_2798", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_mul_2790", 
                "camlNCoq_ZArith_Zorder", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_Zred_factor5_2854", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_Zmult_plus_distr_l_2817", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_Zplus_comm_2711", 
                "camlNCoq_omega_OmegaLemmas__const_NCoq_omega_OmegaLemmas_fast_Zplus_assoc_reverse_2716"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Bool/_coq-native/NCoq_Bool_Sumbool_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Bool/.coq-native/NCoq_Bool_Sumbool.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_young_limit", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_sumbool_rec_2969", 
                "camlNativevalues__mk_sort_accu_4950", 
                "__cxa_finalize", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_name_6297", 
                "camlNativecode__get_sort_6293", 
                "__gmon_start__", 
                "camlNativecode__get_value_6218", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Init_Specif", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Logic"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/MSets/_coq-native/NCoq_MSets_MSetDecide_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/MSets/.coq-native/NCoq_MSets_MSetDecide.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Wellfounded/_coq-native/NCoq_Wellfounded_Wellfounded_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Wellfounded/.coq-native/NCoq_Wellfounded_Wellfounded.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zmin_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zmin.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sorting/_coq-native/NCoq_Sorting_Sorting_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Sorting/.coq-native/NCoq_Sorting_Sorting.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Strings/_coq-native/NCoq_Strings_String_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Strings/.coq-native/NCoq_Strings_String.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlNativecode__get_match_6305", 
                "camlNativecode__get_const_6301", 
                "caml_young_limit", 
                "caml_alloc1", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativecode__get_value_6218", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__mk_sw_accu_5114", 
                "__gmon_start__", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_sumbool_rec_2969", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNCoq_Strings_Ascii", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_call_gc", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Specif", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "__cxa_finalize", 
                "caml_alloc3", 
                "camlNCoq_Strings_Ascii__const_NCoq_Strings_Ascii_ascii_dec_2916"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Cyclic/Int31/_coq-native/NCoq_Numbers_Cyclic_Int31_Cyclic31_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Cyclic/Int31/.coq-native/NCoq_Numbers_Cyclic_Int31_Cyclic31.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_rect_2885", 
                "caml_allocN", 
                "caml_alloc1", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Numbers_Cyclic_Int31_Int31__const_NCoq_Numbers_Cyclic_Int31_Int31_firstr_3011", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__no_check_mulc_5695", 
                "caml_alloc3", 
                "camlNativevalues", 
                "camlUint31", 
                "camlNativecode__get_value_6218", 
                "caml_call_gc", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__addc_5659", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativevalues__no_check_addmuldiv_5723", 
                "camlNativevalues__addmuldiv_5731", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Numbers_Cyclic_Int31_Int31__const_NCoq_Numbers_Cyclic_Int31_Int31_firstl_3004", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__compare_5770", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativevalues__no_check_addc_5655", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__sub_5581", 
                "camlNativevalues__no_check_subc_5663", 
                "camlNativevalues__no_check_diveucl_5702", 
                "camlNativevalues__mulc_5698", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "camlNativevalues__add_5574", 
                "camlNativevalues__subc_5667", 
                "camlNativecode__get_name_6297", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNativevalues__diveucl_5707", 
                "__cxa_finalize", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Numbers_Cyclic_Int31_Int31", 
                "caml_young_limit", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_ZArith_BinInt", 
                "camlNCoq_Numbers_Cyclic_Int31_Int31__const_NCoq_Numbers_Cyclic_Int31_Int31_sneakl_2961"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_BinIntDef_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_BinIntDef.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_PArith_BinPos__x_add_67_2739", 
                "camlNCoq_PArith_BinPos__x_mul_313_2995", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_div2_up_3063", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_PArith_BinPos__x_testbit_832_3913", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_call_gc", 
                "camlNCoq_PArith_BinPos__x_of_succ_nat_874_3979", 
                "caml_alloc3", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_gcd_3532", 
                "camlNCoq_PArith_BinPos", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_land_3971", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_PArith_BinPos__x_pred_double_137_2778", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_PArith_BinPos__x_land_704_3743", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_div2_3055", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_snd_3023", 
                "camlNCoq_PArith_BinPos__x_sqrtrem_494_3457", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_PArith_BinPos__x_square_343_3047", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_lxor_4011", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_testbit_4055", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_succ_pos_2689", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_ggcd_3662", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_CompOpp_3174", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_pred_N_2796", 
                "camlNativecode__get_match_6305", 
                "__cxa_finalize", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_iter_3024", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_to_nat_3949", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_lor_3958", 
                "__gmon_start__", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_PArith_BinPos__x_lxor_762_3811", 
                "camlNCoq_NArith_BinNat__x_pos_div_eucl_194_3842", 
                "camlNCoq_PArith_BinPos__x_size_371_3096", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_sqrt_3465", 
                "camlNCoq_PArith_BinPos__x_eqb_445_3384", 
                "camlNCoq_PArith_BinPos__x_lor_676_3705", 
                "camlNCoq_PArith_BinPos__x_ldiff_734_3780", 
                "camlNativevalues__is_accu_5182", 
                "camlNCoq_NArith_BinNat__x_ldiff_298_3996"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Znat_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Znat.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Init_Peano", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_ZArith_BinInt", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Init_Peano__const_NCoq_Init_Peano_lt_2785", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_alloc1", 
                "__gmon_start__", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Init_Logic", 
                "caml_young_limit", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNativecode__get_const_6301", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_of_nat_3187", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_ge_4429", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_le_4426", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_gt_4423", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_call_gc", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lt_4420"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/Abstract/_coq-native/NCoq_Numbers_Integer_Abstract_ZAddOrder_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/Abstract/.coq-native/NCoq_Numbers_Integer_Abstract_ZAddOrder.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/extraction/_coq-native/NCoq_extraction_ExtrHaskellNatInt_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/extraction/.coq-native/NCoq_extraction_ExtrHaskellNatInt.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Classes/_coq-native/NCoq_Classes_CEquivalence_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Classes/.coq-native/NCoq_Classes_CEquivalence.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_apply6", 
                "caml_c_call", 
                "caml_make_array", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_curry10", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Classes_CRelationClasses__const_NCoq_Classes_CRelationClasses_Equivalence_Symmetric_2967", 
                "camlNativecode__get_match_6305", 
                "caml_curry6", 
                "caml_curry9", 
                "caml_apply2", 
                "camlNativecode__get_level_6321", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301", 
                "caml_curry12", 
                "caml_apply3", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_curry11", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_young_ptr", 
                "caml_curry14", 
                "caml_curry8", 
                "caml_call_gc", 
                "caml_apply8", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_projT1_2862", 
                "camlNCoq_Classes_CMorphisms__const_NCoq_Classes_CMorphisms_respectful_2728", 
                "caml_curry7", 
                "caml_curry4", 
                "camlNCoq_Init_Specif"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Classes/_coq-native/NCoq_Classes_RelationPairs_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Classes/.coq-native/NCoq_Classes_RelationPairs.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_snd_3023", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_call_gc", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_StrictOrder_Irreflexive_2800", 
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_relation_conjunction_3283", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "caml_young_limit", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_StrictOrder_Transitive_2810", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_Max_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_Max.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rdefinitions_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rdefinitions.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_apply2", 
                "caml_curry2", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_const_6301"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Program/_coq-native/NCoq_Program_Equality_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Program/.coq-native/NCoq_Program_Equality.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Logic_Eqdep", 
                "caml_apply2", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_curry5", 
                "caml_curry3", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Specif", 
                "camlNativecode__get_ind_6309", 
                "camlNativecode__get_match_6305", 
                "camlNativecode__get_sort_6293", 
                "caml_curry8", 
                "caml_apply3", 
                "caml_call_gc", 
                "caml_curry2", 
                "camlNCoq_Init_Logic", 
                "caml_young_limit", 
                "caml_curry9", 
                "caml_curry6", 
                "caml_apply4", 
                "caml_apply6", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_name_6297"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/MSets/_coq-native/NCoq_MSets_MSetEqProperties_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/MSets/.coq-native/NCoq_MSets_MSetEqProperties.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Init/_coq-native/NCoq_Init_Logic_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Init/.coq-native/NCoq_Init_Logic.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "caml_apply3", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_apply2", 
                "caml_curry7", 
                "caml_young_limit", 
                "camlNativecode__get_ind_6309", 
                "camlNativecode__get_name_6297", 
                "camlNativecode__get_const_6301", 
                "camlNativecode__get_match_6305", 
                "caml_curry6", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_call_gc", 
                "caml_curry8", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_curry5", 
                "caml_curry4", 
                "caml_curry3", 
                "camlNativevalues__mk_ind_accu_4947"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Machin_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Machin.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_apply2", 
                "camlNCoq_Reals_Ratan__const_NCoq_Reals_Ratan_Ratan_seq_2727", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_const_6301", 
                "caml_curry2", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rdiv_2704", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rminus_2701", 
                "camlNCoq_Reals_Rdefinitions"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zgcd_alt_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zgcd_alt.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_value_6218", 
                "__cxa_finalize", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_modulo_3338", 
                "camlNCoq_Init_Datatypes", 
                "caml_call_gc", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751", 
                "__gmon_start__", 
                "caml_alloc3", 
                "camlNCoq_PArith_BinPos__x_size_nat_362_3082", 
                "caml_young_limit", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativecode__get_name_6297"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/SpecViaZ/_coq-native/NCoq_Numbers_Natural_SpecViaZ_NSig_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/SpecViaZ/.coq-native/NCoq_Numbers_Natural_SpecViaZ_NSig.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_le_4426", 
                "camlNCoq_Init_Logic", 
                "caml_apply3", 
                "camlNCoq_Numbers_BinNums", 
                "caml_curry2", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lt_4420"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Relations/_coq-native/NCoq_Relations_Relation_Operators_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Relations/.coq-native/NCoq_Relations_Relation_Operators.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "camlNCoq_Init_Logic", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_proj1_sig_2802", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_app_3138", 
                "caml_call_gc", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_name_6297", 
                "__gmon_start__", 
                "caml_young_limit", 
                "camlNativecode__get_ind_6309"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/QArith/_coq-native/NCoq_QArith_Qpower_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/QArith/.coq-native/NCoq_QArith_Qpower.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__gmon_start__", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Exp_prop_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Exp_prop.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rmax_2709", 
                "camlNCoq_Arith_Factorial__x_fact_7_2674", 
                "camlNCoq_Reals_Rfunctions__x_sum_f_R0_41_2802", 
                "caml_call_gc", 
                "camlNCoq_Reals_Raxioms__x_INR_12_2722", 
                "__cxa_finalize", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "camlNCoq_Init_Nat__x_mul_27_2706", 
                "camlNCoq_Reals_Rpow_def__x_pow_10_2677", 
                "camlNCoq_Reals_Raxioms", 
                "camlNCoq_Reals_Rdefinitions", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Init_Nat__const_NCoq_Init_Nat_pred_2665", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rabs_2732", 
                "caml_young_limit", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Arith_PeanoNat__x_div2_277_3057", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Nat__x_sub_45_2728", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Nat", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Arith_PeanoNat"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Abstract/_coq-native/NCoq_Numbers_Natural_Abstract_NIso_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Abstract/.coq-native/NCoq_Numbers_Natural_Abstract_NIso.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/SpecViaZ/_coq-native/NCoq_Numbers_Natural_SpecViaZ_NSigNAxioms_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/SpecViaZ/.coq-native/NCoq_Numbers_Natural_SpecViaZ_NSigNAxioms.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Partial_Order_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Partial_Order.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Sets_Relations_1__const_NCoq_Sets_Relations_1_Relation_2654", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Sets_Relations_1", 
                "camlNCoq_Sets_Ensembles", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Logic", 
                "camlNativecode__get_const_6301", 
                "caml_young_limit", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Sets_Ensembles__const_NCoq_Sets_Ensembles_Ensemble_2654", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_ind_6309", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_RiemannInt_SF_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_RiemannInt_SF.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_call_gc", 
                "camlNCoq_Reals_RList", 
                "camlNCoq_Init_Peano__const_NCoq_Init_Peano_lt_2785", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Reals_RList__x_pos_Rl_104_2888", 
                "camlNCoq_Reals_RList__const_NCoq_Reals_RList_ordered_Rlist_2897", 
                "camlNativecode__get_name_6297", 
                "caml_apply3", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_Reals_RIneq", 
                "camlNCoq_Init_Peano", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_projT2_2876", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_Reals_RList__x_Rlength_42_2762", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "caml_curry5", 
                "camlNCoq_Init_Datatypes", 
                "caml_curry4", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_young_limit", 
                "camlNCoq_Init_Logic", 
                "caml_apply2", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_curry3", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rle_2695", 
                "camlNCoq_Init_Nat__const_NCoq_Init_Nat_pred_2665", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_projT1_2862", 
                "caml_alloc3", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rminus_2701", 
                "camlNativecode__get_const_6301", 
                "caml_curry2", 
                "camlNCoq_Reals_Ranalysis1__const_NCoq_Reals_Ranalysis1_constant_D_eq_2726", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rmax_2709", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rmin_2660"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Ensembles_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Ensembles.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "caml_call_gc", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativecode__get_const_6301", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Init_Logic", 
                "__gmon_start__", 
                "camlNativecode__get_sort_6293", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_ind_accu_4947", 
                "__cxa_finalize", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_match_6305", 
                "camlNativecode__get_name_6297", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_ProofIrrelevanceFacts_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_ProofIrrelevanceFacts.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/extraction/_coq-native/NCoq_extraction_ExtrOcamlIntConv_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/extraction/.coq-native/NCoq_extraction_ExtrOcamlIntConv.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "caml_allocN", 
                "__gmon_start__", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_match_6305", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_alloc3", 
                "camlNativecode__get_name_6297", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "caml_young_limit", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Numbers_BinNums", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Init_Datatypes", 
                "__cxa_finalize", 
                "caml_call_gc", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_prod_accu_5119"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Classes/_coq-native/NCoq_Classes_SetoidTactics_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Classes/.coq-native/NCoq_Classes_SetoidTactics.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativecode__get_ind_6309", 
                "caml_curry2"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_ArithRing_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_ArithRing.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Cyclic/Int31/_coq-native/NCoq_Numbers_Cyclic_Int31_Ring31_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Cyclic/Int31/.coq-native/NCoq_Numbers_Cyclic_Int31_Ring31.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_curry2", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Numbers_BinNums", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Logic", 
                "caml_apply3", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_to_Z_2739", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_compare_2808", 
                "caml_apply2", 
                "camlNCoq_Numbers_Cyclic_Int31_Cyclic31"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rtrigo_alt_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rtrigo_alt.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "__gmon_start__", 
                "caml_young_limit", 
                "camlNCoq_Reals_Raxioms__x_INR_12_2722", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Init_Nat__x_mul_27_2706", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rdiv_2704", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Reals_Raxioms", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Reals_Rfunctions__x_sum_f_R0_41_2802", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Arith_Factorial__x_fact_7_2674", 
                "caml_call_gc", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/firstorder/ground_plugin_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/firstorder/ground_plugin.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlPp__glue_1211", 
                "camlSet__exists_1479", 
                "camlCClosure__red_add_transparent_4731", 
                "camlPpconstr", 
                "camlTyping__type_of_inner_6067", 
                "camlRefiner__tclTHEN_2824", 
                "__cxa_finalize", 
                "camlHeap__fun_1391", 
                "camlTacticals__onAllHypsAndConcl_5505", 
                "camlEvarutil__new_type_evar_7042", 
                "camlRefiner__tclFIRST_4409", 
                "camlMap__fold_1463", 
                "camlEvd", 
                "caml_backtrace_pos", 
                "caml_young_ptr", 
                "camlList__assq_1393", 
                "camlOption__compare_1216", 
                "camlTerm__destInd_4659", 
                "camlProofview__tclPROGRESS_6145", 
                "camlCoqlib__coq_constant_5305", 
                "camlRefiner__tclTRY_4404", 
                "camlCMap__fun_2503", 
                "camlDecl_mode_plugin__Decl_proof_instr", 
                "camlTerm__prodec_rec_5416", 
                "camlConstr__constr_ord_int_5613", 
                "camlTerm__strip_outer_cast_4695", 
                "camlHipattern__match_with_imp_term_6380", 
                "camlTacentries__add_ml_tactic_notation_8862", 
                "camlCList__fold_left_i_1883", 
                "camlCErrors__error_1336", 
                "camlConstr__fold_5003", 
                "camlRefiner__tclDO_4440", 
                "camlSet__fun_2940", 
                "camlTacmach__pf_eapply_4595", 
                "camlVars__make_subst_3754", 
                "camlTacintern__glob_tactic_8797", 
                "camlHeap__add_1224", 
                "camlPp__8", 
                "camlPredicate__add_1519", 
                "camlAuto__h_trivial_inner_8600", 
                "camlList__flatten_1243", 
                "camlTacticals__tclORELSE0_6524", 
                "camlList__fold_right_1292", 
                "camlCList__init_1565", 
                "camlTermops__free_rels_6277", 
                "camlCList__map_1515", 
                "caml_make_array", 
                "camlVernac_classifier__66", 
                "camlCErrors__noncritical_1426", 
                "camlTacintern__intern_genarg_6288", 
                "camlTermops__occur_var_in_decl_6264", 
                "camlTactics__cut_13058", 
                "camlHeap__iter_1270", 
                "camlGoptions__declare_option_3583", 
                "camlConstrarg", 
                "camlGlobal", 
                "camlPcoq__new_entry_22377", 
                "camlArray__map_1261", 
                "camlOption__map_1252", 
                "camlRefiner__tclORELSE_4391", 
                "caml_exn_Not_found", 
                "camlTactics__unfold_in_hyp_12689", 
                "camlConstr__eq_constr_nounivs_5550", 
                "camlHipattern__match_with_sigma_type_6410", 
                "camlLocality__make_section_locality_1322", 
                "_ITM_deregisterTMCloneTable", 
                "camlTacticals__pf_constr_of_global_5821", 
                "camlPervasives__failwith_1005", 
                "camlPredicate__2", 
                "camlTactics__fresh_id_in_env_8750", 
                "camlTactics__generalize_21015", 
                "camlEvd__29", 
                "camlLoc__3", 
                "camlVernac_classifier__64", 
                "camlTacenv__register_ml_tactic_inner_5972", 
                "camlList__for_all_1345", 
                "caml_alloc3", 
                "camlMltop__declare_cache_obj_3915", 
                "camlTactics__exact_no_check_15949", 
                "camlSet__elements_aux_1509", 
                "camlCClosure__norm_val_6744", 
                "camlArray__iter_1252", 
                "camlPervasives__max_1030", 
                "camlGenarg__register0_7996", 
                "camlPp__strbrk_1420", 
                "camlFeedback", 
                "caml_alloc1", 
                "camlEvd__find_6390", 
                "camlTacinterp__cast_10828", 
                "camlHipattern__match_with_forall_term_6392", 
                "caml_exn_Assert_failure", 
                "camlVernacinterp__vinterp_add_1903", 
                "__gmon_start__", 
                "camlConstr__mkRel_4620", 
                "camlList__map_1248", 
                "camlTerm__destConst_4649", 
                "camlPrinter", 
                "camlTermops__subst_meta_6678", 
                "camlProofview__tactic_6596", 
                "camlCErrors__anomaly_1311", 
                "camlTacticals__pf_constr_of_global_7313", 
                "camlTermops__it_named_context_quantifier_5830", 
                "camlVernac_classifier__declare_vernac_classifier_1468", 
                "_ITM_registerTMCloneTable", 
                "camlTactics__any_constructor_16390", 
                "camlNametab__pr_global_env_6246", 
                "camlSet__add_1282", 
                "camlTerm__destMeta_4445", 
                "camlTactics__unfold_in_concl_12687", 
                "camlTerm__prodec_rec_5452", 
                "camlTermops", 
                "camlInductive__lookup_mind_specif_4944", 
                "camlTactics__clear_gen_8632", 
                "camlTacmach", 
                "camlCList__filter_1618", 
                "camlReductionops", 
                "camlQueue__take_1229", 
                "camlArray__of_list_1294", 
                "camlRefiner__tclTHENSV_2827", 
                "camlRefiner", 
                "camlCClosure__create_clos_infos_6755", 
                "camlReductionops__whd_all_8529", 
                "camlCLexer__terminal_19701", 
                "camlStdarg", 
                "camlProofview", 
                "camlAuto__h_auto_inner_8889", 
                "camlTacinterp__tactic_of_value_12952", 
                "caml_equal", 
                "caml_alloc2", 
                "camlRefiner__tclCOMPLETE_4436", 
                "caml_call_gc", 
                "camlTacsubst__subst_genarg_4426", 
                "camlCClosure__whd_val_6741", 
                "camlGeninterp", 
                "camlLocality", 
                "camlGlobal__assert_not_parsing_3775", 
                "camlVars__lift_3730", 
                "caml_fresh_oo_id", 
                "camlGeninterp__register_val0_3883", 
                "camlTerm", 
                "camlTerm__destProd_4620", 
                "camlList__rev_map_1264", 
                "camlQueue", 
                "camlTacmach__pf_nth_hyp_id_3133", 
                "camlPredicate__1", 
                "camlArray__init_1217", 
                "camlTermops__dependent_main_6634", 
                "camlTacentries__create_ltac_quotation_8901", 
                "camlPp__str_1375", 
                "camlLibnames", 
                "camlPre_env__push_rel_4645", 
                "camlTactics", 
                "camlTacticals", 
                "camlPp__prlist_1916", 
                "camlGenintern", 
                "caml_modify", 
                "camlTacintern", 
                "camlMap__find_1303", 
                "camlTactics__constructor_tac_16362", 
                "camlTerm__decompose_prod_n_assum_5475", 
                "camlProofview__of_tactic_6689", 
                "camlGenarg", 
                "camlTacinterp", 
                "camlPervasives__$40_1166", 
                "camlRefiner__tclFAIL_2447", 
                "camlTermops__nbrec_6969", 
                "camlTactic_option__declare_tactic_option_inner_1978", 
                "camlCClosure__59", 
                "caml_c_call", 
                "camlVars__substn_many_3745", 
                "camlCList__last_2308", 
                "camlGenarg__create_arg_7984", 
                "camlTacsubst", 
                "camlRefiner__tclTHENLIST_2839", 
                "camlQueue__add_1219", 
                "camlRefiner__goal_goal_list_2436", 
                "camlPervasives__$5e_1117", 
                "camlMap__remove_1424", 
                "camlCc_plugin__Cctac__congruence_tac_7686", 
                "camlInductiveops__nconstructors_5693", 
                "camlInductiveops__mis_is_recursive_5662", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlReductionops__red_of_state_red_8494", 
                "camlNames", 
                "camlList__exists_1350", 
                "camlTactic_option__1", 
                "camlHeap__remove_1266", 
                "camlGenarg__out_gen_5922", 
                "camlHipattern__match_with_nodep_ind_6399", 
                "camlList__length_aux_1204", 
                "camlMltop__add_known_module_3856", 
                "camlControl__check_for_interrupt_1300", 
                "camlCClosure__mk_clos_6202", 
                "camlHeap", 
                "camlList__iter_1272", 
                "camlRefiner__pf_env_2311", 
                "camlEgramml__extend_vernac_command_grammar_3774", 
                "camlGlobnames__global_ord_gen_4479", 
                "camlRefiner__ite_gen_4413", 
                "camlPp__v_1643", 
                "camlTerm__prod_applist_5384", 
                "camlHints", 
                "camlInductive__arities_of_constructors_6030", 
                "caml_allocN", 
                "camlList__1", 
                "camlPptactic__pr_auto_using_17742", 
                "camlGoptions", 
                "camlClassops__coercions_7879", 
                "camlGlobnames__global_of_constr_4438", 
                "camlCWarnings__create_inner_3027", 
                "camlUtil", 
                "camlConstrextern__extern_constr_inner_9711", 
                "camlConstr__mkApp_4803", 
                "camlPpconstr__pr_or_var_5345", 
                "camlEvd__fresh_global_inner_10078", 
                "caml_young_limit", 
                "caml_ml_array_bound_error", 
                "camlHints__iter_8538", 
                "camlGeninterp__val_tag_3844", 
                "camlCArray__exists_1379", 
                "camlNames__of_string_1937", 
                "camlGenarg__obj_8005", 
                "caml_raise_exn", 
                "camlCList__iteri_1913", 
                "camlNames__of_string_soft_1940", 
                "camlTermops__occur_var_6258", 
                "camlSet__mem_1368", 
                "camlPptactic", 
                "caml_int_compare", 
                "camlTacinterp__interp_genarg_12959", 
                "camlConstr__map_with_binders_5215", 
                "camlGlobal__lookup_inductive_4711", 
                "camlCClosure", 
                "camlMap__add_1291", 
                "camlPcoq__grammar_extend_22116", 
                "camlGlobnames__eq_gr_4115", 
                "camlPptactic__declare_extra_genarg_pprule_5591"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/NArith/_coq-native/NCoq_NArith_Ndigits_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/NArith/.coq-native/NCoq_NArith_Ndigits.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_prod_accu_5119", 
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable", 
                "caml_call_gc", 
                "camlNativecode__get_const_6301", 
                "caml_alloc1", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Bool_Bvector", 
                "camlNCoq_Arith_PeanoNat", 
                "caml_alloc3", 
                "__cxa_finalize", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_PArith_BinPos__x_size_nat_362_3082", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_succ_double_2663", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_match_6305", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_andb_2713", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_double_2669", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "caml_young_limit", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_size_nat_3799", 
                "__gmon_start__", 
                "camlNativecode__get_value_6218", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_even_3752"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Ranalysis2_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Ranalysis2.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_const_6301", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_constant_accu_4657", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Image_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Image.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_call_gc", 
                "caml_young_limit", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_curry8", 
                "caml_curry3", 
                "caml_apply4", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_match_6305", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__str_decode_5828", 
                "caml_apply3", 
                "camlNativecode__get_ind_6309", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_curry2", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_ind_accu_4947"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zeuclid_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zeuclid.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_call_gc", 
                "_ITM_deregisterTMCloneTable", 
                "caml_young_limit", 
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_sgn_2874", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_mul_2790", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_abs_3148", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_modulo_3338", 
                "__cxa_finalize", 
                "__gmon_start__", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_Arith_base_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_Arith_base.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/NatInt/_coq-native/NCoq_Numbers_NatInt_NZLog_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/NatInt/.coq-native/NCoq_Numbers_NatInt_NZLog.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_PSeries_reg_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_PSeries_reg.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Reals_Rfunctions__x_sum_f_R0_41_2802", 
                "caml_curry4", 
                "camlNCoq_Init_Peano", 
                "caml_curry2", 
                "camlNativecode__get_name_6297", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rle_2695", 
                "caml_young_limit", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Reals_RIneq", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Logic", 
                "camlNativecode__get_const_6301", 
                "caml_curry3", 
                "camlNCoq_Init_Datatypes", 
                "caml_call_gc", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Reals_Rseries__const_NCoq_Reals_Rseries_Un_cv_2685", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Reals_RIneq__const_NCoq_Reals_RIneq_pos_2997", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rabs_2732", 
                "caml_apply2", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rminus_2701"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/extraction/_coq-native/NCoq_extraction_ExtrHaskellZNum_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/extraction/.coq-native/NCoq_extraction_ExtrHaskellZNum.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_deregisterTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sorting/_coq-native/NCoq_Sorting_Permutation_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Sorting/.coq-native/NCoq_Sorting_Permutation.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_apply5", 
                "camlNativevalues__mk_prod_accu_5119", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_curry6", 
                "camlNativevalues__str_decode_5828", 
                "caml_curry9", 
                "caml_curry7", 
                "camlNativevalues__mk_ind_accu_4947", 
                "caml_apply2", 
                "caml_apply3", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_curry2", 
                "camlNativecode__get_const_6301", 
                "caml_call_gc", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_young_limit", 
                "caml_curry3", 
                "camlNativecode__get_ind_6309", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_apply7", 
                "caml_curry5"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Rational/BigQ/_coq-native/NCoq_Numbers_Rational_BigQ_BigQ_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Rational/BigQ/.coq-native/NCoq_Numbers_Rational_BigQ_BigQ.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Numbers_Integer_BigZ_BigZ__const_NCoq_Numbers_Integer_BigZ_BigZ_BigZ_opp_3039", 
                "caml_apply10", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qinv_2766", 
                "caml_curry4", 
                "caml_apply6", 
                "camlNCoq_Numbers_Integer_BigZ_BigZ__const_NCoq_Numbers_Integer_BigZ_BigZ_BigZ_to_Z_2705", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qeq_bool_2735", 
                "caml_curry7", 
                "camlNCoq_Numbers_Natural_BigN_BigN__const_NCoq_Numbers_Natural_BigN_BigN_BigN_eqb_6871", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qle_2682", 
                "camlNCoq_Numbers_Integer_BigZ_BigZ__const_NCoq_Numbers_Integer_BigZ_BigZ_BigZ_add_3080", 
                "caml_apply11", 
                "caml_curry6", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Numbers_Integer_BigZ_BigZ__const_NCoq_Numbers_Integer_BigZ_BigZ_BigZ_compare_2963", 
                "camlNCoq_QArith_Qminmax", 
                "caml_apply3", 
                "caml_curry2", 
                "camlNCoq_QArith_QArith_base", 
                "camlNCoq_Numbers_Integer_BigZ_BigZ__const_NCoq_Numbers_Integer_BigZ_BigZ_BigZ_of_Z_2695", 
                "camlNCoq_Numbers_Integer_BigZ_BigZ__const_NCoq_Numbers_Integer_BigZ_BigZ_BigZ_div_eucl_3259", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_Numbers_Integer_BigZ_BigZ", 
                "caml_call_gc", 
                "camlNCoq_Numbers_Natural_BigN_BigN__x_pow_pos_4249_8800", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_Transitive_2976", 
                "camlNCoq_Numbers_Natural_BigN_BigN__const_NCoq_Numbers_Natural_BigN_BigN_BigN_gcd_8945", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qcompare_2718", 
                "caml_apply2", 
                "camlNCoq_Numbers_Integer_BigZ_BigZ__const_NCoq_Numbers_Integer_BigZ_BigZ_BigZ_mul_3145", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qmult_2751", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qeq_2679", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_curry5", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNCoq_Numbers_Integer_BigZ_BigZ__const_NCoq_Numbers_Integer_BigZ_BigZ_BigZ_pow_pos_3175", 
                "camlNCoq_Numbers_Integer_BigZ_BigZ__const_NCoq_Numbers_Integer_BigZ_BigZ_BigZ_to_N_3028", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qplus_2748", 
                "camlNCoq_Numbers_Natural_BigN_BigN", 
                "camlNCoq_Numbers_Natural_BigN_BigN__const_NCoq_Numbers_Natural_BigN_BigN_BigN_of_N_8988", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "camlNCoq_Numbers_Natural_BigN_BigN__const_NCoq_Numbers_Natural_BigN_BigN_BigN_div_eucl_8215", 
                "camlNCoq_QArith_Qcanon__const_NCoq_QArith_Qcanon_Q2Qc_2712", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qopp_2754", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qlt_2685", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Numbers_Integer_BigZ_BigZ__const_NCoq_Numbers_Integer_BigZ_BigZ_BigZ_eqb_2979", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNCoq_Classes_Morphisms", 
                "camlNCoq_Classes_RelationPairs__const_NCoq_Classes_RelationPairs_RelCompFun_Equivalence_2713", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_CompSpec2Type_3465", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Numbers_Integer_BigZ_BigZ__const_NCoq_Numbers_Integer_BigZ_BigZ_BigZ_square_3159", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativecode__get_const_6301", 
                "caml_curry3", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "caml_apply5", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_PER_2889", 
                "camlNCoq_QArith_Qcanon__const_NCoq_QArith_Qcanon_this_2666", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_apply8", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "caml_young_limit", 
                "caml_allocN", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_QArith_QOrderedType", 
                "camlNCoq_QArith_QArith_base__const_NCoq_QArith_QArith_base_Qpower_2872", 
                "caml_apply4", 
                "caml_alloc3"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rtrigo_reg_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rtrigo_reg.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_constant_accu_4657"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Classes/_coq-native/NCoq_Classes_RelationPairs_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Classes/.coq-native/NCoq_Classes_RelationPairs.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_young_limit", 
                "caml_apply2", 
                "caml_curry6", 
                "caml_curry4", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_relation_conjunction_3283", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_StrictOrder_Transitive_2810", 
                "camlNativevalues__str_decode_5828", 
                "caml_curry2", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_snd_3023", 
                "caml_curry3", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_StrictOrder_Irreflexive_2800", 
                "caml_call_gc"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Program/_coq-native/NCoq_Program_Basics_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Program/.coq-native/NCoq_Program_Basics.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "caml_call_gc", 
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "__cxa_finalize", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_prod_accu_5119"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_JMeq_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_JMeq.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_curry2", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_curry3", 
                "camlNativevalues__mk_ind_accu_4947", 
                "caml_apply4", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_ind_6309", 
                "camlNativecode__get_const_6301"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_Hurkens_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_Hurkens.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_apply8", 
                "caml_curry6", 
                "caml_young_limit", 
                "caml_curry11", 
                "camlNativevalues", 
                "caml_curry15", 
                "caml_apply2", 
                "caml_young_ptr", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_proj1_sig_2802", 
                "caml_make_array", 
                "caml_curry13", 
                "caml_curry14", 
                "camlNativecode__get_name_6297", 
                "caml_curry10", 
                "caml_curry2", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_sort_accu_4950", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_curry7", 
                "caml_ml_array_bound_error", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Init_Specif", 
                "caml_apply4", 
                "camlNativecode__get_const_6301", 
                "caml_allocN", 
                "caml_call_gc", 
                "caml_c_call"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zpow_facts_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zpow_facts.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_young_limit", 
                "camlNativecode__get_name_6297", 
                "caml_call_gc", 
                "camlNativevalues__mk_fix_accu_5185", 
                "caml_curry3", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_mul_2790", 
                "camlNCoq_Numbers_BinNums", 
                "caml_apply3", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_const_6301", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_curry4", 
                "caml_alloc3", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FMapFacts_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FMapFacts.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Bool/_coq-native/NCoq_Bool_Bvector_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Bool/.coq-native/NCoq_Bool_Bvector.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__mk_sw_accu_5114", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Vectors_Vector__const_NCoq_Vectors_Vector_last_3009", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Vectors_Vector__const_NCoq_Vectors_Vector_const_3018", 
                "camlNCoq_Vectors_Vector__const_NCoq_Vectors_Vector_map2_3347", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Vectors_Vector__const_NCoq_Vectors_Vector_map_3337", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Vectors_Vector", 
                "camlNCoq_Vectors_Vector__const_NCoq_Vectors_Vector_hd_3002", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Vectors_Vector__const_NCoq_Vectors_Vector_shiftout_3156", 
                "caml_young_limit", 
                "camlNCoq_Vectors_Vector__const_NCoq_Vectors_Vector_shiftrepeat_3199", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNativevalues__str_decode_5828", 
                "caml_allocN", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Vectors_Vector__x_shiftin_355_3191", 
                "caml_call_gc", 
                "camlNCoq_Vectors_Vector__const_NCoq_Vectors_Vector_tl_3149"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_Description_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_Description.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/funind/_coq-native/NCoq_funind_Recdef_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/funind/.coq-native/NCoq_funind_Recdef.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Arith_PeanoNat", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativecode__get_name_6297", 
                "__gmon_start__", 
                "camlNCoq_Arith_Compare_dec__const_NCoq_Arith_Compare_dec_le_lt_dec_2729", 
                "caml_young_limit", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_value_6218", 
                "caml_call_gc", 
                "camlNCoq_Init_Wf__const_NCoq_Init_Wf_Acc_intro_generator_2936", 
                "_ITM_deregisterTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_registerTMCloneTable", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_ind_6309", 
                "camlNativevalues__mk_prod_accu_5119", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/QArith/_coq-native/NCoq_QArith_Qfield_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/QArith/.coq-native/NCoq_QArith_Qfield.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativecode__get_const_6301", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__str_decode_5828"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zeven_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zeven.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Init_Logic", 
                "caml_call_gc", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_sort_6293", 
                "camlNativecode__get_const_6301", 
                "caml_apply2", 
                "caml_young_limit", 
                "camlNCoq_Init_Specif", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_value_6218", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rlogic_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rlogic.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/NatInt/_coq-native/NCoq_Numbers_NatInt_NZSqrt_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/NatInt/.coq-native/NCoq_Numbers_NatInt_NZSqrt.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Integer/SpecViaZ/_coq-native/NCoq_Numbers_Integer_SpecViaZ_ZSigZAxioms_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Integer/SpecViaZ/.coq-native/NCoq_Numbers_Integer_SpecViaZ_ZSigZAxioms.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FSetEqProperties_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FSetEqProperties.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zorder_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zorder.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_apply2", 
                "camlNativevalues__str_decode_5828", 
                "caml_curry3", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_ZArith_BinInt", 
                "camlNativecode__get_value_6218", 
                "caml_call_gc", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_Init_Specif", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_name_6297", 
                "caml_curry2", 
                "caml_apply3", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_compare_2865", 
                "caml_young_limit", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FSetDecide_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FSetDecide.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Ranalysis5_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Ranalysis5.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Reals_Rdefinitions", 
                "caml_curry5", 
                "caml_apply5", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rminus_2701", 
                "caml_young_limit", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_const_6301", 
                "caml_call_gc"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Program/_coq-native/NCoq_Program_Tactics_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Program/.coq-native/NCoq_Program_Tactics.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_curry2"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/extraction/_coq-native/NCoq_extraction_Extraction_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/extraction/.coq-native/NCoq_extraction_Extraction.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_registerTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/MSets/_coq-native/NCoq_MSets_MSetProperties_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/MSets/.coq-native/NCoq_MSets_MSetProperties.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/Abstract/_coq-native/NCoq_Numbers_Natural_Abstract_NParity_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/Abstract/.coq-native/NCoq_Numbers_Natural_Abstract_NParity.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Logic/_coq-native/NCoq_Logic_RelationalChoice_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Logic/.coq-native/NCoq_Logic_RelationalChoice.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_constant_accu_4657", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_Bool_nat_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_Bool_nat.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Bool_Sumbool__const_NCoq_Bool_Sumbool_bool_of_sumbool_2886", 
                "camlNCoq_Init_Logic", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_call_gc", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Arith_PeanoNat__const_NCoq_Arith_PeanoNat_Nat_eq_dec_3343", 
                "caml_young_limit", 
                "camlNCoq_Arith_Compare_dec__const_NCoq_Arith_Compare_dec_zerop_2659", 
                "camlNCoq_Init_Peano", 
                "camlNCoq_Arith_Compare_dec__const_NCoq_Arith_Compare_dec_le_lt_dec_2729", 
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Bool_Sumbool__const_NCoq_Bool_Sumbool_sumbool_not_2874", 
                "__cxa_finalize"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Sets/_coq-native/NCoq_Sets_Integers_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Sets/.coq-native/NCoq_Sets_Integers.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_value_6218", 
                "caml_young_limit", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Init_Peano", 
                "caml_curry4", 
                "camlNativecode__get_ind_6309", 
                "caml_call_gc", 
                "caml_alloc1", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_const_6301", 
                "caml_curry2"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Init/_coq-native/NCoq_Init_Peano_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Init/.coq-native/NCoq_Init_Peano.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "caml_call_gc", 
                "caml_curry3", 
                "caml_curry4", 
                "camlNativecode__get_name_6297", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_allocN", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_alloc1", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativevalues__mk_sort_accu_4950", 
                "caml_curry2", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_curry6", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_Init_Nat", 
                "caml_curry5", 
                "camlNativevalues__mk_ind_accu_4947", 
                "caml_apply4", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativecode__get_match_6305", 
                "caml_apply3", 
                "caml_apply2", 
                "camlNativecode__get_sort_6293", 
                "camlNativecode__get_const_6301", 
                "caml_young_limit", 
                "camlNCoq_Init_Datatypes", 
                "caml_alloc3"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/FSets/_coq-native/NCoq_FSets_FSetList_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/FSets/.coq-native/NCoq_FSets_FSetList.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/micromega/_coq-native/NCoq_micromega_RingMicromega_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/micromega/.coq-native/NCoq_micromega_RingMicromega.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_micromega_OrderedRing__const_NCoq_micromega_OrderedRing_SORtimes_wd_2749", 
                "camlNCoq_PArith_BinPos", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "caml_curry9", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_app_3138", 
                "camlNCoq_PArith_BinPos__x_add_67_2739", 
                "caml_curry26", 
                "camlNCoq_micromega_OrderedRing__const_NCoq_micromega_OrderedRing_SORopp_wd_2776", 
                "caml_curry25", 
                "camlNCoq_micromega_EnvRing__const_NCoq_micromega_EnvRing_Pphi_4651", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_curry23", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_apply17", 
                "camlNativecode__get_value_6218", 
                "caml_young_limit", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "caml_alloc3", 
                "camlNCoq_micromega_EnvRing__const_NCoq_micromega_EnvRing_norm_aux_5168", 
                "camlNCoq_micromega_EnvRing__const_NCoq_micromega_EnvRing_Pmul_3900", 
                "camlNativecode__get_ind_6309", 
                "caml_curry2", 
                "caml_apply4", 
                "camlNCoq_setoid_ring_Ring_theory", 
                "caml_apply7", 
                "caml_apply21", 
                "camlNCoq_Numbers_BinNums", 
                "caml_curry4", 
                "camlNCoq_Init_Logic", 
                "caml_curry5", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_andb_2713", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "caml_curry6", 
                "camlNCoq_micromega_EnvRing", 
                "camlNCoq_PArith_BinPos__x_succ_8_2676", 
                "camlNCoq_Classes_Morphisms", 
                "camlNativevalues__str_decode_5828", 
                "caml_curry3", 
                "camlNativevalues__mk_sw_accu_5114", 
                "caml_curry8", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_micromega_EnvRing__const_NCoq_micromega_EnvRing_Psquare_3963", 
                "camlNCoq_micromega_EnvRing__const_NCoq_micromega_EnvRing_Padd_3564", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_micromega_EnvRing__const_NCoq_micromega_EnvRing_PaddC_3224", 
                "camlNativecode__get_match_6305", 
                "caml_curry11", 
                "caml_curry10", 
                "camlNCoq_micromega_OrderedRing__const_NCoq_micromega_OrderedRing_SORsetoid_2693", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_micromega_EnvRing__const_NCoq_micromega_EnvRing_PsubC_3236", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Datatypes", 
                "caml_apply3", 
                "camlNCoq_micromega_EnvRing__const_NCoq_micromega_EnvRing_PEeval_4995", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "camlNCoq_Lists_List__const_NCoq_Lists_List_map_3324", 
                "caml_apply2", 
                "camlNCoq_micromega_Env__const_NCoq_micromega_Env_Env_2654", 
                "camlNCoq_micromega_OrderedRing__const_NCoq_micromega_OrderedRing_SORplus_wd_2730", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Lists_List__const_NCoq_Lists_List_nth_2884", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "caml_call_gc", 
                "caml_curry15", 
                "camlNCoq_micromega_OrderedRing__const_NCoq_micromega_OrderedRing_SORrt_2859", 
                "caml_curry18", 
                "camlNCoq_micromega_EnvRing__const_NCoq_micromega_EnvRing_Psub_3665"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Classes/_coq-native/NCoq_Classes_Morphisms_Prop_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Classes/.coq-native/NCoq_Classes_Morphisms_Prop.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_Init_Logic", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "caml_curry4", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_ex_ind_2830", 
                "caml_call_gc", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "caml_curry3", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_curry2", 
                "caml_curry7", 
                "caml_apply2", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_match_6305", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNativecode__get_const_6301", 
                "caml_young_limit", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_and_ind_2720", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "caml_curry5", 
                "caml_curry6"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_Zbool_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_Zbool.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "caml_call_gc", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_value_6218", 
                "__cxa_finalize", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_ZArith_Zeven__const_NCoq_ZArith_Zeven_Zeven_2719", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_eq_dec_4548", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Datatypes", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_ZArith_ZArith_dec__const_NCoq_ZArith_ZArith_dec_Z_ge_lt_dec_3136", 
                "camlNCoq_ZArith_BinInt", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Bool_Sumbool__const_NCoq_Bool_Sumbool_bool_of_sumbool_2886", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_leb_3074", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_gt_4423", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lt_4420", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_ZArith_ZArith_dec", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_ZArith_ZArith_dec__const_NCoq_ZArith_ZArith_dec_Z_lt_dec_2950", 
                "caml_young_limit", 
                "camlNCoq_ZArith_Zeven__const_NCoq_ZArith_Zeven_Zodd_2737", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_ZArith_ZArith_dec__const_NCoq_ZArith_ZArith_dec_Z_gt_dec_3040", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_ZArith_Zeven__const_NCoq_ZArith_Zeven_Zeven_odd_dec_2792", 
                "camlNCoq_ZArith_ZArith_dec__const_NCoq_ZArith_ZArith_dec_Z_le_gt_dec_3119", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_compare_2865", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_ge_4429", 
                "camlNCoq_Init_Specif", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_le_4426"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/setoid_ring/_coq-native/NCoq_setoid_ring_Ring_base_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/plugins/setoid_ring/.coq-native/NCoq_setoid_ring_Ring_base.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/plugins/cc/cc_plugin_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/plugins/cc/cc_plugin.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlConstr__eq_constr_nounivs_5550", 
                "caml_exn_Not_found", 
                "camlHashtbl__find_1621", 
                "camlTermops__dependent_main_6634", 
                "camlCClosure__create_clos_infos_6755", 
                "caml_alloc1", 
                "camlPp__hov_1649", 
                "camlPp__prlist_sep_lastsep_1921", 
                "camlCoqlib", 
                "camlProofview__catchable_exception_6443", 
                "camlArray__to_list_1285", 
                "camlSet__remove_1375", 
                "camlTactics__exact_check_15952", 
                "camlTacticals__pf_constr_of_global_7313", 
                "camlCArray__smartmap_1550", 
                "camlPp__3", 
                "camlTactics", 
                "camlGlobal__assert_not_parsing_3775", 
                "camlEvd__new_sort_variable_7332", 
                "_ITM_deregisterTMCloneTable", 
                "camlTacticals__tclFAIL_6486", 
                "camlHashset__combine4_1459", 
                "camlGlobnames__is_global_4447", 
                "camlList__iter_1272", 
                "caml_string_equal", 
                "camlHashtbl__find_all_1651", 
                "camlCList__init_1565", 
                "camlProofview__tclZERO_3424", 
                "caml_exn_Assert_failure", 
                "camlPre_env__push_rel_4645", 
                "camlList__fold_right_1292", 
                "camlHashtbl__add_1596", 
                "camlNames__map_4512", 
                "camlConstr__mkApp_4803", 
                "camlTacmach", 
                "camlMltop__declare_cache_obj_3915", 
                "camlTacticals__tclTHENS_6750", 
                "camlCoqlib__check_required_library_5404", 
                "camlTacticals__tclTRY_6765", 
                "camlCList__split_1587", 
                "camlProofview__enter_6507", 
                "camlTacticals", 
                "camlEvarutil__nf_evar_5841", 
                "camlEquality__build_selector_9596", 
                "camlPp__str_1375", 
                "camlQueue__add_1219", 
                "camlHashtbl__mem_1672", 
                "camlTyping__type_of_inner_6067", 
                "camlProofview__nf_enter_6485", 
                "caml_make_array", 
                "camlConstrarg", 
                "camlRefiner", 
                "camlUtil", 
                "camlNames", 
                "camlCArray__for_all2_1397", 
                "camlType_errors", 
                "camlGlobal", 
                "camlList__exists_1350", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlProofview__tactic_6596", 
                "caml_int_compare", 
                "camlConstr__hash_5969", 
                "camlList__length_aux_1204", 
                "camlHashtbl__6", 
                "camlSet__add_1282", 
                "camlEvarsolve__refresh_universes_inner_9216", 
                "camlEnviron__is_projection_6011", 
                "caml_alloc2", 
                "camlInductiveops__constructor_nallargs_env_5720", 
                "camlGoptions__declare_option_3583", 
                "camlProofview__of_tactic_6689", 
                "camlCList__compare_1637", 
                "camlFeedback", 
                "camlPp__glue_1211", 
                "camlTacenv__register_ltac_5535", 
                "camlCClosure__59", 
                "camlTerm__destProd_4620", 
                "camlCClosure__whd_val_6741", 
                "__cxa_finalize", 
                "camlTerm__decompose_prod_n_assum_5475", 
                "camlMap__add_1291", 
                "camlVars__substn_many_3745", 
                "camlTyping__e_sort_of_5392", 
                "camlTerm__destApp_4642", 
                "camlCoqlib__find_reference_5296", 
                "camlSorts__hash_1733", 
                "camlGlobal__lookup_inductive_4711", 
                "camlCErrors__errorlabstrm_1338", 
                "camlConstr__mkRel_4620", 
                "camlCArray__rev_1451", 
                "camlArray__blit_1246", 
                "caml_ml_array_bound_error", 
                "camlNameops__10", 
                "camlProofview__tclORELSE_3430", 
                "camlNames__of_string_1937", 
                "camlTacenv__register_ml_tactic_inner_5972", 
                "camlList__2", 
                "camlTacmach__of_old_5019", 
                "camlTacticals__tclREPEAT0_6798", 
                "camlVars__closedn_3615", 
                "camlTacmach__pf_unsafe_type_of_5029", 
                "camlCList__map_1515", 
                "camlLoc__3", 
                "camlPp", 
                "camlEnviron__lookup_projection_5920", 
                "camlContext__to_tuple_4817", 
                "camlTacmach__pf_ids_of_hyps_4528", 
                "camlArray__copy_1229", 
                "camlCMap__fun_2503", 
                "camlVars__make_subst_3754", 
                "camlQueue__take_1229", 
                "caml_alloc3", 
                "camlSet__min_elt_1319", 
                "__gmon_start__", 
                "camlHashtbl__Make_1702", 
                "camlTermops", 
                "camlTypeops__type_of_constant_knowing_parameters_5808", 
                "camlHashtbl__create_inner_2188", 
                "camlSet__singleton_1291", 
                "camlPervasives__failwith_1005", 
                "camlProofview__tclEVARS_6362", 
                "camlSet__cardinal_1505", 
                "camlControl__check_for_interrupt_1300", 
                "camlPervasives__invalid_arg_1007", 
                "camlMltop__add_known_module_3856", 
                "camlMap__iter_1434", 
                "camlTacticals__tclORELSE0_6524", 
                "camlHashtbl__remove_1611", 
                "camlArray__of_list_1294", 
                "camlMap__find_1303", 
                "caml_backtrace_pos", 
                "caml_young_ptr", 
                "camlConstr__mkSort_4771", 
                "camlHashtbl", 
                "camlEvarutil", 
                "camlArray__iteri_1275", 
                "camlCErrors__anomaly_1311", 
                "camlEvd__29", 
                "camlCString__hash_1801", 
                "camlCStack__pop_1213", 
                "camlTerm__prod_applist_5384", 
                "caml_raise_exn", 
                "camlNamegen__next_ident_away_6375", 
                "camlEvd__find_6390", 
                "camlTacinterp__cast_10828", 
                "camlStdarg", 
                "caml_fresh_oo_id", 
                "camlTerm__strip_outer_cast_4695", 
                "camlSet__iter_1460", 
                "camlArray__map_1261", 
                "camlInt", 
                "camlCErrors__noncritical_1426", 
                "camlCClosure__mk_clos_6202", 
                "camlTacentries__add_ml_tactic_notation_8862", 
                "camlTactics__assert_before_8997", 
                "camlGoal__nf_hyps_2442", 
                "camlGoptions", 
                "camlProofview", 
                "camlTactics__simplest_elim_14338", 
                "camlNames__eq_constructor_3850", 
                "camlPp__6", 
                "camlNames__of_string_soft_1940", 
                "camlHashtbl__replace_1666", 
                "camlRefiner__tclTHEN_2824", 
                "camlVars__lift_3730", 
                "camlSet__union_1384", 
                "camlList__fold_left_1286", 
                "caml_allocN", 
                "camlQueue", 
                "camlArray__fold_left_1304", 
                "camlTacticals__tclZEROMSG_6489", 
                "camlUniverses__constr_of_global_6604", 
                "camlRefiner__pf_env_2311", 
                "camlTacmach__refine_4732", 
                "camlTacticals__tclTHENFIRSTn_6738", 
                "caml_c_call", 
                "caml_make_vect", 
                "caml_young_limit", 
                "camlTerm", 
                "camlList__map_1248", 
                "camlConstr__mkConst_4816", 
                "camlMap__mem_1383", 
                "camlPervasives__string_of_int_1150", 
                "camlProofview__tclPROGRESS_6145", 
                "camlList__rev_append_1236", 
                "camlTyping", 
                "camlCClosure", 
                "camlRefiner__goal_goal_list_2436", 
                "caml_modify", 
                "camlGoal__new_goal_with_4117", 
                "camlTacticals__pf_constr_of_global_5821", 
                "_ITM_registerTMCloneTable", 
                "camlTermops__print_constr_5331"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/BigN/_coq-native/NCoq_Numbers_Natural_BigN_BigN_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/BigN/.coq-native/NCoq_Numbers_Natural_BigN_BigN.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNCoq_Relations_Relation_Definitions__const_NCoq_Relations_Relation_Definitions_relation_2654", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleMul", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_add_c_2869", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_to_nat_3949", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "camlNCoq_Init_Specif", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Nat__const_NCoq_Init_Nat_pred_2665", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleBase__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleBase_get_low_3137", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleCyclic__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleCyclic_mk_zn2z_ops_5678", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_sub_2946", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_testbit_4294", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_zdigits_2720", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_lor_3113", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_head0_2763", 
                "caml_allocN", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_tail0_2771", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_modulo_gt_3030", 
                "camlNCoq_Numbers_Cyclic_Int31_Cyclic31", 
                "camlNCoq_Numbers_Natural_BigN_Nbasic__const_NCoq_Numbers_Natural_BigN_Nbasic_get_height_2767", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_compare_2808", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_mul_c_2967", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_spec_zdigits_3231", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms", 
                "camlNCoq_Init_Wf__const_NCoq_Init_Wf_well_founded_2736", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_to_N_3181", 
                "camlNCoq_Numbers_Natural_BigN_Nbasic__const_NCoq_Numbers_Natural_BigN_Nbasic_compare_mn_1_3457", 
                "caml_alloc1", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_WW_4132", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lt_4420", 
                "camlNCoq_ZArith_BinIntDef__const_NCoq_ZArith_BinIntDef_Z_modulo_3338", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_ZArith_BinIntDef__const_NCoq_ZArith_BinIntDef_Z_add_2751", 
                "camlNCoq_Numbers_Natural_BigN_Nbasic__x_diff_r_159_3202", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_spec_sub_3586", 
                "camlNCoq_Program_Basics", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_spec_compare_3310", 
                "camlNCoq_Bool_Bool__const_NCoq_Bool_Bool_iff_reflect_3024", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleDivn1", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleBase__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleBase_extend_aux_2799", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_spec_head0_3880", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_mul_2790", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_land_3121", 
                "camlNCoq_Classes_Morphisms_Prop", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_succ_2885", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_zero_2779", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_sub_c_2922", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Numbers_BinNums", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_is_even_3084", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_spec_to_Z_3198", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_Init_Datatypes", 
                "__gmon_start__", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_Init_Wf", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleBase", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_relation_equivalence_3279", 
                "camlNCoq_Arith_PeanoNat__x_max_119_2827", 
                "camlNCoq_Numbers_Natural_BigN_Nbasic__x_plength_8_2705", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_eq0_2820", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_of_pos_2751", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleMul__x_double_mul_add_n1_478_3102", 
                "camlNCoq_Numbers_Natural_BigN_Nbasic__const_NCoq_Numbers_Natural_BigN_Nbasic_reduce_n1_3277", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleBase__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleBase_extend_2814", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_CompSpec2Type_3465", 
                "camlNCoq_ZArith_BinIntDef__const_NCoq_ZArith_BinIntDef_Z_max_3132", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleMul__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleMul_double_mul_add_n1_3096", 
                "__cxa_finalize", 
                "camlNCoq_ZArith_BinIntDef__const_NCoq_ZArith_BinIntDef_Z_mul_2790", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_spec_div21_3715", 
                "camlNCoq_Numbers_Natural_BigN_Nbasic__x_diff_110_2926", 
                "camlNCoq_Lists_StreamMemo__const_NCoq_Lists_StreamMemo_dmemo_list_2879", 
                "camlNCoq_ZArith_BinIntDef", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_modulo_3338", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_opp_2764", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_max_3132", 
                "caml_call_gc", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_CompOpp_3174", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_peano_rect_4298", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_snd_3023", 
                "camlNCoq_Lists_StreamMemo__const_NCoq_Lists_StreamMemo_dmemo_get_2883", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_square_c_2987", 
                "camlNCoq_Numbers_Natural_BigN_Nbasic", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_one_2787", 
                "camlNCoq_Arith_PeanoNat", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_sqrt_3105", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_sub_carry_2954", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_PER_2889", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_add_mul_div_3068", 
                "camlNCoq_Numbers_Natural_BigN_Nbasic__const_NCoq_Numbers_Natural_BigN_Nbasic_extend_tr_3250", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleCyclic", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_div21_3001", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_lxor_3129", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_div_gt_3014", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_spec_0_3261", 
                "camlNCoq_Numbers_Natural_BigN_Nbasic__const_NCoq_Numbers_Natural_BigN_Nbasic_castm_3219", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType__x_word_67_2796", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_le_4426", 
                "camlNCoq_Classes_Morphisms", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleCyclic__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleCyclic_mk_zn2z_ops_karatsuba_8517", 
                "camlNCoq_Numbers_Natural_BigN_Nbasic__x_diff_l_135_3159", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "camlNCoq_ZArith_BinIntDef__const_NCoq_ZArith_BinIntDef_Z_testbit_4294", 
                "camlNCoq_ZArith_BinIntDef__const_NCoq_ZArith_BinIntDef_Z_opp_2764", 
                "caml_young_limit", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_OW_4105", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_pred_c_2914", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_digits_2709", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleDivn1__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleDivn1_double_divn1_3308", 
                "caml_alloc3", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "camlNCoq_ZArith_BinIntDef__const_NCoq_ZArith_BinIntDef_Z_div_3330", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_succ_c_2856", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleDivn1__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleDivn1_double_modn1_3350", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_to_Z_2739", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleMul__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleMul_w_mul_add_3245", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_div_3330", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_ZArith_BinIntDef__const_NCoq_ZArith_BinIntDef_Z_pow_2805", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_pow_2805", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlNativevalues__is_accu_5182", 
                "camlNativecode__get_sort_6293"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Classes/_coq-native/NCoq_Classes_EquivDec_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Classes/.coq-native/NCoq_Classes_EquivDec.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_curry3", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_curry15", 
                "caml_curry14", 
                "caml_curry5", 
                "camlNativevalues__is_accu_5182", 
                "caml_young_limit", 
                "caml_curry4", 
                "caml_curry9", 
                "caml_curry8", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Arith_PeanoNat", 
                "caml_apply3", 
                "camlNCoq_Bool_Bool", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_complement_2669", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "caml_apply6", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_and_ind_2720", 
                "caml_curry12", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNativecode__get_match_6305", 
                "caml_call_gc", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_eq_equivalence_2978", 
                "camlNCoq_Logic_Decidable__const_NCoq_Logic_Decidable_decidable_2654", 
                "caml_curry10", 
                "caml_curry7", 
                "caml_apply4", 
                "caml_curry11", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "camlNativecode__get_sort_6293", 
                "caml_apply5", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_curry6", 
                "camlNCoq_Init_Specif", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_value_6218", 
                "camlNativecode__get_const_6301", 
                "caml_curry2"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Program/_coq-native/NCoq_Program_Program_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Program/.coq-native/NCoq_Program_Program.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNativevalues__str_decode_5828", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Program/_coq-native/NCoq_Program_Program_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Program/.coq-native/NCoq_Program_Program.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "camlDeclaremods__get_library_native_symbols_6455"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rpow_def_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rpow_def.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_alloc3", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativecode__get_match_6305", 
                "caml_young_limit", 
                "caml_curry2", 
                "caml_call_gc", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_apply2", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Datatypes", 
                "camlNativevalues__mk_prod_accu_5119", 
                "caml_curry3"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/MSets/_coq-native/NCoq_MSets_MSets_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/MSets/.coq-native/NCoq_MSets_MSets.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Bool/_coq-native/NCoq_Bool_Bool_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Bool/.coq-native/NCoq_Bool_Bool.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_curry3", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Specif", 
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativevalues__str_decode_5828", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativecode__get_const_6301", 
                "caml_apply2", 
                "caml_curry2", 
                "caml_curry4", 
                "camlNCoq_Init_Logic", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_orb_2719", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_bool_rec_2706", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_and_rec_2724", 
                "camlNativevalues__mk_sort_accu_4950", 
                "caml_apply4", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "caml_call_gc", 
                "camlNativecode__get_sort_6293", 
                "camlNativecode__get_ind_6309", 
                "caml_young_limit", 
                "caml_apply3", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_andb_2713", 
                "_GLOBAL_OFFSET_TABLE_", 
                "caml_curry6"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/MSets/_coq-native/NCoq_MSets_MSetList_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/MSets/.coq-native/NCoq_MSets_MSetList.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "caml_young_limit", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Init_Logic", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNativecode__get_const_6301", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "caml_call_gc", 
                "caml_curry2", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "_GLOBAL_OFFSET_TABLE_"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/ZArith/_coq-native/NCoq_ZArith_ZArith_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/ZArith/.coq-native/NCoq_ZArith_ZArith.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Numbers/Natural/BigN/_coq-native/NCoq_Numbers_Natural_BigN_BigN_o": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib64/coq/theories/Numbers/Natural/BigN/.coq-native/NCoq_Numbers_Natural_BigN_BigN.o", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "no, non-ELF (ignored)", 
                " Position Independent Executable": "not a known ELF type!? ()", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, non-ELF (ignored)"
            }, 
            "report-functions": [
                "camlNCoq_PArith_BinPos__const_NCoq_PArith_BinPos_Pos_to_nat_3949", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleCyclic__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleCyclic_mk_zn2z_ops_karatsuba_8517", 
                "camlNCoq_ZArith_BinIntDef", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_OW_4105", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_head0_2763", 
                "caml_young_limit", 
                "camlNCoq_ZArith_BinIntDef__const_NCoq_ZArith_BinIntDef_Z_opp_2764", 
                "caml_call_gc", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_div_gt_3014", 
                "caml_curry8", 
                "camlNCoq_Numbers_Natural_BigN_Nbasic__const_NCoq_Numbers_Natural_BigN_Nbasic_castm_3219", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType__x_word_67_2796", 
                "camlNativevalues__str_decode_5828", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_minus_one_2795", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Reflexive_2864", 
                "camlNCoq_Arith_PeanoNat", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_sqrt_3105", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleDivn1", 
                "camlNCoq_Numbers_Natural_BigN_Nbasic", 
                "camlNCoq_Numbers_Cyclic_Int31_Cyclic31", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_spec_compare_3310", 
                "camlNCoq_Relations_Relation_Definitions__const_NCoq_Relations_Relation_Definitions_relation_2654", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_spec_div21_3715", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_opp_2764", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_modulo_gt_3030", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_snd_3023", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_relation_equivalence_3279", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNCoq_Classes_Morphisms", 
                "camlNCoq_Numbers_Natural_BigN_Nbasic__const_NCoq_Numbers_Natural_BigN_Nbasic_get_height_2767", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_spec_head0_3880", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleMul__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleMul_w_mul_add_3245", 
                "caml_curry25", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_div21_3001", 
                "camlNCoq_Program_Basics", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_CompSpec2Type_3465", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_add_2751", 
                "caml_curry16", 
                "caml_curry19", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_spec_0_3261", 
                "caml_apply4", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_WW_4132", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleCyclic", 
                "camlNCoq_Numbers_Natural_BigN_Nbasic__const_NCoq_Numbers_Natural_BigN_Nbasic_extend_tr_3250", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleDivn1__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleDivn1_double_divn1_3308", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_trans_2927", 
                "camlNativevalues__is_accu_5182", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleBase", 
                "camlNCoq_Numbers_Natural_BigN_Nbasic__x_diff_r_159_3202", 
                "caml_apply3", 
                "camlNCoq_Lists_StreamMemo__const_NCoq_Lists_StreamMemo_dmemo_get_2883", 
                "camlNCoq_Arith_PeanoNat__x_max_119_2827", 
                "camlNCoq_Init_Wf__const_NCoq_Init_Wf_well_founded_2736", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Transitive_2884", 
                "camlNCoq_ZArith_BinIntDef__const_NCoq_ZArith_BinIntDef_Z_div_3330", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_f_equal_2945", 
                "caml_apply8", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_lt_4420", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_sub_c_2922", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_PER_2889", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_one_2787", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_div_3330", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_land_3121", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_is_even_3084", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_modulo_3338", 
                "camlNCoq_Numbers_Natural_BigN_Nbasic__x_diff_110_2926", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_lor_3113", 
                "camlNCoq_ZArith_BinIntDef__const_NCoq_ZArith_BinIntDef_Z_add_2751", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleBase__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleBase_extend_2814", 
                "camlNCoq_ZArith_BinIntDef__const_NCoq_ZArith_BinIntDef_Z_modulo_3338", 
                "caml_curry6", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_spec_zdigits_3231", 
                "camlNCoq_Init_Specif", 
                "caml_curry12", 
                "camlNCoq_Numbers_Natural_BigN_Nbasic__const_NCoq_Numbers_Natural_BigN_Nbasic_compare_mn_1_3457", 
                "caml_curry4", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleBase__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleBase_extend_aux_2799", 
                "camlNCoq_Numbers_Natural_BigN_Nbasic__x_plength_8_2705", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_mul_c_2967", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_mul_2790", 
                "caml_apply20", 
                "camlNCoq_Classes_Morphisms_Prop", 
                "caml_apply11", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleDivn1__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleDivn1_double_modn1_3350", 
                "caml_allocN", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_digits_2709", 
                "camlNCoq_Numbers_Natural_BigN_Nbasic__x_diff_l_135_3159", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_pred_c_2914", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_ind_2683", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_succ_2885", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_square_c_2987", 
                "caml_apply5", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_spec_add_mul_div_3936", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "caml_curry2", 
                "camlNCoq_Lists_StreamMemo__const_NCoq_Lists_StreamMemo_dmemo_list_2879", 
                "camlNCoq_NArith_BinNat__const_NCoq_NArith_BinNat_N_peano_rect_4298", 
                "caml_curry11", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_iff_2788", 
                "camlNCoq_Numbers_BinNums", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_CompOpp_3174", 
                "camlNCoq_Init_Datatypes", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_zero_2779", 
                "caml_curry23", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_to_Z_2739", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_pow_2805", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_add_c_2869", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleMul", 
                "camlNativecode__get_name_6297", 
                "camlNativevalues__mk_fix_accu_5185", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_spec_to_Z_3198", 
                "camlNCoq_ZArith_BinIntDef__const_NCoq_ZArith_BinIntDef_Z_mul_2790", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_eq0_2820", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_succ_c_2856", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleMul__x_double_mul_add_n1_478_3102", 
                "camlNCoq_ZArith_BinIntDef__const_NCoq_ZArith_BinIntDef_Z_testbit_4294", 
                "caml_apply2", 
                "caml_curry3", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_max_3132", 
                "camlNCoq_Bool_Bool__const_NCoq_Bool_Bool_iff_reflect_3024", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_compare_2808", 
                "camlNCoq_ZArith_BinIntDef__const_NCoq_ZArith_BinIntDef_Z_max_3132", 
                "camlNCoq_Numbers_Natural_BigN_Nbasic__const_NCoq_Numbers_Natural_BigN_Nbasic_reduce_n1_3277", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_not_2687", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_tail0_2771", 
                "camlNativecode__get_const_6301", 
                "camlNativevalues__mk_constant_accu_4657", 
                "caml_curry10", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleBase__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleBase_get_low_3137", 
                "_GLOBAL_OFFSET_TABLE_", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_sub_carry_2954", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_spec_sub_3586", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleMul__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleMul_double_mul_add_n1_3096", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_lxor_3129", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleCyclic__const_NCoq_Numbers_Cyclic_DoubleCyclic_DoubleCyclic_mk_zn2z_ops_5678", 
                "camlNCoq_Init_Logic", 
                "caml_curry5", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_zdigits_2720", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_sub_2946", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_add_mul_div_3068", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_le_4426", 
                "camlNCoq_Init_Datatypes__case_xorb_6_2728", 
                "camlNativecode__get_sort_6293", 
                "camlNCoq_ZArith_BinIntDef__const_NCoq_ZArith_BinIntDef_Z_pow_2805", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms__const_NCoq_Numbers_Cyclic_Abstract_CyclicAxioms_ZnZ_of_pos_2751", 
                "camlNCoq_Init_Nat__const_NCoq_Init_Nat_pred_2665", 
                "camlNativevalues__mk_sort_accu_4950", 
                "camlNCoq_Numbers_Cyclic_DoubleCyclic_DoubleType", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_testbit_4294", 
                "camlNCoq_Classes_RelationClasses__const_NCoq_Classes_RelationClasses_Equivalence_Symmetric_2874", 
                "caml_curry7", 
                "camlNativecode__get_ind_6309", 
                "camlNCoq_ZArith_BinInt__const_NCoq_ZArith_BinInt_Z_to_N_3181", 
                "camlNCoq_Numbers_Cyclic_Abstract_CyclicAxioms", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_fst_3014", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNCoq_Init_Wf", 
                "caml_curry9", 
                "caml_alloc1"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Arith/_coq-native/NCoq_Arith_Arith_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Arith/.coq-native/NCoq_Arith_Arith.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__str_decode_5828", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Reals/_coq-native/NCoq_Reals_Rtrigo_def_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Reals/.coq-native/NCoq_Reals_Rtrigo_def.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNCoq_Init_Peano", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "__cxa_finalize", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rdiv_2704", 
                "camlNCoq_Arith_Factorial__x_fact_7_2674", 
                "camlNCoq_Reals_Raxioms", 
                "caml_call_gc", 
                "camlNativecode__get_match_6305", 
                "camlNCoq_Reals_RIneq", 
                "caml_alloc1", 
                "camlNCoq_Reals_Rbasic_fun__const_NCoq_Reals_Rbasic_fun_Rabs_2732", 
                "camlNCoq_Reals_PartSum", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_r_2953", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_ind_2892", 
                "camlNCoq_Init_Nat__x_add_15_2689", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Reals_Alembert__const_NCoq_Reals_Alembert_Alembert_C3_3966", 
                "camlNCoq_Init_Nat__x_mul_27_2706", 
                "camlNativevalues__str_decode_5828", 
                "camlNativecode__get_value_6218", 
                "camlNCoq_Reals_Rdefinitions__const_NCoq_Reals_Rdefinitions_Rminus_2701", 
                "camlNCoq_setoid_ring_RealField", 
                "camlNCoq_Reals_Rbasic_fun", 
                "camlNCoq_Reals_Rtrigo_fun", 
                "camlNativevalues__mk_constant_accu_4657", 
                "camlNCoq_Arith_PeanoNat", 
                "camlNCoq_setoid_ring_Ring_tac", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Specif__const_NCoq_Init_Specif_proj1_sig_2802", 
                "_ITM_deregisterTMCloneTable", 
                "camlNCoq_Init_Logic", 
                "camlNCoq_Reals_Rpow_def__x_pow_10_2677", 
                "camlNativecode__get_const_6301", 
                "camlNCoq_Reals_Rfunctions__const_NCoq_Reals_Rfunctions_infinite_sum_2823", 
                "camlCamlinternalLazy__force_lazy_block_1264", 
                "camlNativecode__get_name_6297", 
                "camlNCoq_Reals_Rdefinitions", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_eq_ind_2894", 
                "camlNCoq_Reals_Raxioms__x_INR_12_2722", 
                "__gmon_start__", 
                "camlNCoq_Reals_Rfunctions__x_sum_f_R0_41_2802"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/coq/theories/Init/_coq-native/NCoq_Init_Specif_cmxs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/coq/theories/Init/.coq-native/NCoq_Init_Specif.cmxs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "camlNativecode__get_match_6305", 
                "camlNativevalues__mk_sw_accu_5114", 
                "camlNativevalues__mk_fix_accu_5185", 
                "__gmon_start__", 
                "camlNCoq_Init_Datatypes", 
                "_ITM_deregisterTMCloneTable", 
                "camlNativevalues__mk_ind_accu_4947", 
                "camlNativevalues__mk_prod_accu_5119", 
                "camlNCoq_Init_Logic__const_NCoq_Init_Logic_False_rec_2685", 
                "caml_call_gc", 
                "__cxa_finalize", 
                "camlNativevalues__str_decode_5828", 
                "caml_young_limit", 
                "camlNativecode__get_ind_6309", 
                "camlDeclaremods__get_library_native_symbols_6455", 
                "camlNCoq_Init_Logic", 
                "_ITM_registerTMCloneTable", 
                "camlNCoq_Init_Datatypes__const_NCoq_Init_Datatypes_nat_ind_2892"
            ], 
            "rpm": "coq-8.6.1-1.fc27.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " coq", 
            "License": " LGPLv2", 
            "URL": " https://coq.inria.fr/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-27.phx2.fedoraproject.org", 
            "Description": "\nCoq is a formal proof management system. It allows for the development\nof theorems through first order logic that are mechanically checked by\nthe machine. Sets of definitions and theorems can be saved as compiled\nmodules and loaded into the system.\n\nThis package provides the main Coq binary without an optional IDE,\nCoqide.\n", 
            "Build Date": " Wed 06 Sep 2017 12:29:11 PM EDT", 
            "Source RPM": " coq-8.6.1-1.fc27.src.rpm", 
            "Version": " 8.6.1", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Wed 06 Sep 2017 01:20:15 PM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 1.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Proof management system", 
            "Size": " 314569781"
        }
    }
}