{
    "results": {
        "usr/bin/symphony": {
            "report-functions": [
                "_Z9sym_solveP15SYM_ENVIRONMENT", 
                "_Z17sym_get_int_paramP15SYM_ENVIRONMENTPKcPi", 
                "_Z11sym_read_lpP15SYM_ENVIRONMENTPc", 
                "__cxa_atexit", 
                "__gmon_start__", 
                "__cxa_finalize", 
                "_Z20sym_open_environmentv", 
                "_ZNSt8ios_base4InitC1Ev", 
                "sscanf", 
                "_ITM_deregisterTMCloneTable", 
                "malloc", 
                "_Z12sym_mc_solveP15SYM_ENVIRONMENT", 
                "__printf_chk", 
                "__libc_start_main", 
                "_Z12sym_read_mpsP15SYM_ENVIRONMENTPc", 
                "strcmp", 
                "__stack_chk_fail", 
                "_Z22sym_parse_command_lineP15SYM_ENVIRONMENTiPPc", 
                "_Z16sym_load_problemP15SYM_ENVIRONMENT", 
                "_Z8sym_testP15SYM_ENVIRONMENTiPPcPi", 
                "_Z15sym_get_obj_valP15SYM_ENVIRONMENTPd", 
                "_ZNSt8ios_base4InitD1Ev", 
                "_ITM_registerTMCloneTable", 
                "exit", 
                "_Z11sym_versionv", 
                "__sprintf_chk", 
                "_Z9set_paramP15SYM_ENVIRONMENTPc", 
                "_Z17sym_set_int_paramP15SYM_ENVIRONMENTPKci", 
                "__strcpy_chk", 
                "_Z16print_statisticsP10NODE_TIMESP12PROBLEM_STATP7LP_STATddddddciP7SP_DESCi", 
                "_Z10wall_clockPd", 
                "_Z13sym_read_gmplP15SYM_ENVIRONMENTPcS1_", 
                "_Z21sym_close_environmentP15SYM_ENVIRONMENT", 
                "free", 
                "fflush", 
                "fopen", 
                "fclose", 
                "_Z13free_master_uP15SYM_ENVIRONMENT", 
                "calloc", 
                "_Z23sym_find_initial_boundsP15SYM_ENVIRONMENT", 
                "_Z17sym_get_dbl_paramP15SYM_ENVIRONMENTPKcPd", 
                "fgets"
            ], 
            "rpm": "coin-or-SYMPHONY-5.6.14-5.fc27.x86_64.rpm", 
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/symphony"
        }, 
        "complexity": {
            "r2aa": {
                "afCc": 107, 
                "afC": 1390
            }
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Applications/Engineering", 
            "Name": " coin-or-SYMPHONY", 
            "License": " EPL", 
            "URL": " http://projects.coin-or.org/SYMPHONY", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-28.phx2.fedoraproject.org", 
            "Description": "\nSYMPHONY is an open-source solver for mixed-integer linear programs (MILPs)\nwritten in C. It can be used in three different main modes:\n\n  * As a callable library through either the native C interface or through\n    the Osi.\n  * As an interactive solver using a command-line interface.\n  * As a framework to build customized solvers for specific problem classes.\n\nSYMPHONY can be executed in either parallel (distributed or shared memory)\nor sequential modes and has a number of advanced features that make it unique,\nincluding the ability to\n\n  * solve biobjective MILPs,\n  * warm start the solution procedure, and\n  * perform basic sensitivity analyses.\n\nSYMPHONY links to a number of other COIN projects for additional\nfunctionality, including:\n\n   * Clp (the default solver for LP relaxations)\n   * Osi (an interface to alternative solvers for solving LP relaxations)\n   * Cgl (for cut generation)\n   * CoinUtils (for reading in MPS files and various utilities)\n", 
            "Build Date": " Wed 02 Aug 2017 03:14:30 PM EDT", 
            "Source RPM": " coin-or-SYMPHONY-5.6.14-5.fc27.src.rpm", 
            "Version": " 5.6.14", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Sat 05 Aug 2017 02:09:45 PM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 5.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Solver for mixed-integer linear programs", 
            "Size": " 797149"
        }
    }
}