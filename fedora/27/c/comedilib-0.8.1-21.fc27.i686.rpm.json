{
    "results": {
        "usr/lib/python2_7/site-packages/_comedi_so": {
            "report-functions": [
                "comedi_get_write_subdevice", 
                "comedi_set_global_oor_behavior", 
                "strcmp", 
                "_Py_NoneStruct", 
                "PyBool_FromLong", 
                "PyClass_Type", 
                "comedi_set_max_buffer_size", 
                "PyExc_SyntaxError", 
                "comedi_from_physical", 
                "comedi_command_test", 
                "comedi_close", 
                "fputs", 
                "PyInt_FromLong", 
                "_PyObject_GetDictPtr", 
                "comedi_do_insnlist", 
                "comedi_get_maxdata", 
                "comedi_loglevel", 
                "comedi_data_write", 
                "comedi_unlock", 
                "__cxa_finalize", 
                "comedi_dio_bitfield2", 
                "PyDict_SetItem", 
                "comedi_get_version_code", 
                "fwrite", 
                "PyFloat_AsDouble", 
                "comedi_get_range", 
                "PyString_FromStringAndSize", 
                "_ITM_deregisterTMCloneTable", 
                "comedi_perror", 
                "comedi_get_buffer_offset", 
                "PyFloat_Type", 
                "PyExc_TypeError", 
                "comedi_sampl_to_phys", 
                "comedi_from_phys", 
                "PyModule_GetDict", 
                "PyArg_UnpackTuple", 
                "comedi_fileno", 
                "PyTuple_New", 
                "PyString_FromFormat", 
                "__assert_fail", 
                "_PyObject_New", 
                "PyExc_SystemError", 
                "comedi_dio_read", 
                "comedi_command", 
                "PyErr_Restore", 
                "comedi_dio_write", 
                "comedi_find_subdevice_by_type", 
                "strlen", 
                "PyObject_CallFunctionObjArgs", 
                "PyExc_OverflowError", 
                "PyType_Ready", 
                "comedi_apply_calibration", 
                "PyInstance_Type", 
                "PyObject_Call", 
                "PyString_FromString", 
                "PyObject_Init", 
                "comedi_cancel", 
                "PyModule_AddObject", 
                "comedi_get_cmd_src_mask", 
                "comedi_get_max_buffer_size", 
                "PyExc_ZeroDivisionError", 
                "comedi_poll", 
                "PyCapsule_Import", 
                "calloc", 
                "comedi_data_read_n", 
                "comedi_get_n_ranges", 
                "fputc", 
                "PyExc_MemoryError", 
                "PyObject_GetAttr", 
                "PyInt_FromSize_t", 
                "comedi_open", 
                "PyList_SetItem", 
                "comedi_mark_buffer_written", 
                "comedi_get_hardcal_converter", 
                "PyString_AsStringAndSize", 
                "PyExc_IOError", 
                "PyObject_Malloc", 
                "_PyWeakref_CallableProxyType", 
                "PyExc_AttributeError", 
                "PyList_Append", 
                "comedi_get_board_name", 
                "comedi_get_read_subdevice", 
                "PyLong_AsDouble", 
                "comedi_get_buffer_size", 
                "comedi_to_physical", 
                "PyString_ConcatAndDel", 
                "comedi_set_buffer_size", 
                "PyErr_Clear", 
                "comedi_data_read", 
                "PyExc_IndexError", 
                "Py_InitModule4", 
                "comedi_get_n_channels", 
                "comedi_get_default_calibration_path", 
                "comedi_errno", 
                "comedi_maxdata_is_chan_specific", 
                "comedi_get_subdevice_type", 
                "PyLong_FromVoidPtr", 
                "comedi_strerror", 
                "_ITM_registerTMCloneTable", 
                "PyInt_AsLong", 
                "comedi_range_is_chan_specific", 
                "PyObject_GenericGetAttr", 
                "strncmp", 
                "PyErr_SetString", 
                "malloc", 
                "PyTuple_SetItem", 
                "strncpy", 
                "comedi_apply_parsed_calibration", 
                "comedi_dio_config", 
                "PyObject_IsTrue", 
                "PyInstance_NewRaw", 
                "comedi_sv_init", 
                "comedi_parse_calibration_file", 
                "PyExc_ValueError", 
                "comedi_to_phys", 
                "PyType_IsSubtype", 
                "comedi_lock", 
                "comedi_sv_update", 
                "comedi_get_softcal_converter", 
                "__stack_chk_fail", 
                "PyFloat_FromDouble", 
                "PyLong_AsLong", 
                "comedi_cleanup_calibration", 
                "PyExc_RuntimeError", 
                "PyDict_GetItem", 
                "comedi_data_read_delayed", 
                "PyErr_Occurred", 
                "__gmon_start__", 
                "PyDict_New", 
                "__printf_chk", 
                "comedi_data_read_hint", 
                "comedi_get_buffer_contents", 
                "comedi_get_subdevice_flags", 
                "comedi_mark_buffer_read", 
                "_Py_NotImplementedStruct", 
                "comedi_dio_get_config", 
                "PyArg_ParseTuple", 
                "_PyInstance_Lookup", 
                "comedi_get_driver_name", 
                "comedi_sampl_from_phys", 
                "PyList_New", 
                "PyObject_Free", 
                "comedi_dio_bitfield", 
                "strstr", 
                "comedi_do_insn", 
                "comedi_get_cmd_generic_timed", 
                "PyDict_SetItemString", 
                "PyErr_WriteUnraisable", 
                "comedi_get_n_subdevices", 
                "comedi_sv_measure", 
                "free", 
                "_PyWeakref_ProxyType", 
                "PyCapsule_New", 
                "PyString_Format", 
                "comedi_find_range", 
                "PyErr_Fetch", 
                "PyCapsule_GetPointer"
            ], 
            "rpm": "comedilib-0.8.1-21.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/python2.7/site-packages/_comedi.so"
        }, 
        "usr/lib/libcomedi_so_0_8_1": {
            "report-functions": [
                "strncpy", 
                "fopen", 
                "strerror", 
                "perror", 
                "__fprintf_chk", 
                "close", 
                "__stack_chk_fail", 
                "free", 
                "strlen", 
                "strtol", 
                "fileno", 
                "__asprintf_chk", 
                "floor", 
                "__read_chk", 
                "strcmp", 
                "read", 
                "ferror", 
                "nearbyint", 
                "__errno_location", 
                "_IO_getc", 
                "fwrite", 
                "realloc", 
                "__assert_fail", 
                "stpcpy", 
                "isatty", 
                "fread", 
                "__gmon_start__", 
                "__cxa_finalize", 
                "getenv", 
                "calloc", 
                "exit", 
                "_ITM_deregisterTMCloneTable", 
                "__fxstat", 
                "strdup", 
                "strchr", 
                "malloc", 
                "ioctl", 
                "fclose", 
                "open", 
                "strtod"
            ], 
            "rpm": "comedilib-0.8.1-21.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libcomedi.so.0.8.1"
        }, 
        "usr/sbin/comedi_config": {
            "report-functions": [
                "__errno_location", 
                "geteuid", 
                "strncpy", 
                "putchar", 
                "exit", 
                "fwrite", 
                "__fxstat", 
                "fileno", 
                "__printf_chk", 
                "fclose", 
                "fread", 
                "getopt_long", 
                "__xstat", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "open", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "__isoc99_sscanf", 
                "malloc", 
                "fopen", 
                "__stack_chk_fail", 
                "perror", 
                "ioctl"
            ], 
            "rpm": "comedilib-0.8.1-21.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/sbin/comedi_config"
        }, 
        "usr/bin/comedi_test": {
            "report-functions": [
                "munmap", 
                "comedi_get_max_buffer_size", 
                "comedi_open", 
                "comedi_command_test", 
                "strlen", 
                "__errno_location", 
                "putchar", 
                "comedi_trigger", 
                "comedi_get_version_code", 
                "comedi_range_is_chan_specific", 
                "comedi_get_buffer_size", 
                "mmap", 
                "__cxa_finalize", 
                "fwrite", 
                "comedi_get_subdevice_flags", 
                "__fdelt_chk", 
                "comedi_get_n_ranges", 
                "comedi_get_range", 
                "perror", 
                "comedi_get_board_name", 
                "strcmp", 
                "comedi_do_insnlist", 
                "setvbuf", 
                "comedi_fileno", 
                "__printf_chk", 
                "comedi_get_subdevice_type", 
                "fputc", 
                "strerror", 
                "read", 
                "select", 
                "free", 
                "getopt_long", 
                "__libc_start_main", 
                "gettimeofday", 
                "_ITM_deregisterTMCloneTable", 
                "exit", 
                "__sprintf_chk", 
                "comedi_maxdata_is_chan_specific", 
                "__fprintf_chk", 
                "comedi_set_buffer_size", 
                "comedi_get_maxdata", 
                "__stack_chk_fail", 
                "comedi_get_cmd_generic_timed", 
                "comedi_do_insn", 
                "comedi_get_driver_name", 
                "__isoc99_sscanf", 
                "__gmon_start__", 
                "sigaction", 
                "comedi_get_n_subdevices", 
                "__sigsetjmp", 
                "malloc", 
                "write", 
                "__longjmp_chk", 
                "_ITM_registerTMCloneTable", 
                "comedi_get_n_channels", 
                "comedi_cancel", 
                "puts", 
                "usleep"
            ], 
            "rpm": "comedilib-0.8.1-21.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/comedi_test"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " System Environment/Kernel", 
            "Name": " comedilib", 
            "License": " LGPLv2", 
            "URL": " http://www.comedi.org/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildhw-05.phx2.fedoraproject.org", 
            "Description": "\nComedilib is a user-space library that provides a developer-friendly\ninterface to Comedi devices. Included in the Comedilib distribution\nis documentation, configuration and calibration utilities,\nand demonstration programs.\n", 
            "Build Date": " Wed 02 Aug 2017 03:12:10 PM EDT", 
            "Source RPM": " comedilib-0.8.1-21.fc27.src.rpm", 
            "Version": " 0.8.1", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Mon 07 Aug 2017 02:21:20 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 21.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Data Acquisition library for the Comedi driver", 
            "Size": " 536551"
        }
    }
}