{
    "results": {
        "lib/libecryptfs_so_1_0_0": {
            "report-functions": [
                "keyctl_search", 
                "hasmntopt", 
                "__stack_chk_fail", 
                "__ctype_b_loc", 
                "strchr", 
                "strstr", 
                "putchar", 
                "fgets", 
                "malloc", 
                "dlclose", 
                "endmntent", 
                "exit", 
                "__strtoull_internal", 
                "PK11_FreeSymKey", 
                "PK11_GetBestSlot", 
                "__memcpy_chk", 
                "mkstemp64", 
                "__snprintf_chk", 
                "fwrite", 
                "umask", 
                "PK11_ImportSymKey", 
                "__xstat64", 
                "strncpy", 
                "free", 
                "open64", 
                "setmntent", 
                "__syslog_chk", 
                "rename", 
                "__cxa_finalize", 
                "unlink", 
                "__errno_location", 
                "PK11_FreeSlot", 
                "perror", 
                "fsync", 
                "write", 
                "__fxstat64", 
                "getuid", 
                "getpwuid", 
                "calloc", 
                "fopen64", 
                "PORT_GetError", 
                "PK11_DigestFinal", 
                "__asprintf_chk", 
                "read", 
                "_ITM_registerTMCloneTable", 
                "fclose", 
                "strtol", 
                "request_key", 
                "keyctl", 
                "tcsetattr", 
                "strerror", 
                "PK11_DestroyContext", 
                "SECITEM_FreeItem", 
                "__fprintf_chk", 
                "keyctl_read_alloc", 
                "system", 
                "PK11_ParamFromIV", 
                "closedir", 
                "tcgetattr", 
                "PK11_CreateContextBySymKey", 
                "strrchr", 
                "dlerror", 
                "NSS_NoDB_Init", 
                "fchown", 
                "fputc", 
                "add_key", 
                "strncmp", 
                "close", 
                "lseek64", 
                "flockfile", 
                "getgid", 
                "readdir64", 
                "strcmp", 
                "realloc", 
                "opendir", 
                "__gmon_start__", 
                "keyctl_unlink", 
                "dlsym", 
                "PK11_CipherOp", 
                "_ITM_deregisterTMCloneTable", 
                "dlopen", 
                "getmntent", 
                "PK11_HashBuf", 
                "__printf_chk", 
                "strlen"
            ], 
            "rpm": "ecryptfs-utils-111-7.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "lib/libecryptfs.so.1.0.0"
        }, 
        "usr/bin/ecryptfs-generate-tpm-key": {
            "report-functions": [
                "__cxa_finalize", 
                "__fprintf_chk", 
                "Tspi_Policy_SetSecret", 
                "Tspi_Context_Create", 
                "__printf_chk", 
                "realloc", 
                "Tspi_Context_GetTpmObject", 
                "Trspi_Error_String", 
                "puts", 
                "__libc_start_main", 
                "__gmon_start__", 
                "free", 
                "_ITM_registerTMCloneTable", 
                "Tspi_TPM_GetRandom", 
                "malloc", 
                "strtol", 
                "__stack_chk_fail", 
                "Tspi_Context_LoadKeyByUUID", 
                "Tspi_TPM_PcrRead", 
                "Tspi_Context_Connect", 
                "Tspi_Context_Close", 
                "Tspi_Context_FreeMemory", 
                "Tspi_TPM_GetCapability", 
                "Tspi_Key_CreateKey", 
                "__sprintf_chk", 
                "Tspi_Context_CreateObject", 
                "_ITM_deregisterTMCloneTable", 
                "getopt", 
                "Tspi_PcrComposite_SetPcrValue"
            ], 
            "rpm": "ecryptfs-utils-111-7.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/ecryptfs-generate-tpm-key"
        }, 
        "usr/bin/ecryptfs-stat": {
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "__stack_chk_fail", 
                "close", 
                "__gmon_start__", 
                "read", 
                "open64", 
                "puts", 
                "__libc_start_main", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "ecryptfs_parse_stat"
            ], 
            "rpm": "ecryptfs-utils-111-7.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/ecryptfs-stat"
        }, 
        "usr/bin/ecryptfs-insert-wrapped-passphrase-into-keyring": {
            "report-functions": [
                "__cxa_finalize", 
                "ecryptfs_get_wrapped_passphrase_filename", 
                "__libc_start_main", 
                "_ITM_registerTMCloneTable", 
                "__fprintf_chk", 
                "ecryptfs_read_salt_hex_from_rc", 
                "__stack_chk_fail", 
                "__printf_chk", 
                "_ITM_deregisterTMCloneTable", 
                "ecryptfs_get_passphrase", 
                "from_hex"
            ], 
            "rpm": "ecryptfs-utils-111-7.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/ecryptfs-insert-wrapped-passphrase-into-keyring"
        }, 
        "sbin/mount_ecryptfs_private": {
            "report-functions": [
                "flock", 
                "exit", 
                "malloc", 
                "statfs64", 
                "getgid", 
                "strlen", 
                "__asprintf_chk", 
                "free", 
                "keyctl_search", 
                "__xstat64", 
                "geteuid", 
                "ecryptfs_remove_auth_tok_from_keyring", 
                "fdopen", 
                "__cxa_finalize", 
                "__libc_start_main", 
                "addmntent", 
                "getcwd", 
                "readlink", 
                "fflush", 
                "fwrite", 
                "clearenv", 
                "fopen64", 
                "__fxstat64", 
                "getpwuid", 
                "setresuid", 
                "close", 
                "execl", 
                "mount", 
                "umask", 
                "__ctype_b_loc", 
                "rename", 
                "strcmp", 
                "strstr", 
                "strdup", 
                "open64", 
                "seteuid", 
                "calloc", 
                "endmntent", 
                "fchmod", 
                "fclose", 
                "getmntent", 
                "rewind", 
                "fgets", 
                "perror", 
                "setresgid", 
                "fscanf", 
                "setregid", 
                "setreuid", 
                "__gmon_start__", 
                "getopt", 
                "chdir", 
                "setmntent", 
                "_ITM_registerTMCloneTable", 
                "__fprintf_chk", 
                "__stack_chk_fail", 
                "_ITM_deregisterTMCloneTable", 
                "ecryptfs_private_is_mounted", 
                "fileno", 
                "unlink"
            ], 
            "rpm": "ecryptfs-utils-111-7.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "sbin/mount.ecryptfs_private"
        }, 
        "lib/security/pam_ecryptfs_so": {
            "report-functions": [
                "__xstat64", 
                "pam_set_data", 
                "waitpid", 
                "getpwnam", 
                "malloc", 
                "pam_get_item", 
                "sysconf", 
                "ecryptfs_unwrap_passphrase", 
                "__stack_chk_fail", 
                "__ecryptfs_detect_wrapped_passphrase_file_version", 
                "ecryptfs_validate_keyring", 
                "geteuid", 
                "close", 
                "__asprintf_chk", 
                "pam_prompt", 
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable", 
                "unlink", 
                "setgroups", 
                "clearenv", 
                "ecryptfs_fetch_private_mnt", 
                "_exit", 
                "pam_strerror", 
                "free", 
                "__gmon_start__", 
                "__errno_location", 
                "__cxa_finalize", 
                "execl", 
                "getegid", 
                "strdup", 
                "fork", 
                "ecryptfs_private_is_mounted", 
                "setuid", 
                "setegid", 
                "setresuid", 
                "pam_get_data", 
                "__syslog_chk", 
                "ecryptfs_read_salt_hex_from_rc", 
                "setgid", 
                "ecryptfs_wrap_passphrase", 
                "pam_get_user", 
                "ecryptfs_wrap_passphrase_file", 
                "ecryptfs_add_passphrase_key_to_keyring", 
                "open64", 
                "from_hex", 
                "getgroups", 
                "initgroups", 
                "ecryptfs_insert_wrapped_passphrase_into_keyring", 
                "seteuid"
            ], 
            "rpm": "ecryptfs-utils-111-7.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "lib/security/pam_ecryptfs.so"
        }, 
        "usr/bin/ecryptfs-unwrap-passphrase": {
            "report-functions": [
                "__libc_start_main", 
                "from_hex", 
                "ecryptfs_unwrap_passphrase", 
                "__fprintf_chk", 
                "__stack_chk_fail", 
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable", 
                "ecryptfs_read_salt_hex_from_rc", 
                "__printf_chk", 
                "__gmon_start__", 
                "ecryptfs_get_wrapped_passphrase_filename"
            ], 
            "rpm": "ecryptfs-utils-111-7.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/ecryptfs-unwrap-passphrase"
        }, 
        "lib/ecryptfs/libecryptfs_key_mod_pkcs11_helper_so": {
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "sscanf", 
                "pkcs11h_certificate_freeCertificateIdList", 
                "X509_new", 
                "X509_NAME_oneline", 
                "calloc", 
                "BN_bn2bin", 
                "X509_get_serialNumber", 
                "_ITM_deregisterTMCloneTable", 
                "pkcs11h_certificate_setCertificateIdCertificateBlob", 
                "RSA_get0_key", 
                "pkcs11h_addProvider", 
                "i2a_ASN1_INTEGER", 
                "__vsyslog_chk", 
                "strlen", 
                "getpwuid", 
                "malloc", 
                "__cxa_finalize", 
                "RSA_free", 
                "pkcs11h_certificate_deserializeCertificateId", 
                "ERR_get_error", 
                "pkcs11h_certificate_decryptAny", 
                "__asprintf_chk", 
                "SHA1", 
                "BIO_s_mem", 
                "BIO_read", 
                "fopen64", 
                "EVP_PKEY_free", 
                "exit", 
                "pkcs11h_terminate", 
                "pkcs11h_certificate_create", 
                "pkcs11h_initialize", 
                "ecryptfs_verbosity", 
                "ecryptfs_find_key_mod", 
                "pkcs11h_setProtectedAuthentication", 
                "ecryptfs_eval_decision_graph", 
                "__gmon_start__", 
                "d2i_X509", 
                "i2d_X509", 
                "ecryptfs_add_key_module_key_to_keyring", 
                "__errno_location", 
                "RSA_public_encrypt", 
                "BIO_free_all", 
                "X509_free", 
                "getuid", 
                "fclose", 
                "parse_options_file", 
                "close", 
                "pkcs11h_setPINCachePeriod", 
                "to_hex", 
                "BN_num_bits", 
                "free", 
                "PEM_read_X509", 
                "cryptfs_get_ctx_opts", 
                "stack_push", 
                "pkcs11h_setLogHook", 
                "pkcs11h_setPINPromptHook", 
                "RSA_size", 
                "X509_get_subject_name", 
                "pkcs11h_getMessage", 
                "strncpy", 
                "pkcs11h_setTokenPromptHook", 
                "__stack_chk_fail", 
                "pkcs11h_certificate_freeCertificate", 
                "BIO_new", 
                "EVP_PKEY_get1_RSA", 
                "strtol", 
                "pkcs11h_certificate_serializeCertificateId", 
                "X509_get_pubkey", 
                "EVP_PKEY_base_id", 
                "pkcs11h_certificate_enumCertificateIds", 
                "open64", 
                "pkcs11h_setLogLevel", 
                "__syslog_chk"
            ], 
            "rpm": "ecryptfs-utils-111-7.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "lib/ecryptfs/libecryptfs_key_mod_pkcs11_helper.so"
        }, 
        "lib/ecryptfs/libecryptfs_key_mod_tspi_so": {
            "report-functions": [
                "Tspi_Policy_SetSecret", 
                "SHA1", 
                "pthread_mutex_unlock", 
                "sleep", 
                "Tspi_GetAttribData", 
                "pthread_mutex_lock", 
                "strtoul", 
                "__stack_chk_fail", 
                "Tspi_Data_Unseal", 
                "Tspi_Context_GetKeyByUUID", 
                "Tspi_Context_CreateObject", 
                "pthread_mutex_init", 
                "__syslog_chk", 
                "Tspi_Context_Close", 
                "Tspi_Context_Create", 
                "_ITM_registerTMCloneTable", 
                "Tspi_SetAttribData", 
                "Trspi_Error_String", 
                "__asprintf_chk", 
                "_ITM_deregisterTMCloneTable", 
                "free", 
                "Tspi_Data_Seal", 
                "calloc", 
                "__cxa_finalize", 
                "Tspi_GetPolicyObject", 
                "Tspi_Context_Connect", 
                "malloc", 
                "Tspi_Context_FreeMemory", 
                "__gmon_start__"
            ], 
            "rpm": "ecryptfs-utils-111-7.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "lib/ecryptfs/libecryptfs_key_mod_tspi.so"
        }, 
        "lib/ecryptfs/libecryptfs_key_mod_openssl_so": {
            "report-functions": [
                "malloc", 
                "RSA_private_decrypt", 
                "__cxa_finalize", 
                "PEM_write_bio_RSAPrivateKey", 
                "BIO_new", 
                "BN_bn2bin", 
                "to_hex", 
                "__asprintf_chk", 
                "ecryptfs_openssl_init_from_param_vals", 
                "parse_options_file", 
                "free_name_val_pairs", 
                "getuid", 
                "ERR_get_error", 
                "close", 
                "ERR_remove_state", 
                "BIO_ctrl", 
                "RSA_free", 
                "strtol", 
                "free", 
                "exit", 
                "OPENSSL_init_crypto", 
                "__stack_chk_fail", 
                "getpwuid", 
                "_ITM_deregisterTMCloneTable", 
                "open64", 
                "strdup", 
                "RSA_public_encrypt", 
                "SHA1", 
                "BN_num_bits", 
                "__gmon_start__", 
                "calloc", 
                "ecryptfs_verbosity", 
                "PEM_read_bio_RSAPrivateKey", 
                "ENGINE_load_builtin_engines", 
                "ecryptfs_find_key_mod", 
                "RSA_size", 
                "BIO_s_file", 
                "_ITM_registerTMCloneTable", 
                "stack_push", 
                "ecryptfs_add_key_module_key_to_keyring", 
                "strlen", 
                "RSA_get0_key", 
                "__errno_location", 
                "dirname", 
                "__syslog_chk", 
                "BIO_free_all", 
                "EVP_aes_256_cbc"
            ], 
            "rpm": "ecryptfs-utils-111-7.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "lib/ecryptfs/libecryptfs_key_mod_openssl.so"
        }, 
        "sbin/mount_ecryptfs": {
            "report-functions": [
                "ecryptfs_append_sig", 
                "__printf_chk", 
                "memcmp", 
                "__cxa_finalize", 
                "tcgetattr", 
                "stack_push", 
                "strcmp", 
                "chown", 
                "ecryptfs_get_version", 
                "strstr", 
                "_ITM_registerTMCloneTable", 
                "realpath", 
                "getgid", 
                "__asprintf_chk", 
                "malloc", 
                "stack_pop_val", 
                "_ITM_deregisterTMCloneTable", 
                "mlock", 
                "strerror", 
                "execl", 
                "getpwuid", 
                "strtol", 
                "__gmon_start__", 
                "__stack_chk_fail", 
                "__errno_location", 
                "__libc_start_main", 
                "mkdir", 
                "ecryptfs_check_sig", 
                "strchr", 
                "fgets", 
                "perror", 
                "fork", 
                "__fprintf_chk", 
                "_IO_getc", 
                "putchar", 
                "puts", 
                "exit", 
                "strdup", 
                "free", 
                "ecryptfs_validate_keyring", 
                "fwrite", 
                "ecryptfs_process_decision_graph", 
                "calloc", 
                "munlockall", 
                "strlen", 
                "mlockall", 
                "strncmp", 
                "waitpid", 
                "__syslog_chk"
            ], 
            "rpm": "ecryptfs-utils-111-7.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "sbin/mount.ecryptfs"
        }, 
        "sbin/umount_ecryptfs": {
            "report-functions": [
                "__libc_start_main", 
                "setmntent", 
                "hasmntopt", 
                "malloc", 
                "strlen", 
                "keyctl_search", 
                "_ITM_deregisterTMCloneTable", 
                "__fprintf_chk", 
                "__cxa_finalize", 
                "exit", 
                "strstr", 
                "getmntent", 
                "__gmon_start__", 
                "execv", 
                "strcmp", 
                "keyctl_unlink", 
                "strerror", 
                "__stack_chk_fail", 
                "endmntent", 
                "__errno_location", 
                "strchr", 
                "_ITM_registerTMCloneTable", 
                "free"
            ], 
            "rpm": "ecryptfs-utils-111-7.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "sbin/umount.ecryptfs"
        }, 
        "lib/ecryptfs/libecryptfs_key_mod_passphrase_so": {
            "report-functions": [
                "__cxa_finalize", 
                "stack_pop_val", 
                "strtol", 
                "__stack_chk_fail", 
                "close", 
                "__errno_location", 
                "parse_options_file", 
                "__syslog_chk", 
                "calloc", 
                "free", 
                "malloc", 
                "from_hex", 
                "free_name_val_pairs", 
                "_ITM_registerTMCloneTable", 
                "stack_push", 
                "ecryptfs_add_passphrase_key_to_keyring", 
                "__gmon_start__", 
                "__asprintf_chk"
            ], 
            "rpm": "ecryptfs-utils-111-7.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "lib/ecryptfs/libecryptfs_key_mod_passphrase.so"
        }, 
        "usr/bin/ecryptfsd": {
            "report-functions": [
                "__errno_location", 
                "putchar", 
                "fclose", 
                "chroot", 
                "__cxa_finalize", 
                "__stack_chk_fail", 
                "_ITM_registerTMCloneTable", 
                "pthread_mutex_unlock", 
                "setenv", 
                "getppid", 
                "close", 
                "getdtablesize", 
                "pipe", 
                "getpid", 
                "strchr", 
                "__xpg_basename", 
                "strdup", 
                "signal", 
                "__syslog_chk", 
                "fork", 
                "execl", 
                "dup2", 
                "ecryptfs_get_version", 
                "waitpid", 
                "__libc_start_main", 
                "read", 
                "strlen", 
                "_ITM_deregisterTMCloneTable", 
                "umask", 
                "open64", 
                "free", 
                "chdir", 
                "pthread_mutex_init", 
                "__fprintf_chk", 
                "cryptfs_get_ctx_opts", 
                "__printf_chk", 
                "ecryptfs_messaging_exit", 
                "setrlimit64", 
                "openlog", 
                "getopt_long", 
                "ecryptfs_init_messaging", 
                "__gmon_start__", 
                "exit", 
                "ecryptfs_run_daemon", 
                "unlink", 
                "fopen64", 
                "pthread_mutex_lock", 
                "ttyname"
            ], 
            "rpm": "ecryptfs-utils-111-7.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/ecryptfsd"
        }, 
        "usr/bin/ecryptfs-wrap-passphrase": {
            "report-functions": [
                "__printf_chk", 
                "__fprintf_chk", 
                "__cxa_finalize", 
                "from_hex", 
                "free", 
                "_ITM_deregisterTMCloneTable", 
                "__libc_start_main", 
                "_ITM_registerTMCloneTable", 
                "ecryptfs_read_salt_hex_from_rc", 
                "ecryptfs_wrap_passphrase", 
                "__gmon_start__"
            ], 
            "rpm": "ecryptfs-utils-111-7.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/ecryptfs-wrap-passphrase"
        }, 
        "usr/bin/ecryptfs-rewrap-passphrase": {
            "report-functions": [
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable", 
                "ecryptfs_unwrap_passphrase", 
                "_ITM_registerTMCloneTable", 
                "ecryptfs_get_passphrase", 
                "strcmp", 
                "from_hex", 
                "__printf_chk", 
                "__gmon_start__", 
                "fwrite", 
                "__fprintf_chk", 
                "ecryptfs_wrap_passphrase", 
                "__stack_chk_fail"
            ], 
            "rpm": "ecryptfs-utils-111-7.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/ecryptfs-rewrap-passphrase"
        }, 
        "usr/bin/ecryptfs-manager": {
            "report-functions": [
                "ecryptfs_process_decision_graph", 
                "__errno_location", 
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable", 
                "fwrite", 
                "__cxa_finalize", 
                "malloc", 
                "__libc_start_main", 
                "mkdir", 
                "strchr", 
                "__printf_chk", 
                "__asprintf_chk", 
                "ecryptfs_add_passphrase_key_to_keyring", 
                "ecryptfs_process_key_gen_decision_graph", 
                "fgets", 
                "tcsetattr", 
                "putchar", 
                "__fprintf_chk", 
                "ecryptfs_validate_keyring", 
                "puts", 
                "free", 
                "tcgetattr", 
                "ecryptfs_free_key_mod_list", 
                "__syslog_chk", 
                "mlock", 
                "_IO_getc", 
                "strcmp", 
                "__gmon_start__", 
                "ecryptfs_get_version"
            ], 
            "rpm": "ecryptfs-utils-111-7.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/ecryptfs-manager"
        }, 
        "usr/bin/ecryptfs-add-passphrase": {
            "report-functions": [
                "ecryptfs_supports_filename_encryption", 
                "ecryptfs_get_version", 
                "__gmon_start__", 
                "from_hex", 
                "ecryptfs_add_passphrase_key_to_keyring", 
                "ecryptfs_get_passphrase", 
                "__fprintf_chk", 
                "__printf_chk", 
                "__libc_start_main", 
                "strncmp", 
                "_ITM_deregisterTMCloneTable", 
                "ecryptfs_read_salt_hex_from_rc", 
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "ecryptfs-utils-111-7.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/ecryptfs-add-passphrase"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " ecryptfs-utils", 
            "License": " GPLv2+", 
            "URL": " https://launchpad.net/ecryptfs", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildhw-02.phx2.fedoraproject.org", 
            "Description": "\neCryptfs is a stacked cryptographic filesystem that ships in Linux\nkernel versions 2.6.19 and above. This package provides the mount\nhelper and supporting libraries to perform key management and mount\nfunctions.\n\nInstall ecryptfs-utils if you would like to mount eCryptfs.\n", 
            "Build Date": " Wed 02 Aug 2017 05:43:08 PM EDT", 
            "Source RPM": " ecryptfs-utils-111-7.fc27.src.rpm", 
            "Version": " 111", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Mon 07 Aug 2017 12:32:25 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 7.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " The eCryptfs mount helper and support libraries", 
            "Size": " 516104"
        }
    }
}