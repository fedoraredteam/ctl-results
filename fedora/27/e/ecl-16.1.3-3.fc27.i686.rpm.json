{
    "results": {
        "usr/lib/ecl-16_1_3/sockets_fas": {
            "report-functions": [
                "ecl_fdefinition", 
                "gethostbyaddr", 
                "ecl_aref_unsafe", 
                "clos_install_method", 
                "si_make_vector", 
                "cl_listX", 
                "getsockopt", 
                "close", 
                "FEwrong_type_argument", 
                "ecl_cons", 
                "cl_list", 
                "fcntl", 
                "connect", 
                "ecl_setf_definition", 
                "ecl_cstring_to_base_string_or_nil", 
                "cl_parse_key", 
                "__cxa_finalize", 
                "si_ecase_error", 
                "socket", 
                "si_set_buffering_mode", 
                "ecl_boundp", 
                "_ecl_va_sp", 
                "__h_errno_location", 
                "si_assert_failure", 
                "make_base_string_copy", 
                "ecl_make_integer", 
                "__errno_location", 
                "accept", 
                "si_seq_iterator_next", 
                "ecl_cs_overflow", 
                "sendto", 
                "cl_funcall", 
                "ecl_symbol_value", 
                "cl_format", 
                "_ITM_registerTMCloneTable", 
                "cl_subseq", 
                "cl_make_array", 
                "ecl_list1", 
                "si_Xmake_constant", 
                "ecl_make_stream_from_fd", 
                "ecl_make_double_float", 
                "ecl_to_double", 
                "ecl_make_cfun_va", 
                "cl_two_way_stream_input_stream", 
                "ecl_aref", 
                "ecl_cmp_defun", 
                "ecl_symbol_name", 
                "send", 
                "ecl_length", 
                "ecl_cadr", 
                "ecl_zerop", 
                "getsockname", 
                "ecl_aset", 
                "cl_slot_makunbound", 
                "cl_slot_boundp", 
                "cl_map", 
                "ecl_eql", 
                "ecl_make_codeblock", 
                "ecl_function_dispatch", 
                "FEtype_error_cons", 
                "cl_string_downcase", 
                "dup", 
                "bind", 
                "FEerror", 
                "si_seq_iterator_ref", 
                "cl_position_if", 
                "si_dm_too_many_arguments", 
                "si_print_unreadable_object_function", 
                "__stack_chk_fail", 
                "cl_provide", 
                "listen", 
                "si_Xmake_special", 
                "___tls_get_addr", 
                "cl_close", 
                "si_make_pure_array", 
                "getpeername", 
                "si_copy_to_simple_base_string", 
                "cl_two_way_stream_output_stream", 
                "ecl_princ", 
                "recvfrom", 
                "cl_position_if_not", 
                "cl_grab_rest_args", 
                "cl_export", 
                "gethostbyname", 
                "cl_make_two_way_stream", 
                "ecl_car", 
                "cl_subtypep", 
                "si_select_package", 
                "si_dm_too_few_arguments", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "cl_intern", 
                "FEwrong_num_arguments_anonym", 
                "ecl_make_cfun", 
                "clos_load_defclass", 
                "strncpy", 
                "setsockopt", 
                "cl_set", 
                "cl_class_of", 
                "si_make_seq_iterator", 
                "ecl_assql", 
                "fixint", 
                "strerror", 
                "ecl_cmp_defmacro", 
                "ecl_make_cclosure_va", 
                "getprotobyname", 
                "ecl_init_module", 
                "cl_error", 
                "cl_string", 
                "cl_keywordp", 
                "cl_slot_value", 
                "ecl_number_equalp", 
                "ecl_cdr", 
                "ecl_make_simple_base_string", 
                "ecl_number_compare", 
                "ecl_normalize_stream_element_type", 
                "ecl_memql"
            ], 
            "rpm": "ecl-16.1.3-3.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/ecl-16.1.3/sockets.fas"
        }, 
        "usr/lib/ecl-16_1_3/ecl-cdb_fas": {
            "report-functions": [
                "cl_find_class", 
                "ecl_aset_unsafe", 
                "si_dm_too_few_arguments", 
                "cl_open_stream_p", 
                "_ITM_registerTMCloneTable", 
                "ecl_number_equalp", 
                "ecl_unwind", 
                "ecl_cons", 
                "_ecl_va_sp", 
                "cl_ash", 
                "ecl_zerop", 
                "si_make_structure", 
                "ecl_cmp_defun", 
                "ecl_stack_pop_values", 
                "__gmon_start__", 
                "FEwrong_index", 
                "si_select_package", 
                "cl_file_position", 
                "_setjmp", 
                "si_make_vector", 
                "ecl_equalp", 
                "ecl_stack_frame_pop_values", 
                "cl_close", 
                "cl_listX", 
                "cl_error", 
                "cl_read_sequence", 
                "ecl_make_unsigned_integer", 
                "FEwrong_num_arguments_anonym", 
                "ecl_stack_push_values", 
                "cl_provide", 
                "cl_parse_key", 
                "cl_write_sequence", 
                "cl_logand", 
                "ecl_car", 
                "ecl_stack_frame_push_values", 
                "cl_logior", 
                "ecl_boole", 
                "ecl_to_fixnum", 
                "ecl_cmp_defmacro", 
                "si_define_structure", 
                "ecl_number_compare", 
                "ecl_cdr", 
                "ecl_ash", 
                "ecl_stack_frame_close", 
                "cl_rename_file", 
                "ecl_plus", 
                "ecl_aref_unsafe", 
                "ecl_make_codeblock", 
                "ecl_one_plus", 
                "ecl_init_module", 
                "__stack_chk_fail", 
                "ecl_make_simple_base_string", 
                "FEwrong_type_argument", 
                "FEstack_advance", 
                "ecl_cs_overflow", 
                "ecl_function_dispatch", 
                "_ecl_frs_push", 
                "ecl_length", 
                "___tls_get_addr", 
                "_ITM_deregisterTMCloneTable", 
                "cl_realp", 
                "si_make_pure_array", 
                "ecl_list1", 
                "cl_read_byte", 
                "FEtype_error_vector", 
                "ecl_times", 
                "ecl_stack_frame_open", 
                "cl_open", 
                "ecl_floor2", 
                "ecl_make_integer", 
                "si_dm_too_many_arguments", 
                "fixnnint", 
                "cl_list", 
                "__cxa_finalize", 
                "cl_streamp"
            ], 
            "rpm": "ecl-16.1.3-3.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/ecl-16.1.3/ecl-cdb.fas"
        }, 
        "usr/lib/ecl-16_1_3/deflate_fas": {
            "report-functions": [
                "ecl_stack_push_values", 
                "ecl_cmp_defun", 
                "cl_concatenate", 
                "ecl_bds_unwind", 
                "cl_write_sequence", 
                "ecl_stack_frame_close", 
                "cl_typep", 
                "FEstack_advance", 
                "ecl_aref_unsafe", 
                "cl_read_byte", 
                "ecl_bds_overflow", 
                "ecl_number_compare", 
                "si_structure_type_error", 
                "ecl_function_dispatch", 
                "fixnnint", 
                "ecl_one_plus", 
                "__gmon_start__", 
                "cl_get_output_stream_string", 
                "_ecl_va_sp", 
                "ecl_init_module", 
                "si_fill_array_with_elt", 
                "clos_load_defclass", 
                "_ecl_frs_push", 
                "ecl_floor2", 
                "ecl_bds_ref", 
                "FEwrong_type_argument", 
                "cl_write_char", 
                "___tls_get_addr", 
                "cl_ash", 
                "__stack_chk_fail", 
                "cl_listX", 
                "ecl_times", 
                "cl_list", 
                "ecl_stack_frame_push_values", 
                "ecl_negate", 
                "si_ecase_error", 
                "cl_provide", 
                "cl_format", 
                "ecl_memql", 
                "cl_reduce", 
                "cl_parse_key", 
                "_setjmp", 
                "ecl_progv", 
                "cl_read_sequence", 
                "si_make_pure_array", 
                "ecl_stack_frame_pop_values", 
                "ecl_eql", 
                "cl_probe_file", 
                "ecl_stack_frame_open", 
                "ecl_plus", 
                "si_Xmake_constant", 
                "ecl_truncate2", 
                "__cxa_finalize", 
                "ecl_expt", 
                "ecl_aset_unsafe", 
                "ecl_make_unsigned_integer", 
                "ecl_list1", 
                "ecl_bds_bind", 
                "ecl_make_cfun", 
                "cl_open", 
                "ecl_length", 
                "si_select_package", 
                "ecl_make_codeblock", 
                "ecl_make_integer", 
                "cl_error", 
                "ecl_zerop", 
                "cl_make_sequence", 
                "ecl_stack_pop_values", 
                "ecl_number_equalp", 
                "_ITM_deregisterTMCloneTable", 
                "si_define_structure", 
                "_ITM_registerTMCloneTable", 
                "ecl_one_minus", 
                "cl_subseq", 
                "si_make_structure", 
                "ecl_unwind", 
                "cl_streamp", 
                "si_Xmake_special", 
                "ecl_make_simple_base_string", 
                "fixint", 
                "ecl_ash", 
                "ecl_minus", 
                "cl_close", 
                "ecl_boole", 
                "cl_make_string_output_stream"
            ], 
            "rpm": "ecl-16.1.3-3.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/ecl-16.1.3/deflate.fas"
        }, 
        "usr/lib/ecl-16_1_3/asdf_fas": {
            "report-functions": [
                "cl_muffle_warning", 
                "cl_require", 
                "cl_stringE", 
                "cl_make_package", 
                "ecl_cadr", 
                "cl_fill_pointer", 
                "si_print_unreadable_object_function", 
                "ecl_init_module", 
                "cl_gensym", 
                "si_packages_iterator", 
                "ecl_last", 
                "cl_some", 
                "cl_find_if", 
                "cl_string_upcase", 
                "si_check_keyword", 
                "cl_software_version", 
                "ecl_cdr", 
                "cl_wild_pathname_p", 
                "ecl_make_cfun", 
                "si_base_char_p", 
                "ecl_boundp", 
                "cl_make_string_input_stream", 
                "cl_find_symbol", 
                "cl_reduce", 
                "cl_slot_value", 
                "si_logical_pathname_p", 
                "si_make_string_output_stream_from_string", 
                "ecl_cmp_defmacro", 
                "cl_set_difference", 
                "cl_getf", 
                "cl_constantly", 
                "si_getcwd", 
                "si_do_defsetf", 
                "cl_simple_vector_p", 
                "cl_find_class", 
                "si_char_set", 
                "cl_make_broadcast_stream", 
                "ecl_member", 
                "cl_translate_pathname", 
                "cl_read_byte", 
                "cl_pathnamep", 
                "cl_return_from", 
                "cl_array_element_type", 
                "ecl_aref1", 
                "cl_rename_package", 
                "cl_pathname_host", 
                "ecl_eql", 
                "FEwrong_type_argument", 
                "_ITM_deregisterTMCloneTable", 
                "ecl_stack_frame_close", 
                "cl_substitute_if", 
                "ecl_car", 
                "cl_vector", 
                "ecl_make_simple_base_string", 
                "cl_cerror", 
                "ecl_gethash_safe", 
                "cl_alphanumericp", 
                "si_put_f", 
                "ecl_get", 
                "ecl_number_compare", 
                "cl_remove_if_not", 
                "cl_find_package", 
                "clos_load_defclass", 
                "cl_logbitp", 
                "___tls_get_addr", 
                "cl_gethash", 
                "cl_string_downcase", 
                "cl_open", 
                "cl_pathname_name", 
                "_ecl_frs_push", 
                "ecl_function_dispatch", 
                "ecl_char", 
                "cl_random", 
                "cl_import", 
                "ecl_butlast", 
                "si_lisp_implementation_vcs_id", 
                "si_seq_iterator_next", 
                "ecl_number_equalp", 
                "cl_namestring", 
                "cl_file_namestring", 
                "cl_parse_namestring", 
                "ecl_bds_unwind", 
                "si_ihs_fun", 
                "ecl_make_integer", 
                "ecl_make_cfun_va", 
                "cl_string", 
                "cl_fresh_line", 
                "ecl_equal", 
                "cl_append", 
                "cl_file_write_date", 
                "ecl_caddr", 
                "si_chdir", 
                "cl_code_char", 
                "cl_shadow", 
                "cl_subseq", 
                "cl_lisp_implementation_version", 
                "ecl_stack_push_values", 
                "cl_make_pathname", 
                "cl_position_if_not", 
                "cl_make_string_output_stream", 
                "cl_get_output_stream_string", 
                "si_hash_set", 
                "cl_fmakunbound", 
                "cl_pprint", 
                "cl_export", 
                "cl_unexport", 
                "cl_synonym_stream_symbol", 
                "si_dm_too_many_arguments", 
                "ecl_elt", 
                "clos_install_method", 
                "cl_error", 
                "ecl_cons", 
                "ecl_equalp", 
                "si_assert_failure", 
                "cl_machine_type", 
                "ecl_bds_unwind_n", 
                "ecl_endp", 
                "cl_finish_output", 
                "ecl_setf_definition", 
                "_ecl_va_sp", 
                "cl_user_homedir_pathname", 
                "si_dm_too_few_arguments", 
                "cl_realp", 
                "cl_delete_package", 
                "cl_rename_file", 
                "ecl_make_cclosure_va", 
                "cl_package_shadowing_symbols", 
                "FEstack_advance", 
                "si_of_class_p", 
                "cl_replace", 
                "si_getenv", 
                "cl_lisp_implementation_type", 
                "cl_symbol_function", 
                "si_ihs_top", 
                "ecl_cmp_defun", 
                "cl_reverse", 
                "__stack_chk_fail", 
                "cl_class_of", 
                "cl_software_type", 
                "si_select_package", 
                "cl_subtypep", 
                "cl_adjoin", 
                "cl_list_all_packages", 
                "__gmon_start__", 
                "cl_grab_rest_args", 
                "_setjmp", 
                "cl_symbol_package", 
                "cl_slot_boundp", 
                "si_coerce_to_list", 
                "cl_every", 
                "ecl_stack_pop_values", 
                "ecl_princ", 
                "cl_type_of", 
                "__cxa_finalize", 
                "cl_remhash", 
                "FEtype_error_vector", 
                "cl_position", 
                "ecl_plusp", 
                "cl_listX", 
                "cl_pathname", 
                "cl_use_package", 
                "cl_position_if", 
                "cl_typep", 
                "cl_acons", 
                "FEtype_error_cons", 
                "ecl_assql", 
                "ecl_memql", 
                "cl_symbol_value", 
                "cl_probe_file", 
                "cl_pathname_device", 
                "ecl_minus", 
                "cl_pathname_type", 
                "ecl_bds_bind", 
                "cl_streamp", 
                "cl_package_used_by_list", 
                "FEtype_error_list", 
                "cl_pathname_directory", 
                "cl_translate_logical_pathname", 
                "si_seq_iterator_ref", 
                "_ITM_registerTMCloneTable", 
                "cl_enough_namestring", 
                "ecl_unwind", 
                "cl_read_sequence", 
                "cl_make_string", 
                "ecl_length", 
                "cl_remove_duplicates", 
                "cl_complement", 
                "si_Xmake_special", 
                "cl_close", 
                "cl_list", 
                "ecl_apply_from_stack_frame", 
                "cl_ash", 
                "ecl_internal_error", 
                "si_coerce_to_vector", 
                "ecl_append", 
                "ecl_one_plus", 
                "cl_simple_string_p", 
                "cl_nreverse", 
                "si_do_deftype", 
                "ecl_stack_frame_open", 
                "cl_provide", 
                "cl_eval", 
                "cl_read", 
                "ecl_fdefinition", 
                "cl_format", 
                "cl_unintern", 
                "ecl_cs_overflow", 
                "cl_package_nicknames", 
                "cl_keywordp", 
                "si_rmdir", 
                "ecl_bds_push", 
                "cl_values_list", 
                "si_make_pure_array", 
                "si_system", 
                "ecl_plus", 
                "si_hash_table_iterator", 
                "ecl_stack_frame_push_values", 
                "si_Xmake_constant", 
                "ecl_aref_unsafe", 
                "cl_delete_file", 
                "cl_go", 
                "cl_pathname_version", 
                "cl_apply", 
                "ecl_list1", 
                "si_etypecase_error", 
                "ecl_zerop", 
                "ecl_one_minus", 
                "cl_sort", 
                "ecl_expt", 
                "cl_set", 
                "cl_substitute", 
                "cl_pathname_match_p", 
                "cl_copy_list", 
                "cl_package_name", 
                "cl_functionp", 
                "cl_read_preserving_whitespace", 
                "cl_clrhash", 
                "ecl_nthcdr", 
                "cl_unuse_package", 
                "cl_write", 
                "si_copy_file", 
                "cl_copy_symbol", 
                "cl_load", 
                "ecl_times", 
                "cl_digit_char_p", 
                "cl_package_use_list", 
                "si_external_process_wait", 
                "FEwrong_index", 
                "ecl_cddr", 
                "cl_ensure_directories_exist", 
                "cl_fdefinition", 
                "cl_write_char", 
                "ecl_progv", 
                "cl_make_hash_table", 
                "cl_remove", 
                "ecl_numberp", 
                "cl_parse_key", 
                "cl_map", 
                "cl_read_line", 
                "cl_read_from_string", 
                "FEwrong_num_arguments_anonym", 
                "ecl_make_codeblock", 
                "ecl_terpri", 
                "cl_stable_sort", 
                "cl_char", 
                "cl_machine_instance", 
                "ecl_symbol_value", 
                "si_argc", 
                "si_do_check_type", 
                "cl_shadowing_import", 
                "ecl_assoc", 
                "si_putprop", 
                "cl_write_sequence", 
                "ecl_princ_char", 
                "ecl_stack_frame_pop_values", 
                "si_ecase_error", 
                "cl_truename", 
                "si_make_seq_iterator", 
                "cl_subst", 
                "cl_file_position", 
                "ecl_minusp", 
                "ecl_char_code", 
                "si_quit", 
                "cl_packagep", 
                "cl_write_string", 
                "si_search_keyword", 
                "ecl_bds_overflow", 
                "cl_string_trim", 
                "si_ihs_env", 
                "cl_remove_if", 
                "cl_intern", 
                "cl_make_symbol", 
                "si_argv"
            ], 
            "rpm": "ecl-16.1.3-3.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/ecl-16.1.3/asdf.fas"
        }, 
        "usr/lib/ecl-16_1_3/serve-event_fas": {
            "report-functions": [
                "ecl_stack_pop_values", 
                "_ecl_frs_push", 
                "ecl_eql", 
                "fixint", 
                "ecl_plusp", 
                "FEwrong_num_arguments_anonym", 
                "ecl_car", 
                "cl_error", 
                "ecl_number_equalp", 
                "cl_set", 
                "ecl_make_integer", 
                "cl_streamp", 
                "ecl_cmp_defmacro", 
                "si_select_package", 
                "si_Xmake_constant", 
                "ecl_stack_push_values", 
                "__stack_chk_fail", 
                "si_etypecase_error", 
                "ecl_cmp_defun", 
                "ecl_cdr", 
                "cl_two_way_stream_output_stream", 
                "select", 
                "si_make_structure", 
                "ecl_symbol_value", 
                "__fdelt_chk", 
                "si_Xmake_special", 
                "ecl_list1", 
                "__gmon_start__", 
                "ecl_cs_overflow", 
                "ecl_minusp", 
                "ecl_function_dispatch", 
                "si_define_structure", 
                "ecl_make_codeblock", 
                "FEstack_advance", 
                "si_dm_too_many_arguments", 
                "ecl_zerop", 
                "ecl_make_simple_base_string", 
                "ecl_to_double", 
                "si_of_class_p", 
                "ecl_number_compare", 
                "ecl_one_plus", 
                "_setjmp", 
                "___tls_get_addr", 
                "cl_gensym", 
                "cl_list", 
                "cl_listX", 
                "si_file_stream_fd", 
                "_ITM_deregisterTMCloneTable", 
                "ecl_boundp", 
                "cl_find_class", 
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize", 
                "si_ecase_error", 
                "cl_delete", 
                "cl_two_way_stream_input_stream", 
                "cl_provide", 
                "cl_functionp", 
                "si_dm_too_few_arguments", 
                "ecl_cons", 
                "ecl_unwind", 
                "ecl_init_module"
            ], 
            "rpm": "ecl-16.1.3-3.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/ecl-16.1.3/serve-event.fas"
        }, 
        "usr/lib/ecl-16_1_3/ecl-help_fas": {
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "___tls_get_addr", 
                "cl_provide", 
                "ecl_ash", 
                "cl_streamp", 
                "__cxa_finalize", 
                "si_dm_too_many_arguments", 
                "ecl_make_unsigned_integer", 
                "__stack_chk_fail", 
                "__gmon_start__", 
                "ecl_progv", 
                "ecl_bds_bind", 
                "cl_write_byte", 
                "ecl_boole", 
                "cl_file_position", 
                "ecl_make_codeblock", 
                "cl_find_package", 
                "ecl_stack_frame_open", 
                "si_make_structure", 
                "ecl_stack_push_values", 
                "FEwrong_index", 
                "_ITM_registerTMCloneTable", 
                "ecl_cmp_defmacro", 
                "ecl_list1", 
                "ecl_init_module", 
                "ecl_function_dispatch", 
                "_ecl_frs_push", 
                "cl_realp", 
                "cl_read_sequence", 
                "ecl_bds_overflow", 
                "ecl_bds_unwind", 
                "ecl_number_compare", 
                "cl_error", 
                "cl_read_byte", 
                "cl_logand", 
                "si_fill_array_with_elt", 
                "ecl_cmp_defun", 
                "ecl_unwind", 
                "cl_write_sequence", 
                "si_select_package", 
                "cl_parse_key", 
                "cl_listX", 
                "ecl_aref_unsafe", 
                "cl_read", 
                "si_make_pure_array", 
                "ecl_to_fixnum", 
                "ecl_make_simple_base_string", 
                "ecl_symbol_value", 
                "FEtype_error_vector", 
                "ecl_plus", 
                "_ecl_va_sp", 
                "si_make_vector", 
                "ecl_stack_frame_push_values", 
                "_setjmp", 
                "cl_rename_file", 
                "cl_open_stream_p", 
                "ecl_zerop", 
                "cl_write", 
                "FEwrong_type_argument", 
                "ecl_cs_overflow", 
                "ecl_aset_unsafe", 
                "si_hash_table_iterator", 
                "ecl_cdr", 
                "cl_close", 
                "ecl_floor2", 
                "si_make_sequence_input_stream", 
                "cl_ash", 
                "ecl_times", 
                "cl_find_class", 
                "cl_logior", 
                "ecl_cons", 
                "FEwrong_num_arguments_anonym", 
                "ecl_stack_pop_values", 
                "cl_list", 
                "ecl_stack_frame_pop_values", 
                "si_dm_too_few_arguments", 
                "ecl_equalp", 
                "ecl_car", 
                "si_define_structure", 
                "cl_open", 
                "FEstack_advance", 
                "ecl_stack_frame_close", 
                "ecl_length", 
                "si_make_sequence_output_stream", 
                "ecl_one_plus", 
                "ecl_number_equalp"
            ], 
            "rpm": "ecl-16.1.3-3.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/ecl-16.1.3/ecl-help.fas"
        }, 
        "usr/lib/ecl-16_1_3/defsystem_fas": {
            "report-functions": [
                "ecl_internal_error", 
                "ecl_equal", 
                "cl_char", 
                "cl_pathname_directory", 
                "ecl_list1", 
                "ecl_bds_unwind_n", 
                "cl_parse_key", 
                "si_do_defsetf", 
                "cl_list", 
                "ecl_char", 
                "ecl_cons", 
                "ecl_to_fixnum", 
                "cl_dribble", 
                "cl_package_name", 
                "__stack_chk_fail", 
                "cl_cerror", 
                "cl_find_class", 
                "ecl_boundp", 
                "cl_get_universal_time", 
                "cl_namestring", 
                "cl_pathnamep", 
                "ecl_zerop", 
                "cl_some", 
                "cl_make_pathname", 
                "si_rem_f", 
                "ecl_stack_push_values", 
                "cl_fboundp", 
                "si_dm_too_few_arguments", 
                "ecl_function_dispatch", 
                "cl_pathname_version", 
                "ecl_make_cfun", 
                "cl_pathname", 
                "ecl_fdefinition", 
                "cl_pathname_name", 
                "ecl_cdr", 
                "cl_import", 
                "cl_pathname_device", 
                "FEtype_error_cons", 
                "si_make_structure", 
                "ecl_car", 
                "cl_file_write_date", 
                "ecl_stack_frame_push_values", 
                "cl_clear_input", 
                "_ecl_frs_push", 
                "cl_functionp", 
                "FEstack_advance", 
                "cl_file_namestring", 
                "cl_set", 
                "si_seq_iterator_ref", 
                "cl_make_hash_table", 
                "__gmon_start__", 
                "cl_read_char", 
                "cl_constantly", 
                "si_structure_type_error", 
                "ecl_structure_set", 
                "ecl_stack_pop_values", 
                "FEwrong_type_argument", 
                "_ITM_registerTMCloneTable", 
                "cl_export", 
                "ecl_endp", 
                "si_make_seq_iterator", 
                "cl_remhash", 
                "cl_close", 
                "ecl_symbol_value", 
                "cl_stringE", 
                "ecl_unwind", 
                "si_logical_pathname_p", 
                "cl_merge_pathnames", 
                "ecl_stack_frame_pop_values", 
                "cl_count", 
                "ecl_cddr", 
                "ecl_one_plus", 
                "ecl_cmp_defun", 
                "cl_open", 
                "cl_provide", 
                "cl_file_length", 
                "cl_read", 
                "_ecl_va_sp", 
                "cl_string_equal", 
                "cl_grab_rest_args", 
                "cl_apply", 
                "cl_error", 
                "cl_remove", 
                "_ITM_deregisterTMCloneTable", 
                "cl_eval", 
                "cl_ensure_directories_exist", 
                "cl_reverse", 
                "si_package_lock", 
                "cl_concatenate", 
                "cl_probe_file", 
                "ecl_bds_overflow", 
                "si_Xmake_special", 
                "si_hash_table_iterator", 
                "___tls_get_addr", 
                "ecl_number_compare", 
                "si_dm_too_many_arguments", 
                "si_select_package", 
                "ecl_bds_bind", 
                "ecl_stack_frame_close", 
                "cl_delete_file", 
                "FEwrong_num_arguments_anonym", 
                "cl_format", 
                "ecl_make_codeblock", 
                "cl_find_symbol", 
                "ecl_make_cclosure_va", 
                "cl_adjoin", 
                "cl_clrhash", 
                "__cxa_finalize", 
                "si_define_structure", 
                "cl_software_type", 
                "cl_find_if", 
                "ecl_round2", 
                "ecl_plus", 
                "si_coerce_to_list", 
                "ecl_length", 
                "cl_string", 
                "si_fset", 
                "cl_user_homedir_pathname", 
                "cl_getf", 
                "ecl_gethash_safe", 
                "ecl_symbol_name", 
                "ecl_init_module", 
                "cl_string_upcase", 
                "FEtype_error_list", 
                "cl_fresh_line", 
                "si_hash_set", 
                "cl_keywordp", 
                "cl_go", 
                "_setjmp", 
                "si_etypecase_error", 
                "si_check_keyword", 
                "ecl_number_equalp", 
                "ecl_stack_frame_open", 
                "cl_subseq", 
                "ecl_cs_overflow", 
                "ecl_append", 
                "cl_set_dispatch_macro_character", 
                "ecl_memql", 
                "cl_maphash", 
                "si_ecase_error", 
                "cl_machine_type", 
                "cl_pathname_host", 
                "cl_directory", 
                "cl_listX", 
                "cl_append", 
                "cl_sleep", 
                "ecl_eql", 
                "cl_symbol_function", 
                "clos_load_defclass", 
                "cl_load", 
                "cl_listen", 
                "cl_truename", 
                "ecl_cmp_defmacro", 
                "ecl_print", 
                "ecl_make_integer", 
                "cl_string_downcase", 
                "cl_nreverse", 
                "cl_finish_output", 
                "si_seq_iterator_next", 
                "cl_translate_logical_pathname", 
                "cl_pathname_type", 
                "ecl_char_code", 
                "cl_gethash", 
                "ecl_make_simple_base_string", 
                "cl_delete", 
                "cl_find_package", 
                "cl_gensym", 
                "si_search_keyword", 
                "si_assert_failure"
            ], 
            "rpm": "ecl-16.1.3-3.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/ecl-16.1.3/defsystem.fas"
        }, 
        "usr/lib/ecl-16_1_3/rt_fas": {
            "report-functions": [
                "ecl_cmp_defun", 
                "ecl_boundp", 
                "cl_parse_key", 
                "ecl_to_fixnum", 
                "_ITM_registerTMCloneTable", 
                "ecl_symbol_value", 
                "cl_set", 
                "cl_close", 
                "FEwrong_index", 
                "_setjmp", 
                "cl_eval", 
                "cl_listX", 
                "ecl_make_integer", 
                "cl_array_total_size", 
                "ecl_stack_push_values", 
                "si_dm_too_few_arguments", 
                "ecl_fdefinition", 
                "cl_make_hash_table", 
                "FEtype_error_cons", 
                "ecl_apply_from_stack_frame", 
                "ecl_cons", 
                "cl_copy_list", 
                "ecl_car", 
                "FEtype_error_size", 
                "si_define_structure", 
                "ecl_init_module", 
                "si_Xmake_special", 
                "FEwrong_type_argument", 
                "ecl_bds_bind", 
                "ecl_cdr", 
                "FEwrong_num_arguments_anonym", 
                "cl_throw", 
                "si_hash_set", 
                "FEstack_advance", 
                "cl_array_rank", 
                "_ecl_frs_push", 
                "cl_finish_output", 
                "cl_streamp", 
                "ecl_length", 
                "ecl_list1", 
                "ecl_cddr", 
                "ecl_equal", 
                "ecl_make_cclosure_va", 
                "ecl_aref", 
                "ecl_cmp_defmacro", 
                "___tls_get_addr", 
                "ecl_unwind", 
                "cl_count", 
                "FEwrong_dimensions", 
                "cl_open", 
                "cl_provide", 
                "cl_apply", 
                "_ITM_deregisterTMCloneTable", 
                "cl_array_dimensions", 
                "ecl_stack_frame_open", 
                "si_make_seq_iterator", 
                "ecl_stack_frame_push_values", 
                "ecl_eql", 
                "ecl_cs_overflow", 
                "ecl_stack_frame_pop_values", 
                "ecl_stack_frame_close", 
                "cl_format", 
                "cl_return_from", 
                "__gmon_start__", 
                "ecl_cadr", 
                "FEtype_error_list", 
                "__cxa_finalize", 
                "ecl_make_simple_base_string", 
                "ecl_number_compare", 
                "ecl_make_codeblock", 
                "ecl_elt_set", 
                "ecl_cdddr", 
                "si_seq_iterator_ref", 
                "ecl_bds_overflow", 
                "FEtype_error_vector", 
                "si_select_package", 
                "__stack_chk_fail", 
                "ecl_endp", 
                "cl_list", 
                "ecl_gethash_safe", 
                "_ecl_va_sp", 
                "ecl_one_plus", 
                "cl_nreverse", 
                "si_dm_too_many_arguments", 
                "ecl_aref_unsafe", 
                "cl_grab_rest_args", 
                "si_seq_iterator_next", 
                "ecl_stack_pop_values"
            ], 
            "rpm": "ecl-16.1.3-3.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/ecl-16.1.3/rt.fas"
        }, 
        "usr/lib/ecl-16_1_3/cmp_fas": {
            "report-functions": [
                "mp_lock_owner", 
                "si_system", 
                "cl_realpart", 
                "cl_error", 
                "cl_nconc", 
                "ecl_char_code", 
                "ecl_elt", 
                "cl_pathname_directory", 
                "cl_gentemp", 
                "ecl_boole", 
                "cl_code_char", 
                "cl_tailp", 
                "cl_list", 
                "si_run_program", 
                "si_check_keyword", 
                "ecl_cadddr", 
                "cl_string_upcase", 
                "ecl_char", 
                "cl_copy_structure", 
                "cl_string", 
                "ecl_nbutlast", 
                "cl_set_difference", 
                "cl_nreconc", 
                "cl_make_condition", 
                "cl_LE", 
                "cl_pathnamep", 
                "ecl_stack_frame_close", 
                "cl_notany", 
                "ecl_nthcdr", 
                "cl_load", 
                "ecl_cadr", 
                "cl_software_type", 
                "cl_concatenate", 
                "cl_charLE", 
                "ecl_oddp", 
                "cl_make_pathname", 
                "cl_sort", 
                "cl_subtypep", 
                "cl_fdefinition", 
                "__stack_chk_fail", 
                "si_hash_eql", 
                "cl_reverse", 
                "cl_slot_value", 
                "ecl_bds_bind", 
                "si_gc", 
                "cl_write_to_string", 
                "cl_constantly", 
                "cl_abs", 
                "FEstack_advance", 
                "si_pointer", 
                "cl_software_version", 
                "cl_prin1_to_string", 
                "ecl_divide", 
                "cl_adjoin", 
                "ecl_fdefinition", 
                "ecl_one_plus", 
                "ecl_to_fixnum", 
                "cl_probe_file", 
                "ecl_length", 
                "ecl_eql", 
                "ecl_unwind", 
                "cl_map", 
                "si_eval_with_env", 
                "cl_every", 
                "cl_functionp", 
                "cl_make_list", 
                "cl_streamp", 
                "cl_logxor", 
                "ecl_numberp", 
                "__cxa_finalize", 
                "cl_numerator", 
                "ecl_progv", 
                "si_bc_disassemble", 
                "cl_array_element_type", 
                "mp_giveup_lock", 
                "cl_string_equal", 
                "_setjmp", 
                "cl_upgraded_array_element_type", 
                "cl_read_char", 
                "si_search_keyword", 
                "si_select_package", 
                "cl_pathname_name", 
                "ecl_last", 
                "cl_remove_if", 
                "ecl_cdddr", 
                "si_etypecase_error", 
                "cl_remove_if_not", 
                "cl_make_hash_table", 
                "ecl_make_cfun", 
                "si_make_pure_array", 
                "si_make_structure", 
                "ecl_make_codeblock", 
                "ecl_apply_from_stack_frame", 
                "ecl_plusp", 
                "cl_get_output_stream_string", 
                "cl_return_from", 
                "si_float_infinity_p", 
                "si_make_seq_iterator", 
                "ecl_nth", 
                "ecl_car", 
                "si_do_deftype", 
                "si_mangle_name", 
                "cl_gethash", 
                "cl_coerce", 
                "cl_reduce", 
                "si_proper_list_p", 
                "_ITM_deregisterTMCloneTable", 
                "si_chdir", 
                "si_function_block_name", 
                "ecl_stack_pop_values", 
                "ecl_gethash_safe", 
                "cl_char", 
                "cl_complexp", 
                "ecl_stack_frame_push_values", 
                "si_get_sysprop", 
                "__gmon_start__", 
                "cl_function_lambda_expression", 
                "cl_class_of", 
                "ecl_butlast", 
                "cl_type_of", 
                "ecl_number_compare", 
                "cl_eval", 
                "ecl_make_cclosure_va", 
                "ecl_caadr", 
                "cl_logbitp", 
                "cl_machine_type", 
                "ecl_bds_push", 
                "cl_lisp_implementation_type", 
                "ecl_endp", 
                "ecl_number_equalp", 
                "si_process_lambda_list", 
                "si_Xmake_constant", 
                "ecl_cdr", 
                "cl_vector_push_extend", 
                "clos_install_method", 
                "si_getenv", 
                "ecl_init_module", 
                "cl_read_byte", 
                "cl_imagpart", 
                "cl_macroexpand", 
                "FEwrong_index", 
                "cl_write_char", 
                "cl_peek_char", 
                "si_hash_set", 
                "cl_make_array", 
                "si_memq", 
                "_ITM_registerTMCloneTable", 
                "cl_macro_function", 
                "ecl_aref_unsafe", 
                "floatp", 
                "si_rem_sysprop", 
                "si_coerce_to_filename", 
                "cl_go", 
                "clos_need_to_make_load_form_p", 
                "ecl_cdar", 
                "ecl_cs_overflow", 
                "ecl_bds_unwind_n", 
                "cl_get_universal_time", 
                "si_make_sequence_output_stream", 
                "cl_fresh_line", 
                "ecl_cmp_defmacro", 
                "FEtype_error_vector", 
                "si_seq_iterator_next", 
                "cl_symbol_function", 
                "FEwrong_num_arguments_anonym", 
                "cl_copy_list", 
                "cl_set", 
                "cl_ash", 
                "ecl_symbol_value", 
                "FEwrong_type_argument", 
                "si_base_string_p", 
                "si_package_lock", 
                "ecl_minusp", 
                "cl_make_broadcast_stream", 
                "si_define_structure", 
                "ecl_equal", 
                "ecl_member", 
                "cl_delete_duplicates", 
                "cl_make_string_output_stream", 
                "si_put_sysprop", 
                "cl_delete", 
                "cl_provide", 
                "cl_pathname", 
                "cl_file_position", 
                "ecl_times", 
                "ecl_bds_unwind", 
                "si_specialp", 
                "si_structure_type_error", 
                "ecl_stack_frame_push", 
                "cl_macroexpand_1", 
                "_ecl_frs_push", 
                "cl_delete_if", 
                "si_do_define_setf_method", 
                "cl_parse_integer", 
                "si_float_nan_p", 
                "cl_char_upcase", 
                "FEtype_error_list", 
                "cl_delete_if_not", 
                "cl_merge_pathnames", 
                "cl_realp", 
                "si_read_object_or_ignore", 
                "cl_find_package", 
                "cl_parse_key", 
                "ecl_cons", 
                "cl_some", 
                "si_process_declarations", 
                "ecl_list1", 
                "clos_load_defclass", 
                "ecl_one_minus", 
                "FEtype_error_size", 
                "ecl_bds_overflow", 
                "si_fset", 
                "cl_denominator", 
                "ecl_symbol_name", 
                "cl_copy_tree", 
                "cl_alphanumericp", 
                "cl_getf", 
                "si_make_string_output_stream_from_string", 
                "cl_write_sequence", 
                "cl_sxhash", 
                "cl_import", 
                "ecl_elt_set", 
                "_ecl_va_sp", 
                "ecl_alphanumericp", 
                "si_dm_too_many_arguments", 
                "___tls_get_addr", 
                "cl_apply", 
                "cl_make_string_input_stream", 
                "si_seq_iterator_ref", 
                "si_copy_file", 
                "si_subclassp", 
                "cl_constantp", 
                "ecl_minus", 
                "si_hash_table_fill", 
                "cl_enough_namestring", 
                "ecl_negate", 
                "ecl_structure_set", 
                "cl_append", 
                "ecl_assql", 
                "cl_read_line", 
                "cl_delete_file", 
                "cl_open", 
                "cl_pathname_match_p", 
                "si_dm_too_few_arguments", 
                "cl_symbol_package", 
                "cl_nreverse", 
                "ecl_stack_push_values", 
                "si_find_declarations", 
                "cl_char_code", 
                "cl_princ_to_string", 
                "cl_typep", 
                "ecl_make_cfun_va", 
                "ecl_stack_frame_pop_values", 
                "cl_subst", 
                "cl_namestring", 
                "cl_truename", 
                "ecl_princ", 
                "cl_abort", 
                "cl_pathname_version", 
                "ecl_function_dispatch", 
                "cl_charGE", 
                "si_copy_hash_table", 
                "cl_list_length", 
                "cl_close", 
                "cl_read", 
                "ecl_terpri", 
                "ecl_stack_frame_open", 
                "cl_find_symbol", 
                "si_mkstemp", 
                "ecl_plus", 
                "cl_gensym", 
                "ecl_floor2", 
                "cl_get_decoded_time", 
                "si_hash_equal", 
                "cl_fboundp", 
                "ecl_memql", 
                "ecl_append", 
                "ecl_make_integer", 
                "cl_cerror", 
                "ecl_boundp", 
                "ecl_cddddr", 
                "si_coerce_to_vector", 
                "FEtype_error_cons", 
                "ecl_princ_char", 
                "cl_search", 
                "ecl_cmp_defun", 
                "cl_logtest", 
                "cl_find_class", 
                "cl_string_downcase", 
                "cl_L", 
                "cl_grab_rest_args", 
                "cl_digit_char_p", 
                "si_valid_function_name_p", 
                "si_check_pending_interrupts", 
                "cl_translate_logical_pathname", 
                "cl_get_internal_real_time", 
                "cl_subseq", 
                "ecl_make_simple_base_string", 
                "cl_lisp_implementation_version", 
                "mp_get_lock", 
                "ecl_aset_unsafe", 
                "ecl_equalp", 
                "si_ratiop", 
                "cl_pathname_type", 
                "ecl_zerop", 
                "si_foreign_elt_type_p", 
                "cl_position", 
                "cl_format", 
                "si_signal_simple_error", 
                "ecl_internal_error", 
                "si_of_class_p", 
                "cl_write_string", 
                "ecl_round1", 
                "ecl_nconc", 
                "ecl_cddr", 
                "mp_lock_count", 
                "si_ecase_error", 
                "cl_keywordp", 
                "si_make_vector", 
                "ecl_caddr", 
                "cl_symbol_value", 
                "cl_listX", 
                "ecl_caar", 
                "cl_intern", 
                "cl_ldiff"
            ], 
            "rpm": "ecl-16.1.3-3.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/ecl-16.1.3/cmp.fas"
        }, 
        "usr/lib/ecl-16_1_3/ecl_min": {
            "report-functions": [
                "rand", 
                "cos", 
                "log1pl", 
                "__printf_chk", 
                "__gmpz_get_d", 
                "tan", 
                "setvbuf", 
                "cosl", 
                "getcwd", 
                "__gmpz_mul_si", 
                "GC_unregister_my_thread", 
                "sigdelset", 
                "getrusage", 
                "__gmpz_and", 
                "sqrt", 
                "strerror", 
                "memcmp", 
                "clearerr", 
                "frexp", 
                "GC_push_conditional", 
                "opendir", 
                "GC_set_mark_bit", 
                "__gmpz_get_si", 
                "fedisableexcept", 
                "__cxa_finalize", 
                "__cxa_atexit", 
                "rmdir", 
                "rename", 
                "__gmp_set_memory_functions", 
                "GC_allow_register_threads", 
                "__vfprintf_chk", 
                "_ITM_deregisterTMCloneTable", 
                "pthread_rwlock_wrlock", 
                "GC_set_warn_proc", 
                "pthread_rwlock_tryrdlock", 
                "__xstat64", 
                "strlen", 
                "inet_addr", 
                "fflush", 
                "closedir", 
                "__gmpz_tdiv_q", 
                "GC_free", 
                "ffi_prep_cif", 
                "GC_add_roots", 
                "fileno", 
                "GC_clear_roots", 
                "backtrace_symbols", 
                "__isnan", 
                "kill", 
                "perror", 
                "lseek64", 
                "tanl", 
                "pthread_rwlock_trywrlock", 
                "free", 
                "feenableexcept", 
                "ffi_closure_free", 
                "gettimeofday", 
                "gethostbyname", 
                "atanl", 
                "__memcpy_chk", 
                "tanh", 
                "GC_set_max_heap_size", 
                "GC_malloc_uncollectable", 
                "__gmpz_mul", 
                "GC_set_all_interior_pointers", 
                "strcpy", 
                "sinh", 
                "fclose", 
                "GC_disable", 
                "__fprintf_chk", 
                "pthread_rwlock_destroy", 
                "sigaddset", 
                "__gmpz_add_ui", 
                "strcmp", 
                "waitpid", 
                "dlsym", 
                "sqrtl", 
                "fmodl", 
                "sin", 
                "GC_gcollect", 
                "feclearexcept", 
                "__gmpz_get_str", 
                "__gmpz_fits_slong_p", 
                "__gmon_start__", 
                "unsetenv", 
                "time", 
                "__gmpz_fdiv_qr", 
                "__gmpz_set_si", 
                "GC_malloc", 
                "_ITM_registerTMCloneTable", 
                "execve", 
                "pthread_self", 
                "fdopen", 
                "GC_unregister_disappearing_link", 
                "exp", 
                "memmove", 
                "munmap", 
                "readlink", 
                "__gmpz_mul_2exp", 
                "GC_malloc_ignore_off_page", 
                "getenv", 
                "fwrite", 
                "chdir", 
                "isatty", 
                "exit", 
                "fetestexcept", 
                "abort", 
                "GC_get_start_callback", 
                "backtrace", 
                "__gmpz_set_ui", 
                "mmap64", 
                "pipe", 
                "pthread_rwlock_init", 
                "__lxstat64", 
                "__gmpz_ior", 
                "GC_set_no_dls", 
                "mkdir", 
                "fopen64", 
                "write", 
                "sigsuspend", 
                "pthread_kill", 
                "bind", 
                "GC_malloc_atomic_ignore_off_page", 
                "GC_set_time_limit", 
                "sqrtf", 
                "GC_register_my_thread", 
                "GC_set_start_callback", 
                "__gmpz_tstbit", 
                "__fdelt_chk", 
                "__gmpz_fdiv_q_2exp", 
                "GC_call_with_alloc_lock", 
                "GC_enable", 
                "GC_general_register_disappearing_link", 
                "ldexp", 
                "ffi_prep_closure_loc", 
                "mprotect", 
                "__isnanf", 
                "signal", 
                "_Unwind_Resume", 
                "tanhl", 
                "stpcpy", 
                "__gmpz_set_d", 
                "ftello64", 
                "sigemptyset", 
                "__errno_location", 
                "__gmpz_sizeinbase", 
                "dlerror", 
                "log1pf", 
                "__longjmp_chk", 
                "GC_get_thr_restart_signal", 
                "gethostbyaddr", 
                "__gmpz_set", 
                "feof", 
                "socket", 
                "__gmpz_mul_ui", 
                "__gmpz_com", 
                "GC_set_java_finalization", 
                "GC_get_stack_base", 
                "GC_pthread_create", 
                "unlink", 
                "fseeko64", 
                "fread", 
                "accept", 
                "frexpl", 
                "__stack_chk_fail", 
                "logl", 
                "floor", 
                "__sprintf_chk", 
                "pthread_rwlock_rdlock", 
                "mkstemp64", 
                "cosh", 
                "chmod", 
                "getuid", 
                "GC_get_suspend_signal", 
                "__libc_current_sigrtmin", 
                "atan", 
                "fork", 
                "setenv", 
                "sinl", 
                "expl", 
                "ffi_closure_alloc", 
                "___tls_get_addr", 
                "log", 
                "pthread_rwlock_unlock", 
                "coshl", 
                "GC_register_finalizer_no_order", 
                "open64", 
                "__gmpz_scan1", 
                "pthread_attr_setdetachstate", 
                "nanosleep", 
                "pthread_attr_init", 
                "GC_dump", 
                "fmod", 
                "__gmpz_cdiv_qr", 
                "dup", 
                "GC_dlopen", 
                "getrlimit64", 
                "setsockopt", 
                "GC_enable_incremental", 
                "listen", 
                "__gmpz_add", 
                "_IO_getc", 
                "GC_set_oom_fn", 
                "GC_malloc_atomic", 
                "sinhl", 
                "__gmpz_cmp", 
                "connect", 
                "GC_get_total_bytes", 
                "close", 
                "__gmpz_gcd", 
                "__gmpn_popcount", 
                "read", 
                "ffi_call", 
                "__gmpz_fdiv_r_2exp", 
                "__fxstat64", 
                "dlclose", 
                "strncat", 
                "__isnanl", 
                "_setjmp", 
                "GC_pthread_sigmask", 
                "dup2", 
                "ferror", 
                "getpid", 
                "__gmpz_xor", 
                "__libc_current_sigrtmax", 
                "ldexpl", 
                "__gmpz_init2", 
                "select", 
                "__gcc_personality_v0", 
                "__libc_start_main", 
                "sigaction", 
                "execvp", 
                "sched_yield", 
                "__assert_fail", 
                "GC_push_all", 
                "__gmpz_sub", 
                "GC_register_displacement", 
                "GC_init", 
                "sigfillset", 
                "log1p"
            ], 
            "rpm": "ecl-16.1.3-3.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/ecl-16.1.3/ecl_min"
        }, 
        "usr/lib/ecl-16_1_3/package-locks_fas": {
            "report-functions": [
                "si_dm_too_few_arguments", 
                "ecl_cs_overflow", 
                "ecl_list1", 
                "cl_list", 
                "cl_set", 
                "ecl_init_module", 
                "__stack_chk_fail", 
                "___tls_get_addr", 
                "ecl_make_codeblock", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "cl_gensym", 
                "ecl_car", 
                "ecl_cmp_defmacro", 
                "si_coerce_to_package", 
                "cl_provide", 
                "ecl_cdr", 
                "ecl_make_simple_base_string", 
                "ecl_cmp_defun", 
                "__cxa_finalize", 
                "ecl_symbol_value", 
                "si_select_package", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "ecl-16.1.3-3.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/ecl-16.1.3/package-locks.fas"
        }, 
        "usr/lib/ecl-16_1_3/ecl-curl_fas": {
            "report-functions": [
                "_ecl_frs_push", 
                "cl_close", 
                "ecl_function_dispatch", 
                "cl_list", 
                "ecl_cons", 
                "ecl_char_code", 
                "cl_error", 
                "ecl_elt_set", 
                "_setjmp", 
                "cl_open", 
                "ecl_elt", 
                "clos_load_defclass", 
                "cl_position", 
                "ecl_length", 
                "ecl_cdr", 
                "cl_subseq", 
                "si_make_pure_array", 
                "ecl_number_compare", 
                "si_Xmake_special", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "cl_stream_element_type", 
                "cl_ash", 
                "cl_string_trim", 
                "cl_parse_key", 
                "ecl_times", 
                "ecl_make_codeblock", 
                "cl_char", 
                "ecl_cs_overflow", 
                "___tls_get_addr", 
                "si_getenv", 
                "ecl_make_cfun", 
                "ecl_unwind", 
                "ecl_one_plus", 
                "FEtype_error_size", 
                "ecl_symbol_value", 
                "ecl_boundp", 
                "FEtype_error_cons", 
                "cl_read_sequence", 
                "ecl_make_simple_base_string", 
                "cl_write_sequence", 
                "cl_require", 
                "ecl_divide", 
                "__stack_chk_fail", 
                "ecl_car", 
                "cl_set", 
                "ecl_init_module", 
                "cl_force_output", 
                "ecl_list1", 
                "_ecl_va_sp", 
                "cl_subtypep", 
                "ecl_boole", 
                "ecl_cmp_defun", 
                "ecl_truncate1", 
                "cl_read_line", 
                "FEwrong_num_arguments_anonym", 
                "ecl_stack_push_values", 
                "si_assert_failure", 
                "cl_provide", 
                "ecl_stack_pop_values", 
                "_ITM_registerTMCloneTable", 
                "cl_parse_integer", 
                "si_select_package", 
                "cl_string_upcase", 
                "cl_format", 
                "__cxa_finalize", 
                "ecl_plus", 
                "FEstack_advance", 
                "cl_listX", 
                "cl_string_equal"
            ], 
            "rpm": "ecl-16.1.3-3.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/ecl-16.1.3/ecl-curl.fas"
        }, 
        "usr/lib/ecl-16_1_3/ql-minitar_fas": {
            "report-functions": [
                "ecl_cs_overflow", 
                "cl_realp", 
                "ecl_eql", 
                "ecl_init_module", 
                "cl_close", 
                "cl_parse_key", 
                "si_char_set", 
                "ecl_stack_push_values", 
                "ecl_ceiling2", 
                "cl_every", 
                "ecl_cmp_defun", 
                "ecl_symbol_value", 
                "cl_read_sequence", 
                "cl_nreverse", 
                "ecl_one_plus", 
                "ecl_truncate2", 
                "FEwrong_index", 
                "cl_merge_pathnames", 
                "cl_ensure_directories_exist", 
                "ecl_one_minus", 
                "_ITM_registerTMCloneTable", 
                "cl_parse_integer", 
                "ecl_number_compare", 
                "cl_code_char", 
                "ecl_stack_frame_push_values", 
                "FEstack_advance", 
                "cl_position", 
                "_setjmp", 
                "si_fill_array_with_elt", 
                "__stack_chk_fail", 
                "ecl_cons", 
                "ecl_plusp", 
                "ecl_stack_frame_close", 
                "ecl_aref_unsafe", 
                "_ecl_frs_push", 
                "ecl_stack_frame_open", 
                "si_select_package", 
                "cl_format", 
                "__cxa_finalize", 
                "ecl_unwind", 
                "___tls_get_addr", 
                "__gmon_start__", 
                "ecl_stack_pop_values", 
                "ecl_function_dispatch", 
                "ecl_plus", 
                "ecl_make_simple_base_string", 
                "cl_open", 
                "_ITM_deregisterTMCloneTable", 
                "FEwrong_num_arguments_anonym", 
                "cl_write_sequence", 
                "si_make_vector", 
                "ecl_make_codeblock", 
                "cl_make_string", 
                "ecl_stack_frame_pop_values", 
                "cl_error", 
                "ecl_minus"
            ], 
            "rpm": "ecl-16.1.3-3.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/ecl-16.1.3/ql-minitar.fas"
        }, 
        "usr/lib/ecl-16_1_3/profile_fas": {
            "report-functions": [
                "__cxa_finalize", 
                "cl_write_char", 
                "ecl_length", 
                "si_Xmake_constant", 
                "__gmon_start__", 
                "cl_remhash", 
                "cl_make_hash_table", 
                "_ecl_va_sp", 
                "cl_grab_rest_args", 
                "mp_lock_count", 
                "cl_error", 
                "_setjmp", 
                "ecl_stack_frame_open", 
                "si_do_deftype", 
                "FEstack_advance", 
                "cl_macro_function", 
                "ecl_symbol_name", 
                "ecl_cons", 
                "cl_special_operator_p", 
                "ecl_times", 
                "mp_make_lock", 
                "ecl_apply_from_stack_frame", 
                "cl_format", 
                "_ecl_frs_push", 
                "cl_symbol_package", 
                "ecl_zerop", 
                "si_coerce_to_package", 
                "ecl_cadr", 
                "si_define_structure", 
                "ecl_cmp_defmacro", 
                "ecl_make_integer", 
                "mp_get_lock", 
                "ecl_car", 
                "cl_parse_key", 
                "ecl_stack_frame_close", 
                "cl_symbol_function", 
                "si_select_package", 
                "cl_sort", 
                "ecl_stack_frame_pop_values", 
                "ecl_symbol_value", 
                "ecl_stack_frame_push_values", 
                "ecl_cs_overflow", 
                "ecl_boundp", 
                "si_etypecase_error", 
                "ecl_plus", 
                "ecl_stack_pop_values", 
                "FEwrong_type_argument", 
                "ecl_stack_push_values", 
                "cl_gethash", 
                "ecl_make_cfun", 
                "cl_fdefinition", 
                "si_packages_iterator", 
                "cl_list", 
                "cl_find_class", 
                "_ITM_registerTMCloneTable", 
                "ecl_cdr", 
                "ecl_make_unsigned_integer", 
                "cl_apply", 
                "cl_set", 
                "ecl_function_dispatch", 
                "___tls_get_addr", 
                "si_fset", 
                "mp_lock_owner", 
                "cl_get_internal_run_time", 
                "ecl_divide", 
                "si_of_class_p", 
                "ecl_unwind", 
                "si_check_pending_interrupts", 
                "ecl_make_simple_base_string", 
                "ecl_bds_overflow", 
                "ecl_bds_bind", 
                "__stack_chk_fail", 
                "ecl_make_cclosure_va", 
                "mp_giveup_lock", 
                "ecl_terpri", 
                "si_structure_type_error", 
                "ecl_fdefinition", 
                "si_hash_table_iterator", 
                "cl_functionp", 
                "ecl_minus", 
                "GC_get_total_bytes", 
                "cl_float", 
                "si_make_structure", 
                "cl_makunbound", 
                "ecl_make_codeblock", 
                "si_Xmake_special", 
                "ecl_one_plus", 
                "ecl_cmp_defun", 
                "FEwrong_num_arguments_anonym", 
                "ecl_number_compare", 
                "ecl_init_module", 
                "cl_typep", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "ecl-16.1.3-3.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/ecl-16.1.3/profile.fas"
        }, 
        "usr/bin/ecl": {
            "report-functions": [
                "si_safe_eval", 
                "_ITM_deregisterTMCloneTable", 
                "cl_boot", 
                "___tls_get_addr", 
                "__libc_start_main", 
                "ecl_init_module", 
                "__cxa_finalize", 
                "si_string_to_object", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "si_select_package", 
                "ecl_make_simple_base_string", 
                "si_exit"
            ], 
            "rpm": "ecl-16.1.3-3.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/ecl"
        }, 
        "usr/lib/ecl-16_1_3/ecl-quicklisp_fas": {
            "report-functions": [
                "cl_read_from_string", 
                "cl_find_package", 
                "ecl_init_module", 
                "cl_format", 
                "cl_merge_pathnames", 
                "__cxa_finalize", 
                "ecl_cs_overflow", 
                "__stack_chk_fail", 
                "cl_translate_logical_pathname", 
                "cl_eval", 
                "ecl_make_cclosure_va", 
                "cl_namestring", 
                "_setjmp", 
                "cl_load", 
                "cl_require", 
                "si_Xmake_special", 
                "ecl_list1", 
                "___tls_get_addr", 
                "ecl_internal_error", 
                "FEwrong_num_arguments_anonym", 
                "ecl_make_codeblock", 
                "cl_set", 
                "ecl_bds_overflow", 
                "ecl_cons", 
                "cl_probe_file", 
                "cl_provide", 
                "cl_go", 
                "ecl_bds_bind", 
                "cl_truename", 
                "si_select_package", 
                "ecl_cmp_defun", 
                "ecl_function_dispatch", 
                "_ITM_deregisterTMCloneTable", 
                "_ecl_frs_push", 
                "ecl_symbol_value", 
                "si_quit", 
                "_ITM_registerTMCloneTable", 
                "cl_ensure_directories_exist"
            ], 
            "rpm": "ecl-16.1.3-3.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/ecl-16.1.3/ecl-quicklisp.fas"
        }, 
        "usr/lib/ecl-16_1_3/dpp": {
            "report-functions": [
                "ungetc", 
                "__printf_chk", 
                "__fprintf_chk", 
                "_IO_putc", 
                "strcasecmp", 
                "fopen64", 
                "feof", 
                "__libc_start_main", 
                "fwrite", 
                "strncpy", 
                "exit", 
                "__stack_chk_fail", 
                "__ctype_b_loc", 
                "_IO_getc", 
                "fputs"
            ], 
            "rpm": "ecl-16.1.3-3.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/ecl-16.1.3/dpp"
        }, 
        "usr/lib/ecl-16_1_3/sb-bsd-sockets_fas": {
            "report-functions": [
                "__gmon_start__", 
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable", 
                "ecl_make_codeblock", 
                "_ITM_registerTMCloneTable", 
                "ecl_init_module"
            ], 
            "rpm": "ecl-16.1.3-3.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/ecl-16.1.3/sb-bsd-sockets.fas"
        }, 
        "usr/lib/libecl_so_16_1_3": {
            "report-functions": [
                "write", 
                "dlsym", 
                "memcmp", 
                "__cxa_atexit", 
                "__longjmp_chk", 
                "sqrtl", 
                "memmove", 
                "sinl", 
                "chdir", 
                "GC_malloc_uncollectable", 
                "__gmpz_mul_2exp", 
                "GC_unregister_my_thread", 
                "__gmpz_add", 
                "expl", 
                "backtrace_symbols", 
                "listen", 
                "GC_malloc_atomic_ignore_off_page", 
                "GC_get_suspend_signal", 
                "_ITM_deregisterTMCloneTable", 
                "bind", 
                "fwrite", 
                "__gmpz_mul_ui", 
                "__gmpz_add_ui", 
                "GC_set_no_dls", 
                "__gmpz_fits_slong_p", 
                "mprotect", 
                "dlerror", 
                "_Unwind_Resume", 
                "__gmpz_set", 
                "GC_general_register_disappearing_link", 
                "atanhl", 
                "__gmpz_sub", 
                "GC_pthread_create", 
                "pthread_rwlock_trywrlock", 
                "sin", 
                "read", 
                "GC_set_max_heap_size", 
                "__gmpz_sizeinbase", 
                "time", 
                "gmtime", 
                "pthread_rwlock_tryrdlock", 
                "waitpid", 
                "localtime", 
                "atanl", 
                "_IO_getc", 
                "__libc_current_sigrtmin", 
                "frexp", 
                "sqrtf", 
                "GC_allow_register_threads", 
                "fmodl", 
                "__xstat64", 
                "rename", 
                "GC_register_my_thread", 
                "GC_get_total_bytes", 
                "sigaction", 
                "__gmpz_set_si", 
                "mmap64", 
                "GC_get_thr_restart_signal", 
                "exit", 
                "sigsuspend", 
                "munmap", 
                "ffi_prep_closure_loc", 
                "GC_set_start_callback", 
                "GC_set_oom_fn", 
                "fetestexcept", 
                "GC_push_all", 
                "GC_set_warn_proc", 
                "uname", 
                "__gmpz_xor", 
                "dup2", 
                "__stack_chk_fail", 
                "log1pf", 
                "tanhl", 
                "unsetenv", 
                "tan", 
                "GC_set_time_limit", 
                "floor", 
                "fedisableexcept", 
                "log1pl", 
                "feenableexcept", 
                "backtrace", 
                "execve", 
                "coshl", 
                "asinl", 
                "GC_malloc", 
                "__gmpz_get_si", 
                "pthread_rwlock_wrlock", 
                "ffi_prep_cif", 
                "setenv", 
                "inet_addr", 
                "frexpl", 
                "lseek64", 
                "__memcpy_chk", 
                "sqrt", 
                "gettimeofday", 
                "__gmpz_ior", 
                "feholdexcept", 
                "socket", 
                "abort", 
                "cos", 
                "connect", 
                "__libc_current_sigrtmax", 
                "dlclose", 
                "logl", 
                "__errno_location", 
                "pthread_self", 
                "ffi_closure_alloc", 
                "__gmpz_gcd", 
                "__vfprintf_chk", 
                "kill", 
                "stpcpy", 
                "asinhl", 
                "__sprintf_chk", 
                "closedir", 
                "__gmpz_cmp", 
                "GC_enable", 
                "mkstemp64", 
                "tanl", 
                "_ITM_registerTMCloneTable", 
                "exp", 
                "atan", 
                "GC_register_finalizer_no_order", 
                "acoshl", 
                "sigaddset", 
                "GC_call_with_alloc_lock", 
                "ldexpl", 
                "GC_dlopen", 
                "strcpy", 
                "feclearexcept", 
                "signal", 
                "__gmpz_fdiv_q_2exp", 
                "__fxstat64", 
                "perror", 
                "strlen", 
                "__gmpn_popcount", 
                "__fdelt_chk", 
                "__gmpz_scan1", 
                "__gmpz_com", 
                "sigemptyset", 
                "isatty", 
                "fflush", 
                "__gmpz_fdiv_r_2exp", 
                "setvbuf", 
                "acosl", 
                "GC_init", 
                "__gmpz_fdiv_qr", 
                "GC_clear_roots", 
                "nanosleep", 
                "select", 
                "__cxa_finalize", 
                "GC_set_mark_bit", 
                "GC_get_stack_base", 
                "fdopen", 
                "log1p", 
                "readdir64", 
                "__isnanf", 
                "__gmpz_set_d", 
                "pthread_kill", 
                "__fprintf_chk", 
                "cosh", 
                "fopen64", 
                "rand", 
                "__gmp_set_memory_functions", 
                "getenv", 
                "GC_malloc_atomic", 
                "__gcc_personality_v0", 
                "fread", 
                "pthread_rwlock_unlock", 
                "__gmpz_and", 
                "__gmpz_cdiv_qr", 
                "strcmp", 
                "sinhl", 
                "open64", 
                "fileno", 
                "mkdir", 
                "rmdir", 
                "sinh", 
                "fork", 
                "GC_add_roots", 
                "__gmon_start__", 
                "GC_malloc_ignore_off_page", 
                "__gmpz_get_str", 
                "fseeko64", 
                "__gmpz_set_ui", 
                "fclose", 
                "ferror", 
                "fmod", 
                "__gmpz_init2", 
                "__gmpz_mul_si", 
                "strerror", 
                "getpid", 
                "__assert_fail", 
                "__gmpz_tstbit", 
                "___tls_get_addr", 
                "opendir", 
                "__lxstat64", 
                "sigdelset", 
                "sched_yield", 
                "GC_dump", 
                "cosl", 
                "getcwd", 
                "clearerr", 
                "feof", 
                "getrlimit64", 
                "gethostbyaddr", 
                "GC_enable_incremental", 
                "__gmpz_mul", 
                "__gmpz_get_d", 
                "tanh", 
                "free", 
                "pthread_attr_setdetachstate", 
                "pipe", 
                "gethostbyname", 
                "__isnanl", 
                "GC_pthread_sigmask", 
                "GC_set_all_interior_pointers", 
                "chmod", 
                "pthread_rwlock_destroy", 
                "getrusage", 
                "ffi_call", 
                "GC_disable", 
                "GC_free", 
                "GC_set_java_finalization", 
                "pthread_attr_init", 
                "dup", 
                "pthread_rwlock_init", 
                "ftello64", 
                "readlink", 
                "ldexp", 
                "GC_get_start_callback", 
                "__isnan", 
                "execvp", 
                "strncat", 
                "unlink", 
                "getuid", 
                "sigfillset", 
                "pthread_rwlock_rdlock", 
                "__gmpz_tdiv_q", 
                "setsockopt", 
                "close", 
                "__printf_chk", 
                "GC_register_displacement", 
                "log", 
                "ffi_closure_free", 
                "accept", 
                "_setjmp", 
                "GC_gcollect"
            ], 
            "rpm": "ecl-16.1.3-3.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libecl.so.16.1.3"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " ecl", 
            "License": " LGPLv2+ and BSD and MIT and Public Domain", 
            "URL": " https://common-lisp.net/project/ecl/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-02.phx2.fedoraproject.org", 
            "Description": "\nECL (Embeddable Common Lisp) is an implementation of the Common Lisp\nlanguage as defined by the ANSI X3J13 specification.  ECL features a\nbytecode compiler and interpreter, the ability to build standalone\nexecutables and libraries, and extensions such as ASDF, sockets, and\nGray streams.\n", 
            "Build Date": " Wed 02 Aug 2017 05:35:26 PM EDT", 
            "Source RPM": " ecl-16.1.3-3.fc27.src.rpm", 
            "Version": " 16.1.3", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Mon 07 Aug 2017 12:14:06 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 3.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Embeddable Common-Lisp", 
            "Size": " 13425538"
        }
    }
}