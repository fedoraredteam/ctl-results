{
    "results": {
        "usr/lib64/wireshark/plugins/wimaxmacphy_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/wireshark/plugins/wimaxmacphy.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "proto_register_field_array", 
                "expert_register_field_array", 
                "proto_tree_add_subtree", 
                "expert_add_info", 
                "__cxa_finalize", 
                "tvb_get_guint8", 
                "__gmon_start__", 
                "proto_tree_add_item", 
                "dissector_add_for_decode_as_with_preference", 
                "tvb_get_ntohs", 
                "_ITM_registerTMCloneTable", 
                "col_set_str", 
                "val_to_str_const", 
                "proto_register_protocol", 
                "proto_item_add_subtree", 
                "tvb_reported_length_remaining", 
                "_ITM_deregisterTMCloneTable", 
                "tvb_reported_length", 
                "expert_register_protocol", 
                "proto_tree_add_subtree_format", 
                "proto_item_set_len", 
                "__stack_chk_fail", 
                "tvb_captured_length", 
                "col_clear", 
                "create_dissector_handle"
            ], 
            "rpm": "wireshark-cli-2.4.0-6.fc27.x86_64.rpm"
        }, 
        "usr/lib64/wireshark/plugins/stats_tree_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/wireshark/plugins/stats_tree.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "wmem_alloc", 
                "stats_tree_tick_range", 
                "stats_tree_create_pivot", 
                "uat_add_record", 
                "prefs_register_stat", 
                "__stack_chk_fail", 
                "__cxa_finalize", 
                "stats_tree_create_node", 
                "uat_new", 
                "g_strdup", 
                "range_convert_range", 
                "wmem_free", 
                "g_strdup_printf", 
                "stats_tree_tick_pivot", 
                "g_free", 
                "stats_tree_manip_node", 
                "stats_tree_create_range_node_string", 
                "uat_fld_chk_range", 
                "stats_tree_register_plugin", 
                "range_convert_str", 
                "g_snprintf", 
                "__gmon_start__", 
                "range_copy", 
                "stats_tree_register_with_group", 
                "g_strndup", 
                "_ITM_registerTMCloneTable", 
                "address_to_str", 
                "_ITM_deregisterTMCloneTable", 
                "port_type_to_str"
            ], 
            "rpm": "wireshark-cli-2.4.0-6.fc27.x86_64.rpm"
        }, 
        "usr/bin/dumpcap": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/dumpcap", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "nla_parse", 
                "cmdarg_err", 
                "sleep", 
                "g_hash_table_lookup", 
                "nla_ok", 
                "report_failure", 
                "g_slist_reverse", 
                "strrchr", 
                "pcap_can_set_rfmon", 
                "__printf_chk", 
                "g_array_append_vals", 
                "nlmsg_free", 
                "g_strconcat", 
                "_IO_getc", 
                "localtime", 
                "read", 
                "g_list_prepend", 
                "sigaction", 
                "genlmsg_put", 
                "g_array_new", 
                "socket", 
                "g_strsplit", 
                "__cxa_finalize", 
                "g_async_queue_try_pop_unlocked", 
                "genlmsg_attrdata", 
                "pcap_lookupnet", 
                "pcap_snapshot", 
                "g_list_free", 
                "strstr", 
                "ferror", 
                "g_list_foreach", 
                "g_hash_table_ref", 
                "fputc", 
                "pcap_breakloop", 
                "pcap_datalink", 
                "cap_set_flag", 
                "nla_type", 
                "pcap_close", 
                "g_ascii_strncasecmp", 
                "g_slist_prepend", 
                "g_log", 
                "__stack_chk_fail", 
                "g_array_insert_vals", 
                "strlen", 
                "pcap_set_timeout", 
                "__xstat", 
                "__gmon_start__", 
                "strtol", 
                "pcap_stats", 
                "pcap_dispatch", 
                "index", 
                "g_list_nth_data", 
                "g_log_set_handler", 
                "nl_socket_alloc", 
                "g_hash_table_unref", 
                "ioctl", 
                "pcap_findalldevs", 
                "cmdarg_err_cont", 
                "fgets", 
                "g_strdup", 
                "__fdelt_chk", 
                "pcap_lib_version", 
                "g_string_append_printf", 
                "create_persconffile_dir", 
                "fopen", 
                "pcap_geterr", 
                "g_array_remove_index", 
                "prctl", 
                "__libc_start_main", 
                "rename", 
                "select", 
                "nla_data", 
                "cap_free", 
                "nla_get_u32", 
                "g_ascii_strcasecmp", 
                "g_thread_join", 
                "get_cpu_info", 
                "fclose", 
                "g_string_free", 
                "puts", 
                "zlibVersion", 
                "gettimeofday", 
                "_IO_putc", 
                "bpf_image", 
                "g_list_append", 
                "pcap_statustostr", 
                "cap_set_proc", 
                "genl_connect", 
                "create_tempfile", 
                "g_str_equal", 
                "g_malloc0", 
                "pcap_datalink_val_to_description", 
                "g_strsplit_set", 
                "pcap_open_live", 
                "ws_add_crash_info", 
                "fwrite", 
                "open", 
                "g_list_free_full", 
                "get_persconffile_path", 
                "nl_cb_err", 
                "g_slist_foreach", 
                "g_string_new", 
                "g_async_queue_lock", 
                "g_hash_table_remove", 
                "report_warning", 
                "pcap_set_tstamp_precision", 
                "pcap_freealldevs", 
                "getopt_long", 
                "g_async_queue_new", 
                "started_with_special_privs", 
                "g_list_remove_link", 
                "fputs", 
                "g_strfreev", 
                "g_slist_nth", 
                "pcap_datalink_name_to_val", 
                "pcap_get_selectable_fd", 
                "nla_get_string", 
                "nl_cb_put", 
                "relinquish_special_privs_perm", 
                "g_assertion_message_expr", 
                "memcpy", 
                "strtoul", 
                "cap_init", 
                "g_snprintf", 
                "get_copyright_info", 
                "get_datafile_path", 
                "g_hash_table_insert", 
                "ws_inet_ntop6", 
                "nla_next", 
                "sysinfo", 
                "g_path_get_basename", 
                "time", 
                "g_hash_table_foreach", 
                "pcap_free_datalinks", 
                "nl_cb_alloc", 
                "ws_inet_ntop4", 
                "ungetc", 
                "_ITM_registerTMCloneTable", 
                "genl_ctrl_resolve", 
                "strchr", 
                "g_async_queue_timeout_pop_unlocked", 
                "fflush", 
                "genlmsg_attrlen", 
                "if_nametoindex", 
                "pcap_create", 
                "g_spawn_close_pid", 
                "pcap_setfilter", 
                "g_realloc", 
                "g_free", 
                "nlmsg_hdr", 
                "ws_inet_pton4", 
                "g_list_first", 
                "g_str_hash", 
                "g_file_test", 
                "connect", 
                "g_array_free", 
                "g_string_append", 
                "g_thread_exit", 
                "pcap_compile", 
                "pcap_get_tstamp_precision", 
                "g_strrstr", 
                "get_positive_int", 
                "unlink", 
                "nl_socket_free", 
                "nla_len", 
                "g_list_last", 
                "get_natural_int", 
                "g_strlcpy", 
                "pcap_set_rfmon", 
                "nla_get_u16", 
                "pcap_datalink_val_to_name", 
                "__fprintf_chk", 
                "get_os_version_info", 
                "__isoc99_sscanf", 
                "pcap_list_datalinks", 
                "sigemptyset", 
                "get_nonzero_guint32", 
                "setlocale", 
                "__errno_location", 
                "exit", 
                "nlmsg_data", 
                "cmdarg_err_init", 
                "_ITM_deregisterTMCloneTable", 
                "close", 
                "g_async_queue_push_unlocked", 
                "pcap_activate", 
                "strncmp", 
                "write", 
                "pcap_set_datalink", 
                "g_thread_new", 
                "g_strerror", 
                "g_strdup_printf", 
                "strftime", 
                "nl_recvmsgs", 
                "g_strjoinv", 
                "nl_cb_set", 
                "g_strdup_vprintf", 
                "g_list_length", 
                "init_process_policies", 
                "g_slist_free", 
                "pcap_freecode", 
                "pcap_set_promisc", 
                "g_async_queue_unlock", 
                "putchar", 
                "nla_put", 
                "pcap_set_snaplen", 
                "pcap_set_buffer_size", 
                "__vfprintf_chk", 
                "nl_send_auto_complete", 
                "strcmp", 
                "g_hash_table_new", 
                "fdopen"
            ], 
            "rpm": "wireshark-cli-2.4.0-6.fc27.x86_64.rpm"
        }, 
        "usr/bin/editcap": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/editcap", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "memcmp", 
                "nstime_set_unset", 
                "wtap_get_num_file_types_subtypes", 
                "wtap_file_get_idb_info", 
                "srand", 
                "g_slist_foreach", 
                "wtap_dump_open_stdout_ng", 
                "register_all_wiretap_modules", 
                "get_nonzero_guint32", 
                "wtap_block_add_string_option_format", 
                "g_slist_free", 
                "__printf_chk", 
                "__libc_start_main", 
                "get_os_version_info", 
                "wtap_file_type_subtype_string", 
                "g_strfreev", 
                "wtap_dump_open_ng", 
                "get_cpu_info", 
                "nstime_cmp", 
                "wtap_file_get_nrb_for_new_file", 
                "__gmon_start__", 
                "strtol", 
                "init_progfile_dir", 
                "wtap_init", 
                "wtap_get_num_encap_types", 
                "g_strdup", 
                "wtap_open_offline", 
                "wtap_dump", 
                "wtap_strerror", 
                "wtap_encap_short_string", 
                "wtap_short_string_to_encap", 
                "g_string_new", 
                "g_free", 
                "zlibVersion", 
                "g_string_append", 
                "wtap_encap_string", 
                "init_process_policies", 
                "mktime", 
                "fputc", 
                "g_strconcat", 
                "strchr", 
                "_ITM_deregisterTMCloneTable", 
                "g_strdup_printf", 
                "wtap_short_string_to_file_type_subtype", 
                "wtap_cleanup", 
                "g_malloc_n", 
                "get_guint32", 
                "nstime_delta", 
                "wtap_file_type_subtype", 
                "getopt_long", 
                "g_tree_new_full", 
                "time", 
                "wtap_block_get_string_option_value", 
                "g_strsplit", 
                "g_slist_insert_sorted", 
                "__isoc99_sscanf", 
                "g_tree_destroy", 
                "plugins_cleanup", 
                "memmove", 
                "strptime", 
                "localtime", 
                "wtap_dump_can_open", 
                "g_tree_replace", 
                "wtap_file_encap", 
                "g_assertion_message_expr", 
                "g_strjoinv", 
                "wtap_file_type_subtype_short_string", 
                "g_string_append_printf", 
                "wtap_dump_close", 
                "init_report_message", 
                "wtap_buf_ptr", 
                "scan_plugins", 
                "setlocale", 
                "gcry_md_hash_buffer", 
                "cmdarg_err", 
                "cmdarg_err_init", 
                "rand", 
                "get_copyright_info", 
                "__stack_chk_fail", 
                "g_string_free", 
                "nstime_is_unset", 
                "g_malloc", 
                "g_snprintf", 
                "free_progdirs", 
                "strcmp", 
                "__fprintf_chk", 
                "__vfprintf_chk", 
                "sysinfo", 
                "wtap_file_get_shb_for_new_file", 
                "wtap_phdr", 
                "file_open_error_message", 
                "fwrite", 
                "wtap_close", 
                "_ITM_registerTMCloneTable", 
                "wtap_read", 
                "ws_ascii_strnatcmp", 
                "ws_add_crash_info", 
                "g_strlcpy", 
                "g_ascii_strtod", 
                "__cxa_finalize", 
                "wtap_snapshot_length", 
                "wtap_block_array_free", 
                "getpid"
            ], 
            "rpm": "wireshark-cli-2.4.0-6.fc27.x86_64.rpm"
        }, 
        "usr/bin/text2pcap": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/text2pcap", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "malloc", 
                "getopt_long", 
                "mktime", 
                "ws_add_crash_info", 
                "_IO_getc", 
                "localtime", 
                "g_string_free", 
                "strptime", 
                "strncmp", 
                "get_cpu_info", 
                "_ITM_deregisterTMCloneTable", 
                "ws_inet_pton4", 
                "g_string_new", 
                "ferror", 
                "clearerr", 
                "setlocale", 
                "get_os_version_info", 
                "g_strfreev", 
                "__stack_chk_fail", 
                "strtoul", 
                "calloc", 
                "g_strdup_printf", 
                "__libc_start_main", 
                "__memmove_chk", 
                "gettimeofday", 
                "__assert_fail", 
                "g_strsplit", 
                "free", 
                "g_free", 
                "fopen", 
                "fclose", 
                "g_strerror", 
                "strcmp", 
                "__gmon_start__", 
                "get_copyright_info", 
                "time", 
                "strchr", 
                "__cxa_finalize", 
                "__printf_chk", 
                "__errno_location", 
                "exit", 
                "zlibVersion", 
                "strtol", 
                "g_strlcpy", 
                "g_string_append", 
                "__memset_chk", 
                "fwrite", 
                "g_malloc", 
                "g_string_append_printf", 
                "sysinfo", 
                "strlen", 
                "g_strjoinv", 
                "realloc", 
                "__fprintf_chk", 
                "__isoc99_sscanf", 
                "fread"
            ], 
            "rpm": "wireshark-cli-2.4.0-6.fc27.x86_64.rpm"
        }, 
        "usr/bin/dftest": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/dftest", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "init_process_policies", 
                "strcmp", 
                "dfilter_dump", 
                "__libc_start_main", 
                "timestamp_set_seconds_type", 
                "g_malloc", 
                "g_string_printf", 
                "register_all_protocols", 
                "g_ascii_strncasecmp", 
                "init_report_message", 
                "setlocale", 
                "file_open_error_message", 
                "__fprintf_chk", 
                "g_strfreev", 
                "prefs_apply_all", 
                "putchar", 
                "puts", 
                "g_strv_length", 
                "register_all_protocol_handoffs", 
                "g_free", 
                "exit", 
                "_ITM_deregisterTMCloneTable", 
                "wtap_init", 
                "g_strsplit", 
                "strlen", 
                "timestamp_set_type", 
                "epan_init", 
                "__printf_chk", 
                "fwrite", 
                "epan_load_settings", 
                "__gmon_start__", 
                "__vfprintf_chk", 
                "getenv", 
                "memcpy", 
                "epan_cleanup", 
                "g_string_new", 
                "epan_register_plugin_types", 
                "__cxa_finalize", 
                "scan_plugins", 
                "__stack_chk_fail", 
                "g_strerror", 
                "g_strlcat", 
                "g_strdup", 
                "dfilter_compile", 
                "strchr", 
                "fputc", 
                "init_progfile_dir", 
                "g_ascii_strcasecmp"
            ], 
            "rpm": "wireshark-cli-2.4.0-6.fc27.x86_64.rpm"
        }, 
        "usr/lib64/wireshark/plugins/wimaxasncp_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/wireshark/plugins/wimaxasncp.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "proto_tree_add_ipv4_format", 
                "expert_add_info_format", 
                "g_strdup_printf", 
                "tvb_reported_length_remaining", 
                "proto_item_set_text", 
                "getenv", 
                "tvb_get_guint8", 
                "tvb_captured_length_remaining", 
                "prefs_register_bool_preference", 
                "realloc", 
                "call_dissector", 
                "g_array_append_vals", 
                "eap_code_vals", 
                "proto_tree_add_bytes_format", 
                "col_set_writable", 
                "sminmpec_values_ext", 
                "fflush", 
                "col_set_str", 
                "prefs_register_enum_preference", 
                "g_string_free", 
                "tvb_get_ntohs", 
                "tvb_get_ipv4", 
                "proto_registrar_get_byname", 
                "fread", 
                "tvb_reported_length", 
                "proto_register_prefix", 
                "tvb_address_to_str", 
                "proto_tree_add_string_format", 
                "g_realloc", 
                "fclose", 
                "__cxa_finalize", 
                "strerror", 
                "_ITM_deregisterTMCloneTable", 
                "__stack_chk_fail", 
                "bytestring_to_str", 
                "find_dissector_add_dependency", 
                "_ITM_registerTMCloneTable", 
                "tvb_get_ptr", 
                "tvb_get_ntohl", 
                "__gmon_start__", 
                "strlen", 
                "ipprotostr", 
                "eap_type_vals_ext", 
                "__vfprintf_chk", 
                "dissector_add_uint_with_preference", 
                "strncpy", 
                "proto_register_protocol", 
                "get_hostname", 
                "tvb_address_with_resolution_to_str", 
                "tvb_new_subset_remaining", 
                "proto_register_field_array", 
                "proto_tree_add_ether_format", 
                "col_clear", 
                "col_append_str", 
                "proto_register_subtree_array", 
                "strtoul", 
                "proto_tree_add_subtree_format", 
                "free", 
                "memcpy", 
                "g_print", 
                "register_dissector", 
                "proto_tree_add_uint_format", 
                "g_string_append", 
                "expert_register_protocol", 
                "proto_tree_add_ipv6_format", 
                "exit", 
                "g_string_new", 
                "val_to_str_ext", 
                "col_add_str", 
                "fputc", 
                "proto_item_add_subtree", 
                "__errno_location", 
                "g_ascii_table", 
                "val_to_str_ext_const", 
                "g_array_new", 
                "proto_tree_add_subtree", 
                "strcmp", 
                "tvb_get_ntoh24", 
                "report_failure", 
                "prefs_register_protocol", 
                "col_get_writable", 
                "tvb_ensure_bytes_exist", 
                "g_strdup", 
                "calloc", 
                "proto_tree_add_uint", 
                "tvb_new_subset_length_caplen", 
                "tvb_captured_length", 
                "val_to_str", 
                "strtol", 
                "malloc", 
                "tvb_get_ipv6", 
                "expert_add_info", 
                "fopen", 
                "tvb_bytes_exist", 
                "proto_item_set_len", 
                "tvb_get_string_enc", 
                "g_free", 
                "__printf_chk", 
                "wmem_packet_scope", 
                "__fprintf_chk", 
                "proto_tree_add_item", 
                "get_datafile_dir", 
                "proto_item_append_text", 
                "g_malloc"
            ], 
            "rpm": "wireshark-cli-2.4.0-6.fc27.x86_64.rpm"
        }, 
        "usr/lib64/wireshark/plugins/profinet_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/wireshark/plugins/profinet.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "proto_tree_add_ipv4", 
                "proto_tree_add_time", 
                "dissect_ndr_uint16", 
                "proto_tree_add_uint_format", 
                "dissect_dcom_VARIANT", 
                "fragment_add_seq", 
                "dissect_IDispatch_GetIDsOfNames_rqst", 
                "tvb_get_ntohl", 
                "conversation_add_proto_data", 
                "proto_tree_add_boolean", 
                "strstr", 
                "g_strdup", 
                "crc16_plain_update", 
                "tvb_get_guint8", 
                "tvb_memcpy", 
                "tvb_get_letoh24", 
                "tvb_get_letoh40", 
                "dcom_interface_find", 
                "dissect_dcom_BSTR", 
                "proto_tree_add_uint", 
                "tvb_get_guint32", 
                "dissect_dcom_PMInterfacePointer", 
                "dcerpc_init_uuid", 
                "wmem_list_head", 
                "dissector_add_uint_with_preference", 
                "wmem_strbuf_new", 
                "ftell", 
                "tvb_new_chain", 
                "wmem_strdup_printf", 
                "crc16_plain_tvb_offset_seed", 
                "dissect_dcom_MInterfacePointer", 
                "g_dir_read_name", 
                "tvb_captured_length_remaining", 
                "_ITM_deregisterTMCloneTable", 
                "dissect_dcerpc_uint32", 
                "dissect_IDispatch_GetTypeInfoCount_resp", 
                "fopen", 
                "col_set_str", 
                "proto_tree_add_none_format", 
                "g_dir_open", 
                "guids_add_guid", 
                "g_hash_table_insert", 
                "g_snprintf", 
                "wmem_list_append", 
                "dcom_interface_new", 
                "register_init_routine", 
                "create_dissector_handle", 
                "g_list_free", 
                "col_clear", 
                "dissect_dcom_this", 
                "address_to_str", 
                "tvb_get_ntoh48", 
                "p_get_proto_data", 
                "call_data_dissector", 
                "tvb_new_subset_length", 
                "tvb_get_ntoh24", 
                "proto_register_protocol", 
                "prefs_register_bool_preference", 
                "g_hash_table_new", 
                "dissect_dcom_that", 
                "dissect_IDispatch_GetTypeInfo_rqst", 
                "dcom_hresult_vals", 
                "tvb_get_letohl", 
                "dissector_add_uint", 
                "wmem_packet_scope", 
                "dissect_dcom_HRESULT", 
                "_ITM_registerTMCloneTable", 
                "val_to_str", 
                "proto_tree_add_expert", 
                "g_hash_table_destroy", 
                "strlen", 
                "proto_tree_add_bitmask_with_flags", 
                "tvb_strnlen", 
                "dissect_IDispatch_GetTypeInfo_resp", 
                "wmem_alloc0", 
                "strchr", 
                "g_free", 
                "dissect_dcom_dcerpc_array_size", 
                "proto_item_add_subtree", 
                "dissect_dcom_HRESULT_item", 
                "wmem_strdup", 
                "addresses_reassembly_table_functions", 
                "val_to_str_const", 
                "proto_register_field_array", 
                "tvb_get_ntohs", 
                "proto_tree_add_ether", 
                "dissect_IDispatch_Invoke_rqst", 
                "g_dir_close", 
                "conversation_get_proto_data", 
                "tvb_get_ipv4", 
                "proto_item_set_text", 
                "fclose", 
                "col_add_fstr", 
                "dissect_dcerpc_uint16", 
                "wmem_list_frame_next", 
                "wmem_strbuf_get_str", 
                "proto_tree_add_string_format", 
                "wmem_strbuf_append", 
                "proto_item_append_text", 
                "dissect_dcerpc_uint64", 
                "strcmp", 
                "find_conversation", 
                "wmem_list_new", 
                "dcom_variant_type_vals", 
                "dissect_ndr_uint32", 
                "dissect_dcom_simple_resp", 
                "g_list_append", 
                "register_heur_dissector_list", 
                "tvb_reported_length_remaining", 
                "dissect_dcom_SAFEARRAY", 
                "g_hash_table_lookup", 
                "dissect_IDispatch_GetIDsOfNames_resp", 
                "col_append_fstr", 
                "dissect_dcom_VARTYPE", 
                "prefs_register_directory_preference", 
                "dissect_ndr_double", 
                "proto_register_subtree_array", 
                "dissect_dcerpc_uint8", 
                "tvb_reported_length", 
                "tvb_captured_length", 
                "dissect_ndr_uint8", 
                "rval_to_str", 
                "tvb_get_letoh64", 
                "__stack_chk_fail", 
                "col_add_str", 
                "proto_tree_add_uint_format_value", 
                "register_dissector", 
                "wmem_alloc", 
                "reassembly_table_register", 
                "conversation_new", 
                "fgets", 
                "expert_register_protocol", 
                "proto_tree_add_int", 
                "dissect_dcom_indexed_HRESULT", 
                "dissect_dcerpc_uuid_t", 
                "strtoul", 
                "expert_add_info_format", 
                "fseek", 
                "g_strlcat", 
                "g_strdup_printf", 
                "proto_tree_add_guid", 
                "tvb_get_letohs", 
                "proto_tree_add_checksum", 
                "tvb_get_letoh56", 
                "dissector_try_heuristic", 
                "wmem_memdup", 
                "proto_tree_add_protocol_format", 
                "wmem_list_frame_data", 
                "proto_tree_add_item", 
                "prefs_register_protocol", 
                "heur_dissector_add", 
                "dissect_dcom_simple_rqst", 
                "wmem_file_scope", 
                "tvb_get_letoh48", 
                "col_append_str", 
                "memcmp", 
                "get_host_ipaddr", 
                "expert_add_info", 
                "expert_register_field_array", 
                "proto_item_set_len", 
                "proto_tree_add_subtree_format", 
                "dissect_ndr_duint32", 
                "dissect_dcom_indexed_DWORD", 
                "__isoc99_sscanf", 
                "proto_tree_add_bits_item", 
                "dissect_dcom_dcerpc_pointer", 
                "g_assertion_message_expr", 
                "dissect_dcom_indexed_LPWSTR", 
                "dissect_dcerpc_char", 
                "register_conversation_filter", 
                "find_dissector_table", 
                "guid_to_str", 
                "__cxa_finalize", 
                "add_new_data_source", 
                "__gmon_start__", 
                "tvb_new_subset_remaining", 
                "dissect_IDispatch_Invoke_resp", 
                "proto_tree_add_string_format_value", 
                "dissect_dcom_LPWSTR", 
                "proto_tree_add_string", 
                "proto_is_frame_protocol", 
                "p_add_proto_data", 
                "register_cleanup_routine", 
                "guids_resolve_guid_to_str", 
                "dissector_try_uint"
            ], 
            "rpm": "wireshark-cli-2.4.0-6.fc27.x86_64.rpm"
        }, 
        "usr/lib64/wireshark/plugins/ethercat_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/wireshark/plugins/ethercat.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "val_to_str", 
                "col_set_str", 
                "expert_register_protocol", 
                "proto_register_subtree_array", 
                "create_dissector_handle", 
                "__gmon_start__", 
                "tvb_reported_length", 
                "register_dissector", 
                "call_data_dissector", 
                "proto_tree_add_uint", 
                "expert_add_info", 
                "proto_tree_add_uint_format_value", 
                "__stack_chk_fail", 
                "proto_tree_add_subtree", 
                "proto_register_protocol", 
                "col_append_str", 
                "tvb_get_guint8", 
                "proto_item_get_parent", 
                "register_heur_dissector_list", 
                "call_dissector", 
                "col_clear", 
                "try_val_to_str_idx", 
                "dissector_try_heuristic", 
                "tvb_get_letohl", 
                "register_dissector_table", 
                "col_prepend_fstr", 
                "g_strlcat", 
                "proto_item_set_text", 
                "tvb_new_subset_length", 
                "dissector_try_uint", 
                "call_dissector_only", 
                "_ITM_deregisterTMCloneTable", 
                "prefs_register_obsolete_preference", 
                "tvb_new_subset_remaining", 
                "tvb_captured_length_remaining", 
                "_ITM_registerTMCloneTable", 
                "tvb_get_letoh64", 
                "proto_tree_add_subtree_format", 
                "nstime_sum", 
                "proto_item_add_subtree", 
                "proto_tree_add_item", 
                "heur_dissector_add", 
                "proto_tree_add_uint_format", 
                "proto_tree_add_bytes_format", 
                "__cxa_finalize", 
                "tvb_memcpy", 
                "proto_register_field_array", 
                "proto_tree_add_string", 
                "dissector_add_uint", 
                "col_append_fstr", 
                "find_dissector_add_dependency", 
                "tvb_get_letohs", 
                "g_snprintf", 
                "col_add_fstr", 
                "nstime_delta", 
                "expert_add_info_format", 
                "dissector_add_uint_with_preference", 
                "col_add_str", 
                "expert_register_field_array", 
                "proto_tree_add_bitmask", 
                "tvb_captured_length"
            ], 
            "rpm": "wireshark-cli-2.4.0-6.fc27.x86_64.rpm"
        }, 
        "usr/lib64/wireshark/extcap/ciscodump": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/wireshark/extcap/ciscodump", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "ferror", 
                "ssh_get_error", 
                "g_free", 
                "g_malloc", 
                "g_assertion_message_expr", 
                "puts", 
                "g_strfreev", 
                "setenv", 
                "g_log", 
                "time", 
                "fopen", 
                "ssh_channel_new", 
                "ssh_userauth_publickey_auto", 
                "ssh_options_set", 
                "g_string_free", 
                "data_file_url", 
                "ssh_channel_free", 
                "__libc_start_main", 
                "_ITM_deregisterTMCloneTable", 
                "ssh_channel_close", 
                "g_list_append", 
                "g_strcmp0", 
                "putchar", 
                "ssh_key_new", 
                "getopt_long", 
                "ssh_channel_read_timeout", 
                "memcpy", 
                "g_strdup_printf", 
                "fclose", 
                "local_interfaces_to_list", 
                "g_get_user_name", 
                "g_list_find_custom", 
                "ssh_channel_request_pty", 
                "strtoul", 
                "__cxa_finalize", 
                "g_strstr_len", 
                "g_path_get_basename", 
                "ssh_disconnect", 
                "ssh_free", 
                "g_regex_split_simple", 
                "__isoc99_sscanf", 
                "ssh_key_free", 
                "gettimeofday", 
                "g_list_foreach", 
                "ssh_channel_write", 
                "g_strerror", 
                "g_regex_match_simple", 
                "g_list_length", 
                "__printf_chk", 
                "g_malloc0", 
                "ssh_channel_open_session", 
                "ssh_pki_import_privkey_file", 
                "ssh_channel_send_eof", 
                "strlen", 
                "ssh_userauth_password", 
                "ssh_new", 
                "ssh_connect", 
                "g_slist_free_full", 
                "__gmon_start__", 
                "ws_strtou16", 
                "ssh_userauth_publickey", 
                "g_list_free", 
                "_ITM_registerTMCloneTable", 
                "g_strdup", 
                "__errno_location", 
                "ssh_channel_request_shell", 
                "g_string_append_printf", 
                "ssh_channel_change_pty_size", 
                "ws_strtou32", 
                "g_string_new", 
                "fwrite", 
                "memset"
            ], 
            "rpm": "wireshark-cli-2.4.0-6.fc27.x86_64.rpm"
        }, 
        "usr/lib64/wireshark/plugins/opcua_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/wireshark/plugins/opcua.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "process_reassembled_data", 
                "col_add_fstr", 
                "create_dissector_handle", 
                "proto_item_append_text", 
                "fragment_delete", 
                "proto_register_field_array", 
                "reassembly_table_register", 
                "dissect_nt_64bit_time_ex", 
                "fragment_get", 
                "col_set_str", 
                "proto_register_protocol", 
                "proto_tree_add_expert_format", 
                "col_append_fstr", 
                "proto_tree_add_subtree", 
                "tvb_get_letohl", 
                "fragment_add_seq_check", 
                "tcp_dissect_pdus", 
                "proto_item_add_subtree", 
                "g_snprintf", 
                "val_to_str_const", 
                "col_clear_fence", 
                "proto_item_prepend_text", 
                "proto_tree_add_item", 
                "tvb_get_guint8", 
                "_ITM_registerTMCloneTable", 
                "dissector_add_uint_range_with_preference", 
                "tvb_new_subset_remaining", 
                "expert_register_protocol", 
                "proto_tree_add_bitmask", 
                "_ITM_deregisterTMCloneTable", 
                "__stack_chk_fail", 
                "__gmon_start__", 
                "wmem_packet_scope", 
                "tvb_memeql", 
                "addresses_reassembly_table_functions", 
                "val_to_str", 
                "tvb_reported_length", 
                "__cxa_finalize", 
                "fragment_get_reassembled_id", 
                "tvb_captured_length_remaining", 
                "proto_tree_add_subtree_format", 
                "expert_register_field_array", 
                "tvb_get_letohs", 
                "wmem_strdup_printf", 
                "proto_register_subtree_array"
            ], 
            "rpm": "wireshark-cli-2.4.0-6.fc27.x86_64.rpm"
        }, 
        "usr/lib64/wireshark/plugins/transum_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/wireshark/plugins/transum.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "wmem_list_frame_next", 
                "fvalue_get_uinteger", 
                "wmem_alloc0", 
                "range_convert_str", 
                "wmem_map_new", 
                "proto_register_field_array", 
                "wmem_list_head", 
                "find_protocol_by_id", 
                "proto_registrar_get_id_byname", 
                "wmem_strbuf_new", 
                "wmem_strbuf_append_printf", 
                "g_array_append_vals", 
                "nstime_delta", 
                "prefs_register_obsolete_preference", 
                "wmem_list_frame_prev", 
                "wmem_list_append", 
                "prefs_register_range_preference", 
                "proto_register_subtree_array", 
                "wmem_map_lookup", 
                "proto_item_add_subtree", 
                "wmem_list_remove", 
                "val_to_str", 
                "set_postdissector_wanted_hfids", 
                "register_dissector", 
                "_ITM_registerTMCloneTable", 
                "wmem_list_frame_data", 
                "wmem_file_scope", 
                "__gmon_start__", 
                "proto_disable_by_default", 
                "wmem_map_remove", 
                "wmem_map_insert", 
                "g_direct_hash", 
                "__cxa_finalize", 
                "fvalue_get_uinteger64", 
                "wmem_strbuf_get_str", 
                "register_init_routine", 
                "wmem_packet_scope", 
                "proto_tree_add_item", 
                "prefs_register_protocol", 
                "proto_tree_add_uint", 
                "wmem_memdup", 
                "g_direct_equal", 
                "fvalue_get_sinteger64", 
                "proto_register_protocol", 
                "prefs_register_bool_preference", 
                "proto_tree_add_time", 
                "g_array_new", 
                "wmem_epan_scope", 
                "wmem_list_tail", 
                "__stack_chk_fail", 
                "wmem_list_new", 
                "prefs_register_enum_preference", 
                "register_postdissector", 
                "_ITM_deregisterTMCloneTable", 
                "proto_get_finfo_ptr_array"
            ], 
            "rpm": "wireshark-cli-2.4.0-6.fc27.x86_64.rpm"
        }, 
        "usr/lib64/wireshark/plugins/unistim_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/wireshark/plugins/unistim.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "register_tap", 
                "col_add_fstr", 
                "tvb_get_guint8", 
                "proto_tree_add_item_ret_string", 
                "wmem_packet_scope", 
                "proto_tree_add_subtree", 
                "__stack_chk_fail", 
                "__gmon_start__", 
                "expert_register_field_array", 
                "col_clear", 
                "dissector_add_for_decode_as_with_preference", 
                "col_set_str", 
                "tvb_get_ipv4", 
                "g_assertion_message_expr", 
                "rtp_add_address", 
                "__cxa_finalize", 
                "wmem_memdup", 
                "create_dissector_handle", 
                "proto_tree_add_int", 
                "proto_tree_add_item", 
                "proto_tree_add_subtree_format", 
                "_ITM_deregisterTMCloneTable", 
                "proto_register_protocol", 
                "proto_register_subtree_array", 
                "tvb_strsize", 
                "tvb_reported_length", 
                "proto_tree_add_boolean", 
                "tap_queue_packet", 
                "proto_item_add_subtree", 
                "tvb_get_ntohl", 
                "_ITM_registerTMCloneTable", 
                "expert_add_info", 
                "proto_item_set_len", 
                "tvb_reported_length_remaining", 
                "proto_register_field_array", 
                "rtcp_add_address", 
                "tvb_captured_length", 
                "tvb_get_ntohs"
            ], 
            "rpm": "wireshark-cli-2.4.0-6.fc27.x86_64.rpm"
        }, 
        "usr/bin/captype": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/captype", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "wtap_cleanup", 
                "getopt_long", 
                "get_copyright_info", 
                "wtap_init", 
                "wtap_close", 
                "g_strdup", 
                "init_progfile_dir", 
                "wtap_file_type_subtype_short_string", 
                "init_process_policies", 
                "ws_add_crash_info", 
                "wtap_open_offline", 
                "g_string_append_printf", 
                "g_strdup_printf", 
                "fputc", 
                "get_os_version_info", 
                "wtap_file_type_subtype", 
                "__vfprintf_chk", 
                "init_report_message", 
                "g_string_new", 
                "cmdarg_err", 
                "_ITM_deregisterTMCloneTable", 
                "g_free", 
                "g_strjoinv", 
                "g_strsplit", 
                "__fprintf_chk", 
                "register_all_wiretap_modules", 
                "__gmon_start__", 
                "setlocale", 
                "__stack_chk_fail", 
                "sysinfo", 
                "fwrite", 
                "cmdarg_err_init", 
                "g_string_free", 
                "_ITM_registerTMCloneTable", 
                "g_string_append", 
                "wtap_strerror", 
                "__libc_start_main", 
                "file_open_error_message", 
                "__cxa_finalize", 
                "exit", 
                "free_progdirs", 
                "__printf_chk", 
                "plugins_cleanup", 
                "g_strfreev", 
                "get_cpu_info", 
                "strchr"
            ], 
            "rpm": "wireshark-cli-2.4.0-6.fc27.x86_64.rpm"
        }, 
        "usr/bin/mergecap": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/mergecap", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "g_free", 
                "init_process_policies", 
                "__fprintf_chk", 
                "g_strdup_printf", 
                "file_open_error_message", 
                "sysinfo", 
                "wtap_cleanup", 
                "g_string_append", 
                "wtap_short_string_to_file_type_subtype", 
                "wtap_encap_string", 
                "_ITM_deregisterTMCloneTable", 
                "cmdarg_err_init", 
                "wtap_file_encap", 
                "getopt_long", 
                "merge_string_to_idb_merge_mode", 
                "_ITM_registerTMCloneTable", 
                "__printf_chk", 
                "register_all_wiretap_modules", 
                "setlocale", 
                "init_progfile_dir", 
                "g_string_free", 
                "strchr", 
                "wtap_file_type_subtype_string", 
                "__stack_chk_fail", 
                "wtap_file_type_subtype", 
                "fwrite", 
                "__cxa_finalize", 
                "g_string_append_printf", 
                "get_os_version_info", 
                "merge_files", 
                "g_slist_free", 
                "get_copyright_info", 
                "fputc", 
                "merge_files_to_stdout", 
                "__gmon_start__", 
                "merge_idb_merge_mode_to_string", 
                "__libc_start_main", 
                "g_malloc_n", 
                "init_report_message", 
                "g_assertion_message_expr", 
                "wtap_encap_short_string", 
                "g_strsplit", 
                "wtap_file_type_subtype_short_string", 
                "__vfprintf_chk", 
                "g_strfreev", 
                "g_slist_insert_sorted", 
                "cmdarg_err", 
                "wtap_get_num_file_types_subtypes", 
                "g_strdup", 
                "g_string_new", 
                "scan_plugins", 
                "strcmp", 
                "ws_add_crash_info", 
                "wtap_strerror", 
                "zlibVersion", 
                "wtap_init", 
                "g_slist_foreach", 
                "g_strjoinv", 
                "get_nonzero_guint32", 
                "wtap_dump_can_open", 
                "free_progdirs"
            ], 
            "rpm": "wireshark-cli-2.4.0-6.fc27.x86_64.rpm"
        }, 
        "usr/lib64/libwiretap_so_7_0_0": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/libwiretap.so.7.0.0", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "g_hash_table_new", 
                "g_slist_foreach", 
                "strtol", 
                "get_copyright_info", 
                "g_slist_free", 
                "fopen", 
                "__fxstat", 
                "open", 
                "g_array_new", 
                "__xstat", 
                "g_strcmp0", 
                "g_strdup_printf", 
                "strtoul", 
                "time", 
                "ascii_strdown_inplace", 
                "g_array_set_size", 
                "free", 
                "close", 
                "calloc", 
                "g_ptr_array_new_with_free_func", 
                "memcmp", 
                "fclose", 
                "mpa_version", 
                "strftime", 
                "g_ptr_array_free", 
                "mpa_layer", 
                "g_list_foreach", 
                "g_strerror", 
                "g_log", 
                "malloc", 
                "g_ascii_strncasecmp", 
                "g_malloc", 
                "g_list_free", 
                "g_strlcat", 
                "mpa_padding", 
                "strcmp", 
                "write", 
                "_ITM_registerTMCloneTable", 
                "inflateSetDictionary", 
                "get_cpu_info", 
                "crc32_ccitt_seed", 
                "mpa_bitrate", 
                "ws_buffer_cleanup", 
                "g_direct_equal", 
                "create_tempfile", 
                "g_path_get_basename", 
                "deflate", 
                "memchr", 
                "g_list_append", 
                "ws_strtoi32", 
                "filetime_to_nstime", 
                "asctime", 
                "getenv", 
                "ws_hexstrtou64", 
                "g_try_malloc", 
                "g_hash_table_iter_remove", 
                "g_snprintf", 
                "exit", 
                "mktime", 
                "mpa_samples", 
                "g_hash_table_lookup", 
                "deflateEnd", 
                "fileno", 
                "fdopen", 
                "g_list_nth_data", 
                "g_hash_table_insert", 
                "deflateInit2_", 
                "read", 
                "inflateInit2_", 
                "g_strdup", 
                "g_free", 
                "ws_strtou32", 
                "fwrite", 
                "fflush", 
                "g_hash_table_foreach_remove", 
                "ieee80211_chan_to_mhz", 
                "nsfiletime_to_nstime", 
                "ieee80211_mhz_to_chan", 
                "g_list_prepend", 
                "lseek", 
                "g_rand_int", 
                "g_array_prepend_vals", 
                "g_realloc", 
                "g_strjoin", 
                "g_regex_match_simple", 
                "mpa_frequency", 
                "strstr", 
                "g_rand_new", 
                "g_ptr_array_foreach", 
                "inflateEnd", 
                "g_get_current_time", 
                "inflateReset", 
                "__isoc99_sscanf", 
                "sysinfo", 
                "add_plugin_type", 
                "ws_buffer_free", 
                "g_ptr_array_add", 
                "g_strfreev", 
                "__cxa_finalize", 
                "g_ascii_toupper", 
                "ws_buffer_init", 
                "g_string_append_printf", 
                "strchr", 
                "localtime", 
                "g_string_free", 
                "g_hash_table_destroy", 
                "strlen", 
                "realloc", 
                "g_strconcat", 
                "g_strndup", 
                "g_strsplit", 
                "ws_buffer_assure_space", 
                "gmtime", 
                "g_array_sized_new", 
                "zlibVersion", 
                "g_hash_table_foreach", 
                "ascii_strup_inplace", 
                "setlocale", 
                "ftell", 
                "g_array_append_vals", 
                "g_ascii_xdigit_value", 
                "deflateReset", 
                "ws_strtou8", 
                "inflatePrime", 
                "g_malloc0", 
                "dup", 
                "g_direct_hash", 
                "jsmn_is_json", 
                "g_hash_table_iter_steal", 
                "g_string_new", 
                "g_string_printf", 
                "g_hash_table_replace", 
                "g_hash_table_iter_init", 
                "g_array_free", 
                "strncmp", 
                "__fprintf_chk", 
                "g_array_insert_vals", 
                "unlink", 
                "g_ascii_tolower", 
                "g_hash_table_new_full", 
                "get_os_version_info", 
                "g_slist_prepend", 
                "g_strjoinv", 
                "_ITM_deregisterTMCloneTable", 
                "memset", 
                "g_ptr_array_new", 
                "g_strdup_vprintf", 
                "crc32", 
                "inflate", 
                "g_string_append", 
                "__stack_chk_fail", 
                "g_module_symbol", 
                "g_assertion_message_expr", 
                "g_get_user_name", 
                "__memcpy_chk", 
                "g_ascii_strcasecmp", 
                "g_hash_table_iter_next", 
                "ferror", 
                "g_memdup", 
                "__errno_location", 
                "__printf_chk", 
                "strrchr", 
                "g_str_hash", 
                "g_str_equal", 
                "g_strlcpy", 
                "fseek", 
                "g_slist_append", 
                "memcpy", 
                "nstime_delta"
            ], 
            "rpm": "wireshark-cli-2.4.0-6.fc27.x86_64.rpm"
        }, 
        "usr/lib64/libwsutil_so_8_0_0": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/libwsutil.so.8.0.0", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "__xstat", 
                "g_module_error", 
                "gcry_cipher_encrypt", 
                "g_string_free", 
                "gcry_md_open", 
                "freeifaddrs", 
                "getgid", 
                "mkdir", 
                "memcpy", 
                "g_dir_close", 
                "g_ascii_strtoull", 
                "_ITM_deregisterTMCloneTable", 
                "g_once_init_leave", 
                "strlen", 
                "gcry_md_write", 
                "setresgid", 
                "remove", 
                "g_realloc", 
                "g_ascii_strtoll", 
                "g_free", 
                "g_str_equal", 
                "readlink", 
                "g_module_name", 
                "g_strlcpy", 
                "g_build_filename", 
                "time", 
                "__stack_chk_fail", 
                "g_module_close", 
                "access", 
                "gcry_md_setkey", 
                "setresuid", 
                "g_filename_to_uri", 
                "g_snprintf", 
                "g_ptr_array_sized_new", 
                "strftime", 
                "gcry_cipher_setiv", 
                "getuid", 
                "mkstemps", 
                "geteuid", 
                "g_assertion_message_expr", 
                "gcry_cipher_close", 
                "gcry_cipher_setctr", 
                "g_list_first", 
                "g_path_is_absolute", 
                "__errno_location", 
                "umask", 
                "g_slist_free", 
                "close", 
                "getcwd", 
                "g_malloc", 
                "getifaddrs", 
                "gcry_cipher_open", 
                "g_dir_read_name", 
                "g_ptr_array_set_free_func", 
                "g_hash_table_lookup", 
                "g_file_test", 
                "g_hash_table_new", 
                "__cxa_finalize", 
                "g_once_init_enter", 
                "getrusage", 
                "g_strdup", 
                "getgrgid", 
                "g_slist_append", 
                "pathconf", 
                "__printf_chk", 
                "mkdtemp", 
                "g_hash_table_get_keys", 
                "g_strlcat", 
                "__fprintf_chk", 
                "strcmp", 
                "g_get_user_config_dir", 
                "g_slist_prepend", 
                "g_ptr_array_remove_index", 
                "g_getenv", 
                "write", 
                "read", 
                "g_hash_table_insert", 
                "g_string_append", 
                "g_ptr_array_add", 
                "g_strerror", 
                "getresuid", 
                "gcry_md_read", 
                "g_module_open", 
                "g_strdelimit", 
                "g_slist_foreach", 
                "g_list_free", 
                "g_log", 
                "g_module_symbol", 
                "uname", 
                "g_ascii_toupper", 
                "g_strconcat", 
                "g_string_new", 
                "getegid", 
                "getpwuid", 
                "inet_ntop", 
                "gcry_cipher_setkey", 
                "strrchr", 
                "g_strchomp", 
                "rename", 
                "endpwent", 
                "memmove", 
                "endgrent", 
                "g_strcmp0", 
                "g_string_append_printf", 
                "g_string_append_vprintf", 
                "open", 
                "localtime", 
                "g_dir_open", 
                "g_malloc0", 
                "g_str_hash", 
                "_ITM_registerTMCloneTable", 
                "getresgid", 
                "g_strdup_printf", 
                "g_mkdir_with_parents", 
                "strchr", 
                "exit", 
                "gcry_md_get_algo_dlen", 
                "gcry_md_close", 
                "g_string_printf", 
                "g_ptr_array_free"
            ], 
            "rpm": "wireshark-cli-2.4.0-6.fc27.x86_64.rpm"
        }, 
        "usr/bin/sharkd": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/sharkd", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "g_list_find_custom", 
                "g_array_free", 
                "prefs_get_string_value", 
                "eo_free_entry", 
                "g_spawn_sync", 
                "except_pop", 
                "prefs_get_uint_value_real", 
                "tvb_ws_mempbrk_pattern_guint8", 
                "get_follow_tap_handler", 
                "col_format_to_string", 
                "wtap_file_type_subtype", 
                "get_eo_packet_func", 
                "postdissectors_want_hfids", 
                "build_column_format_array", 
                "reset_hostlist_table_data", 
                "get_rtd_table_by_name", 
                "wtap_seek_read", 
                "ws_buffer_free", 
                "epan_get_compiled_version_info", 
                "g_strdup", 
                "find_codec", 
                "__fprintf_chk", 
                "g_direct_equal", 
                "get_srt_packet_func", 
                "g_spawn_async_with_pipes", 
                "get_conversation_filter", 
                "wtap_phdr_init", 
                "frame_data_destroy", 
                "bind", 
                "g_hash_table_lookup_extended", 
                "prefs_find_preference", 
                "get_eo_proto_id", 
                "ws_codec_resampler_get_rate", 
                "srt_table_iterate_tables", 
                "color_filters_prime_edt", 
                "g_strdup_printf", 
                "g_hash_table_insert", 
                "epan_dissect_run", 
                "wtap_init", 
                "report_warning", 
                "timestamp_set_precision", 
                "g_hash_table_foreach", 
                "free_stat_tables", 
                "ws_strtou16", 
                "listen", 
                "__libc_start_main", 
                "g_slist_append", 
                "rtd_table_get_filter", 
                "wtap_file_get_idb_info", 
                "epan_new", 
                "g_list_sort", 
                "g_memdup", 
                "g_string_insert_c", 
                "g_str_hash", 
                "__memcpy_chk", 
                "get_conversation_proto_id", 
                "remove_tap_listener", 
                "create_persconffile_dir", 
                "get_srt_tap_listener_name", 
                "fork", 
                "init_progfile_dir", 
                "ferror", 
                "get_conversation_by_proto_id", 
                "g_string_printf", 
                "read", 
                "wtap_open_offline", 
                "fgets", 
                "report_failure", 
                "col_custom_prime_edt", 
                "fflush", 
                "postseq_cleanup_all_protocols", 
                "free_progdirs", 
                "g_regex_match_full", 
                "g_hash_table_foreach_remove", 
                "proto_get_id_by_short_name", 
                "g_strtod", 
                "__cxa_finalize", 
                "g_array_remove_index", 
                "sysinfo", 
                "g_ascii_strtoll", 
                "g_log", 
                "epan_dissect_run_with_taps", 
                "get_data_source_name", 
                "g_source_remove", 
                "stats_tree_free", 
                "g_match_info_free", 
                "g_string_sized_new", 
                "prime_epan_dissect_with_postdissector_wanted_hfids", 
                "p_get_proto_data", 
                "ws_add_crash_info", 
                "wmem_free", 
                "_ITM_registerTMCloneTable", 
                "g_list_free_full", 
                "_setjmp", 
                "g_hash_table_lookup", 
                "puts", 
                "except_setup_try", 
                "g_child_watch_add", 
                "stats_tree_get_cfg_list", 
                "get_follow_port_to_display", 
                "g_regex_unref", 
                "g_path_get_basename", 
                "scan_plugins", 
                "g_match_info_matches", 
                "g_hash_table_size", 
                "proto_get_first_protocol_field", 
                "zlibVersion", 
                "g_strerror", 
                "g_slist_prepend", 
                "select", 
                "wtap_snapshot_length", 
                "col_format_desc", 
                "nstime_cmp", 
                "rename", 
                "free_rtd_table", 
                "draw_tap_listeners", 
                "exit", 
                "get_rtd_tap_listener_name", 
                "epan_load_settings", 
                "write", 
                "__vfprintf_chk", 
                "strlen", 
                "wmem_list_frame_next", 
                "dfilter_free", 
                "epan_dissect_new", 
                "memset", 
                "prefs_get_title", 
                "plugins_cleanup", 
                "cmdarg_err_init", 
                "socket", 
                "memcmp", 
                "frame_data_set_after_dissect", 
                "ws_hexstrtou32", 
                "register_all_protocol_handoffs", 
                "get_hostlist_packet_func", 
                "get_copyright_info", 
                "g_list_last", 
                "proto_get_first_protocol", 
                "g_str_equal", 
                "prefs_find_module", 
                "prefs_get_enumvals", 
                "prefs_get_uint_base", 
                "wtap_phdr", 
                "epan_get_runtime_version_info", 
                "get_follow_tap_string", 
                "strcmp", 
                "g_ascii_strncasecmp", 
                "color_filters_used", 
                "g_ptr_array_add", 
                "register_all_codecs", 
                "val_to_str_ext_wmem", 
                "__printf_chk", 
                "g_direct_hash", 
                "fputc", 
                "get_srt_proto_id", 
                "init_report_message", 
                "g_ascii_strtoull", 
                "g_dir_read_name", 
                "epan_free", 
                "dfilter_apply_edt", 
                "g_free", 
                "wtap_strerror", 
                "tvb_captured_length", 
                "host_name_lookup_process", 
                "wtap_block_get_string_option_value", 
                "new_stat_tap_iterate_tables", 
                "g_list_free", 
                "timestamp_set_seconds_type", 
                "g_ptr_array_new", 
                "g_regex_replace", 
                "val_to_str_const", 
                "g_ascii_strcasecmp", 
                "g_slist_foreach", 
                "get_rtd_packet_func", 
                "get_hostlist_filter", 
                "g_base64_encode_step", 
                "follow_info_free", 
                "get_cpu_info", 
                "g_list_first", 
                "proto_get_next_protocol_field", 
                "prefs_apply_all", 
                "proto_get_next_protocol", 
                "g_slist_length", 
                "g_malloc0", 
                "nstime_set_zero", 
                "g_strcmp0", 
                "g_realloc", 
                "srt_table_dissector_init", 
                "g_strjoinv", 
                "fvalue_to_string_repr", 
                "find_protocol_by_id", 
                "_IO_putc", 
                "prefs_modules_foreach", 
                "wmem_list_frame_data", 
                "find_and_mark_frame_depended_upon", 
                "g_hash_table_new_full", 
                "conversation_table_iterate_tables", 
                "codec_get_channels", 
                "g_vsnprintf", 
                "g_list_length", 
                "codec_decode", 
                "fwrite", 
                "proto_get_protocol_long_name", 
                "new_stat_tap_get_field_data", 
                "g_string_append", 
                "frame_data_set_before_dissect", 
                "rtd_table_iterate_tables", 
                "g_hash_table_destroy", 
                "wtap_buf_ptr", 
                "ws_strtou32", 
                "wtap_file_size", 
                "stats_tree_new", 
                "signal", 
                "get_data_source_tvb", 
                "g_regex_new", 
                "g_array_new", 
                "new_stat_tap_by_name", 
                "reset_conversation_table_data", 
                "ungetc", 
                "g_list_find", 
                "g_strconcat", 
                "file_exists", 
                "proto_get_protocol_short_name", 
                "cmdarg_err", 
                "get_follow_by_name", 
                "g_strv_length", 
                "putchar", 
                "get_extcap_dir", 
                "wsjsmn_parse", 
                "g_assertion_message_expr", 
                "have_custom_cols", 
                "address_to_display", 
                "get_cur_groupname", 
                "create_tempfile", 
                "wmem_strdup", 
                "__fdelt_chk", 
                "g_string_append_printf", 
                "codec_get_frequency", 
                "uat_fld_tostr", 
                "dup2", 
                "register_all_protocols", 
                "except_free", 
                "prefs_get_type", 
                "started_with_special_privs", 
                "g_string_new", 
                "g_base64_encode_close", 
                "prefs_pref_foreach", 
                "strncmp", 
                "ws_codec_resampler_set_rate", 
                "wtap_file_type_subtype_short_string", 
                "try_val_to_str", 
                "col_fill_in_error", 
                "wmem_list_head", 
                "rtd_table_dissector_init", 
                "dfilter_deprecated_tokens", 
                "get_conversation_packet_func", 
                "g_hash_table_get_values", 
                "proto_get_id_by_filter_name", 
                "get_follow_conv_func", 
                "g_string_chunk_new", 
                "g_regex_match", 
                "address_to_name", 
                "mkfifo", 
                "g_list_remove_link", 
                "ftype_name", 
                "g_dir_open", 
                "__errno_location", 
                "_IO_getc", 
                "tvb_new", 
                "g_match_info_next", 
                "stats_tree_get_cfg_by_abbr", 
                "proto_get_protocol_filter_name", 
                "prefs_get_uat_value", 
                "col_cleanup", 
                "g_string_chunk_insert_const", 
                "proto_is_protocol_enabled", 
                "get_conversation_address", 
                "range_convert_range", 
                "_ITM_deregisterTMCloneTable", 
                "epan_dissect_reset", 
                "stats_tree_packet", 
                "get_os_version_info", 
                "wtap_sequential_close", 
                "geoip_db_lookup_ipv6", 
                "get_rtd_value_string", 
                "prefs_get_enum_value", 
                "get_srt_table_by_name", 
                "wtap_set_cb_new_ipv6", 
                "nstime_to_msec", 
                "prefs_get_range_value_real", 
                "dfilter_compile", 
                "g_ascii_strdown", 
                "stats_tree_reset", 
                "close", 
                "srt_table_get_filter", 
                "prefs_get_name", 
                "ws_codec_resampler_process_int", 
                "fclose", 
                "get_eo_tap_listener_name", 
                "epan_dissect_cleanup", 
                "get_persconffile_path", 
                "epan_dissect_prime_with_dfilter", 
                "accept", 
                "file_open_error_message", 
                "epan_dissect_fill_in_columns", 
                "g_array_insert_vals", 
                "timestamp_set_type", 
                "frame_data_sequence_add", 
                "init_process_policies", 
                "wtap_cleanup", 
                "wmem_epan_scope", 
                "get_cur_username", 
                "codec_init", 
                "proto_item_fill_label", 
                "g_ptr_array_remove_index", 
                "memchr", 
                "register_tap_listener", 
                "g_dir_close", 
                "geoip_db_lookup_ipv4", 
                "g_strsplit", 
                "g_hash_table_new", 
                "union_of_tap_listener_flags", 
                "g_list_append", 
                "reset_tap_listeners", 
                "g_strstr_len", 
                "g_slist_nth_data", 
                "have_filtering_tap_listeners", 
                "prefs_get_bool_value", 
                "epan_register_plugin_types", 
                "g_spawn_close_pid", 
                "__stack_chk_fail", 
                "__isoc99_sscanf", 
                "g_hash_table_remove_all", 
                "g_string_chunk_free", 
                "g_hash_table_get_keys", 
                "get_rtd_proto_id", 
                "g_list_delete_link", 
                "wmem_file_scope", 
                "nstime_to_sec", 
                "get_datafile_path", 
                "free_srt_table", 
                "wmem_memdup", 
                "proto_is_frame_protocol", 
                "frame_data_init", 
                "frame_data_sequence_find", 
                "epan_dissect_free", 
                "follow_iterate_followers", 
                "wtap_read", 
                "epan_init", 
                "g_regex_match_simple", 
                "get_follow_proto_id", 
                "new_frame_data_sequence", 
                "add_ipv6_name", 
                "prefs_register_string_preference", 
                "eo_iterate_tables", 
                "memcpy", 
                "g_list_foreach", 
                "tvb_get_ptr", 
                "relinquish_special_privs_perm", 
                "prefs_set_pref", 
                "epan_dissect_init", 
                "g_string_free", 
                "g_file_test", 
                "fopen", 
                "ws_buffer_init", 
                "ws_codec_resampler_init", 
                "__gmon_start__", 
                "except_rethrow", 
                "running_with_special_privs", 
                "g_strfreev", 
                "g_match_info_fetch", 
                "get_eo_by_name", 
                "try_val_to_str_ext", 
                "get_conversation_port", 
                "g_ptr_array_free", 
                "wtap_set_cb_new_ipv4", 
                "geoip_db_type", 
                "g_slist_free_full", 
                "color_filters_init", 
                "add_ipv4_name", 
                "unlink", 
                "codec_release", 
                "register_all_wiretap_modules", 
                "g_strlcpy", 
                "geoip_db_num_dbs", 
                "setlocale", 
                "wtap_phdr_cleanup", 
                "g_ptr_array_sized_new", 
                "ws_codec_resampler_skip_zeros", 
                "g_ptr_array_foreach", 
                "g_malloc"
            ], 
            "rpm": "wireshark-cli-2.4.0-6.fc27.x86_64.rpm"
        }, 
        "usr/lib64/wireshark/plugins/gryphon_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/wireshark/plugins/gryphon.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "set_actual_length", 
                "proto_tree_add_time", 
                "proto_tree_add_bitmask", 
                "tvb_get_ptr", 
                "proto_tree_add_item", 
                "tcp_dissect_pdus", 
                "proto_tree_add_bytes_format", 
                "proto_item_add_subtree", 
                "proto_register_subtree_array", 
                "_ITM_registerTMCloneTable", 
                "dissector_add_uint_with_preference", 
                "__stack_chk_fail", 
                "prefs_register_bool_preference", 
                "try_val_to_str", 
                "proto_register_field_array", 
                "col_clear", 
                "tvb_new_subset_length", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "proto_tree_add_uint_format", 
                "proto_register_protocol", 
                "proto_item_set_len", 
                "tvb_reported_length", 
                "tvb_get_guint8", 
                "__cxa_finalize", 
                "proto_tree_add_uint", 
                "proto_tree_add_uint_format_value", 
                "proto_tree_add_string", 
                "proto_tree_add_subtree_format", 
                "tvb_get_ntoh64", 
                "tvb_get_stringz_enc", 
                "prefs_register_protocol", 
                "tvb_get_ntohs", 
                "create_dissector_handle", 
                "col_set_str", 
                "tvb_get_ntohl", 
                "proto_tree_add_subtree", 
                "tvb_reported_length_remaining", 
                "val_to_str_const", 
                "wmem_packet_scope"
            ], 
            "rpm": "wireshark-cli-2.4.0-6.fc27.x86_64.rpm"
        }, 
        "usr/bin/tshark": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/tshark", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "fflush", 
                "col_cleanup", 
                "write_psml_columns", 
                "open", 
                "get_average", 
                "_ITM_deregisterTMCloneTable", 
                "nstime_set_zero", 
                "g_ptr_array_add", 
                "wslua_plugins_dump_all", 
                "g_hash_table_new_full", 
                "__memcpy_chk", 
                "pcap_free_datalinks", 
                "dfilter_free", 
                "g_list_length", 
                "pcap_set_snaplen", 
                "print_stream_text_stdio_new", 
                "timestamp_set_precision", 
                "draw_tap_listeners", 
                "output_fields_set_option", 
                "process_stat_cmd_arg", 
                "fvalue_get_uinteger", 
                "print_stream_ps_stdio_new", 
                "get_systemfile_dir", 
                "g_hash_table_insert", 
                "address_to_str_buf", 
                "get_positive_int", 
                "strlen", 
                "g_ascii_strtoll", 
                "proto_initialize_all_prefixes", 
                "select", 
                "strstr", 
                "eo_iterate_tables", 
                "epan_get_runtime_version_info", 
                "wtap_block_get_mandatory_data", 
                "wtap_wtap_encap_to_pcap_encap", 
                "g_regex_unref", 
                "string_to_name_resolve", 
                "wmem_alloc", 
                "g_array_set_size", 
                "proto_enable_proto_by_name", 
                "write_fields_preamble", 
                "epan_dissect_cleanup", 
                "memcmp", 
                "wtap_dump_close", 
                "dissector_dump_heur_decodes", 
                "g_hash_table_destroy", 
                "free_srt_table", 
                "wtap_file_encap", 
                "pcap_datalink_name_to_val", 
                "funnel_set_funnel_ops", 
                "get_follow_proto_id", 
                "fopen", 
                "proto_get_id_by_filter_name", 
                "stats_tree_format_as_str", 
                "pcap_datalink", 
                "g_free", 
                "ws_inet_pton4", 
                "running_with_special_privs", 
                "get_addrinfo_list", 
                "g_ptr_array_new", 
                "wtap_open_offline", 
                "frame_data_sequence_add", 
                "hostlist_table_set_gui_info", 
                "strtol", 
                "ws_add_crash_info", 
                "get_follow_tap_string", 
                "remove_tap_listener", 
                "wmem_free", 
                "ws_buffer_free", 
                "open_info_name_to_type", 
                "get_eo_tap_listener_name", 
                "p_get_proto_data", 
                "g_hash_table_get_values", 
                "pcap_lib_version", 
                "plugins_cleanup", 
                "add_ipv4_name", 
                "proto_registrar_dump_values", 
                "register_tap_listener", 
                "g_child_watch_add", 
                "tvb_get_guint8", 
                "register_all_plugin_tap_listeners", 
                "nstime_to_msec", 
                "g_spawn_async_with_pipes", 
                "rtd_table_iterate_tables", 
                "prefs_register_string_preference", 
                "free_rtd_table", 
                "get_column_visible", 
                "pcap_statustostr", 
                "g_list_last", 
                "g_snprintf", 
                "dissector_all_tables_foreach_table", 
                "g_hash_table_unref", 
                "frame_data_sequence_find", 
                "proto_get_protocol_name", 
                "epan_dissect_run", 
                "g_strstr_len", 
                "dup2", 
                "ws_strtou32", 
                "g_array_append_vals", 
                "get_conversation_packet_func", 
                "g_string_chunk_insert_const", 
                "pcap_datalink_val_to_name", 
                "write_json_preamble", 
                "__isoc99_sscanf", 
                "rtd_table_get_filter", 
                "cmdarg_err", 
                "__fprintf_chk", 
                "g_match_info_fetch", 
                "add_ipv6_name", 
                "get_ipv6_hash_table", 
                "pipe", 
                "g_regex_new", 
                "proto_construct_match_selected_string", 
                "g_hash_table_foreach", 
                "start_requested_stats", 
                "g_match_info_free", 
                "oid_get_default_mib_path", 
                "strrchr", 
                "strtoul", 
                "pcap_open_dead", 
                "g_slist_sort", 
                "stats_tree_reset", 
                "get_rtd_value_string", 
                "g_list_find_custom", 
                "fvalue_get", 
                "get_conversation_proto_id", 
                "col_get_writable", 
                "cmdarg_err_cont", 
                "g_str_equal", 
                "g_direct_hash", 
                "g_realloc", 
                "rtd_table_dissector_init", 
                "output_fields_add", 
                "wtap_dump_open", 
                "pcap_set_tstamp_precision", 
                "dissector_change_string", 
                "get_srt_proto_id", 
                "wtap_set_cb_new_ipv6", 
                "get_dissector_table_selector_type", 
                "epan_dissect_prime_with_dfilter", 
                "get_srt_tap_listener_name", 
                "g_spawn_close_pid", 
                "get_rtd_packet_func", 
                "write_psml_finale", 
                "timestamp_set_type", 
                "getuid", 
                "get_export_pdu_tap_list", 
                "nstime_set_unset", 
                "ioctl", 
                "proto_get_protocol_short_name", 
                "rename", 
                "g_slist_foreach", 
                "ex_opt_get_next", 
                "report_failure", 
                "g_list_free_full", 
                "dissector_table_foreach_handle", 
                "pcap_set_buffer_size", 
                "g_direct_equal", 
                "dissector_dump_dissector_tables", 
                "wtap_dump_can_open", 
                "nstime_to_sec", 
                "follow_iterate_followers", 
                "g_dir_open", 
                "g_int_hash", 
                "g_array_remove_index", 
                "report_warning", 
                "wtap_init", 
                "g_strchug", 
                "fvalue_get_sinteger64", 
                "read", 
                "write_pdml_preamble", 
                "fclose", 
                "g_strdup", 
                "g_string_append_printf", 
                "g_string_chunk_new", 
                "unlink", 
                "eo_ct2ext", 
                "g_match_info_matches", 
                "write", 
                "get_eo_packet_func", 
                "g_list_append", 
                "except_setup_try", 
                "gmtime", 
                "__xstat", 
                "get_follow_index_func", 
                "have_filtering_tap_listeners", 
                "sysinfo", 
                "fvalue_get_sinteger", 
                "geoip_db_get_paths", 
                "pcap_set_datalink", 
                "register_all_protocol_handoffs", 
                "epan_dissect_reset", 
                "g_string_prepend", 
                "prefs_find_module", 
                "wtap_block_array_free", 
                "wtap_phdr", 
                "fputs", 
                "epan_cleanup", 
                "wtap_dump", 
                "get_hostlist_packet_func", 
                "nstime_is_unset", 
                "relinquish_special_privs_perm", 
                "g_get_tmp_dir", 
                "epan_dissect_new", 
                "wtap_dump_fdopen_ng", 
                "g_list_foreach", 
                "epan_dissect_fill_in_columns", 
                "nstime_sum", 
                "ex_opt_get_nth", 
                "g_slist_nth_data", 
                "g_string_new", 
                "g_strlcat", 
                "column_dump_column_formats", 
                "g_get_current_time", 
                "get_datafile_dir", 
                "fmod", 
                "epan_register_plugin_types", 
                "free_frame_data_sequence", 
                "write_ek_proto_tree", 
                "localtime", 
                "memchr", 
                "get_extcap_dir", 
                "write_prefs", 
                "wtap_dump_open_stdout", 
                "pcap_set_rfmon", 
                "getgid", 
                "time_stat_update", 
                "output_fields_has_cols", 
                "epan_dissect_run_with_taps", 
                "pcap_findalldevs", 
                "frame_data_set_before_dissect", 
                "time_stat_init", 
                "in_cksum", 
                "_ITM_registerTMCloneTable", 
                "g_strcmp0", 
                "get_rtd_tap_listener_name", 
                "g_dir_close", 
                "g_strv_length", 
                "g_int_equal", 
                "getenv", 
                "g_list_free", 
                "__fdelt_chk", 
                "tvb_new", 
                "print_preamble", 
                "tap_listeners_require_dissection", 
                "srt_table_dissector_init", 
                "wmem_map_foreach", 
                "stats_tree_get_cfg_by_abbr", 
                "fvalue_get_uinteger64", 
                "get_cur_groupname", 
                "except_free", 
                "g_log_default_handler", 
                "wtap_file_get_idb_info", 
                "register_stat_tap_ui", 
                "wmem_memdup", 
                "pcap_create", 
                "g_log", 
                "get_eo_by_name", 
                "profile_exists", 
                "follow_info_free", 
                "proto_registrar_get_byname", 
                "EBCDIC_to_ASCII", 
                "get_rtd_proto_id", 
                "file_open_error_message", 
                "__libc_start_main", 
                "follow_get_stat_tap_string", 
                "get_cpu_info", 
                "pcap_set_promisc", 
                "getopt_long", 
                "g_strchomp", 
                "prime_epan_dissect_with_postdissector_wanted_hfids", 
                "wtap_snapshot_length", 
                "file_exists", 
                "g_slist_append", 
                "get_natural_int", 
                "scan_plugins", 
                "wtap_dump_open_ng", 
                "print_line", 
                "memcpy", 
                "fvalue_get_floating", 
                "g_regex_match_simple", 
                "g_strjoinv", 
                "find_and_mark_frame_depended_upon", 
                "val_to_str_wmem", 
                "sqrt", 
                "register_all_wiretap_modules", 
                "val_to_str_ext_wmem", 
                "wtap_block_add_uint8_option", 
                "host_name_lookup_process", 
                "proto_registrar_dump_ftypes", 
                "g_string_chunk_free", 
                "g_list_nth_data", 
                "pcap_get_tstamp_precision", 
                "output_fields_num_fields", 
                "write_json_proto_tree", 
                "write_fields_proto_tree", 
                "epan_load_settings", 
                "except_pop", 
                "ex_opt_add", 
                "stats_tree_packet", 
                "g_strdup_printf", 
                "prefs_find_preference", 
                "wmem_file_scope", 
                "setlocale", 
                "ferror", 
                "_setjmp", 
                "__cxa_finalize", 
                "prefs_apply_all", 
                "rtd_table_get_tap_string", 
                "srt_table_get_filter", 
                "_exit", 
                "find_dissector_table", 
                "nstime_delta", 
                "g_strsplit", 
                "pcap_freealldevs", 
                "stats_tree_is_default_sort_DESC", 
                "wtap_phdr_init", 
                "col_custom_prime_edt", 
                "g_build_filename", 
                "fputc", 
                "g_slist_reverse", 
                "init_progfile_dir", 
                "new_stat_tap_iterate_tables", 
                "fvalue_to_string_repr", 
                "g_try_malloc", 
                "destroy_print_stream", 
                "set_profile_name", 
                "wtap_block_add_string_option", 
                "wmem_strconcat", 
                "socket", 
                "new_stat_tap_get_field_data", 
                "g_log_set_handler", 
                "pcap_can_set_rfmon", 
                "wtap_cleareof", 
                "g_hash_table_new", 
                "postseq_cleanup_all_protocols", 
                "add_hosts_file", 
                "g_malloc0", 
                "g_string_free", 
                "g_strerror", 
                "init_process_policies", 
                "wtap_cleanup", 
                "_IO_putc", 
                "wtap_close", 
                "g_mkdir_with_parents", 
                "write_fields_finale", 
                "strcmp", 
                "epan_get_compiled_version_info", 
                "new_stat_tap_get_filter", 
                "get_follow_address_func", 
                "timestamp_set_seconds_type", 
                "epan_dissect_free", 
                "g_list_delete_link", 
                "g_strconcat", 
                "kill", 
                "wtap_buf_ptr", 
                "g_hash_table_ref", 
                "wtap_block_add_string_option_format", 
                "get_conversation_port", 
                "g_list_find", 
                "col_append_fstr", 
                "g_hash_table_size", 
                "wtap_block_create", 
                "ws_buffer_init", 
                "g_match_info_next", 
                "fwrite", 
                "g_slist_insert_sorted", 
                "print_finale", 
                "puts", 
                "write_psml_preamble", 
                "started_with_special_privs", 
                "build_column_format_array", 
                "close", 
                "dfilter_compile", 
                "init_report_message", 
                "wtap_read", 
                "fork", 
                "g_assertion_message_expr", 
                "wtap_block_get_string_option_value", 
                "wmem_strsplit", 
                "postdissectors_want_hfids", 
                "strtok", 
                "g_array_sized_new", 
                "pcap_activate", 
                "__stack_chk_fail", 
                "epan_get_user_comment", 
                "g_list_remove_link", 
                "wtap_file_get_shb_for_new_file", 
                "get_progfile_dir", 
                "wtap_short_string_to_file_type_subtype", 
                "g_strtod", 
                "g_path_get_basename", 
                "g_string_append", 
                "plugins_dump_all", 
                "g_ptr_array_free", 
                "wtap_get_num_file_types_subtypes", 
                "wtap_file_type_subtype_short_string", 
                "get_conversation_address", 
                "g_list_first", 
                "try_val_to_str_ext", 
                "pcap_set_timeout", 
                "strchr", 
                "frame_data_destroy", 
                "pcap_open_live", 
                "get_plugin_dir", 
                "wtap_dump_set_addrinfo_list", 
                "g_spawn_sync", 
                "fileno", 
                "wtap_seek_read", 
                "srt_table_get_tap_string", 
                "g_source_remove", 
                "proto_disable_proto_by_name", 
                "create_tempfile", 
                "g_strlcpy", 
                "waitpid", 
                "list_stat_cmd_args", 
                "address_to_str", 
                "get_cur_username", 
                "write_pdml_proto_tree", 
                "stats_tree_presentation", 
                "g_ptr_array_foreach", 
                "timestamp_get_type", 
                "get_copyright_info", 
                "g_regex_replace", 
                "epan_new", 
                "print_hex_data", 
                "g_list_prepend", 
                "create_persconffile_dir", 
                "proto_get_protocol_filter_name", 
                "sigemptyset", 
                "stats_tree_get_default_sort_col", 
                "free_progdirs", 
                "ws_inet_pton6", 
                "dissector_dump_decodes", 
                "read_keytab_file", 
                "write_json_finale", 
                "proto_tree_print", 
                "putchar", 
                "get_eo_proto_id", 
                "output_fields_new", 
                "tvb_ws_mempbrk_pattern_guint8", 
                "pcap_geterr", 
                "g_ascii_strcasecmp", 
                "tvb_memcpy", 
                "stats_tree_get_abbr", 
                "get_ipv4_hash_table", 
                "proto_enable_heuristic_by_name", 
                "g_str_hash", 
                "proto_registrar_dump_fieldcount", 
                "g_regex_match_full", 
                "proto_get_finfo_ptr_array", 
                "g_ptr_array_sized_new", 
                "prefs_is_capture_device_hidden", 
                "wtap_phdr_cleanup", 
                "zlibVersion", 
                "proto_registrar_dump_protocols", 
                "wtap_file_type_subtype_string", 
                "g_malloc_n", 
                "frame_data_init", 
                "proto_registrar_dump_fields", 
                "epan_free", 
                "__fxstat", 
                "__errno_location", 
                "ungetc", 
                "get_host_ipaddr", 
                "dissector_handle_get_protocol_index", 
                "get_persconffile_path", 
                "get_nonzero_guint32", 
                "strncmp", 
                "prefs_set_pref", 
                "g_ascii_strtoull", 
                "mkfifo", 
                "g_strrstr", 
                "wtap_strerror", 
                "get_os_version_info", 
                "output_fields_valid", 
                "output_fields_free", 
                "have_custom_cols", 
                "pcap_close", 
                "epan_init", 
                "g_slist_prepend", 
                "g_file_test", 
                "g_hash_table_lookup_extended", 
                "g_hash_table_remove_all", 
                "g_slist_free", 
                "union_of_tap_listener_flags", 
                "wmem_epan_scope", 
                "srt_table_iterate_tables", 
                "new_frame_data_sequence", 
                "pcap_list_datalinks", 
                "except_rethrow", 
                "g_array_free", 
                "frame_data_set_after_dissect", 
                "g_hash_table_lookup", 
                "get_datafile_path", 
                "get_plugins_pers_dir", 
                "wmem_strdup_printf", 
                "cmdarg_err_init", 
                "g_ptr_array_remove_index", 
                "ex_opt_count", 
                "wmem_strdup", 
                "fvalue_type_ftenum", 
                "get_follow_tap_handler", 
                "g_array_insert_vals", 
                "write_pdml_finale", 
                "disable_name_resolution", 
                "wtap_sequential_close", 
                "pcap_datalink_val_to_description", 
                "address_to_display", 
                "__vfprintf_chk", 
                "wtap_file_get_nrb_for_new_file", 
                "pcap_compile", 
                "g_regex_match", 
                "g_hash_table_get_keys", 
                "dissector_change_uint", 
                "exit", 
                "__printf_chk", 
                "output_fields_list_options", 
                "g_ascii_strncasecmp", 
                "register_all_protocols", 
                "ftype_name", 
                "_IO_getc", 
                "nstime_cmp", 
                "g_array_new", 
                "find_protocol_by_id", 
                "wtap_file_type_subtype", 
                "wtap_set_cb_new_ipv4", 
                "g_malloc", 
                "conversation_table_set_gui_info", 
                "g_strndup", 
                "get_host_ipaddr6", 
                "sigaction", 
                "g_dir_read_name", 
                "memset", 
                "isatty", 
                "g_strfreev", 
                "g_string_printf", 
                "rpc_prog_name", 
                "wtap_dump_open_stdout_ng", 
                "g_hash_table_foreach_remove", 
                "stats_tree_new", 
                "epan_dissect_init", 
                "execv", 
                "g_ascii_strdown", 
                "__gmon_start__", 
                "get_srt_packet_func", 
                "dfilter_apply_edt", 
                "proto_registrar_get_ftype"
            ], 
            "rpm": "wireshark-cli-2.4.0-6.fc27.x86_64.rpm"
        }, 
        "usr/lib64/wireshark/plugins/m2m_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/wireshark/plugins/m2m.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "proto_tree_add_protocol_format", 
                "tvb_new_subset_length", 
                "create_dissector_handle", 
                "tvb_get_ntohs", 
                "proto_item_add_subtree", 
                "dissector_add_uint", 
                "tvb_reported_length", 
                "addresses_reassembly_table_functions", 
                "__gmon_start__", 
                "col_append_str", 
                "add_new_data_source", 
                "__stack_chk_fail", 
                "proto_tree_add_item", 
                "fragment_add_seq", 
                "col_clear", 
                "proto_item_append_text", 
                "expert_register_field_array", 
                "proto_register_subtree_array", 
                "tvb_new_chain", 
                "col_append_sep_fstr", 
                "tvb_get_ntoh24", 
                "find_dissector", 
                "reassembly_table_register", 
                "col_append_sep_str", 
                "tvb_captured_length", 
                "__cxa_finalize", 
                "proto_register_protocol", 
                "_ITM_deregisterTMCloneTable", 
                "val_to_str", 
                "tvb_get_guint8", 
                "tvb_get_ntohl", 
                "proto_register_field_array", 
                "call_dissector", 
                "expert_register_protocol", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "wireshark-cli-2.4.0-6.fc27.x86_64.rpm"
        }, 
        "usr/lib64/wireshark/extcap/udpdump": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/wireshark/extcap/udpdump", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "signal", 
                "strerror", 
                "fflush", 
                "memcpy", 
                "g_malloc0", 
                "fclose", 
                "__libc_start_main", 
                "g_log", 
                "g_list_append", 
                "getopt_long", 
                "g_list_free", 
                "fwrite", 
                "setsockopt", 
                "g_assertion_message_expr", 
                "inet_addr", 
                "putchar", 
                "bind", 
                "puts", 
                "g_list_length", 
                "data_file_url", 
                "g_strerror", 
                "close", 
                "g_strdup_printf", 
                "g_strdup", 
                "time", 
                "__errno_location", 
                "__gmon_start__", 
                "g_list_foreach", 
                "memset", 
                "g_free", 
                "__printf_chk", 
                "g_strcmp0", 
                "strlen", 
                "setenv", 
                "ferror", 
                "g_path_get_basename", 
                "g_list_find_custom", 
                "socket", 
                "gettimeofday", 
                "fopen", 
                "ws_strtou16", 
                "_ITM_deregisterTMCloneTable", 
                "g_malloc", 
                "__stack_chk_fail", 
                "recvfrom"
            ], 
            "rpm": "wireshark-cli-2.4.0-6.fc27.x86_64.rpm"
        }, 
        "usr/bin/capinfos": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/capinfos", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "get_copyright_info", 
                "fwrite", 
                "localeconv", 
                "plugins_cleanup", 
                "strchr", 
                "format_size", 
                "nstime_delta", 
                "gcry_md_ctl", 
                "__cxa_finalize", 
                "wtap_get_debug_if_descr", 
                "__printf_chk", 
                "g_array_sized_new", 
                "gcry_md_reset", 
                "wtap_open_offline", 
                "puts", 
                "nstime_cmp", 
                "wtap_read", 
                "init_progfile_dir", 
                "putchar", 
                "__vfprintf_chk", 
                "get_cpu_info", 
                "wtap_file_tsprec", 
                "__fprintf_chk", 
                "g_array_append_vals", 
                "g_string_new", 
                "init_report_message", 
                "fclose", 
                "g_malloc", 
                "gcry_md_enable", 
                "_ITM_deregisterTMCloneTable", 
                "nstime_to_sec", 
                "wtap_snapshot_length", 
                "wtap_file_size", 
                "g_string_append", 
                "g_string_append_printf", 
                "wtap_encap_string", 
                "register_all_wiretap_modules", 
                "setlocale", 
                "__libc_start_main", 
                "gcry_md_write", 
                "g_strdup_printf", 
                "wtap_tsprec_string", 
                "g_strfreev", 
                "file_open_error_message", 
                "_ITM_registerTMCloneTable", 
                "wtap_file_type_subtype_string", 
                "sysinfo", 
                "wtap_file_get_idb_info", 
                "wtap_close", 
                "wtap_file_encap", 
                "__gmon_start__", 
                "nstime_set_zero", 
                "gcry_check_version", 
                "g_strdup", 
                "wtap_cleanup", 
                "zlibVersion", 
                "gcry_md_open", 
                "scan_plugins", 
                "get_os_version_info", 
                "fopen", 
                "getopt_long", 
                "wtap_file_type_subtype_short_string", 
                "localtime", 
                "cmdarg_err_init", 
                "wtap_strerror", 
                "g_snprintf", 
                "free_progdirs", 
                "g_array_free", 
                "g_string_free", 
                "wtap_block_get_nth_string_option_value", 
                "wtap_file_get_shb", 
                "cmdarg_err", 
                "g_malloc0_n", 
                "wtap_block_get_string_option_value", 
                "g_strlcpy", 
                "g_strerror", 
                "g_free", 
                "g_strjoinv", 
                "wtap_iscompressed", 
                "wtap_file_type_subtype", 
                "ws_add_crash_info", 
                "wtap_init", 
                "g_array_set_size", 
                "gcry_md_read", 
                "init_process_policies", 
                "g_strsplit", 
                "_IO_putc", 
                "fputc", 
                "wtap_phdr", 
                "fread", 
                "__stack_chk_fail"
            ], 
            "rpm": "wireshark-cli-2.4.0-6.fc27.x86_64.rpm"
        }, 
        "usr/lib64/libwscodecs_so_0_0_0": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/libwscodecs.so.0.0.0", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "g_str_equal", 
                "g_hash_table_lookup_extended", 
                "__gmon_start__", 
                "g_hash_table_remove", 
                "__cxa_finalize", 
                "g_slist_foreach", 
                "g_slist_append", 
                "g_hash_table_new", 
                "__stack_chk_fail", 
                "_ITM_deregisterTMCloneTable", 
                "g_malloc", 
                "g_hash_table_lookup", 
                "add_plugin_type", 
                "g_malloc0", 
                "_ITM_registerTMCloneTable", 
                "g_module_symbol", 
                "sin", 
                "g_str_hash", 
                "g_free", 
                "g_realloc"
            ], 
            "rpm": "wireshark-cli-2.4.0-6.fc27.x86_64.rpm"
        }, 
        "usr/lib64/wireshark/extcap/sshdump": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/wireshark/extcap/sshdump", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "ssh_get_error", 
                "data_file_url", 
                "fclose", 
                "ws_strtou16", 
                "ssh_new", 
                "__stack_chk_fail", 
                "g_log", 
                "g_strdup_printf", 
                "__cxa_finalize", 
                "g_slist_free_full", 
                "ssh_userauth_publickey_auto", 
                "g_list_find_custom", 
                "g_list_length", 
                "ssh_channel_close", 
                "g_free", 
                "__gmon_start__", 
                "ssh_free", 
                "g_assertion_message_expr", 
                "g_strerror", 
                "fopen", 
                "ssh_key_new", 
                "ssh_disconnect", 
                "_ITM_registerTMCloneTable", 
                "ssh_channel_is_open", 
                "g_strcmp0", 
                "__printf_chk", 
                "g_string_append_printf", 
                "ssh_channel_read", 
                "memset", 
                "g_strdup", 
                "ssh_channel_new", 
                "ssh_channel_is_eof", 
                "__libc_start_main", 
                "__errno_location", 
                "ssh_connect", 
                "ssh_channel_open_session", 
                "getopt_long", 
                "g_string_new", 
                "putchar", 
                "ssh_pki_import_privkey_file", 
                "ssh_key_free", 
                "ssh_options_set", 
                "g_path_get_basename", 
                "ssh_channel_request_exec", 
                "ws_strtou32", 
                "ssh_userauth_publickey", 
                "g_get_user_name", 
                "setenv", 
                "_ITM_deregisterTMCloneTable", 
                "ssh_options_get_port", 
                "ssh_userauth_password", 
                "ssh_channel_write", 
                "g_list_foreach", 
                "local_interfaces_to_list", 
                "g_list_free", 
                "g_list_append", 
                "g_shell_quote", 
                "fwrite", 
                "ssh_channel_send_eof", 
                "strlen", 
                "g_string_free", 
                "ssh_channel_free", 
                "puts", 
                "g_strdup_vprintf"
            ], 
            "rpm": "wireshark-cli-2.4.0-6.fc27.x86_64.rpm"
        }, 
        "usr/lib64/wireshark/plugins/mate_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/wireshark/plugins/mate.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "report_read_failure", 
                "g_ascii_strtod", 
                "except_throw", 
                "g_str_hash", 
                "prefs_register_filename_preference", 
                "calloc", 
                "proto_registrar_get_nth", 
                "g_string_append_printf", 
                "wmem_free", 
                "g_snprintf", 
                "exit", 
                "getuid", 
                "malloc", 
                "except_setup_try", 
                "fvalue_to_string_repr", 
                "g_ptr_array_foreach", 
                "proto_tree_add_float_format", 
                "proto_tree_add_uint_format", 
                "g_free", 
                "_ITM_deregisterTMCloneTable", 
                "proto_tree_add_expert_format", 
                "except_pop", 
                "g_str_equal", 
                "strcmp", 
                "report_open_failure", 
                "set_postdissector_wanted_hfids", 
                "proto_registrar_get_byname", 
                "g_strerror", 
                "free", 
                "report_failure", 
                "__cxa_finalize", 
                "fopen", 
                "proto_tree_add_subtree_format", 
                "g_hash_table_new", 
                "g_log", 
                "g_ptr_array_add", 
                "expert_register_field_array", 
                "g_strsplit", 
                "proto_register_field_array", 
                "fputs", 
                "strlen", 
                "strtol", 
                "_setjmp", 
                "g_slice_alloc", 
                "g_array_new", 
                "ferror", 
                "g_direct_hash", 
                "g_direct_equal", 
                "g_strdup", 
                "except_free", 
                "clearerr", 
                "fclose", 
                "register_postdissector", 
                "proto_get_finfo_ptr_array", 
                "g_strdup_vprintf", 
                "g_string_erase", 
                "g_malloc", 
                "tvb_captured_length", 
                "g_hash_table_foreach", 
                "g_hash_table_destroy", 
                "g_strfreev", 
                "fwrite", 
                "expert_register_protocol", 
                "get_datafile_dir", 
                "g_int_hash", 
                "g_ptr_array_remove_index_fast", 
                "g_string_insert_c", 
                "fgetc", 
                "g_ptr_array_remove_index", 
                "_IO_getc", 
                "__stack_chk_fail", 
                "register_dissector", 
                "g_array_append_vals", 
                "g_hash_table_lookup_extended", 
                "_ITM_registerTMCloneTable", 
                "realloc", 
                "except_rethrow", 
                "fread", 
                "__fprintf_chk", 
                "g_ptr_array_free", 
                "proto_item_append_text", 
                "g_hash_table_foreach_remove", 
                "g_string_append", 
                "ungetc", 
                "g_hash_table_insert", 
                "g_hash_table_lookup", 
                "proto_tree_add_protocol_format", 
                "fputc", 
                "proto_register_subtree_array", 
                "proto_register_protocol", 
                "g_strdup_printf", 
                "prefs_register_protocol", 
                "proto_tree_add_float", 
                "g_string_new", 
                "g_slice_free1", 
                "g_ptr_array_new", 
                "proto_item_add_subtree", 
                "strncmp", 
                "register_init_routine", 
                "g_int_equal", 
                "g_vsnprintf", 
                "proto_tracking_interesting_fields", 
                "g_string_free", 
                "proto_tree_add_string", 
                "g_ascii_strdown", 
                "nstime_to_sec", 
                "feof", 
                "__errno_location", 
                "g_strlcpy", 
                "__gmon_start__", 
                "proto_tree_add_uint"
            ], 
            "rpm": "wireshark-cli-2.4.0-6.fc27.x86_64.rpm"
        }, 
        "usr/lib64/wireshark/plugins/irda_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/wireshark/plugins/irda.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "proto_item_append_text", 
                "tvb_captured_length", 
                "dissector_add_uint", 
                "proto_item_set_len", 
                "dissector_add_uint_with_preference", 
                "tvb_reported_length_remaining", 
                "register_dissector", 
                "tvb_get_string_enc", 
                "wmem_file_scope", 
                "address_type_dissector_register", 
                "proto_tree_add_item", 
                "conversation_get_proto_data", 
                "col_append_fstr", 
                "_ITM_registerTMCloneTable", 
                "add_new_data_source", 
                "_ITM_deregisterTMCloneTable", 
                "proto_tree_add_protocol_format", 
                "col_append_str", 
                "expert_register_field_array", 
                "proto_item_add_subtree", 
                "g_strlcat", 
                "wmem_alloc", 
                "expert_register_protocol", 
                "col_add_fstr", 
                "__cxa_finalize", 
                "__stack_chk_fail", 
                "col_clear", 
                "g_assertion_message_expr", 
                "dissect_xdlc_control", 
                "col_add_str", 
                "proto_register_field_array", 
                "crc16_ccitt_tvb", 
                "tvb_find_guint8", 
                "tvb_new_subset_remaining", 
                "tvb_get_guint8", 
                "call_data_dissector", 
                "tvb_memcpy", 
                "tvb_new_child_real_data", 
                "tvb_new_subset_length", 
                "tvb_new_subset_length_caplen", 
                "proto_tree_add_checksum", 
                "proto_register_subtree_array", 
                "tvb_reported_length", 
                "tvb_get_letohl", 
                "tvb_get_ntohl", 
                "proto_register_protocol", 
                "g_snprintf", 
                "val_to_str", 
                "find_conversation", 
                "col_set_str", 
                "strcmp", 
                "conversation_new", 
                "wmem_packet_scope", 
                "tvb_get_ntohs", 
                "strlen", 
                "__gmon_start__", 
                "proto_item_set_end", 
                "call_dissector_with_data", 
                "conversation_add_proto_data", 
                "find_dissector", 
                "call_dissector", 
                "tvb_format_text"
            ], 
            "rpm": "wireshark-cli-2.4.0-6.fc27.x86_64.rpm"
        }, 
        "usr/bin/reordercap": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/reordercap", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "setlocale", 
                "wtap_dump_open_stdout_ng", 
                "__libc_start_main", 
                "wtap_phdr_cleanup", 
                "wtap_seek_read", 
                "exit", 
                "register_all_wiretap_modules", 
                "zlibVersion", 
                "strcmp", 
                "nstime_cmp", 
                "sysinfo", 
                "puts", 
                "file_open_error_message", 
                "scan_plugins", 
                "g_ptr_array_add", 
                "__fprintf_chk", 
                "wtap_strerror", 
                "wtap_block_array_free", 
                "g_strfreev", 
                "get_cpu_info", 
                "g_string_append", 
                "g_ptr_array_free", 
                "wtap_file_type_subtype_short_string", 
                "ws_buffer_free", 
                "g_string_new", 
                "_ITM_deregisterTMCloneTable", 
                "g_slice_alloc", 
                "g_string_append_printf", 
                "wtap_close", 
                "wtap_file_type_subtype", 
                "wtap_file_encap", 
                "wtap_dump_open_ng", 
                "wtap_read", 
                "g_string_free", 
                "_ITM_registerTMCloneTable", 
                "wtap_file_get_shb_for_new_file", 
                "g_strdup_printf", 
                "free_progdirs", 
                "wtap_cleanup", 
                "cmdarg_err", 
                "init_process_policies", 
                "wtap_init", 
                "wtap_file_get_nrb_for_new_file", 
                "init_report_message", 
                "g_slice_free1", 
                "wtap_snapshot_length", 
                "fputc", 
                "strchr", 
                "__stack_chk_fail", 
                "g_strsplit", 
                "__cxa_finalize", 
                "wtap_file_get_idb_info", 
                "getopt_long", 
                "g_ptr_array_sort", 
                "plugins_cleanup", 
                "get_os_version_info", 
                "g_ptr_array_new", 
                "__gmon_start__", 
                "wtap_phdr", 
                "__vfprintf_chk", 
                "g_free", 
                "ws_add_crash_info", 
                "wtap_open_offline", 
                "init_progfile_dir", 
                "__printf_chk", 
                "g_strjoinv", 
                "wtap_dump_close", 
                "get_copyright_info", 
                "ws_buffer_init", 
                "wtap_phdr_init", 
                "g_strdup", 
                "nstime_set_unset"
            ], 
            "rpm": "wireshark-cli-2.4.0-6.fc27.x86_64.rpm"
        }, 
        "usr/bin/randpkt": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/randpkt", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "wtap_dump_open_stdout", 
                "g_rand_int_range", 
                "init_report_message", 
                "get_copyright_info", 
                "g_strfreev", 
                "fputc", 
                "wtap_file_type_subtype_short_string", 
                "get_positive_int", 
                "g_strdup", 
                "__libc_start_main", 
                "get_os_version_info", 
                "__vfprintf_chk", 
                "cmdarg_err_init", 
                "wtap_dump_close", 
                "g_strjoinv", 
                "init_progfile_dir", 
                "__memcpy_chk", 
                "setlocale", 
                "wtap_dump_open", 
                "init_process_policies", 
                "g_malloc0", 
                "__gmon_start__", 
                "file_open_error_message", 
                "wtap_strerror", 
                "_ITM_deregisterTMCloneTable", 
                "g_strsplit", 
                "fwrite", 
                "g_string_append", 
                "__printf_chk", 
                "g_random_int_range", 
                "scan_plugins", 
                "__fprintf_chk", 
                "wtap_cleanup", 
                "g_free", 
                "g_string_append_printf", 
                "strchr", 
                "register_all_wiretap_modules", 
                "g_strcmp0", 
                "g_rand_double", 
                "g_strdup_printf", 
                "g_rand_free", 
                "get_cpu_info", 
                "wtap_dump", 
                "__stack_chk_fail", 
                "_ITM_registerTMCloneTable", 
                "wtap_init", 
                "g_string_new", 
                "g_rand_new", 
                "__cxa_finalize", 
                "getopt_long", 
                "cmdarg_err"
            ], 
            "rpm": "wireshark-cli-2.4.0-6.fc27.x86_64.rpm"
        }, 
        "usr/lib64/wireshark/plugins/wimax_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/wireshark/plugins/wimax.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "tvb_new_chain", 
                "wmem_memdup", 
                "_ITM_registerTMCloneTable", 
                "val_to_str_ext_const", 
                "expert_add_info_format", 
                "prefs_register_protocol", 
                "col_set_str", 
                "proto_tree_add_subtree", 
                "proto_item_append_text", 
                "__stack_chk_fail", 
                "proto_registrar_get_nth", 
                "proto_tree_add_item", 
                "_try_val_to_str_ext_init", 
                "reassembly_table_register", 
                "wmem_packet_scope", 
                "proto_tree_add_bytes_format", 
                "tvb_get_ntoh24", 
                "tvb_get_guint8", 
                "proto_register_field_array", 
                "proto_tree_add_checksum", 
                "prefs_register_uint_preference", 
                "proto_tree_add_bytes_format_value", 
                "expert_add_info", 
                "try_val_to_str_ext", 
                "g_realloc", 
                "register_cleanup_routine", 
                "wmem_strdup_printf", 
                "tvb_captured_length", 
                "proto_tree_add_protocol_format", 
                "dissector_add_uint", 
                "col_append_sep_str", 
                "tvb_get_ntohs", 
                "register_dissector_table", 
                "tvb_get_ntohl", 
                "dissector_try_uint", 
                "proto_tree_add_float_format_value", 
                "tvb_reported_length_remaining", 
                "proto_item_set_end", 
                "register_dissector", 
                "find_dissector", 
                "call_dissector", 
                "memcmp", 
                "__gmon_start__", 
                "proto_tree_add_uint", 
                "proto_item_set_text", 
                "proto_tree_add_subtree_format", 
                "register_init_routine", 
                "expert_register_protocol", 
                "tvb_reported_length", 
                "col_clear", 
                "proto_register_subtree_array", 
                "proto_tree_add_uint_format", 
                "proto_tree_add_uint64", 
                "expert_register_field_array", 
                "proto_item_add_subtree", 
                "add_new_data_source", 
                "tvb_new_subset_remaining", 
                "create_dissector_handle", 
                "proto_tree_add_bits_item", 
                "g_free", 
                "__cxa_finalize", 
                "proto_register_protocol", 
                "proto_tree_add_expert", 
                "addresses_reassembly_table_functions", 
                "prefs_register_obsolete_preference", 
                "tvb_new_subset_length", 
                "proto_tree_get_parent", 
                "val_to_str_const", 
                "proto_tree_add_uint_format_value", 
                "prefs_register_bool_preference", 
                "_ITM_deregisterTMCloneTable", 
                "g_assertion_message_expr"
            ], 
            "rpm": "wireshark-cli-2.4.0-6.fc27.x86_64.rpm"
        }, 
        "usr/lib64/wireshark/plugins/docsis_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/wireshark/plugins/docsis.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "tvb_get_guint8", 
                "expert_add_info", 
                "proto_item_append_text", 
                "proto_tree_add_uint", 
                "col_clear", 
                "proto_item_set_len", 
                "crc16_ccitt_tvb", 
                "proto_register_subtree_array", 
                "dissector_add_uint", 
                "g_assertion_message_expr", 
                "proto_tree_add_uint_format_value", 
                "_ITM_registerTMCloneTable", 
                "proto_tree_add_bitmask_list", 
                "reassembly_table_register", 
                "fragment_add_seq_check", 
                "proto_register_protocol", 
                "g_snprintf", 
                "call_data_dissector", 
                "proto_tree_add_checksum", 
                "expert_add_info_format", 
                "find_dissector_add_dependency", 
                "__stack_chk_fail", 
                "proto_tree_add_protocol_format", 
                "tvb_reported_length_remaining", 
                "proto_item_add_subtree", 
                "_ITM_deregisterTMCloneTable", 
                "proto_tree_add_item_ret_uint", 
                "tvb_reported_length", 
                "expert_register_field_array", 
                "crc32_802_tvb", 
                "proto_register_field_array", 
                "proto_tree_add_bitmask_with_flags", 
                "tvb_captured_length", 
                "register_dissector", 
                "find_dissector", 
                "tvb_new_subset_length_caplen", 
                "__gmon_start__", 
                "tvb_get_ntohs", 
                "_try_val_to_str_ext_init", 
                "val_to_str_ext", 
                "proto_tree_add_bitmask", 
                "create_dissector_handle", 
                "tvb_captured_length_remaining", 
                "proto_register_protocol_in_name_only", 
                "prefs_register_bool_preference", 
                "proto_tree_add_subtree", 
                "prefs_register_protocol", 
                "proto_tree_add_item", 
                "expert_register_protocol", 
                "val_to_str", 
                "col_add_fstr", 
                "dissector_try_uint", 
                "register_dissector_table", 
                "tvb_new_subset_length", 
                "process_reassembled_data", 
                "tvb_get_ptr", 
                "addresses_reassembly_table_functions", 
                "proto_tree_add_subtree_format", 
                "__cxa_finalize", 
                "tvb_new_subset_remaining", 
                "tvb_get_ntohl"
            ], 
            "rpm": "wireshark-cli-2.4.0-6.fc27.x86_64.rpm"
        }, 
        "usr/lib64/libwireshark_so_10_0_0": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/libwireshark.so.10.0.0", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "crc32_ccitt_seed", 
                "adler32", 
                "ares_process", 
                "crc16_8005_noreflect_noxor", 
                "g_string_new", 
                "g_regex_match_full", 
                "gcry_strsource", 
                "gcry_control", 
                "luaL_pushresult", 
                "started_with_special_privs", 
                "g_hash_table_iter_init", 
                "g_ptr_array_sized_new", 
                "wtap_deregister_open_info", 
                "g_malloc", 
                "smiGetNodeType", 
                "g_utf8_strchr", 
                "smiRenderType", 
                "ws_buffer_assure_space", 
                "g_hash_table_find", 
                "krb5_kt_end_seq_get", 
                "g_malloc0_n", 
                "get_os_version_info", 
                "wtap_encap_string", 
                "lua_typename", 
                "bitswap_buf_inplace", 
                "g_checksum_free", 
                "create_persconffile_dir", 
                "rename", 
                "getpid", 
                "lua_pushlightuserdata", 
                "g_strstr_len", 
                "g_list_sort", 
                "file_error", 
                "__fxstat", 
                "g_path_get_dirname", 
                "inflateInit2_", 
                "g_slice_alloc0", 
                "lua_tocfunction", 
                "memset", 
                "g_ascii_toupper", 
                "gnutls_pkcs12_bag_get_count", 
                "g_array_sort", 
                "mpa_bitrate", 
                "smiGetFirstModule", 
                "g_list_first", 
                "ws_utf8_char_len", 
                "gcry_md_map_name", 
                "crypt_des_ecb", 
                "gnutls_x509_privkey_init", 
                "g_byte_array_new", 
                "ieee80211_mhz_to_str", 
                "__vfprintf_chk", 
                "g_get_charset", 
                "g_module_symbol", 
                "rewind", 
                "lua_next", 
                "g_hash_table_new_full", 
                "get_basename", 
                "lua_pushvalue", 
                "popcount", 
                "strstr", 
                "lua_gettable", 
                "lua_load", 
                "crc16_ccitt", 
                "lua_rawgeti", 
                "gcry_mpi_invm", 
                "g_hash_table_remove_all", 
                "gnutls_pubkey_import", 
                "gnutls_x509_privkey_export_rsa_raw", 
                "g_hash_table_iter_remove", 
                "sober128_add_entropy", 
                "g_array_new", 
                "nstime_cmp", 
                "lua_type", 
                "GeoIP_name_by_ipnum_v6", 
                "wtap_deregister_file_type_subtype", 
                "g_hash_table_foreach_steal", 
                "GeoIPRecord_delete", 
                "g_malloc0", 
                "smiSetErrorHandler", 
                "g_io_channel_read_chars", 
                "g_hash_table_insert", 
                "gcry_mpi_swap", 
                "strtok", 
                "crc16_plain_update", 
                "g_iconv_close", 
                "g_list_nth", 
                "__gmon_start__", 
                "getenv", 
                "ieee80211_mhz_to_chan", 
                "memcmp", 
                "sysconf", 
                "gcry_cipher_encrypt", 
                "g_int_hash", 
                "fflush", 
                "ws_strtou32", 
                "smiLoadModule", 
                "g_key_file_new", 
                "g_strjoinv", 
                "GeoIP_record_by_ipnum_v6", 
                "select", 
                "g_hash_table_lookup", 
                "g_array_remove_index_fast", 
                "g_memdup", 
                "qsort", 
                "lua_checkstack", 
                "get_cpu_info", 
                "file_peekc", 
                "g_ascii_strcasecmp", 
                "lua_toboolean", 
                "g_ptr_array_remove_range", 
                "ws_inet_pton4", 
                "GeoIP_record_by_ipnum", 
                "wtap_dump_close", 
                "wtap_dump", 
                "crc16_iso14443a", 
                "smiGetNextNode", 
                "lua_newstate", 
                "localeconv", 
                "gcry_md_algo_name", 
                "gnutls_pkcs12_bag_get_data", 
                "crc16_0x755B", 
                "crc8_0x2F", 
                "ares_cancel", 
                "smiGetNextNamedNumber", 
                "gcry_mac_write", 
                "file_exists", 
                "mkdir", 
                "g_ascii_strtoll", 
                "g_slist_foreach", 
                "smiFree", 
                "g_hash_table_new", 
                "lua_replace", 
                "g_list_remove_link", 
                "krb5_kt_start_seq_get", 
                "luaL_addstring", 
                "lua_concat", 
                "luaL_register", 
                "g_list_copy", 
                "g_regex_unref", 
                "unlink", 
                "nstime_is_zero", 
                "luaL_error", 
                "lua_gettop", 
                "g_try_malloc", 
                "lua_pushnumber", 
                "GeoIP_name_by_ipnum", 
                "g_malloc_n", 
                "lua_call", 
                "lua_atpanic", 
                "g_byte_array_prepend", 
                "nstime_to_sec", 
                "luaL_optlstring", 
                "inet_aton", 
                "g_dir_close", 
                "g_io_channel_set_flags", 
                "_ITM_deregisterTMCloneTable", 
                "g_hash_table_steal", 
                "luaL_callmeta", 
                "krb5_init_context", 
                "lua_tonumber", 
                "fputs", 
                "Eax_Decrypt", 
                "krb5_kt_close", 
                "__isoc99_sscanf", 
                "g_tree_insert", 
                "format_size", 
                "g_string_insert_c", 
                "atan2", 
                "g_strsplit_set", 
                "g_free", 
                "ws_strtoi32", 
                "feof", 
                "g_string_ascii_down", 
                "abort", 
                "gnutls_pkcs12_bag_deinit", 
                "gpg_strerror", 
                "g_log", 
                "wtap_block_get_string_option_value", 
                "luaL_checktype", 
                "g_slice_free1", 
                "lua_getallocf", 
                "g_log_set_handler", 
                "g_hash_table_iter_next", 
                "gcry_cipher_ctl", 
                "luaL_unref", 
                "g_spawn_close_pid", 
                "g_key_file_get_string", 
                "smiIsLoaded", 
                "strtol", 
                "g_strreverse", 
                "ws_hexstrtou32", 
                "mpa_version", 
                "g_slice_alloc", 
                "get_copyright_info", 
                "g_hash_table_lookup_extended", 
                "luaL_checkstack", 
                "g_ascii_strtod", 
                "__assert_fail", 
                "crc16_x25_ccitt_seed", 
                "lua_isnumber", 
                "lua_touserdata", 
                "crc32_ccitt", 
                "gnutls_pubkey_deinit", 
                "lua_pushnil", 
                "g_str_has_prefix", 
                "lua_rawequal", 
                "remove", 
                "inflateReset", 
                "g_hash_table_replace", 
                "g_array_append_vals", 
                "g_path_get_basename", 
                "gnutls_global_deinit", 
                "lua_pushinteger", 
                "smiGetRelatedNode", 
                "g_ptr_array_remove", 
                "GeoIP_country_name_by_ipnum_v6", 
                "g_convert_with_fallback", 
                "sqrt", 
                "g_ptr_array_free", 
                "report_open_failure", 
                "__printf_chk", 
                "g_io_add_watch_full", 
                "g_list_length", 
                "g_array_get_element_size", 
                "crc32_mpeg2_seed", 
                "GeoIP_open", 
                "gnutls_pkcs12_bag_decrypt", 
                "g_strlcat", 
                "g_child_watch_add", 
                "gnutls_strerror", 
                "nstime_delta", 
                "inflate", 
                "strftime", 
                "_setjmp", 
                "gcry_mpi_scan", 
                "file_gets", 
                "gcry_check_version", 
                "g_byte_array_append", 
                "gcry_md_setkey", 
                "gcry_cipher_open", 
                "g_string_free", 
                "file_iscompressed", 
                "g_slist_find", 
                "smiGetFirstElement", 
                "g_strcanon", 
                "g_direct_hash", 
                "g_string_truncate", 
                "g_byte_array_set_size", 
                "g_ptr_array_remove_index", 
                "crc8_0x3B", 
                "crc16_ccitt_seed", 
                "lua_objlen", 
                "g_printf_string_upper_bound", 
                "get_persconffile_path", 
                "g_strchomp", 
                "lua_rawseti", 
                "g_ascii_strdown", 
                "gnutls_x509_privkey_deinit", 
                "gcry_mpi_cmp", 
                "g_ascii_xdigit_value", 
                "g_convert_with_iconv", 
                "smiInit", 
                "lua_getfield", 
                "lua_pushboolean", 
                "free", 
                "crc6_compute", 
                "open", 
                "crc32c_calculate", 
                "g_iconv_open", 
                "g_strconcat", 
                "gcry_sexp_release", 
                "wtap_strerror", 
                "g_tree_new_full", 
                "gcry_md_get_algo_dlen", 
                "file_tell", 
                "memcpy", 
                "localtime", 
                "gcry_sexp_build", 
                "printable_char_or_period", 
                "g_path_is_absolute", 
                "g_list_find_custom", 
                "g_slist_find_custom", 
                "malloc", 
                "gcry_mac_close", 
                "g_io_channel_set_buffer_size", 
                "sysinfo", 
                "g_slist_concat", 
                "g_str_has_suffix", 
                "lua_pushfstring", 
                "wtap_dump_open", 
                "g_hash_table_get_keys", 
                "ascii_strup_inplace", 
                "nstime_sum", 
                "g_str_hash", 
                "g_unichar_to_utf8", 
                "gcry_cipher_close", 
                "g_utf8_validate", 
                "g_unichar_isprint", 
                "luaL_checkoption", 
                "g_array_sort_with_data", 
                "ferror", 
                "smiGetNextElement", 
                "sober128_read", 
                "ws_mempbrk_exec", 
                "lua_isstring", 
                "g_string_append_unichar", 
                "exp", 
                "__cxa_finalize", 
                "get_plugins_pers_dir", 
                "wtap_short_string_to_file_type_subtype", 
                "wtap_pcap_encap_to_wtap_encap", 
                "lua_settop", 
                "get_progfile_dir", 
                "pread", 
                "g_int64_equal", 
                "lua_pushstring", 
                "smiGetFirstNamedNumber", 
                "lua_rawset", 
                "g_print", 
                "GeoIP_country_name_by_ipnum", 
                "g_regex_get_pattern", 
                "fgets", 
                "gcry_cipher_decrypt", 
                "g_regex_new", 
                "g_hash_table_remove", 
                "g_strsplit", 
                "g_strdup", 
                "fileno", 
                "wtap_block_set_nth_string_option_value", 
                "get_plugin_dir", 
                "mktime_utc", 
                "_ITM_registerTMCloneTable", 
                "gnutls_pkcs12_bag_init", 
                "luaL_getmetafield", 
                "popen", 
                "g_array_remove_index", 
                "log", 
                "g_assertion_message_expr", 
                "g_list_delete_link", 
                "g_try_realloc", 
                "luaL_loadfile", 
                "lua_newuserdata", 
                "wtap_get_num_encap_types", 
                "g_string_printf", 
                "_IO_putc", 
                "g_ptr_array_foreach", 
                "g_slist_sort", 
                "wtap_block_set_string_option_value", 
                "g_slist_insert", 
                "g_tree_foreach", 
                "crc16_0x3D65_seed", 
                "g_strrstr_len", 
                "gcry_md_copy", 
                "krb5_kt_next_entry", 
                "sscanf", 
                "fputc", 
                "g_slist_delete_link", 
                "g_vsnprintf", 
                "strspn", 
                "gcry_md_write", 
                "ungetc", 
                "g_match_info_matches", 
                "gnutls_pkcs12_import", 
                "smiGetNextModule", 
                "luaL_typerror", 
                "crc16_0x5935", 
                "g_filename_display_name", 
                "fread", 
                "ldexpf", 
                "luaL_ref", 
                "lua_tointeger", 
                "g_list_remove", 
                "mpa_frequency", 
                "gcry_cipher_authenticate", 
                "__memset_chk", 
                "ascii_strdown_inplace", 
                "nstime_set_unset", 
                "g_realloc", 
                "gcry_md_hash_buffer", 
                "g_ascii_strup", 
                "mpa_samples", 
                "crc16_0x9949_seed", 
                "ares_timeout", 
                "wtap_encap_short_string", 
                "gcry_cipher_get_algo_blklen", 
                "strptime", 
                "gcry_mac_verify", 
                "g_setenv", 
                "ws_strtou64", 
                "smiGetPath", 
                "ares_init", 
                "smiSetPath", 
                "gcry_cipher_setiv", 
                "g_snprintf", 
                "gnutls_x509_privkey_get_key_id", 
                "lua_remove", 
                "get_datafile_path", 
                "ieee80211_chan_to_mhz", 
                "g_ascii_strncasecmp", 
                "pow", 
                "g_match_info_fetch_pos", 
                "lua_iscfunction", 
                "g_dir_read_name", 
                "lua_pushcclosure", 
                "g_utf8_get_char", 
                "g_dir_open", 
                "lua_isuserdata", 
                "gnutls_pkcs12_get_bag", 
                "g_slist_append", 
                "gcry_mac_setkey", 
                "update_crc6_by_bytes", 
                "luaL_optinteger", 
                "ws_inet_ntop6", 
                "g_byte_array_free", 
                "gcry_md_ctl", 
                "__uflow", 
                "crc7update", 
                "g_string_append_printf", 
                "strtoul", 
                "g_slist_free", 
                "luaL_openlibs", 
                "sober128_start", 
                "luaL_checkudata", 
                "wtap_register_file_type_subtypes", 
                "g_direct_equal", 
                "crc32_0x0AA725CF_seed", 
                "ws_mempbrk_compile", 
                "gcry_cipher_setctr", 
                "calloc", 
                "g_ptr_array_new", 
                "g_array_sized_new", 
                "ws_hmac_buffer", 
                "g_strcmp0", 
                "ares_gethostbyaddr", 
                "inflateEnd", 
                "g_tree_lookup", 
                "g_hash_table_destroy", 
                "mpa_layer", 
                "fclose", 
                "luaL_newmetatable", 
                "_IO_getc", 
                "g_strrstr", 
                "g_tree_destroy", 
                "strcmp", 
                "isatty", 
                "AirPDcapWepDecrypt", 
                "g_spawn_async_with_pipes", 
                "g_strlcpy", 
                "g_list_append", 
                "g_strdup_printf", 
                "gnutls_pkcs12_bag_get_type", 
                "wtap_encap_requires_phdr", 
                "smiGetFirstRange", 
                "smiGetFirstNode", 
                "gnutls_pubkey_init", 
                "gcry_cipher_setkey", 
                "krb5_c_decrypt", 
                "g_checksum_get_digest", 
                "gcry_mac_open", 
                "gcry_cipher_gettag", 
                "get_persdatafile_dir", 
                "g_error_free", 
                "lua_error", 
                "lua_pushlstring", 
                "gcry_mpi_print", 
                "g_strescape", 
                "gnutls_x509_privkey_import", 
                "g_random_int", 
                "wtap_read_packet_bytes", 
                "g_convert", 
                "roundf", 
                "gcry_cipher_algo_name", 
                "running_in_build_directory", 
                "crc11_307_noreflect_noxor", 
                "g_key_file_load_from_file", 
                "lua_close", 
                "g_list_find", 
                "gnutls_pubkey_get_key_id", 
                "gcry_md_read", 
                "g_list_free", 
                "__isoc99_fscanf", 
                "inflateInit_", 
                "report_warning", 
                "fopen", 
                "__xstat", 
                "get_dirname", 
                "nstime_to_msec", 
                "lua_pcall", 
                "gcry_mpi_add_ui", 
                "gcry_cipher_map_name", 
                "g_utf8_strup", 
                "g_regex_get_capture_count", 
                "report_failure", 
                "wtap_dump_flush", 
                "wtap_dump_file_tell", 
                "g_io_channel_unix_new", 
                "lua_getmetatable", 
                "krb5_kt_resolve", 
                "nstime_copy", 
                "asctime", 
                "g_strndup", 
                "inflateSetDictionary", 
                "crc32_0x5D6DCB_seed", 
                "g_checksum_type_get_length", 
                "g_int_equal", 
                "g_match_info_fetch_named", 
                "gcry_mpi_add", 
                "gnutls_global_init", 
                "g_hash_table_foreach_remove", 
                "g_slist_remove", 
                "lua_settable", 
                "file_read", 
                "g_ascii_strtoull", 
                "lua_insert", 
                "ares_destroy", 
                "strchr", 
                "g_slist_free_full", 
                "g_key_file_free", 
                "ares_library_init", 
                "wtap_dump_file_write", 
                "g_slist_prepend", 
                "strpbrk", 
                "filetime_to_nstime", 
                "g_list_last", 
                "__memcpy_chk", 
                "luaL_optnumber", 
                "gmtime", 
                "exit", 
                "lua_setfield", 
                "time", 
                "ws_base64_decode_inplace", 
                "g_string_append_len", 
                "gcry_md_reset", 
                "luaL_checklstring", 
                "setlocale", 
                "g_strfreev", 
                "gcry_md_open", 
                "g_io_channel_set_buffered", 
                "g_list_foreach", 
                "g_match_info_get_match_count", 
                "clearerr", 
                "g_list_prepend", 
                "wtap_block_get_nth_string_option_value", 
                "g_utf8_strlen", 
                "gcry_pk_decrypt", 
                "GeoIP_delete", 
                "zlibVersion", 
                "gcry_sexp_nth_mpi", 
                "ws_base32_decode", 
                "g_array_free", 
                "g_hash_table_steal_all", 
                "crc32c_calculate_no_swap", 
                "gcry_cipher_get_algo_keylen", 
                "mpa_padding", 
                "ares_gethostbyname", 
                "g_checksum_update", 
                "lua_setfenv", 
                "g_utf8_prev_char", 
                "g_match_info_free", 
                "__stack_chk_fail", 
                "g_hash_table_foreach", 
                "g_match_info_is_partial_match", 
                "ares_library_cleanup", 
                "g_int64_hash", 
                "luaL_addlstring", 
                "g_ascii_tolower", 
                "gcry_strerror", 
                "crc16_0x080F_seed", 
                "g_io_channel_set_encoding", 
                "file_seek", 
                "g_checksum_new", 
                "smiGetParentType", 
                "g_byte_array_sized_new", 
                "realloc", 
                "crc8_0x37", 
                "memchr", 
                "strcspn", 
                "strrchr", 
                "lround", 
                "strerror", 
                "ares_fds", 
                "g_regex_split", 
                "g_key_file_get_groups", 
                "g_strv_length", 
                "gnutls_check_version", 
                "wtap_file_type_subtype_string", 
                "test_for_directory", 
                "GeoIP_charset", 
                "file_getc", 
                "gcry_md_get_algo", 
                "g_unichar_validate", 
                "g_return_if_fail_warning", 
                "lua_tolstring", 
                "get_datafile_dir", 
                "wtap_register_open_info", 
                "g_array_set_size", 
                "gcry_mpi_clear_highbit", 
                "ws_strtou8", 
                "luaL_argerror", 
                "smiGetElementNode", 
                "gnutls_x509_privkey_import_pkcs8", 
                "gnutls_x509_privkey_get_pk_algorithm", 
                "luaL_checknumber", 
                "ws_hexstrtou8", 
                "strlen", 
                "gnutls_pkcs12_init", 
                "memmove", 
                "add_plugin_type", 
                "g_list_insert_sorted", 
                "g_regex_match_all_full", 
                "update_adler32", 
                "luaL_buffinit", 
                "g_stpcpy", 
                "ws_xton", 
                "wtap_dump_fdopen", 
                "luaL_prepbuffer", 
                "g_slist_last", 
                "g_strerror", 
                "g_str_equal", 
                "jsmn_is_json", 
                "g_regex_split_simple", 
                "g_list_reverse", 
                "g_array_insert_vals", 
                "log10", 
                "g_slist_nth", 
                "g_list_nth_data", 
                "lua_rawget", 
                "g_ptr_array_add", 
                "g_slist_insert_sorted", 
                "fwrite", 
                "nstime_set_zero", 
                "isdigit_string", 
                "file_eof", 
                "g_strdup_vprintf", 
                "__errno_location", 
                "wtap_has_open_info", 
                "g_hash_table_size", 
                "__fprintf_chk", 
                "ws_hexstrtou16", 
                "g_ptr_array_set_size", 
                "smiRenderOID", 
                "__longjmp_chk", 
                "lua_createtable", 
                "mktime", 
                "isprint_string", 
                "getprotobynumber", 
                "gcry_md_close", 
                "get_systemfile_dir", 
                "gcry_mac_read", 
                "nstime_is_unset", 
                "strncmp", 
                "smiGetNextRange", 
                "g_slist_length", 
                "lua_setmetatable", 
                "g_strdelimit", 
                "update_crc10_by_bytes", 
                "g_regex_match", 
                "ws_strtou16", 
                "luaL_checkinteger", 
                "pclose", 
                "g_ptr_array_remove_index_fast", 
                "ws_inet_pton6", 
                "g_slist_nth_data", 
                "g_hash_table_get_values", 
                "strncpy", 
                "g_string_sized_new", 
                "g_string_append", 
                "wtap_dump_file_seek", 
                "g_strchug", 
                "putchar"
            ], 
            "rpm": "wireshark-cli-2.4.0-6.fc27.x86_64.rpm"
        }, 
        "usr/bin/rawshark": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/rawshark", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "prefs_find_module", 
                "memchr", 
                "g_free", 
                "pcap_get_tstamp_precision", 
                "g_strlcat", 
                "g_list_first", 
                "epan_init", 
                "prefs_apply_all", 
                "wtap_pcap_encap_to_wtap_encap", 
                "__gmon_start__", 
                "g_ascii_strdown", 
                "g_regex_match_simple", 
                "proto_get_id_by_filter_name", 
                "g_strfreev", 
                "dfilter_apply_edt", 
                "g_list_sort", 
                "zlibVersion", 
                "dissector_all_tables_foreach_table", 
                "wmem_strdup_printf", 
                "wmem_packet_scope", 
                "g_ptr_array_add", 
                "strchr", 
                "register_all_protocols", 
                "g_source_remove", 
                "g_slist_free", 
                "start_requested_stats", 
                "close", 
                "ws_buffer_free", 
                "cmdarg_err_cont", 
                "pcap_statustostr", 
                "fvalue_to_string_repr", 
                "g_hash_table_size", 
                "epan_dissect_cleanup", 
                "register_all_protocol_handoffs", 
                "g_str_equal", 
                "socket", 
                "pcap_geterr", 
                "g_spawn_async_with_pipes", 
                "wmem_epan_scope", 
                "pcap_datalink_name_to_val", 
                "memcpy", 
                "rval_to_str_const", 
                "g_ptr_array_sized_new", 
                "get_os_version_info", 
                "prefs_set_pref", 
                "g_log", 
                "g_string_truncate", 
                "timestamp_set_precision", 
                "g_hash_table_insert", 
                "epan_cleanup", 
                "g_slist_foreach", 
                "ftype_name", 
                "wmem_free", 
                "g_strsplit", 
                "g_strv_length", 
                "__errno_location", 
                "g_strconcat", 
                "pcap_set_tstamp_precision", 
                "g_malloc", 
                "_ITM_registerTMCloneTable", 
                "g_array_insert_vals", 
                "proto_registrar_get_byname", 
                "getenv", 
                "fvalue_get_uinteger64", 
                "g_regex_new", 
                "pcap_free_datalinks", 
                "__stack_chk_fail", 
                "__vfprintf_chk", 
                "g_direct_equal", 
                "wtap_strerror", 
                "unlink", 
                "init_progfile_dir", 
                "g_match_info_free", 
                "__read_chk", 
                "proto_disable_proto_by_name", 
                "g_hash_table_remove_all", 
                "ws_buffer_init", 
                "g_malloc0", 
                "getopt_long", 
                "wtap_seek_read", 
                "epan_get_compiled_version_info", 
                "strncmp", 
                "ws_strtou32", 
                "g_direct_hash", 
                "g_dir_close", 
                "get_positive_int", 
                "epan_load_settings", 
                "frame_data_set_after_dissect", 
                "epan_dissect_reset", 
                "get_cpu_info", 
                "g_list_free_full", 
                "g_hash_table_lookup_extended", 
                "g_regex_match_full", 
                "g_dir_open", 
                "pcap_open_live", 
                "g_hash_table_get_values", 
                "timestamp_set_type", 
                "dissector_change_uint", 
                "g_slist_append", 
                "strtol", 
                "g_assertion_message_expr", 
                "g_string_free", 
                "g_ptr_array_new", 
                "find_dissector", 
                "fvalue_get_sinteger64", 
                "g_list_delete_link", 
                "dissector_table_foreach_handle", 
                "g_match_info_fetch", 
                "get_copyright_info", 
                "frame_data_init", 
                "g_regex_unref", 
                "file_open_error_message", 
                "__cxa_finalize", 
                "_ITM_deregisterTMCloneTable", 
                "g_ptr_array_set_size", 
                "setlocale", 
                "pcap_set_timeout", 
                "pcap_datalink", 
                "pcap_create", 
                "g_ptr_array_foreach", 
                "g_child_watch_add", 
                "g_string_new", 
                "g_list_length", 
                "mkfifo", 
                "ioctl", 
                "wmem_strdup", 
                "g_array_remove_index", 
                "g_string_append", 
                "g_strlcpy", 
                "g_strtod", 
                "__fprintf_chk", 
                "g_str_hash", 
                "write", 
                "strstr", 
                "ferror", 
                "proto_get_protocol_name", 
                "pcap_can_set_rfmon", 
                "g_ascii_strtoull", 
                "g_strcmp0", 
                "proto_report_dissector_bug", 
                "val_to_str_ext_const", 
                "file_exists", 
                "__printf_chk", 
                "g_string_insert_c", 
                "read_keytab_file", 
                "build_column_format_array", 
                "g_string_append_printf", 
                "g_ascii_strtoll", 
                "g_path_get_basename", 
                "wtap_phdr_cleanup", 
                "g_list_foreach", 
                "pcap_set_rfmon", 
                "find_dissector_table", 
                "wtap_file_get_idb_info", 
                "g_string_printf", 
                "g_strdup", 
                "init_report_message", 
                "proto_field_display_to_string", 
                "g_strerror", 
                "val64_to_str_const", 
                "init_process_policies", 
                "ws_add_crash_info", 
                "pcap_lib_version", 
                "g_slist_reverse", 
                "epan_dissect_init", 
                "fvalue_string_repr_len", 
                "relinquish_special_privs_perm", 
                "prefs_register_string_preference", 
                "string_to_name_resolve", 
                "fwrite", 
                "strlen", 
                "g_ptr_array_free", 
                "g_strjoinv", 
                "sysinfo", 
                "pcap_set_snaplen", 
                "frame_data_set_before_dissect", 
                "setrlimit", 
                "create_tempfile", 
                "fflush", 
                "disable_name_resolution", 
                "wtap_phdr_init", 
                "g_file_test", 
                "puts", 
                "fputc", 
                "proto_enable_heuristic_by_name", 
                "g_regex_replace", 
                "g_spawn_close_pid", 
                "wtap_block_get_string_option_value", 
                "g_match_info_matches", 
                "strcmp", 
                "get_dissector_table_selector_type", 
                "tvb_ws_mempbrk_pattern_guint8", 
                "g_dir_read_name", 
                "proto_get_protocol_filter_name", 
                "pcap_activate", 
                "g_match_info_next", 
                "g_strdup_printf", 
                "__libc_start_main", 
                "fvalue_get_uinteger", 
                "g_list_append", 
                "putchar", 
                "wtap_file_type_subtype_short_string", 
                "g_log_set_handler", 
                "g_ascii_strncasecmp", 
                "__isoc99_sscanf", 
                "pcap_datalink_val_to_description", 
                "g_ascii_strcasecmp", 
                "pcap_list_datalinks", 
                "dfilter_compile", 
                "register_tap_listener", 
                "val_to_str_const", 
                "exit", 
                "nstime_set_zero", 
                "g_slist_prepend", 
                "pcap_freealldevs", 
                "g_snprintf", 
                "g_list_free", 
                "open", 
                "wtap_cleanup", 
                "wtap_init", 
                "proto_get_finfo_ptr_array", 
                "pcap_set_datalink", 
                "pcap_datalink_val_to_name", 
                "g_hash_table_destroy", 
                "pcap_set_buffer_size", 
                "g_strstr_len", 
                "__fdelt_chk", 
                "pcap_findalldevs", 
                "fvalue_get_sinteger", 
                "g_regex_match", 
                "cmdarg_err", 
                "g_hash_table_foreach", 
                "g_spawn_sync", 
                "epan_new", 
                "tvb_new", 
                "pcap_set_promisc", 
                "dissector_handle_get_protocol_index", 
                "g_ptr_array_remove_index", 
                "epan_free", 
                "pcap_close", 
                "epan_dissect_run_with_taps", 
                "__xstat", 
                "g_list_find_custom", 
                "cmdarg_err_init", 
                "read", 
                "prefs_find_preference", 
                "proto_enable_proto_by_name", 
                "epan_dissect_prime_with_dfilter", 
                "g_list_prepend", 
                "select", 
                "g_hash_table_foreach_remove", 
                "get_extcap_dir", 
                "g_hash_table_new_full", 
                "g_list_find", 
                "frame_data_destroy", 
                "g_hash_table_get_keys", 
                "g_hash_table_lookup"
            ], 
            "rpm": "wireshark-cli-2.4.0-6.fc27.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Applications/Internet", 
            "Name": " wireshark-cli", 
            "License": " GPL+", 
            "URL": " http://www.wireshark.org/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-24.phx2.fedoraproject.org", 
            "Source RPM": " wireshark-2.4.0-6.fc27.src.rpm", 
            "Description": "\nWireshark allows you to examine protocol data stored in files or as it is\ncaptured from wired or wireless (WiFi or Bluetooth) networks, USB devices,\nand many other sources.  It supports dozens of protocol capture file formats\nand understands more than a thousand protocols.\n\nIt has many powerful features including a rich display filter language\nand the ability to reassemble multiple protocol packets in order to, for\nexample, view a complete TCP stream, save the contents of a file which was\ntransferred over HTTP or CIFS, or play back an RTP audio stream.\n\nThis package contains command-line utilities, plugins, and documentation for\nWireshark.\n", 
            "Build Date": " Tue 08 Aug 2017 07:52:32 AM EDT", 
            "Epoch": " 1", 
            "Version": " 2.4.0", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Tue 08 Aug 2017 11:37:48 PM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 6.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Network traffic analyzer", 
            "Size": " 93599074"
        }
    }
}