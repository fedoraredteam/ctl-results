{
    "results": {
        "usr/bin/wflinfo": {
            "report-functions": [
                "__assert_fail", 
                "exit", 
                "strncmp", 
                "waffle_context_create", 
                "__fprintf_chk", 
                "_ITM_deregisterTMCloneTable", 
                "waffle_config_destroy", 
                "waffle_init", 
                "waffle_display_supports_context_api", 
                "__gmon_start__", 
                "__cxa_finalize", 
                "waffle_error_to_string", 
                "waffle_error_get_info", 
                "__printf_chk", 
                "waffle_make_current", 
                "waffle_window_destroy", 
                "__ctype_b_loc", 
                "waffle_context_destroy", 
                "waffle_dl_sym", 
                "__stack_chk_fail", 
                "strlen", 
                "abort", 
                "__libc_start_main", 
                "waffle_display_connect", 
                "waffle_display_disconnect", 
                "waffle_enum_to_string", 
                "__vfprintf_chk", 
                "waffle_get_proc_address", 
                "strtok", 
                "waffle_window_create", 
                "strcmp", 
                "__isoc99_sscanf", 
                "waffle_config_choose"
            ], 
            "rpm": "waffle-1.5.2-6.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/wflinfo"
        }, 
        "usr/lib/libwaffle-1_so_0_5_2": {
            "report-functions": [
                "__vsnprintf_chk", 
                "wl_proxy_destroy", 
                "udev_device_unref", 
                "pthread_cond_signal", 
                "dlclose", 
                "pthread_mutexattr_settype", 
                "pthread_cond_destroy", 
                "snprintf", 
                "pthread_cond_timedwait", 
                "_ITM_registerTMCloneTable", 
                "__fprintf_chk", 
                "sched_yield", 
                "pthread_detach", 
                "wl_display_connect", 
                "calloc", 
                "__snprintf_chk", 
                "malloc", 
                "xcb_depth_next", 
                "pthread_key_delete", 
                "XCloseDisplay", 
                "udev_enumerate_add_match_subsystem", 
                "pthread_mutex_trylock", 
                "XOpenDisplay", 
                "udev_list_entry_get_next", 
                "dlsym", 
                "dlopen", 
                "wl_display_roundtrip", 
                "wl_proxy_marshal_constructor", 
                "__cxa_finalize", 
                "wl_display_disconnect", 
                "pthread_mutex_timedlock", 
                "pthread_mutexattr_destroy", 
                "pthread_cond_init", 
                "wl_egl_window_destroy", 
                "udev_device_new_from_syspath", 
                "nanosleep", 
                "__errno_location", 
                "xcb_visualtype_next", 
                "udev_list_entry_get_name", 
                "udev_enumerate_scan_devices", 
                "xcb_create_colormap_checked", 
                "xcb_screen_allowed_depths_iterator", 
                "udev_enumerate_get_list_entry", 
                "xcb_generate_id", 
                "__assert_fail", 
                "xcb_request_check", 
                "pthread_mutex_lock", 
                "wl_proxy_add_listener", 
                "setenv", 
                "open", 
                "getenv", 
                "xcb_destroy_window", 
                "wl_proxy_marshal_constructor_versioned", 
                "wl_egl_window_resize", 
                "_ITM_deregisterTMCloneTable", 
                "pthread_mutexattr_init", 
                "wl_egl_window_create", 
                "udev_device_get_devnode", 
                "xcb_create_window_checked", 
                "udev_unref", 
                "strstr", 
                "pthread_self", 
                "pthread_create", 
                "xcb_setup_roots_iterator", 
                "xcb_destroy_window_checked", 
                "xcb_map_window_checked", 
                "XGetXCBConnection", 
                "pthread_getspecific", 
                "pthread_join", 
                "udev_new", 
                "XSetErrorHandler", 
                "xcb_screen_next", 
                "xcb_get_setup", 
                "xcb_free_colormap", 
                "__stack_chk_fail", 
                "pthread_mutex_init", 
                "free", 
                "__printf_chk", 
                "xcb_configure_window", 
                "udev_enumerate_new", 
                "pthread_mutex_destroy", 
                "pthread_cond_broadcast", 
                "pthread_key_create", 
                "pthread_exit", 
                "abort", 
                "dlerror", 
                "close", 
                "__gmon_start__", 
                "XFree", 
                "time", 
                "pthread_mutex_unlock", 
                "xcb_depth_visuals_iterator", 
                "unsetenv", 
                "udev_enumerate_unref", 
                "udev_enumerate_add_match_sysname", 
                "strlen", 
                "pthread_once", 
                "pthread_cond_wait", 
                "pthread_setspecific"
            ], 
            "rpm": "waffle-1.5.2-6.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libwaffle-1.so.0.5.2"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Development/Libraries", 
            "Name": " waffle", 
            "License": " MIT", 
            "URL": " http://www.waffle-gl.org/releases.html", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-04.phx2.fedoraproject.org", 
            "Description": "\nWaffle is a cross-platform C library that allows one to defer\nselection of GL API and of window system until runtime.\n", 
            "Build Date": " Fri 04 Aug 2017 11:15:57 PM EDT", 
            "Source RPM": " waffle-1.5.2-6.fc27.src.rpm", 
            "Version": " 1.5.2", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Sat 05 Aug 2017 10:31:44 PM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 6.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Platform independent GL API layer", 
            "Size": " 104272"
        }
    }
}