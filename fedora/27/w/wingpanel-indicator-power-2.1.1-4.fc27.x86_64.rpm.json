{
    "results": {
        "usr/lib64/wingpanel/libpower_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/wingpanel/libpower.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "gtk_scale_set_draw_value", 
                "g_dbus_connection_emit_signal", 
                "g_variant_get_int32", 
                "g_variant_get_double", 
                "g_list_append", 
                "g_simple_async_result_set_op_res_gpointer", 
                "g_hash_table_iter_init", 
                "strtol", 
                "g_variant_iter_next_value", 
                "_ITM_deregisterTMCloneTable", 
                "udev_list_entry_get_name", 
                "gtk_style_context_add_class", 
                "g_type_register_static_simple", 
                "g_value_get_boxed", 
                "g_object_class_install_property", 
                "g_cclosure_marshal_VOID__STRING", 
                "gtk_grid_set_column_spacing", 
                "udev_enumerate_add_match_subsystem", 
                "gtk_widget_set_hexpand", 
                "g_hash_table_new_full", 
                "g_initable_new", 
                "g_dbus_proxy_get_type", 
                "g_signal_emit_by_name", 
                "udev_enumerate_scan_devices", 
                "g_strsplit", 
                "g_app_info_get_icon", 
                "bamf_window_get_pid", 
                "gtk_box_pack_start", 
                "__cxa_finalize", 
                "g_value_get_double", 
                "udev_new", 
                "g_simple_async_result_new", 
                "g_variant_new_uint64", 
                "g_param_spec_uint", 
                "g_assertion_message_expr", 
                "udev_enumerate_new", 
                "bamf_application_get_desktop_file", 
                "gee_abstract_map_get_values", 
                "g_param_spec_double", 
                "gee_iterator_get_type", 
                "gtk_image_set_from_icon_name", 
                "gtk_widget_set_halign", 
                "gtk_revealer_set_reveal_child", 
                "g_param_spec_int64", 
                "gtk_label_new", 
                "gtk_widget_set_margin_bottom", 
                "g_timeout_add_full", 
                "gtk_image_set_pixel_size", 
                "wingpanel_indicator_set_visible", 
                "g_file_query_exists", 
                "g_variant_builder_end", 
                "g_malloc", 
                "g_signal_connect_object", 
                "dcngettext", 
                "gtk_widget_set_margin_start", 
                "gtk_container_get_children", 
                "g_simple_async_result_complete", 
                "udev_device_new_from_syspath", 
                "gee_abstract_collection_remove", 
                "g_type_interface_add_prerequisite", 
                "strlen", 
                "gtk_range_set_value", 
                "g_value_set_string", 
                "g_type_check_class_cast", 
                "g_variant_iter_init", 
                "g_variant_new_variant", 
                "g_type_class_add_private", 
                "gee_hash_map_new", 
                "g_object_new", 
                "g_value_get_uint", 
                "gee_abstract_collection_get_size", 
                "gtk_widget_get_style_context", 
                "udev_device_unref", 
                "g_value_get_boolean", 
                "gtk_label_set_use_markup", 
                "g_strcmp0", 
                "g_type_instance_get_private", 
                "g_file_new_for_path", 
                "g_dbus_proxy_get_cached_property", 
                "gee_hash_map_get_type", 
                "_ITM_registerTMCloneTable", 
                "g_quark_from_static_string", 
                "bamf_matcher_get_default", 
                "g_object_notify", 
                "g_value_set_double", 
                "wingpanel_widgets_button_new", 
                "gee_abstract_collection_contains", 
                "g_value_get_string", 
                "g_dbus_method_invocation_get_connection", 
                "udev_list_entry_get_next", 
                "g_variant_get", 
                "wingpanel_widgets_switch_get_switch", 
                "g_dbus_proxy_call_sync", 
                "gtk_label_set_markup", 
                "gee_array_list_new", 
                "g_type_set_qdata", 
                "gee_list_sort", 
                "udev_unref", 
                "g_str_hash", 
                "g_value_set_uint", 
                "g_error_free", 
                "g_list_foreach", 
                "gtk_widget_set_valign", 
                "g_object_set", 
                "gee_traversable_foreach", 
                "g_signal_emit", 
                "g_cclosure_marshal_VOID__VOID", 
                "gtk_revealer_new", 
                "g_value_get_int64", 
                "g_variant_builder_open", 
                "g_app_info_create_from_commandline", 
                "g_desktop_app_info_new_from_filename", 
                "g_dbus_message_new_method_reply", 
                "g_value_get_int", 
                "g_dbus_connection_send_message", 
                "gtk_image_new_from_gicon", 
                "g_dbus_message_set_body", 
                "granite_services_settings_get_schema", 
                "g_app_info_launch_uris", 
                "g_strconcat", 
                "gtk_image_new_from_icon_name", 
                "g_type_class_peek_parent", 
                "memcpy", 
                "wingpanel_indicator_get_type", 
                "g_value_get_object", 
                "g_dbus_proxy_get_connection", 
                "g_dbus_connection_send_message_with_reply_sync", 
                "g_dbus_message_new_method_call", 
                "g_once_init_leave", 
                "g_dbus_proxy_get_object_path", 
                "g_value_set_uint64", 
                "g_dbus_message_to_gerror", 
                "g_value_set_int", 
                "granite_services_settings_get_type", 
                "__gmon_start__", 
                "glibtop_get_proc_time", 
                "g_type_class_adjust_private_offset", 
                "gtk_scale_new_with_range", 
                "gtk_widget_show_all", 
                "udev_enumerate_get_list_entry", 
                "g_hash_table_unref", 
                "g_return_if_fail_warning", 
                "wingpanel_widgets_switch_new", 
                "gee_iterator_has_next", 
                "g_malloc0", 
                "g_dbus_message_get_body", 
                "gtk_grid_attach", 
                "g_param_spec_uint64", 
                "g_variant_unref", 
                "gtk_image_clear", 
                "gee_hash_set_new", 
                "g_type_check_instance_cast", 
                "gtk_widget_set_margin_top", 
                "g_list_free", 
                "gtk_revealer_set_transition_type", 
                "gtk_grid_get_type", 
                "bamf_window_get_window_type", 
                "gtk_box_pack_end", 
                "memset", 
                "g_strdup", 
                "g_variant_get_uint64", 
                "g_intern_static_string", 
                "gee_abstract_map_get_read_only_view", 
                "gtk_overlay_add_overlay", 
                "g_io_error_quark", 
                "g_memdup", 
                "g_type_register_static", 
                "gee_abstract_map_unset", 
                "gtk_container_add", 
                "round", 
                "gee_iterator_get", 
                "g_object_unref", 
                "g_malloc0_n", 
                "wingpanel_widgets_separator_new", 
                "gee_iterable_iterator", 
                "g_type_get_qdata", 
                "g_file_read", 
                "g_str_equal", 
                "g_strdup_printf", 
                "g_signal_connect_data", 
                "g_variant_new_boolean", 
                "g_type_add_interface_static", 
                "g_dbus_proxy_get_name", 
                "g_param_spec_string", 
                "gee_abstract_map_get", 
                "g_boxed_type_register_static", 
                "g_variant_type_checked_", 
                "gtk_range_get_value", 
                "gee_abstract_map_foreach", 
                "g_settings_bind", 
                "g_hash_table_get_type", 
                "g_idle_add_full", 
                "gee_abstract_list_slice", 
                "g_log", 
                "g_realloc_n", 
                "g_cclosure_marshal_VOID__INT", 
                "g_hash_table_insert", 
                "g_strndup", 
                "g_variant_get_int64", 
                "g_strv_get_type", 
                "g_variant_new_int64", 
                "gee_collection_get_size", 
                "gee_abstract_collection_add", 
                "g_object_ref_sink", 
                "g_slice_alloc0", 
                "g_value_set_int64", 
                "gtk_overlay_new", 
                "gtk_image_new", 
                "g_file_get_path", 
                "gee_abstract_map_has_key", 
                "g_variant_dup_string", 
                "g_variant_iter_loop", 
                "gtk_label_set_label", 
                "g_clear_error", 
                "granite_services_settings_construct", 
                "strcmp", 
                "gee_map_entry_get_value", 
                "gee_abstract_map_set", 
                "g_param_spec_object", 
                "g_free", 
                "g_variant_new_uint32", 
                "g_data_input_stream_new", 
                "g_value_set_object", 
                "g_variant_builder_init", 
                "g_variant_new_object_path", 
                "g_dngettext", 
                "glibtop_get_cpu", 
                "gtk_orientable_set_orientation", 
                "g_value_get_uint64", 
                "udev_enumerate_unref", 
                "g_variant_get_variant", 
                "g_variant_builder_add_value", 
                "g_dbus_method_invocation_get_message", 
                "g_signal_new", 
                "g_variant_new_string", 
                "bamf_matcher_get_running_applications", 
                "gee_iterator_next", 
                "g_object_ref", 
                "g_input_stream_read", 
                "g_dbus_connection_register_object", 
                "g_dgettext", 
                "g_app_info_get_name", 
                "getuid", 
                "g_variant_get_uint32", 
                "gee_traversable_filter", 
                "bamf_application_get_windows", 
                "g_quark_to_string", 
                "g_param_spec_boolean", 
                "g_variant_builder_close", 
                "g_slice_free1", 
                "g_param_spec_int", 
                "__stack_chk_fail", 
                "g_hash_table_iter_next", 
                "g_simple_async_result_complete_in_idle", 
                "__fprintf_chk", 
                "g_type_interface_peek", 
                "gee_abstract_collection_iterator", 
                "g_value_set_boolean", 
                "gtk_widget_set_margin_end", 
                "g_type_name", 
                "gtk_box_get_type", 
                "g_signal_handlers_disconnect_matched", 
                "g_variant_get_boolean", 
                "g_dbus_method_invocation_return_gerror", 
                "g_once_init_enter", 
                "g_variant_new_double", 
                "g_variant_new_int32", 
                "g_variant_builder_add", 
                "g_dbus_proxy_get_default_timeout", 
                "g_data_input_stream_read_line", 
                "gtk_grid_new"
            ], 
            "rpm": "wingpanel-indicator-power-2.1.1-4.fc27.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " wingpanel-indicator-power", 
            "License": " GPLv2+", 
            "URL": " https://github.com/elementary/wingpanel-indicator-power", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-16.phx2.fedoraproject.org", 
            "Description": "\nA power indicator for wingpanel.\n", 
            "Build Date": " Fri 04 Aug 2017 11:42:42 PM EDT", 
            "Source RPM": " wingpanel-indicator-power-2.1.1-4.fc27.src.rpm", 
            "Version": " 2.1.1", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Sat 05 Aug 2017 10:55:44 PM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 4.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Power indicator for wingpanel", 
            "Size": " 356985"
        }
    }
}