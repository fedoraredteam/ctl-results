{
    "results": {
        "usr/bin/7kaa": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/7kaa", 
            "complexity": {
                "r2aa": {
                    "afCc": null, 
                    "afC": null
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "__ctype_toupper_loc", 
                "strerror", 
                "sqrt", 
                "SDL_Quit", 
                "__vsprintf_chk", 
                "gettext", 
                "alSource3f", 
                "ngettext", 
                "open", 
                "_ITM_registerTMCloneTable", 
                "_ZSt17__throw_bad_allocv", 
                "alGetSourcei", 
                "_ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base", 
                "SDL_UpperBlit", 
                "alGetSourcef", 
                "ferror", 
                "__dynamic_cast", 
                "SDL_MinimizeWindow", 
                "alBufferData", 
                "bindtextdomain", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "mkdir", 
                "srand", 
                "_ZdaPvm", 
                "SDL_SetRelativeMouseMode", 
                "SDL_RenderClear", 
                "strcpy", 
                "alGetError", 
                "__cxa_end_catch", 
                "__snprintf_chk", 
                "SDL_DestroyWindow", 
                "strcmp", 
                "logf", 
                "strrchr", 
                "_ZdaPv", 
                "__strcpy_chk", 
                "enet_host_create", 
                "sqrtf", 
                "alSourcePlay", 
                "alcDestroyContext", 
                "_ZdlPvm", 
                "textdomain", 
                "SDL_UpdateTexture", 
                "_ZSt15set_new_handlerPFvvE", 
                "__stack_chk_fail", 
                "scandir", 
                "__cxa_pure_virtual", 
                "strncat", 
                "SDL_CreateRGBSurface", 
                "SDL_SetWindowGrab", 
                "__gxx_personality_v0", 
                "enet_host_service", 
                "__strncpy_chk", 
                "fcntl", 
                "enet_socket_bind", 
                "fopen", 
                "dcgettext", 
                "enet_socket_set_option", 
                "__ctype_tolower_loc", 
                "SDL_GetWindowFlags", 
                "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base", 
                "strlen", 
                "SDL_GetDesktopDisplayMode", 
                "alcMakeContextCurrent", 
                "SDL_GetWindowPixelFormat", 
                "enet_peer_disconnect_later", 
                "strncmp", 
                "qsort", 
                "fseek", 
                "memcpy", 
                "alGenBuffers", 
                "__cxa_atexit", 
                "alSourceQueueBuffers", 
                "enet_deinitialize", 
                "gettimeofday", 
                "enet_peer_disconnect_now", 
                "enet_host_connect", 
                "strncpy", 
                "time", 
                "SDL_StopTextInput", 
                "strtoul", 
                "_ITM_deregisterTMCloneTable", 
                "SDL_ShowCursor", 
                "exit", 
                "SDL_GetTicks", 
                "sin", 
                "strcasecmp", 
                "rename", 
                "_ZSt20__throw_length_errorPKc", 
                "SDL_RWFromFile", 
                "chdir", 
                "__ctype_b_loc", 
                "alSourceStop", 
                "SDL_SetWindowTitle", 
                "alSourceUnqueueBuffers", 
                "__cxa_finalize", 
                "alcGetIntegerv", 
                "__errno_location", 
                "SDL_LoadBMP_RW", 
                "enet_socket_create", 
                "rand", 
                "__vsnprintf_chk", 
                "clock", 
                "__sprintf_chk", 
                "fread", 
                "SDL_GetPrefPath", 
                "sincos", 
                "__libc_start_main", 
                "fclose", 
                "sincosl", 
                "SDL_SetPaletteColors", 
                "enet_peer_send", 
                "strtod", 
                "alDeleteBuffers", 
                "__cxa_begin_catch", 
                "unlink", 
                "SDL_GetRendererInfo", 
                "realloc", 
                "tolower", 
                "isalpha", 
                "powf", 
                "alcOpenDevice", 
                "fwrite", 
                "__cxa_rethrow", 
                "_Znwm", 
                "_ZdlPv", 
                "__memcpy_chk", 
                "abort", 
                "setlocale", 
                "SDL_DestroyTexture", 
                "SDL_GetWindowFromID", 
                "SDL_SetColorKey", 
                "read", 
                "ftell", 
                "_Unwind_Resume", 
                "getenv", 
                "enet_packet_destroy", 
                "malloc", 
                "SDL_CreateWindowAndRenderer", 
                "__xstat", 
                "remove", 
                "__cxa_guard_acquire", 
                "enet_socket_receive", 
                "SDL_CreateTexture", 
                "SDL_RenderSetLogicalSize", 
                "free", 
                "__cxa_throw_bad_array_new_length", 
                "SDL_GetModState", 
                "enet_peer_disconnect", 
                "SDL_SetWindowFullscreen", 
                "SDL_free", 
                "SDL_Init", 
                "enet_initialize", 
                "strchr", 
                "memmove", 
                "alcCreateContext", 
                "alcCloseDevice", 
                "strncasecmp", 
                "SDL_MapRGB", 
                "SDL_SetHint", 
                "alSourcef", 
                "__cxa_guard_release", 
                "alphasort", 
                "alGenSources", 
                "SDL_SaveBMP_RW", 
                "memset", 
                "cos", 
                "__cxa_guard_abort", 
                "enet_packet_create", 
                "strstr", 
                "enet_host_destroy", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "enet_socket_send", 
                "__assert_fail", 
                "__gmon_start__", 
                "SDL_SetWindowIcon", 
                "getuid", 
                "__memset_chk", 
                "alGetSourcefv", 
                "_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_", 
                "SDL_RenderPresent", 
                "enet_socket_destroy", 
                "strtol", 
                "SDL_PeepEvents", 
                "SDL_RenderCopy", 
                "getpid", 
                "SDL_DestroyRenderer", 
                "__stpcpy_chk", 
                "SDL_GetMouseState", 
                "_Znam", 
                "atan2", 
                "SDL_FreeSurface", 
                "SDL_ShowSimpleMessageBox", 
                "SDL_PumpEvents", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "calloc", 
                "alDeleteSources"
            ], 
            "rpm": "7kaa-2.14.6-4.fc27.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " 7kaa", 
            "License": " GPLv3+ and GPLv2+", 
            "URL": " http://7kfans.com/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-16.phx2.fedoraproject.org", 
            "Description": "\nSeven Kingdoms is a real-time strategy (RTS) computer game developed\nby Trevor Chan of Enlight Software. The game enables players to\ncompete against up to six other kingdoms allowing players to conquer\nopponents by defeating them in war (with troops or machines),\ncapturing their buildings with spies, or offering opponents money\nfor their kingdom.\n\nSeven Kingdoms: Ancient Adversaries is a free patch provided by\nInteractive Magic and added three new cultures, the Egyptians, the\nMughals and the Zulus, and a new war machine, Unicorn.\n", 
            "Build Date": " Wed 02 Aug 2017 01:04:25 PM EDT", 
            "Source RPM": " 7kaa-2.14.6-4.fc27.src.rpm", 
            "Version": " 2.14.6", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Sun 06 Aug 2017 11:34:11 PM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 4.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Seven Kingdoms: Ancient Adversaries", 
            "Size": " 1725983"
        }
    }
}