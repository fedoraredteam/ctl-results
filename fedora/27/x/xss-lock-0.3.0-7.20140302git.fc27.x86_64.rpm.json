{
    "results": {
        "usr/bin/xss-lock": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/xss-lock", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "xcb_poll_for_event", 
                "xcb_event_get_error_label", 
                "xcb_request_check", 
                "g_quark_from_static_string", 
                "g_source_attach", 
                "g_strdup_printf", 
                "fcntl", 
                "g_source_unref", 
                "xcb_connection_has_error", 
                "g_log_set_fatal_mask", 
                "g_main_loop_unref", 
                "xcb_disconnect", 
                "g_child_watch_add", 
                "g_variant_unref", 
                "g_free", 
                "__gmon_start__", 
                "g_dbus_proxy_new_for_bus", 
                "xcb_screensaver_query_version_reply", 
                "g_object_unref", 
                "g_print", 
                "g_source_set_callback", 
                "g_strerror", 
                "xcb_delete_property", 
                "g_return_if_fail_warning", 
                "g_set_error", 
                "g_log_default_handler", 
                "g_queue_pop_head", 
                "xcb_intern_atom_reply", 
                "g_spawn_close_pid", 
                "setlocale", 
                "g_dbus_proxy_new_for_bus_finish", 
                "g_source_new", 
                "g_queue_new", 
                "g_get_environ", 
                "xcb_get_file_descriptor", 
                "g_error_free", 
                "g_queue_is_empty", 
                "free", 
                "g_variant_get", 
                "g_option_context_new", 
                "g_clear_error", 
                "xcb_generate_id", 
                "xcb_change_property", 
                "xcb_connect", 
                "kill", 
                "g_dbus_proxy_call", 
                "g_main_loop_run", 
                "xcb_aux_get_screen", 
                "g_spawn_async", 
                "g_option_context_free", 
                "xcb_create_pixmap", 
                "_ITM_registerTMCloneTable", 
                "g_shell_parse_argv", 
                "g_dbus_proxy_call_with_unix_fd_list_finish", 
                "g_main_loop_quit", 
                "xcb_screensaver_select_input", 
                "__errno_location", 
                "g_unix_signal_add", 
                "xcb_screensaver_set_attributes_checked", 
                "g_strcmp0", 
                "g_queue_free_full", 
                "g_queue_push_tail", 
                "xcb_screensaver_unset_attributes", 
                "__stack_chk_fail", 
                "xcb_prefetch_extension_data", 
                "g_option_context_add_main_entries", 
                "g_option_error_quark", 
                "g_log_set_default_handler", 
                "g_signal_connect_data", 
                "g_spawn_check_exit_status", 
                "__libc_start_main", 
                "g_environ_setenv", 
                "xcb_intern_atom", 
                "xcb_get_extension_data", 
                "xcb_force_screen_saver", 
                "exit", 
                "g_dbus_proxy_call_finish", 
                "g_dbus_proxy_call_with_unix_fd_list", 
                "g_option_context_parse", 
                "g_log", 
                "g_printerr", 
                "g_variant_new", 
                "__cxa_finalize", 
                "g_source_add_unix_fd", 
                "g_strfreev", 
                "xcb_screensaver_query_version", 
                "xcb_flush", 
                "_ITM_deregisterTMCloneTable", 
                "close", 
                "getpid"
            ], 
            "rpm": "xss-lock-0.3.0-7.20140302git.fc27.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " xss-lock", 
            "License": " MIT", 
            "URL": " https://bitbucket.org/raymonad/xss-lock", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-18.phx2.fedoraproject.org", 
            "Description": "\n*xss-lock* hooks up your favorite locker to the MIT screen saver extension for\nX and also to systemd's login manager. The locker is executed in response to\nevents from these two sources:\n\n- X signals when screen saver activation is forced or after a period of user\n  inactivity (as set with `xset s TIMEOUT`). In the latter case, the notifier\n  command, if specified, is executed first.\n\n- The login manager can also request that the session be locked; as a result of\n  `loginctl lock-sessions`, for example. Additionally, **xss-lock** uses the\n  inhibition logic to lock the screen before the system goes to sleep.\n\n*xss-lock* waits for the locker to exit -- or kills it when screen saver\ndeactivation or session unlocking is forced -- so the command should not fork.\n\nAlso, *xss-lock* manages the idle hint on the login session. The idle state of\nthe session is directly linked to user activity as reported by X (except when\nthe notifier runs before locking the screen). When all sessions are idle, the\nlogin manager can take action (such as suspending the system) after a\npreconfigured delay.\n", 
            "Build Date": " Sat 05 Aug 2017 01:54:04 AM EDT", 
            "Source RPM": " xss-lock-0.3.0-7.20140302git.fc27.src.rpm", 
            "Version": " 0.3.0", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Sun 06 Aug 2017 01:29:28 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 7.20140302git.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Use external locker as X screen saver", 
            "Size": " 36026"
        }
    }
}