{
    "results": {
        "usr/bin/xs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/xs", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "_ZSt24__throw_out_of_range_fmtPKcz", 
                "_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_", 
                "realloc", 
                "unsetenv", 
                "rand", 
                "strcmp", 
                "__errno_location", 
                "__assert_fail", 
                "srandom", 
                "sigaction", 
                "__cxa_finalize", 
                "rl_filename_completion_function", 
                "_ZdlPvm", 
                "exit", 
                "getpid", 
                "execve", 
                "_ZNSt6localeC1Ev", 
                "isprint", 
                "getpwnam", 
                "memset", 
                "__gmon_start__", 
                "strtoll", 
                "getc", 
                "setsid", 
                "GC_register_finalizer_ignore_self", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc", 
                "dup2", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm", 
                "_ITM_deregisterTMCloneTable", 
                "_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "_ZdlPv", 
                "__cxa_free_exception", 
                "_ZSt17__throw_bad_allocv", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE8overflowEi", 
                "signal", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE9pbackfailEi", 
                "getopt", 
                "strncmp", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsputnEPKcl", 
                "_ITM_registerTMCloneTable", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsgetnEPcl", 
                "getgroups", 
                "__cxa_guard_release", 
                "__longjmp_chk", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm", 
                "_ZNSo9_M_insertIdEERSoT_", 
                "read_history_range", 
                "memcmp", 
                "isxdigit", 
                "_ZSt9use_facetINSt7__cxx118numpunctIcEEERKT_RKSt6locale", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm", 
                "__cxa_end_catch", 
                "memmove", 
                "iscntrl", 
                "isalpha", 
                "fclose", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "getegid", 
                "__cxa_throw", 
                "__snprintf_chk", 
                "_Znwm", 
                "GC_disable", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm", 
                "__memcpy_chk", 
                "__cxa_begin_catch", 
                "write", 
                "readline", 
                "strcpy", 
                "opendir", 
                "__stack_chk_fail", 
                "_ZNSo5tellpEv", 
                "GC_gcollect", 
                "_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1ESt13_Ios_Openmode", 
                "fork", 
                "GC_base", 
                "_ZNKSt6localeeqERKS_", 
                "fmod", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE9showmanycEv", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_", 
                "_ZSt20__throw_length_errorPKc", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE5uflowEv", 
                "snprintf", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE5imbueERKSt6locale", 
                "add_history", 
                "ioctl", 
                "strlen", 
                "__cxa_guard_acquire", 
                "read", 
                "GC_malloc", 
                "strdup", 
                "strchr", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate", 
                "__xstat64", 
                "_ZNKSt3tr14hashINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclES6_", 
                "strtol", 
                "pipe", 
                "strncpy", 
                "rl_set_screen_size", 
                "random", 
                "__cxa_pure_virtual", 
                "getenv", 
                "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base", 
                "readdir64", 
                "dup", 
                "strerror", 
                "_ZNSt6localeD1Ev", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "strtod", 
                "__lxstat64", 
                "closedir", 
                "getrlimit64", 
                "_ZSt19__throw_logic_errorPKc", 
                "free", 
                "islower", 
                "wait3", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE9underflowEv", 
                "umask", 
                "setrlimit64", 
                "GC_free", 
                "__sigsetjmp", 
                "_ZNSt8__detail15_List_node_base9_M_unhookEv", 
                "close", 
                "setenv", 
                "_ZNSt8ios_baseD2Ev", 
                "time", 
                "stpcpy", 
                "isatty", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE4syncEv", 
                "rindex", 
                "strspn", 
                "memcpy", 
                "_ZNSo3putEc", 
                "_ZNSt8ios_baseC2Ev", 
                "ffi_prep_cif_var", 
                "chdir", 
                "rl_reset_terminal", 
                "__cxa_rethrow", 
                "_ZNSo5writeEPKcl", 
                "_ZNSi10_M_extractIdEERSiRT_", 
                "_ZNSt8bad_castD2Ev", 
                "_Unwind_Resume", 
                "__cxa_atexit", 
                "__cxa_allocate_exception", 
                "__gxx_personality_v0", 
                "malloc", 
                "GC_init", 
                "open64", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "sigemptyset", 
                "GC_malloc_uncollectable", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "__libc_start_main", 
                "ffi_call", 
                "__cxa_get_exception_ptr", 
                "_ZNSt8ios_base4InitD1Ev", 
                "_ZNSi3getEv", 
                "geteuid", 
                "_ZNSt8ios_base4InitC1Ev", 
                "fopen64", 
                "strcoll", 
                "_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE7_M_syncEPcmm"
            ], 
            "rpm": "xs-1.1-3.git22afec1.fc27.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " xs", 
            "License": " Public Domain", 
            "URL": " https://github.com/TieDyedDevil/XS", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-17.phx2.fedoraproject.org", 
            "Description": "\nXs is a cleanly-designed shell with functional programming.  It is based off\nthe source-code for the es project, which was in the public domain.\nCurrently, the changes in xs can also be considered to be in the public domain.\n\nMost of the xs source code remains untouched from es.\nThe primary authors of that shell can be found in that source code,\ncurrently located at: ftp://ftp.sys.utoronto.ca/pub/es/. Modifications\nsince es-0.9-beta1 are all parts of xs and have been written by\nFrederic Koehler.\n", 
            "Build Date": " Sat 05 Aug 2017 01:52:41 AM EDT", 
            "Source RPM": " xs-1.1-3.git22afec1.fc27.src.rpm", 
            "Version": " 1.1", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Sun 06 Aug 2017 01:29:08 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 3.git22afec1.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Shell supporting functional programming", 
            "Size": " 475269"
        }
    }
}