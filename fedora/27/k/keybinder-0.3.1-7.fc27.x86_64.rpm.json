{
    "results": {
        "usr/lib64/libkeybinder_so_0_1_0": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/libkeybinder.so.0.1.0", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "gtk_accelerator_parse", 
                "_ITM_registerTMCloneTable", 
                "gdk_x11_window_get_drawable_impl", 
                "__cxa_finalize", 
                "gdk_keymap_map_virtual_modifiers", 
                "strcmp", 
                "gdk_keymap_get_entries_for_keyval", 
                "g_log", 
                "gdk_error_trap_push", 
                "g_malloc0", 
                "g_slist_remove", 
                "g_strdup", 
                "g_signal_connect_data", 
                "__stack_chk_fail", 
                "gtk_accelerator_get_default_mod_mask", 
                "_ITM_deregisterTMCloneTable", 
                "gdk_get_default_root_window", 
                "XkbFreeKeyboard", 
                "g_free", 
                "gdk_flush", 
                "g_slist_prepend", 
                "gdk_keymap_add_virtual_modifiers", 
                "__gmon_start__", 
                "gdk_window_add_filter", 
                "XUngrabKey", 
                "gdk_keymap_translate_keyboard_state", 
                "gdk_keymap_get_default", 
                "gdk_x11_drawable_get_xid", 
                "gdk_error_trap_pop", 
                "gdk_keymap_have_bidi_layouts", 
                "XkbGetMap"
            ], 
            "rpm": "keybinder-0.3.1-7.fc27.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Development/Libraries", 
            "Name": " keybinder", 
            "License": " MIT", 
            "URL": " https://github.com/engla/keybinder", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildhw-09.phx2.fedoraproject.org", 
            "Description": "\nkeybinder is a library for registering global keyboard shortcuts.\nKeybinder works with GTK-based applications using the X Window System.\n\nThe library contains:\n- A C library, libkeybinder\n- Python bindings, python-keybinder\n- An examples directory with programs in C, Lua, Python and Vala.\n", 
            "Build Date": " Thu 03 Aug 2017 07:25:23 AM EDT", 
            "Source RPM": " keybinder-0.3.1-7.fc27.src.rpm", 
            "Version": " 0.3.1", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Fri 04 Aug 2017 01:46:19 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 7.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " A library for registering global keyboard shortcuts", 
            "Size": " 21841"
        }
    }
}