{
    "results": {
        "usr/lib/libqcommandline_so_0_3_0": {
            "report-functions": [
                "_ZNK9QFileInfo8baseNameEv", 
                "_ZN8QMapData11node_deleteEPPNS_4NodeEiS1_", 
                "_ZN9QListData6insertEi", 
                "_ZN8QMapData16continueFreeDataEi", 
                "_ZSt9terminatev", 
                "_ZN7QObject10timerEventEP11QTimerEvent", 
                "_ZNK7QString10startsWithERK13QLatin1StringN2Qt15CaseSensitivityE", 
                "_ZN9QListData7reallocEi", 
                "__cxa_finalize", 
                "_ZN7QString17fromLatin1_helperEPKci", 
                "_ZN9QListData11detach_growEPii", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_ZN7QObject11qt_metacallEN11QMetaObject4CallEiPPv", 
                "_ZN11QMetaObject8activateEP7QObjectPKS_iPPv", 
                "__gmon_start__", 
                "_ZN7QStringC1E5QChar", 
                "_ZNK7QString3argERKS_iRK5QChar", 
                "_ZNK7QString3midEii", 
                "_ZN11QTextStreamlsE5QChar", 
                "_ZNK7QString8repeatedEi", 
                "_ZN7QObject13connectNotifyEPKc", 
                "strlen", 
                "_ZN7QObject10childEventEP11QChildEvent", 
                "_ZNSt8ios_base4InitD1Ev", 
                "_ZN16QCoreApplication15applicationNameEv", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate", 
                "_ZN16QCoreApplication9argumentsEv", 
                "__cxa_atexit", 
                "_ZN11QTextStreamlsEPKc", 
                "_ITM_registerTMCloneTable", 
                "__stack_chk_fail", 
                "_ZN8QVariantD1Ev", 
                "_ZN9QFileInfoD1Ev", 
                "_ZN9QFileInfoC1ERK7QString", 
                "exit", 
                "__gxx_personality_v0", 
                "_ZN7QObjectD2Ev", 
                "_ZN7QObject16disconnectNotifyEPKc", 
                "__cxa_rethrow", 
                "_ZN8QMapData10createDataEi", 
                "_ZN16QCoreApplication16organizationNameEv", 
                "_ZN8QMapData11node_createEPPNS_4NodeEii", 
                "_ZNK7QStringltERKS_", 
                "_ZN7QString10fromLatin1EPKci", 
                "_ZN10QByteArray7reallocEi", 
                "_Znwj", 
                "_ZN9QListData6removeEi", 
                "__cxa_begin_catch", 
                "_ZN8QVariantC1ERK7QString", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_i", 
                "_Z5qFreePv", 
                "_ITM_deregisterTMCloneTable", 
                "_ZN7QObject11eventFilterEPS_P6QEvent", 
                "_ZN7QObject11customEventEP6QEvent", 
                "_ZNK7QString11toLocal8BitEv", 
                "_ZN11QTextStreamlsEc", 
                "_ZN9QListData6appendEv", 
                "_ZdlPvj", 
                "_ZN7QObjectC2EPS_", 
                "_ZN7QStringaSERKS_", 
                "__cxa_end_catch", 
                "_ZN11QTextStreamC1EP7QString6QFlagsIN9QIODevice12OpenModeFlagEE", 
                "_Unwind_Resume", 
                "_Z17qt_message_output9QtMsgTypePKc", 
                "_ZNK11QMetaObject2trEPKcS1_", 
                "_ZN7QString4freeEPNS_4DataE", 
                "_ZNK7QString7indexOfE5QChariN2Qt15CaseSensitivityE", 
                "_ZN7QString7reallocEi", 
                "_ZN16QCoreApplication18organizationDomainEv", 
                "_ZN9QListData6detachEi", 
                "strcmp", 
                "_ZN7QObject11qt_metacastEPKc", 
                "_ZNK7QString10startsWithERK5QCharN2Qt15CaseSensitivityE", 
                "_ZN9QListData5eraseEPPv", 
                "_ZNK7QStringeqERKS_", 
                "_ZN16QCoreApplication18applicationVersionEv", 
                "_ZN7QString6appendERKS_", 
                "_ZN11QTextStreamD1Ev", 
                "_ZN7QString4growEi"
            ], 
            "rpm": "qcommandline-0.3.0-15.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libqcommandline.so.0.3.0"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " qcommandline", 
            "License": " LGPLv2+", 
            "URL": " http://xf.iksaif.net/dev/qcommandline.html", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-06.phx2.fedoraproject.org", 
            "Description": "\nQCommandLine is a command line parsing library for Qt programs (like getopt).\nFeatures include options, switches, parameters and automatic --version/--help\ngeneration.\n", 
            "Build Date": " Fri 04 Aug 2017 11:52:04 AM EDT", 
            "Source RPM": " qcommandline-0.3.0-15.fc27.src.rpm", 
            "Version": " 0.3.0", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Sat 05 Aug 2017 09:31:15 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 15.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Command line parser for Qt programs", 
            "Size": " 90492"
        }
    }
}