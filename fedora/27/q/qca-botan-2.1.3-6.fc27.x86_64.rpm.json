{
    "results": {
        "usr/lib64/qt4/plugins/crypto/libqca-botan_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/qt4/plugins/crypto/libqca-botan.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc", 
                "_ZNK5QTime7elapsedEv", 
                "_ZN3QCA11SecureArrayD1Ev", 
                "__cxa_finalize", 
                "_ZNK3QCA8Provider13defaultConfigEv", 
                "_ZNK5Botan13Library_State17algorithm_factoryEv", 
                "_ZN3QCA11SecureArrayC1Eic", 
                "__cxa_free_exception", 
                "__cxa_guard_acquire", 
                "_ZN5Botan13block_size_ofERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l", 
                "_ZNK7QString7toAsciiEv", 
                "_ZN5Botan9get_pbkdfERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", 
                "_ZNK7QStringeqERKS_", 
                "_ZN5Botan17Algorithm_Factory22prototype_block_cipherERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_", 
                "_ZNSt16invalid_argumentC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", 
                "_ZSt20__throw_length_errorPKc", 
                "_ZN5Botan13Library_State10global_rngEv", 
                "_ZN5Botan11OctetString6changeEPKhm", 
                "_ZN3QCA12SymmetricKeyC1ERKNS_11SecureArrayE", 
                "__cxa_end_catch", 
                "_ZdlPv", 
                "_ZN5Botan11OctetString6changeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", 
                "_ZN5Botan17Algorithm_Factory18make_hash_functionERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_", 
                "_ZN7QObject16disconnectNotifyEPKc", 
                "__stack_chk_fail", 
                "_ZN7QObject5eventEP6QEvent", 
                "_ZN3QCA8Provider6deinitEv", 
                "_ZN3QCA13CipherContext11qt_metacallEN11QMetaObject4CallEiPPv", 
                "_ZN5Botan4HMACC1EPNS_12HashFunctionE", 
                "_ZN3QCA13CipherContext11qt_metacastEPKc", 
                "_ZNK3QCA10MACContext10metaObjectEv", 
                "_ZN7QObject10timerEventEP11QTimerEvent", 
                "__gmon_start__", 
                "_ZNK7QStringeqERK13QLatin1String", 
                "_ZN7QString4freeEPNS_4DataE", 
                "_ZN3QCA10KDFContext11qt_metacastEPKc", 
                "_ZN5Botan10get_cipherERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_11OctetStringESA_NS_10Cipher_DirE", 
                "_ZNKSt11logic_error4whatEv", 
                "_Unwind_Resume", 
                "_ZNK3QCA12MemoryRegion4sizeEv", 
                "_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_", 
                "__cxa_guard_release", 
                "_Znwm", 
                "_ZN5Botan18LibraryInitializer10initializeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", 
                "_ZN5QTime5startEv", 
                "_ZN5Botan17Algorithm_Factory13prototype_macERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_", 
                "memmove", 
                "_ZN7QObject11eventFilterEPS_P6QEvent", 
                "_ZN3QCA12BasicContextC2EPNS_8ProviderERK7QString", 
                "_ZNKSt5ctypeIcE13_M_widen_initEv", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm", 
                "_ZN3QCA13RandomContext11qt_metacastEPKc", 
                "_ZN5Botan4Pipe5writeEPKhm", 
                "_ZN5Botan10get_cipherERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_11OctetStringENS_10Cipher_DirE", 
                "__cxa_allocate_exception", 
                "_ZN5Botan4Pipe9start_msgEv", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc", 
                "_ITM_registerTMCloneTable", 
                "_ZN5Botan4PipeC1EPNS_6FilterES2_S2_S2_", 
                "_ZN3QCA12BasicContextC2ERKS0_", 
                "_ZN7QObjectC2EPS_", 
                "_ZN7QString16fromAscii_helperEPKci", 
                "_ZN5Botan9to_stringB5cxx11Eym", 
                "_ZN3QCA11SecureArrayC1ERK10QByteArray", 
                "_ZN7QObject11qt_metacastEPKc", 
                "strcmp", 
                "_ZNK3QCA8Provider6creditEv", 
                "_ZNK3QCA11SecureArray4sizeEv", 
                "_ZNK3QCA13RandomContext10metaObjectEv", 
                "_Z5qFreePv", 
                "__cxa_atexit", 
                "_ZN3QCA11SecureArray6resizeEi", 
                "_ZN7QString9fromAsciiEPKci", 
                "_ZN7QString8fromUtf8EPKci", 
                "_ZSt19__throw_logic_errorPKc", 
                "_ZNK3QCA13CipherContext10metaObjectEv", 
                "_ZNSo5flushEv", 
                "_ZN7QObjectD2Ev", 
                "_ZN3QCA8Provider13configChangedERK4QMapI7QString8QVariantE", 
                "_ZN10QByteArrayC1EPKci", 
                "memset", 
                "memcpy", 
                "_ZNK3QCA10KDFContext10metaObjectEv", 
                "_ZN3QCA12BasicContextD2Ev", 
                "_ZNSt16invalid_argumentD2Ev", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm", 
                "_ZNSt8ios_base4InitD1Ev", 
                "_ZN3QCA11SecureArrayaSERKS0_", 
                "_ZN5Botan17Algorithm_Factory23prototype_stream_cipherERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_", 
                "_ZN7QObject11qt_metacallEN11QMetaObject4CallEiPPv", 
                "_ZN7QObject10childEventEP11QChildEvent", 
                "_ZN3QCA11HashContext11qt_metacastEPKc", 
                "_ZNK3QCA11SecureArray4dataEv", 
                "_ZN3QCA12MemoryRegionC1ERKS0_", 
                "_ZNK3QCA12MemoryRegion4dataEv", 
                "_ZN7QObject11customEventEP6QEvent", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_ZNK3QCA8Provider7versionEv", 
                "_ZSt16__throw_bad_castv", 
                "_ZN3QCA13RandomContext11qt_metacallEN11QMetaObject4CallEiPPv", 
                "__gxx_personality_v0", 
                "_ITM_deregisterTMCloneTable", 
                "_ZN11QMetaObject11changeGuardEPP7QObjectS1_", 
                "_ZN7QObject13connectNotifyEPKc", 
                "_ZN3QCA10KDFContext11qt_metacallEN11QMetaObject4CallEiPPv", 
                "_ZNK5Botan4Pipe9remainingEm", 
                "_ZN5Botan4Pipe7end_msgEv", 
                "_ZN11QMetaObject11removeGuardEPP7QObject", 
                "_ZN5Botan9Allocator3getEb", 
                "_ZNSo3putEc", 
                "_ZN3QCA11SecureArray4dataEv", 
                "_ZN3QCA12MemoryRegionaSERKS0_", 
                "__cxa_begin_catch", 
                "_ZN3QCA10MACContext11qt_metacastEPKc", 
                "__cxa_rethrow", 
                "_ZN3QCA8ProviderD2Ev", 
                "__cxa_throw", 
                "_ZN3QCA10MACContext11qt_metacallEN11QMetaObject4CallEiPPv", 
                "_ZN9QListData11detach_growEPii", 
                "_ZN9QListData6appendEv", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_", 
                "_ZNK3QCA11HashContext10metaObjectEv"
            ], 
            "rpm": "qca-botan-2.1.3-6.fc27.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " qca-botan", 
            "License": " LGPLv2+", 
            "URL": " https://userbase.kde.org/QCA", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-09.phx2.fedoraproject.org", 
            "Description": "\nBotan plugin for the Qt Cryptographic Architecture.\n", 
            "Build Date": " Tue 02 May 2017 08:16:26 AM EDT", 
            "Source RPM": " qca-2.1.3-6.fc27.src.rpm", 
            "Version": " 2.1.3", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Tue 02 May 2017 08:36:39 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 6.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Botan plugin for the Qt Cryptographic Architecture", 
            "Size": " 73110"
        }
    }
}