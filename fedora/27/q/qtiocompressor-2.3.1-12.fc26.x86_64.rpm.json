{
    "results": {
        "usr/lib64/libQtSolutions_IOCompressor-2_3_so_1_0_0": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/libQtSolutions_IOCompressor-2.3.so.1.0.0", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "_ZNK9QIODevice5atEndEv", 
                "_ZN9QIODevice11qt_metacastEPKc", 
                "__stack_chk_fail", 
                "_ZN9QIODevice5resetEv", 
                "deflateInit_", 
                "_ZN7QString4freeEPNS_4DataE", 
                "deflateInit2_", 
                "_ZN9QIODevice19waitForBytesWrittenEi", 
                "_ZN7QObject10childEventEP11QChildEvent", 
                "inflateInit_", 
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable", 
                "inflateEnd", 
                "_ZNK9QIODevice8openModeEv", 
                "_Znam", 
                "strlen", 
                "_ZN7QObject16disconnectNotifyEPKc", 
                "_ZN7QObject5eventEP6QEvent", 
                "_ZdaPv", 
                "_ZN9QIODevice5writeEPKcx", 
                "_ZN9QIODevice5closeEv", 
                "_ZNK9QIODevice11canReadLineEv", 
                "_Unwind_Resume", 
                "deflateEnd", 
                "__cxa_finalize", 
                "_ZN7QString16fromAscii_helperEPKci", 
                "_ZNK9QIODevice6isOpenEv", 
                "_ZN9QIODevice11qt_metacallEN11QMetaObject4CallEiPPv", 
                "_Znwm", 
                "_ZN9QIODevice16waitForReadyReadEi", 
                "_ZN9QIODeviceD2Ev", 
                "_ZN7QObject13connectNotifyEPKc", 
                "_ZN7QString6numberEii", 
                "__gxx_personality_v0", 
                "_ZN9QIODevice4openE6QFlagsINS_12OpenModeFlagEE", 
                "_ZNK9QIODevice4sizeEv", 
                "_ZN7QObject11customEventEP6QEvent", 
                "_ZN9QIODeviceC2Ev", 
                "zlibVersion", 
                "_ZNK9QIODevice12bytesToWriteEv", 
                "_Z8qWarningPKcz", 
                "_ZN7QString6appendERKS_", 
                "inflate", 
                "_ZN7QStringaSERKS_", 
                "strcmp", 
                "_ZN9QIODevice14setErrorStringERK7QString", 
                "deflate", 
                "_ZN7QObject10timerEventEP11QTimerEvent", 
                "_ZN9QIODevice12readLineDataEPcx", 
                "zError", 
                "_ZN9QIODevice4readEPcx", 
                "_ZdlPvm", 
                "_ZNK9QIODevice14bytesAvailableEv", 
                "_ZNK9QIODevice11errorStringEv", 
                "_ZN7QString9fromAsciiEPKci", 
                "_ZN9QIODevice4seekEx", 
                "inflateInit2_", 
                "_ZN7QObject11eventFilterEPS_P6QEvent", 
                "_ZN9QIODevice9ungetCharEc"
            ], 
            "rpm": "qtiocompressor-2.3.1-12.fc26.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " System Environment/Libraries", 
            "Name": " qtiocompressor", 
            "License": " GPLv3 or LGPLv2 with exceptions", 
            "URL": " http://qt.nokia.com/products/appdev/add-on-products/catalog/4/Utilities/qtiocompressor/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-28.phx2.fedoraproject.org", 
            "Description": "\nThe class works on top of a QIODevice subclass, compressing data before it is\nwritten and decompressing it when it is read. Since QtIOCompressor works on\nstreams, it does not have to see the entire data set before compressing or\ndecompressing it. This can reduce the memory requirements when working on large\ndata sets.\n", 
            "Build Date": " Sat 11 Feb 2017 04:18:21 PM EST", 
            "Source RPM": " qtiocompressor-2.3.1-12.fc26.src.rpm", 
            "Version": " 2.3.1", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Sun 26 Feb 2017 02:00:51 PM EST, Key ID f55e7430f5282ee4", 
            "Release": " 12.fc26", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " QIODevice that compresses data streams", 
            "Size": " 86547"
        }
    }
}