{
    "results": {
        "usr/bin/qjackmmc": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/qjackmmc", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "__libc_start_main", 
                "_ZN5QFile4openE6QFlagsIN9QIODevice12OpenModeFlagEE", 
                "_ZN7QObject11customEventEP6QEvent", 
                "_ZThn16_NK7QWidget7devTypeEv", 
                "_ZN11QMainWindowD2Ev", 
                "_ZN7QWidget13setWindowIconERK5QIcon", 
                "_ZN7QLayout17setSizeConstraintENS_14SizeConstraintE", 
                "snd_seq_set_client_name", 
                "_Unwind_Resume", 
                "lash_event_get_type", 
                "jack_transport_locate", 
                "snd_seq_poll_descriptors_count", 
                "snd_seq_event_input", 
                "_ZN7QWidget13setSizePolicyE11QSizePolicy", 
                "_ZN5QCharC1Ec", 
                "_ZN8QMenuBarC1EP7QWidget", 
                "_ZN5QFileD1Ev", 
                "snd_strerror", 
                "_ZN11QMainWindow5eventEP6QEvent", 
                "_ZN11QGridLayout7addItemEP11QLayoutItemiiii6QFlagsIN2Qt13AlignmentFlagEE", 
                "_ZN7QThread11qt_metacastEPKc", 
                "_ZNK7QWidget8sizeHintEv", 
                "_ZN7QWidget10fontChangeERK5QFont", 
                "_ZN11QTextStreamC1EP9QIODevice", 
                "_ZN9QCheckBoxC1EP7QWidget", 
                "_ZN7QThread11qt_metacallEN11QMetaObject4CallEiPPv", 
                "_ZN7QWidget21mouseDoubleClickEventEP11QMouseEvent", 
                "_ZN5QFileC1ERK7QString", 
                "_ZNK5QMenu10menuActionEv", 
                "_ZN11QMetaObject11changeGuardEPP7QObjectS1_", 
                "_ZN7QWidget12focusInEventEP11QFocusEvent", 
                "_ZN7QWidget16inputMethodEventEP17QInputMethodEvent", 
                "_ZNK7QWidget16inputMethodQueryEN2Qt16InputMethodQueryE", 
                "_ZN12QApplicationC1ERiPPci", 
                "_ZN6QLabel8setBuddyEP7QWidget", 
                "__stack_chk_fail", 
                "lash_config_destroy", 
                "_ZN7QWidgetC1EPS_6QFlagsIN2Qt10WindowTypeEE", 
                "jack_client_open", 
                "_ZN6QMutex14unlockInternalEv", 
                "_ZN7QWidget9moveEventEP10QMoveEvent", 
                "_ZThn16_NK7QWidget11paintEngineEv", 
                "_ZN7QWidget14dragEnterEventEP15QDragEnterEvent", 
                "_ZN11QGridLayout9addWidgetEP7QWidgetiiii6QFlagsIN2Qt13AlignmentFlagEE", 
                "_ZN11QMainWindowC2EP7QWidget6QFlagsIN2Qt10WindowTypeEE", 
                "_ZN10QValidatorC2EP7QObject", 
                "_ZN11QMainWindow11qt_metacallEN11QMetaObject4CallEiPPv", 
                "_ZdlPvm", 
                "jack_port_get_buffer", 
                "_ZN7QWidget11actionEventEP12QActionEvent", 
                "_ZN6QLabelC1EP7QWidget6QFlagsIN2Qt10WindowTypeEE", 
                "_ZN7QObject7connectEPKS_PKcS1_S3_N2Qt14ConnectionTypeE", 
                "_ZNK7QWidget11paintEngineEv", 
                "strcmp", 
                "snd_seq_open", 
                "_ZN7QActionC1EP7QObject", 
                "jack_midi_get_event_count", 
                "_ZN7QObject11eventFilterEPS_P6QEvent", 
                "snd_seq_close", 
                "_ZNK7QWidget10sizePolicyEv", 
                "_ZN5QMenu8setTitleERK7QString", 
                "_ZN5QMenuC1EP7QWidget", 
                "_ZN9QLineEditC1EP7QWidget", 
                "_ZN7QWidget14setMaximumSizeEii", 
                "_ZThn16_NK7QWidget6metricEN12QPaintDevice17PaintDeviceMetricE", 
                "jack_activate", 
                "snd_seq_poll_descriptors", 
                "_ZN7QWidget12setWhatsThisERK7QString", 
                "jack_port_unregister", 
                "_ZN11QMetaObject8addGuardEPP7QObject", 
                "lash_get_event", 
                "_ZN11QMessageBox7setTextERK7QString", 
                "_ZNK7QWidget6metricEN12QPaintDevice17PaintDeviceMetricE", 
                "_ZN7QString6appendERKS_", 
                "_ZN7QWidget8x11EventEP7_XEvent", 
                "_ZN7QWidget10setVisibleEb", 
                "snd_seq_port_info_set_port_specified", 
                "lash_jack_client_name", 
                "snd_seq_port_info_set_capability", 
                "_ZN7QWidget17mouseReleaseEventEP11QMouseEvent", 
                "_ZN11QTextStreamlsERK7QString", 
                "_ZN11QTextStreamrsER7QString", 
                "_ZN11QMessageBoxC1EP7QWidget", 
                "_ZN7QObject11deleteLaterEv", 
                "jack_deactivate", 
                "_ZN7QObject10childEventEP11QChildEvent", 
                "_ZN11QMainWindow16contextMenuEventEP17QContextMenuEvent", 
                "snd_seq_port_info_set_type", 
                "_ZN7QWidget11changeEventEP6QEvent", 
                "jack_client_close", 
                "free", 
                "lash_extract_args", 
                "_Znwm", 
                "_ZN7QWidget13dragMoveEventEP14QDragMoveEvent", 
                "_ZN7QWidget11setGeometryERK5QRect", 
                "_ZN10QValidatorD2Ev", 
                "_ZN15QAbstractButton10setCheckedEb", 
                "jack_set_process_callback", 
                "_ZN9QTextEdit6appendERK7QString", 
                "snd_seq_port_info_set_name", 
                "snd_seq_client_id", 
                "_ZN7QWidget14setMinimumSizeEii", 
                "__gmon_start__", 
                "_ZNK7QWidget15minimumSizeHintEv", 
                "_ZN11QMessageBox9addButtonENS_14StandardButtonE", 
                "lash_event_destroy", 
                "_ZN6QMutex6unlockEv", 
                "_ZNK7QWidget14heightForWidthEi", 
                "_ZN7QObject13connectNotifyEPKc", 
                "_ZN7QWidget13keyPressEventEP9QKeyEvent", 
                "_ZN7QWidget11styleChangeER6QStyle", 
                "_ZNK5QFile6existsEv", 
                "_ZN7QWidget14dragLeaveEventEP15QDragLeaveEvent", 
                "memset", 
                "_ZN7QWidget14setWindowTitleERK7QString", 
                "_ZN9QLineEdit12setInputMaskERK7QString", 
                "lash_event_get_string", 
                "_ZN7QThread5startENS_8PriorityE", 
                "_ZN7QWidget9showEventEP10QShowEvent", 
                "_ZN10QValidator11qt_metacastEPKc", 
                "_ZN10QWhatsThis18enterWhatsThisModeEv", 
                "_ZN15QAbstractButton7setTextERK7QString", 
                "_ZN7QWidget13enabledChangeEb", 
                "_ZN7QWidget9hideEventEP10QHideEvent", 
                "lash_config_get_value", 
                "_ZN12QApplicationD1Ev", 
                "_ZN6QMutexC1ENS_13RecursionModeE", 
                "_ZN7QObject10timerEventEP11QTimerEvent", 
                "lash_alsa_client_id", 
                "_ZN11QMainWindow10setMenuBarEP8QMenuBar", 
                "lash_config_get_value_size", 
                "_ZN7QDialog4execEv", 
                "_ZN7QString8vsprintfEPKcP13__va_list_tag", 
                "_ZNK10QValidator5fixupER7QString", 
                "_ZN10QStatusBarC1EP7QWidget", 
                "_ZN7QPixmapC1ERK7QStringPKc6QFlagsIN2Qt19ImageConversionFlagEE", 
                "_ZN7QPixmapD1Ev", 
                "_ZN7QString16fromAscii_helperEPKci", 
                "_ZN6QMutexD1Ev", 
                "_ZN4QDir8homePathEv", 
                "_ZN7QWidget11tabletEventEP12QTabletEvent", 
                "_ZN11QGridLayoutC1Ev", 
                "_ZN7QString8fromUtf8EPKci", 
                "jack_transport_stop", 
                "jack_transport_reposition", 
                "_ZN11QTextStreamrsERi", 
                "_ZN11QPushButtonC1EP7QWidget", 
                "_ZN5QFile6existsERK7QString", 
                "_ZN7QWidget14languageChangeEv", 
                "_ZNK7QObject10objectNameEv", 
                "_ZN7QWidget18focusNextPrevChildEb", 
                "__gxx_personality_v0", 
                "_ZN11QMetaObject12invokeMethodEP7QObjectPKcN2Qt14ConnectionTypeE22QGenericReturnArgument16QGenericArgumentS7_S7_S7_S7_S7_S7_S7_S7_S7_", 
                "_ZN7QThreadD2Ev", 
                "_ZN7QAction7setTextERK7QString", 
                "lash_init", 
                "snd_seq_port_info_set_port", 
                "snd_seq_create_port", 
                "_ZN7QWidget11setTabOrderEPS_S0_", 
                "_ZN6QFrame12setLineWidthEi", 
                "poll", 
                "_ZN11QTextStreamlsEi", 
                "_ZN7QWidget10paintEventEP11QPaintEvent", 
                "snd_seq_port_info_sizeof", 
                "_ZN7QWidget13paletteChangeERK8QPalette", 
                "lash_get_config", 
                "_ZN9QTextEditC1EP7QWidget", 
                "_ZNK15QAbstractButton9isCheckedEv", 
                "_ZN7QWidget5closeEv", 
                "_ZN11QMainWindow16setCentralWidgetEP7QWidget", 
                "_ZN9QLineEdit12setMaxLengthEi", 
                "_ZNK7QString5toIntEPbi", 
                "_ZN7QThread4waitEm", 
                "_ZN7QWidget13focusOutEventEP11QFocusEvent", 
                "_ZN6QLabel7setTextERK7QString", 
                "_ZNK9QLineEdit4textEv", 
                "_ZN5QIconD1Ev", 
                "_ZN7QWidget11resizeEventEP12QResizeEvent", 
                "_ZN7QWidget10leaveEventEP6QEvent", 
                "_ZN6QMutex4lockEv", 
                "_ZN9QLineEdit7setTextERK7QString", 
                "lash_config_get_key", 
                "_ZN9QTextEdit11setReadOnlyEb", 
                "_ZN7QWidget9dropEventEP10QDropEvent", 
                "jack_transport_query", 
                "_ZN7QWidget22windowActivationChangeEb", 
                "_ZN7QWidget15keyReleaseEventEP9QKeyEvent", 
                "_ZN7QWidget9addActionEP7QAction", 
                "_ZN11QMainWindow15createPopupMenuEv", 
                "_ZN7QWidget14mouseMoveEventEP11QMouseEvent", 
                "_ZN7QString4freeEPNS_4DataE", 
                "_ZN10QValidator11qt_metacallEN11QMetaObject4CallEiPPv", 
                "_ZN7QObject13setObjectNameERK7QString", 
                "_ZN10QBoxLayout9addWidgetEP7QWidgeti6QFlagsIN2Qt13AlignmentFlagEE", 
                "_ZN11QMetaObject18connectSlotsByNameEP7QObject", 
                "_ZN7QString6numberEii", 
                "_ZN7QWidget15mousePressEventEP11QMouseEvent", 
                "_ZN7QThreadC2EP7QObject", 
                "jack_transport_start", 
                "_ZN7QWidget10enterEventEP6QEvent", 
                "_ZN7QObject5eventEP6QEvent", 
                "_ZN12QApplication4execEv", 
                "_ZN11QVBoxLayoutC1EP7QWidget", 
                "_ZNK5QFile5errorEv", 
                "_ZN10QBoxLayout9addLayoutEP7QLayouti", 
                "_ZNK7QWidget7devTypeEv", 
                "_Z4endlR11QTextStream", 
                "_ZN7QWidget6resizeERK5QSize", 
                "_ZN7QString9fromAsciiEPKci", 
                "_ZN7QWidget10wheelEventEP11QWheelEvent", 
                "_ZN7QString6numberEji", 
                "_ZN6QMutex12lockInternalEv", 
                "_ZN16QCoreApplication9translateEPKcS1_S1_NS_8EncodingE", 
                "malloc", 
                "jack_port_register", 
                "_ZN5QIconC1ERK7QPixmap", 
                "_ZN11QMainWindow11qt_metacastEPKc", 
                "_ZN9QLineEdit12setValidatorEPK10QValidator", 
                "_ZN11QMainWindow12setStatusBarEP10QStatusBar", 
                "_ZN11QMetaObject11removeGuardEPP7QObject", 
                "_ZN11QTextStreamD1Ev", 
                "snd_seq_port_info_set_midi_channels"
            ], 
            "rpm": "qjackmmc-4-15.fc27.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Applications/Multimedia", 
            "Name": " qjackmmc", 
            "License": " GPLv2+", 
            "URL": " http://sourceforge.net/projects/jackctlmmc", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-09.phx2.fedoraproject.org", 
            "Description": "\nQJackMMC is a Qt based program that can connect to a device or program that\nemits MIDI Machine Control (MMC) and allow it to drive JACK transport, which in\nturn can control other programs. QJackMMC is the Qt version of jackctlmmc.\n", 
            "Build Date": " Thu 03 Aug 2017 06:21:12 AM EDT", 
            "Source RPM": " jackctlmmc-4-15.fc27.src.rpm", 
            "Version": " 4", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Fri 04 Aug 2017 12:34:17 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 15.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Qt application that controls JACK transport via Midi", 
            "Size": " 91284"
        }
    }
}