{
    "results": {
        "usr/lib64/libquazip_so_1_0_0": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/libquazip.so.1.0.0", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "_ZN9QDateTimeaSERKS_", 
                "_ZN7QObject11customEventEP6QEvent", 
                "_ZN9QFileInfo7setFileERK7QString", 
                "_ZN9QIODevice4readEPcx", 
                "gzflush", 
                "__cxa_finalize", 
                "_ZN9QFileInfoD1Ev", 
                "memmove", 
                "rand", 
                "_ZNK9QFileInfo12lastModifiedEv", 
                "_ZN9QListData6detachEi", 
                "_ZN7QString13fromLocal8BitEPKci", 
                "_ZNK9QFileInfo16absoluteFilePathEv", 
                "_ZNK10QTextCodec11fromUnicodeERK7QString", 
                "srand", 
                "_ZN9QListData11detach_growEPii", 
                "_ZN5QFile5closeEv", 
                "_ZNK9QIODevice11errorStringEv", 
                "_ZN7QObject5eventEP6QEvent", 
                "_ZNK11QMetaObject2trEPKcS1_", 
                "_ZN7QString4freeEPNS_4DataE", 
                "_ZN9QIODevice5closeEv", 
                "memset", 
                "_ZN9QIODevice4seekEx", 
                "get_crc_table", 
                "_ZN7QObject13connectNotifyEPKc", 
                "_ZNK9QFileInfo7createdEv", 
                "_ZN9QDateTimeD1Ev", 
                "_ZNK9QIODevice4sizeEv", 
                "_ZN10QByteArray7reallocEi", 
                "_ZNK7QString3midEii", 
                "_Z5qHashRK7QString", 
                "_ZN10QByteArrayC1EPKc", 
                "_ZNK4QDir6mkpathERK7QString", 
                "_ZN5QTimeC1Eiiii", 
                "_ZN5QDateC1Eiii", 
                "memcpy", 
                "_ZN9QIODevice12readLineDataEPcx", 
                "_ZNK7QString5splitERK5QCharNS_13SplitBehaviorEN2Qt15CaseSensitivityE", 
                "_ZN4QDirC1ERK7QString", 
                "_ZNK9QIODevice3posEv", 
                "_ZNK7QString10startsWithERKS_N2Qt15CaseSensitivityE", 
                "_ZNK7QString4leftEi", 
                "_ZN9QDateTimeC1ERK5QDateRK5QTimeN2Qt8TimeSpecE", 
                "_ZNK4QDir16relativeFilePathERK7QString", 
                "_ZN5QFile10encodeNameERK7QString", 
                "_ZN9QIODevice11qt_metacastEPKc", 
                "_ZN7QObject16disconnectNotifyEPKc", 
                "_ZN10QTextCodec14codecForLocaleEv", 
                "_ZN4QDirD1Ev", 
                "_ZNK4QDir13entryInfoListE6QFlagsINS_6FilterEES0_INS_8SortFlagEE", 
                "malloc", 
                "_Znam", 
                "_ZNK4QDir7dirNameEv", 
                "_ZNK7QString7indexOfE5QChariN2Qt15CaseSensitivityE", 
                "_ZNK4QDir16absoluteFilePathERK7QString", 
                "_ZNK7QString3argExiiRK5QChar", 
                "_ZN9QHashData6rehashEi", 
                "_ZNK9QDateTimeltERKS_", 
                "_ZN10QByteArrayaSERKS_", 
                "_ZN10QByteArray6resizeEi", 
                "_ZNK5QFile8fileNameEv", 
                "_ZN9QDateTimeC1ERKS_", 
                "_ZN9QIODevice5resetEv", 
                "_ZNK9QFileInfo8fileNameEv", 
                "_ZN5QCharC1Ec", 
                "_Znwm", 
                "_ZN9QDateTime15currentDateTimeEv", 
                "inflateInit_", 
                "_ZN5QFile11setFileNameERK7QString", 
                "_ZN9QFileInfoC1ERK7QString", 
                "_ZNK9QFileInfo4pathEv", 
                "__cxa_end_catch", 
                "_ZNK5QTime6secondEv", 
                "_Unwind_Resume", 
                "_ZN9QIODeviceC2Ev", 
                "_ZNK5QDate4yearEv", 
                "_ZNK10QTextCodec9toUnicodeERK10QByteArray", 
                "deflateEnd", 
                "_ZN10QByteArrayC1Eic", 
                "strcmp", 
                "_ZNK9QFileInfo11permissionsEv", 
                "_ZNK7QString7compareERKS_N2Qt15CaseSensitivityE", 
                "_ZN7QString16fromAscii_helperEPKci", 
                "__cxa_rethrow", 
                "inflateInit2_", 
                "_ZNK9QIODevice12bytesToWriteEv", 
                "_ZNK9QFileInfo8lastReadEv", 
                "_ZN9QIODevice11qt_metacallEN11QMetaObject4CallEiPPv", 
                "_ZN9QDateTimeC1Ev", 
                "_ZNK9QFileInfo12absolutePathEv", 
                "_ZNK5QDate3dayEv", 
                "_ZNK5QDate5monthEv", 
                "_ZNK10QTextCodec9toUnicodeEPKc", 
                "gzclose", 
                "time", 
                "_ZN9QListData6appendEv", 
                "_ZN10QTextCodec12codecForNameERK10QByteArray", 
                "inflate", 
                "_ZNK7QString18localeAwareCompareERKS_", 
                "_ZNK5QTime6minuteEv", 
                "_ZN5QFileC1ERK7QString", 
                "_ZNK9QDateTime4dateEv", 
                "_ZN7QStringaSERKS_", 
                "gzwrite", 
                "_ZN5QFile6removeERK7QString", 
                "_ZN7QObject10timerEventEP11QTimerEvent", 
                "__stack_chk_fail", 
                "_ZN5QFileD1Ev", 
                "crc32", 
                "_ZdaPv", 
                "__gxx_personality_v0", 
                "_ZNK9QFileInfo6existsEv", 
                "_ZNK7QString7toLowerEv", 
                "_ZN9QFileInfoC1Ev", 
                "deflate", 
                "_ZNK9QDateTime8addMSecsEx", 
                "_ZNK7QString10startsWithERK5QCharN2Qt15CaseSensitivityE", 
                "_ZN7QString6appendERKS_", 
                "_ZNK9QDateTime4timeEv", 
                "_ITM_registerTMCloneTable", 
                "_ZNK9QIODevice8openModeEv", 
                "gzdopen", 
                "gzopen", 
                "deflateInit2_", 
                "adler32", 
                "_ZNK9QIODevice14bytesAvailableEv", 
                "_ZNK9QFileInfo5isDirEv", 
                "_ITM_deregisterTMCloneTable", 
                "_ZN5QFileC1Ev", 
                "free", 
                "_ZdlPvm", 
                "_ZNK9QFileInfo9isSymLinkEv", 
                "__gmon_start__", 
                "inflateEnd", 
                "_ZNK4QDir6existsEv", 
                "_ZN9QHashData14detach_helper2EPFvPNS_4NodeEPvEPFvS1_Eii", 
                "_ZN9QIODevice5writeEPKcx", 
                "_ZN4QDir9cleanPathERK7QString", 
                "_ZN5QFile14setPermissionsE6QFlagsINS_10PermissionEE", 
                "_ZNK9QDateTime7msecsToERKS_", 
                "_ZNK7QString8endsWithERK5QCharN2Qt15CaseSensitivityE", 
                "_ZNK7QStringeqERK13QLatin1String", 
                "strlen", 
                "_ZN9QIODevice11setOpenModeE6QFlagsINS_12OpenModeFlagEE", 
                "_ZNK7QString11lastIndexOfE5QChariN2Qt15CaseSensitivityE", 
                "_ZN9QIODeviceD2Ev", 
                "_ZN7QString4chopEi", 
                "_ZN7QString9fromAsciiEPKci", 
                "_ZN7QObject7connectEPKS_PKcS1_S3_N2Qt14ConnectionTypeE", 
                "_ZN5QFile4openE6QFlagsIN9QIODevice12OpenModeFlagEE", 
                "_ZNK11QMetaObject6trUtf8EPKcS1_", 
                "_ZN9QIODevice16waitForReadyReadEi", 
                "_ZN9QHashData12allocateNodeEi", 
                "deflateInit_", 
                "_ZNK9QIODevice5atEndEv", 
                "_Z5qFreePv", 
                "_ZNK7QStringeqERKS_", 
                "_ZNK9QDateTimeeqERKS_", 
                "_ZN9QHashData11free_helperEPFvPNS_4NodeEE", 
                "_ZN9QIODevice19waitForBytesWrittenEi", 
                "_ZN7QObject10childEventEP11QChildEvent", 
                "_ZNK7QString6toUtf8Ev", 
                "_ZNK9QIODevice11canReadLineEv", 
                "_ZN9QFileInfoC1ERKS_", 
                "_ZNK9QFileInfo6isFileEv", 
                "_ZNK5QTime4hourEv", 
                "_ZNK9QDateTime6isNullEv", 
                "_Z8qWarningPKcz", 
                "gzread", 
                "_ZN10QByteArray6expandEi", 
                "_ZN9QIODevice14setErrorStringERK7QString", 
                "_ZN7QObject11eventFilterEPS_P6QEvent", 
                "_ZN9QtPrivate20QStringList_containsEPK11QStringListRK7QStringN2Qt15CaseSensitivityE", 
                "_ZNK9QIODevice6isOpenEv", 
                "_ZNK4QDir8filePathERK7QString", 
                "_ZN9QIODeviceC2EP7QObject", 
                "__cxa_begin_catch"
            ], 
            "rpm": "quazip-0.7.3-1.fc26.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " quazip", 
            "License": " GPLv2+ or LGPLv2+", 
            "URL": " http://quazip.sourceforge.net/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-15.phx2.fedoraproject.org", 
            "Description": "\nQuaZIP is a simple C++ wrapper over Gilles Vollant's ZIP/UNZIP package that\ncan be used to access ZIP archives. It uses Trolltech's Qt toolkit.\n\nQuaZIP allows you to access files inside ZIP archives using QIODevice API,\nand - yes! - that means that you can also use QTextStream, QDataStream or\nwhatever you would like to use on your zipped files.\n\nQuaZIP provides complete abstraction of the ZIP/UNZIP API, for both reading\nfrom and writing to ZIP archives.\n", 
            "Build Date": " Mon 13 Feb 2017 09:53:56 AM EST", 
            "Source RPM": " quazip-0.7.3-1.fc26.src.rpm", 
            "Version": " 0.7.3", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Sat 25 Feb 2017 05:17:55 PM EST, Key ID f55e7430f5282ee4", 
            "Release": " 1.fc26", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Qt/C++ wrapper for the minizip library", 
            "Size": " 227189"
        }
    }
}