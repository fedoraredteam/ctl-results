{
    "results": {
        "usr/lib64/ruby/vendor_ruby/redland_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/ruby/vendor_ruby/redland.so", 
            "complexity": {
                "r2aa": "failed: 'NoneType' object is not iterable"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "librdf_node_get_type", 
                "librdf_parser_parse_counted_string_into_model", 
                "librdf_digest_init", 
                "raptor_version_string", 
                "librdf_model_contains_context", 
                "librdf_query_execute", 
                "librdf_query_results_get_count", 
                "rb_big2ulong", 
                "librdf_query_results_is_graph", 
                "rb_iv_get", 
                "librdf_node_get_uri", 
                "librdf_node_equals", 
                "librdf_model_add_statements", 
                "librdf_free_iterator", 
                "raptor_locator_line", 
                "librdf_parser_check_name", 
                "librdf_parser_get_namespaces_seen_uri", 
                "librdf_free_digest", 
                "rb_define_module", 
                "librdf_query_results_is_syntax", 
                "librdf_new_digest", 
                "librdf_serializer_serialize_model_to_file", 
                "rb_raise", 
                "librdf_query_results_to_string", 
                "librdf_query_get_offset", 
                "librdf_digest_to_string", 
                "rasqal_version_major", 
                "rb_funcall", 
                "librdf_free_storage", 
                "memcpy", 
                "librdf_node_is_literal", 
                "raptor_version_decimal", 
                "librdf_free_uri", 
                "librdf_new_node_from_typed_literal", 
                "librdf_query_results_is_bindings", 
                "librdf_free_stream", 
                "librdf_new_statement_from_statement", 
                "librdf_new_node_from_uri_local_name", 
                "librdf_test_warning", 
                "rb_rescue", 
                "rb_obj_classname", 
                "librdf_query_results_next", 
                "librdf_statement_equals", 
                "librdf_node_get_blank_identifier", 
                "librdf_new_node_from_uri_string", 
                "librdf_model_add_statement", 
                "librdf_model_contains_statement", 
                "rb_gv_get", 
                "librdf_model_context_add_statements", 
                "librdf_new_statement_from_nodes", 
                "librdf_parser_get_namespaces_seen_count", 
                "librdf_model_context_as_stream", 
                "librdf_free_hash", 
                "raptor_locator_uri", 
                "rb_big2long", 
                "librdf_model_get_feature", 
                "librdf_model_query_execute", 
                "librdf_statement_to_string", 
                "librdf_model_remove_statement", 
                "librdf_new_query", 
                "librdf_free_node", 
                "librdf_digest_update", 
                "librdf_statement_get_subject", 
                "librdf_new_node", 
                "librdf_model_size", 
                "librdf_stream_get_context", 
                "librdf_free_serializer", 
                "librdf_model_get_sources", 
                "rb_inspect", 
                "librdf_test_error", 
                "librdf_model_get_contexts", 
                "librdf_new_parser", 
                "librdf_new_hash_from_array_of_strings", 
                "librdf_new_node_from_blank_identifier", 
                "librdf_query_results_get_binding_name", 
                "librdf_node_get_literal_value", 
                "librdf_node_get_li_ordinal", 
                "librdf_node_is_blank", 
                "rb_str_cat", 
                "librdf_free_world", 
                "rb_str_append", 
                "librdf_stream_end", 
                "librdf_free_parser", 
                "librdf_statement_get_object", 
                "librdf_model_context_remove_statement", 
                "librdf_model_load", 
                "rb_const_get", 
                "rb_str_cat_cstr", 
                "librdf_model_find_statements", 
                "librdf_node_get_literal_value_is_wf_xml", 
                "librdf_model_to_string", 
                "_ITM_deregisterTMCloneTable", 
                "librdf_parser_parse_string_into_model", 
                "librdf_query_set_limit", 
                "strcmp", 
                "rb_define_module_function", 
                "_ITM_registerTMCloneTable", 
                "librdf_serializer_set_feature", 
                "librdf_node_get_literal_value_as_latin1", 
                "librdf_new_hash_from_string", 
                "librdf_model_add", 
                "librdf_free_model", 
                "__assert_fail", 
                "librdf_model_set_feature", 
                "librdf_world_open", 
                "rb_define_class_under", 
                "rb_check_type", 
                "__gmon_start__", 
                "raptor_locator_byte", 
                "librdf_model_has_arc_in", 
                "rb_hash_new", 
                "librdf_parser_get_namespaces_seen_prefix", 
                "librdf_model_context_add_statement", 
                "rb_ivar_get", 
                "librdf_new_uri_from_uri", 
                "rb_data_object_wrap", 
                "librdf_uri_to_string", 
                "librdf_log_message_facility", 
                "rb_hash_aset", 
                "librdf_new_query_from_query", 
                "librdf_model_transaction_rollback", 
                "librdf_statement_set_predicate", 
                "librdf_statement_get_predicate", 
                "librdf_log_message_locator", 
                "rb_define_singleton_method", 
                "librdf_statement_set_object", 
                "librdf_new_model", 
                "librdf_serializer_get_feature", 
                "rb_ivar_set", 
                "librdf_new_node_from_uri", 
                "librdf_iterator_get_object", 
                "rb_string_value_ptr", 
                "librdf_query_results_finished", 
                "librdf_new_statement", 
                "librdf_uri_compare", 
                "librdf_free_query", 
                "rb_define_readonly_variable", 
                "malloc", 
                "librdf_statement_is_complete", 
                "librdf_model_add_typed_literal_statement", 
                "librdf_new_node_from_literal", 
                "librdf_query_results_to_file", 
                "librdf_query_results_as_stream", 
                "rb_str_new_cstr", 
                "librdf_stream_get_object", 
                "librdf_model_transaction_commit", 
                "strlen", 
                "librdf_model_get_arc", 
                "librdf_new_uri", 
                "librdf_query_get_limit", 
                "librdf_parser_parse_string_as_stream", 
                "librdf_serializer_serialize_stream_to_string", 
                "librdf_query_results_to_string2", 
                "librdf_serializer_serialize_model_to_string", 
                "librdf_world_set_logger", 
                "librdf_query_results_to_file2", 
                "librdf_iterator_end", 
                "librdf_iterator_next", 
                "librdf_query_results_is_boolean", 
                "librdf_query_results_get_bindings_count", 
                "librdf_node_to_string", 
                "rasqal_version_minor", 
                "rb_undef_method", 
                "rb_define_class", 
                "librdf_log_message_message", 
                "__stack_chk_fail", 
                "librdf_parser_parse_counted_string_as_stream", 
                "librdf_model_transaction_start", 
                "librdf_new_storage", 
                "librdf_statement_set_subject", 
                "librdf_log_message_code", 
                "librdf_parser_parse_as_stream", 
                "librdf_model_context_remove_statements", 
                "rb_intern", 
                "rb_iv_set", 
                "librdf_query_results_get_binding_value_by_name", 
                "librdf_new_storage_from_storage", 
                "librdf_new_world", 
                "librdf_model_as_stream", 
                "rb_gv_set", 
                "librdf_node_is_resource", 
                "librdf_model_get_arcs", 
                "librdf_digest_final", 
                "librdf_parser_get_accept_header", 
                "librdf_free_statement", 
                "raptor_version_major", 
                "librdf_stream_next", 
                "librdf_model_get_arcs_in", 
                "librdf_parser_guess_name", 
                "librdf_model_add_string_literal_statement", 
                "rb_num2ulong", 
                "rb_hash_aref", 
                "librdf_model_sync", 
                "librdf_query_results_get_binding_value", 
                "librdf_parser_parse_into_model", 
                "librdf_uri_equals", 
                "raptor_version_minor", 
                "rasqal_version_string", 
                "librdf_model_get_arcs_out", 
                "rb_num2long", 
                "raptor_locator_column", 
                "librdf_new_serializer", 
                "librdf_serializer_check_name", 
                "librdf_log_message_level", 
                "librdf_parser_guess_name2", 
                "librdf_free_query_results", 
                "librdf_query_set_offset", 
                "rasqal_version_release", 
                "librdf_world_get_feature", 
                "librdf_world_set_feature", 
                "librdf_hash_to_string", 
                "librdf_statement_match", 
                "librdf_parser_get_feature", 
                "librdf_model_has_arc_out", 
                "librdf_serializer_set_namespace", 
                "librdf_model_get_targets", 
                "librdf_node_get_literal_value_language", 
                "librdf_digest_update_string", 
                "raptor_locator_file", 
                "librdf_new_model_with_options", 
                "raptor_version_release", 
                "librdf_new_model_from_model", 
                "librdf_query_results_get_boolean", 
                "librdf_model_get_source", 
                "rb_str_new", 
                "librdf_new_uri_from_filename", 
                "__sprintf_chk", 
                "__cxa_finalize", 
                "librdf_serializer_serialize_stream_to_file", 
                "rasqal_version_decimal", 
                "librdf_model_find_statements_in_context", 
                "rb_obj_is_kind_of", 
                "free", 
                "librdf_new_node_from_normalised_uri_string", 
                "librdf_parser_set_feature", 
                "rb_str_new_static", 
                "rb_int2big", 
                "librdf_new_hash", 
                "librdf_node_get_literal_value_datatype_uri", 
                "librdf_model_get_target"
            ], 
            "rpm": "ruby-redland-1.0.16.1-23.fc27.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Development/Languages", 
            "Name": " ruby-redland", 
            "License": " LGPLv2+ or GPLv2+ or ASL 2.0", 
            "URL": " http://librdf.org/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-17.phx2.fedoraproject.org", 
            "Description": "\nThe ruby-redland package contains the parts of Redland that provide\nan interface to Ruby.\n", 
            "Build Date": " Tue 26 Sep 2017 05:46:48 AM EDT", 
            "Source RPM": " redland-bindings-1.0.16.1-23.fc27.src.rpm", 
            "Version": " 1.0.16.1", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Tue 26 Sep 2017 05:52:14 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 23.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Ruby modules for the Redland RDF library", 
            "Size": " 208489"
        }
    }
}