{
    "results": {
        "usr/lib/librtmidi_so_2_1_0": {
            "report-functions": [
                "read", 
                "__stack_chk_fail", 
                "snd_seq_client_info_get_name", 
                "snd_seq_port_info_set_capability", 
                "jack_port_name", 
                "snd_seq_port_info_sizeof", 
                "_ZNSo5flushEv", 
                "snd_seq_free_event", 
                "_ZNSt8ios_baseC2Ev", 
                "pthread_create", 
                "free", 
                "jack_ringbuffer_create", 
                "strlen", 
                "jack_client_open", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "close", 
                "snd_seq_create_port", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_", 
                "snd_seq_alloc_named_queue", 
                "jack_connect", 
                "__cxa_finalize", 
                "jack_get_ports", 
                "snd_midi_event_encode", 
                "snd_seq_client_info_get_client", 
                "snd_seq_port_info_set_client", 
                "snd_seq_port_info_set_type", 
                "snd_seq_port_info_set_midi_channels", 
                "jack_ringbuffer_read_space", 
                "_ITM_deregisterTMCloneTable", 
                "snd_seq_create_simple_port", 
                "__gxx_personality_v0", 
                "jack_ringbuffer_read", 
                "__cxa_allocate_exception", 
                "snd_seq_poll_descriptors_count", 
                "snd_seq_delete_port", 
                "snd_seq_unsubscribe_port", 
                "jack_midi_event_reserve", 
                "snd_midi_event_free", 
                "pthread_attr_setdetachstate", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate", 
                "snd_seq_port_info_get_type", 
                "pthread_self", 
                "pthread_attr_init", 
                "__gmon_start__", 
                "_ZNSt8ios_base4InitD1Ev", 
                "snd_seq_set_queue_tempo", 
                "snd_seq_poll_descriptors", 
                "snd_seq_queue_tempo_set_tempo", 
                "snd_seq_free_queue", 
                "_ZSt24__throw_out_of_range_fmtPKcz", 
                "jack_ringbuffer_write", 
                "_ZNSt6localeC1Ev", 
                "_ZdlPvj", 
                "_ZSt16__throw_bad_castv", 
                "jack_midi_get_event_count", 
                "perror", 
                "_ZNSt8ios_base4InitC1Ev", 
                "snd_seq_set_client_name", 
                "_ZNSolsEi", 
                "jack_get_time", 
                "memmove", 
                "_ZdaPvj", 
                "_Unwind_Resume", 
                "snd_seq_close", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_i", 
                "write", 
                "_ZNSo9_M_insertImEERSoT_", 
                "pipe", 
                "snd_seq_client_info_set_client", 
                "snd_seq_queue_tempo_sizeof", 
                "snd_seq_query_next_client", 
                "_ZNSt6localeD1Ev", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj", 
                "snd_seq_event_input", 
                "jack_midi_event_get", 
                "pthread_attr_setschedpolicy", 
                "snd_seq_client_info_sizeof", 
                "_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "snd_seq_event_output", 
                "jack_port_register", 
                "snd_seq_port_info_set_port", 
                "jack_ringbuffer_free", 
                "jack_client_close", 
                "__cxa_throw", 
                "snd_seq_port_info_set_timestamp_real", 
                "snd_seq_port_subscribe_set_time_real", 
                "pthread_attr_destroy", 
                "snd_midi_event_resize_buffer", 
                "snd_seq_port_subscribe_set_dest", 
                "_ZdlPv", 
                "jack_activate", 
                "snd_seq_queue_tempo_set_ppq", 
                "snd_seq_port_subscribe_set_sender", 
                "__cxa_pure_virtual", 
                "snd_midi_event_decode", 
                "_Znaj", 
                "snd_midi_event_no_status", 
                "__cxa_call_unexpected", 
                "snd_seq_client_id", 
                "_Znwj", 
                "snd_seq_drain_output", 
                "_ITM_registerTMCloneTable", 
                "jack_port_get_buffer", 
                "snd_seq_port_info_get_client", 
                "snd_seq_port_info_set_timestamping", 
                "snd_seq_port_subscribe_malloc", 
                "snd_seq_open", 
                "_ZNSo3putEc", 
                "malloc", 
                "snd_seq_port_subscribe_free", 
                "snd_seq_event_input_pending", 
                "_ZSt19__throw_logic_errorPKc", 
                "jack_set_process_callback", 
                "_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc", 
                "_ZSt20__throw_length_errorPKc", 
                "snd_seq_subscribe_port", 
                "__cxa_atexit", 
                "_ZNKSt5ctypeIcE13_M_widen_initEv", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj", 
                "snd_seq_port_info_set_timestamp_queue", 
                "snd_seq_port_subscribe_set_time_update", 
                "snd_midi_event_init", 
                "snd_seq_get_any_client_info", 
                "_ZNSt9exceptionD2Ev", 
                "jack_midi_clear_buffer", 
                "snd_seq_query_next_port", 
                "snd_midi_event_new", 
                "snd_seq_port_info_get_capability", 
                "snd_seq_port_info_get_port", 
                "snd_seq_control_queue", 
                "snd_seq_port_info_set_name", 
                "jack_port_unregister", 
                "poll"
            ], 
            "rpm": "rtmidi-2.1.0-9.fc27.i686.rpm", 
            "complexity": {
                "r2aa": {
                    "afCc": null, 
                    "afC": null
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/librtmidi.so.2.1.0"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " rtmidi", 
            "License": " MIT", 
            "URL": " http://www.music.mcgill.ca/~gary/rtmidi/index.html", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildhw-06.phx2.fedoraproject.org", 
            "Description": "\nRtMidi is a set of C++ classes (RtMidiIn and RtMidiOut) that provides a common\nAPI (Application Programming Interface) for realtime MIDI input/output across\nLinux (ALSA & Jack), Macintosh OS X, Windows (Multimedia Library), and SGI\noperating systems. RtMidi significantly simplifies the process of interacting\nwith computer MIDI hardware and software. It was designed with the following\ngoals:\n* object oriented C++ design\n* simple, common API across all supported platforms\n* only two header files and one source file for easy inclusion in programming\n  projects\n* MIDI device enumeration\n", 
            "Build Date": " Fri 04 Aug 2017 01:31:12 PM EDT", 
            "Source RPM": " rtmidi-2.1.0-9.fc27.src.rpm", 
            "Version": " 2.1.0", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Sat 05 Aug 2017 12:41:55 PM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 9.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Library for realtime MIDI input/output (ALSA support)", 
            "Size": " 80748"
        }
    }
}