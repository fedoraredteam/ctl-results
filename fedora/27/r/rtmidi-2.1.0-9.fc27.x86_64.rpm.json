{
    "results": {
        "usr/lib64/librtmidi_so_2_1_0": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/librtmidi.so.2.1.0", 
            "complexity": {
                "r2aa": {
                    "afCc": null, 
                    "afC": null
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "jack_port_get_buffer", 
                "snd_seq_unsubscribe_port", 
                "jack_get_ports", 
                "snd_seq_port_subscribe_malloc", 
                "_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc", 
                "jack_ringbuffer_free", 
                "snd_seq_query_next_client", 
                "snd_seq_poll_descriptors", 
                "memset", 
                "snd_seq_port_subscribe_free", 
                "__gmon_start__", 
                "snd_seq_client_id", 
                "snd_seq_free_event", 
                "_ZSt16__throw_bad_castv", 
                "jack_midi_event_reserve", 
                "pipe", 
                "jack_ringbuffer_write", 
                "read", 
                "perror", 
                "_ZNSt8ios_baseC2Ev", 
                "jack_port_register", 
                "snd_seq_port_info_get_client", 
                "_ZNSt9exceptionD2Ev", 
                "jack_port_name", 
                "snd_seq_drain_output", 
                "snd_seq_port_info_get_port", 
                "pthread_attr_setschedpolicy", 
                "jack_connect", 
                "_Unwind_Resume", 
                "snd_seq_port_info_set_timestamping", 
                "__cxa_allocate_exception", 
                "free", 
                "_ZdlPv", 
                "snd_seq_port_subscribe_set_time_update", 
                "snd_seq_create_simple_port", 
                "jack_port_unregister", 
                "snd_seq_create_port", 
                "snd_seq_alloc_named_queue", 
                "poll", 
                "__cxa_call_unexpected", 
                "jack_get_time", 
                "snd_midi_event_free", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm", 
                "pthread_attr_setdetachstate", 
                "jack_midi_clear_buffer", 
                "snd_seq_delete_port", 
                "jack_ringbuffer_read_space", 
                "memcpy", 
                "write", 
                "snd_seq_event_input", 
                "pthread_attr_destroy", 
                "snd_midi_event_decode", 
                "_ZSt24__throw_out_of_range_fmtPKcz", 
                "snd_seq_control_queue", 
                "_ZdlPvm", 
                "snd_seq_port_info_set_type", 
                "close", 
                "strlen", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate", 
                "snd_midi_event_resize_buffer", 
                "snd_seq_poll_descriptors_count", 
                "_ZSt19__throw_logic_errorPKc", 
                "snd_midi_event_new", 
                "snd_seq_close", 
                "snd_seq_port_info_sizeof", 
                "__cxa_throw", 
                "snd_seq_open", 
                "snd_seq_port_subscribe_set_time_real", 
                "_ZNSt8ios_baseD2Ev", 
                "snd_seq_subscribe_port", 
                "jack_midi_get_event_count", 
                "snd_seq_port_info_set_name", 
                "jack_ringbuffer_read", 
                "snd_seq_port_info_set_timestamp_real", 
                "_Znwm", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_", 
                "snd_seq_query_next_port", 
                "snd_seq_client_info_sizeof", 
                "malloc", 
                "pthread_attr_init", 
                "snd_seq_set_queue_tempo", 
                "__cxa_pure_virtual", 
                "snd_midi_event_init", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm", 
                "__stack_chk_fail", 
                "snd_seq_port_info_set_client", 
                "snd_seq_event_input_pending", 
                "_ZNSo9_M_insertImEERSoT_", 
                "_ZSt20__throw_length_errorPKc", 
                "snd_seq_free_queue", 
                "snd_seq_event_output", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "snd_seq_client_info_get_client", 
                "_Znam", 
                "jack_client_open", 
                "snd_seq_port_info_get_capability", 
                "snd_seq_queue_tempo_set_ppq", 
                "snd_seq_port_info_set_port", 
                "snd_seq_port_info_set_midi_channels", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l", 
                "snd_midi_event_encode", 
                "_ZNKSt5ctypeIcE13_M_widen_initEv", 
                "snd_seq_client_info_get_name", 
                "_ZNSt6localeC1Ev", 
                "snd_midi_event_no_status", 
                "pthread_create", 
                "snd_seq_get_any_client_info", 
                "snd_seq_port_info_set_timestamp_queue", 
                "snd_seq_client_info_set_client", 
                "snd_seq_port_subscribe_set_dest", 
                "jack_ringbuffer_create", 
                "_ZNSo5flushEv", 
                "jack_client_close", 
                "snd_seq_queue_tempo_set_tempo", 
                "snd_seq_port_info_set_capability", 
                "snd_seq_set_client_name", 
                "_ZNSt8ios_base4InitD1Ev", 
                "jack_activate", 
                "jack_midi_event_get", 
                "__cxa_atexit", 
                "_ZdaPvm", 
                "_ITM_registerTMCloneTable", 
                "_ZNSo3putEc", 
                "snd_seq_queue_tempo_sizeof", 
                "pthread_self", 
                "memmove", 
                "_ZNSt6localeD1Ev", 
                "_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "snd_seq_port_info_get_type", 
                "_ITM_deregisterTMCloneTable", 
                "_ZNSt8ios_base4InitC1Ev", 
                "jack_set_process_callback", 
                "pthread_join", 
                "__gxx_personality_v0", 
                "_ZNSolsEi"
            ], 
            "rpm": "rtmidi-2.1.0-9.fc27.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " rtmidi", 
            "License": " MIT", 
            "URL": " http://www.music.mcgill.ca/~gary/rtmidi/index.html", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-08.phx2.fedoraproject.org", 
            "Description": "\nRtMidi is a set of C++ classes (RtMidiIn and RtMidiOut) that provides a common\nAPI (Application Programming Interface) for realtime MIDI input/output across\nLinux (ALSA & Jack), Macintosh OS X, Windows (Multimedia Library), and SGI\noperating systems. RtMidi significantly simplifies the process of interacting\nwith computer MIDI hardware and software. It was designed with the following\ngoals:\n* object oriented C++ design\n* simple, common API across all supported platforms\n* only two header files and one source file for easy inclusion in programming\n  projects\n* MIDI device enumeration\n", 
            "Build Date": " Fri 04 Aug 2017 01:30:55 PM EDT", 
            "Source RPM": " rtmidi-2.1.0-9.fc27.src.rpm", 
            "Version": " 2.1.0", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Sat 05 Aug 2017 12:41:48 PM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 9.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Library for realtime MIDI input/output (ALSA support)", 
            "Size": " 86216"
        }
    }
}