{
    "results": {
        "usr/lib/libjsonrpccpp-server_so_1_0_0": {
            "report-functions": [
                "socket", 
                "strlen", 
                "_ZNK4Json5ValueixEPKc", 
                "unlink", 
                "pthread_mutex_unlock", 
                "_ZSt17__throw_bad_allocv", 
                "_ZNSt15__exception_ptr13exception_ptr4swapERS0_", 
                "_ZNSt8ios_baseC2Ev", 
                "strcmp", 
                "MHD_create_response_from_buffer", 
                "_ZNSt18condition_variable10notify_oneEv", 
                "__cxa_rethrow", 
                "__cxa_pure_virtual", 
                "_ZNK4Json5Value7isArrayEv", 
                "_ZNK4Json5Value10isIntegralEv", 
                "_ZNSt13__future_base12_Result_baseC2Ev", 
                "_ZSt15future_categoryv", 
                "redisFree", 
                "_ZdlPv", 
                "_ZN4Json10FastWriterC1Ev", 
                "freeReplyObject", 
                "_ZN7jsonrpc19SpecificationParser14GetFileContentERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "_ZN7jsonrpc6Errors15GetErrorMessageB5cxx11Ei", 
                "_ZNSt13runtime_errorD1Ev", 
                "__cxa_free_exception", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_", 
                "_ZNK7jsonrpc16JsonRpcException10GetMessageB5cxx11Ev", 
                "_ZN4Json10FastWriter5writeB5cxx11ERKNS_5ValueE", 
                "listen", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj", 
                "_Znwj", 
                "_ZNSt18condition_variable10notify_allEv", 
                "select", 
                "_ZSt19__throw_logic_errorPKc", 
                "pthread_join", 
                "MHD_add_response_header", 
                "_ZNSt6localeC1Ev", 
                "_ZN7jsonrpc12StreamReader4ReadERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEic", 
                "_ZSt20__throw_system_errori", 
                "_Unwind_Resume", 
                "_ZNK7jsonrpc16JsonRpcException7GetDataEv", 
                "memcmp", 
                "_ZN4Json5ValueC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", 
                "redisCommand", 
                "__cxa_finalize", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj", 
                "_ZN4Json6WriterD2Ev", 
                "MHD_queue_response", 
                "__cxa_throw", 
                "_ZNSt13__future_base13_State_baseV211_Make_ready6_M_setEv", 
                "accept", 
                "_ZNK4Json5Value8isStringEv", 
                "__gxx_personality_v0", 
                "_ZNSt13runtime_errorC1EPKc", 
                "bind", 
                "MHD_stop_daemon", 
                "_ZNSt15__exception_ptr13exception_ptrC1EPv", 
                "pthread_mutex_lock", 
                "_ZN7jsonrpc12StreamReaderD1Ev", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "_ZNK4Json5Value8isObjectEv", 
                "MHD_is_feature_supported", 
                "_ZNSt6thread15_M_start_threadESt10unique_ptrINS_6_StateESt14default_deleteIS1_EEPFvvE", 
                "MHD_start_daemon", 
                "_ZSt17current_exceptionv", 
                "_ZNK7jsonrpc9Procedure18ValdiateParametersERKN4Json5ValueE", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "pthread_once", 
                "_ZN4Json6Reader5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_5ValueEb", 
                "_ZSt9terminatev", 
                "redisConnect", 
                "_ZNSt6localeD1Ev", 
                "_ZNSt8ios_base4InitD1Ev", 
                "__pthread_key_create", 
                "_ZNSt18condition_variableD1Ev", 
                "_ZN4Json5ValueC1EPKc", 
                "_ZNSt11logic_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", 
                "fcntl", 
                "memmove", 
                "access", 
                "_ZN4Json5ValueD1Ev", 
                "__fdelt_chk", 
                "_ZNSt6thread6_StateD2Ev", 
                "__cxa_begin_catch", 
                "__errno_location", 
                "pthread_create", 
                "__stack_chk_fail", 
                "_ZNK4Json5Value6isNullEv", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj", 
                "_ZNK4Json5Value4sizeEv", 
                "_ZN4Json5ValueixEPKc", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_ZNK7jsonrpc9Procedure16GetProcedureTypeEv", 
                "__cxa_atexit", 
                "_ZN4Json5ValueC1ENS_9ValueTypeE", 
                "_ZNSt11logic_errorC2ERKS_", 
                "_ZSt25__throw_bad_function_callv", 
                "__once_proxy", 
                "_ZN7jsonrpc9ProcedureC1Ev", 
                "_ZNSt18condition_variableC1Ev", 
                "_ZNK7jsonrpc9Procedure16GetProcedureNameB5cxx11Ev", 
                "close", 
                "__cxa_allocate_exception", 
                "_ZNSt15__exception_ptr13exception_ptrD1Ev", 
                "_ZNSt6thread4joinEv", 
                "_ZNK4Json5ValueneERKS0_", 
                "_ZN7jsonrpc12StreamReaderC1Ej", 
                "strncpy", 
                "_ZNSt8ios_baseD2Ev", 
                "_ZNSt12future_errorD1Ev", 
                "_ZNK4Json5Value8isMemberEPKc", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc", 
                "_ZNK4Json5ValueixEj", 
                "_ZN4Json6ReaderC1Ev", 
                "_ZNSo5writeEPKci", 
                "MHD_destroy_response", 
                "_ZN4Json5ValueC1Ei", 
                "_ZNSt13__future_base12_Result_baseD2Ev", 
                "_ZNK4Json5Value8asStringB5cxx11Ev", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "__cxa_init_primary_exception", 
                "nanosleep", 
                "__cxa_end_catch", 
                "_ZN4Json5ValueaSES0_", 
                "_ZSt20__throw_future_errori", 
                "_ZNK7jsonrpc16JsonRpcException7GetCodeEv", 
                "_ZSt24__throw_out_of_range_fmtPKcz", 
                "_ZN7jsonrpc12StreamWriter5WriteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi", 
                "_ZNK4Json5ValueeqERKS0_", 
                "_ZNSt28__atomic_futex_unsigned_base19_M_futex_notify_allEPj", 
                "_ITM_registerTMCloneTable", 
                "_ZN4Json5ValueC1ERKS0_", 
                "_ZNSt18condition_variable4waitERSt11unique_lockISt5mutexE"
            ], 
            "rpm": "libjson-rpc-cpp-server-1.0.0-2.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libjsonrpccpp-server.so.1.0.0"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " libjson-rpc-cpp-server", 
            "License": " MIT", 
            "URL": " https://github.com/cinemast/libjson-rpc-cpp", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-10.phx2.fedoraproject.org", 
            "Description": "\nThis library provides classes to easily implement JSON-RPC C++ Server\napplications. It comes with a built in HTTP-Server connector (based on\nlibmicrohttpd) for easy data exchange. It is fully JSON-RPC 2.0 and\nJSON-RPC 1.0 compatible, including:\n\n* Type checking\n* Malformed request handling\n* Handling batch procedure calls\n* JSON-RPC Method invocation\n* JSON-RPC Notification invocation\n* Simple Interface for implementing additional Server-Connectors beside HTTP\n* Positional and named parameters\n", 
            "Build Date": " Fri 01 Sep 2017 06:30:35 PM EDT", 
            "Source RPM": " libjson-rpc-cpp-1.0.0-2.fc27.src.rpm", 
            "Version": " 1.0.0", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Sat 02 Sep 2017 04:09:10 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 2.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Library implementing json-rpc C++ clients", 
            "Size": " 100896"
        }
    }
}