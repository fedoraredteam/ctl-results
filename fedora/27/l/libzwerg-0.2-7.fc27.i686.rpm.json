{
    "results": {
        "usr/lib/libzwerg_so_0_1": {
            "report-functions": [
                "_ZNSo5flushEv", 
                "__fprintf_chk", 
                "_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc", 
                "strtoull", 
                "dwarf_getabbrevattr", 
                "gelf_getehdr", 
                "_ZSt16__throw_bad_castv", 
                "_ZNSt12domain_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", 
                "_ZNSt13runtime_errorC1EPKc", 
                "__pthread_key_create", 
                "dwarf_errno", 
                "__gmon_start__", 
                "getc", 
                "dwarf_getlocation_attr", 
                "__stack_chk_fail", 
                "strtoul", 
                "_ZNSo9_M_insertImEERSoT_", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_", 
                "open", 
                "_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc", 
                "dwfl_end", 
                "dwarf_formsdata", 
                "dwarf_getabbrevcode", 
                "dwarf_lowpc", 
                "_ZNKSt5ctypeIcE13_M_widen_initEv", 
                "_ZNSt13runtime_errorD1Ev", 
                "__assert_fail", 
                "dwarf_highpc", 
                "regerror", 
                "__cxa_throw", 
                "_ZNSt6localeD1Ev", 
                "dwfl_report_offline", 
                "dwarf_siblingof", 
                "dwarf_nextcu", 
                "isatty", 
                "__sprintf_chk", 
                "dwarf_formaddr", 
                "_ITM_registerTMCloneTable", 
                "_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj", 
                "dwarf_getalt", 
                "dwfl_standard_find_debuginfo", 
                "elf_version", 
                "_Unwind_Resume", 
                "__cxa_finalize", 
                "dwarf_getattrs", 
                "strcmp", 
                "dwarf_dieoffset", 
                "dwarf_getlocations", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj", 
                "dwarf_entrypc", 
                "__cxa_rethrow", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "_ITM_deregisterTMCloneTable", 
                "dwfl_module_getsym_info", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "dwarf_getlocation_die", 
                "dwfl_module_getsymtab", 
                "strncpy", 
                "memmove", 
                "elf_errmsg", 
                "dwarf_formblock", 
                "dwarf_macro_opcode", 
                "_ZNSo3putEc", 
                "isprint", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_i", 
                "_ZSt20__throw_length_errorPKc", 
                "fwrite", 
                "_ZSt24__throw_out_of_range_fmtPKcz", 
                "elf_errno", 
                "dwarf_offdie", 
                "dwarf_macro_param2", 
                "dwarf_hasattr", 
                "_ZNSt8ios_baseD2Ev", 
                "dwarf_formudata", 
                "_ZNSt6localeC1Ev", 
                "_ZNKSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE3strEv", 
                "__cxa_begin_catch", 
                "_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_", 
                "exit", 
                "__cxa_end_catch", 
                "dwarf_getmacros", 
                "dwfl_errno", 
                "_ZNSt8ios_baseC2Ev", 
                "dwarf_getlocation_implicit_value", 
                "_ZSt5flushIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_", 
                "dwarf_child", 
                "_ZNSt8ios_base4InitC1Ev", 
                "dwarf_getattrcnt", 
                "stpcpy", 
                "dwarf_errmsg", 
                "dwarf_formstring", 
                "dwfl_build_id_find_elf", 
                "dwfl_begin", 
                "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base", 
                "_ZSt9terminatev", 
                "malloc", 
                "fread", 
                "regexec", 
                "_ZSt17__throw_bad_allocv", 
                "dwarf_cu_die", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcjj", 
                "dwarf_cu_getdwarf", 
                "abort", 
                "dwfl_errmsg", 
                "_ZNSo9_M_insertIbEERSoT_", 
                "_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc", 
                "ferror", 
                "dwfl_getmodules", 
                "fileno", 
                "_ZSt24__throw_invalid_argumentPKc", 
                "_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "_Znwj", 
                "strlen", 
                "_ZNSt3_V215system_categoryEv", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj", 
                "dwarf_cuoffset", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate", 
                "dwfl_module_getelf", 
                "__cxa_guard_acquire", 
                "memcmp", 
                "dwarf_attr_integrate", 
                "regcomp", 
                "close", 
                "__cxa_allocate_exception", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj", 
                "dwarf_getsrcfiles", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_", 
                "clearerr", 
                "_ZdlPv", 
                "__cxa_pure_virtual", 
                "dwarf_hasattr_integrate", 
                "__cxa_guard_abort", 
                "__cxa_guard_release", 
                "dwfl_module_getdwarf", 
                "__cxa_free_exception", 
                "_ZNSo9_M_insertIyEERSoT_", 
                "_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "dwarf_getabbrev", 
                "dwfl_offline_section_address", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj", 
                "dwarf_filesrc", 
                "__cxa_atexit", 
                "dwarf_diename", 
                "__udivdi3", 
                "dwarf_diecu", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc", 
                "_ZNSo9_M_insertIPKvEERSoT_", 
                "vsnprintf", 
                "dwarf_haschildren", 
                "free", 
                "dwarf_ranges", 
                "__errno_location", 
                "dwarf_tag", 
                "realloc", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcjj", 
                "dwarf_formref_die", 
                "__snprintf_chk", 
                "regfree", 
                "_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1ESt13_Ios_Openmode", 
                "_ZNSt8ios_base4InitD1Ev", 
                "dwarf_abbrevhaschildren", 
                "dwfl_report_end", 
                "_ZSt19__throw_logic_errorPKc", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "__gxx_personality_v0", 
                "_ZNSt12domain_errorD1Ev", 
                "dwarf_formflag", 
                "_ZSt20__throw_out_of_rangePKc", 
                "dwarf_attr", 
                "__dynamic_cast", 
                "dwarf_macro_param1"
            ], 
            "rpm": "libzwerg-0.2-7.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libzwerg.so.0.1"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Development/Libraries", 
            "Name": " libzwerg", 
            "License": " GPLv3+ and (GPLv2+ or LGPLv3+)", 
            "URL": " http://pmachata.github.io/dwgrep/index.html", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-22.phx2.fedoraproject.org", 
            "Description": "\n\nLibzwerg contains implementation of the Zwerg query engine as well as\nindividual words of both Core and Dwarf vocabularies.\n", 
            "Build Date": " Wed 02 Aug 2017 05:15:37 PM EDT", 
            "Source RPM": " dwgrep-0.2-7.fc27.src.rpm", 
            "Version": " 0.2", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Sat 05 Aug 2017 10:53:00 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 7.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Library for querying Dwarf (debuginfo) graphs", 
            "Size": " 1357902"
        }
    }
}