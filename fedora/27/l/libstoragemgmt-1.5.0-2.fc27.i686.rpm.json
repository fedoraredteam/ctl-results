{
    "results": {
        "usr/bin/simc_lsmplugin": {
            "report-functions": [
                "snprintf", 
                "lsm_battery_record_array_free", 
                "MD5", 
                "lsm_disk_record_alloc", 
                "_ITM_registerTMCloneTable", 
                "lsm_system_record_array_free", 
                "lsm_nfs_export_record_array_free", 
                "lsm_string_list_elem_set", 
                "free", 
                "strerror_r", 
                "difftime", 
                "lsm_disk_id_get", 
                "lsm_disk_rpm_set", 
                "lsm_capability_record_free", 
                "lsm_system_mode_set", 
                "lsm_string_list_size", 
                "lsm_fs_ss_record_alloc", 
                "lsm_pool_record_array_free", 
                "lsm_fs_pool_id_get", 
                "getenv", 
                "lsm_nfs_export_record_alloc", 
                "lsm_fs_ss_record_array_free", 
                "close", 
                "lsm_capability_record_alloc", 
                "lsm_volume_record_alloc", 
                "sqlite3_open", 
                "strlen", 
                "strtoll", 
                "lsm_private_data_get", 
                "lsm_capability_set_n", 
                "lsm_plug_battery_search_filter", 
                "time", 
                "lsm_plug_target_port_search_filter", 
                "lsm_volume_record_array_free", 
                "lsm_disk_location_set", 
                "sqlite3_errmsg", 
                "strcmp", 
                "lsm_fs_record_alloc", 
                "strtok_r", 
                "__sprintf_chk", 
                "__libc_start_main", 
                "lsm_disk_link_type_set", 
                "lsm_pool_id_get", 
                "read", 
                "lsm_target_port_record_array_free", 
                "__snprintf_chk", 
                "lsm_string_list_free", 
                "lsm_target_port_record_alloc", 
                "lsm_system_record_array_alloc", 
                "strtod", 
                "realloc", 
                "open", 
                "lsm_register_plugin_v1_3", 
                "lsm_fs_total_space_get", 
                "lsm_fs_record_array_free", 
                "lsm_disk_record_array_free", 
                "lsm_access_group_id_get", 
                "lsm_access_group_record_alloc", 
                "_ITM_deregisterTMCloneTable", 
                "lsm_hash_copy", 
                "lsm_uri_parse", 
                "sqlite3_busy_timeout", 
                "lsm_plug_volume_search_filter", 
                "lsm_nfs_export_id_get", 
                "lsm_volume_pool_id_get", 
                "lsm_hash_string_set", 
                "sqlite3_last_insert_rowid", 
                "malloc", 
                "lsm_volume_block_size_get", 
                "lsm_fs_id_get", 
                "sqlite3_errcode", 
                "lsm_string_list_append", 
                "lsm_plugin_init_v1", 
                "__assert_fail", 
                "strncpy", 
                "sqlite3_free", 
                "lsm_battery_record_alloc", 
                "lsm_system_record_alloc", 
                "lsm_volume_id_get", 
                "__errno_location", 
                "lsm_pool_record_alloc", 
                "lsm_plug_pool_search_filter", 
                "__cxa_finalize", 
                "lsm_system_read_cache_pct_set", 
                "srand", 
                "lsm_string_list_alloc", 
                "lsm_access_group_record_array_free", 
                "lsm_plug_nfs_export_search_filter", 
                "lsm_string_list_elem_get", 
                "strdup", 
                "lsm_plug_access_group_search_filter", 
                "__gmon_start__", 
                "__stack_chk_fail", 
                "lsm_plug_disk_search_filter", 
                "lsm_system_id_get", 
                "lsm_hash_string_get", 
                "lsm_hash_alloc", 
                "lsm_fs_ss_id_get", 
                "lsm_system_fw_version_set", 
                "lsm_log_error_basic", 
                "clock_gettime", 
                "lsm_plug_fs_search_filter", 
                "lsm_disk_vpd83_set", 
                "lsm_hash_free", 
                "lsm_volume_number_of_blocks_get"
            ], 
            "rpm": "libstoragemgmt-1.5.0-2.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/simc_lsmplugin"
        }, 
        "usr/bin/lsmd": {
            "report-functions": [
                "access", 
                "select", 
                "strdup", 
                "listen", 
                "calloc", 
                "accept", 
                "unlink", 
                "__strncpy_chk", 
                "putchar", 
                "fputs", 
                "getpid", 
                "getsockopt", 
                "config_destroy", 
                "config_init", 
                "__fdelt_chk", 
                "__errno_location", 
                "getopt_long", 
                "setuid", 
                "getuid", 
                "__lxstat", 
                "setgroups", 
                "__syslog_chk", 
                "__snprintf_chk", 
                "free", 
                "geteuid", 
                "puts", 
                "exit", 
                "__sprintf_chk", 
                "getppid", 
                "__xpg_basename", 
                "daemon", 
                "strncmp", 
                "_ITM_registerTMCloneTable", 
                "getpwnam", 
                "config_read_file", 
                "__vsnprintf_chk", 
                "fork", 
                "malloc", 
                "opendir", 
                "openlog", 
                "strlen", 
                "signal", 
                "socket", 
                "__stack_chk_fail", 
                "strncpy", 
                "__assert_fail", 
                "abort", 
                "config_lookup_bool", 
                "setgid", 
                "__printf_chk", 
                "strerror", 
                "closedir", 
                "_ITM_deregisterTMCloneTable", 
                "execve", 
                "chmod", 
                "bind", 
                "close", 
                "waitid", 
                "__gmon_start__", 
                "readdir", 
                "getenv", 
                "__libc_start_main"
            ], 
            "rpm": "libstoragemgmt-1.5.0-2.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/lsmd"
        }, 
        "usr/lib/libstoragemgmt_so_1_5_0": {
            "report-functions": [
                "_ZNSt8ios_base4InitD1Ev", 
                "g_hash_table_new_full", 
                "udev_enumerate_add_match_subsystem", 
                "_ZNSt8__detail15_List_node_base9_M_unhookEv", 
                "udev_enumerate_add_match_property", 
                "_ZdlPvj", 
                "udev_device_get_property_value", 
                "dlerror", 
                "udev_list_entry_get_next", 
                "yajl_gen_map_open", 
                "g_ptr_array_free", 
                "g_ptr_array_add", 
                "__gmon_start__", 
                "send", 
                "__stack_chk_fail", 
                "getenv", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "memcmp", 
                "udev_device_unref", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "yajl_gen_get_buf", 
                "strtok_r", 
                "_ZNSo9_M_insertIdEERSoT_", 
                "_ZSt16__throw_bad_castv", 
                "yajl_gen_array_close", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "_ZNSo9_M_insertIxEERSoT_", 
                "g_ptr_array_sized_new", 
                "__gxx_personality_v0", 
                "udev_device_new_from_syspath", 
                "_ZNKSt13runtime_error4whatEv", 
                "__udivdi3", 
                "g_ptr_array_set_size", 
                "g_hash_table_size", 
                "read", 
                "readdir", 
                "_ZNSo9_M_insertIeEERSoT_", 
                "__sprintf_chk", 
                "_ZNSt13runtime_errorD2Ev", 
                "_ZNKSt5ctypeIcE13_M_widen_initEv", 
                "_ZNSt8ios_baseD2Ev", 
                "calloc", 
                "connect", 
                "strncpy", 
                "memset", 
                "__memcpy_chk", 
                "__cxa_begin_catch", 
                "udev_new", 
                "snprintf", 
                "__cxa_finalize", 
                "udev_enumerate_get_list_entry", 
                "yajl_gen_null", 
                "__cxa_rethrow", 
                "closedir", 
                "socket", 
                "_ZSt17__throw_bad_allocv", 
                "__cxa_throw", 
                "opendir", 
                "regfree", 
                "yajl_gen_bool", 
                "yajl_gen_string", 
                "__cxa_atexit", 
                "g_hash_table_lookup", 
                "yajl_free", 
                "open", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjPKc", 
                "_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "_Znwj", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj", 
                "udev_list_entry_get_name", 
                "malloc", 
                "regexec", 
                "g_str_equal", 
                "__asprintf_chk", 
                "__cxa_allocate_exception", 
                "realloc", 
                "ioctl", 
                "__syslog_chk", 
                "udev_unref", 
                "strdup", 
                "g_hash_table_remove", 
                "udev_enumerate_new", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_", 
                "yajl_gen_config", 
                "recv", 
                "_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", 
                "udev_enumerate_unref", 
                "sscanf", 
                "g_hash_table_destroy", 
                "strchr", 
                "_ZNSolsEi", 
                "free", 
                "_Unwind_Resume", 
                "strtoul", 
                "xmlFreeURI", 
                "yajl_gen_free", 
                "xmlURIUnescapeString", 
                "__cxa_call_unexpected", 
                "strncmp", 
                "_ZSt19__throw_logic_errorPKc", 
                "g_str_hash", 
                "g_ptr_array_remove_index", 
                "_ZNSt8ios_baseC2Ev", 
                "strerror_r", 
                "__open_2", 
                "_ITM_deregisterTMCloneTable", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj", 
                "__errno_location", 
                "g_ptr_array_set_free_func", 
                "yajl_config", 
                "strtol", 
                "_ZdlPv", 
                "_ZNSo9_M_insertImEERSoT_", 
                "udev_device_get_devnode", 
                "_ZNSt8ios_base4InitC1Ev", 
                "close", 
                "regcomp", 
                "_ZNSt6localeD1Ev", 
                "access", 
                "yajl_gen_alloc", 
                "udev_enumerate_scan_devices", 
                "__assert_fail", 
                "__recv_chk", 
                "_ZNSo9_M_insertIyEERSoT_", 
                "_ZNSt6localeC1Ev", 
                "_ZSt20__throw_length_errorPKc", 
                "strlen", 
                "_ITM_registerTMCloneTable", 
                "g_hash_table_iter_next", 
                "yajl_gen_map_close", 
                "__snprintf_chk", 
                "yajl_gen_array_open", 
                "g_hash_table_iter_init", 
                "tolower", 
                "__cxa_free_exception", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_", 
                "strcmp", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "yajl_alloc", 
                "yajl_parse", 
                "_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "g_hash_table_insert", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj", 
                "xmlParseURI", 
                "yajl_gen_number", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc"
            ], 
            "rpm": "libstoragemgmt-1.5.0-2.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libstoragemgmt.so.1.5.0"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " System Environment/Libraries", 
            "Name": " libstoragemgmt", 
            "License": " LGPLv2+", 
            "URL": " https://github.com/libstorage/libstoragemgmt", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-26.phx2.fedoraproject.org", 
            "Description": "\nThe libStorageMgmt library will provide a vendor agnostic open source storage\napplication programming interface (API) that will allow management of storage\narrays.  The library includes a command line interface for interactive use and\nscripting (command lsmcli).  The library also has a daemon that is used for\nexecuting plug-ins in a separate process (lsmd).\n", 
            "Build Date": " Wed 11 Oct 2017 04:45:51 AM EDT", 
            "Source RPM": " libstoragemgmt-1.5.0-2.fc27.src.rpm", 
            "Version": " 1.5.0", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Wed 11 Oct 2017 05:04:31 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 2.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Storage array management library", 
            "Size": " 666298"
        }
    }
}