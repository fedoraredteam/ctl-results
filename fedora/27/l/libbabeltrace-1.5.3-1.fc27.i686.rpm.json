{
    "results": {
        "usr/lib/libbabeltrace_so_1_0_0": {
            "report-functions": [
                "calloc", 
                "g_hash_table_foreach", 
                "g_hash_table_insert", 
                "g_quark_from_string", 
                "_ITM_deregisterTMCloneTable", 
                "g_direct_equal", 
                "__fprintf_chk", 
                "g_string_free", 
                "g_hash_table_new", 
                "free", 
                "g_free", 
                "_ITM_registerTMCloneTable", 
                "g_string_append", 
                "g_malloc", 
                "g_array_free", 
                "__gmon_start__", 
                "g_hash_table_lookup", 
                "g_ptr_array_add", 
                "__stack_chk_fail", 
                "__assert_fail", 
                "g_hash_table_new_full", 
                "g_quark_from_static_string", 
                "g_ptr_array_set_size", 
                "g_array_sized_new", 
                "g_array_set_size", 
                "puts", 
                "g_ptr_array_new", 
                "__cxa_finalize", 
                "g_ptr_array_free", 
                "g_hash_table_lookup_extended", 
                "g_hash_table_size", 
                "g_ptr_array_sized_new", 
                "g_hash_table_remove", 
                "g_string_new", 
                "g_direct_hash", 
                "g_array_append_vals", 
                "getenv", 
                "strcmp", 
                "g_quark_to_string", 
                "strchr", 
                "g_hash_table_destroy", 
                "g_ptr_array_remove", 
                "fwrite", 
                "__printf_chk", 
                "strncpy", 
                "g_malloc0", 
                "g_array_unref", 
                "g_string_printf", 
                "putchar"
            ], 
            "rpm": "libbabeltrace-1.5.3-1.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libbabeltrace.so.1.0.0"
        }, 
        "usr/lib/libbabeltrace-dummy_so_1_0_0": {
            "report-functions": [
                "g_malloc0", 
                "__cxa_finalize", 
                "g_quark_from_static_string", 
                "_ITM_deregisterTMCloneTable", 
                "free", 
                "_ITM_registerTMCloneTable", 
                "bt_unregister_format", 
                "__gmon_start__"
            ], 
            "rpm": "libbabeltrace-1.5.3-1.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libbabeltrace-dummy.so.1.0.0"
        }, 
        "usr/lib/libbabeltrace-ctf-text_so_1_0_0": {
            "report-functions": [
                "bt_lookup_definition", 
                "g_quark_to_string", 
                "elf_errmsg", 
                "dwarf_begin", 
                "gelf_getsym", 
                "g_string_insert_c", 
                "elf_kind", 
                "__gmon_start__", 
                "__stack_chk_fail", 
                "g_hash_table_iter_init", 
                "fputc", 
                "dwarf_nextcu", 
                "__snprintf_chk", 
                "bt_register_format", 
                "close", 
                "read", 
                "bt_unregister_format", 
                "elf_nextscn", 
                "g_hash_table_remove_all", 
                "g_malloc", 
                "ctf_print_timestamp", 
                "dwarf_tag", 
                "_ITM_deregisterTMCloneTable", 
                "dwarf_end", 
                "dwarf_haspc", 
                "dwarf_offdie", 
                "g_free", 
                "bt_get_string", 
                "g_hash_table_new_full", 
                "g_hash_table_destroy", 
                "strlen", 
                "dwarf_attr", 
                "bt_struct_rw", 
                "elf_begin", 
                "fclose", 
                "g_build_path", 
                "__asprintf_chk", 
                "dwarf_lineno", 
                "fputs", 
                "g_quark_from_static_string", 
                "dwarf_linesrc", 
                "g_hash_table_insert", 
                "_ITM_registerTMCloneTable", 
                "__errno_location", 
                "g_hash_table_iter_next", 
                "malloc", 
                "bt_get_signed_int", 
                "dwarf_diename", 
                "dwarf_formsdata", 
                "g_quark_from_string", 
                "dwarf_getsrc_die", 
                "dwarf_filesrc", 
                "perror", 
                "__cxa_finalize", 
                "dwarf_getsrcfiles", 
                "g_string_assign", 
                "elf_strptr", 
                "strdup", 
                "dwarf_lineaddr", 
                "dwarf_child", 
                "bt_sequence_rw", 
                "g_hash_table_lookup", 
                "g_malloc0", 
                "g_int64_equal", 
                "stpcpy", 
                "elf_version", 
                "dwarf_formudata", 
                "elf_getdata", 
                "dirname", 
                "bt_variant_rw", 
                "free", 
                "dwarf_siblingof", 
                "open64", 
                "dwarf_lowpc", 
                "__fprintf_chk", 
                "bt_get_unsigned_int", 
                "bt_array_rw", 
                "g_int64_hash", 
                "fopen64", 
                "__assert_fail", 
                "strcpy", 
                "fwrite"
            ], 
            "rpm": "libbabeltrace-1.5.3-1.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libbabeltrace-ctf-text.so.1.0.0"
        }, 
        "usr/lib/libbabeltrace-lttng-live_so_1_0_0": {
            "report-functions": [
                "send", 
                "open_memstream", 
                "g_array_append_vals", 
                "sigemptyset", 
                "bt_context_remove_trace", 
                "gethostbyname", 
                "strlen", 
                "bt_ctf_iter_destroy", 
                "g_array_remove_index", 
                "g_free", 
                "fmemopen", 
                "bt_unregister_format", 
                "g_direct_hash", 
                "g_quark_from_static_string", 
                "g_ptr_array_add", 
                "ctf_update_current_packet_index", 
                "fwrite", 
                "__errno_location", 
                "g_malloc0_n", 
                "bt_context_add_trace", 
                "bt_iter_add_trace", 
                "calloc", 
                "fflush", 
                "recv", 
                "bt_context_put", 
                "malloc", 
                "__assert_fail", 
                "bt_ctf_iter_read_event_flags", 
                "g_hash_table_insert", 
                "g_array_set_size", 
                "sysconf", 
                "g_hash_table_lookup", 
                "g_hash_table_destroy", 
                "socket", 
                "mmap64", 
                "strndup", 
                "bt_lookup_format", 
                "_ITM_registerTMCloneTable", 
                "bt_ctf_iter_create", 
                "sigaction", 
                "sscanf", 
                "g_malloc0", 
                "munmap", 
                "strncmp", 
                "bt_iter_next", 
                "free", 
                "bt_register_format", 
                "__cxa_finalize", 
                "connect", 
                "_ITM_deregisterTMCloneTable", 
                "g_array_new", 
                "bt_context_create", 
                "__stack_chk_fail", 
                "g_hash_table_iter_next", 
                "g_hash_table_iter_init", 
                "bt_ctf_get_iter", 
                "__gmon_start__", 
                "ctf_append_trace_metadata", 
                "perror", 
                "g_hash_table_new", 
                "g_ptr_array_free", 
                "fclose", 
                "__fprintf_chk", 
                "poll", 
                "g_ptr_array_new"
            ], 
            "rpm": "libbabeltrace-1.5.3-1.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libbabeltrace-lttng-live.so.1.0.0"
        }, 
        "usr/lib/libbabeltrace-ctf_so_1_0_0": {
            "report-functions": [
                "bt_unregister_format", 
                "g_array_unref", 
                "g_array_insert_vals", 
                "bt_enum_uint_to_quark_set", 
                "g_string_new", 
                "readdir64_r", 
                "free", 
                "elf_begin", 
                "__gmon_start__", 
                "bt_integer_declaration_new", 
                "fread", 
                "localtime_r", 
                "g_quark_to_string", 
                "bt_lookup_declaration", 
                "bt_lookup_variant", 
                "open_memstream", 
                "openat64", 
                "g_ptr_array_set_size", 
                "strdup", 
                "gmtime_r", 
                "bt_new_declaration_scope", 
                "bt_struct_rw", 
                "g_ptr_array_new", 
                "bt_enum_declaration_new", 
                "g_array_append_vals", 
                "g_str_equal", 
                "elf_nextscn", 
                "bt_iter_create_time_pos", 
                "dwarf_haspc", 
                "dwarf_end", 
                "dwarf_diename", 
                "fscanf", 
                "fpathconf", 
                "__fprintf_chk", 
                "bt_variant_get_current_field", 
                "munmap", 
                "g_string_sized_new", 
                "dwarf_child", 
                "g_quark_try_string", 
                "bt_untagged_bt_variant_declaration_new", 
                "dwarf_offdie", 
                "dwarf_formudata", 
                "g_malloc", 
                "g_quark_from_static_string", 
                "posix_fallocate64", 
                "strncmp", 
                "bt_iter_fini", 
                "___tls_get_addr", 
                "strrchr", 
                "g_ptr_array_new_full", 
                "g_realloc", 
                "opendir", 
                "__asprintf_chk", 
                "dwarf_formsdata", 
                "g_string_printf", 
                "g_int64_hash", 
                "bt_untagged_variant_declaration_get_field_from_tag", 
                "elf_version", 
                "gelf_getsym", 
                "malloc", 
                "g_free", 
                "sysconf", 
                "bt_get_signed_int", 
                "g_hash_table_insert", 
                "g_hash_table_foreach", 
                "bt_untagged_variant_declaration_add_field", 
                "uuid_compare", 
                "bt_enum_unsigned_insert", 
                "g_hash_table_new_full", 
                "elf_errmsg", 
                "bt_get_char_array", 
                "strerror", 
                "getpagesize", 
                "g_str_hash", 
                "ftruncate64", 
                "g_strerror", 
                "calloc", 
                "g_array_new", 
                "fseek", 
                "uuid_parse", 
                "unlinkat", 
                "bt_register_enum_declaration", 
                "feof", 
                "g_ptr_array_foreach", 
                "dwarf_lineaddr", 
                "__stack_chk_fail", 
                "bt_struct_declaration_new", 
                "g_direct_equal", 
                "g_ptr_array_free", 
                "exit", 
                "g_ptr_array_set_free_func", 
                "ferror", 
                "g_ptr_array_sort", 
                "_IO_getc", 
                "bt_lookup_definition", 
                "g_ptr_array_sized_new", 
                "g_hash_table_iter_init", 
                "rewind", 
                "bt_enum_signed_insert", 
                "bt_get_unsigned_int", 
                "__cxa_finalize", 
                "dwarf_lowpc", 
                "close", 
                "bt_lookup_struct_declaration", 
                "bt_array_index", 
                "g_int64_equal", 
                "__snprintf_chk", 
                "pthread_mutex_lock", 
                "fflush", 
                "strtoul", 
                "g_hash_table_contains", 
                "strftime", 
                "bt_register_declaration", 
                "dirname", 
                "g_string_new_len", 
                "bt_iter_init", 
                "bt_sequence_rw", 
                "dwarf_linesrc", 
                "closedir", 
                "bt_get_string", 
                "g_malloc0", 
                "bt_variant_rw", 
                "isatty", 
                "bt_register_variant_declaration", 
                "clearerr", 
                "g_string_append_len", 
                "strcmp", 
                "bt_register_format", 
                "bt_definition_unref", 
                "bt_struct_declaration_add_field", 
                "fileno", 
                "g_list_nth", 
                "g_array_remove_range", 
                "g_hash_table_lookup", 
                "fdopen", 
                "strlen", 
                "g_array_free", 
                "g_ptr_array_new_with_free_func", 
                "__openat64_2", 
                "g_string_append_printf", 
                "bt_register_struct_declaration", 
                "__fread_chk", 
                "bt_array_len", 
                "_ITM_deregisterTMCloneTable", 
                "bt_sequence_index", 
                "dwarf_filesrc", 
                "elf_getdata", 
                "__fxstat64", 
                "bt_struct_definition_get_field_from_index", 
                "g_string_truncate", 
                "gelf_getshdr", 
                "bt_array_declaration_new", 
                "bt_variant_declaration_new", 
                "g_direct_hash", 
                "bt_enum_int_to_quark_set", 
                "bt_lookup_enum_declaration", 
                "faccessat", 
                "strchr", 
                "g_build_path", 
                "bt_lookup_enum", 
                "bt_sequence_len", 
                "bt_get_int_len", 
                "g_string_insert_c", 
                "bt_lookup_integer", 
                "g_hash_table_remove_all", 
                "g_string_free", 
                "elf_strptr", 
                "fmemopen", 
                "bt_sequence_declaration_new", 
                "perror", 
                "dwarf_siblingof", 
                "write", 
                "pthread_mutex_unlock", 
                "bt_free_declaration_scope", 
                "bt_declaration_unref", 
                "__ctype_b_loc", 
                "g_ptr_array_add", 
                "bt_get_int_signedness", 
                "strtoull", 
                "g_array_set_size", 
                "_ITM_registerTMCloneTable", 
                "g_strdup", 
                "elf_kind", 
                "read", 
                "__assert_fail", 
                "bt_struct_declaration_len", 
                "dwarf_getsrc_die", 
                "g_string_insert_len", 
                "bt_array_rw", 
                "g_string_assign", 
                "fputs", 
                "g_hash_table_destroy", 
                "strtok_r", 
                "bt_string_declaration_new", 
                "strnlen", 
                "fwrite", 
                "g_list_free", 
                "strncpy", 
                "g_hash_table_iter_next", 
                "dwarf_begin", 
                "g_mkdir_with_parents", 
                "bt_lookup_variant_declaration", 
                "fputc", 
                "g_list_append", 
                "fclose", 
                "mmap64", 
                "elf_end", 
                "lseek64", 
                "g_strescape", 
                "g_string_append", 
                "stpcpy", 
                "bt_struct_declaration_lookup_field_index", 
                "g_hash_table_new", 
                "g_list_foreach", 
                "uuid_generate", 
                "dwarf_lineno", 
                "g_hash_table_size", 
                "dwarf_nextcu", 
                "bt_declaration_ref", 
                "dwarf_attr", 
                "g_malloc0_n", 
                "realloc", 
                "open64", 
                "g_quark_from_string", 
                "g_hash_table_lookup_extended", 
                "__errno_location", 
                "bt_float_declaration_new", 
                "strcpy"
            ], 
            "rpm": "libbabeltrace-1.5.3-1.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libbabeltrace-ctf.so.1.0.0"
        }, 
        "usr/lib/libbabeltrace-ctf-metadata_so_1_0_0": {
            "report-functions": [
                "bt_register_format", 
                "perror", 
                "fopen64", 
                "fputs", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "__gmon_start__", 
                "g_quark_from_static_string", 
                "fwrite", 
                "fclose", 
                "g_malloc0", 
                "_ITM_registerTMCloneTable", 
                "__fprintf_chk", 
                "g_free"
            ], 
            "rpm": "libbabeltrace-1.5.3-1.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libbabeltrace-ctf-metadata.so.1.0.0"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Development/Libraries", 
            "Name": " libbabeltrace", 
            "License": " MIT and GPLv2", 
            "URL": " https://www.efficios.com/babeltrace", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-12.phx2.fedoraproject.org", 
            "Description": "\nThis project provides trace read and write libraries, as well as a trace\nconverter. A plugin can be created for any trace format to allow its conversion\nto/from another trace format.\n", 
            "Build Date": " Wed 09 Aug 2017 05:34:08 PM EDT", 
            "Source RPM": " babeltrace-1.5.3-1.fc27.src.rpm", 
            "Version": " 1.5.3", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Wed 09 Aug 2017 05:40:12 PM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 1.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Common Trace Format Babel Tower", 
            "Size": " 535187"
        }
    }
}