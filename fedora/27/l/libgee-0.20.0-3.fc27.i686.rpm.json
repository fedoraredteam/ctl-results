{
    "results": {
        "usr/lib/libgee-0_8_so_2_6_0": {
            "report-functions": [
                "g_cond_init", 
                "g_mutex_lock", 
                "g_cond_wait_until", 
                "g_rand_int_range", 
                "g_signal_handlers_destroy", 
                "g_clear_error", 
                "g_get_num_processors", 
                "g_assertion_message_expr", 
                "g_value_set_boolean", 
                "g_private_get", 
                "g_quark_to_string", 
                "g_simple_async_result_get_type", 
                "g_boxed_type_register_static", 
                "g_object_class_install_property", 
                "g_param_spec_pointer", 
                "g_value_set_gtype", 
                "g_type_interface_peek_parent", 
                "g_private_set", 
                "g_type_interface_add_prerequisite", 
                "g_type_register_static", 
                "g_type_create_instance", 
                "g_strdup_printf", 
                "g_private_new", 
                "__gmon_start__", 
                "abort", 
                "__stack_chk_fail", 
                "g_type_add_interface_static", 
                "g_value_set_pointer", 
                "g_once_init_leave", 
                "g_getenv", 
                "g_thread_pool_new", 
                "g_direct_equal", 
                "g_str_equal", 
                "g_return_if_fail_warning", 
                "g_object_new", 
                "memmove", 
                "g_param_spec_internal", 
                "g_weak_ref_init", 
                "g_strdup", 
                "g_type_check_instance_is_a", 
                "g_malloc0", 
                "g_cond_wait", 
                "g_type_is_a", 
                "g_thread_yield", 
                "g_mutex_trylock", 
                "g_param_spec_int", 
                "g_type_check_instance_cast", 
                "g_idle_add_full", 
                "strlen", 
                "g_slice_alloc0", 
                "g_thread_unref", 
                "g_enum_register_static", 
                "g_type_register_fundamental", 
                "g_static_private_set", 
                "g_simple_async_result_set_op_res_gpointer", 
                "g_value_get_pointer", 
                "g_simple_async_result_complete", 
                "g_warn_message", 
                "g_spaced_primes_closest", 
                "g_value_type_compatible", 
                "g_ascii_strtoll", 
                "__cxa_finalize", 
                "g_type_name", 
                "g_value_get_gtype", 
                "g_simple_async_result_set_from_error", 
                "g_object_add_weak_pointer", 
                "g_mutex_clear", 
                "g_thread_new", 
                "g_mutex_init", 
                "g_cond_broadcast", 
                "g_value_get_object", 
                "g_rand_free", 
                "g_object_interface_install_property", 
                "g_type_class_add_private", 
                "g_type_interface_peek", 
                "g_realloc_n", 
                "g_cond_clear", 
                "g_propagate_error", 
                "g_type_free_instance", 
                "g_value_set_object", 
                "g_static_private_get", 
                "g_weak_ref_clear", 
                "g_free", 
                "g_simple_async_result_get_op_res_gpointer", 
                "g_weak_ref_get", 
                "g_direct_hash", 
                "g_static_mutex_get_mutex_impl", 
                "g_object_notify", 
                "g_malloc0_n", 
                "_ITM_registerTMCloneTable", 
                "g_error_new_literal", 
                "g_value_take_object", 
                "g_type_class_peek_parent", 
                "g_strcmp0", 
                "g_type_check_class_cast", 
                "g_realloc", 
                "g_memdup", 
                "g_value_set_int", 
                "g_param_spec_object", 
                "g_simple_async_result_propagate_error", 
                "g_param_spec_boolean", 
                "g_thread_pool_push", 
                "g_type_instance_get_private", 
                "g_error_free", 
                "g_type_fundamental_next", 
                "g_object_ref", 
                "_ITM_deregisterTMCloneTable", 
                "g_slice_free1", 
                "g_quark_from_static_string", 
                "g_simple_async_result_new", 
                "g_weak_ref_set", 
                "g_strconcat", 
                "g_thread_error_quark", 
                "g_simple_async_result_complete_in_idle", 
                "g_once_impl", 
                "g_str_hash", 
                "g_object_remove_weak_pointer", 
                "g_mutex_unlock", 
                "g_type_check_value_holds", 
                "g_param_spec_gtype", 
                "g_once_init_enter", 
                "g_log", 
                "g_rand_new"
            ], 
            "rpm": "libgee-0.20.0-3.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libgee-0.8.so.2.6.0"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " libgee", 
            "License": " LGPLv2+", 
            "URL": " https://wiki.gnome.org/Projects/Libgee", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-03.phx2.fedoraproject.org", 
            "Description": "\nlibgee is a collection library providing GObject-based interfaces and\nclasses for commonly used data structures.\n\n* Traversable\n  o Iterable\n    + Collection\n      - List\n        * BidirList\n      - Set\n        * SortedSet\n          o BidirSortedSet\n      - MultiSet\n      - Queue\n        * Deque\n    + Map\n      - SortedMap\n        * BidirSortedMap\n  o Iterator\n    + BidirIterator\n      - BidirListIterator\n    + ListIterator\n      - BidirListIterator\n* MultiMap\n\nThe ArrayList, ArrauQueue, ConcurrentLinkedList, ConcurrentSet, HashSet,\nHashMap, HashMultiSet, HashMultiMap, LinkedList, PriorityQueue, TreeSet,\nTreeMap, TreeMultiSet, and TreeMultiMap classes provide a reasonable sample\nimplementation of those interfaces. In addition, a set of abstract\nclasses are provided to ease the implementation of new collections.\n\nAround that, the API provide means to retrieve read-only views,\nefficient sort algorithms, simple, bi-directional or index-based mutable\niterators depending on the collection type.\n\nLibgee is written in Vala and can be used like any GObject-based C\nlibrary. It's planned to provide bindings for further languages.\n", 
            "Build Date": " Thu 03 Aug 2017 02:23:02 PM EDT", 
            "Source RPM": " libgee-0.20.0-3.fc27.src.rpm", 
            "Version": " 0.20.0", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Fri 04 Aug 2017 09:18:04 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 3.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " GObject collection library", 
            "Size": " 997972"
        }
    }
}