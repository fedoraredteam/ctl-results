{
    "results": {
        "usr/lib/libinftext-0_7_so_0_0_0": {
            "report-functions": [
                "g_utf8_offset_to_pointer", 
                "g_slice_free1", 
                "infd_filesystem_storage_stream_close", 
                "g_sequence_append", 
                "inf_user_get_connection", 
                "inf_buffer_get_modified", 
                "g_object_newv", 
                "g_value_dup_object", 
                "g_assertion_message_expr", 
                "g_value_init", 
                "__gmon_start__", 
                "inf_user_table_lookup_user_by_name", 
                "inf_user_table_lookup_user_by_id", 
                "g_slice_alloc", 
                "inf_adopted_request_new_do", 
                "g_hash_table_insert", 
                "inf_adopted_undo_grouping_get_algorithm", 
                "g_value_dup_boxed", 
                "inf_adopted_split_operation_new", 
                "_ITM_deregisterTMCloneTable", 
                "g_type_check_class_cast", 
                "inf_adopted_operation_copy", 
                "g_value_get_int", 
                "g_signal_new", 
                "inf_xml_util_get_attribute_double", 
                "inf_session_proxy_join_user", 
                "g_once_init_leave", 
                "g_iconv_open", 
                "g_memdup", 
                "inf_adopted_algorithm_get_current", 
                "_inf_gettext", 
                "g_value_dup_string", 
                "inf_adopted_session_get_type", 
                "g_value_set_double", 
                "inf_xml_util_get_attribute_double_required", 
                "g_realloc", 
                "g_quark_to_string", 
                "g_utf8_get_char", 
                "g_value_set_int", 
                "inf_communication_group_get_type", 
                "inf_io_remove_dispatch", 
                "inf_adopted_session_write_request_info", 
                "g_sequence_get_end_iter", 
                "memmove", 
                "g_type_interface_add_prerequisite", 
                "inf_user_error_quark", 
                "inf_adopted_undo_grouping_get_type", 
                "g_sequence_iter_is_end", 
                "g_slist_append", 
                "g_sequence_get", 
                "inf_adopted_operation_apply", 
                "inf_session_get_status", 
                "g_type_add_instance_private", 
                "xmlFreeNode", 
                "g_slist_reverse", 
                "inf_io_get_type", 
                "__cxa_finalize", 
                "inf_signal_handlers_unblock_by_func", 
                "inf_signal_handlers_disconnect_by_func", 
                "g_param_spec_boxed", 
                "inf_adopted_request_get_user_id", 
                "g_type_class_adjust_private_offset", 
                "inf_xml_util_get_child_text", 
                "inf_adopted_user_get_type", 
                "inf_user_table_add_user", 
                "inf_xml_connection_get_type", 
                "g_convert", 
                "g_param_spec_object", 
                "g_sequence_get_length", 
                "g_utf8_prev_char", 
                "inf_xml_util_get_attribute_required", 
                "inf_xml_util_set_attribute_uint", 
                "inf_xml_util_set_attribute_double", 
                "inf_user_table_foreach_local_user", 
                "g_value_get_boolean", 
                "inf_adopted_state_vector_copy", 
                "inf_adopted_algorithm_get_execute_request", 
                "inf_xml_util_add_child_text", 
                "g_value_set_object", 
                "inf_adopted_request_get_request_type", 
                "inf_adopted_algorithm_generate_request", 
                "g_prefix_error", 
                "inf_user_get_name", 
                "inf_session_send_to_subscriptions", 
                "g_type_check_instance_cast", 
                "g_value_set_boolean", 
                "g_param_spec_double", 
                "g_type_add_interface_static", 
                "inf_adopted_no_operation_get_type", 
                "inf_session_get_type", 
                "inf_session_lookup_user_property", 
                "g_sequence_iter_is_begin", 
                "g_slist_remove", 
                "inf_adopted_state_vector_vdiff", 
                "inf_buffer_get_type", 
                "g_object_class_install_property", 
                "g_quark_from_string", 
                "inf_adopted_session_read_request_info", 
                "g_get_real_time", 
                "infd_filesystem_storage_stream_read", 
                "g_object_class_override_property", 
                "g_object_new", 
                "inf_adopted_no_operation_new", 
                "inf_adopted_session_get_io", 
                "g_type_class_peek_parent", 
                "inf_adopted_state_vector_get_type", 
                "inf_request_error_quark", 
                "inf_io_add_dispatch", 
                "inf_adopted_request_new_undo", 
                "g_set_error_literal", 
                "inf_adopted_state_vector_set", 
                "inf_xml_util_get_attribute_uint", 
                "g_once_init_enter", 
                "inf_communication_manager_get_type", 
                "inf_signal_handlers_block_by_func", 
                "xmlReadIO", 
                "__errno_location", 
                "inf_user_get_status", 
                "inf_xml_util_get_attribute_int", 
                "infd_filesystem_storage_get_type", 
                "g_quark_from_static_string", 
                "inf_user_get_type", 
                "g_type_check_instance_is_a", 
                "g_sequence_get_begin_iter", 
                "inf_adopted_algorithm_execute_request", 
                "inf_user_get_id", 
                "inf_xml_util_get_attribute_int_required", 
                "inf_xml_util_get_attribute_uint_required", 
                "g_random_double", 
                "inf_adopted_request_get_receive_time", 
                "inf_user_status_get_type", 
                "g_param_spec_uint", 
                "xmlDocSetRootElement", 
                "xmlDocFormatDump", 
                "inf_adopted_request_new_redo", 
                "g_param_spec_string", 
                "g_boxed_type_register_static", 
                "g_object_get", 
                "g_value_get_double", 
                "xmlGetLastError", 
                "xmlFreeDoc", 
                "inf_user_get_flags", 
                "xmlNewDoc", 
                "g_value_get_uint", 
                "xmlAddChild", 
                "g_slist_free", 
                "g_convert_with_iconv", 
                "g_return_if_fail_warning", 
                "g_sequence_new", 
                "memcmp", 
                "inf_adopted_session_broadcast_request", 
                "g_hash_table_lookup", 
                "g_sequence_search", 
                "xmlDocGetRootElement", 
                "g_slist_prepend", 
                "g_param_spec_int", 
                "g_filename_to_uri", 
                "inf_adopted_session_get_algorithm", 
                "g_sequence_iter_next", 
                "inf_buffer_set_modified", 
                "inf_user_table_foreach_user", 
                "g_signal_connect_data", 
                "g_hash_table_destroy", 
                "g_get_current_time", 
                "g_sequence_insert_before", 
                "_ITM_registerTMCloneTable", 
                "xmlNewNode", 
                "g_iconv_close", 
                "inf_adopted_split_operation_unsplit", 
                "g_object_set", 
                "inf_adopted_request_get_vector", 
                "g_log", 
                "g_intern_static_string", 
                "inf_adopted_request_get_operation", 
                "g_unichar_isspace", 
                "g_value_set_string", 
                "inf_session_get_user_property", 
                "g_value_set_enum", 
                "inf_adopted_state_vector_free", 
                "g_value_unset", 
                "g_type_register_static_simple", 
                "g_sequence_iter_prev", 
                "g_sequence_remove_range", 
                "inf_adopted_split_operation_get_type", 
                "g_set_error", 
                "g_free", 
                "g_value_set_uint", 
                "inf_xml_util_set_attribute", 
                "g_object_unref", 
                "g_type_name", 
                "ferror", 
                "inf_session_proxy_get_type", 
                "inf_session_get_buffer", 
                "g_object_notify", 
                "xmlNewChild", 
                "g_type_interface_peek", 
                "inf_user_table_get_type", 
                "g_malloc", 
                "inf_session_get_user_table", 
                "infd_filesystem_storage_open", 
                "g_signal_emit", 
                "inf_xml_util_set_attribute_int", 
                "inf_adopted_algorithm_translate_request", 
                "g_value_set_boxed", 
                "__stack_chk_fail", 
                "inf_adopted_operation_get_type", 
                "g_sequence_free", 
                "inf_io_remove_timeout", 
                "inf_io_add_timeout", 
                "g_hash_table_new", 
                "g_type_instance_get_private"
            ], 
            "rpm": "libinfinity-0.7.1-3.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libinftext-0.7.so.0.0.0"
        }, 
        "usr/lib/libinfinity-0_7_so_0_0_0": {
            "report-functions": [
                "ftell", 
                "g_path_get_dirname", 
                "g_hash_table_remove_all", 
                "gnutls_x509_crt_get_expiration_time", 
                "gnutls_x509_privkey_init", 
                "g_tree_insert", 
                "gnutls_hex_encode", 
                "gsasl_client_start", 
                "bind_textdomain_codeset", 
                "g_param_spec_boolean", 
                "g_utf8_collate", 
                "g_param_spec_uint", 
                "gnutls_certificate_free_credentials", 
                "xmlNewDoc", 
                "g_param_spec_flags", 
                "gsasl_session_hook_get", 
                "gnutls_transport_set_ptr", 
                "g_get_current_time", 
                "xmlTextWriterEndElement", 
                "g_log", 
                "gnutls_record_check_pending", 
                "gsasl_property_set", 
                "strlen", 
                "xmlTextReaderNodeType", 
                "gsasl_callback_set", 
                "g_value_get_flags", 
                "g_list_find", 
                "gai_strerror", 
                "g_set_error_literal", 
                "g_get_host_name", 
                "__errno_location", 
                "gnutls_x509_crt_get_issuer_dn_by_oid", 
                "g_strconcat", 
                "g_hash_table_find", 
                "g_type_class_unref", 
                "getsockopt", 
                "gnutls_mac_get", 
                "gnutls_transport_set_pull_function", 
                "g_object_get_property", 
                "if_indextoname", 
                "g_slist_remove", 
                "g_ptr_array_free", 
                "g_ptr_array_foreach", 
                "xmlNewTextChild", 
                "time", 
                "gsasl_client_suggest_mechanism", 
                "avahi_service_resolver_free", 
                "g_string_overwrite_len", 
                "g_object_interface_install_property", 
                "g_signal_connect_data", 
                "readdir_r", 
                "xmlDocGetRootElement", 
                "g_signal_emit", 
                "gnutls_certificate_allocate_credentials", 
                "xmlTextWriterEndDocument", 
                "avahi_age", 
                "xmlBufferContent", 
                "fdopendir", 
                "gsasl_server_start", 
                "xmlOutputBufferClose", 
                "fopen", 
                "g_param_spec_int64", 
                "g_object_set_qdata", 
                "g_cclosure_marshal_VOID__BOXED", 
                "bind", 
                "g_ptr_array_add", 
                "g_type_value_table_peek", 
                "g_signal_handler_disconnect", 
                "g_array_get_type", 
                "g_object_weak_ref", 
                "xmlTextReaderExpand", 
                "g_assertion_message_expr", 
                "gnutls_x509_crt_set_key_usage", 
                "write", 
                "memcmp", 
                "gnutls_init", 
                "g_string_append_len", 
                "g_value_dup_object", 
                "g_file_error_quark", 
                "bindtextdomain", 
                "g_list_free", 
                "gnutls_strerror", 
                "gnutls_cipher_get", 
                "xmlCtxtGetLastError", 
                "g_object_thaw_notify", 
                "xmlParseChunk", 
                "fputc", 
                "gnutls_x509_crt_set_dn_by_oid", 
                "g_array_free", 
                "g_string_truncate", 
                "g_type_check_value", 
                "close", 
                "g_type_add_interface_static", 
                "g_get_current_dir", 
                "avahi_service_resolver_get_client", 
                "g_list_prepend", 
                "gnutls_x509_crq_verify", 
                "__stack_chk_fail", 
                "xmlTextWriterStartDocument", 
                "g_signal_accumulator_true_handled", 
                "gnutls_x509_privkey_export", 
                "g_hash_table_lookup_extended", 
                "g_thread_join", 
                "gnutls_dh_get_prime_bits", 
                "strtol", 
                "g_hash_table_foreach", 
                "g_value_take_string", 
                "gnutls_x509_crq_init", 
                "g_error_new_literal", 
                "gsasl_free", 
                "g_realloc", 
                "gnutls_handshake", 
                "g_object_get_qdata", 
                "g_hash_table_steal", 
                "g_ascii_strtod", 
                "g_signal_handlers_disconnect_matched", 
                "g_cclosure_marshal_VOID__POINTER", 
                "gsasl_property_fast", 
                "gnutls_x509_crq_import", 
                "xmlBufferCreate", 
                "g_string_append_unichar", 
                "gsasl_server_support_p", 
                "__dn_expand", 
                "strncmp", 
                "xmlUnlinkNode", 
                "g_random_int_range", 
                "g_type_add_instance_private", 
                "gnutls_x509_crt_set_activation_time", 
                "xmlCopyNode", 
                "xmlGetProp", 
                "gnutls_x509_crt_check_hostname", 
                "g_object_newv", 
                "strchr", 
                "g_value_dup_boxed", 
                "gnutls_certificate_server_set_request", 
                "g_free", 
                "g_value_get_pointer", 
                "gnutls_certificate_verify_peers2", 
                "g_object_class_install_property", 
                "xmlTextReaderConstName", 
                "g_value_get_int64", 
                "g_thread_try_new", 
                "gnutls_x509_crt_get_fingerprint", 
                "fread", 
                "g_object_freeze_notify", 
                "g_signal_handlers_unblock_matched", 
                "g_once_init_leave", 
                "gnutls_x509_crq_export", 
                "g_once_init_enter", 
                "g_tree_lookup", 
                "gnutls_hash_fast", 
                "strtoul", 
                "gnutls_dh_params_generate2", 
                "g_value_set_static_string", 
                "hstrerror", 
                "g_hash_table_ref", 
                "g_object_set_qdata_full", 
                "xmlBufferEmpty", 
                "g_slist_copy", 
                "listen", 
                "xmlTextWriterFlush", 
                "avahi_entry_group_new", 
                "g_type_check_instance_is_a", 
                "g_hash_table_new", 
                "g_value_set_boolean", 
                "g_strstr_len", 
                "ferror", 
                "g_ascii_dtostr", 
                "xmlBufferFree", 
                "xmlNodeDump", 
                "g_cclosure_marshal_VOID__ENUM", 
                "g_file_set_contents", 
                "g_sprintf", 
                "g_utf8_get_char", 
                "g_error_get_type", 
                "g_object_get", 
                "avahi_client_free", 
                "g_value_unset", 
                "g_malloc0", 
                "g_tree_new_full", 
                "g_string_free", 
                "g_value_take_boxed", 
                "g_strerror", 
                "gnutls_dh_params_export_pkcs3", 
                "g_ptr_array_new", 
                "g_param_spec_object", 
                "__res_query", 
                "gnutls_x509_crt_init", 
                "g_direct_hash", 
                "g_utf8_strlen", 
                "gnutls_x509_crt_set_serial", 
                "__h_errno_location", 
                "g_file_error_from_errno", 
                "g_filename_from_utf8", 
                "g_value_get_boolean", 
                "g_return_if_fail_warning", 
                "g_hash_table_get_keys", 
                "g_hash_table_iter_remove", 
                "avahi_entry_group_reset", 
                "g_object_class_find_property", 
                "g_build_filename", 
                "gsasl_init", 
                "gnutls_x509_crt_get_dn", 
                "g_rmdir", 
                "g_str_equal", 
                "g_hash_table_remove", 
                "xmlTextWriterSetIndent", 
                "gnutls_certificate_get_ours", 
                "g_strdup_vprintf", 
                "strftime", 
                "xmlTextReaderRead", 
                "g_type_instance_get_private", 
                "gnutls_deinit", 
                "g_type_interface_peek", 
                "g_string_assign", 
                "g_value_get_boxed", 
                "g_async_queue_new_full", 
                "avahi_strerror", 
                "g_quark_from_string", 
                "g_array_append_vals", 
                "g_string_insert_c", 
                "gnutls_x509_crt_get_activation_time", 
                "g_object_new", 
                "xmlOutputBufferCreateFile", 
                "g_close", 
                "gnutls_kx_get", 
                "inet_ntop", 
                "g_type_check_instance_cast", 
                "g_slist_free_1", 
                "g_cclosure_marshal_VOID__VOID", 
                "g_strrstr_len", 
                "xmlNodeAddContent", 
                "g_value_get_enum", 
                "g_strdup", 
                "g_type_class_adjust_private_offset", 
                "poll", 
                "g_slist_free", 
                "g_array_new", 
                "mkdir", 
                "g_file_test", 
                "g_ptr_array_sized_new", 
                "avahi_free", 
                "g_array_sized_new", 
                "__gmon_start__", 
                "g_async_queue_unref", 
                "fwrite", 
                "g_mutex_clear", 
                "gsasl_done", 
                "g_value_set_boxed", 
                "gnutls_hash_get_len", 
                "g_thread_unref", 
                "avahi_strdup", 
                "gnutls_record_recv", 
                "g_unichar_isspace", 
                "xmlNodeSetLang", 
                "strcmp", 
                "g_error_free", 
                "gnutls_bye", 
                "g_value_set_int64", 
                "if_nametoindex", 
                "xmlNewTextWriter", 
                "xmlGetLastError", 
                "g_hash_table_new_full", 
                "g_param_spec_string", 
                "getaddrinfo", 
                "gsasl_server_mechlist", 
                "gsasl_client_support_p", 
                "g_quark_to_string", 
                "gnutls_x509_privkey_get_key_id", 
                "_ITM_registerTMCloneTable", 
                "g_random_int", 
                "g_quark_from_static_string", 
                "xmlDocSetRootElement", 
                "gnutls_x509_crt_set_basic_constraints", 
                "g_type_check_instance_is_fundamentally_a", 
                "xmlNewProp", 
                "recv", 
                "g_type_class_peek_parent", 
                "g_get_real_name", 
                "avahi_service_resolver_new", 
                "xmlFreeParserCtxt", 
                "gsasl_finish", 
                "g_value_init", 
                "g_hash_table_unref", 
                "xmlTextReaderGetAttribute", 
                "g_string_sized_new", 
                "xmlSetListDoc", 
                "gnutls_protocol_get_version", 
                "gsasl_session_hook_set", 
                "xmlTextWriterWriteString", 
                "gnutls_x509_crt_get_key_id", 
                "g_value_set_uint", 
                "fclose", 
                "g_param_spec_pointer", 
                "fcntl", 
                "g_object_class_list_properties", 
                "gnutls_x509_crt_deinit", 
                "gnutls_hex_decode", 
                "g_object_class_override_property", 
                "g_object_notify", 
                "gnutls_x509_crt_set_version", 
                "g_get_user_name", 
                "g_locale_to_utf8", 
                "gnutls_dh_params_deinit", 
                "g_tree_foreach", 
                "g_mutex_lock", 
                "g_param_spec_enum", 
                "gnutls_x509_crt_set_crq", 
                "xmlReaderForFile", 
                "gnutls_record_send", 
                "dcgettext", 
                "xmlAddChild", 
                "gnutls_x509_crq_deinit", 
                "g_error_new", 
                "g_string_append", 
                "gnutls_global_deinit", 
                "g_value_set_double", 
                "strerror", 
                "_ITM_deregisterTMCloneTable", 
                "g_unichar_isprint", 
                "g_value_get_object", 
                "g_propagate_error", 
                "g_strdup_printf", 
                "pipe", 
                "g_type_check_class_cast", 
                "g_mutex_init", 
                "fpathconf", 
                "__lxstat", 
                "g_hash_table_insert", 
                "g_intern_static_string", 
                "connect", 
                "open", 
                "g_value_set_static_boxed", 
                "g_value_set_enum", 
                "avahi_entry_group_commit", 
                "g_hash_table_lookup", 
                "g_slice_alloc", 
                "freeaddrinfo", 
                "gnutls_rnd", 
                "g_object_steal_qdata", 
                "g_value_set_pointer", 
                "xmlNewChild", 
                "xmlDocFormatDump", 
                "g_base64_decode_step", 
                "g_memdup", 
                "gnutls_dh_params_init", 
                "g_value_set_object", 
                "g_value_set_flags", 
                "g_type_class_ref", 
                "g_value_set_string", 
                "g_value_get_uint", 
                "g_async_queue_push", 
                "rename", 
                "g_slice_free1", 
                "gsasl_step64", 
                "g_type_interface_add_prerequisite", 
                "g_tree_remove", 
                "closedir", 
                "g_mkstemp_full", 
                "g_hash_table_destroy", 
                "g_boxed_type_register_static", 
                "gnutls_x509_crt_get_serial", 
                "avahi_client_errno", 
                "g_cclosure_marshal_VOID__OBJECT", 
                "g_object_set_property", 
                "gnutls_x509_crt_get_subject_alt_name", 
                "setsockopt", 
                "g_slist_delete_link", 
                "g_mutex_unlock", 
                "read", 
                "g_getenv", 
                "xmlTextWriterWriteAttribute", 
                "xmlNodeGetContent", 
                "gnutls_transport_set_push_function", 
                "g_param_spec_double", 
                "g_list_delete_link", 
                "xmlTextWriterStartElement", 
                "xmlFreeDoc", 
                "gnutls_x509_crt_set_key", 
                "g_error_copy", 
                "gnutls_x509_crt_list_verify", 
                "gnutls_x509_crt_set_expiration_time", 
                "g_param_spec_boxed", 
                "g_file_get_contents", 
                "g_array_set_size", 
                "gnutls_priority_set_direct", 
                "g_object_ref", 
                "xmlFreeTextReader", 
                "xmlCreatePushParserCtxt", 
                "avahi_service_browser_get_client", 
                "g_filename_to_utf8", 
                "xmlSetProp", 
                "strstr", 
                "avahi_client_get_state", 
                "fflush", 
                "g_value_dup_string", 
                "gnutls_x509_crt_import", 
                "g_async_queue_pop", 
                "g_filename_to_uri", 
                "send", 
                "g_propagate_prefixed_error", 
                "xmlTextReaderClose", 
                "gnutls_credentials_set", 
                "g_utf8_casefold", 
                "gnutls_x509_privkey_import", 
                "g_ptr_array_remove_index_fast", 
                "gnutls_x509_crt_export", 
                "accept", 
                "g_object_weak_unref", 
                "g_signal_new", 
                "g_value_get_string", 
                "__ctype_b_loc", 
                "g_tree_destroy", 
                "g_ascii_strcasecmp", 
                "g_flags_register_static", 
                "strpbrk", 
                "g_base64_encode", 
                "g_strfreev", 
                "g_object_unref", 
                "gsasl_callback_hook_set", 
                "g_signal_handlers_block_matched", 
                "__printf_chk", 
                "__cxa_finalize", 
                "xmlBufferLength", 
                "gnutls_transport_set_errno", 
                "g_hash_table_iter_next", 
                "gnutls_x509_crt_list_import", 
                "g_type_name", 
                "avahi_service_browser_free", 
                "gnutls_x509_crt_get_dn_by_oid", 
                "g_malloc", 
                "gnutls_x509_privkey_generate", 
                "gnutls_certificate_get_peers", 
                "gnutls_x509_privkey_deinit", 
                "xmlReadIO", 
                "memmove", 
                "avahi_client_new", 
                "gnutls_global_init", 
                "localtime", 
                "avahi_service_browser_new", 
                "g_slist_find", 
                "xmlNodeAddContentLen", 
                "xmlFreeNodeList", 
                "__sprintf_chk", 
                "g_slist_prepend", 
                "g_path_is_absolute", 
                "xmlTextReaderNext", 
                "avahi_alternative_service_name", 
                "gsasl_strerror", 
                "__fprintf_chk", 
                "g_hash_table_size", 
                "g_get_real_time", 
                "g_hash_table_iter_init", 
                "g_type_register_static_simple", 
                "getsockname", 
                "gnutls_x509_crt_set_subject_alternative_name", 
                "avahi_entry_group_add_service", 
                "avahi_entry_group_get_client", 
                "gnutls_x509_crt_sign2", 
                "g_strndup", 
                "g_enum_register_static", 
                "g_unlink", 
                "g_object_set", 
                "inet_pton", 
                "gnutls_dh_params_import_pkcs3", 
                "g_set_error", 
                "fdopen", 
                "xmlNewNode", 
                "g_strsplit", 
                "socket", 
                "g_str_hash", 
                "xmlFreeTextWriter", 
                "g_string_append_printf", 
                "avahi_entry_group_free"
            ], 
            "rpm": "libinfinity-0.7.1-3.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libinfinity-0.7.so.0.0.0"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " System Environment/Libraries", 
            "Name": " libinfinity", 
            "License": " LGPLv2+", 
            "URL": " http://gobby.0x539.de/trac/wiki/Infinote/Libinfinity", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-19.phx2.fedoraproject.org", 
            "Description": "\nlibinfinity is an implementation of the Infinote protocol written in GObject-based C.\n", 
            "Build Date": " Thu 03 Aug 2017 02:39:57 PM EDT", 
            "Source RPM": " libinfinity-0.7.1-3.fc27.src.rpm", 
            "Version": " 0.7.1", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Fri 04 Aug 2017 09:44:35 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 3.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Library implementing the infinote protocol", 
            "Size": " 1696291"
        }
    }
}