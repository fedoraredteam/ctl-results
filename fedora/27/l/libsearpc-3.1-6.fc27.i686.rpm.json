{
    "results": {
        "usr/lib/libsearpc_so_1_0_2": {
            "report-functions": [
                "close", 
                "g_value_get_double", 
                "g_type_name", 
                "g_object_newv", 
                "g_value_set_double", 
                "g_value_set_uchar", 
                "g_return_if_fail_warning", 
                "g_list_reverse", 
                "g_array_sized_new", 
                "g_array_free", 
                "g_malloc", 
                "g_value_get_uint", 
                "free", 
                "g_value_get_ulong", 
                "json_real_value", 
                "json_array_get", 
                "chmod", 
                "json_string_value", 
                "json_true", 
                "g_checksum_new", 
                "g_value_set_int64", 
                "json_object_iter", 
                "g_value_get_string", 
                "json_null", 
                "g_value_get_int64", 
                "g_str_equal", 
                "g_value_set_enum", 
                "g_value_set_uint", 
                "g_object_class_find_property", 
                "__errno_location", 
                "g_value_init", 
                "g_malloc0", 
                "g_value_set_float", 
                "g_type_class_ref", 
                "g_assertion_message_expr", 
                "g_value_get_boolean", 
                "g_value_set_long", 
                "_ITM_registerTMCloneTable", 
                "g_value_get_schar", 
                "connect", 
                "g_value_set_boolean", 
                "g_strdup", 
                "__cxa_finalize", 
                "json_deep_copy", 
                "g_str_hash", 
                "json_object", 
                "g_list_free", 
                "g_hash_table_remove", 
                "g_type_class_unref", 
                "g_object_get_property", 
                "g_list_prepend", 
                "g_value_set_flags", 
                "__stack_chk_fail", 
                "g_object_unref", 
                "g_hash_table_new_full", 
                "g_log", 
                "bind", 
                "socket", 
                "json_array", 
                "g_value_take_object", 
                "g_file_test", 
                "g_object_class_list_properties", 
                "json_object_set_new", 
                "json_string", 
                "g_checksum_free", 
                "json_false", 
                "json_loadb", 
                "g_hash_table_destroy", 
                "g_hash_table_lookup", 
                "strerror", 
                "json_object_iter_value", 
                "g_value_get_long", 
                "realloc", 
                "json_array_size", 
                "json_object_iter_key", 
                "g_free", 
                "g_list_append", 
                "g_type_is_a", 
                "json_object_iter_next", 
                "__gmon_start__", 
                "json_integer_value", 
                "accept", 
                "g_error_free", 
                "g_value_get_object", 
                "json_object_size", 
                "g_quark_from_string", 
                "g_value_set_object", 
                "g_value_set_int", 
                "g_type_check_instance_cast", 
                "g_value_get_enum", 
                "json_integer", 
                "strlen", 
                "g_value_get_flags", 
                "pthread_create", 
                "json_real", 
                "g_value_set_ulong", 
                "g_checksum_get_string", 
                "json_dumps", 
                "g_unlink", 
                "g_value_get_int", 
                "listen", 
                "g_hash_table_insert", 
                "g_value_get_float", 
                "g_value_get_uchar", 
                "g_set_error", 
                "json_object_get", 
                "json_array_append_new", 
                "write", 
                "_ITM_deregisterTMCloneTable", 
                "g_value_set_string", 
                "json_delete", 
                "g_checksum_update", 
                "g_value_set_schar", 
                "g_type_fundamental", 
                "g_array_append_vals", 
                "g_value_unset", 
                "read", 
                "__memcpy_chk"
            ], 
            "rpm": "libsearpc-3.1-6.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libsearpc.so.1.0.2"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " libsearpc", 
            "License": " LGPLv3", 
            "URL": " https://github.com/haiwen/libsearpc", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildhw-05.phx2.fedoraproject.org", 
            "Description": "\nSearpc is a simple C language RPC framework based on GObject system. Searpc\nhandles the serialization/deserialization part of RPC, the transport part is\nleft to users.\n", 
            "Build Date": " Thu 03 Aug 2017 04:03:00 PM EDT", 
            "Source RPM": " libsearpc-3.1-6.fc27.src.rpm", 
            "Version": " 3.1", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Fri 04 Aug 2017 01:14:57 PM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 6.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " A simple and easy-to-use C language RPC framework", 
            "Size": " 76274"
        }
    }
}