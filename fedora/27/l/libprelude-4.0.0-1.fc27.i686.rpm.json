{
    "results": {
        "usr/lib/libprelude_so_23_4_0": {
            "report-functions": [
                "chdir", 
                "__cxa_atexit", 
                "__uflow", 
                "mkdir", 
                "access", 
                "fwrite", 
                "snprintf", 
                "fputc", 
                "lt_dlerror", 
                "freeaddrinfo", 
                "gnutls_transport_set_ptr", 
                "read", 
                "gnutls_record_send", 
                "gai_strerror", 
                "__xpg_strerror_r", 
                "closedir", 
                "gnutls_global_set_log_level", 
                "lt_dlinit", 
                "gnutls_certificate_set_x509_key", 
                "fscanf", 
                "gnutls_alert_send_appropriate", 
                "mmap64", 
                "fork", 
                "open64", 
                "__ctype_toupper_loc", 
                "pthread_mutexattr_init", 
                "fcntl", 
                "__ctype_b_loc", 
                "close", 
                "gnutls_x509_crt_list_import", 
                "setsid", 
                "gnutls_hash_get_len", 
                "gnutls_x509_crt_init", 
                "calloc", 
                "gnutls_handshake", 
                "pthread_mutexattr_settype", 
                "realloc", 
                "nl_langinfo", 
                "memcmp", 
                "pthread_sigmask", 
                "rand", 
                "__syslog_chk", 
                "pthread_mutex_init", 
                "_IO_getc", 
                "strdup", 
                "pthread_cond_timedwait", 
                "lt_dlforeachfile", 
                "gnutls_global_init", 
                "regexec", 
                "gnutls_x509_privkey_import", 
                "socket", 
                "srand", 
                "strndup", 
                "fclose", 
                "pthread_mutex_unlock", 
                "fileno", 
                "gnutls_init", 
                "strcasestr", 
                "pthread_create", 
                "geteuid", 
                "__vfprintf_chk", 
                "gnutls_record_recv", 
                "sscanf", 
                "gnutls_certificate_verify_peers2", 
                "getpid", 
                "fdopen", 
                "__memset_chk", 
                "connect", 
                "clearerr", 
                "munmap", 
                "_exit", 
                "regcomp", 
                "__errno_location", 
                "getenv", 
                "strrchr", 
                "gnutls_transport_set_pull_function", 
                "gnutls_alert_get_name", 
                "getsockname", 
                "lt_dlopenext", 
                "strcmp", 
                "__cxa_finalize", 
                "gnutls_certificate_free_credentials", 
                "strncasecmp", 
                "gettimeofday", 
                "strsep", 
                "pthread_setspecific", 
                "pthread_mutexattr_destroy", 
                "inet_ntop", 
                "tzset", 
                "gnutls_bye", 
                "ungetc", 
                "memmove", 
                "readdir64", 
                "pthread_join", 
                "ferror", 
                "gnutls_certificate_get_peers", 
                "gnutls_x509_crt_import", 
                "_ITM_registerTMCloneTable", 
                "memmem", 
                "pthread_cond_destroy", 
                "umask", 
                "strchr", 
                "strtoul", 
                "gnutls_certificate_set_x509_trust_file", 
                "gnutls_global_set_log_function", 
                "fputs", 
                "localtime", 
                "__vsnprintf_chk", 
                "lt_dlsym", 
                "gnutls_x509_crt_get_dn_by_oid", 
                "ioctl", 
                "regfree", 
                "gnutls_deinit", 
                "__strncat_chk", 
                "gnutls_transport_set_push_function", 
                "__gmon_start__", 
                "gnutls_x509_privkey_init", 
                "poll", 
                "strtol", 
                "strtoll", 
                "setsockopt", 
                "write", 
                "gnutls_alert_get", 
                "pthread_mutex_destroy", 
                "strerror_r", 
                "signal", 
                "getegid", 
                "strncmp", 
                "gnutls_certificate_get_ours", 
                "strcspn", 
                "pthread_cond_signal", 
                "malloc", 
                "fgets", 
                "gnutls_x509_privkey_deinit", 
                "getaddrinfo", 
                "__fdelt_chk", 
                "gnutls_certificate_allocate_credentials", 
                "pthread_cond_init", 
                "abort", 
                "gnutls_priority_init", 
                "strlen", 
                "mbrtowc", 
                "getcwd", 
                "gnutls_alert_send", 
                "timegm", 
                "lt_dlpreload_default", 
                "strspn", 
                "sigfillset", 
                "gnutls_global_deinit", 
                "gnutls_x509_crt_deinit", 
                "exit", 
                "gmtime_r", 
                "gnutls_hash_fast", 
                "uname", 
                "__assert_fail", 
                "inet_pton", 
                "gnutls_priority_set", 
                "isatty", 
                "gnutls_strerror", 
                "__freading", 
                "free", 
                "__fxstat64", 
                "lt_dlclose", 
                "localtime_r", 
                "pthread_key_delete", 
                "setlocale", 
                "lseek64", 
                "lt_dlexit", 
                "select", 
                "gnutls_priority_deinit", 
                "fseeko64", 
                "__register_atfork", 
                "stpcpy", 
                "gnutls_credentials_set", 
                "pthread_key_create", 
                "pthread_cancel", 
                "__stack_chk_fail", 
                "pthread_getspecific", 
                "strstr", 
                "strftime", 
                "__fpurge", 
                "fopen64", 
                "gnutls_transport_get_ptr", 
                "strtod", 
                "ftruncate64", 
                "regerror", 
                "dup2", 
                "strcasecmp", 
                "strerror", 
                "fread", 
                "pthread_cond_wait", 
                "pthread_mutex_lock", 
                "strtoull", 
                "strncpy", 
                "gnutls_record_check_pending", 
                "gnutls_certificate_activation_time_peers", 
                "fflush", 
                "_ITM_deregisterTMCloneTable", 
                "strtof", 
                "opendir", 
                "pthread_once", 
                "gnutls_certificate_expiration_time_peers", 
                "strptime", 
                "__memcpy_chk", 
                "time", 
                "__snprintf_chk"
            ], 
            "rpm": "libprelude-4.0.0-1.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libprelude.so.23.4.0"
        }, 
        "usr/lib/libpreludecpp_so_8_2_0": {
            "report-functions": [
                "idmef_time_new_from_string", 
                "idmef_data_get_float", 
                "idmef_path_new_fast", 
                "prelude_string_get_string", 
                "prelude_connection_pool_destroy", 
                "idmef_value_new_int64", 
                "idmef_value_type_get_applicable_operators", 
                "prelude_connection_new", 
                "prelude_msgbuf_set_callback", 
                "idmef_analyzer_new_model", 
                "prelude_connection_pool_set_required_permission", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc", 
                "prelude_strerror", 
                "idmef_value_get_class", 
                "idmef_path_get", 
                "idmef_time_new_from_time", 
                "__cxa_throw", 
                "prelude_io_get_fdptr", 
                "prelude_msg_get_message_data", 
                "prelude_connection_set_peer_analyzerid", 
                "prelude_connection_ref", 
                "idmef_class_is_child_list", 
                "prelude_client_profile_get_tls_client_keycert_filename", 
                "prelude_connection_pool_get_data", 
                "prelude_log_set_debug_level", 
                "idmef_path_make_parent", 
                "prelude_error_get_code", 
                "idmef_value_get_uint8", 
                "idmef_time_ref", 
                "idmef_object_print", 
                "prelude_connection_pool_add_connection", 
                "idmef_path_destroy", 
                "prelude_client_profile_get_config_filename", 
                "prelude_io_close", 
                "prelude_connection_get_permission", 
                "idmef_criteria_to_string", 
                "prelude_log_set_callback", 
                "idmef_path_new_from_root_fast", 
                "prelude_client_set_config_filename", 
                "idmef_value_get_time", 
                "idmef_object_destroy", 
                "prelude_connection_pool_new", 
                "_ZNSt8ios_baseD2Ev", 
                "idmef_time_set_from_timeval", 
                "idmef_criteria_new", 
                "prelude_client_profile_get_tls_server_keycert_filename", 
                "idmef_time_set_gmt_offset", 
                "_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc", 
                "idmef_value_get_float", 
                "idmef_criteria_ref", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_", 
                "_Unwind_Resume", 
                "prelude_client_profile_get_tls_client_trusted_cert_filename", 
                "prelude_client_profile_get_prefix", 
                "idmef_value_new_float", 
                "_ZNSo9_M_insertIxEERSoT_", 
                "prelude_connection_set_data", 
                "prelude_client_set_connection_pool", 
                "prelude_io_get_fd", 
                "prelude_connection_destroy", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "idmef_data_get_type", 
                "prelude_client_profile_get_analyzerid_filename", 
                "idmef_value_get_int32", 
                "__cxa_guard_release", 
                "idmef_object_new_from_json", 
                "idmef_value_ref", 
                "prelude_io_destroy", 
                "_ZSt17__throw_bad_allocv", 
                "idmef_data_get_char_string", 
                "prelude_connection_pool_set_connection_string", 
                "prelude_client_get_connection_pool", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj", 
                "idmef_path_is_ambiguous", 
                "_ZNSo9_M_insertIdEERSoT_", 
                "prelude_client_new", 
                "_ZNSt9exceptionD2Ev", 
                "prelude_connection_pool_get_connection_list", 
                "idmef_value_new_class", 
                "idmef_path_get_applicable_operators", 
                "prelude_connection_pool_set_data", 
                "idmef_path_make_child", 
                "idmef_class_get_name", 
                "prelude_client_send_idmef", 
                "prelude_string_set_dup", 
                "idmef_path_is_list", 
                "_ZSt20__throw_length_errorPKc", 
                "idmef_value_list_add", 
                "idmef_value_clone", 
                "prelude_string_new", 
                "idmef_value_new_int32", 
                "prelude_io_new", 
                "prelude_string_new_dup_fast", 
                "prelude_msg_get_len", 
                "prelude_connection_get_peer_analyzerid", 
                "idmef_time_get_gmt_offset", 
                "__stack_chk_fail", 
                "__cxa_finalize", 
                "idmef_message_set_pmsg", 
                "prelude_connection_get_fd", 
                "_ITM_deregisterTMCloneTable", 
                "idmef_class_get_child_class", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj", 
                "prelude_client_profile_get_tls_key_filename", 
                "idmef_object_compare", 
                "__cxa_rethrow", 
                "prelude_msg_read", 
                "prelude_io_set_fdptr", 
                "prelude_msg_recycle", 
                "prelude_string_destroy", 
                "prelude_connection_get_data", 
                "prelude_client_set_required_permission", 
                "idmef_message_write", 
                "idmef_time_set_from_string", 
                "prelude_connection_get_peer_addr", 
                "idmef_path_ncompare", 
                "idmef_class_is_child_keyed_list", 
                "idmef_criteria_clone", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev", 
                "_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "prelude_connection_connect", 
                "__gxx_personality_v0", 
                "idmef_time_set_from_gettimeofday", 
                "prelude_connection_pool_set_connection_dead", 
                "idmef_value_get_int8", 
                "prelude_client_set_flags", 
                "_Znwj", 
                "memmove", 
                "idmef_path_get_value_type", 
                "__cxa_guard_acquire", 
                "prelude_connection_get_local_port", 
                "_ZNSo5writeEPKci", 
                "prelude_client_profile_get_profile_dirname", 
                "idmef_path_check_operator", 
                "idmef_path_ref", 
                "_ZNSt6localeD1Ev", 
                "idmef_time_get_sec", 
                "prelude_log_set_flags", 
                "idmef_time_get_usec", 
                "__cxa_end_catch", 
                "idmef_criteria_new_from_string", 
                "__cxa_begin_catch", 
                "prelude_connection_pool_init", 
                "idmef_criteria_and_criteria", 
                "_ZNSolsEi", 
                "_ZNSt6localeC1Ev", 
                "prelude_connection_pool_del_connection", 
                "idmef_value_iterate", 
                "prelude_client_profile_new", 
                "prelude_client_destroy", 
                "idmef_path_get_index", 
                "idmef_time_new_from_gettimeofday", 
                "idmef_time_set_from_time", 
                "_ITM_registerTMCloneTable", 
                "prelude_log_set_level", 
                "idmef_value_get_data", 
                "prelude_connection_pool_ref", 
                "idmef_class_find_child", 
                "idmef_value_get_uint32", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_ZNSt8ios_baseC2Ev", 
                "strlen", 
                "idmef_value_match", 
                "idmef_value_new_string", 
                "idmef_path_clone", 
                "idmef_value_type_to_string", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_i", 
                "idmef_class_get_child_name", 
                "prelude_client_profile_get_backup_dirname", 
                "idmef_path_undefine_index", 
                "idmef_value_get_type", 
                "idmef_time_set_sec", 
                "idmef_path_get_name", 
                "idmef_value_get_double", 
                "prelude_msgbuf_destroy", 
                "idmef_path_get_depth", 
                "prelude_connection_get_local_addr", 
                "idmef_value_get_uint16", 
                "prelude_client_get_config_filename", 
                "prelude_client_recv_idmef", 
                "idmef_path_has_lists", 
                "idmef_object_clone", 
                "_ZNSi4readEPci", 
                "idmef_data_get_char", 
                "prelude_connection_pool_get_flags", 
                "idmef_analyzer_new_version", 
                "idmef_object_print_json", 
                "idmef_time_destroy", 
                "idmef_analyzer_new_manufacturer", 
                "prelude_client_init", 
                "idmef_value_new_time", 
                "prelude_connection_set_state", 
                "_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1ESt13_Ios_Openmode", 
                "idmef_class_get_child_value_type", 
                "prelude_io_pending", 
                "__cxa_atexit", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj", 
                "idmef_value_get_int16", 
                "prelude_io_set_buffer_io", 
                "prelude_check_version", 
                "__cxa_call_unexpected", 
                "prelude_connection_recv_idmef", 
                "prelude_log_set_logfile", 
                "prelude_client_get_flags", 
                "prelude_msgbuf_get_data", 
                "idmef_path_set_index", 
                "prelude_client_get_analyzer", 
                "idmef_path_compare", 
                "prelude_connection_get_peer_port", 
                "_ZdlPvj", 
                "prelude_error_make", 
                "idmef_class_enum_to_string", 
                "prelude_connection_get_state", 
                "prelude_client_profile_get_tls_server_ca_cert_filename", 
                "idmef_time_clone", 
                "idmef_value_destroy", 
                "idmef_time_new_from_timeval", 
                "idmef_path_get_class", 
                "__cxa_allocate_exception", 
                "prelude_connection_is_alive", 
                "prelude_client_start", 
                "idmef_value_new_list", 
                "idmef_object_ref", 
                "idmef_time_to_string", 
                "idmef_value_get_uint64", 
                "prelude_msg_destroy", 
                "idmef_data_get_int", 
                "idmef_value_new_double", 
                "prelude_connection_pool_get_connection_string", 
                "idmef_criteria_destroy", 
                "prelude_msgbuf_set_data", 
                "prelude_io_set_read_callback", 
                "__gmon_start__", 
                "idmef_value_to_string", 
                "idmef_value_new_uint64", 
                "idmef_value_get_string", 
                "idmef_message_read", 
                "prelude_connection_pool_set_flags", 
                "prelude_log_get_flags", 
                "__cxa_free_exception", 
                "idmef_message_new", 
                "idmef_value_get_enum", 
                "prelude_msgbuf_new", 
                "prelude_client_get_required_permission", 
                "idmef_analyzer_new_class", 
                "prelude_connection_pool_set_connection_alive", 
                "idmef_criteria_match", 
                "prelude_client_profile_ref", 
                "_ZNSt8ios_base4InitD1Ev", 
                "_ZdlPv", 
                "idmef_time_set_usec", 
                "prelude_client_ref", 
                "_ZNKSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE3strEv", 
                "idmef_criteria_or_criteria", 
                "idmef_path_set", 
                "idmef_value_get_int64", 
                "prelude_client_profile_destroy", 
                "prelude_client_get_profile", 
                "prelude_client_profile_get_tls_server_crl_filename", 
                "prelude_connection_close"
            ], 
            "rpm": "libprelude-4.0.0-1.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libpreludecpp.so.8.2.0"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " System Environment/Libraries", 
            "Name": " libprelude", 
            "License": " GPLv2+", 
            "URL": " https://www.prelude-siem.org/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-24.phx2.fedoraproject.org", 
            "Description": "\nLibprelude is a collection of generic functions providing communication\nbetween all Sensors, like IDS (Intrusion Detection System), and the Prelude\nManager. It provides a convenient interface for sending and receiving IDMEF\n(Information and Event Message Exchange Format) alerts to Prelude Manager with\ntransparent SSL, fail-over and replication support, asynchronous events and\ntimer interfaces, an abstracted configuration API (hooking at the command-line,\nthe configuration line, or wide configuration, available from the Manager), and\na generic plugin API. It allows you to easily turn your favorite security\nprogram into a Prelude sensor.\n", 
            "Build Date": " Mon 18 Sep 2017 08:01:24 PM EDT", 
            "Source RPM": " libprelude-4.0.0-1.fc27.src.rpm", 
            "Version": " 4.0.0", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Mon 18 Sep 2017 08:59:56 PM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 1.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Secure Connections between all Sensors and the Prelude Manager", 
            "Size": " 1608811"
        }
    }
}