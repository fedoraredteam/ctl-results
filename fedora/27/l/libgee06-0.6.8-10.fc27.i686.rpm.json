{
    "results": {
        "usr/lib/libgee_so_2_0_0": {
            "report-functions": [
                "g_value_type_compatible", 
                "g_slice_free1", 
                "g_malloc0", 
                "g_assertion_message_expr", 
                "g_value_get_pointer", 
                "g_type_class_add_private", 
                "g_malloc0_n", 
                "g_param_spec_int", 
                "g_param_spec_object", 
                "g_value_set_int", 
                "g_object_interface_install_property", 
                "__cxa_finalize", 
                "g_free", 
                "g_type_name", 
                "g_once_init_leave", 
                "g_type_register_fundamental", 
                "g_type_instance_get_private", 
                "__stack_chk_fail", 
                "g_type_check_class_cast", 
                "g_object_add_weak_pointer", 
                "g_strcmp0", 
                "g_param_spec_pointer", 
                "g_once_init_enter", 
                "g_type_fundamental_next", 
                "g_memdup", 
                "g_type_interface_peek", 
                "g_return_if_fail_warning", 
                "g_object_unref", 
                "g_direct_hash", 
                "g_value_set_boolean", 
                "_ITM_registerTMCloneTable", 
                "g_value_set_pointer", 
                "_ITM_deregisterTMCloneTable", 
                "memmove", 
                "g_type_is_a", 
                "g_object_ref", 
                "g_type_check_instance_cast", 
                "g_log", 
                "g_param_spec_gtype", 
                "g_type_interface_peek_parent", 
                "__gmon_start__", 
                "g_object_new", 
                "g_value_get_gtype", 
                "g_strdup_printf", 
                "g_value_set_gtype", 
                "g_type_free_instance", 
                "g_str_equal", 
                "g_direct_equal", 
                "g_type_register_static", 
                "g_slice_alloc0", 
                "g_object_class_install_property", 
                "g_value_take_object", 
                "g_param_spec_boolean", 
                "g_enum_register_static", 
                "g_str_hash", 
                "g_object_notify", 
                "g_strconcat", 
                "g_spaced_primes_closest", 
                "g_type_interface_add_prerequisite", 
                "g_type_check_instance_is_a", 
                "g_type_class_peek_parent", 
                "g_realloc_n", 
                "g_realloc"
            ], 
            "rpm": "libgee06-0.6.8-10.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libgee.so.2.0.0"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " System Environment/Libraries", 
            "Name": " libgee06", 
            "License": " LGPLv2+", 
            "URL": " http://live.gnome.org/Libgee", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-20.phx2.fedoraproject.org", 
            "Description": "\nlibgee is a collection library providing GObject-based interfaces and\nclasses for commonly used data structures.\n\nlibgee provides the following interfaces:\n\n* Iterable\n  * Collection\n    * List\n    * Set\n    * MultiSet\n    * Queue\n      * Deque\n* Iterator\n* Map\n* MultiMap\n\nThe ArrayList, HashSet, HashMap, HashMultiSet, HashMultiMap,\nLinkedList, PriorityQueue, TreeSet, TreeMap, TreeMultiSet, and\nTreeMultiMap classes provide a reasonable sample implementation of\nthose interfaces. In addition, a set of abstract classes are provided\nto ease the implementation of new collections.\n\nAround that, the API provide means to retrieve read-only views,\nefficient sort algorithms, simple, bi-directional or index-based\nmutable iterators depending on the collection type.\n\nlibgee is written in Vala and can be used like any GObject-based C library.\n", 
            "Build Date": " Thu 03 Aug 2017 02:17:26 PM EDT", 
            "Source RPM": " libgee06-0.6.8-10.fc27.src.rpm", 
            "Version": " 0.6.8", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Fri 04 Aug 2017 08:22:45 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 10.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " GObject collection library", 
            "Size": " 457948"
        }
    }
}