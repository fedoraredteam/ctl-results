{
    "results": {
        "usr/bin/universal": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/universal", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "fread", 
                "fopen", 
                "__gmon_start__", 
                "dc_context_free", 
                "fclose", 
                "fputs", 
                "dc_device_set_fingerprint", 
                "__fprintf_chk", 
                "dc_iterator_free", 
                "dc_parser_destroy", 
                "dc_descriptor_get_vendor", 
                "dc_version", 
                "dc_context_set_loglevel", 
                "dc_datetime_gmtime", 
                "getopt", 
                "dc_context_set_logfunc", 
                "dc_descriptor_get_type", 
                "signal", 
                "dc_parser_set_data", 
                "dc_device_get_type", 
                "dc_device_close", 
                "__stack_chk_fail", 
                "dc_device_set_events", 
                "dc_descriptor_free", 
                "strtoul", 
                "dc_buffer_new", 
                "__vfprintf_chk", 
                "_ITM_registerTMCloneTable", 
                "__libc_start_main", 
                "dc_parser_get_datetime", 
                "dc_device_foreach", 
                "strcasecmp", 
                "dc_buffer_get_data", 
                "dc_buffer_get_size", 
                "strcmp", 
                "dc_device_dump", 
                "dc_parser_new", 
                "dc_descriptor_get_product", 
                "fwrite", 
                "_ITM_deregisterTMCloneTable", 
                "dc_device_open", 
                "dc_descriptor_get_model", 
                "dc_descriptor_iterator", 
                "dc_device_set_cancel", 
                "dc_parser_samples_foreach", 
                "strlen", 
                "__snprintf_chk", 
                "dc_buffer_free", 
                "gettimeofday", 
                "dc_parser_get_field", 
                "strncasecmp", 
                "dc_buffer_append", 
                "dc_iterator_next", 
                "dc_context_new"
            ], 
            "rpm": "libdivecomputer-0.4.2-8.fc27.x86_64.rpm"
        }, 
        "usr/lib64/libdivecomputer_so_0_0_0": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/libdivecomputer.so.0.0.0", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "__xpg_strerror_r", 
                "cfsetospeed", 
                "open", 
                "tcsetattr", 
                "tcsendbreak", 
                "__stack_chk_fail", 
                "connect", 
                "cfsetispeed", 
                "__memcpy_chk", 
                "gmtime_r", 
                "libusb_control_transfer", 
                "__fdelt_chk", 
                "_ITM_registerTMCloneTable", 
                "free", 
                "__vsnprintf_chk", 
                "shutdown", 
                "__gmon_start__", 
                "getsockopt", 
                "__cxa_finalize", 
                "strncpy", 
                "libusb_close", 
                "gettimeofday", 
                "strstr", 
                "libusb_init", 
                "__fprintf_chk", 
                "tcgetattr", 
                "nanosleep", 
                "libusb_release_interface", 
                "ioctl", 
                "localtime_r", 
                "select", 
                "recv", 
                "libusb_open_device_with_vid_pid", 
                "libusb_claim_interface", 
                "libusb_bulk_transfer", 
                "libusb_exit", 
                "realloc", 
                "memcpy", 
                "read", 
                "malloc", 
                "mktime", 
                "_ITM_deregisterTMCloneTable", 
                "memcmp", 
                "tcdrain", 
                "close", 
                "time", 
                "memset", 
                "sleep", 
                "strlen", 
                "__errno_location", 
                "__assert_fail", 
                "tcflush", 
                "send", 
                "memmove"
            ], 
            "rpm": "libdivecomputer-0.4.2-8.fc27.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " libdivecomputer", 
            "License": " LGPLv2+", 
            "URL": " http://libdivecomputer.org", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-25.phx2.fedoraproject.org", 
            "Description": "\nLibdivecomputer is a cross-platform and open source library for\ncommunication with dive computers from various manufacturers.\n\nSupported devices:\n\n    Suunto\n        Solution\n        Eon, Solution Alpha and Solution Nitrox/Vario\n        Vyper, Cobra, Vytec, Vytec DS, D3, Spyder, Gekko, Mosquito,\n        Stinger and Zoop\n        Vyper2, Cobra2, Cobra3, Vyper Air and HelO2\n        D9, D6, D4, D9tx, D6i and D4i\n    Uwatec\n        Aladin\n        Memomouse\n        Smart and Galileo (infrared)\n    Reefnet\n        Sensus\n        Sensus Pro\n        Sensus Ultra\n    Oceanic, Aeris, Sherwood, Hollis, Genesis and Tusa (Pelagic)\n        VT Pro, Versa Pro, Pro Plus 2, Wisdom, Atmos 2, Atmos AI,\n        Atmos Elite, ...\n        Veo 250, Veo 180Nx, XR2, React Pro, DG02, Insight, ...\n        Atom 2.0, VT3, Datamask, Geo, Geo 2.0, Veo 2.0, Veo 3.0, Pro\n        Plus 2.1, Compumask, Elite T3, Epic, Manta, IQ-900 (Zen),\n        IQ-950 (Zen Air), IQ-750 (Element II), ...\n    Mares\n        Nemo, Nemo Excel, Nemo Apneist, ...\n        Puck, Puck Air, Nemo Air, Nemo Wide, ...\n        Darwin, Darwin Air, M1, M2, Airlab\n        Icon HD, Icon HD Net Ready\n    Heinrichs Weikamp\n        OSTC, OSTC Mk.2 and OSTC 2N\n        Frog\n    Cressi, Zeagle and Mares (Seiko)\n        Edy, Nemo Sport\n        N2iTiON3\n    Atomic Aquatics\n        Cobalt\n\nNote: Backends marked with an asterisk (*) are not yet included in the\nsource code.\n", 
            "Build Date": " Thu 03 Aug 2017 02:00:50 PM EDT", 
            "Source RPM": " libdivecomputer-0.4.2-8.fc27.src.rpm", 
            "Version": " 0.4.2", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Fri 04 Aug 2017 07:04:10 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 8.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Library for communication with dive computers", 
            "Size": " 277605"
        }
    }
}