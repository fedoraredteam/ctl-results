{
    "results": {
        "usr/lib64/libasynccore_so_1_4_0": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/libasynccore.so.1.4.0", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "_ZNSolsEi", 
                "listen", 
                "fopen", 
                "_ZSt16__throw_bad_castv", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE5imbueERKSt6locale", 
                "inet_ntoa", 
                "fcntl", 
                "grantpt", 
                "sendto", 
                "inet_aton", 
                "_Znwm", 
                "__memcpy_chk", 
                "fgets", 
                "getsockopt", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm", 
                "strlen", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_", 
                "unlockpt", 
                "_ZN4sigc9slot_baseD1Ev", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm", 
                "write", 
                "tcflush", 
                "__cxa_rethrow", 
                "_ZN4sigc9slot_baseD2Ev", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE7seekoffElSt12_Ios_SeekdirSt13_Ios_Openmode", 
                "open", 
                "_ZSt20__throw_length_errorPKc", 
                "connect", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "execv", 
                "fclose", 
                "setsockopt", 
                "setpriority", 
                "__gxx_personality_v0", 
                "__cxa_end_catch", 
                "__ctype_b_loc", 
                "strtol", 
                "unlink", 
                "__cxa_guard_release", 
                "__cxa_finalize", 
                "exit", 
                "symlink", 
                "strerror", 
                "recvfrom", 
                "_ZNK4sigc9trackable27add_destroy_notify_callbackEPvPFS1_S1_E", 
                "gettimeofday", 
                "pow", 
                "tcsetattr", 
                "_ZNSo3putEc", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsgetnEPcl", 
                "__cxa_begin_catch", 
                "_ZNSt8__detail15_List_node_base9_M_unhookEv", 
                "_ZN4sigc11signal_baseC2Ev", 
                "_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc", 
                "__gmon_start__", 
                "_ZNK4sigc9trackable30remove_destroy_notify_callbackEPv", 
                "read", 
                "bind", 
                "__cxa_atexit", 
                "_ZN4sigc9trackableD2Ev", 
                "pipe", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "tcflow", 
                "memcmp", 
                "ioctl", 
                "_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_", 
                "memset", 
                "_ZNSt8ios_baseC2Ev", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "_ZNSt8ios_base4InitD1Ev", 
                "sigaction", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE9pbackfailEi", 
                "getservbyname", 
                "strchr", 
                "strdup", 
                "_ZN4sigc11signal_base7connectERKNS_9slot_baseE", 
                "_ZN4sigc9slot_baseC2ERKS0_", 
                "_ZNSt6localeD1Ev", 
                "_ZNSo5flushEv", 
                "cfsetospeed", 
                "__assert_fail", 
                "_ZNSt8ios_baseD2Ev", 
                "__cxa_pure_virtual", 
                "_Unwind_Resume", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE5uflowEv", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE9underflowEv", 
                "_ZdlPv", 
                "waitpid", 
                "__stack_chk_fail", 
                "cfsetispeed", 
                "_ZNSt8ios_base4InitC1Ev", 
                "dup2", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate", 
                "memcpy", 
                "posix_openpt", 
                "tcgetattr", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE7seekposESt4fposI11__mbstate_tESt13_Ios_Openmode", 
                "memmove", 
                "_ZNSt6localeC1Ev", 
                "accept", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l", 
                "_Znam", 
                "_ZN4sigc9slot_baseC1EOS0_", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE9showmanycEv", 
                "_ZN4sigc11signal_baseD2Ev", 
                "_ZN4sigc9trackableC2Ev", 
                "poll", 
                "_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE7_M_syncEPcmm", 
                "_ZN4sigc8internal8slot_rep6notifyEPv", 
                "cfmakeraw", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev", 
                "socket", 
                "_ITM_registerTMCloneTable", 
                "perror", 
                "_ZdaPv", 
                "__errno_location", 
                "_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_", 
                "ptsname", 
                "_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE6setbufEPcl", 
                "_Jv_RegisterClasses", 
                "_ITM_deregisterTMCloneTable", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm", 
                "kill", 
                "_ZSt19__throw_logic_errorPKc", 
                "_ZN4sigc9slot_baseC2EPNS_8internal8slot_repE", 
                "_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE", 
                "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base", 
                "_ZN4sigc8internal11signal_impl5sweepEv", 
                "_ZN4sigc9slot_baseC1Ev", 
                "__cxa_guard_acquire", 
                "mktime", 
                "fork", 
                "close"
            ], 
            "rpm": "libasync-1.4.0-1.fc24.x86_64.rpm"
        }, 
        "usr/lib64/libasyncaudio_so_1_4_0": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/libasyncaudio.so.1.4.0", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "_ZNSi10_M_extractIfEERSiRT_", 
                "fopen", 
                "__memcpy_chk", 
                "speex_bits_init", 
                "log2", 
                "__cxa_throw_bad_array_new_length", 
                "_Znwm", 
                "getenv", 
                "snd_pcm_sw_params", 
                "_ZN4sigc11signal_base7connectERKNS_9slot_baseE", 
                "__cxa_atexit", 
                "snd_pcm_hw_params_set_format", 
                "snd_pcm_hw_params", 
                "_ZN4sigc9slot_baseC1EOS0_", 
                "__isoc99_sscanf", 
                "_ZNK4sigc9trackable30remove_destroy_notify_callbackEPv", 
                "snd_config_update_free_global", 
                "gsm_destroy", 
                "_ZSt19__throw_logic_errorPKc", 
                "_ZNSo3putEc", 
                "__vsnprintf_chk", 
                "gsm_create", 
                "strncpy", 
                "_ZN4sigc8internal11signal_impl5sweepEv", 
                "snd_pcm_readi", 
                "snd_pcm_hw_params_malloc", 
                "sincos", 
                "speex_bits_insert_terminator", 
                "sqrt", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc", 
                "_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "snd_strerror", 
                "_ZNSt8ios_base4InitD1Ev", 
                "_ZNSt6localeD1Ev", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l", 
                "snd_pcm_sw_params_malloc", 
                "__snprintf_chk", 
                "_ZN5Async5Timer10setTimeoutEi", 
                "snd_pcm_start", 
                "speex_encoder_ctl", 
                "snd_pcm_sw_params_set_start_threshold", 
                "_ZN4sigc9trackableC2Ev", 
                "_ZN5Async7FdWatch10setEnabledEb", 
                "speex_decoder_ctl", 
                "__cxa_guard_abort", 
                "_ZN5Async5TimerD1Ev", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm", 
                "snd_pcm_hw_params_set_period_size_near", 
                "_ZN5Async11Application3appEv", 
                "strtod", 
                "perror", 
                "snd_pcm_open", 
                "_Unwind_Resume", 
                "snd_pcm_hw_params_set_rate_near", 
                "opus_decoder_ctl", 
                "opus_encode_float", 
                "rewind", 
                "opus_decoder_create", 
                "_ZN5Async9IpAddressC1Ev", 
                "memcpy", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm", 
                "fseek", 
                "memmove", 
                "speex_decoder_init", 
                "_ZN5Async5TimerC1EiNS0_4TypeEb", 
                "snd_pcm_poll_descriptors_count", 
                "gsm_decode", 
                "memcmp", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate", 
                "_Znam", 
                "gettimeofday", 
                "_ZNSo9_M_insertImEERSoT_", 
                "_ZN4sigc9slot_baseD1Ev", 
                "_ZNSt6localeC1Ev", 
                "__gxx_personality_v0", 
                "_ZN5Async5Timer9setEnableEb", 
                "__ctype_b_loc", 
                "_ZN5Async9UdpSocketC1EtRKNS_9IpAddressE", 
                "_ZNSt8ios_baseD2Ev", 
                "_ZSt16__throw_bad_castv", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEcm", 
                "snd_pcm_avail_update", 
                "snd_pcm_hw_params_get_period_size", 
                "speex_bits_write", 
                "_ZNSt8__detail15_List_node_base9_M_unhookEv", 
                "_ZdaPv", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "__cxa_end_catch", 
                "_ZSt24__throw_out_of_range_fmtPKcz", 
                "__cxa_begin_catch", 
                "strstr", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE7_M_syncEPcmm", 
                "speex_bits_read_from", 
                "opus_decode_float", 
                "snd_pcm_prepare", 
                "snd_pcm_poll_descriptors", 
                "__stack_chk_fail", 
                "pow", 
                "opus_encoder_ctl", 
                "__gmon_start__", 
                "_ZN5Async11Application7runTaskEN4sigc4slotIvNS1_3nilES3_S3_S3_S3_S3_S3_EE", 
                "_ZNSolsEi", 
                "speex_bits_remaining", 
                "log", 
                "speex_decoder_destroy", 
                "__strdup", 
                "speex_encoder_destroy", 
                "cos", 
                "ferror", 
                "setlocale", 
                "snd_pcm_poll_descriptors_revents", 
                "speex_decode", 
                "_ITM_registerTMCloneTable", 
                "_ZN4sigc11signal_baseD2Ev", 
                "opus_encoder_destroy", 
                "snd_pcm_hw_params_free", 
                "snd_pcm_hw_params_set_buffer_size_near", 
                "ioctl", 
                "__cxa_finalize", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_", 
                "strerror", 
                "powf", 
                "_ITM_deregisterTMCloneTable", 
                "_ZN4sigc11signal_baseC2Ev", 
                "__dynamic_cast", 
                "_ZN5Async9UdpSocket5writeERKNS_9IpAddressEiPKvi", 
                "snd_pcm_sw_params_current", 
                "strtol", 
                "snd_pcm_hw_params_get_buffer_size", 
                "sincosf", 
                "sin", 
                "__cxa_guard_acquire", 
                "__cxa_guard_release", 
                "read", 
                "_ZN5Async7FdWatchC1EiNS0_11FdWatchTypeE", 
                "_ZNSi10_M_extractItEERSiRT_", 
                "gsm_encode", 
                "_ZSt20__throw_length_errorPKc", 
                "_ZN4sigc9trackableD2Ev", 
                "opus_decoder_destroy", 
                "snd_pcm_hw_params_any", 
                "_ZN4sigc9slot_baseC2EPNS_8internal8slot_repE", 
                "_ZN5Async7FdWatchD1Ev", 
                "write", 
                "free", 
                "snd_pcm_close", 
                "opus_packet_get_nb_channels", 
                "logf", 
                "speex_encode", 
                "atan2", 
                "__fprintf_chk", 
                "cosh", 
                "_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "__assert_fail", 
                "floor", 
                "speex_bits_destroy", 
                "memset", 
                "fwrite", 
                "_ZdlPv", 
                "speex_bits_reset", 
                "snd_pcm_hw_params_set_channels", 
                "close", 
                "opus_packet_get_nb_frames", 
                "_ZN5Async9UdpSocketD1Ev", 
                "_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "opus_encoder_create", 
                "_ZNKSt5ctypeIcE13_M_widen_initEv", 
                "_ZNSt8ios_baseC2Ev", 
                "rand_r", 
                "_ZN4sigc9slot_baseD2Ev", 
                "opus_packet_get_samples_per_frame", 
                "realloc", 
                "snd_pcm_hw_params_set_access", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm", 
                "_Jv_RegisterClasses", 
                "exp", 
                "snd_pcm_sw_params_free", 
                "_ZNK4sigc9trackable27add_destroy_notify_callbackEPvPFS1_S1_E", 
                "_ZN4sigc9slot_baseC1Ev", 
                "_ZNSo5flushEv", 
                "calloc", 
                "_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_", 
                "__cxa_rethrow", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "speex_bits_nbytes", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm", 
                "_ZNSo9_M_insertIdEERSoT_", 
                "opus_strerror", 
                "speex_encoder_init", 
                "__open_2", 
                "open", 
                "_ZN5Async9IpAddressC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", 
                "exit", 
                "__errno_location", 
                "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base", 
                "_ZN4sigc8internal8slot_rep6notifyEPv", 
                "hypot", 
                "sinh", 
                "__cxa_pure_virtual", 
                "fclose", 
                "sqrtf", 
                "__sprintf_chk", 
                "asinh", 
                "snd_pcm_sw_params_set_avail_min", 
                "strlen", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_"
            ], 
            "rpm": "libasync-1.4.0-1.fc24.x86_64.rpm"
        }, 
        "usr/lib64/libasynccpp_so_1_4_0": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/libasynccpp.so.1.4.0", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "_ZN4sigc9slot_baseD1Ev", 
                "_ZN5Async11ApplicationD2Ev", 
                "pthread_mutex_destroy", 
                "__cxa_pure_virtual", 
                "_ZN4sigc8internal8slot_rep6notifyEPv", 
                "sigaction", 
                "_ZN5Async7FdWatchC1EiNS0_11FdWatchTypeE", 
                "_ZN4sigc9slot_baseC2EPNS_8internal8slot_repE", 
                "_ZN4sigc9slot_baseD2Ev", 
                "read", 
                "_ZNSo5flushEv", 
                "__assert_fail", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "_ZN4sigc9slot_baseC1Ev", 
                "_ZNKSt5ctypeIcE13_M_widen_initEv", 
                "gethostbyname_r", 
                "_ITM_registerTMCloneTable", 
                "clock_gettime", 
                "_ZNSolsEi", 
                "_ZNSo3putEc", 
                "_ZN5Async7FdWatch10setEnabledEb", 
                "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base", 
                "_ZNSt8ios_base4InitD1Ev", 
                "write", 
                "_ZSt17__throw_bad_allocv", 
                "_ZN4sigc9trackableC2Ev", 
                "__cxa_atexit", 
                "_ZNSt8ios_base4InitC1Ev", 
                "exit", 
                "_Jv_RegisterClasses", 
                "_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_", 
                "_ZN4sigc11signal_baseC2Ev", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l", 
                "_ZdlPv", 
                "__gmon_start__", 
                "_ZN4sigc8internal11signal_impl5sweepEv", 
                "_ZNK4sigc9trackable30remove_destroy_notify_callbackEPv", 
                "_ZNSt8__detail15_List_node_base9_M_unhookEv", 
                "perror", 
                "_ZN4sigc11signal_base7connectERKNS_9slot_baseE", 
                "pthread_mutex_unlock", 
                "__fdelt_chk", 
                "__gxx_personality_v0", 
                "__errno_location", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "realloc", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm", 
                "_ZSt19__throw_logic_errorPKc", 
                "close", 
                "_ZN5Async9IpAddressC1ERK7in_addr", 
                "_ZN4sigc9trackableD2Ev", 
                "_ZN4sigc9slot_baseC1EOS0_", 
                "pthread_mutex_lock", 
                "_ZSt16__throw_bad_castv", 
                "_ZN5Async11ApplicationC2Ev", 
                "pthread_mutex_init", 
                "memcpy", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "sigemptyset", 
                "pipe", 
                "_Znwm", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "_ZN5Async7FdWatchD1Ev", 
                "free", 
                "__cxa_finalize", 
                "__stack_chk_fail", 
                "_ITM_deregisterTMCloneTable", 
                "pthread_join", 
                "pthread_cancel", 
                "_ZNK4sigc9trackable27add_destroy_notify_callbackEPvPFS1_S1_E", 
                "pselect", 
                "_ZN4sigc11signal_baseD2Ev"
            ], 
            "rpm": "libasync-1.4.0-1.fc24.x86_64.rpm"
        }, 
        "usr/lib64/libasyncqt_so_1_4_0": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/libasyncqt.so.1.4.0", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "__cxa_rethrow", 
                "_ZNSt8ios_base4InitD1Ev", 
                "__cxa_atexit", 
                "_ZN12QApplication14x11EventFilterEP7_XEvent", 
                "_Z5qFreePv", 
                "_ZN12QApplicationD2Ev", 
                "_ZN5Async9IpAddressC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", 
                "_Znwm", 
                "_ZN12QHostAddressC1ERKS_", 
                "_ZN12QApplication11qt_metacastEPKc", 
                "_ZN7QString16fromAscii_helperEPKci", 
                "_ZN4sigc9slot_baseC1EOS0_", 
                "_ZN9QListData6detachEi", 
                "_ZNK12QHostAddress8toStringEv", 
                "_ZN12QApplication5eventEP6QEvent", 
                "_ZN7QObject10childEventEP11QChildEvent", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "__cxa_finalize", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "_ZN7QObject13connectNotifyEPKc", 
                "_ITM_registerTMCloneTable", 
                "_ZN9QHostInfo15abortHostLookupEi", 
                "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base", 
                "_ZN4sigc11signal_baseD2Ev", 
                "__stack_chk_fail", 
                "_ZSt19__throw_logic_errorPKc", 
                "_ZN12QHostAddressD1Ev", 
                "_ZN12QApplication10commitDataER15QSessionManager", 
                "_ZNK9QHostInfo9addressesEv", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm", 
                "_ZN12QApplication13compressEventEP6QEventP7QObjectP14QPostEventList", 
                "_ZN4sigc9slot_baseD1Ev", 
                "_ZN7QObject11eventFilterEPS_P6QEvent", 
                "_ZNK7QString7toAsciiEv", 
                "_ZN12QApplication11qt_metacallEN11QMetaObject4CallEiPPv", 
                "_ZN6QTimer5startEi", 
                "_ZN12QApplication16x11ClientMessageEP7QWidgetP7_XEventb", 
                "_ZN9QHostInfoaSERKS_", 
                "_ZN4sigc11signal_baseC2Ev", 
                "_Jv_RegisterClasses", 
                "_Unwind_Resume", 
                "_ZN7QObject5eventEP6QEvent", 
                "_ZN7QObject7connectEPKS_PKcS1_S3_N2Qt14ConnectionTypeE", 
                "_ZN7QObject10timerEventEP11QTimerEvent", 
                "__cxa_end_catch", 
                "memcpy", 
                "_ZdlPv", 
                "__cxa_begin_catch", 
                "_ZN7QObjectD2Ev", 
                "_ZN12QApplication4execEv", 
                "_ZNSt8__detail15_List_node_base9_M_unhookEv", 
                "_ZN6QTimerC1EP7QObject", 
                "__cxa_pure_virtual", 
                "_ZN7QObject11customEventEP6QEvent", 
                "_ZN7QObject11qt_metacallEN11QMetaObject4CallEiPPv", 
                "_ZN7QObject16disconnectNotifyEPKc", 
                "__gxx_personality_v0", 
                "_ZN7QString4freeEPNS_4DataE", 
                "_ZN4sigc8internal11signal_impl5sweepEv", 
                "_ZN16QCoreApplication4quitEv", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "_ZN7QObjectC2EPS_", 
                "_ZN4sigc9slot_baseC1Ev", 
                "_ZN5Async11ApplicationD2Ev", 
                "_ZN7QObject11qt_metacastEPKc", 
                "_ZN5Async11ApplicationC2Ev", 
                "_ZN12QApplication9saveStateER15QSessionManager", 
                "_ZN9QHostInfo10lookupHostERK7QStringP7QObjectPKc", 
                "_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_", 
                "_ZN9QHostInfoC1Ei", 
                "_ITM_deregisterTMCloneTable", 
                "_ZNK12QHostAddress8protocolEv", 
                "_ZN12QApplicationC2ERiPPci", 
                "__assert_fail", 
                "_ZN9QHostInfoD1Ev", 
                "_ZN15QSocketNotifierC1EiNS_4TypeEP7QObject", 
                "_ZN12QApplication6notifyEP7QObjectP6QEvent"
            ], 
            "rpm": "libasync-1.4.0-1.fc24.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Development/Libraries", 
            "Name": " libasync", 
            "License": " GPLv2+", 
            "URL": " http://www.svxlink.net", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-13.phx2.fedoraproject.org", 
            "Source RPM": " svxlink-15.11-1.fc24.src.rpm", 
            "Description": "\nThe Async library is a programming framework that is used to write event driven\napplications. It provides abstractions for file descriptor watches, timers,\nnetwork communications, serial port communications and config file reading.\n\nAsync is written in such a way that it can support other frameworks. Right now\nthere are two basic frameworks, a simple \"select\" based implementation and a Qt\nimplementation. The idea is that advanced libraries can be implemented in such\na way that they only depend on Async. That means that these libraries can be\nused in both Qt and pure console applications and in any future frameworks\nsupported by Async (e.g. Gtk, wxWidgets etc).\n\nAnother big part of Async is the audio pipe framework. It is an audio handling\nframework that is geared towards single channel (mono) audio applications. The\nframework consists of a large number of audio handling classes such as\naudio i/o, filtering, mixing, audio codecs etc.\n", 
            "Build Date": " Mon 22 Feb 2016 05:38:50 AM EST", 
            "Epoch": " 2", 
            "Version": " 1.4.0", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Sat 25 Feb 2017 04:14:27 PM EST, Key ID f55e7430f5282ee4", 
            "Release": " 1.fc24", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Svxlink async libs", 
            "Size": " 574638"
        }
    }
}