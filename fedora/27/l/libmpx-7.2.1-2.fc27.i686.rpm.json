{
    "results": {
        "usr/lib/libmpx_so_2_0_1": {
            "report-functions": [
                "fprintf", 
                "sigaction", 
                "sigprocmask", 
                "secure_getenv", 
                "remove", 
                "pthread_mutex_init", 
                "strcmp", 
                "abort", 
                "pthread_mutex_unlock", 
                "__register_atfork", 
                "_ITM_registerTMCloneTable", 
                "fclose", 
                "__assert_fail", 
                "prctl", 
                "mmap", 
                "pthread_mutex_destroy", 
                "fwrite", 
                "snprintf", 
                "strcpy", 
                "munmap", 
                "pthread_mutex_lock", 
                "fileno", 
                "getpid", 
                "fopen", 
                "__gmon_start__", 
                "calloc", 
                "_ITM_deregisterTMCloneTable", 
                "__stack_chk_fail", 
                "vfprintf", 
                "strlen", 
                "exit", 
                "write", 
                "__cxa_finalize"
            ], 
            "rpm": "libmpx-7.2.1-2.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/libmpx.so.2.0.1"
        }, 
        "usr/lib/libmpxwrappers_so_2_0_1": {
            "report-functions": [
                "__cxa_finalize", 
                "__gmon_start__", 
                "calloc", 
                "realloc", 
                "strncat", 
                "strcat", 
                "memcpy", 
                "_ITM_registerTMCloneTable", 
                "memset", 
                "get_bd", 
                "strnlen", 
                "_ITM_deregisterTMCloneTable", 
                "__assert_fail", 
                "mmap", 
                "memmove"
            ], 
            "rpm": "libmpx-7.2.1-2.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/libmpxwrappers.so.2.0.1"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " System Environment/Libraries", 
            "Name": " libmpx", 
            "License": " GPLv3+ and GPLv3+ with exceptions and GPLv2+ with exceptions and LGPLv2+ and BSD", 
            "URL": " http://gcc.gnu.org", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildhw-05.phx2.fedoraproject.org", 
            "Description": "\nThis package contains the Memory Protection Extensions runtime libraries\nwhich is used for -fcheck-pointer-bounds -mmpx instrumented programs.\n", 
            "Build Date": " Fri 15 Sep 2017 08:13:45 AM EDT", 
            "Source RPM": " gcc-7.2.1-2.fc27.src.rpm", 
            "Version": " 7.2.1", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Sat 16 Sep 2017 10:08:55 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 2.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " The Memory Protection Extensions runtime libraries", 
            "Size": " 31600"
        }
    }
}