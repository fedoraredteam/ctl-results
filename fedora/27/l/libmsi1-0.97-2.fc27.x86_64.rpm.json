{
    "results": {
        "usr/lib64/libmsi_so_0_0_0": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/libmsi.so.0.0.0", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "gsf_input_memory_new", 
                "g_param_spec_string", 
                "g_string_free", 
                "strchr", 
                "g_value_set_object", 
                "g_flags_register_static", 
                "gsf_output_close", 
                "g_free", 
                "g_strdup_printf", 
                "gsf_input_name", 
                "g_input_stream_get_type", 
                "g_type_add_interface_static", 
                "gsf_input_get_type", 
                "rename", 
                "g_file_replace", 
                "g_enum_register_static", 
                "gsf_input_remaining", 
                "g_propagate_error", 
                "memcpy", 
                "g_value_get_uint", 
                "g_object_class_install_property", 
                "g_param_spec_object", 
                "__stack_chk_fail", 
                "__sprintf_chk", 
                "g_value_set_uint", 
                "_ITM_deregisterTMCloneTable", 
                "g_type_check_instance_cast", 
                "gsf_outfile_msole_get_type", 
                "g_file_new_for_path", 
                "g_set_error_literal", 
                "g_seekable_get_type", 
                "strcat", 
                "__cxa_finalize", 
                "g_type_check_class_cast", 
                "free", 
                "g_type_register_static_simple", 
                "g_return_if_fail_warning", 
                "gsf_infile_get_type", 
                "g_string_append_printf", 
                "g_object_set_data_full", 
                "g_array_append_vals", 
                "g_io_error_quark", 
                "gsf_output_seek", 
                "g_output_stream_get_type", 
                "unlink", 
                "g_param_spec_flags", 
                "__memcpy_chk", 
                "gsf_outfile_msole_new", 
                "g_object_ref", 
                "realloc", 
                "memset", 
                "strdup", 
                "g_object_new", 
                "g_value_set_string", 
                "g_string_printf", 
                "gsf_input_stdio_new", 
                "malloc", 
                "g_array_new", 
                "g_file_get_child", 
                "g_object_unref", 
                "g_try_malloc", 
                "g_error_matches", 
                "g_once_init_enter", 
                "mktime", 
                "memmove", 
                "g_object_get_data", 
                "gsf_infile_msole_get_class_id", 
                "gsf_infile_num_children", 
                "g_cancellable_get_type", 
                "gsf_infile_msole_new", 
                "gsf_outfile_new_child", 
                "g_malloc0_n", 
                "gsf_msole_iconv_open_for_import", 
                "qsort", 
                "g_value_dup_object", 
                "gsf_input_copy", 
                "__gmon_start__", 
                "strcpy", 
                "g_once_init_leave", 
                "gsf_input_read", 
                "gsf_input_dup", 
                "gsf_msole_iconv_win_codepage", 
                "gsf_outfile_msole_set_class_id", 
                "g_input_stream_read_all", 
                "g_output_stream_splice", 
                "__assert_fail", 
                "g_intern_static_string", 
                "__strcpy_chk", 
                "gsf_infile_child_by_name", 
                "g_strdup", 
                "__stpcpy_chk", 
                "g_set_error", 
                "g_param_spec_uint", 
                "gsf_infile_name_by_index", 
                "g_convert_with_iconv", 
                "_ITM_registerTMCloneTable", 
                "g_malloc", 
                "gmtime_r", 
                "g_value_set_flags", 
                "g_strdup_vprintf", 
                "gsf_input_tell", 
                "g_type_class_adjust_private_offset", 
                "write", 
                "gsf_infile_child_by_index", 
                "calloc", 
                "gsf_input_size", 
                "gsf_infile_msole_get_type", 
                "g_file_make_directory_with_parents", 
                "g_quark_from_static_string", 
                "gsf_outfile_get_type", 
                "gsf_output_stdio_new", 
                "g_string_sized_new", 
                "strlen", 
                "gsf_output_write", 
                "g_value_get_flags", 
                "__strcat_chk", 
                "strcmp", 
                "g_file_get_contents", 
                "g_type_name", 
                "g_log", 
                "strtol", 
                "g_warn_message", 
                "g_clear_error", 
                "stpcpy", 
                "gsf_msole_iconv_open_codepage_for_export", 
                "g_value_dup_string", 
                "__ctype_b_loc", 
                "gsf_input_seek", 
                "g_build_filename", 
                "gsf_output_get_type", 
                "g_type_class_peek_parent"
            ], 
            "rpm": "libmsi1-0.97-2.fc27.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " libmsi1", 
            "License": " LGPLv2+", 
            "URL": " http://ftp.gnome.org/pub/GNOME/sources/msitools", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-09.phx2.fedoraproject.org", 
            "Description": "\nlibmsi is a GObject library to work with Windows Installer files.  It is\na port from the MSI library of the Wine project.\n", 
            "Build Date": " Mon 31 Jul 2017 08:04:57 AM EDT", 
            "Source RPM": " msitools-0.97-2.fc27.src.rpm", 
            "Version": " 0.97", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Mon 31 Jul 2017 08:08:52 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 2.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " A library to manipulate Windows .MSI files", 
            "Size": " 264829"
        }
    }
}