{
    "results": {
        "usr/lib64/libjsonrpccpp-server_so_1_0_0": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/libjsonrpccpp-server.so.1.0.0", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "_ZSt24__throw_out_of_range_fmtPKcz", 
                "_ZNK4Json5Value8isStringEv", 
                "unlink", 
                "_ZNK7jsonrpc9Procedure16GetProcedureTypeEv", 
                "_ZNSo5writeEPKcl", 
                "_ZN4Json5Value6appendERKS0_", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc", 
                "_ZNK7jsonrpc16JsonRpcException7GetDataEv", 
                "_ZN7jsonrpc12StreamReaderD1Ev", 
                "_ZN4Json5ValueC1ENS_9ValueTypeE", 
                "_ZNSt11logic_errorC2ERKS_", 
                "_Znwm", 
                "_ZNSt13runtime_errorD1Ev", 
                "_ZSt15future_categoryv", 
                "_ZNK7jsonrpc16JsonRpcException7GetCodeEv", 
                "_ITM_deregisterTMCloneTable", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc", 
                "_ZdlPv", 
                "_ZNK4Json5Value10isIntegralEv", 
                "_ZNK4Json5Value4sizeEv", 
                "__stack_chk_fail", 
                "_ZNSt18condition_variableD1Ev", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcmm", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "pthread_create", 
                "MHD_start_daemon", 
                "redisCommand", 
                "_ZNK7jsonrpc9Procedure18ValdiateParametersERKN4Json5ValueE", 
                "_ZSt25__throw_bad_function_callv", 
                "__cxa_init_primary_exception", 
                "_ZNSt6thread6_StateD2Ev", 
                "_Unwind_Resume", 
                "strcmp", 
                "_ZNK4Json5Value6isNullEv", 
                "close", 
                "_ZNSt13runtime_errorC1EPKc", 
                "_ZNK4Json5ValueixEPKc", 
                "__cxa_throw", 
                "_ZN4Json5ValueC1EPKc", 
                "MHD_is_feature_supported", 
                "_ZN4Json6ReaderC1Ev", 
                "_ZN7jsonrpc6Errors15GetErrorMessageB5cxx11Ei", 
                "bind", 
                "__cxa_free_exception", 
                "redisConnect", 
                "nanosleep", 
                "_ZSt9terminatev", 
                "_ZN4Json5ValueixEPKc", 
                "pthread_mutex_lock", 
                "__cxa_atexit", 
                "select", 
                "__fdelt_chk", 
                "_ZN4Json6WriterD2Ev", 
                "_ZNSt8ios_baseC2Ev", 
                "__cxa_end_catch", 
                "_ZSt17current_exceptionv", 
                "_ITM_registerTMCloneTable", 
                "accept", 
                "_ZNK7jsonrpc16JsonRpcException10GetMessageB5cxx11Ev", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "MHD_stop_daemon", 
                "__cxa_allocate_exception", 
                "_ZSt20__throw_future_errori", 
                "_ZN4Json5ValueaSES0_", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm", 
                "_ZNSt13__future_base12_Result_baseC2Ev", 
                "__gxx_personality_v0", 
                "_ZSt19__throw_logic_errorPKc", 
                "_ZN4Json5ValueD1Ev", 
                "_ZNSt15__exception_ptr13exception_ptrD1Ev", 
                "MHD_add_response_header", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "memcpy", 
                "redisFree", 
                "_ZNK7jsonrpc9Procedure16GetProcedureNameB5cxx11Ev", 
                "MHD_destroy_response", 
                "_ZN7jsonrpc12StreamReaderC1Em", 
                "_ZNSt12future_errorD1Ev", 
                "pthread_once", 
                "_ZNSt11logic_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", 
                "_ZNK4Json5Value8isObjectEv", 
                "__cxa_begin_catch", 
                "_ZNSt6localeD1Ev", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_ZNK4Json5Value7isArrayEv", 
                "_ZN4Json5ValueC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", 
                "fcntl", 
                "_ZNSt15__exception_ptr13exception_ptr4swapERS0_", 
                "__cxa_rethrow", 
                "__cxa_finalize", 
                "_ZNSt18condition_variableC1Ev", 
                "pthread_join", 
                "_ZNK4Json5ValueixEj", 
                "_ZNK4Json5Value8isMemberEPKc", 
                "access", 
                "_ZN7jsonrpc12StreamReader4ReadERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEic", 
                "_ZNSt6thread4joinEv", 
                "__pthread_key_create", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "_ZNK4Json5ValueeqERKS0_", 
                "__cxa_pure_virtual", 
                "_ZNSt15__exception_ptr13exception_ptrC1EPv", 
                "_ZNK4Json5Value8asStringB5cxx11Ev", 
                "_ZN7jsonrpc19SpecificationParser14GetFileContentERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_", 
                "_ZSt20__throw_system_errori", 
                "MHD_queue_response", 
                "_ZNSt13__future_base13_State_baseV211_Make_ready6_M_setEv", 
                "_ZSt17__throw_bad_allocv", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm", 
                "_ZN7jsonrpc12StreamWriter5WriteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi", 
                "_ZN4Json6Reader5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_5ValueEb", 
                "_ZN7jsonrpc9ProcedureC1Ev", 
                "socket", 
                "__errno_location", 
                "_ZNSt8ios_baseD2Ev", 
                "__tls_get_addr", 
                "_ZN4Json5ValueC1ERKS0_", 
                "memmove", 
                "strncpy", 
                "_ZN4Json10FastWriterC1Ev", 
                "_ZNSt18condition_variable10notify_oneEv", 
                "_ZN4Json10FastWriter5writeB5cxx11ERKNS_5ValueE", 
                "__gmon_start__", 
                "__once_proxy", 
                "_ZNSt18condition_variable10notify_allEv", 
                "_ZNSt8ios_base4InitD1Ev", 
                "listen", 
                "_ZN4Json5ValueC1Ei", 
                "pthread_mutex_unlock", 
                "memcmp", 
                "strlen", 
                "_ZNSt13__future_base12_Result_baseD2Ev", 
                "_ZNSt18condition_variable4waitERSt11unique_lockISt5mutexE", 
                "freeReplyObject", 
                "_ZNSt6thread15_M_start_threadESt10unique_ptrINS_6_StateESt14default_deleteIS1_EEPFvvE", 
                "_ZNSt28__atomic_futex_unsigned_base19_M_futex_notify_allEPj", 
                "_ZNSt6localeC1Ev", 
                "_ZNK4Json5ValueneERKS0_"
            ], 
            "rpm": "libjson-rpc-cpp-server-1.0.0-2.fc27.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " libjson-rpc-cpp-server", 
            "License": " MIT", 
            "URL": " https://github.com/cinemast/libjson-rpc-cpp", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-29.phx2.fedoraproject.org", 
            "Description": "\nThis library provides classes to easily implement JSON-RPC C++ Server\napplications. It comes with a built in HTTP-Server connector (based on\nlibmicrohttpd) for easy data exchange. It is fully JSON-RPC 2.0 and\nJSON-RPC 1.0 compatible, including:\n\n* Type checking\n* Malformed request handling\n* Handling batch procedure calls\n* JSON-RPC Method invocation\n* JSON-RPC Notification invocation\n* Simple Interface for implementing additional Server-Connectors beside HTTP\n* Positional and named parameters\n", 
            "Build Date": " Fri 01 Sep 2017 06:29:39 PM EDT", 
            "Source RPM": " libjson-rpc-cpp-1.0.0-2.fc27.src.rpm", 
            "Version": " 1.0.0", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Sat 02 Sep 2017 04:09:21 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 2.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Library implementing json-rpc C++ clients", 
            "Size": " 109728"
        }
    }
}