{
    "results": {
        "usr/lib64/libpqxx-4_0_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/libpqxx-4.0.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm", 
                "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base", 
                "__stack_chk_fail", 
                "_ZNSt13runtime_errorD1Ev", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE5imbueERKSt6locale", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "PQfnumber", 
                "PQftype", 
                "isspace", 
                "_ZNSt13runtime_errorD2Ev", 
                "malloc", 
                "PQconsumeInput", 
                "__memcpy_chk", 
                "lo_creat", 
                "_ZNSt8ios_baseD2Ev", 
                "PQsetErrorVerbosity", 
                "memcmp", 
                "_ZNSt14overflow_errorD1Ev", 
                "strcmp", 
                "PQcancel", 
                "PQnfields", 
                "PQresultErrorField", 
                "_ZSt9terminatev", 
                "poll", 
                "_ZNSo9_M_insertIxEERSoT_", 
                "PQtrace", 
                "_ZNSo9_M_insertIeEERSoT_", 
                "_ZNSt14overflow_errorC1EPKc", 
                "_ZNSi10_M_extractIdEERSiRT_", 
                "PQport", 
                "memmove", 
                "_ZNSt8ios_baseC2Ev", 
                "_Znam", 
                "_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_", 
                "_ZNKSt11logic_error4whatEv", 
                "PQgetlength", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_", 
                "_ZNSt8__detail15_List_node_base4swapERS0_S1_", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm", 
                "PQclientEncoding", 
                "sleep", 
                "PQerrorMessage", 
                "strerror_r", 
                "_ITM_registerTMCloneTable", 
                "_Unwind_Resume", 
                "__cxa_allocate_exception", 
                "strncmp", 
                "PQendcopy", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc", 
                "PQunescapeBytea", 
                "PQexec", 
                "_ZNSt11logic_errorC1EPKc", 
                "PQexecParams", 
                "PQcmdStatus", 
                "_ITM_deregisterTMCloneTable", 
                "PQftablecol", 
                "lo_open", 
                "PQreset", 
                "_ZNSt11logic_errorD2Ev", 
                "PQhost", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", 
                "_ZSt19__throw_logic_errorPKc", 
                "__cxa_throw_bad_array_new_length", 
                "PQuser", 
                "PQntuples", 
                "_ZdaPv", 
                "_ZNKSt13runtime_error4whatEv", 
                "PQftable", 
                "lo_export", 
                "_ZNSi10_M_extractIeEERSiRT_", 
                "lo_tell", 
                "_ZNSt6localeC1Ev", 
                "PQsendQuery", 
                "__gmon_start__", 
                "_ZNSt12domain_errorD2Ev", 
                "_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE7_M_syncEPcmm", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "PQescapeByteaConn", 
                "PQsetNoticeProcessor", 
                "__pthread_key_create", 
                "_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "PQputCopyData", 
                "_ZNSi10_M_extractIfEERSiRT_", 
                "_ZNSt13runtime_errorC1EPKc", 
                "__cxa_guard_release", 
                "_ZSt20__throw_length_errorPKc", 
                "_ZNSt8__detail15_List_node_base9_M_unhookEv", 
                "_ZNSt11logic_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", 
                "__gxx_personality_v0", 
                "lo_write", 
                "_ZNSt16invalid_argumentD2Ev", 
                "PQconnectdb", 
                "PQconnectStart", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "PQgetisnull", 
                "PQputCopyEnd", 
                "__cxa_pure_virtual", 
                "lo_unlink", 
                "_ZNSo9_M_insertIlEERSoT_", 
                "PQescapeBytea", 
                "PQisBusy", 
                "PQprepare", 
                "_ZNSt6localeC1EPKc", 
                "_ZNSt12out_of_rangeC1EPKc", 
                "_ZNSt12domain_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", 
                "PQescapeIdentifier", 
                "PQgetvalue", 
                "lo_close", 
                "__cxa_guard_acquire", 
                "PQexecPrepared", 
                "lo_import", 
                "__errno_location", 
                "PQfreeCancel", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm", 
                "__cxa_end_catch", 
                "_ZNSt11logic_errorD1Ev", 
                "__cxa_finalize", 
                "_ZNSo9_M_insertIdEERSoT_", 
                "PQstatus", 
                "PQsocket", 
                "PQisthreadsafe", 
                "_ZdlPvm", 
                "__cxa_begin_catch", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc", 
                "PQgetCancel", 
                "strlen", 
                "__cxa_call_unexpected", 
                "PQdb", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "__cxa_guard_abort", 
                "__cxa_throw", 
                "_ZNSolsEi", 
                "_ZNSolsEs", 
                "PQresultStatus", 
                "PQfname", 
                "PQbackendPID", 
                "PQresultErrorMessage", 
                "PQcmdTuples", 
                "PQserverVersion", 
                "PQfinish", 
                "__cxa_rethrow", 
                "PQuntrace", 
                "_ZNSt11logic_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", 
                "PQoidValue", 
                "_ZNSt16invalid_argumentC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", 
                "strtol", 
                "PQprotocolVersion", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm", 
                "PQgetResult", 
                "_ZNSt12out_of_rangeD1Ev", 
                "free", 
                "__cxa_atexit", 
                "PQnotifies", 
                "memcpy", 
                "PQconnectPoll", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm", 
                "lo_lseek", 
                "_ZNSt12out_of_rangeC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", 
                "_ZdlPv", 
                "_ZNSt6localeD1Ev", 
                "lo_read", 
                "_ZNSt12out_of_rangeD2Ev", 
                "_ZNSt9bad_allocD1Ev", 
                "_ZNSt12out_of_rangeC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l", 
                "PQgetCopyData", 
                "PQencryptPassword", 
                "PQclear", 
                "_Znwm", 
                "PQfreemem", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev"
            ], 
            "rpm": "libpqxx-4.0.1-10.fc27.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " libpqxx", 
            "License": " BSD", 
            "URL": " http://pqxx.org/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-10.phx2.fedoraproject.org", 
            "Source RPM": " libpqxx-4.0.1-10.fc27.src.rpm", 
            "Description": "\nC++ client API for PostgreSQL. The standard front-end (in the sense of\n\"language binding\") for writing C++ programs that use PostgreSQL.\nSupersedes older libpq++ interface.\n", 
            "Build Date": " Thu 03 Aug 2017 03:40:50 PM EDT", 
            "Epoch": " 1", 
            "Version": " 4.0.1", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Fri 04 Aug 2017 12:49:11 PM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 10.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " C++ client API for PostgreSQL", 
            "Size": " 668955"
        }
    }
}