{
    "results": {
        "usr/lib/libdkim++_so_1_0_10": {
            "report-functions": [
                "_ZNSi7putbackEc", 
                "_ZNKSt13runtime_error4whatEv", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_", 
                "BIO_write", 
                "__dn_skipname", 
                "_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", 
                "tolower", 
                "__vasprintf_chk", 
                "_ZNSt8__detail15_List_node_base9_M_unhookEv", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcj", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc", 
                "__gxx_personality_v0", 
                "BIO_read", 
                "_ZNSi4peekEv", 
                "BIO_set_flags", 
                "isspace", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcjj", 
                "__res_nquery", 
                "__cxa_end_catch", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcjj", 
                "_ZNSt8__detail15_List_node_base11_M_transferEPS0_S1_", 
                "_ZNSt8ios_baseC2Ev", 
                "BIO_free_all", 
                "EVP_PKEY_new", 
                "__res_nclose", 
                "__cxa_finalize", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "EVP_MD_CTX_reset", 
                "_ZSt19__throw_logic_errorPKc", 
                "d2i_PUBKEY", 
                "__cxa_free_exception", 
                "BIO_f_base64", 
                "_ZNSt8ios_base4InitC1Ev", 
                "__cxa_atexit", 
                "_ZNSt9bad_allocD1Ev", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "_ZNSt13runtime_errorD2Ev", 
                "__res_ninit", 
                "_ZNSi3getEv", 
                "_ZNSt8ios_base4InitD1Ev", 
                "_ZNSt6localeD1Ev", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj", 
                "PEM_read_bio_RSAPrivateKey", 
                "EVP_MD_CTX_free", 
                "_Znwj", 
                "_ZNSi5seekgESt4fposI11__mbstate_tE", 
                "strtoul", 
                "_ITM_registerTMCloneTable", 
                "__cxa_allocate_exception", 
                "_ZNSt8ios_baseD2Ev", 
                "EVP_SignFinal", 
                "_ZSt16__throw_bad_castv", 
                "__stack_chk_fail", 
                "strlen", 
                "EVP_PKEY_free", 
                "__cxa_begin_catch", 
                "strtol", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj", 
                "_ZNSi5tellgEv", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "EVP_DigestInit", 
                "__cxa_rethrow", 
                "BIO_push", 
                "_ZSt24__throw_out_of_range_fmtPKcz", 
                "_ZNKSt5ctypeIcE13_M_widen_initEv", 
                "time", 
                "RSA_free", 
                "EVP_VerifyFinal", 
                "BIO_s_mem", 
                "EVP_DigestFinal", 
                "_ITM_deregisterTMCloneTable", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj", 
                "_ZdaPv", 
                "__pthread_key_create", 
                "memcmp", 
                "d2i_RSAPrivateKey", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcjj", 
                "EVP_PKEY_assign", 
                "_ZNSt6localeC1Ev", 
                "EVP_PKEY_base_id", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj", 
                "_ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EES4_", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate", 
                "__cxa_throw", 
                "EVP_PKEY_size", 
                "BIO_new", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj", 
                "BIO_ctrl", 
                "_Znaj", 
                "EVP_DigestUpdate", 
                "free", 
                "_ZdlPv", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "strcasecmp", 
                "__gmon_start__", 
                "EVP_MD_CTX_new", 
                "_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE7_M_syncEPcjj", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc", 
                "EVP_sha1", 
                "_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj", 
                "EVP_sha256", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj", 
                "_Unwind_Resume", 
                "memset", 
                "__cxa_call_unexpected", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcjj", 
                "__errno_location"
            ], 
            "rpm": "libdkimpp-1.0.10-3.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libdkim++.so.1.0.10"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " System Environment/Libraries", 
            "Name": " libdkimpp", 
            "License": " LGPLv3+", 
            "URL": " https://github.com/halonsecurity/libdkimpp", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-02.phx2.fedoraproject.org", 
            "Description": "\nlibdkim++ is a lightweight and portable DKIM (RFC4871) library for *NIX,\nsupporting both signing and DMARC/SDID/ADSP verification, sponsored and\nused by Halon Security. libdkim++ has extensive unit test coverage and\naims to fully comply with the current RFC.\n", 
            "Build Date": " Thu 03 Aug 2017 02:01:34 PM EDT", 
            "Source RPM": " libdkimpp-1.0.10-3.fc27.src.rpm", 
            "Version": " 1.0.10", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Fri 04 Aug 2017 07:03:12 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 3.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Lightweight and portable DKIM (RFC4871) library", 
            "Size": " 160373"
        }
    }
}