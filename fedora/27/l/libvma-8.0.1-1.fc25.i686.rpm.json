{
    "results": {
        "usr/lib/libvma_so_8_0_1": {
            "report-functions": [
                "rtnl_neigh_get_state", 
                "rtnl_route_get_protocol", 
                "rtnl_link_get_flags", 
                "pthread_self", 
                "ibv_create_cq", 
                "getenv", 
                "exit", 
                "getpid", 
                "__xpg_basename", 
                "nlmsg_hdr", 
                "ibv_fork_init", 
                "_ZdlPv", 
                "clock_gettime", 
                "mmap", 
                "backtrace", 
                "shmdt", 
                "dlsym", 
                "rdma_free_devices", 
                "rtnl_route_get_priority", 
                "sched_yield", 
                "rdma_resolve_route", 
                "fwrite", 
                "__strcpy_chk", 
                "rtnl_neigh_get_lladdr", 
                "snprintf", 
                "rdma_destroy_id", 
                "__strncpy_chk", 
                "__cxa_begin_catch", 
                "nl_cache_get_first", 
                "popen", 
                "__cxa_rethrow", 
                "ibv_destroy_ah", 
                "__errno_location", 
                "rtnl_route_get_dst", 
                "srand", 
                "pthread_spin_unlock", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "ibv_destroy_comp_channel", 
                "strerror", 
                "uname", 
                "ibv_get_async_event", 
                "_ZSt24__throw_out_of_range_fmtPKcz", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj", 
                "ibv_create_qp", 
                "rtnl_neigh_get_flags", 
                "rtnl_link_get_name", 
                "__cxa_demangle", 
                "rdma_bind_addr", 
                "rtnl_link_get_ifindex", 
                "pthread_spin_trylock", 
                "fgetc", 
                "strcasecmp", 
                "fread", 
                "syscall", 
                "ferror", 
                "ibv_destroy_qp", 
                "ctime", 
                "__fdelt_chk", 
                "rdma_create_event_channel", 
                "rtnl_route_get_type", 
                "pthread_mutex_trylock", 
                "ibv_ack_cq_events", 
                "fopen", 
                "rdma_create_id", 
                "ibv_create_comp_channel", 
                "rtnl_route_get_iif", 
                "memmove", 
                "nl_cache_mngr_free", 
                "access", 
                "__cxa_guard_release", 
                "pthread_mutexattr_settype", 
                "__dynamic_cast", 
                "pthread_spin_destroy", 
                "__cxa_finalize", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "ibv_alloc_pd", 
                "fputs", 
                "_ZNSt8__detail15_List_node_base9_M_unhookEv", 
                "pthread_setaffinity_np", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_", 
                "memcmp", 
                "ibv_query_qp", 
                "pthread_spin_lock", 
                "nl_object_get", 
                "__vsnprintf_chk", 
                "umask", 
                "ibv_query_port", 
                "___tls_get_addr", 
                "rdma_get_cm_event", 
                "__cxa_guard_acquire", 
                "nl_cache_get_next", 
                "pthread_getaffinity_np", 
                "__assert_fail", 
                "rtnl_neigh_get_dst", 
                "__gxx_personality_v0", 
                "backtrace_symbols", 
                "pthread_spin_init", 
                "freeifaddrs", 
                "__cxa_throw_bad_array_new_length", 
                "clearerr", 
                "ibv_destroy_cq", 
                "rtnl_route_get_src", 
                "strtok_r", 
                "pthread_mutex_unlock", 
                "if_nametoindex", 
                "sigisemptyset", 
                "nl_socket_alloc", 
                "_ZSt17__throw_bad_allocv", 
                "rdma_ack_cm_event", 
                "nl_addr_get_len", 
                "ibv_dereg_mr", 
                "nl_socket_set_nonblocking", 
                "rtnl_route_get_table", 
                "pthread_mutexattr_init", 
                "__cxa_allocate_exception", 
                "strchr", 
                "__strncat_chk", 
                "__printf_chk", 
                "__cxa_atexit", 
                "stpcpy", 
                "malloc", 
                "strstr", 
                "_IO_getc", 
                "setenv", 
                "__sprintf_chk", 
                "__cxa_guard_abort", 
                "ibv_reg_mr", 
                "nl_socket_disable_seq_check", 
                "rtnl_route_get_scope", 
                "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base", 
                "fflush", 
                "rtnl_link_get_family", 
                "rtnl_neigh_get_type", 
                "_ZNSt8ios_base4InitD1Ev", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "pthread_attr_init", 
                "nl_object_get_msgtype", 
                "strcspn", 
                "rtnl_route_get_flags", 
                "fdopen", 
                "pthread_yield", 
                "sigemptyset", 
                "mlock", 
                "__cxa_call_unexpected", 
                "dlerror", 
                "shmctl", 
                "__stack_chk_fail", 
                "_ZdaPv", 
                "__sched_cpucount", 
                "gettimeofday", 
                "pthread_join", 
                "ibv_modify_qp", 
                "strlen", 
                "nl_cache_mngr_alloc", 
                "rdma_event_str", 
                "__divdi3", 
                "rtnl_neigh_get_ifindex", 
                "pclose", 
                "puts", 
                "_ZSt19__throw_logic_errorPKc", 
                "unsetenv", 
                "__cxa_pure_virtual", 
                "rdma_destroy_event_channel", 
                "__memset_chk", 
                "_ZNSt9exceptionD2Ev", 
                "sigpending", 
                "rtnl_route_get_pref_src", 
                "pthread_attr_setaffinity_np", 
                "sscanf", 
                "ibv_get_cq_event", 
                "strcpy", 
                "nl_object_put", 
                "nl_geterror", 
                "nl_cache_refill", 
                "memset", 
                "__udivdi3", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj", 
                "shmat", 
                "strncpy", 
                "nl_socket_set_local_port", 
                "sched_getcpu", 
                "__cxa_end_catch", 
                "htons", 
                "_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_", 
                "pthread_mutex_destroy", 
                "_Jv_RegisterClasses", 
                "sigsuspend", 
                "_Unwind_Resume", 
                "shmget", 
                "strcmp", 
                "rtnl_route_get_family", 
                "free", 
                "strncmp", 
                "rtnl_link_get_mtu", 
                "inet_ntoa", 
                "rand", 
                "time", 
                "pthread_mutex_init", 
                "rtnl_link_get_txqlen", 
                "getrlimit", 
                "if_indextoname", 
                "isatty", 
                "__fprintf_chk", 
                "nl_socket_free", 
                "_ZSt20__throw_length_errorPKc", 
                "rtnl_neigh_state2str", 
                "nl_socket_modify_cb", 
                "usleep", 
                "ibv_dealloc_pd", 
                "rdma_resolve_addr", 
                "rdma_join_multicast", 
                "nl_cache_mngr_data_ready", 
                "_ITM_deregisterTMCloneTable", 
                "__strdup", 
                "ibv_ack_async_event", 
                "_ZdlPvj", 
                "isxdigit", 
                "pthread_mutex_lock", 
                "_ZNKSt3tr14hashINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclES6_", 
                "strtok", 
                "abort", 
                "inet_aton", 
                "__cxa_throw", 
                "ibv_query_pkey", 
                "_Znaj", 
                "rtnl_route_get_tos", 
                "_ZSt9terminatev", 
                "inet_ntop", 
                "fmemopen", 
                "nl_addr_get_binary_addr", 
                "fclose", 
                "strtol", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj", 
                "rdma_get_devices", 
                "_ZNSt8ios_base4InitC1Ev", 
                "__xstat", 
                "__snprintf_chk", 
                "ceilf", 
                "rtnl_link_get_master", 
                "calloc", 
                "nl_addr_get_prefixlen", 
                "vfscanf", 
                "pthread_create", 
                "fnmatch", 
                "inet_addr", 
                "fileno", 
                "__fxstat", 
                "ibv_query_device", 
                "_Znwj", 
                "getifaddrs", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "rtnl_link_operstate2str", 
                "rtnl_link_get_broadcast", 
                "rtnl_link_get_operstate", 
                "fputc", 
                "nl_socket_get_fd", 
                "kill", 
                "unlink", 
                "realloc", 
                "munmap", 
                "pthread_attr_destroy", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "ibv_create_ah", 
                "nl_cache_mngr_add"
            ], 
            "rpm": "libvma-8.0.1-1.fc25.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libvma.so.8.0.1"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " libvma", 
            "License": " GPLv2 or BSD", 
            "URL": " https://github.com/Mellanox/libvma", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildhw-07.phx2.fedoraproject.org", 
            "Description": "\nlibvma is a LD_PRELOAD-able library that boosts performance\nof TCP and UDP traffic.\nIt allows application written over standard socket API to handle\nfast path data traffic from user space over Ethernet and/or\nInfiniband with full network stack bypass and get better throughput,\nlatency and packets/sec rate.\nNo application binary change is required for that.\nlibvma is supported by RDMA capable devices that support\n\"verbs\" IBV_QPT_RAW_PACKET QP for Ethernet and/or IBV_QPT_UD QP for IPoIB.\n", 
            "Build Date": " Thu 17 Mar 2016 08:06:11 AM EDT", 
            "Source RPM": " libvma-8.0.1-1.fc25.src.rpm", 
            "Version": " 8.0.1", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Thu 23 Feb 2017 12:40:53 PM EST, Key ID f55e7430f5282ee4", 
            "Release": " 1.fc25", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " A library for boosting TCP and UDP traffic (over RDMA hardware)", 
            "Size": " 1470544"
        }
    }
}