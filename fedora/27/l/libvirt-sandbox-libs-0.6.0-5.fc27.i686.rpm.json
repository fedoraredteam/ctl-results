{
    "results": {
        "usr/libexec/libvirt-sandbox-init-common": {
            "report-functions": [
                "g_value_set_string", 
                "g_get_home_dir", 
                "g_set_application_name", 
                "g_value_get_string", 
                "bindtextdomain", 
                "g_type_class_peek_parent", 
                "read", 
                "g_malloc0_n", 
                "setlocale", 
                "signal", 
                "g_value_set_enum", 
                "g_ascii_strup", 
                "g_type_class_unref", 
                "xdrmem_create", 
                "tcgetattr", 
                "xdr_int", 
                "getegid", 
                "g_inet_address_get_type", 
                "g_type_check_instance_is_a", 
                "g_key_file_free", 
                "g_intern_static_string", 
                "g_key_file_get_string", 
                "__gmon_start__", 
                "bind_textdomain_codeset", 
                "execv", 
                "g_object_class_install_property", 
                "g_hash_table_new_full", 
                "g_key_file_set_string", 
                "g_once_init_leave", 
                "g_mkdir_with_parents", 
                "g_file_read", 
                "g_key_file_load_from_data", 
                "g_strndup", 
                "xdr_u_int", 
                "waitpid", 
                "g_enum_get_value_by_nick", 
                "access", 
                "g_key_file_set_uint64", 
                "g_ascii_strtoll", 
                "getenv", 
                "g_value_set_boolean", 
                "g_value_set_uint", 
                "g_str_has_prefix", 
                "strerror", 
                "g_value_get_uint64", 
                "g_strdup", 
                "_ITM_registerTMCloneTable", 
                "__poll_chk", 
                "setgroups", 
                "g_malloc0", 
                "g_option_context_parse", 
                "__fprintf_chk", 
                "g_output_stream_write_all", 
                "g_file_delete", 
                "__errno_location", 
                "g_printerr", 
                "g_value_get_boolean", 
                "g_realloc_n", 
                "strtol", 
                "g_strdup_printf", 
                "g_type_class_ref", 
                "g_free", 
                "openpty", 
                "tcsetattr", 
                "g_type_name", 
                "g_log", 
                "sigaddset", 
                "gvir_config_domain_disk_type_get_type", 
                "g_propagate_error", 
                "g_strrstr", 
                "g_inet_address_new_from_string", 
                "g_value_get_uint", 
                "__cxa_finalize", 
                "g_get_user_name", 
                "close", 
                "g_file_new_for_path", 
                "sigemptyset", 
                "symlink", 
                "g_input_stream_get_type", 
                "dup2", 
                "freecon", 
                "g_quark_from_static_string", 
                "g_key_file_get_boolean", 
                "chdir", 
                "g_str_equal", 
                "g_type_check_instance_cast", 
                "g_param_spec_enum", 
                "g_set_error", 
                "__stack_chk_fail", 
                "g_param_spec_string", 
                "g_value_dup_object", 
                "g_object_notify", 
                "g_type_is_a", 
                "textdomain", 
                "g_param_spec_object", 
                "g_list_append", 
                "strlen", 
                "setsid", 
                "g_output_stream_close", 
                "g_type_class_adjust_private_offset", 
                "g_object_new", 
                "g_option_context_add_main_entries", 
                "g_print", 
                "uname", 
                "g_list_free", 
                "_ITM_deregisterTMCloneTable", 
                "g_str_hash", 
                "pipe", 
                "write", 
                "g_spawn_sync", 
                "g_type_from_name", 
                "xdr_enum", 
                "g_malloc", 
                "g_key_file_to_data", 
                "fork", 
                "g_hash_table_insert", 
                "g_strv_length", 
                "g_inet_address_to_string", 
                "g_param_spec_uint", 
                "__libc_start_main", 
                "g_type_check_class_cast", 
                "g_list_copy", 
                "g_option_context_free", 
                "g_hash_table_iter_init", 
                "unsetenv", 
                "g_hash_table_iter_next", 
                "setregid", 
                "abort", 
                "exit", 
                "sigprocmask", 
                "g_value_get_enum", 
                "strchr", 
                "g_enum_get_value", 
                "setenv", 
                "g_type_class_add_private", 
                "g_param_spec_boolean", 
                "g_strfreev", 
                "g_object_unref", 
                "g_file_create", 
                "g_strdupv", 
                "fgets", 
                "g_key_file_load_from_file", 
                "g_key_file_get_uint64", 
                "g_key_file_new", 
                "cfmakeraw", 
                "fwrite", 
                "g_value_dup_string", 
                "g_param_spec_uint64", 
                "g_type_instance_get_private", 
                "g_value_set_object", 
                "open", 
                "g_data_input_stream_read_line", 
                "g_error_free", 
                "g_data_input_stream_new", 
                "g_type_register_static_simple", 
                "g_return_if_fail_warning", 
                "fclose", 
                "g_once_init_enter", 
                "gvir_config_domain_disk_format_get_type", 
                "g_key_file_set_boolean", 
                "g_option_context_new", 
                "g_object_ref", 
                "dcgettext", 
                "g_value_set_uint64", 
                "fopen", 
                "g_output_stream_get_type", 
                "setreuid", 
                "g_list_foreach", 
                "geteuid"
            ], 
            "rpm": "libvirt-sandbox-libs-0.6.0-5.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/libexec/libvirt-sandbox-init-common"
        }, 
        "usr/libexec/libvirt-sandbox-init-qemu": {
            "report-functions": [], 
            "rpm": "libvirt-sandbox-libs-0.6.0-5.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/libexec/libvirt-sandbox-init-qemu"
        }, 
        "usr/lib/libvirt-sandbox-1_0_so_5_6_0": {
            "report-functions": [
                "gvir_config_domain_disk_set_target_dev", 
                "xdr_u_int", 
                "g_cclosure_marshal_VOID__INT", 
                "g_output_stream_write", 
                "gvir_config_domain_console_new", 
                "gvir_config_capabilities_get_host", 
                "g_value_get_string", 
                "gvir_config_domain_chardev_get_source", 
                "g_list_free", 
                "g_value_set_object", 
                "g_once_init_leave", 
                "g_ascii_strtoll", 
                "g_file_query_exists", 
                "gvir_config_domain_os_set_kernel", 
                "g_hash_table_iter_init", 
                "g_pollable_input_stream_get_type", 
                "g_input_stream_get_type", 
                "g_list_foreach", 
                "g_file_get_child", 
                "g_get_home_dir", 
                "g_unix_output_stream_new", 
                "g_strndup", 
                "g_type_name", 
                "g_realloc_n", 
                "gvir_config_domain_filesys_set_readonly", 
                "geteuid", 
                "uname", 
                "gvir_config_domain_os_set_init", 
                "g_assertion_message_expr", 
                "g_hash_table_insert", 
                "umask", 
                "gvir_config_domain_filesys_set_target", 
                "gvir_config_capabilities_host_secmodel_get_type", 
                "g_set_error", 
                "g_source_set_callback", 
                "g_param_spec_uint64", 
                "gvir_config_domain_disk_driver_new", 
                "g_type_is_a", 
                "g_key_file_load_from_file", 
                "g_mkdir_with_parents", 
                "gvir_config_domain_add_device", 
                "g_list_copy", 
                "gvir_config_domain_set_name", 
                "g_malloc", 
                "gvir_connection_get_type", 
                "g_strrstr", 
                "g_spawn_command_line_sync", 
                "__gmon_start__", 
                "g_inet_address_get_type", 
                "g_type_check_instance_is_a", 
                "gvir_config_domain_set_seclabel", 
                "gvir_config_domain_os_new", 
                "g_realloc", 
                "gvir_config_domain_console_set_target_type", 
                "g_file_create", 
                "__cxa_finalize", 
                "gvir_config_domain_disk_type_get_type", 
                "g_unix_input_stream_get_type", 
                "gvir_config_domain_seclabel_set_model", 
                "gvir_domain_stop", 
                "gvir_config_domain_set_features", 
                "__errno_location", 
                "g_key_file_set_boolean", 
                "gvir_config_domain_device_get_type", 
                "g_object_unref", 
                "gvir_config_domain_interface_filterref_new", 
                "g_data_input_stream_new", 
                "strstr", 
                "gvir_domain_start", 
                "g_type_register_static_simple", 
                "g_enum_get_value", 
                "gvir_config_domain_interface_set_mac", 
                "gvir_config_domain_interface_filterref_add_parameter", 
                "g_type_class_peek_parent", 
                "g_value_dup_object", 
                "g_pollable_input_stream_create_source", 
                "g_file_read", 
                "g_file_enumerator_get_child", 
                "g_pollable_output_stream_create_source", 
                "g_malloc0_n", 
                "getcon", 
                "g_unix_input_stream_get_fd", 
                "g_type_class_ref", 
                "g_inet_address_new_from_string", 
                "g_value_dup_string", 
                "gvir_connection_get_stream", 
                "xdr_int", 
                "_ITM_registerTMCloneTable", 
                "g_key_file_set_uint64", 
                "bindtextdomain", 
                "g_ascii_strup", 
                "open", 
                "gvir_config_domain_filesys_set_driver_format", 
                "access", 
                "gvir_config_domain_device_get_alias", 
                "gvir_connection_get_capabilities", 
                "g_data_input_stream_read_line", 
                "strlen", 
                "g_value_get_uint64", 
                "g_object_ref", 
                "g_type_class_unref", 
                "g_malloc0", 
                "g_list_length", 
                "g_output_stream_close", 
                "gvir_config_domain_disk_new", 
                "gvir_config_domain_interface_set_filterref", 
                "gvir_config_domain_set_memory", 
                "gvir_stream_receive", 
                "g_spawn_sync", 
                "g_free", 
                "gvir_config_domain_interface_filterref_parameter_set_name", 
                "g_param_spec_object", 
                "g_value_get_uint", 
                "g_value_set_uint", 
                "mkdtemp", 
                "g_propagate_error", 
                "g_value_set_string", 
                "gvir_config_domain_chardev_get_type", 
                "g_file_get_path", 
                "g_path_get_basename", 
                "gvir_config_domain_filesys_set_type", 
                "g_file_info_get_file_type", 
                "g_log_set_handler", 
                "g_key_file_load_from_data", 
                "xdrmem_create", 
                "g_strv_length", 
                "gvir_domain_get_type", 
                "gvir_config_domain_set_virt_type", 
                "g_file_info_get_name", 
                "g_value_set_uint64", 
                "g_error_free", 
                "gvir_config_domain_seclabel_set_label", 
                "gvir_config_domain_interface_network_new", 
                "strerror", 
                "tcsetattr", 
                "gvir_config_domain_disk_format_get_type", 
                "g_log", 
                "g_type_check_class_cast", 
                "g_strdup", 
                "gvir_config_domain_disk_driver_set_format", 
                "gvir_connection_get_uri", 
                "gvir_connection_start_domain", 
                "g_string_append", 
                "g_error_new", 
                "g_param_spec_uint", 
                "g_source_unref", 
                "g_list_free_full", 
                "g_file_new_for_path", 
                "gvir_config_capabilities_host_get_secmodels", 
                "g_pollable_output_stream_get_type", 
                "g_unix_input_stream_new", 
                "g_enum_get_value_by_nick", 
                "g_param_spec_enum", 
                "g_intern_static_string", 
                "g_output_stream_write_all", 
                "g_object_new", 
                "gvir_config_domain_chardev_source_get_type", 
                "g_value_get_schar", 
                "g_hash_table_iter_next", 
                "gvir_config_domain_filesys_set_driver_type", 
                "freecon", 
                "g_type_instance_get_private", 
                "g_cclosure_marshal_VOID__BOOLEAN", 
                "g_file_copy", 
                "gvir_config_capabilities_host_secmodel_get_model", 
                "__fprintf_chk", 
                "gvir_config_domain_interface_filterref_set_name", 
                "g_input_stream_read", 
                "g_str_has_prefix", 
                "g_strfreev", 
                "gvir_config_domain_get_devices", 
                "gvir_connection_create_domain", 
                "g_file_replace", 
                "gvir_config_domain_os_set_os_type", 
                "memmove", 
                "g_param_spec_boolean", 
                "rmdir", 
                "g_list_append", 
                "g_once_init_enter", 
                "gvir_connection_find_domain_by_name", 
                "gvir_config_domain_os_set_ramdisk", 
                "g_type_check_instance_cast", 
                "g_file_enumerator_next_file", 
                "g_timeout_add", 
                "gvir_connection_fetch_domains", 
                "g_get_user_cache_dir", 
                "gvir_config_domain_disk_set_type", 
                "g_file_enumerator_close", 
                "isatty", 
                "g_key_file_set_string", 
                "gvir_config_domain_seclabel_set_type", 
                "g_object_get", 
                "gvir_config_domain_interface_get_type", 
                "gvir_config_domain_disk_set_source", 
                "g_main_context_default", 
                "g_value_set_schar", 
                "gvir_config_domain_os_set_arch", 
                "g_inet_address_to_string", 
                "dcgettext", 
                "__stack_chk_fail", 
                "g_value_get_enum", 
                "g_signal_emit_by_name", 
                "gvir_stream_add_watch", 
                "gvir_config_domain_seclabel_new", 
                "strchr", 
                "gvir_config_domain_interface_filterref_parameter_set_value", 
                "gvir_config_domain_chardev_source_pty_get_path", 
                "gvir_config_domain_disk_set_driver", 
                "g_file_get_basename", 
                "g_output_stream_get_type", 
                "g_strdupv", 
                "gvir_config_domain_chardev_source_pty_new", 
                "g_str_hash", 
                "g_build_filename", 
                "g_strdup_printf", 
                "g_key_file_new", 
                "g_param_spec_string", 
                "tcgetattr", 
                "gvir_config_domain_os_set_cmdline", 
                "g_get_user_name", 
                "g_key_file_free", 
                "g_object_class_install_property", 
                "g_unix_output_stream_get_type", 
                "gvir_config_domain_chardev_source_pty_get_type", 
                "gvir_stream_send", 
                "g_key_file_get_string", 
                "getuid", 
                "g_signal_new", 
                "g_source_destroy", 
                "gvir_config_domain_disk_set_target_bus", 
                "gvir_config_domain_memballoon_new", 
                "g_strsplit", 
                "g_value_set_boolean", 
                "gvir_config_domain_serial_new", 
                "gvir_config_domain_chardev_set_source", 
                "g_pollable_input_stream_read_nonblocking", 
                "getegid", 
                "g_object_notify", 
                "g_hash_table_new_full", 
                "gvir_config_domain_interface_user_new", 
                "gvir_config_domain_filesys_set_source", 
                "gvir_config_domain_filesys_set_access_type", 
                "_ITM_deregisterTMCloneTable", 
                "gvir_config_domain_filesys_set_ram_usage", 
                "gvir_config_domain_new", 
                "g_key_file_get_boolean", 
                "g_type_class_add_private", 
                "g_key_file_get_uint64", 
                "g_param_spec_char", 
                "g_file_delete", 
                "gvir_config_domain_console_get_type", 
                "gvir_domain_delete", 
                "gvir_config_domain_set_os", 
                "gvir_domain_open_console", 
                "g_value_get_boolean", 
                "g_source_attach", 
                "gvir_config_domain_seclabel_set_baselabel", 
                "gvir_domain_get_config", 
                "g_key_file_to_data", 
                "g_pollable_output_stream_write_nonblocking", 
                "gvir_init_object_check", 
                "gvir_config_domain_memballoon_set_model", 
                "g_source_remove", 
                "g_quark_from_static_string", 
                "g_type_class_adjust_private_offset", 
                "gvir_config_domain_filesys_new", 
                "gvir_config_domain_interface_network_set_source", 
                "g_string_new", 
                "gvir_config_domain_interface_filterref_parameter_new", 
                "g_object_set", 
                "g_file_enumerate_children", 
                "g_type_from_name", 
                "strtol", 
                "g_string_free", 
                "xdr_enum", 
                "g_str_equal", 
                "g_value_set_enum", 
                "gvir_config_domain_interface_set_model", 
                "gvir_config_domain_set_lifecycle", 
                "getenv", 
                "gvir_config_domain_get_virt_type", 
                "g_shell_quote", 
                "g_return_if_fail_warning"
            ], 
            "rpm": "libvirt-sandbox-libs-0.6.0-5.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libvirt-sandbox-1.0.so.5.6.0"
        }, 
        "usr/libexec/libvirt-sandbox-init-lxc": {
            "report-functions": [], 
            "rpm": "libvirt-sandbox-libs-0.6.0-5.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/libexec/libvirt-sandbox-init-lxc"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Development/Libraries", 
            "Name": " libvirt-sandbox-libs", 
            "License": " LGPLv2+", 
            "URL": " http://libvirt.org/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-25.phx2.fedoraproject.org", 
            "Description": "\nThis package provides a framework for building application sandboxes\nusing libvirt.\n", 
            "Build Date": " Thu 03 Aug 2017 04:55:58 PM EDT", 
            "Source RPM": " libvirt-sandbox-0.6.0-5.fc27.src.rpm", 
            "Version": " 0.6.0", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Fri 04 Aug 2017 02:15:34 PM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 5.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " libvirt application sandbox framework libraries", 
            "Size": " 2077538"
        }
    }
}