{
    "results": {
        "usr/lib64/libinstpatch-1_0_so_0_0_0": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/libinstpatch-1.0.so.0.0.0", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "g_node_new", 
                "strncpy", 
                "sf_command", 
                "g_param_spec_float", 
                "g_value_get_char", 
                "g_object_ref", 
                "g_param_spec_sink", 
                "g_type_is_a", 
                "g_object_unref", 
                "g_strv_get_type", 
                "g_type_check_class_is_a", 
                "g_strdup", 
                "g_hash_table_foreach_remove", 
                "g_type_interface_peek", 
                "g_param_value_set_default", 
                "__errno_location", 
                "g_value_set_float", 
                "g_param_spec_get_qdata", 
                "g_strdup_vprintf", 
                "g_value_set_uchar", 
                "g_malloc_n", 
                "g_param_spec_string", 
                "g_hash_table_new_full", 
                "g_value_set_static_string", 
                "g_free", 
                "g_string_append", 
                "g_list_insert_before", 
                "g_param_spec_value_array", 
                "g_value_set_int64", 
                "g_value_unset", 
                "g_list_last", 
                "g_object_set_valist", 
                "g_value_take_object", 
                "g_static_rec_mutex_lock", 
                "g_type_check_value_holds", 
                "g_value_get_float", 
                "g_node_destroy", 
                "g_value_dup_boxed", 
                "g_value_set_char", 
                "g_param_spec_get_redirect_target", 
                "g_value_get_uchar", 
                "g_list_append", 
                "g_type_class_peek_parent", 
                "g_byte_array_set_size", 
                "g_intern_static_string", 
                "g_ascii_strtoll", 
                "g_array_new", 
                "g_str_hash", 
                "g_object_set_property", 
                "g_param_spec_ref", 
                "g_param_spec_boxed", 
                "__gmon_start__", 
                "g_param_type_register_static", 
                "g_static_rec_mutex_unlock", 
                "g_value_peek_pointer", 
                "g_param_spec_uint", 
                "strcmp", 
                "__isoc99_sscanf", 
                "g_file_set_contents", 
                "g_return_if_fail_warning", 
                "__strncpy_chk", 
                "g_io_channel_set_encoding", 
                "g_type_check_instance_cast", 
                "strlen", 
                "g_mutex_lock", 
                "g_list_prepend", 
                "g_value_take_string", 
                "g_markup_parse_context_free", 
                "g_list_length", 
                "g_value_set_flags", 
                "g_byte_array_free", 
                "g_slice_alloc0", 
                "g_file_open_tmp", 
                "sf_strerror", 
                "g_slist_remove", 
                "g_malloc", 
                "g_type_check_instance_is_a", 
                "pow", 
                "g_type_class_unref", 
                "g_object_new", 
                "g_ascii_strcasecmp", 
                "g_datalist_id_remove_no_notify", 
                "g_value_init", 
                "strchr", 
                "g_datalist_init", 
                "g_param_spec_gtype", 
                "g_io_channel_write_chars", 
                "g_slist_last", 
                "g_slist_reverse", 
                "g_value_get_uint", 
                "g_hash_table_get_keys", 
                "sf_format_check", 
                "g_value_get_flags", 
                "g_value_get_object", 
                "g_once_init_leave", 
                "strrchr", 
                "sf_seek", 
                "g_io_channel_set_close_on_unref", 
                "g_type_from_name", 
                "g_object_class_override_property", 
                "g_slist_copy", 
                "g_strdup_value_contents", 
                "g_io_channel_unix_new", 
                "g_hash_table_destroy", 
                "g_value_set_object", 
                "g_set_error", 
                "g_strlcpy", 
                "memcpy", 
                "g_node_get_root", 
                "g_io_channel_new_file", 
                "g_hash_table_lookup", 
                "g_value_array_append", 
                "g_static_rec_mutex_unlock_full", 
                "g_enum_register_static", 
                "g_byte_array_append", 
                "g_hash_table_size", 
                "sf_writef_short", 
                "g_string_new", 
                "__stack_chk_fail", 
                "g_strconcat", 
                "g_value_set_static_boxed", 
                "g_type_register_static_simple", 
                "g_type_check_instance_is_fundamentally_a", 
                "g_flags_register_static", 
                "g_slist_insert", 
                "g_hash_table_new", 
                "g_error_copy", 
                "g_value_set_enum", 
                "fputc", 
                "g_object_class_find_property", 
                "g_type_check_value", 
                "g_value_set_pointer", 
                "g_markup_parse_context_end_parse", 
                "g_type_init", 
                "g_array_sort", 
                "strncmp", 
                "g_value_get_gtype", 
                "g_param_spec_set_qdata_full", 
                "g_once_init_enter", 
                "g_static_rec_mutex_free", 
                "sf_writef_double", 
                "g_value_take_boxed", 
                "g_object_get", 
                "_ITM_registerTMCloneTable", 
                "g_datalist_id_set_data_full", 
                "g_value_reset", 
                "g_malloc0", 
                "g_quark_from_static_string", 
                "g_value_array_get_type", 
                "g_string_append_printf", 
                "__printf_chk", 
                "g_gtype_get_type", 
                "g_value_set_boxed", 
                "g_object_notify", 
                "log", 
                "g_slist_free_1", 
                "g_list_insert", 
                "sf_readf_short", 
                "g_slice_free1", 
                "g_value_get_uint64", 
                "sf_open", 
                "g_log", 
                "g_value_get_int", 
                "g_array_append_vals", 
                "g_enum_get_value", 
                "sf_close", 
                "sf_writef_int", 
                "g_strfreev", 
                "g_type_interface_add_prerequisite", 
                "g_type_parent", 
                "g_file_get_contents", 
                "g_io_channel_seek_position", 
                "g_value_dup_string", 
                "memset", 
                "g_realloc", 
                "g_object_class_list_properties", 
                "g_param_spec_pointer", 
                "g_param_spec_int", 
                "g_mutex_unlock", 
                "g_value_dup_object", 
                "sf_writef_float", 
                "g_param_values_cmp", 
                "g_type_fundamental", 
                "g_markup_parse_context_parse", 
                "g_array_free", 
                "g_value_get_long", 
                "g_value_set_string", 
                "g_clear_error", 
                "g_logv", 
                "g_object_class_install_property", 
                "g_slist_length", 
                "g_type_name", 
                "g_value_get_param", 
                "g_value_set_uint64", 
                "g_path_get_basename", 
                "g_static_rec_mutex_init", 
                "g_value_type_transformable", 
                "g_markup_escape_text", 
                "g_list_insert_sorted", 
                "g_list_find", 
                "__cxa_finalize", 
                "g_slist_insert_sorted", 
                "g_param_spec_get_name", 
                "g_type_interfaces", 
                "g_type_class_ref", 
                "sf_read_raw", 
                "g_strerror", 
                "g_value_set_gtype", 
                "g_object_get_valist", 
                "g_param_spec_internal", 
                "sf_error", 
                "g_value_set_int", 
                "g_value_array_free", 
                "g_strndup", 
                "g_hash_table_foreach", 
                "g_strdup_printf", 
                "g_value_get_boxed", 
                "g_str_equal", 
                "g_io_channel_unref", 
                "g_cond_new", 
                "g_param_spec_object", 
                "g_slist_nth", 
                "g_value_set_ulong", 
                "g_assertion_message_expr", 
                "g_type_check_class_cast", 
                "g_type_children", 
                "g_value_set_double", 
                "g_list_reverse", 
                "__sprintf_chk", 
                "g_quark_try_string", 
                "sf_write_raw", 
                "g_propagate_error", 
                "g_value_get_pointer", 
                "g_strdupv", 
                "g_object_get_property", 
                "g_io_channel_read_chars", 
                "g_get_current_time", 
                "g_type_value_table_peek", 
                "g_type_class_peek", 
                "g_string_free", 
                "__fprintf_chk", 
                "g_array_set_size", 
                "g_io_channel_unix_get_fd", 
                "__xstat", 
                "g_value_get_ulong", 
                "sf_readf_float", 
                "g_value_array_get_nth", 
                "g_value_get_enum", 
                "g_string_insert_c", 
                "qsort", 
                "g_byte_array_new", 
                "puts", 
                "g_datalist_id_get_data", 
                "g_object_set", 
                "g_io_channel_shutdown", 
                "g_slist_append", 
                "g_strv_length", 
                "g_datalist_clear", 
                "g_mutex_new", 
                "sf_readf_int", 
                "g_datalist_get_data", 
                "g_slist_prepend", 
                "sf_readf_double", 
                "g_ascii_strtoull", 
                "g_param_spec_enum", 
                "g_slist_sort", 
                "g_value_array_new", 
                "g_type_add_interface_static", 
                "g_param_spec_flags", 
                "g_value_set_long", 
                "g_stpcpy", 
                "g_hash_table_remove", 
                "g_slist_free", 
                "g_slice_alloc", 
                "g_cond_wait", 
                "g_markup_parse_context_new", 
                "g_quark_from_string", 
                "fopen", 
                "g_node_traverse", 
                "putchar", 
                "g_value_set_boolean", 
                "g_boxed_type_register_static", 
                "g_value_get_boolean", 
                "g_slist_delete_link", 
                "g_list_nth", 
                "g_param_spec_unref", 
                "g_param_spec_boolean", 
                "g_hash_table_insert", 
                "g_value_get_int64", 
                "g_type_class_adjust_private_offset", 
                "g_type_register_static", 
                "g_list_delete_link", 
                "g_value_set_uint", 
                "strcpy", 
                "g_object_interface_install_property", 
                "g_value_transform", 
                "g_io_channel_ref", 
                "g_list_free_1", 
                "g_value_copy", 
                "g_memdup", 
                "g_value_get_double", 
                "g_node_insert_before", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "libinstpatch-1.0.0-14.20110806svn386.fc27.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " libinstpatch", 
            "License": " LGPLv2+", 
            "URL": " http://www.swamiproject.org/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-16.phx2.fedoraproject.org", 
            "Description": "\nlibInstPatch stands for lib-Instrument-Patch and is a library for processing\ndigital sample based MIDI instrument \"patch\" files. The types of files\nlibInstPatch supports are used for creating instrument sounds for wavetable\nsynthesis. libInstPatch provides an object framework (based on GObject) to load\npatch files into, which can then be edited, converted, compressed and saved.\n", 
            "Build Date": " Thu 03 Aug 2017 02:39:24 PM EDT", 
            "Source RPM": " libinstpatch-1.0.0-14.20110806svn386.fc27.src.rpm", 
            "Version": " 1.0.0", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Fri 04 Aug 2017 09:47:23 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 14.20110806svn386.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " MIDI instrument patch library", 
            "Size": " 765391"
        }
    }
}