{
    "results": {
        "usr/lib/libgusb_so_2_0_10": {
            "report-functions": [
                "libusb_free_transfer", 
                "g_once_init_enter", 
                "libusb_handle_events", 
                "g_value_get_object", 
                "g_param_spec_string", 
                "g_once_init_leave", 
                "g_type_check_instance_is_a", 
                "_ITM_deregisterTMCloneTable", 
                "g_ascii_strtoull", 
                "g_free", 
                "g_thread_join", 
                "g_source_remove", 
                "g_value_set_object", 
                "g_main_loop_quit", 
                "g_strfreev", 
                "libusb_get_bus_number", 
                "libusb_release_interface", 
                "libusb_attach_kernel_driver", 
                "g_value_get_int", 
                "g_cancellable_disconnect", 
                "g_main_context_ref", 
                "libusb_hotplug_register_callback", 
                "g_object_unref", 
                "g_task_propagate_int", 
                "g_object_class_install_properties", 
                "libusb_hotplug_deregister_callback", 
                "g_cancellable_connect", 
                "libusb_get_device_address", 
                "libusb_set_configuration", 
                "__cxa_finalize", 
                "libusb_close", 
                "g_task_new", 
                "g_hash_table_insert", 
                "g_task_set_task_data", 
                "libusb_cancel_transfer", 
                "libusb_submit_transfer", 
                "g_object_notify_by_pspec", 
                "libusb_get_configuration", 
                "libusb_free_config_descriptor", 
                "memmove", 
                "g_main_loop_run", 
                "g_ptr_array_unref", 
                "libusb_get_device_list", 
                "g_list_free", 
                "g_value_dup_string", 
                "g_source_set_callback", 
                "g_ptr_array_ref", 
                "g_signal_emit", 
                "g_set_error", 
                "g_param_spec_pointer", 
                "g_list_prepend", 
                "g_string_new", 
                "g_intern_static_string", 
                "g_set_error_literal", 
                "libusb_get_string_descriptor_ascii", 
                "g_timeout_add", 
                "g_thread_new", 
                "g_value_set_pointer", 
                "g_ptr_array_add", 
                "g_slice_free1", 
                "g_param_spec_object", 
                "g_string_truncate", 
                "g_file_get_contents", 
                "g_task_get_task_data", 
                "g_quark_from_static_string", 
                "g_signal_connect_data", 
                "g_object_new", 
                "libusb_alloc_transfer", 
                "libusb_has_capability", 
                "libusb_unref_device", 
                "libusb_get_device_descriptor", 
                "g_hash_table_unref", 
                "g_main_context_unref", 
                "_ITM_registerTMCloneTable", 
                "g_timeout_add_seconds", 
                "libusb_set_debug", 
                "g_idle_add", 
                "g_hash_table_new_full", 
                "g_task_report_new_error", 
                "g_ptr_array_remove", 
                "g_initable_new", 
                "g_type_name", 
                "g_string_free", 
                "g_task_get_type", 
                "g_value_dup_object", 
                "g_bytes_unref", 
                "libusb_detach_kernel_driver", 
                "g_hash_table_remove", 
                "libusb_get_parent", 
                "g_ptr_array_new_with_free_func", 
                "g_str_hash", 
                "g_value_get_pointer", 
                "libusb_init", 
                "g_object_class_install_property", 
                "g_main_loop_unref", 
                "libusb_free_device_list", 
                "libusb_reset_device", 
                "g_str_equal", 
                "libusb_ref_device", 
                "libusb_exit", 
                "g_malloc0", 
                "g_string_append_printf", 
                "libusb_get_active_config_descriptor", 
                "g_log", 
                "g_object_ref", 
                "g_slice_alloc0", 
                "g_type_register_static_simple", 
                "g_strdup_printf", 
                "g_type_add_interface_static", 
                "g_task_is_valid", 
                "g_type_check_instance_cast", 
                "g_cclosure_marshal_VOID__OBJECT", 
                "g_error_free", 
                "libusb_set_interface_alt_setting", 
                "g_strsplit", 
                "__gmon_start__", 
                "g_signal_new", 
                "libusb_open", 
                "g_strcmp0", 
                "g_main_context_default", 
                "g_type_check_class_cast", 
                "g_task_return_error", 
                "g_param_spec_int", 
                "libusb_get_port_number", 
                "libusb_claim_interface", 
                "__stack_chk_fail", 
                "g_hash_table_lookup", 
                "g_type_class_adjust_private_offset", 
                "g_return_if_fail_warning", 
                "g_type_class_peek_parent", 
                "g_hash_table_size", 
                "g_value_set_int", 
                "g_initable_get_type", 
                "g_task_return_int", 
                "g_type_add_instance_private", 
                "g_strdup"
            ], 
            "rpm": "libgusb-0.2.11-3.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libgusb.so.2.0.10"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " libgusb", 
            "License": " LGPLv2+", 
            "URL": " https://gitorious.org/gusb/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-13.phx2.fedoraproject.org", 
            "Description": "\nGUsb is a GObject wrapper for libusb1 that makes it easy to do\nasynchronous control, bulk and interrupt transfers with proper\ncancellation and integration into a mainloop.\n", 
            "Build Date": " Thu 03 Aug 2017 02:28:04 PM EDT", 
            "Source RPM": " libgusb-0.2.11-3.fc27.src.rpm", 
            "Version": " 0.2.11", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Fri 04 Aug 2017 08:51:48 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 3.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " GLib wrapper around libusb1", 
            "Size": " 106389"
        }
    }
}