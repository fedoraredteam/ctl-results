{
    "results": {
        "usr/bin/ldmtool": {
            "report-functions": [
                "g_object_unref", 
                "__libc_start_main", 
                "ldm_error_quark", 
                "ldm_disk_get_name", 
                "g_free", 
                "g_output_stream_close", 
                "g_string_free", 
                "json_builder_begin_array", 
                "ldm_new", 
                "add_history", 
                "close", 
                "ldm_volume_type_get_type", 
                "ldm_volume_get_voltype", 
                "ldm_disk_group_get_partitions", 
                "ldm_disk_get_guid", 
                "__cxa_finalize", 
                "ldm_volume_dm_create", 
                "g_log_set_handler", 
                "__stack_chk_fail", 
                "g_option_context_free", 
                "g_strfreev", 
                "json_generator_set_pretty", 
                "ldm_disk_get_metadata_start", 
                "open", 
                "ldm_volume_get_name", 
                "json_builder_set_member_name", 
                "g_option_context_parse", 
                "json_builder_begin_object", 
                "json_builder_new", 
                "free", 
                "puts", 
                "strerror", 
                "append_history", 
                "__fprintf_chk", 
                "ldm_volume_get_chunk_size", 
                "g_shell_parse_argv", 
                "json_generator_set_root", 
                "putchar", 
                "ldm_partition_get_start", 
                "ldm_disk_group_get_guid", 
                "ldm_get_disk_groups", 
                "json_builder_end_array", 
                "ldm_disk_group_get_volumes", 
                "read_history", 
                "getenv", 
                "g_option_context_add_main_entries", 
                "__gmon_start__", 
                "g_object_ref", 
                "g_array_new", 
                "__snprintf_chk", 
                "wordfree", 
                "g_strcmp0", 
                "_ITM_deregisterTMCloneTable", 
                "json_builder_add_boolean_value", 
                "ldm_partition_get_name", 
                "g_option_context_new", 
                "readdir", 
                "g_error_free", 
                "ldm_disk_get_metadata_size", 
                "json_builder_add_int_value", 
                "ldm_volume_dm_remove", 
                "g_strv_length", 
                "ldm_disk_group_get_name", 
                "ldm_disk_get_device", 
                "ldm_volume_get_hint", 
                "g_option_context_set_summary", 
                "json_generator_new", 
                "g_array_append_vals", 
                "ldm_partition_get_size", 
                "wordexp", 
                "ldm_volume_get_partitions", 
                "ldm_partition_get_disk", 
                "g_log", 
                "opendir", 
                "g_array_set_clear_func", 
                "json_builder_end_object", 
                "g_object_get", 
                "ldm_add", 
                "ldm_disk_get_data_size", 
                "json_builder_get_root", 
                "g_array_unref", 
                "_ITM_registerTMCloneTable", 
                "__printf_chk", 
                "using_history", 
                "ldm_disk_group_get_disks", 
                "json_generator_set_indent", 
                "_Jv_RegisterClasses", 
                "json_builder_add_string_value", 
                "readline", 
                "g_type_class_peek", 
                "json_builder_reset", 
                "closedir", 
                "g_enum_get_value", 
                "g_shell_error_quark", 
                "ldm_disk_get_data_start", 
                "json_generator_to_stream", 
                "__asprintf_chk"
            ], 
            "rpm": "libldm-0.2.3-9.fc24.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/ldmtool"
        }, 
        "usr/lib/libldm-1_0_so_0_0_0": {
            "report-functions": [
                "g_set_error_literal", 
                "g_type_class_peek_parent", 
                "g_object_unref", 
                "dm_task_create", 
                "dm_tree_create", 
                "dm_task_set_name", 
                "g_param_spec_uint64", 
                "g_object_class_install_property", 
                "dm_tree_free", 
                "g_array_append_vals", 
                "g_array_unref", 
                "g_string_free", 
                "open", 
                "g_object_new", 
                "g_strcmp0", 
                "g_enum_register_static", 
                "dm_task_destroy", 
                "g_type_check_class_cast", 
                "g_string_append_printf", 
                "__cxa_finalize", 
                "g_value_set_enum", 
                "dm_udev_create_cookie", 
                "g_value_set_uint", 
                "g_array_sized_new", 
                "g_set_error", 
                "g_quark_from_static_string", 
                "g_type_class_add_private", 
                "iconv_close", 
                "_ITM_registerTMCloneTable", 
                "g_uri_escape_string", 
                "g_param_spec_enum", 
                "g_type_register_static_simple", 
                "__vasprintf_chk", 
                "g_array_ref", 
                "__errno_location", 
                "uuid_parse", 
                "g_param_spec_string", 
                "g_type_class_adjust_private_offset", 
                "dm_task_get_names", 
                "g_malloc", 
                "_Jv_RegisterClasses", 
                "g_type_instance_get_private", 
                "g_intern_static_string", 
                "malloc", 
                "dm_task_run", 
                "__gmon_start__", 
                "g_once_init_enter", 
                "g_value_set_uint64", 
                "dm_log_with_errno_init", 
                "g_type_name", 
                "g_malloc0", 
                "ioctl", 
                "g_once_init_leave", 
                "g_error_free", 
                "g_array_new", 
                "uuid_compare", 
                "g_free", 
                "dm_tree_add_dev", 
                "dm_tree_node_num_children", 
                "dm_tree_find_node", 
                "iconv", 
                "dm_tree_next_child", 
                "g_array_set_clear_func", 
                "g_string_new", 
                "crc32", 
                "_ITM_deregisterTMCloneTable", 
                "dm_tree_deactivate_children", 
                "dm_tree_node_get_name", 
                "g_array_sort", 
                "g_string_printf", 
                "g_string_append", 
                "g_strdup", 
                "dm_task_set_cookie", 
                "dm_task_add_target", 
                "dm_task_retry_remove", 
                "free", 
                "strlen", 
                "pread", 
                "abort", 
                "uuid_unparse", 
                "dm_tree_set_cookie", 
                "__stack_chk_fail", 
                "g_type_check_instance_cast", 
                "uuid_copy", 
                "__fxstat", 
                "g_log", 
                "g_object_ref", 
                "dm_udev_wait", 
                "memcmp", 
                "g_value_set_string", 
                "g_param_spec_uint", 
                "iconv_open"
            ], 
            "rpm": "libldm-0.2.3-9.fc24.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libldm-1.0.so.0.0.0"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " libldm", 
            "License": " LGPLv3+ and GPLv3+", 
            "URL": " https://github.com/mdbooth/libldm", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-17.phx2.fedoraproject.org", 
            "Description": "\nlibldm is a library for managing Microsoft Windows dynamic disks, which use\nMicrosoft's LDM metadata. It can inspect them, and also create and remove\ndevice-mapper block devices which can be mounted. It includes ldmtool, which\nexposes this functionality as a command-line tool.\n\nlibldm is released under LGPLv3+. ldmtool is released under GPLv3+.\n", 
            "Build Date": " Thu 04 Feb 2016 02:06:22 AM EST", 
            "Source RPM": " libldm-0.2.3-9.fc24.src.rpm", 
            "Version": " 0.2.3", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Mon 27 Feb 2017 12:35:36 AM EST, Key ID f55e7430f5282ee4", 
            "Release": " 9.fc24", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " A tool to manage Windows dynamic disks", 
            "Size": " 125043"
        }
    }
}