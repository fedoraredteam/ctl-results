{
    "results": {
        "usr/lib64/libArcus_so_1_1_0": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/libArcus.so.1.1.0", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "_ZN6google8protobuf8compiler8ImporterC1EPNS1_10SourceTreeEPNS1_23MultiFileErrorCollectorE", 
                "_ZN6google8protobuf8compiler14DiskSourceTreeC1Ev", 
                "_ZNSo5flushEv", 
                "_ZNSt8ios_base4InitC1Ev", 
                "__cxa_guard_release", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "close", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev", 
                "_ZdaPv", 
                "listen", 
                "_ZNSt6chrono3_V212system_clock3nowEv", 
                "shutdown", 
                "inet_pton", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "accept", 
                "__cxa_end_catch", 
                "bind", 
                "memcpy", 
                "_ZSt9terminatev", 
                "recv", 
                "_ZN6google8protobuf8compiler8Importer6ImportERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", 
                "_ZNSt6thread6_StateD2Ev", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_", 
                "_ZNSolsEi", 
                "memmove", 
                "send", 
                "_ZN6google8protobuf2io16ArrayInputStreamC1EPKvii", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm", 
                "_ZN6google8protobuf2io16CodedInputStreamD1Ev", 
                "_Znam", 
                "_ZN6google8protobuf8compiler14DiskSourceTree7MapPathERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESA_", 
                "__cxa_guard_acquire", 
                "__cxa_atexit", 
                "_Znwm", 
                "_ZNSt8ios_baseD2Ev", 
                "_ZSt16__throw_bad_castv", 
                "vsnprintf", 
                "connect", 
                "_ZN6google8protobuf21DynamicMessageFactoryC1Ev", 
                "__stack_chk_fail", 
                "__cxa_begin_catch", 
                "_ZNSt8ios_base4InitD1Ev", 
                "_ZSt20__throw_system_errori", 
                "_ZSt17__throw_bad_allocv", 
                "pthread_mutex_lock", 
                "setsockopt", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l", 
                "strlen", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm", 
                "_ZdlPv", 
                "_ZNSt6localeC1Ev", 
                "_ZN6google8protobuf2io16ArrayInputStreamD1Ev", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm", 
                "pthread_create", 
                "strcmp", 
                "_ZN6google8protobuf8internal10LogMessagelsEPKc", 
                "_ZN6google8protobuf8internal10LogMessageC1ENS0_8LogLevelEPKci", 
                "__pthread_key_create", 
                "_ZN6google8protobuf2io16CodedInputStream7RefreshEv", 
                "__gmon_start__", 
                "_ZNSt6thread4joinEv", 
                "_ZN6google8protobuf8internal10LogMessageD1Ev", 
                "_ZNSt8__detail15_List_node_base9_M_unhookEv", 
                "_ITM_registerTMCloneTable", 
                "__errno_location", 
                "socket", 
                "_ITM_deregisterTMCloneTable", 
                "_ZNSt8ios_baseC2Ev", 
                "_ZN6google8protobuf8compiler8ImporterD1Ev", 
                "_ZNSo3putEc", 
                "_ZN6google8protobuf8internal11LogFinisheraSERNS1_10LogMessageE", 
                "_ZN6google8protobuf2io16CodedInputStream18SetTotalBytesLimitEii", 
                "_ZNKSt5ctypeIcE13_M_widen_initEv", 
                "pthread_mutex_unlock", 
                "memset", 
                "_ZSt19__throw_logic_errorPKc", 
                "_ZN6google8protobuf8compiler23MultiFileErrorCollectorD2Ev", 
                "__cxa_rethrow", 
                "_ZNSo9_M_insertImEERSoT_", 
                "_Unwind_Resume", 
                "_ZNSt6thread15_M_start_threadESt10unique_ptrINS_6_StateESt14default_deleteIS1_EEPFvvE", 
                "__cxa_guard_abort", 
                "__cxa_finalize", 
                "_ZNK6google8protobuf11MessageLite17SerializeAsStringB5cxx11Ev", 
                "_ZN6google8protobuf11MessageLite20ParseFromCodedStreamEPNS0_2io16CodedInputStreamE", 
                "_ZNSt6localeD1Ev"
            ], 
            "rpm": "libarcus-2.7.0-1.fc27.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " libarcus", 
            "License": " AGPLv3+", 
            "URL": " https://github.com/Ultimaker/libArcus", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-31.phx2.fedoraproject.org", 
            "Description": "\nArcus library contains C++ code and Python 3 bindings for creating a socket in\na thread and using this socket to send and receive messages based on the\nProtocol Buffers library. It is designed to facilitate the communication\nbetween Cura and its backend and similar code.\n", 
            "Build Date": " Wed 30 Aug 2017 08:56:26 AM EDT", 
            "Source RPM": " libarcus-2.7.0-1.fc27.src.rpm", 
            "Version": " 2.7.0", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Wed 30 Aug 2017 11:38:07 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 1.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Communication library between internal components for Ultimaker software", 
            "Size": " 115150"
        }
    }
}