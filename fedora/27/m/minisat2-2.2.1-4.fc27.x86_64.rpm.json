{
    "results": {
        "usr/bin/minisat": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/minisat", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "strcmp", 
                "__cxa_pure_virtual", 
                "gzdopen", 
                "__libc_start_main", 
                "fputc", 
                "__cxa_guard_acquire", 
                "_ZN7Minisat10SimpSolverD1Ev", 
                "__cxa_throw", 
                "puts", 
                "__cxa_finalize", 
                "_ZN7Minisat10SimpSolver9eliminateEb", 
                "_ZN7Minisat6Solver8toDimacsEPKcRKNS_3vecINS_3LitEEE", 
                "__cxa_end_catch", 
                "_ZN7Minisat12parseOptionsERiPPcb", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_guard_release", 
                "_ZN7Minisat12setUsageHelpEPKc", 
                "strlen", 
                "exit", 
                "__cxa_begin_catch", 
                "signal", 
                "setrlimit", 
                "_ZN7Minisat11memUsedPeakEv", 
                "gzread", 
                "_Unwind_Resume", 
                "strtol", 
                "__cxa_atexit", 
                "__cxa_allocate_exception", 
                "_ZN7Minisat10SimpSolverC1Ev", 
                "getrusage", 
                "gzopen", 
                "fopen", 
                "_exit", 
                "__printf_chk", 
                "__gxx_personality_v0", 
                "_ZN7Minisat10SimpSolver10addClause_ERNS_3vecINS_3LitEEE", 
                "fclose", 
                "_ZN7Minisat10SimpSolver6newVarENS_5lboolEb", 
                "__stack_chk_fail", 
                "getrlimit", 
                "realloc", 
                "putchar", 
                "__fprintf_chk", 
                "fwrite", 
                "_ZN7Minisat10SimpSolver6solve_Ebb", 
                "free", 
                "gzclose", 
                "__errno_location", 
                "__gmon_start__"
            ], 
            "rpm": "minisat2-2.2.1-4.fc27.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " minisat2", 
            "License": " MIT", 
            "URL": " http://minisat.se/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-19.phx2.fedoraproject.org", 
            "Description": "\nMiniSat is a minimalistic, open-source Boolean satisfiability problem\n(SAT) solver, developed to help researchers and developers alike to get\nstarted on SAT.  Together with SatELite, MiniSat was recently awarded in\nthe three industrial categories and one of the \"crafted\" categories of\nthe SAT 2005 competition.\n\nA SAT solver can determine if it is possible to find assignments to\nboolean variables that would make a given expression true, if the\nexpression is written with only AND, OR, NOT, parentheses, and boolean\nvariables.  If the expression is satisfiable, MiniSAT can also produce a\nset of assignments that make the expression true.  Although the problem\nis NP-complete, SAT solvers (like this one) are often able to decide\nthis problem in a reasonable time frame.\n", 
            "Build Date": " Thu 03 Aug 2017 09:49:26 PM EDT", 
            "Source RPM": " minisat2-2.2.1-4.fc27.src.rpm", 
            "Version": " 2.2.1", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Fri 04 Aug 2017 05:25:19 PM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 4.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Minimalistic SAT solver", 
            "Size": " 41809"
        }
    }
}