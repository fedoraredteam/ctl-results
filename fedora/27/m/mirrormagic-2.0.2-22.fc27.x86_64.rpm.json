{
    "results": {
        "usr/bin/mirrormagic": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/mirrormagic", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "SDL_WM_SetCaption", 
                "SDL_GetVideoInfo", 
                "getpwuid", 
                "__strcat_chk", 
                "SDL_Init", 
                "Mix_PlayChannelTimed", 
                "strlen", 
                "SDL_LockSurface", 
                "free", 
                "opendir", 
                "ioctl", 
                "readdir", 
                "getuid", 
                "__stack_chk_fail", 
                "Mix_PlayMusic", 
                "strncmp", 
                "SDL_GetVideoSurface", 
                "fscanf", 
                "strrchr", 
                "SDL_CreateRGBSurface", 
                "__strncpy_chk", 
                "SDL_UpdateRect", 
                "fgets", 
                "__strcpy_chk", 
                "close", 
                "__sprintf_chk", 
                "realloc", 
                "SDL_MapRGB", 
                "mkdir", 
                "SDL_InitSubSystem", 
                "Mix_FadeOutChannel", 
                "closedir", 
                "__cxa_atexit", 
                "SDL_Delay", 
                "SDL_DisplayFormat", 
                "signal", 
                "__fdelt_chk", 
                "SDL_SetEventFilter", 
                "open", 
                "fwrite", 
                "SDL_UpperBlit", 
                "fputs", 
                "strcmp", 
                "__libc_start_main", 
                "getenv", 
                "SDL_FillRect", 
                "strtol", 
                "fclose", 
                "SDL_EnableUNICODE", 
                "Mix_AllocateChannels", 
                "write", 
                "SDL_WaitEvent", 
                "SDL_QuitSubSystem", 
                "Mix_LoadWAV_RW", 
                "fgetc", 
                "SDL_SetColorKey", 
                "IMG_Load", 
                "select", 
                "SDL_GetError", 
                "Mix_HaltChannel", 
                "__printf_chk", 
                "__ctype_tolower_loc", 
                "Mix_LoadMUS", 
                "malloc", 
                "__gmon_start__", 
                "__stpcpy_chk", 
                "umask", 
                "SDL_SetVideoMode", 
                "__memcpy_chk", 
                "SDL_RWFromFile", 
                "SDL_UnlockSurface", 
                "__xstat", 
                "qsort", 
                "ferror", 
                "memcpy", 
                "__vfprintf_chk", 
                "Mix_HaltMusic", 
                "fopen", 
                "exit", 
                "Mix_CloseAudio", 
                "chmod", 
                "read", 
                "sqrt", 
                "putchar", 
                "strcpy", 
                "strncpy", 
                "__fprintf_chk", 
                "SDL_EnableKeyRepeat", 
                "Mix_OpenAudio", 
                "SDL_FreeSurface", 
                "access", 
                "Mix_ReserveChannels", 
                "Mix_VolumeMusic", 
                "fputc", 
                "__vsprintf_chk", 
                "Mix_FadeOutMusic", 
                "calloc", 
                "strchr", 
                "kill", 
                "SDL_PollEvent", 
                "Mix_Volume", 
                "SDL_Quit", 
                "feof"
            ], 
            "rpm": "mirrormagic-2.0.2-22.fc27.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Amusements/Games", 
            "Name": " mirrormagic", 
            "License": " GPL+", 
            "URL": " http://www.artsoft.org/mirrormagic/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-09.phx2.fedoraproject.org", 
            "Description": "\nMirrorMagic is a game where you shoot around obstacles to collect energy using\nyour beam. It is similar to \"Mindbender\" (Amiga) from the same author. The goal\nis to work out how to get around obstacles to shoot energy containers with your\nbeam, thereby opening the path to the next level. Included are many levels\nfamiliar from the games \"Deflektor\" and \"Mindbender\".\n", 
            "Build Date": " Thu 03 Aug 2017 10:01:02 PM EDT", 
            "Source RPM": " mirrormagic-2.0.2-22.fc27.src.rpm", 
            "Version": " 2.0.2", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Fri 04 Aug 2017 05:34:09 PM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 22.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Puzzle game where you steer a beam of light using mirrors", 
            "Size": " 1902832"
        }
    }
}