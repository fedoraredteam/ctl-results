{
    "results": {
        "usr/lib/libmoar_so": {
            "report-functions": [
                "__snprintf_chk", 
                "fflush", 
                "uv_timer_start", 
                "uv_cond_init", 
                "sqrt", 
                "fmod", 
                "uv_default_loop", 
                "mp_zero", 
                "__memcpy_chk", 
                "uv_write", 
                "uv_loop_init", 
                "__errno_location", 
                "realloc", 
                "uv_read_start", 
                "uv_udp_set_broadcast", 
                "strerror", 
                "setsockopt", 
                "abort", 
                "uv_resident_set_memory", 
                "mp_toradix", 
                "getegid", 
                "send", 
                "uv_tcp_connect", 
                "uv_loop_delete", 
                "sin", 
                "getpid", 
                "uv_fs_stat", 
                "asin", 
                "mp_gcd", 
                "uv_strerror", 
                "fcntl", 
                "recv", 
                "uv_fs_sendfile", 
                "uv_async_init", 
                "exit", 
                "uv_fs_rmdir", 
                "isatty", 
                "mp_or", 
                "atan2", 
                "uv_fs_event_init", 
                "ftruncate64", 
                "mp_neg", 
                "socket", 
                "getenv", 
                "fputc", 
                "uv_fs_open", 
                "__vsnprintf_chk", 
                "sched_yield", 
                "uv_fs_symlink", 
                "uv_cond_wait", 
                "malloc", 
                "sinh", 
                "uv_timer_init", 
                "uv_is_closing", 
                "mp_init", 
                "uv_fs_fstat", 
                "clock_gettime", 
                "uv_spawn", 
                "uv_fs_lstat", 
                "mp_read_radix", 
                "uv_run", 
                "dlopen", 
                "read", 
                "uv_fs_chmod", 
                "dlerror", 
                "__longjmp_chk", 
                "uv_mutex_init", 
                "lseek64", 
                "ffi_call", 
                "gethostname", 
                "srand", 
                "mp_expt_d", 
                "mp_cmp", 
                "mp_mul_2d", 
                "strdup", 
                "acos", 
                "uv_fs_close", 
                "strlen", 
                "tanh", 
                "mp_get_long_long", 
                "munmap", 
                "strtol", 
                "atan", 
                "strncmp", 
                "dlsym", 
                "tan", 
                "closedir", 
                "uv_listen", 
                "memmove", 
                "mp_add_d", 
                "mp_clear", 
                "__stack_chk_fail", 
                "calloc", 
                "uv_cpu_info", 
                "uv_fs_rename", 
                "uv_close", 
                "strcmp", 
                "mp_shrink", 
                "uv_signal_start", 
                "mp_toradix_n", 
                "freeaddrinfo", 
                "_ITM_registerTMCloneTable", 
                "mp_sub", 
                "uv_cond_broadcast", 
                "uv_sem_post", 
                "getsockname", 
                "mp_mul_d", 
                "mp_and", 
                "exp", 
                "uv_thread_self", 
                "memcmp", 
                "uv_tcp_bind", 
                "accept", 
                "mprotect", 
                "uv_buf_init", 
                "uv_mutex_unlock", 
                "mp_lcm", 
                "strtoll", 
                "uv_mutex_lock", 
                "mkdir", 
                "uv_udp_recv_start", 
                "uv_cond_signal", 
                "pow", 
                "mp_radix_size", 
                "uv_ip4_name", 
                "mp_clamp", 
                "__fprintf_chk", 
                "uv_sem_wait", 
                "__fxstat64", 
                "memmem", 
                "_ITM_deregisterTMCloneTable", 
                "strcpy", 
                "fputs", 
                "uv_sem_trywait", 
                "uv_fileno", 
                "uv_fs_link", 
                "cos", 
                "uv_sem_destroy", 
                "uv_async_send", 
                "nanosleep", 
                "mp_prime_is_prime", 
                "fclose", 
                "close", 
                "mp_get_int", 
                "mp_init_copy", 
                "pthread_exit", 
                "uv_ip6_name", 
                "mp_div_2d", 
                "free", 
                "open64", 
                "ffi_closure_alloc", 
                "fopen64", 
                "uv_sem_init", 
                "mp_mod", 
                "mp_mul", 
                "dlclose", 
                "geteuid", 
                "__sprintf_chk", 
                "strchr", 
                "uv_once", 
                "rand", 
                "uv_udp_bind", 
                "bind", 
                "mp_copy", 
                "uv_udp_send", 
                "uv_accept", 
                "uv_chdir", 
                "uv_tcp_getsockname", 
                "cosh", 
                "uv_fs_unlink", 
                "__cxa_finalize", 
                "uv_cond_destroy", 
                "putchar", 
                "__printf_chk", 
                "uv_tcp_init", 
                "__gmon_start__", 
                "write", 
                "mmap64", 
                "connect", 
                "log", 
                "fwrite", 
                "readdir64", 
                "mp_add", 
                "uv_pipe_init", 
                "uv_mutex_destroy", 
                "getaddrinfo", 
                "uv_fs_readlink", 
                "uv_thread_create", 
                "uv_free_cpu_info", 
                "opendir", 
                "mp_rand", 
                "ffi_prep_cif", 
                "uv_udp_recv_stop", 
                "uv_cwd", 
                "listen", 
                "uv_signal_init", 
                "uv_read_stop", 
                "uv_hrtime", 
                "mp_xor", 
                "mp_sub_d", 
                "mp_cmp_d", 
                "mp_exptmod", 
                "uv_tcp_getpeername", 
                "uv_timer_stop", 
                "strstr", 
                "uv_thread_join", 
                "ffi_prep_closure_loc", 
                "_setjmp", 
                "fsync", 
                "mp_abs", 
                "uv_fs_event_start", 
                "uv_udp_init", 
                "__vfprintf_chk", 
                "uv_process_kill", 
                "mp_grow", 
                "mp_set_int", 
                "mp_div"
            ], 
            "rpm": "moarvm-0.2017.08.1-1.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libmoar.so"
        }, 
        "usr/bin/moar": {
            "report-functions": [
                "__printf_chk", 
                "strlen", 
                "MVM_crash_on_error", 
                "strcmp", 
                "signal", 
                "MVM_vm_dump_file", 
                "_ITM_registerTMCloneTable", 
                "__fprintf_chk", 
                "_ITM_deregisterTMCloneTable", 
                "MVM_vm_set_prog_name", 
                "MVM_vm_set_lib_path", 
                "MVM_vm_create_instance", 
                "strncmp", 
                "MVM_vm_set_exec_name", 
                "__stack_chk_fail", 
                "MVM_vm_exit", 
                "MVM_vm_destroy_instance", 
                "getenv", 
                "__cxa_finalize", 
                "MVM_jit_support", 
                "putchar", 
                "fwrite", 
                "puts", 
                "__libc_start_main", 
                "__gmon_start__"
            ], 
            "rpm": "moarvm-0.2017.08.1-1.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/moar"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Development/Libraries", 
            "Name": " moarvm", 
            "License": " Artistic 2.0", 
            "URL": " http://moarvm.org", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-25.phx2.fedoraproject.org", 
            "Description": "\nShort for \"Metamodel On A Runtime\", MoarVM is a virtual machine built\nespecially for Rakudo Perl 6 and the NQP Compiler Toolchain. MoarVM is a\nback-end for NQP.\nMoarVM already stands out among the various Rakudo and NQP compilation\ntargets by typically:\n\n    Running the Perl 6 specification test suite fastest\n    Having the lowest memory usage\n    Having the best start-up time\n    Being fastest to build both NQP and Rakudo - and thus in theory your\n        Perl 6 and NQP programs too!\n", 
            "Build Date": " Tue 22 Aug 2017 03:12:47 AM EDT", 
            "Source RPM": " moarvm-0.2017.08.1-1.fc27.src.rpm", 
            "Version": " 0.2017.08.1", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Tue 22 Aug 2017 03:16:31 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 1.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Meta-model On A Runtime Virtual Machine", 
            "Size": " 4600959"
        }
    }
}