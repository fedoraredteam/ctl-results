{
    "results": {
        "usr/lib64/midori/libtab-panel_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/midori/libtab-panel.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "__stack_chk_fail", 
                "gtk_tool_item_set_tooltip_text", 
                "g_object_new", 
                "gtk_stock_add", 
                "gtk_tree_store_move_before", 
                "gtk_image_get_type", 
                "gtk_icon_source_free", 
                "gtk_icon_source_new", 
                "gtk_icon_factory_new", 
                "midori_view_get_tab_menu", 
                "gtk_tree_store_remove", 
                "midori_panel_append_widget", 
                "midori_extension_get_type", 
                "gtk_widget_get_visible", 
                "gtk_icon_factory_add_default", 
                "midori_browser_close_tab", 
                "midori_browser_get_for_widget", 
                "gtk_tool_button_get_type", 
                "gtk_tooltip_set_text", 
                "midori_browser_page_num", 
                "gtk_toolbar_insert", 
                "gtk_tree_view_get_selection", 
                "_ITM_registerTMCloneTable", 
                "g_list_free", 
                "gtk_cell_layout_set_attributes", 
                "midori_extension_get_app", 
                "gtk_tool_button_new", 
                "midori_tab_get_fg_color", 
                "gtk_tree_model_get", 
                "gtk_toolbar_new", 
                "gtk_icon_set_unref", 
                "gtk_image_new_from_pixbuf", 
                "gtk_widget_show", 
                "gtk_tree_model_get_type", 
                "g_signal_handlers_disconnect_matched", 
                "gtk_tree_view_column_set_expand", 
                "midori_view_get_type", 
                "katze_array_peek_items", 
                "midori_browser_set_current_tab", 
                "midori_panel_set_current_page", 
                "g_object_connect", 
                "gtk_bin_get_type", 
                "katze_tree_view_get_selected_iter", 
                "midori_browser_get_settings", 
                "gtk_cell_renderer_text_new", 
                "gtk_tree_view_get_path_at_pos", 
                "g_signal_handler_find", 
                "midori_browser_get_n_pages", 
                "gdk_color_get_type", 
                "g_object_get_data", 
                "gtk_widget_destroy", 
                "gtk_tree_view_column_new", 
                "midori_panel_get_type", 
                "gtk_cell_renderer_pixbuf_new", 
                "gtk_tree_view_set_headers_visible", 
                "__gmon_start__", 
                "gtk_widget_get_type", 
                "katze_widget_popup", 
                "gtk_cell_layout_get_type", 
                "midori_tab_get_bg_color", 
                "gtk_tree_model_get_iter", 
                "g_signal_connect_data", 
                "gtk_tree_view_new_with_model", 
                "gtk_menu_get_type", 
                "gtk_tree_view_append_column", 
                "gtk_tree_store_move_after", 
                "gtk_toolbar_get_type", 
                "midori_browser_get_current_tab", 
                "midori_view_get_label_ellipsize", 
                "gtk_widget_set_has_tooltip", 
                "gtk_icon_factory_add", 
                "gtk_tool_button_get_icon_widget", 
                "midori_view_get_display_title", 
                "gtk_action_create_tool_item", 
                "gtk_tree_store_get_type", 
                "gtk_tree_view_get_model", 
                "gtk_tree_view_set_tooltip_row", 
                "gtk_tree_store_swap", 
                "gtk_tree_path_free", 
                "midori_browser_get_action_group", 
                "gtk_image_set_from_pixbuf", 
                "gtk_icon_set_add_source", 
                "gtk_tool_item_get_type", 
                "katze_object_get_object", 
                "g_signal_lookup", 
                "gtk_tree_view_get_column", 
                "gtk_tree_view_set_show_expanders", 
                "gtk_action_group_get_action", 
                "gtk_bin_get_child", 
                "gtk_tree_view_column_pack_start", 
                "midori_view_get_icon", 
                "__cxa_finalize", 
                "gdk_pixbuf_get_type", 
                "_ITM_deregisterTMCloneTable", 
                "g_object_unref", 
                "katze_object_get_boolean", 
                "midori_tab_get_type", 
                "gtk_icon_source_set_icon_name", 
                "g_type_check_instance_cast", 
                "gtk_tree_model_iter_nth_child", 
                "g_dgettext", 
                "g_object_set_data", 
                "gtk_tree_selection_select_iter", 
                "gtk_tree_view_get_tooltip_context", 
                "gtk_tree_store_new", 
                "g_object_set", 
                "midori_browser_get_tabs", 
                "gtk_tree_view_get_type", 
                "gtk_tree_store_insert_with_values"
            ], 
            "rpm": "midori-0.5.12-0.2.fc26.x86_64.rpm"
        }, 
        "usr/lib64/midori/libdevpet_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/midori/libdevpet.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "gtk_vbox_new", 
                "gtk_list_store_clear", 
                "gtk_text_buffer_new", 
                "gtk_list_store_new", 
                "g_value_get_string", 
                "gtk_list_store_set", 
                "g_log_default_handler", 
                "g_object_ref_sink", 
                "g_object_new", 
                "gtk_icon_theme_get_default", 
                "_ITM_deregisterTMCloneTable", 
                "gtk_text_view_new_with_buffer", 
                "backtrace", 
                "gtk_tree_view_new_with_model", 
                "g_signal_connect_object", 
                "gtk_status_icon_new", 
                "g_log", 
                "gtk_scrolled_window_new", 
                "g_type_class_peek_parent", 
                "gtk_button_new_from_stock", 
                "gtk_scrolled_window_set_shadow_type", 
                "g_object_notify", 
                "gtk_tree_model_get_iter", 
                "g_type_name", 
                "g_object_unref", 
                "g_object_ref", 
                "gtk_window_set_default_size", 
                "gtk_box_pack_end", 
                "g_param_spec_string", 
                "g_log_set_default_handler", 
                "g_return_if_fail_warning", 
                "g_type_check_class_cast", 
                "gtk_widget_hide", 
                "gtk_scrolled_window_set_policy", 
                "g_value_set_string", 
                "g_free", 
                "gtk_window_set_title", 
                "g_once_init_leave", 
                "g_type_instance_get_private", 
                "backtrace_symbols", 
                "g_slice_free1", 
                "g_strdup", 
                "gtk_window_present", 
                "__stack_chk_fail", 
                "gtk_box_pack_start", 
                "_ITM_registerTMCloneTable", 
                "g_type_class_add_private", 
                "__cxa_finalize", 
                "g_strdup_printf", 
                "gtk_cell_renderer_pixbuf_new", 
                "g_enum_register_static", 
                "gtk_tree_model_get", 
                "g_object_get", 
                "gtk_status_icon_set_visible", 
                "g_type_check_instance_cast", 
                "gtk_text_view_set_editable", 
                "g_strconcat", 
                "gtk_container_add", 
                "__gmon_start__", 
                "gtk_text_buffer_set_text", 
                "gtk_tree_view_insert_column_with_attributes", 
                "gtk_status_icon_set_tooltip_text", 
                "gtk_status_icon_set_from_stock", 
                "gtk_widget_destroy", 
                "g_object_class_install_property", 
                "g_slice_alloc0", 
                "g_dgettext", 
                "gtk_widget_show", 
                "g_once_init_enter", 
                "gtk_list_store_append", 
                "midori_extension_get_type", 
                "gtk_window_get_type", 
                "gtk_widget_show_all", 
                "gtk_cell_renderer_text_new", 
                "gtk_label_new"
            ], 
            "rpm": "midori-0.5.12-0.2.fc26.x86_64.rpm"
        }, 
        "usr/lib64/midori/libdelayed-load_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/midori/libdelayed-load.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "g_signal_connect_object", 
                "g_return_if_fail_warning", 
                "midori_extension_get_app", 
                "__gmon_start__", 
                "g_object_ref", 
                "_ITM_deregisterTMCloneTable", 
                "midori_app_get_type", 
                "g_once_init_leave", 
                "g_signal_handlers_disconnect_matched", 
                "midori_view_reload", 
                "midori_extension_get_type", 
                "midori_view_get_proxy_item", 
                "g_type_register_static", 
                "g_list_free", 
                "midori_tab_get_progress", 
                "g_type_class_peek_parent", 
                "__stack_chk_fail", 
                "g_object_unref", 
                "midori_browser_get_type", 
                "katze_item_get_meta_integer", 
                "g_object_new", 
                "__cxa_finalize", 
                "g_once_init_enter", 
                "g_dgettext", 
                "g_signal_parse_name"
            ], 
            "rpm": "midori-0.5.12-0.2.fc26.x86_64.rpm"
        }, 
        "usr/lib64/midori/libtransfers_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/midori/libtransfers.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "gtk_box_pack_end", 
                "g_log", 
                "midori_app_get_type", 
                "g_slice_free1", 
                "g_list_free", 
                "midori_timeout_add_seconds", 
                "gtk_widget_show", 
                "g_signal_emit_by_name", 
                "gtk_widget_get_clipboard", 
                "gtk_menu_new", 
                "g_slice_alloc0", 
                "gtk_widget_hide", 
                "g_cclosure_marshal_VOID__VOID", 
                "midori_browser_get_type", 
                "gtk_progress_bar_set_show_text", 
                "gtk_tree_sortable_set_sort_column_id", 
                "gtk_tool_button_set_label", 
                "g_type_check_class_cast", 
                "midori_panel_append_page", 
                "gtk_tool_item_get_type", 
                "katze_item_set_name", 
                "g_type_check_instance_is_a", 
                "gtk_widget_get_parent", 
                "midori_download_get_content_type", 
                "g_object_get_data", 
                "gtk_widget_show_all", 
                "g_object_ref_sink", 
                "midori_download_action_stock_id", 
                "gtk_list_store_new", 
                "gtk_progress_bar_new", 
                "midori_browser_get_current_tab", 
                "gtk_message_dialog_new", 
                "g_timeout_add_full", 
                "g_param_spec_string", 
                "gtk_tool_item_set_expand", 
                "gtk_widget_set_sensitive", 
                "gtk_tree_view_append_column", 
                "gtk_image_menu_item_new_with_mnemonic", 
                "g_value_set_string", 
                "midori_app_get_browsers", 
                "g_value_set_boolean", 
                "_ITM_registerTMCloneTable", 
                "g_themed_icon_append_name", 
                "g_list_append", 
                "gtk_tree_model_iter_next", 
                "gtk_progress_bar_set_ellipsize", 
                "gtk_widget_destroy", 
                "katze_array_get_items", 
                "gtk_box_pack_start", 
                "gtk_separator_tool_item_new", 
                "gtk_widget_set_focus_on_click", 
                "g_strdup_printf", 
                "g_object_new", 
                "gtk_vbox_get_type", 
                "g_list_nth_data", 
                "gtk_image_set_from_stock", 
                "katze_array_is_empty", 
                "gtk_widget_get_type", 
                "g_type_interface_peek_parent", 
                "gtk_toolbar_set_show_arrow", 
                "g_source_remove", 
                "gtk_cell_renderer_progress_new", 
                "g_file_new_for_uri", 
                "gtk_tool_button_new_from_stock", 
                "g_value_set_int", 
                "midori_download_action_clear", 
                "g_type_class_add_private", 
                "g_param_spec_double", 
                "gtk_progress_bar_set_text", 
                "gtk_tool_item_new", 
                "gtk_widget_queue_draw", 
                "gtk_button_set_relief", 
                "katze_array_get_type", 
                "g_list_foreach", 
                "gtk_image_new_from_stock", 
                "gtk_cell_layout_pack_start", 
                "gtk_tree_model_iter_children", 
                "gtk_window_get_size", 
                "gtk_tree_view_column_set_sizing", 
                "gtk_image_menu_item_new_from_stock", 
                "gtk_list_store_set", 
                "gtk_recent_manager_add_item", 
                "gtk_button_new", 
                "gtk_tree_sortable_set_sort_func", 
                "gtk_window_get_type", 
                "g_value_set_double", 
                "g_once_init_enter", 
                "gtk_menu_shell_append", 
                "g_strdup", 
                "gtk_tool_item_set_is_important", 
                "gtk_image_new", 
                "g_quark_to_string", 
                "__gmon_start__", 
                "g_type_instance_get_private", 
                "midori_tab_get_type", 
                "_ITM_deregisterTMCloneTable", 
                "g_object_ref", 
                "midori_browser_get_for_widget", 
                "__stack_chk_fail", 
                "gtk_hbox_new", 
                "midori_download_calculate_tooltip", 
                "g_file_get_parent", 
                "katze_widget_popup", 
                "g_object_class_install_property", 
                "gtk_list_store_remove", 
                "gtk_recent_manager_get_default", 
                "g_once_init_leave", 
                "midori_browser_update_history", 
                "g_signal_handlers_disconnect_matched", 
                "g_list_length", 
                "gtk_cell_renderer_pixbuf_new", 
                "gtk_dialog_add_buttons", 
                "gtk_tree_view_new_with_model", 
                "gtk_tree_model_get", 
                "g_return_if_fail_warning", 
                "g_object_set_data_full", 
                "g_file_get_uri", 
                "midori_download_has_wrong_checksum", 
                "katze_item_new", 
                "g_signal_parse_name", 
                "g_dgettext", 
                "g_value_get_boolean", 
                "g_type_add_interface_static", 
                "g_signal_connect_object", 
                "katze_item_set_uri", 
                "gtk_progress_bar_set_fraction", 
                "g_error_free", 
                "midori_app_send_notification", 
                "gtk_tree_view_get_selection", 
                "g_type_register_static", 
                "midori_download_get_type", 
                "gtk_toolbar_set_icon_size", 
                "gtk_tree_selection_get_selected", 
                "gtk_toolbar_set_style", 
                "midori_download_open", 
                "gtk_tree_view_column_new", 
                "g_signal_new", 
                "midori_viewable_get_type", 
                "gtk_widget_set_size_request", 
                "g_object_notify", 
                "gtk_list_store_append", 
                "midori_extension_get_type", 
                "g_signal_connect_data", 
                "__cxa_finalize", 
                "katze_array_new", 
                "gtk_widget_size_request", 
                "g_free", 
                "gtk_container_add", 
                "gtk_cell_layout_set_cell_data_func", 
                "midori_extension_get_app", 
                "gtk_tree_view_column_set_expand", 
                "g_object_set", 
                "g_param_spec_int", 
                "gtk_widget_get_toplevel", 
                "gtk_tree_view_set_headers_visible", 
                "midori_download_get_progress", 
                "gtk_dialog_run", 
                "gtk_window_set_title", 
                "gtk_widget_set_tooltip_text", 
                "midori_download_get_basename_for_display", 
                "g_type_check_instance_cast", 
                "g_type_class_peek_parent", 
                "gtk_separator_tool_item_set_draw", 
                "g_themed_icon_get_type", 
                "gtk_toolbar_insert", 
                "gtk_tree_model_get_iter", 
                "g_object_unref", 
                "g_content_type_get_icon", 
                "gtk_image_menu_item_set_image", 
                "g_clear_error", 
                "gtk_toolbar_get_type", 
                "g_object_get", 
                "gtk_clipboard_set_text", 
                "sokoke_widget_get_text_size", 
                "g_type_name", 
                "gtk_toolbar_new", 
                "webkit_download_get_destination"
            ], 
            "rpm": "midori-0.5.12-0.2.fc26.x86_64.rpm"
        }, 
        "usr/lib64/midori/libshortcuts_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/midori/libshortcuts.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "g_dgettext", 
                "gtk_list_store_set", 
                "gtk_tree_model_sort_convert_iter_to_child_iter", 
                "gtk_action_group_list_actions", 
                "gtk_accel_map_lookup_entry", 
                "katze_array_peek_items", 
                "__cxa_finalize", 
                "gtk_menu_shell_append", 
                "gtk_scrolled_window_get_type", 
                "gtk_widget_destroy", 
                "midori_browser_get_type", 
                "gtk_box_get_type", 
                "gtk_tree_model_get", 
                "gtk_list_store_get_type", 
                "gtk_menu_item_new_with_mnemonic", 
                "gtk_action_get_name", 
                "g_list_free", 
                "g_object_get", 
                "gtk_action_get_type", 
                "gtk_cell_layout_get_type", 
                "sokoke_xfce_header_new", 
                "g_str_equal", 
                "gtk_cell_renderer_accel_new", 
                "gtk_tree_view_column_new", 
                "gtk_dialog_get_content_area", 
                "g_list_nth_data", 
                "gtk_scrolled_window_set_policy", 
                "katze_object_get_string", 
                "gtk_tree_model_get_type", 
                "gtk_dialog_get_type", 
                "gtk_window_get_icon_name", 
                "gtk_tree_view_get_type", 
                "gtk_window_set_default_size", 
                "gtk_widget_show", 
                "gtk_tree_view_column_pack_start", 
                "g_type_check_instance_cast", 
                "gtk_tree_view_set_headers_visible", 
                "gtk_tree_model_sort_new_with_model", 
                "gtk_window_get_type", 
                "__stack_chk_fail", 
                "gtk_accel_map_change_entry", 
                "gtk_tree_view_new_with_model", 
                "gtk_tree_model_sort_get_type", 
                "gtk_stock_lookup", 
                "gtk_tree_view_append_column", 
                "gtk_hbox_new", 
                "gtk_dialog_new_with_buttons", 
                "gtk_scrolled_window_new", 
                "gtk_list_store_insert_with_values", 
                "gtk_container_add", 
                "gtk_tree_sortable_set_sort_column_id", 
                "gtk_container_get_type", 
                "gtk_cell_layout_add_attribute", 
                "midori_extension_get_type", 
                "_ITM_deregisterTMCloneTable", 
                "gtk_tree_model_get_iter_from_string", 
                "sokoke_widget_get_text_size", 
                "gtk_action_get_accel_path", 
                "__gmon_start__", 
                "g_free", 
                "gtk_window_set_icon_name", 
                "katze_object_get_object", 
                "g_object_new", 
                "gtk_scrolled_window_set_shadow_type", 
                "gtk_box_pack_start", 
                "gtk_list_store_new", 
                "g_object_unref", 
                "midori_browser_get_action_group", 
                "g_signal_connect_data", 
                "gtk_widget_destroyed", 
                "g_strdup", 
                "gtk_tree_sortable_get_type", 
                "gtk_menu_shell_get_type", 
                "gtk_widget_show_all", 
                "midori_extension_get_app", 
                "gtk_window_present", 
                "katze_strip_mnemonics", 
                "gtk_tree_model_sort_get_model"
            ], 
            "rpm": "midori-0.5.12-0.2.fc26.x86_64.rpm"
        }, 
        "usr/lib64/midori/libtoolbar-editor_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/midori/libtoolbar-editor.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "gtk_container_add", 
                "g_malloc", 
                "__cxa_finalize", 
                "gtk_window_get_type", 
                "midori_extension_get_app", 
                "gtk_widget_show", 
                "gtk_tree_path_free", 
                "g_malloc0", 
                "gtk_list_store_set", 
                "gtk_vbox_new", 
                "gtk_tree_view_get_selection", 
                "gtk_window_set_default_size", 
                "gtk_tree_view_enable_model_drag_source", 
                "gtk_selection_data_get_length", 
                "gtk_tree_selection_select_iter", 
                "gtk_dialog_new_with_buttons", 
                "gtk_list_store_get_type", 
                "gtk_tree_model_get", 
                "g_object_new", 
                "gtk_box_pack_start", 
                "g_slist_append", 
                "gtk_tree_view_set_model", 
                "gdk_atom_intern", 
                "gtk_drag_finish", 
                "gtk_container_get_type", 
                "gtk_tree_selection_get_selected", 
                "__gmon_start__", 
                "midori_browser_get_toolbar_actions", 
                "gtk_tree_model_get_iter", 
                "katze_object_get_object", 
                "gtk_widget_set_name", 
                "g_strcmp0", 
                "gtk_misc_get_type", 
                "gtk_menu_item_new_with_mnemonic", 
                "gtk_tree_model_get_path", 
                "gtk_separator_menu_item_new", 
                "gtk_dialog_get_type", 
                "katze_object_get_string", 
                "gtk_selection_data_get_data", 
                "g_strdup", 
                "midori_browser_get_action_group", 
                "gtk_scrolled_window_set_shadow_type", 
                "g_object_get", 
                "gtk_tree_view_set_rules_hint", 
                "g_object_set", 
                "gtk_tree_view_append_column", 
                "gtk_list_store_remove", 
                "gtk_action_group_get_action", 
                "g_type_check_instance_cast", 
                "g_strfreev", 
                "gtk_list_store_insert_before", 
                "g_slist_find_custom", 
                "gtk_list_store_insert_after", 
                "gtk_box_set_spacing", 
                "g_signal_connect_data", 
                "katze_array_peek_items", 
                "gtk_button_set_image", 
                "gtk_cell_renderer_text_new", 
                "gtk_button_get_type", 
                "g_dgettext", 
                "gtk_widget_destroy", 
                "gtk_scrolled_window_get_type", 
                "gtk_dialog_get_content_area", 
                "gtk_tree_view_get_type", 
                "gtk_scrolled_window_set_policy", 
                "g_string_free", 
                "gtk_dialog_set_default_response", 
                "gtk_scrolled_window_new", 
                "midori_extension_get_type", 
                "gtk_tree_sortable_get_type", 
                "gtk_tree_view_enable_model_drag_dest", 
                "gtk_tree_view_get_model", 
                "strcmp", 
                "gtk_tree_path_new_from_string", 
                "_ITM_deregisterTMCloneTable", 
                "g_string_append", 
                "gtk_cell_renderer_pixbuf_new", 
                "gtk_widget_show_all", 
                "g_strsplit", 
                "gtk_list_store_iter_is_valid", 
                "__stack_chk_fail", 
                "midori_browser_get_settings", 
                "gtk_list_store_append", 
                "gtk_tree_view_set_reorderable", 
                "g_string_new", 
                "g_signal_handlers_disconnect_matched", 
                "gtk_selection_data_get_format", 
                "gtk_tree_model_get_type", 
                "gtk_label_new", 
                "gtk_tree_view_new", 
                "g_slist_foreach", 
                "g_free", 
                "gtk_tree_sortable_set_sort_column_id", 
                "gtk_tree_model_foreach", 
                "gtk_box_get_type", 
                "gtk_image_new_from_stock", 
                "gtk_tree_selection_select_path", 
                "gtk_selection_data_set", 
                "gtk_tree_view_scroll_to_cell", 
                "_ITM_registerTMCloneTable", 
                "g_object_unref", 
                "strlen", 
                "g_string_insert_c", 
                "katze_strip_mnemonics", 
                "gtk_hbox_new", 
                "gtk_menu_shell_get_type", 
                "gtk_tree_view_get_drag_dest_row", 
                "gtk_menu_shell_append", 
                "gtk_list_store_new", 
                "gtk_misc_set_alignment", 
                "gtk_window_set_modal", 
                "g_slist_free"
            ], 
            "rpm": "midori-0.5.12-0.2.fc26.x86_64.rpm"
        }, 
        "usr/lib64/midori/libdomain-keys_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/midori/libdomain-keys.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "g_signal_emit_by_name", 
                "midori_location_action_get_type", 
                "_ITM_registerTMCloneTable", 
                "midori_extension_get_type", 
                "g_signal_connect_object", 
                "g_object_ref", 
                "g_strconcat", 
                "g_dpgettext", 
                "_ITM_deregisterTMCloneTable", 
                "midori_browser_get_action_group", 
                "g_object_unref", 
                "midori_app_get_type", 
                "g_object_new", 
                "g_dgettext", 
                "__gmon_start__", 
                "g_signal_parse_name", 
                "midori_location_action_get_text", 
                "g_signal_handlers_disconnect_matched", 
                "g_type_check_instance_is_a", 
                "g_type_class_peek_parent", 
                "g_return_if_fail_warning", 
                "__stack_chk_fail", 
                "midori_app_get_browsers", 
                "g_strdup", 
                "g_once_init_leave", 
                "g_once_init_enter", 
                "gdk_keyval_from_name", 
                "g_free", 
                "gtk_action_group_get_action", 
                "g_list_free", 
                "midori_extension_get_app"
            ], 
            "rpm": "midori-0.5.12-0.2.fc26.x86_64.rpm"
        }, 
        "usr/lib64/midori/libadblock_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/midori/libadblock.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "g_string_insert_c", 
                "gtk_tree_view_set_headers_visible", 
                "gtk_window_set_icon_name", 
                "midori_window_remove_action", 
                "midori_window_add_action", 
                "g_io_error_quark", 
                "gtk_list_store_remove", 
                "g_value_set_uint", 
                "g_type_free_instance", 
                "webkit_hit_test_result_get_context", 
                "gtk_tree_view_append_column", 
                "g_file_get_uri", 
                "gtk_tree_view_get_column", 
                "midori_uri_is_http", 
                "gtk_dialog_get_content_area", 
                "g_key_file_to_data", 
                "g_param_spec_internal", 
                "g_value_set_boolean", 
                "g_strconcat", 
                "g_key_file_new", 
                "g_date_time_unref", 
                "g_param_spec_string", 
                "g_value_get_string", 
                "g_hash_table_get_keys", 
                "g_strchug", 
                "g_object_connect", 
                "midori_extension_get_type", 
                "g_hash_table_unref", 
                "g_strchomp", 
                "soup_uri_decode", 
                "g_type_is_a", 
                "gtk_label_new", 
                "g_file_set_contents", 
                "g_object_unref", 
                "midori_paths_make_tmp_dir", 
                "g_strsplit", 
                "g_data_input_stream_new", 
                "g_enum_get_value", 
                "g_string_new", 
                "midori_context_action_get_type", 
                "gtk_toggle_action_new", 
                "webkit_hit_test_result_get_link_uri", 
                "g_get_user_config_dir", 
                "midori_uri_parse_hostname", 
                "g_build_filename", 
                "gtk_size_group_new", 
                "gtk_tree_path_free", 
                "g_key_file_load_from_file", 
                "g_file_new_tmp", 
                "g_string_append", 
                "g_list_foreach", 
                "g_assertion_message_expr", 
                "g_propagate_error", 
                "g_regex_get_pattern", 
                "g_date_time_add_days", 
                "katze_assert_str_equal", 
                "gtk_box_pack_start", 
                "midori_browser_set_current_tab", 
                "g_file_get_child", 
                "midori_context_action_add", 
                "g_list_free", 
                "g_key_file_get_string_list", 
                "midori_paths_mkdir_with_parents", 
                "gtk_cell_renderer_toggle_new", 
                "g_type_class_add_private", 
                "gtk_cell_layout_pack_start", 
                "gtk_hbox_new", 
                "g_type_class_ref", 
                "g_regex_escape_string", 
                "gtk_entry_new", 
                "g_type_register_static", 
                "g_list_append", 
                "__stack_chk_fail", 
                "strstr", 
                "midori_tab_inject_stylesheet", 
                "gtk_label_new_with_mnemonic", 
                "g_value_get_boolean", 
                "midori_tab_get_uri", 
                "g_file_load_contents", 
                "g_hash_table_lookup", 
                "g_data_input_stream_read_line", 
                "g_realloc_n", 
                "g_type_class_peek_parent", 
                "g_once_init_leave", 
                "g_list_prepend", 
                "__vfprintf_chk", 
                "gtk_label_set_line_wrap", 
                "g_type_register_fundamental", 
                "g_file_read", 
                "g_string_free", 
                "_ITM_deregisterTMCloneTable", 
                "g_output_stream_write", 
                "gtk_tree_model_get", 
                "g_key_file_set_string_list", 
                "g_key_file_set_boolean", 
                "g_boxed_type_register_static", 
                "g_type_name", 
                "gtk_tree_model_get_iter", 
                "g_object_set", 
                "g_date_time_ref", 
                "g_file_get_contents", 
                "gtk_cell_renderer_text_new", 
                "gtk_dialog_new_with_buttons", 
                "g_regex_match_simple", 
                "g_value_get_uint", 
                "midori_browser_get_tabs", 
                "g_type_instance_get_private", 
                "midori_app_get_browsers", 
                "midori_uri_is_blank", 
                "g_build_path", 
                "gtk_action_set_gicon", 
                "g_type_check_class_cast", 
                "__cxa_finalize", 
                "g_quark_to_string", 
                "midori_paths_init_exec_path", 
                "midori_tab_get_load_status", 
                "g_date_time_new_now_local", 
                "gtk_widget_destroy", 
                "__gmon_start__", 
                "g_string_prepend", 
                "gtk_dialog_set_default_response", 
                "g_error_matches", 
                "gtk_widget_get_style_context", 
                "g_regex_ref", 
                "g_slice_alloc0", 
                "g_object_notify", 
                "g_object_ref_sink", 
                "g_signal_parse_name", 
                "g_log", 
                "midori_context_action_new", 
                "g_regex_unref", 
                "g_get_user_cache_dir", 
                "gtk_cell_layout_set_cell_data_func", 
                "g_date_time_get_type", 
                "gtk_scrolled_window_set_policy", 
                "__fprintf_chk", 
                "gtk_style_context_add_class", 
                "g_strndup", 
                "g_hash_table_insert", 
                "g_object_ref", 
                "gtk_widget_show", 
                "g_string_prepend_c", 
                "g_str_has_prefix", 
                "g_object_class_install_property", 
                "g_regex_replace_literal", 
                "g_signal_connect_object", 
                "gtk_entry_set_activates_default", 
                "g_date_time_new_local", 
                "g_value_get_boxed", 
                "g_date_time_compare", 
                "g_hash_table_size", 
                "g_key_file_get_boolean", 
                "gtk_cell_renderer_pixbuf_new", 
                "g_type_check_value_holds", 
                "g_enum_register_static", 
                "gtk_tree_view_column_new", 
                "gtk_action_new", 
                "midori_app_get_type", 
                "midori_paths_get_lib_path", 
                "g_type_create_instance", 
                "gtk_container_add", 
                "gtk_vbox_new", 
                "g_signal_handlers_disconnect_matched", 
                "g_strcmp0", 
                "g_object_get", 
                "gtk_list_store_insert_with_values", 
                "g_test_add_func", 
                "g_param_spec_uint", 
                "webkit_hit_test_result_get_image_uri", 
                "g_value_type_compatible", 
                "g_param_spec_boxed", 
                "g_str_equal", 
                "g_signal_connect_data", 
                "g_clear_error", 
                "midori_view_execute_script", 
                "strlen", 
                "gtk_widget_create_pango_layout", 
                "g_getenv", 
                "midori_app_get_browser", 
                "g_regex_error_quark", 
                "g_list_remove", 
                "g_list_find", 
                "g_type_fundamental_next", 
                "g_file_error_quark", 
                "midori_view_get_type", 
                "gtk_dialog_get_widget_for_response", 
                "gtk_action_set_tooltip", 
                "g_slice_free1", 
                "midori_paths_get_extension_preset_filename", 
                "pango_layout_get_pixel_size", 
                "g_signal_handlers_destroy", 
                "g_key_file_error_quark", 
                "midori_browser_get_type", 
                "gtk_container_set_border_width", 
                "g_string_append_printf", 
                "midori_tab_get_type", 
                "gtk_box_get_type", 
                "g_type_check_instance_cast", 
                "g_strdup_printf", 
                "gtk_window_set_resizable", 
                "g_return_if_fail_warning", 
                "g_markup_printf_escaped", 
                "gtk_tree_view_get_path_at_pos", 
                "g_str_hash", 
                "g_filename_to_uri", 
                "g_hash_table_new_full", 
                "g_regex_new", 
                "gtk_list_store_new", 
                "g_filename_from_uri", 
                "g_strdup", 
                "midori_extension_get_app", 
                "g_list_nth_data", 
                "g_file_make_symbolic_link", 
                "gtk_dialog_set_response_sensitive", 
                "g_file_new_for_uri", 
                "strtol", 
                "g_value_set_boxed", 
                "g_once_init_enter", 
                "g_object_new", 
                "gtk_toggle_action_get_active", 
                "g_date_time_add_hours", 
                "g_param_spec_boolean", 
                "gtk_entry_get_text", 
                "midori_browser_add_uri", 
                "gtk_tree_view_new_with_model", 
                "midori_paths_get_res_filename", 
                "gtk_toggle_action_set_active", 
                "g_file_new_for_path", 
                "gtk_size_group_add_widget", 
                "g_malloc0", 
                "g_error_free", 
                "g_dgettext", 
                "g_compute_checksum_for_string", 
                "g_free", 
                "g_key_file_unref", 
                "gtk_widget_set_size_request", 
                "g_regex_match_full", 
                "g_file_get_path", 
                "gtk_dialog_run", 
                "g_file_replace_contents", 
                "gtk_label_set_markup", 
                "webkit_uri_request_get_uri", 
                "g_date_time_format", 
                "g_str_has_suffix", 
                "gtk_scrolled_window_new", 
                "g_string_truncate", 
                "g_value_set_string", 
                "gtk_widget_show_all", 
                "g_type_check_instance_is_a", 
                "gtk_entry_set_text", 
                "g_utf8_strchr", 
                "_ITM_registerTMCloneTable", 
                "g_themed_icon_new"
            ], 
            "rpm": "midori-0.5.12-0.2.fc26.x86_64.rpm"
        }, 
        "usr/lib64/midori/libcolorful-tabs_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/midori/libcolorful-tabs.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "g_list_free", 
                "midori_extension_get_type", 
                "g_strcmp0", 
                "__gmon_start__", 
                "midori_extension_get_app", 
                "midori_view_get_display_uri", 
                "gdk_pixbuf_scale_simple", 
                "g_signal_connect_data", 
                "g_signal_handlers_disconnect_matched", 
                "midori_browser_get_tabs", 
                "midori_uri_is_blank", 
                "__cxa_finalize", 
                "g_free", 
                "katze_array_peek_items", 
                "g_assertion_message_cmpstr", 
                "__stack_chk_fail", 
                "midori_browser_get_type", 
                "midori_view_get_icon", 
                "g_object_new", 
                "gdk_color_to_string", 
                "g_test_add_func", 
                "g_dgettext", 
                "g_object_unref", 
                "midori_uri_parse_hostname", 
                "_ITM_registerTMCloneTable", 
                "g_return_if_fail_warning", 
                "g_type_check_instance_cast", 
                "gdk_pixbuf_get_pixels", 
                "midori_view_set_colors", 
                "g_compute_checksum_for_string", 
                "katze_object_get_object", 
                "midori_view_get_type", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "midori-0.5.12-0.2.fc26.x86_64.rpm"
        }, 
        "usr/lib64/midori/libtabs-minimized_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/midori/libtabs-minimized.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable", 
                "g_object_unref", 
                "g_signal_connect_data", 
                "g_object_new", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "katze_array_peek_items", 
                "g_signal_handlers_disconnect_matched", 
                "g_object_set", 
                "midori_extension_get_app", 
                "g_dgettext"
            ], 
            "rpm": "midori-0.5.12-0.2.fc26.x86_64.rpm"
        }, 
        "usr/lib64/midori/libabout_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/midori/libabout.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "g_type_name", 
                "g_once_init_enter", 
                "g_type_check_instance_cast", 
                "g_type_class_peek_parent", 
                "g_type_class_add_private", 
                "midori_paths_get_config_dir_for_reading", 
                "midori_view_list_versions", 
                "g_list_free", 
                "g_hash_table_lookup", 
                "g_object_get", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "g_once_init_leave", 
                "g_hash_table_insert", 
                "g_strconcat", 
                "g_strdup_printf", 
                "g_value_set_string", 
                "__cxa_finalize", 
                "webkit_web_view_load_html", 
                "midori_app_get_browsers", 
                "midori_browser_get_for_widget", 
                "midori_paths_get_cache_dir_for_reading", 
                "g_type_check_class_cast", 
                "midori_paths_get_lib_path", 
                "__stack_chk_fail", 
                "g_free", 
                "g_strcmp0", 
                "g_error_free", 
                "midori_app_get_type", 
                "midori_browser_get_type", 
                "g_signal_handlers_disconnect_matched", 
                "midori_paths_get_tmp_dir", 
                "g_object_ref", 
                "g_signal_connect_object", 
                "g_type_register_static", 
                "g_dgettext", 
                "midori_view_list_plugins", 
                "midori_view_set_uri", 
                "midori_tab_get_web_view", 
                "g_object_new", 
                "g_object_notify", 
                "g_value_get_string", 
                "g_log", 
                "midori_web_settings_get_system_name", 
                "g_hash_table_new_full", 
                "g_string_new", 
                "g_str_equal", 
                "g_return_if_fail_warning", 
                "g_hash_table_ref", 
                "g_hash_table_get_keys", 
                "g_malloc0", 
                "_ITM_registerTMCloneTable", 
                "g_string_free", 
                "midori_speed_dial_get_html", 
                "g_quark_to_string", 
                "g_str_hash", 
                "g_type_instance_get_private", 
                "g_signal_parse_name", 
                "g_hash_table_unref", 
                "g_clear_error", 
                "midori_paths_get_command_line_str", 
                "midori_extension_get_app", 
                "g_object_unref", 
                "midori_browser_get_tabs", 
                "midori_view_list_video_formats", 
                "midori_extension_get_type", 
                "g_object_class_install_property", 
                "midori_uri_for_search", 
                "g_strdup", 
                "g_param_spec_string", 
                "midori_paths_get_user_data_dir_for_reading"
            ], 
            "rpm": "midori-0.5.12-0.2.fc26.x86_64.rpm"
        }, 
        "usr/lib64/midori/libwebmedia-now-playing_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/midori/libwebmedia-now-playing.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "gtk_window_get_title", 
                "g_object_unref", 
                "g_dbus_connection_unregister_object", 
                "g_bus_unown_name", 
                "g_bus_own_name_with_closures", 
                "g_malloc", 
                "g_type_name", 
                "midori_app_send_notification", 
                "midori_app_get_type", 
                "g_quark_from_static_string", 
                "g_variant_dup_string", 
                "g_type_check_instance_cast", 
                "g_type_instance_get_private", 
                "g_signal_connect_object", 
                "strstr", 
                "midori_extension_get_type", 
                "midori_app_get_browsers", 
                "_ITM_registerTMCloneTable", 
                "g_variant_new_string", 
                "g_return_if_fail_warning", 
                "g_strdup", 
                "g_object_notify", 
                "g_io_error_quark", 
                "g_type_class_peek_parent", 
                "g_value_get_string", 
                "g_value_set_string", 
                "g_dbus_connection_send_message", 
                "g_type_register_static", 
                "g_variant_builder_init", 
                "g_signal_handlers_disconnect_matched", 
                "g_dbus_connection_register_object", 
                "_ITM_deregisterTMCloneTable", 
                "g_type_check_instance_is_a", 
                "g_once_init_enter", 
                "g_signal_parse_name", 
                "g_dbus_method_invocation_get_connection", 
                "g_regex_error_quark", 
                "g_value_set_object", 
                "g_param_spec_string", 
                "g_type_set_qdata", 
                "midori_browser_get_type", 
                "g_strcmp0", 
                "g_cclosure_new", 
                "g_param_spec_object", 
                "g_object_ref", 
                "midori_extension_get_app", 
                "g_object_class_install_property", 
                "g_free", 
                "g_once_init_leave", 
                "__stack_chk_fail", 
                "g_list_free", 
                "g_quark_to_string", 
                "g_variant_iter_init", 
                "g_dgettext", 
                "g_type_check_class_cast", 
                "g_regex_match", 
                "g_dbus_message_set_body", 
                "g_variant_builder_end", 
                "g_strconcat", 
                "g_dbus_message_new_method_reply", 
                "g_clear_error", 
                "g_value_get_object", 
                "g_regex_unref", 
                "fwrite", 
                "__gmon_start__", 
                "g_log", 
                "g_error_free", 
                "g_regex_new", 
                "g_object_get", 
                "__cxa_finalize", 
                "g_type_class_add_private"
            ], 
            "rpm": "midori-0.5.12-0.2.fc26.x86_64.rpm"
        }, 
        "usr/lib64/midori/libcookie-manager_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/midori/libcookie-manager.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "g_hash_table_new_full", 
                "gtk_tree_model_get_iter_first", 
                "gtk_menu_popup", 
                "g_dgettext", 
                "gtk_tree_model_get_type", 
                "gtk_scrolled_window_new", 
                "gtk_widget_get_type", 
                "g_list_foreach", 
                "gtk_tree_model_filter_new", 
                "gtk_tree_view_set_rules_hint", 
                "gtk_tree_selection_get_tree_view", 
                "g_slist_remove", 
                "gtk_container_add", 
                "g_list_append", 
                "g_signal_handlers_disconnect_matched", 
                "g_slist_append", 
                "g_object_class_install_property", 
                "gtk_menu_get_type", 
                "gtk_tree_view_get_type", 
                "gtk_tree_model_filter_convert_iter_to_child_iter", 
                "gtk_widget_set_has_tooltip", 
                "gtk_widget_set_sensitive", 
                "katze_object_get_object", 
                "gtk_tree_view_append_column", 
                "gtk_scrolled_window_set_policy", 
                "g_type_class_add_private", 
                "g_type_instance_get_private", 
                "gtk_tree_path_next", 
                "midori_timeout_add_seconds", 
                "g_once_init_leave", 
                "strstr", 
                "midori_browser_get_for_widget", 
                "gtk_tree_view_new", 
                "gtk_tree_view_column_set_expand", 
                "g_list_free", 
                "gtk_tree_path_prev", 
                "gtk_tree_view_expand_all", 
                "gtk_tree_path_free", 
                "gtk_image_menu_item_new_with_mnemonic", 
                "gtk_tree_model_get_path", 
                "gtk_separator_menu_item_new", 
                "g_strconcat", 
                "g_intern_static_string", 
                "g_type_check_instance_is_a", 
                "g_log", 
                "gtk_tree_view_row_expanded", 
                "gtk_tree_view_column_set_sort_indicator", 
                "gtk_tree_model_iter_parent", 
                "gtk_tooltip_set_markup", 
                "g_utf8_strdown", 
                "soup_cookie_jar_delete_cookie", 
                "gtk_box_pack_start", 
                "gtk_tool_button_new_from_stock", 
                "soup_cookie_jar_all_cookies", 
                "gtk_tree_view_enable_model_drag_source", 
                "gtk_dialog_run", 
                "gtk_tree_store_set", 
                "gtk_vpaned_new", 
                "gtk_misc_get_type", 
                "gtk_tree_row_reference_new", 
                "gtk_tool_button_get_type", 
                "g_hash_table_insert", 
                "g_date_time_new_from_unix_local", 
                "gtk_tree_path_get_depth", 
                "g_type_check_instance_cast", 
                "gtk_tree_view_set_headers_visible", 
                "gtk_label_set_line_wrap", 
                "gtk_label_new", 
                "gtk_tree_store_iter_is_valid", 
                "gtk_message_dialog_new", 
                "gtk_menu_new", 
                "gtk_misc_set_alignment", 
                "gtk_image_menu_item_get_type", 
                "gtk_tool_item_set_tooltip_text", 
                "gtk_get_current_event_time", 
                "gtk_tree_view_expand_to_path", 
                "g_cclosure_marshal_VOID__VOID", 
                "g_hash_table_destroy", 
                "g_object_ref", 
                "g_type_name", 
                "gtk_message_dialog_format_secondary_text", 
                "__stack_chk_fail", 
                "g_signal_new", 
                "__gmon_start__", 
                "gtk_separator_tool_item_set_draw", 
                "g_hash_table_lookup", 
                "gtk_misc_set_padding", 
                "g_type_add_interface_static", 
                "g_date_time_unref", 
                "g_object_set", 
                "gtk_tree_model_iter_nth_child", 
                "gtk_tree_store_clear", 
                "gtk_tool_item_set_is_important", 
                "g_once_init_enter", 
                "gtk_drag_source_add_text_targets", 
                "gtk_label_set_text", 
                "gtk_tree_model_iter_children", 
                "g_list_nth_data", 
                "gtk_tree_view_set_search_column", 
                "gtk_window_get_icon_name", 
                "gtk_toolbar_get_type", 
                "g_slist_foreach", 
                "gtk_tree_view_set_model", 
                "gtk_label_get_type", 
                "g_source_remove", 
                "gtk_toolbar_new", 
                "gtk_tree_selection_set_mode", 
                "g_return_if_fail_warning", 
                "__cxa_finalize", 
                "soup_cookie_jar_db_new", 
                "g_str_equal", 
                "gtk_tree_sortable_set_sort_column_id", 
                "_ITM_registerTMCloneTable", 
                "midori_viewable_get_type", 
                "g_type_register_static_simple", 
                "soup_cookie_free", 
                "soup_cookie_get_type", 
                "g_str_hash", 
                "gtk_tree_view_collapse_all", 
                "g_free", 
                "gtk_label_set_markup", 
                "gtk_window_set_icon_name", 
                "g_param_spec_object", 
                "g_type_class_adjust_private_offset", 
                "gtk_widget_destroy", 
                "gtk_cell_renderer_text_new", 
                "gtk_tree_model_filter_get_type", 
                "gtk_tree_selection_get_selected_rows", 
                "gtk_image_new_from_icon_name", 
                "gtk_tool_item_set_expand", 
                "gtk_tree_store_remove", 
                "gtk_tree_sortable_get_type", 
                "midori_panel_append_page", 
                "g_slist_free", 
                "gtk_message_dialog_get_type", 
                "gtk_window_set_title", 
                "gtk_widget_show", 
                "_ITM_deregisterTMCloneTable", 
                "gtk_dialog_get_type", 
                "gtk_entry_get_type", 
                "gtk_tree_path_new_first", 
                "gtk_tree_model_filter_set_visible_column", 
                "midori_extension_get_type", 
                "gtk_scrolled_window_get_type", 
                "gtk_separator_tool_item_new", 
                "g_cclosure_marshal_VOID__STRING", 
                "g_object_new", 
                "gtk_image_new_from_stock", 
                "gtk_tree_view_expand_row", 
                "gtk_tree_view_column_set_cell_data_func", 
                "gtk_separator_tool_item_get_type", 
                "g_type_class_peek_parent", 
                "gtk_tree_model_iter_has_child", 
                "gtk_tool_button_set_label", 
                "gtk_tree_row_reference_free", 
                "gtk_tree_view_collapse_row", 
                "gtk_hbox_new", 
                "gtk_tree_row_reference_get_path", 
                "gtk_image_menu_item_set_image", 
                "gtk_entry_get_text", 
                "gtk_container_get_type", 
                "gtk_tree_store_append", 
                "gtk_tree_store_new", 
                "gtk_tree_model_iter_next", 
                "gtk_tree_model_get_iter", 
                "gtk_paned_pack1", 
                "gtk_tree_view_get_tooltip_context", 
                "gtk_tree_path_up", 
                "gtk_vbox_get_type", 
                "g_strdup", 
                "gtk_tree_store_get_type", 
                "g_type_check_class_cast", 
                "gtk_entry_set_text", 
                "gtk_paned_get_type", 
                "gtk_selection_data_set_text", 
                "gtk_tree_model_iter_n_children", 
                "g_signal_connect_data", 
                "gtk_tree_view_column_set_resizable", 
                "gtk_tree_view_column_new_with_attributes", 
                "gtk_tree_path_copy", 
                "gtk_image_menu_item_new_from_stock", 
                "gtk_window_get_type", 
                "g_value_get_object", 
                "katze_array_peek_items", 
                "gtk_label_set_line_wrap_mode", 
                "gtk_tree_selection_select_path", 
                "soup_date_to_time_t", 
                "gtk_label_set_selectable", 
                "gtk_paned_pack2", 
                "gtk_box_get_type", 
                "gtk_scrolled_window_set_shadow_type", 
                "gtk_tree_model_get", 
                "g_date_time_format", 
                "gtk_toolbar_insert", 
                "g_object_get_data", 
                "gtk_tree_view_get_selection", 
                "gtk_tree_view_get_model", 
                "sokoke_search_entry_new", 
                "g_markup_printf_escaped", 
                "midori_paths_get_config_filename_for_writing", 
                "g_signal_emit", 
                "g_malloc0", 
                "gtk_scrolled_window_add_with_viewport"
            ], 
            "rpm": "midori-0.5.12-0.2.fc26.x86_64.rpm"
        }, 
        "usr/lib64/midori/libflummi_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/midori/libflummi.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "sqlite3_column_text", 
                "__cxa_finalize", 
                "sqlite3_bind_int64", 
                "g_object_new", 
                "midori_app_get_browser", 
                "g_object_ref", 
                "sqlite3_column_int64", 
                "g_strdup", 
                "midori_app_send_command", 
                "g_log", 
                "__stack_chk_fail", 
                "g_return_if_fail_warning", 
                "_ITM_deregisterTMCloneTable", 
                "g_dgettext", 
                "midori_database_get_db", 
                "__gmon_start__", 
                "g_once_init_leave", 
                "g_free", 
                "_ITM_registerTMCloneTable", 
                "g_once_init_enter", 
                "g_signal_connect_object", 
                "sqlite3_prepare_v2", 
                "g_idle_add_full", 
                "midori_extension_get_app", 
                "sqlite3_finalize", 
                "g_quark_to_string", 
                "g_malloc0", 
                "midori_browser_get_current_tab", 
                "midori_database_new", 
                "sqlite3_errmsg", 
                "g_type_register_static", 
                "sqlite3_step", 
                "g_type_class_peek_parent", 
                "g_object_unref", 
                "midori_extension_get_type", 
                "midori_database_error_quark"
            ], 
            "rpm": "midori-0.5.12-0.2.fc26.x86_64.rpm"
        }, 
        "usr/bin/midori": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/midori", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "g_strerror", 
                "midori_load_soup_session", 
                "g_find_program_in_path", 
                "gtk_offscreen_window_new", 
                "__gmon_start__", 
                "gtk_window_new", 
                "g_string_free", 
                "g_list_free", 
                "gdk_screen_get_default", 
                "gtk_widget_destroy", 
                "gdk_screen_get_width", 
                "g_dgettext", 
                "gtk_widget_set_size_request", 
                "g_object_class_list_properties", 
                "gtk_window_get_type", 
                "__stack_chk_fail", 
                "__errno_location", 
                "midori_view_get_type", 
                "g_object_unref", 
                "sokoke_spawn_gdb", 
                "g_set_application_name", 
                "katze_window_set_sensible_default_size", 
                "gtk_main_quit", 
                "gtk_entry_get_type", 
                "midori_private_data_register_built_ins", 
                "g_object_set", 
                "gtk_container_add", 
                "webkit_web_view_new", 
                "g_file_get_contents", 
                "gtk_action_group_list_actions", 
                "gtk_entry_get_text", 
                "gtk_widget_hide", 
                "midori_browser_get_action_group", 
                "gtk_main", 
                "midori_view_new_with_item", 
                "sokoke_magic_uri", 
                "g_print", 
                "g_strnfill", 
                "_ITM_registerTMCloneTable", 
                "__libc_start_main", 
                "g_setenv", 
                "midori_private_app_new", 
                "g_free", 
                "webkit_web_view_get_type", 
                "gtk_entry_new", 
                "gdk_screen_get_height", 
                "gtk_widget_get_type", 
                "__cxa_finalize", 
                "midori_normal_app_on_quit", 
                "g_string_new", 
                "midori_browser_get_settings", 
                "katze_object_get_string", 
                "katze_strip_mnemonics", 
                "g_set_prgname", 
                "g_file_open_tmp", 
                "midori_normal_app_new", 
                "midori_view_list_versions", 
                "midori_error", 
                "midori_app_setup", 
                "midori_paths_init", 
                "midori_browser_new", 
                "g_type_check_class_cast", 
                "g_param_spec_get_name", 
                "gtk_box_pack_start", 
                "g_log", 
                "g_type_class_peek", 
                "g_signal_connect_data", 
                "g_unlink", 
                "_ITM_deregisterTMCloneTable", 
                "strlen", 
                "g_strndup", 
                "gtk_container_get_type", 
                "g_string_insert_c", 
                "g_string_append", 
                "gtk_box_get_type", 
                "gtk_widget_show_all", 
                "gtk_entry_set_text", 
                "gtk_vbox_new", 
                "gtk_action_get_name", 
                "close", 
                "midori_view_execute_script", 
                "webkit_web_view_load_uri", 
                "g_type_check_instance_cast"
            ], 
            "rpm": "midori-0.5.12-0.2.fc26.x86_64.rpm"
        }, 
        "usr/lib64/midori/libhistory-list_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/midori/libhistory-list.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "g_slice_free1", 
                "g_once_init_leave", 
                "gtk_box_get_type", 
                "gtk_table_attach_defaults", 
                "midori_extension_install_integer", 
                "midori_extension_set_integer", 
                "g_strdup", 
                "g_object_unref", 
                "midori_extension_get_type", 
                "gtk_tree_path_get_indices_with_depth", 
                "midori_view_get_type", 
                "g_malloc0", 
                "g_object_class_find_property", 
                "midori_tab_get_bg_color", 
                "gtk_cell_renderer_text_new", 
                "midori_extension_get_integer", 
                "g_type_register_static", 
                "gtk_button_get_type", 
                "gtk_box_pack_start", 
                "g_signal_connect_object", 
                "gtk_tree_view_get_cursor", 
                "g_type_check_class_cast", 
                "gtk_action_set_accel_group", 
                "g_signal_emit_by_name", 
                "g_object_get_data", 
                "gdk_pixbuf_get_type", 
                "katze_property_proxy", 
                "g_signal_connect_data", 
                "g_type_check_instance_cast", 
                "g_ptr_array_remove", 
                "midori_tab_get_fg_color", 
                "midori_browser_get_for_widget", 
                "gtk_dialog_get_content_area", 
                "midori_browser_get_action_group", 
                "midori_browser_get_tabs", 
                "midori_browser_unblock_action", 
                "gtk_vbox_new", 
                "gtk_action_group_get_action", 
                "midori_browser_get_type", 
                "g_list_free", 
                "gtk_scrolled_window_set_policy", 
                "gtk_accel_group_new", 
                "g_type_class_add_private", 
                "gtk_window_resize", 
                "midori_browser_get_current_tab", 
                "gtk_combo_box_get_active_iter", 
                "midori_view_get_display_title", 
                "g_signal_parse_name", 
                "gtk_table_new", 
                "gtk_scrolled_window_new", 
                "gtk_combo_box_get_model", 
                "g_object_notify", 
                "gtk_scrolled_window_set_shadow_type", 
                "gtk_action_group_add_action_with_accel", 
                "gtk_action_group_remove_action", 
                "gtk_tree_model_iter_n_children", 
                "g_log", 
                "gtk_window_get_type", 
                "midori_browser_block_action", 
                "_ITM_registerTMCloneTable", 
                "gtk_widget_set_size_request", 
                "g_signal_new", 
                "gdk_keyval_from_name", 
                "gtk_window_set_default_size", 
                "gtk_tree_view_new_with_model", 
                "gtk_widget_show_all", 
                "g_type_instance_get_private", 
                "gtk_tree_view_set_model", 
                "g_type_check_instance_is_a", 
                "gtk_cell_layout_set_attributes", 
                "g_slice_alloc0", 
                "gtk_widget_show", 
                "gtk_dialog_add_button", 
                "gtk_combo_box_set_active_iter", 
                "gtk_dialog_get_type", 
                "g_signal_handler_disconnect", 
                "gdk_color_get_type", 
                "g_dgettext", 
                "g_signal_handlers_disconnect_matched", 
                "g_cclosure_marshal_VOID__VOID", 
                "gtk_widget_get_preferred_size", 
                "g_object_ref_sink", 
                "g_type_name", 
                "sokoke_gtk_action_count_modifiers", 
                "gtk_list_store_new", 
                "g_value_set_object", 
                "g_object_set_data_full", 
                "midori_browser_close_tab", 
                "gtk_tree_view_set_cursor", 
                "g_object_class_install_property", 
                "gtk_tree_path_new_from_indices", 
                "gtk_cell_renderer_pixbuf_new", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "gtk_window_add_accel_group", 
                "gtk_button_set_label", 
                "gtk_combo_box_new_with_model", 
                "g_enum_register_static", 
                "g_ptr_array_new", 
                "__cxa_finalize", 
                "gtk_tree_model_get_iter", 
                "gtk_widget_hide", 
                "gtk_cell_layout_pack_start", 
                "g_param_spec_object", 
                "g_free", 
                "gtk_tree_path_free", 
                "gtk_widget_destroy", 
                "g_strdup_printf", 
                "g_object_ref", 
                "midori_app_get_type", 
                "g_ptr_array_add", 
                "gtk_window_set_title", 
                "gtk_list_store_get_type", 
                "gtk_list_store_set", 
                "gtk_tree_view_get_model", 
                "g_object_new", 
                "gtk_list_store_remove", 
                "gtk_tree_view_insert_column_with_attributes", 
                "gtk_container_set_border_width", 
                "gtk_container_add", 
                "gtk_action_connect_accelerator", 
                "g_value_get_object", 
                "g_type_class_peek_parent", 
                "g_once_init_enter", 
                "g_object_get", 
                "gtk_hbox_new", 
                "gtk_tree_model_get", 
                "g_object_set", 
                "g_return_if_fail_warning", 
                "midori_app_get_browsers", 
                "midori_extension_get_app", 
                "__stack_chk_fail", 
                "gtk_window_set_modal", 
                "gtk_action_new"
            ], 
            "rpm": "midori-0.5.12-0.2.fc26.x86_64.rpm"
        }, 
        "usr/lib64/libmidori-core_so_0_0_0": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/libmidori-core.so.0.0.0", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "gtk_combo_box_text_get_type", 
                "g_cancellable_is_cancelled", 
                "gtk_toggle_button_get_active", 
                "webkit_web_context_set_favicon_database_directory", 
                "g_object_class_install_property", 
                "gtk_action_group_set_translation_domain", 
                "gtk_menu_popup", 
                "webkit_web_view_go_back", 
                "g_str_equal", 
                "g_signal_parse_name", 
                "g_key_file_set_string", 
                "gtk_get_current_event", 
                "g_test_init", 
                "gtk_label_set_label", 
                "g_key_file_get_boolean", 
                "webkit_find_controller_search", 
                "dcgettext", 
                "gtk_tool_item_new", 
                "webkit_web_view_set_custom_charset", 
                "g_free", 
                "fputc", 
                "g_get_system_data_dirs", 
                "gtk_widget_add_events", 
                "gtk_selection_data_get_text", 
                "JSStringGetMaximumUTF8CStringSize", 
                "gtk_tree_view_column_pack_start", 
                "webkit_uri_request_get_uri", 
                "g_object_set_data", 
                "g_key_file_unref", 
                "g_signal_handlers_disconnect_matched", 
                "webkit_web_view_get_inspector", 
                "xmlNodeGetContent", 
                "gdk_cairo_set_source_rgba", 
                "gtk_action_connect_accelerator", 
                "gtk_popover_get_type", 
                "g_cancellable_new", 
                "gtk_tree_sortable_set_sort_column_id", 
                "gtk_viewport_new", 
                "XScreenSaverQueryExtension", 
                "g_content_type_get_icon", 
                "g_strdupv", 
                "g_main_context_iteration", 
                "g_key_file_new", 
                "gtk_tree_view_column_cell_get_size", 
                "g_regex_replace_literal", 
                "gtk_menu_item_get_type", 
                "gtk_label_new_with_mnemonic", 
                "webkit_web_context_get_cookie_manager", 
                "gtk_tree_model_iter_parent", 
                "g_application_get_is_remote", 
                "gtk_action_group_get_action", 
                "g_file_new_for_path", 
                "gtk_file_chooser_get_type", 
                "gtk_editable_select_region", 
                "g_param_spec_get_name", 
                "sqlite3_column_type", 
                "unlink", 
                "gtk_widget_set_visible", 
                "gtk_icon_factory_add", 
                "g_markup_printf_escaped", 
                "g_cclosure_marshal_VOID__POINTER", 
                "webkit_web_view_reload", 
                "gtk_file_filter_add_mime_type", 
                "gdk_pixbuf_get_height", 
                "pango_layout_set_text", 
                "g_quark_to_string", 
                "g_file_get_child", 
                "sqlite3_last_insert_rowid", 
                "gtk_init_with_args", 
                "webkit_web_view_execute_editing_command", 
                "g_list_foreach", 
                "g_file_get_path", 
                "gtk_dialog_set_default_response", 
                "g_param_spec_boxed", 
                "g_param_spec_boolean", 
                "gtk_tree_store_set", 
                "webkit_context_menu_get_items", 
                "webkit_web_context_set_spell_checking_languages", 
                "pango_layout_get_text", 
                "g_simple_async_result_new", 
                "gtk_tree_view_set_search_equal_func", 
                "g_strconcat", 
                "gtk_clipboard_wait_for_text", 
                "gtk_icon_source_set_icon_name", 
                "g_app_info_get_default_for_uri_scheme", 
                "gtk_image_new_from_stock", 
                "webkit_web_view_get_back_forward_list", 
                "gtk_popover_set_relative_to", 
                "gtk_notebook_set_show_border", 
                "gtk_entry_set_icon_from_stock", 
                "g_content_type_get_description", 
                "g_simple_async_result_complete_in_idle", 
                "webkit_web_context_get_plugins", 
                "g_compute_checksum_for_string", 
                "gtk_tree_path_new_from_indices", 
                "gtk_cell_layout_add_attribute", 
                "webkit_context_menu_item_set_submenu", 
                "gtk_button_set_relief", 
                "g_once_init_leave", 
                "g_error_new", 
                "gtk_orientable_get_type", 
                "gcr_certificate_details_widget_new", 
                "webkit_cookie_manager_set_persistent_storage", 
                "sqlite3_exec", 
                "gtk_button_new_with_label", 
                "g_module_symbol", 
                "sqlite3_column_count", 
                "gtk_window_propagate_key_event", 
                "g_main_context_unref", 
                "gtk_widget_get_pointer", 
                "g_loadable_icon_get_type", 
                "gtk_tree_view_set_cursor", 
                "g_object_get", 
                "g_network_monitor_can_reach", 
                "g_unichar_isupper", 
                "gtk_list_store_clear", 
                "gtk_action_group_new", 
                "gtk_target_list_unref", 
                "webkit_download_set_destination", 
                "g_icon_get_type", 
                "g_loadable_icon_load_finish", 
                "gtk_widget_get_name", 
                "gtk_ui_manager_get_widget", 
                "gtk_entry_get_type", 
                "gtk_action_new", 
                "gtk_label_new", 
                "gtk_widget_get_allocated_width", 
                "g_assertion_message_expr", 
                "gtk_image_new_from_pixbuf", 
                "gtk_action_create_menu_item", 
                "gdk_device_get_source", 
                "gtk_frame_set_shadow_type", 
                "g_key_file_remove_group", 
                "g_application_open", 
                "g_content_type_is_a", 
                "webkit_web_inspector_show", 
                "gtk_toggle_action_set_active", 
                "gtk_window_get_title", 
                "gtk_separator_tool_item_get_type", 
                "gtk_cell_layout_get_type", 
                "g_simple_async_result_propagate_error", 
                "gtk_tree_selection_unselect_all", 
                "gtk_frame_get_type", 
                "kill", 
                "webkit_web_view_can_execute_editing_command", 
                "g_file_new_for_commandline_arg", 
                "gtk_window_set_skip_taskbar_hint", 
                "g_ascii_strtod", 
                "gtk_tree_view_set_search_column", 
                "gtk_image_new", 
                "gtk_widget_draw", 
                "uname", 
                "gtk_font_chooser_get_font_family", 
                "sqlite3_open_v2", 
                "g_string_append_len", 
                "g_idle_remove_by_data", 
                "webkit_web_context_get_plugins_finish", 
                "gtk_cell_layout_set_cell_data_func", 
                "gtk_file_chooser_button_new", 
                "webkit_context_menu_item_get_stock_action", 
                "g_key_file_remove_key", 
                "g_strndup", 
                "gtk_editable_get_selection_bounds", 
                "__cxa_finalize", 
                "g_date_time_format", 
                "gtk_file_chooser_get_filename", 
                "gtk_tree_view_columns_autosize", 
                "g_themed_icon_new_with_default_fallbacks", 
                "g_ascii_strncasecmp", 
                "gtk_action_get_visible", 
                "gcr_trust_remove_pinned_certificate", 
                "gtk_notebook_insert_page", 
                "webkit_download_cancel", 
                "webkit_web_view_get_uri", 
                "gtk_file_chooser_get_uri", 
                "gtk_notebook_get_type", 
                "gtk_window_move", 
                "gtk_accel_label_get_type", 
                "gtk_action_activate", 
                "gtk_toggle_tool_button_get_active", 
                "gtk_label_set_selectable", 
                "gtk_combo_box_get_model", 
                "webkit_download_get_request", 
                "g_value_get_string", 
                "g_param_spec_uint", 
                "gtk_notebook_set_action_widget", 
                "g_io_extension_get_name", 
                "gtk_image_menu_item_new_with_label", 
                "gtk_radio_action_set_group", 
                "gtk_menu_item_new", 
                "g_cclosure_marshal_VOID__UINT", 
                "gtk_activatable_get_related_action", 
                "gtk_container_foreach", 
                "gtk_accel_map_add_entry", 
                "gtk_widget_get_scale_factor", 
                "soup_session_pause_message", 
                "gtk_tree_model_get_iter_first", 
                "gtk_combo_box_get_active", 
                "g_type_init", 
                "gtk_tree_model_iter_n_children", 
                "gtk_entry_get_icon_area", 
                "gtk_selection_data_set_uris", 
                "gtk_combo_box_text_new", 
                "gtk_overlay_new", 
                "gtk_ui_manager_insert_action_group", 
                "pango_font_family_get_name", 
                "gtk_header_bar_pack_start", 
                "gtk_list_store_get_type", 
                "g_loadable_icon_load_async", 
                "gcr_trust_is_certificate_pinned", 
                "gtk_notebook_new", 
                "g_signal_emit_by_name", 
                "gtk_widget_set_halign", 
                "g_direct_equal", 
                "g_filename_to_utf8", 
                "gtk_spin_button_get_type", 
                "g_key_file_get_groups", 
                "webkit_web_context_set_disk_cache_directory", 
                "gtk_action_get_type", 
                "sqlite3_mprintf", 
                "gtk_tool_item_set_is_important", 
                "gtk_hpaned_new", 
                "g_vfprintf", 
                "gtk_tree_view_get_model", 
                "g_utf8_strrchr", 
                "gtk_selection_data_get_uris", 
                "gtk_cell_renderer_pixbuf_new", 
                "gtk_spin_button_set_digits", 
                "g_themed_icon_append_name", 
                "webkit_web_view_load_alternate_html", 
                "g_application_register", 
                "gtk_file_chooser_dialog_get_type", 
                "gtk_tree_view_column_set_sizing", 
                "gtk_icon_source_free", 
                "g_strv_length", 
                "gtk_drag_dest_set", 
                "gtk_entry_new", 
                "g_date_get_julian", 
                "pango_layout_get_pixel_size", 
                "g_module_error", 
                "gtk_tree_view_column_new", 
                "gtk_window_new", 
                "g_object_class_find_property", 
                "gtk_header_bar_get_custom_title", 
                "gtk_entry_get_layout", 
                "g_dir_open", 
                "g_strfreev", 
                "gtk_menu_bar_get_type", 
                "g_intern_static_string", 
                "g_param_spec_get_blurb", 
                "fopen", 
                "JSGlobalContextCreateInGroup", 
                "gtk_notebook_get_current_page", 
                "sqlite3_open", 
                "gtk_clipboard_wait_is_text_available", 
                "g_build_path", 
                "gtk_widget_set_tooltip_text", 
                "strstr", 
                "gtk_combo_box_get_type", 
                "gtk_clipboard_get_for_display", 
                "sqlite3_free", 
                "g_value_set_enum", 
                "gtk_cell_renderer_toggle_new", 
                "g_signal_connect_data", 
                "g_get_system_config_dirs", 
                "gtk_message_dialog_set_image", 
                "g_value_set_boxed", 
                "gtk_widget_realize", 
                "webkit_cookie_manager_delete_all_cookies", 
                "gtk_button_get_label", 
                "gtk_window_get_type", 
                "g_error_matches", 
                "gtk_tree_view_scroll_to_cell", 
                "gtk_spin_button_set_increments", 
                "gtk_menu_item_get_submenu", 
                "gdk_pixbuf_get_from_surface", 
                "gtk_overlay_add_overlay", 
                "g_content_type_guess", 
                "g_str_has_suffix", 
                "g_list_first", 
                "gtk_target_table_new_from_list", 
                "gtk_label_get_label", 
                "gtk_stack_get_type", 
                "g_list_remove", 
                "g_object_thaw_notify", 
                "gtk_tool_button_new_from_stock", 
                "gtk_font_chooser_get_type", 
                "g_ascii_dtostr", 
                "gtk_cell_layout_clear", 
                "gtk_tree_view_set_reorderable", 
                "g_type_free_instance", 
                "g_hash_table_new", 
                "XGetWindowProperty", 
                "gtk_window_set_type_hint", 
                "gtk_tool_button_get_label", 
                "gtk_notebook_page_num", 
                "sqlite3_bind_double", 
                "gtk_widget_get_style_context", 
                "gtk_notebook_set_tab_detachable", 
                "g_test_log_set_fatal_handler", 
                "g_date_time_get_year", 
                "gtk_tree_view_expand_row", 
                "g_cclosure_marshal_VOID__OBJECT", 
                "g_type_class_peek", 
                "webkit_web_view_get_find_controller", 
                "gtk_scrollable_get_type", 
                "webkit_user_style_sheet_ref", 
                "gtk_window_group_add_window", 
                "_ITM_deregisterTMCloneTable", 
                "g_cclosure_marshal_VOID__INT", 
                "g_timer_new", 
                "gdk_display_get_name", 
                "g_mkdir_with_parents", 
                "gtk_window_get_transient_for", 
                "g_type_check_value", 
                "g_string_sized_new", 
                "g_ascii_xdigit_value", 
                "strcmp", 
                "g_path_is_absolute", 
                "webkit_plugin_get_path", 
                "gtk_image_menu_item_get_type", 
                "bind_textdomain_codeset", 
                "gtk_stock_lookup", 
                "g_build_filename", 
                "g_key_file_get_string", 
                "g_file_test", 
                "gcr_simple_certificate_new", 
                "webkit_web_view_get_tls_info", 
                "gtk_vpaned_new", 
                "webkit_back_forward_list_get_forward_item", 
                "gtk_icon_info_load_icon", 
                "g_timer_destroy", 
                "gtk_editable_insert_text", 
                "gtk_print_settings_new", 
                "gtk_window_get_size", 
                "g_value_get_object", 
                "g_type_create_instance", 
                "XScreenSaverQueryInfo", 
                "gtk_event_box_set_visible_window", 
                "gtk_list_store_set", 
                "gtk_menu_shell_insert", 
                "strlen", 
                "g_key_file_load_from_file", 
                "g_ascii_strtoull", 
                "g_unichar_iscntrl", 
                "g_io_channel_new_file", 
                "gtk_shadow_type_get_type", 
                "g_network_address_parse_uri", 
                "gtk_get_minor_version", 
                "xmlParseFile", 
                "webkit_plugin_get_description", 
                "g_value_get_int", 
                "gdk_event_free", 
                "mkdir", 
                "gtk_dialog_get_action_area", 
                "g_get_current_dir", 
                "g_type_add_interface_static", 
                "g_list_reverse", 
                "gtk_radio_action_new", 
                "gtk_tree_model_iter_nth_child", 
                "gtk_container_get_children", 
                "gtk_clipboard_get_owner", 
                "g_spawn_sync", 
                "gtk_text_view_get_type", 
                "g_hash_table_foreach", 
                "g_notification_set_body", 
                "gtk_tree_model_iter_next", 
                "gtk_action_group_add_action", 
                "g_shell_parse_argv", 
                "g_get_user_special_dir", 
                "g_list_index", 
                "sqlite3_column_int64", 
                "gtk_notebook_set_tab_reorderable", 
                "g_hash_table_contains", 
                "gtk_target_list_add_uri_targets", 
                "gtk_tree_sortable_set_sort_func", 
                "webkit_user_style_sheet_unref", 
                "gtk_tree_store_insert_with_values", 
                "g_type_class_ref", 
                "g_file_query_exists", 
                "cairo_image_surface_get_width", 
                "g_shell_quote", 
                "gtk_separator_menu_item_get_type", 
                "gtk_menu_shell_select_first", 
                "g_ascii_strtoll", 
                "gtk_get_major_version", 
                "gtk_container_set_focus_child", 
                "webkit_uri_scheme_request_get_web_view", 
                "g_cancellable_cancel", 
                "gtk_file_filter_new", 
                "g_type_is_a", 
                "soup_auth_get_host", 
                "g_type_name", 
                "webkit_web_view_get_main_resource", 
                "gtk_toggle_action_get_type", 
                "webkit_context_menu_item_new_separator", 
                "g_strchomp", 
                "gtk_tree_view_column_set_cell_data_func", 
                "gtk_bin_get_type", 
                "__stack_chk_fail", 
                "g_value_type_compatible", 
                "gtk_box_new", 
                "pango_attr_list_ref", 
                "gtk_get_micro_version", 
                "webkit_favicon_database_get_favicon_finish", 
                "g_spawn_command_line_async", 
                "gtk_container_set_border_width", 
                "g_network_monitor_get_network_available", 
                "gtk_scrolled_window_set_shadow_type", 
                "pango_font_family_is_monospace", 
                "gtk_tree_model_iter_has_child", 
                "gtk_toolbar_get_type", 
                "gdk_pixbuf_get_width", 
                "gtk_file_chooser_get_current_folder", 
                "gtk_get_current_event_time", 
                "webkit_web_view_get_type", 
                "webkit_settings_set_zoom_text_only", 
                "gdk_window_get_state", 
                "g_memory_input_stream_new_from_data", 
                "sqlite3_bind_text", 
                "gtk_widget_queue_draw", 
                "strtol", 
                "webkit_back_forward_list_get_back_item", 
                "webkit_web_resource_get_type", 
                "gtk_image_menu_item_new_with_mnemonic", 
                "g_object_set_data_full", 
                "webkit_settings_get_zoom_text_only", 
                "gtk_entry_get_current_icon_drag_source", 
                "gtk_check_button_new_with_mnemonic", 
                "gtk_widget_get_window", 
                "gtk_widget_render_icon", 
                "g_log", 
                "gtk_settings_get_default", 
                "g_main_context_ref", 
                "g_timeout_add_full", 
                "g_value_set_object", 
                "gtk_orientable_set_orientation", 
                "gtk_file_chooser_set_current_folder", 
                "g_type_fundamental_next", 
                "g_value_get_boxed", 
                "webkit_navigation_policy_decision_get_type", 
                "webkit_download_get_response", 
                "g_list_length", 
                "gtk_action_get_label", 
                "g_hash_table_insert", 
                "gtk_font_button_set_show_size", 
                "gtk_toolbar_insert", 
                "gtk_tool_button_get_type", 
                "gtk_toggle_tool_button_new_from_stock", 
                "g_themed_icon_new", 
                "g_content_type_from_mime_type", 
                "gdk_pixbuf_save", 
                "strchr", 
                "webkit_web_view_stop_loading", 
                "webkit_web_view_can_go_back", 
                "gtk_drag_dest_add_uri_targets", 
                "gtk_window_set_default_size", 
                "gtk_css_provider_load_from_path", 
                "g_type_class_add_private", 
                "gtk_tree_view_set_hover_selection", 
                "gdk_pixbuf_get_type", 
                "g_memdup", 
                "gtk_widget_get_halign", 
                "webkit_context_menu_item_new", 
                "gtk_window_list_toplevels", 
                "gtk_container_add", 
                "gtk_file_chooser_add_filter", 
                "g_hash_table_destroy", 
                "gtk_scrolled_window_set_min_content_height", 
                "g_strjoinv", 
                "gtk_box_pack_end", 
                "g_object_disconnect", 
                "gtk_check_button_new", 
                "g_date_new", 
                "gtk_window_fullscreen", 
                "g_printerr", 
                "gtk_widget_get_default_direction", 
                "gtk_cell_renderer_text_new", 
                "gtk_tree_store_new", 
                "gtk_icon_theme_has_icon", 
                "gtk_bin_get_child", 
                "gtk_get_default_language", 
                "gtk_box_get_type", 
                "g_strdup_printf", 
                "g_strchug", 
                "gtk_widget_get_screen", 
                "g_application_activate", 
                "gtk_adjustment_set_value", 
                "gtk_combo_box_get_active_iter", 
                "gtk_statusbar_get_message_area", 
                "gtk_toggle_action_get_active", 
                "gtk_entry_set_activates_default", 
                "gtk_editable_get_chars", 
                "gtk_print_settings_set", 
                "gtk_text_view_get_editable", 
                "gdk_set_program_class", 
                "gtk_toggle_tool_button_new", 
                "gtk_file_chooser_set_current_name", 
                "XFree", 
                "g_signal_new", 
                "g_utf8_validate", 
                "cairo_image_surface_get_height", 
                "gtk_info_bar_add_button", 
                "gtk_hbox_get_type", 
                "webkit_favicon_database_get_favicon_uri", 
                "g_signal_stop_emission_by_name", 
                "gtk_widget_get_toplevel", 
                "gtk_icon_theme_get_for_screen", 
                "g_key_file_set_double", 
                "gtk_show_uri", 
                "webkit_download_get_elapsed_time", 
                "webkit_web_context_set_spell_checking_enabled", 
                "webkit_web_view_go_forward", 
                "g_module_supported", 
                "gtk_window_unfullscreen", 
                "webkit_user_content_manager_add_style_sheet", 
                "g_strdelimit", 
                "g_list_append", 
                "gtk_tree_path_new_first", 
                "gtk_statusbar_pop", 
                "gtk_tree_view_get_column", 
                "g_object_freeze_notify", 
                "g_utf8_casefold", 
                "g_object_unref", 
                "gdk_pixbuf_save_to_buffer", 
                "gtk_action_set_visible", 
                "g_string_new", 
                "gtk_icon_size_lookup_for_settings", 
                "g_main_context_wakeup", 
                "gtk_style_context_add_provider_for_screen", 
                "gtk_tree_view_collapse_row", 
                "gtk_toggle_tool_button_set_active", 
                "gtk_action_get_icon_name", 
                "xmlGetProp", 
                "gtk_tree_store_clear", 
                "g_signal_emit", 
                "gtk_tool_button_new", 
                "gtk_header_bar_new", 
                "gtk_settings_get_for_screen", 
                "gtk_tree_model_get_type", 
                "g_propagate_error", 
                "g_hostname_is_ip_address", 
                "webkit_web_context_get_default", 
                "g_io_channel_unref", 
                "gtk_widget_set_name", 
                "webkit_download_get_estimated_progress", 
                "gtk_cell_layout_set_attributes", 
                "gdk_get_program_class", 
                "g_string_insert_c", 
                "gtk_frame_get_shadow_type", 
                "gtk_tool_item_set_use_drag_window", 
                "g_idle_add", 
                "soup_session_remove_feature_by_type", 
                "cairo_version_string", 
                "g_get_home_dir", 
                "gtk_activatable_get_type", 
                "gtk_misc_get_type", 
                "g_utf8_strlen", 
                "gtk_window_set_opacity", 
                "webkit_favicon_database_clear", 
                "gtk_entry_set_icon_from_icon_name", 
                "g_value_get_pointer", 
                "g_object_class_list_properties", 
                "g_strsplit", 
                "gtk_image_set_from_icon_name", 
                "sqlite3_column_text", 
                "g_base64_decode", 
                "gtk_accelerator_name", 
                "webkit_uri_response_get_suggested_filename", 
                "gtk_list_store_swap", 
                "g_type_check_instance_is_a", 
                "gtk_image_get_type", 
                "gtk_icon_factory_add_default", 
                "g_simple_async_result_complete", 
                "g_filename_from_uri", 
                "gtk_tool_item_set_tooltip_text", 
                "gtk_header_bar_get_type", 
                "g_value_set_uint", 
                "g_type_register_static_simple", 
                "gtk_list_store_insert_with_values", 
                "gtk_accel_group_activate", 
                "g_type_class_unref", 
                "fgets", 
                "g_io_extension_point_get_extensions", 
                "g_utf8_get_char", 
                "g_object_get_property", 
                "webkit_user_content_manager_new", 
                "webkit_user_content_manager_remove_all_style_sheets", 
                "gtk_file_filter_add_pattern", 
                "gtk_label_set_text_with_mnemonic", 
                "gtk_font_chooser_set_font", 
                "gtk_action_set_accel_group", 
                "webkit_policy_decision_ignore", 
                "gtk_accel_label_set_accel_closure", 
                "g_strsplit_set", 
                "g_get_user_data_dir", 
                "webkit_policy_decision_download", 
                "g_list_delete_link", 
                "gtk_action_get_gicon", 
                "gtk_container_get_type", 
                "gtk_file_filter_set_name", 
                "gtk_tree_model_get_iter", 
                "gtk_toggle_button_set_mode", 
                "g_key_file_get_string_list", 
                "g_path_get_basename", 
                "gtk_widget_get_allocated_height", 
                "g_simple_async_result_get_op_res_gpointer", 
                "g_signal_handlers_destroy", 
                "gtk_image_set_from_gicon", 
                "soup_auth_get_realm", 
                "gtk_action_set_sensitive", 
                "gtk_widget_show_all", 
                "gtk_accel_group_query", 
                "webkit_response_policy_decision_get_type", 
                "getpid", 
                "gtk_alignment_set_padding", 
                "g_value_take_object", 
                "gtk_action_group_get_type", 
                "g_value_unset", 
                "gtk_ui_manager_add_ui_from_string", 
                "gtk_toolbar_new", 
                "g_hostname_to_unicode", 
                "g_object_bind_property_with_closures", 
                "gtk_accel_map_lookup_entry", 
                "pango_parse_markup", 
                "JSEvaluateScript", 
                "webkit_uri_response_get_uri", 
                "gtk_toggle_button_get_type", 
                "g_strv_get_type", 
                "g_malloc0", 
                "webkit_user_style_sheet_new", 
                "textdomain", 
                "webkit_uri_response_get_mime_type", 
                "gtk_window_maximize", 
                "gtk_entry_set_input_purpose", 
                "gtk_tool_button_set_label", 
                "gtk_tree_model_foreach", 
                "g_param_spec_int64", 
                "g_format_size_full", 
                "g_unlink", 
                "g_hash_table_remove", 
                "webkit_web_context_set_web_extensions_directory", 
                "sqlite3_bind_parameter_index", 
                "webkit_favicon_database_get_favicon", 
                "webkit_response_policy_decision_get_response", 
                "sqlite3_clear_bindings", 
                "g_value_get_uint", 
                "gtk_combo_box_set_active", 
                "gtk_action_get_stock_id", 
                "g_strrstr", 
                "gtk_stack_add_titled", 
                "gtk_alignment_get_type", 
                "gtk_entry_set_placeholder_text", 
                "gtk_header_bar_pack_end", 
                "gtk_menu_shell_append", 
                "sqlite3_column_double", 
                "g_list_find", 
                "gtk_paned_pack1", 
                "g_notification_set_icon", 
                "gtk_window_activate_key", 
                "gtk_dialog_run", 
                "gtk_icon_set_new", 
                "g_error_new_literal", 
                "webkit_back_forward_list_item_get_uri", 
                "g_type_register_fundamental", 
                "g_type_register_static", 
                "gtk_tool_item_set_expand", 
                "g_string_free", 
                "g_file_get_parent", 
                "webkit_web_context_get_spell_checking_enabled", 
                "gtk_clipboard_set_text", 
                "gtk_cell_renderer_text_get_type", 
                "g_value_set_int64", 
                "gtk_size_group_new", 
                "gtk_action_group_remove_action", 
                "gtk_tool_item_get_type", 
                "gtk_entry_set_icon_tooltip_text", 
                "webkit_context_menu_new", 
                "webkit_web_context_clear_cache", 
                "webkit_settings_get_type", 
                "g_slice_alloc0", 
                "g_tls_certificate_get_issuer", 
                "strncasecmp", 
                "g_hash_table_remove_all", 
                "webkit_hit_test_result_get_link_uri", 
                "gtk_icon_source_new", 
                "g_string_append_printf", 
                "gdk_window_get_origin", 
                "g_type_class_peek_parent", 
                "gtk_image_menu_item_set_always_show_image", 
                "gtk_misc_set_padding", 
                "gtk_info_bar_new", 
                "gtk_scrolled_window_get_vadjustment", 
                "webkit_web_view_get_window_properties", 
                "gtk_tree_view_get_type", 
                "gtk_cell_layout_pack_start", 
                "g_list_free_full", 
                "gtk_entry_get_placeholder_text", 
                "gtk_frame_set_label_widget", 
                "g_signal_has_handler_pending", 
                "webkit_user_content_manager_get_type", 
                "gtk_label_set_max_width_chars", 
                "gdk_device_grab", 
                "gtk_image_menu_item_new_from_stock", 
                "gtk_window_set_screen", 
                "g_file_new_for_uri", 
                "g_spawn_async", 
                "webkit_web_view_get_context", 
                "gtk_toggle_button_set_active", 
                "g_key_file_get_integer", 
                "gtk_icon_size_register", 
                "g_dir_make_tmp", 
                "g_signal_accumulator_true_handled", 
                "gtk_font_button_new", 
                "gtk_widget_get_parent", 
                "gtk_tree_selection_get_selected", 
                "g_simple_async_result_set_op_res_gpointer", 
                "g_dir_close", 
                "gtk_tree_sortable_get_type", 
                "g_file_get_contents", 
                "g_string_append", 
                "gtk_tool_button_set_stock_id", 
                "webkit_hit_test_result_context_is_link", 
                "gdk_event_get_type", 
                "g_error_copy", 
                "gdk_screen_get_default", 
                "gcr_trust_add_pinned_certificate", 
                "g_object_ref_sink", 
                "gtk_tree_store_remove", 
                "g_main_context_default", 
                "webkit_web_view_save_to_file", 
                "gtk_dialog_get_type", 
                "webkit_web_view_set_settings", 
                "gtk_menu_get_attach_widget", 
                "g_file_get_uri", 
                "g_regex_get_pattern", 
                "gtk_tree_view_get_path_at_pos", 
                "g_application_get_is_registered", 
                "sqlite3_close", 
                "gtk_widget_get_preferred_size", 
                "gtk_scrolled_window_get_type", 
                "gtk_accelerator_get_default_mod_mask", 
                "gtk_popover_new", 
                "gtk_dialog_new_with_buttons", 
                "g_type_check_class_cast", 
                "g_date_time_new_now_local", 
                "gtk_window_get_group", 
                "gtk_file_chooser_set_action", 
                "gtk_window_get_screen", 
                "webkit_policy_decision_use", 
                "gtk_widget_get_mapped", 
                "gtk_css_provider_new", 
                "g_object_ref", 
                "gtk_drag_finish", 
                "gdk_pixbuf_scale_simple", 
                "gtk_widget_get_clipboard", 
                "gtk_icon_factory_new", 
                "g_hostname_to_ascii", 
                "webkit_download_get_destination", 
                "gtk_menu_get_type", 
                "gtk_action_get_proxies", 
                "gtk_hbox_new", 
                "gtk_font_chooser_set_filter_func", 
                "g_get_tmp_dir", 
                "sqlite3_reset", 
                "g_themed_icon_new_from_names", 
                "cairo_surface_reference", 
                "pango_attr_list_unref", 
                "gtk_window_set_resizable", 
                "gtk_statusbar_get_type", 
                "gdk_keyval_to_unicode", 
                "g_get_user_name", 
                "webkit_web_context_prefetch_dns", 
                "gtk_targets_include_text", 
                "gtk_button_new", 
                "gtk_tool_button_set_icon_widget", 
                "g_value_set_double", 
                "gdk_x11_display_get_xdisplay", 
                "gtk_widget_get_display", 
                "g_hash_table_lookup", 
                "soup_auth_authenticate", 
                "gtk_misc_set_alignment", 
                "gtk_toolbar_set_style", 
                "g_stpcpy", 
                "signal", 
                "gtk_paned_get_type", 
                "gtk_editable_set_position", 
                "webkit_web_resource_get_data", 
                "gtk_toggle_tool_button_get_type", 
                "g_signal_connect_object", 
                "webkit_web_context_set_preferred_languages", 
                "g_value_dup_object", 
                "g_param_spec_string", 
                "g_utf8_strdown", 
                "gtk_paned_pack2", 
                "gtk_window_set_icon", 
                "g_get_user_cache_dir", 
                "gtk_notebook_get_nth_page", 
                "gtk_tree_model_get", 
                "gtk_icon_size_lookup", 
                "g_quark_from_static_string", 
                "gtk_notebook_get_tab_label", 
                "gtk_stock_add_static", 
                "g_direct_hash", 
                "gtk_hseparator_new", 
                "g_log_set_handler", 
                "gtk_file_chooser_set_uri", 
                "g_source_remove", 
                "g_network_monitor_get_default", 
                "g_strstr_len", 
                "gtk_action_create_tool_item", 
                "webkit_web_view_reload_bypass_cache", 
                "g_enum_register_static", 
                "g_value_init", 
                "webkit_print_operation_new", 
                "gtk_entry_set_icon_from_gicon", 
                "webkit_context_menu_append", 
                "g_signal_lookup", 
                "gtk_text_buffer_get_has_selection", 
                "gtk_label_get_type", 
                "gtk_window_deiconify", 
                "g_markup_escape_text", 
                "g_main_context_pending", 
                "g_key_file_set_boolean", 
                "g_io_channel_shutdown", 
                "gtk_clipboard_set_with_owner", 
                "gtk_scrolled_window_set_min_content_width", 
                "g_object_notify", 
                "gtk_header_bar_set_custom_title", 
                "g_malloc_n", 
                "g_clear_error", 
                "g_date_time_unref", 
                "g_get_language_names", 
                "gtk_container_forall", 
                "g_key_file_to_data", 
                "webkit_web_context_set_process_model", 
                "webkit_web_view_can_go_forward", 
                "gtk_tree_view_column_set_fixed_width", 
                "g_closure_unref", 
                "webkit_download_get_received_data_length", 
                "gtk_widget_get_settings", 
                "g_date_free", 
                "gtk_button_set_label", 
                "pango_cairo_show_error_underline", 
                "g_type_interface_peek", 
                "gtk_stack_switcher_get_type", 
                "gtk_dialog_response", 
                "gtk_widget_set_can_focus", 
                "g_list_prepend", 
                "gdk_event_new", 
                "gtk_window_add_accel_group", 
                "gtk_widget_is_ancestor", 
                "gtk_message_dialog_format_secondary_text", 
                "gdk_x11_display_get_type", 
                "g_idle_add_full", 
                "gtk_stack_switcher_set_stack", 
                "g_value_set_pointer", 
                "gdk_device_get_associated_device", 
                "gtk_popover_set_pointing_to", 
                "gtk_widget_destroyed", 
                "webkit_web_context_allow_tls_certificate_for_host", 
                "gtk_ui_manager_get_accel_group", 
                "gtk_tree_path_free", 
                "g_type_check_value_holds", 
                "gtk_window_set_title", 
                "gtk_label_set_text", 
                "JSGlobalContextRelease", 
                "g_param_spec_gtype", 
                "gcr_certificate_get_der_data", 
                "g_regex_unref", 
                "g_quark_from_string", 
                "gtk_activatable_set_related_action", 
                "g_print", 
                "gtk_style_context_add_class", 
                "gtk_action_group_add_action_with_accel", 
                "gtk_notebook_get_n_pages", 
                "gtk_notebook_set_current_page", 
                "g_file_error_quark", 
                "gtk_editable_get_editable", 
                "exit", 
                "g_list_nth_data", 
                "g_simple_async_result_set_from_error", 
                "gtk_tree_model_get_iter_from_string", 
                "gtk_header_bar_set_show_close_button", 
                "g_file_replace_finish", 
                "gtk_editable_get_type", 
                "g_value_get_double", 
                "gtk_window_set_icon_name", 
                "gtk_widget_get_type", 
                "__gmon_start__", 
                "gtk_image_new_from_gicon", 
                "gcr_pkcs11_get_trust_lookup_uris", 
                "gtk_frame_new", 
                "g_regex_new", 
                "__printf_chk", 
                "JSValueToStringCopy", 
                "g_key_file_set_string_list", 
                "g_output_stream_splice_async", 
                "gtk_tree_model_get_path", 
                "bindtextdomain", 
                "webkit_web_view_get_title", 
                "__fprintf_chk", 
                "gtk_menu_item_new_with_label", 
                "time", 
                "gtk_menu_shell_get_type", 
                "gtk_spin_button_new_with_range", 
                "g_value_set_boolean", 
                "g_io_channel_read_line", 
                "g_path_get_dirname", 
                "g_find_program_in_path", 
                "gtk_viewport_get_type", 
                "g_value_set_int", 
                "webkit_plugin_get_name", 
                "webkit_web_view_load_uri", 
                "gtk_tree_view_append_column", 
                "gtk_drag_dest_add_text_targets", 
                "g_file_get_basename", 
                "g_cclosure_marshal_VOID__STRING", 
                "gtk_container_remove", 
                "gtk_entry_set_icon_from_pixbuf", 
                "webkit_web_view_get_zoom_level", 
                "gtk_label_set_ellipsize", 
                "g_value_peek_pointer", 
                "g_key_file_has_group", 
                "g_int64_hash", 
                "g_signal_handlers_unblock_matched", 
                "webkit_get_major_version", 
                "g_uri_escape_string", 
                "g_regex_escape_string", 
                "gtk_get_event_widget", 
                "g_application_send_notification", 
                "g_key_file_load_from_data", 
                "soup_session_unpause_message", 
                "g_value_get_float", 
                "gtk_icon_set_unref", 
                "g_filename_to_uri", 
                "g_file_replace_async", 
                "gtk_stack_new", 
                "gtk_ui_manager_new", 
                "gtk_tree_view_set_tooltip_column", 
                "gtk_entry_set_text", 
                "g_value_get_int64", 
                "webkit_web_context_get_favicon_database", 
                "memchr", 
                "JSContextGetGlobalObject", 
                "gtk_paned_set_position", 
                "webkit_uri_scheme_request_get_uri", 
                "gtk_info_bar_get_content_area", 
                "g_param_spec_enum", 
                "g_module_open", 
                "g_signal_handlers_block_matched", 
                "gtk_text_buffer_delete_selection", 
                "gtk_info_bar_get_action_area", 
                "gtk_combo_box_new_with_model", 
                "gtk_tree_view_get_selection", 
                "gtk_dialog_add_buttons", 
                "gtk_entry_set_icon_drag_source", 
                "gtk_widget_modify_fg", 
                "gtk_editable_delete_selection", 
                "g_uri_parse_scheme", 
                "gtk_widget_create_pango_layout", 
                "g_type_parent", 
                "gtk_widget_destroy", 
                "sqlite3_column_name", 
                "g_hash_table_lookup_extended", 
                "g_warn_message", 
                "g_cclosure_marshal_VOID__VOID", 
                "g_intern_string", 
                "gtk_toggle_action_new", 
                "gtk_image_menu_item_new", 
                "gtk_widget_get_visible", 
                "gtk_widget_get_ancestor", 
                "gtk_target_list_add_text_targets", 
                "gtk_image_menu_item_set_image", 
                "gtk_info_bar_get_type", 
                "gtk_toolbar_set_show_arrow", 
                "gtk_combo_box_text_append_text", 
                "g_regex_error_quark", 
                "g_hash_table_iter_init", 
                "webkit_web_view_download_uri", 
                "g_type_class_peek_static", 
                "soup_session_feature_get_type", 
                "gtk_list_store_remove", 
                "g_value_set_string", 
                "g_type_check_instance_cast", 
                "gtk_widget_modify_bg", 
                "gtk_tree_view_column_set_expand", 
                "gtk_target_list_new", 
                "webkit_web_context_register_uri_scheme", 
                "gtk_get_current_event_device", 
                "gtk_cell_renderer_get_type", 
                "g_hash_table_new_full", 
                "gtk_image_set_from_pixbuf", 
                "gtk_box_reorder_child", 
                "gdk_window_get_pointer", 
                "g_application_get_type", 
                "g_object_connect", 
                "gtk_window_set_destroy_with_parent", 
                "gtk_font_button_get_type", 
                "webkit_web_resource_get_data_finish", 
                "g_date_time_get_day_of_month", 
                "gtk_widget_set_sensitive", 
                "gtk_list_store_append", 
                "gtk_menu_new", 
                "chmod", 
                "gtk_entry_get_text", 
                "gtk_statusbar_push", 
                "g_hash_table_unref", 
                "g_type_interface_peek_parent", 
                "gtk_notebook_set_show_tabs", 
                "gdk_screen_get_monitor_geometry", 
                "g_str_hash", 
                "gdk_display_get_default", 
                "gtk_about_dialog_new", 
                "gtk_widget_get_realized", 
                "gtk_scrolled_window_get_vscrollbar", 
                "gtk_accel_map_load", 
                "soup_tld_get_base_domain", 
                "gtk_window_set_role", 
                "g_value_get_gtype", 
                "XScreenSaverAllocInfo", 
                "g_malloc", 
                "g_slice_alloc", 
                "g_content_type_get_mime_type", 
                "gtk_radio_action_get_group", 
                "webkit_navigation_policy_decision_get_request", 
                "gtk_window_get_focus", 
                "gtk_stack_switcher_new", 
                "JSStringRelease", 
                "webkit_print_operation_print", 
                "gtk_scrolled_window_set_policy", 
                "gtk_statusbar_new", 
                "g_param_spec_object", 
                "gtk_tree_view_row_expanded", 
                "g_slist_nth_data", 
                "g_get_user_config_dir", 
                "JSStringCreateWithUTF8CString", 
                "webkit_get_micro_version", 
                "g_key_file_has_key", 
                "gtk_accel_groups_from_object", 
                "gtk_tree_store_get_type", 
                "g_enum_get_value", 
                "gtk_tool_button_set_label_widget", 
                "xmlDocGetRootElement", 
                "gtk_action_set_gicon", 
                "sqlite3_prepare_v2", 
                "gtk_accel_map_save", 
                "gtk_button_new_from_stock", 
                "gtk_paned_get_position", 
                "gtk_tree_model_get_value", 
                "gtk_icon_set_add_source", 
                "g_key_file_set_integer", 
                "gtk_entry_set_visibility", 
                "g_param_spec_int", 
                "gtk_message_dialog_get_type", 
                "JSStringGetUTF8CString", 
                "g_byte_array_unref", 
                "gtk_entry_set_width_chars", 
                "g_key_file_free", 
                "g_param_spec_pointer", 
                "g_list_insert", 
                "g_file_read_link", 
                "sqlite3_errmsg", 
                "gtk_entry_get_icon_gicon", 
                "g_slice_free1", 
                "gtk_selection_data_get_target", 
                "gtk_window_set_titlebar", 
                "gtk_accel_map_get", 
                "gtk_action_get_name", 
                "gtk_box_pack_start", 
                "gtk_widget_size_request", 
                "g_malloc0_n", 
                "gtk_tree_model_iter_children", 
                "webkit_hit_test_result_get_type", 
                "sqlite3_profile", 
                "g_initially_unowned_get_type", 
                "g_unichar_to_utf8", 
                "g_date_time_new_from_unix_local", 
                "gtk_file_chooser_set_do_overwrite_confirmation", 
                "gtk_window_set_attached_to", 
                "gtk_icon_theme_append_search_path", 
                "gtk_widget_has_focus", 
                "gtk_accel_group_connect_by_path", 
                "gtk_image_new_from_icon_name", 
                "g_list_free", 
                "g_object_new", 
                "g_type_check_instance_is_fundamentally_a", 
                "gtk_overlay_get_type", 
                "sqlite3_changes", 
                "gtk_spinner_new", 
                "g_value_set_float", 
                "gtk_list_store_new", 
                "g_object_get_data", 
                "gtk_notebook_reorder_child", 
                "g_type_from_name", 
                "g_type_instance_get_private", 
                "gtk_vbox_new", 
                "gtk_window_iconify", 
                "webkit_uri_scheme_request_finish", 
                "strncmp", 
                "rename", 
                "gtk_alignment_new", 
                "gtk_tree_view_set_headers_visible", 
                "gtk_icon_info_free", 
                "gtk_style_provider_get_type", 
                "g_param_spec_internal", 
                "gtk_notebook_set_scrollable", 
                "gtk_widget_set_hexpand", 
                "gtk_dialog_get_content_area", 
                "gdk_screen_get_monitor_at_window", 
                "g_io_extension_point_lookup", 
                "gtk_window_set_transient_for", 
                "gtk_button_set_image", 
                "webkit_web_context_get_type", 
                "gtk_widget_set_valign", 
                "sqlite3_finalize", 
                "g_once_init_enter", 
                "g_type_class_adjust_private_offset", 
                "g_file_set_contents", 
                "gtk_tool_item_set_proxy_menu_item", 
                "gtk_widget_set_size_request", 
                "g_return_if_fail_warning", 
                "gtk_selection_data_set_text", 
                "_ITM_registerTMCloneTable", 
                "gtk_icon_theme_choose_icon_for_scale", 
                "gtk_info_bar_set_message_type", 
                "g_param_spec_float", 
                "g_key_file_get_keys", 
                "gtk_event_box_new", 
                "fclose", 
                "g_object_set", 
                "g_timer_elapsed", 
                "gtk_tree_view_new_with_model", 
                "g_hash_table_get_keys", 
                "g_simple_async_result_get_type", 
                "dcngettext", 
                "gtk_event_box_get_type", 
                "gtk_scrolled_window_new", 
                "gtk_message_dialog_new", 
                "gtk_button_new_with_mnemonic", 
                "g_notification_new", 
                "g_key_file_error_quark", 
                "gdk_x11_get_xatom_by_name_for_display", 
                "gtk_dialog_get_widget_for_response", 
                "g_strescape", 
                "g_base64_encode", 
                "gtk_file_chooser_set_filename", 
                "webkit_web_view_can_show_mime_type", 
                "gtk_spin_button_get_value", 
                "g_enum_get_value_by_name", 
                "gtk_separator_menu_item_new", 
                "gtk_icon_theme_get_default", 
                "sqlite3_bind_int64", 
                "remove", 
                "g_utf8_strchr", 
                "gtk_window_get_icon_name", 
                "gtk_menu_item_set_submenu", 
                "gtk_label_set_markup", 
                "g_value_get_boolean", 
                "g_get_application_name", 
                "gtk_separator_tool_item_new", 
                "webkit_get_minor_version", 
                "gtk_tree_view_column_get_type", 
                "gtk_scrolled_window_get_hadjustment", 
                "gtk_widget_set_focus_on_click", 
                "gtk_vbox_get_type", 
                "soup_auth_get_scheme_name", 
                "g_error_free", 
                "gtk_target_table_free", 
                "webkit_web_view_can_execute_editing_command_finish", 
                "gtk_button_get_type", 
                "g_dgettext", 
                "gtk_separator_tool_item_set_draw", 
                "pango_attr_list_get_type", 
                "gtk_combo_box_set_active_iter", 
                "g_param_spec_get_nick", 
                "webkit_print_operation_set_print_settings", 
                "webkit_cookie_manager_set_accept_policy", 
                "gtk_toolbar_set_icon_size", 
                "gtk_entry_set_progress_fraction", 
                "g_value_get_enum", 
                "g_setenv", 
                "gtk_cell_view_get_type", 
                "gtk_widget_style_get", 
                "g_dir_read_name", 
                "gtk_notebook_remove_page", 
                "g_param_spec_double", 
                "g_initable_get_type", 
                "g_hash_table_iter_next", 
                "gtk_widget_reparent", 
                "g_value_dup_string", 
                "gtk_text_view_get_buffer", 
                "webkit_context_menu_remove_all", 
                "gtk_tree_path_get_type", 
                "gtk_tree_path_prev", 
                "g_themed_icon_get_type", 
                "g_cclosure_new", 
                "gtk_entry_get_icon_tooltip_text", 
                "webkit_print_operation_run_dialog", 
                "g_key_file_get_double", 
                "webkit_web_context_set_tls_errors_policy", 
                "webkit_web_view_set_zoom_level", 
                "gtk_widget_show", 
                "gtk_box_set_spacing", 
                "gtk_target_list_add_image_targets", 
                "g_date_set_time_t", 
                "g_getenv", 
                "g_str_has_prefix", 
                "cairo_surface_destroy", 
                "gtk_widget_set_no_show_all", 
                "gtk_widget_get_allocation", 
                "gtk_entry_set_icon_activatable", 
                "gtk_spin_button_get_value_as_int", 
                "g_strcmp0", 
                "gtk_size_group_add_widget", 
                "gtk_window_present", 
                "webkit_web_view_get_favicon", 
                "gtk_widget_hide", 
                "gtk_targets_include_image", 
                "g_strdup", 
                "g_ascii_strcasecmp", 
                "g_list_copy", 
                "sqlite3_step", 
                "gtk_menu_attach_to_widget", 
                "gtk_action_get_accel_path", 
                "gtk_dialog_set_response_sensitive", 
                "gtk_widget_grab_focus", 
                "g_date_time_get_day_of_year", 
                "g_timeout_add_seconds_full"
            ], 
            "rpm": "midori-0.5.12-0.2.fc26.x86_64.rpm"
        }, 
        "usr/lib64/midori/libnotes_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/midori/libnotes.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "midori_app_get_browsers", 
                "midori_app_get_type", 
                "g_list_foreach", 
                "g_list_append", 
                "gtk_tree_path_new_from_string", 
                "midori_view_set_uri", 
                "midori_database_new", 
                "g_list_free", 
                "midori_database_get_db", 
                "g_str_has_prefix", 
                "g_assertion_message_expr", 
                "g_once_init_leave", 
                "katze_widget_popup", 
                "gtk_tree_view_append_column", 
                "g_regex_new", 
                "gtk_menu_shell_append", 
                "g_regex_escape_string", 
                "gtk_list_store_remove", 
                "g_type_class_add_private", 
                "g_type_class_peek_parent", 
                "g_build_path", 
                "g_markup_printf_escaped", 
                "gtk_tool_button_new_from_stock", 
                "midori_browser_get_current_tab", 
                "gtk_image_menu_item_set_image", 
                "g_value_set_string", 
                "g_return_if_fail_warning", 
                "gtk_widget_get_settings", 
                "gtk_tree_view_column_new", 
                "_ITM_deregisterTMCloneTable", 
                "gtk_widget_show", 
                "midori_view_has_selection", 
                "midori_extension_get_type", 
                "g_signal_parse_name", 
                "g_type_check_instance_is_a", 
                "gtk_toolbar_insert", 
                "gtk_clipboard_set_text", 
                "g_object_set", 
                "gtk_label_new", 
                "g_dgettext", 
                "g_error_free", 
                "midori_browser_add_uri", 
                "gtk_text_view_set_wrap_mode", 
                "midori_browser_get_for_widget", 
                "midori_database_prepare", 
                "_ITM_registerTMCloneTable", 
                "gtk_image_menu_item_new_with_label", 
                "gtk_tree_view_get_selection", 
                "gtk_list_store_set", 
                "gtk_tree_view_get_path_at_pos", 
                "g_value_get_string", 
                "gtk_tree_model_get_iter", 
                "gtk_list_store_append", 
                "gtk_tree_model_iter_children", 
                "g_type_add_interface_static", 
                "g_value_get_int64", 
                "__cxa_finalize", 
                "gtk_widget_set_tooltip_text", 
                "g_type_register_static", 
                "g_quark_to_string", 
                "g_slice_alloc0", 
                "g_object_get", 
                "midori_database_error_quark", 
                "g_log", 
                "midori_browser_get_tabs", 
                "g_object_ref_sink", 
                "gtk_cell_renderer_pixbuf_new", 
                "gtk_cell_layout_set_cell_data_func", 
                "g_regex_replace_literal", 
                "g_signal_connect_object", 
                "g_signal_handlers_disconnect_matched", 
                "midori_view_get_type", 
                "gtk_menu_new", 
                "g_free", 
                "gtk_tool_button_set_use_underline", 
                "g_object_notify", 
                "g_type_check_class_cast", 
                "gtk_tree_selection_get_selected", 
                "gtk_widget_get_clipboard", 
                "g_date_time_new_now_local", 
                "midori_extension_get_config_dir", 
                "__gmon_start__", 
                "gtk_cell_layout_pack_start", 
                "g_clear_error", 
                "g_type_interface_peek_parent", 
                "midori_panel_append_page", 
                "midori_extension_get_app", 
                "gtk_toolbar_new", 
                "g_date_time_unref", 
                "gtk_tree_sortable_set_sort_func", 
                "gtk_tool_item_set_is_important", 
                "gtk_tree_model_get", 
                "gtk_tree_sortable_set_sort_column_id", 
                "gdk_pixbuf_scale_simple", 
                "midori_view_get_selected_text", 
                "gtk_tree_view_get_column", 
                "gtk_tree_view_get_bin_window", 
                "gtk_tool_button_set_label", 
                "g_strcmp0", 
                "g_slice_free1", 
                "gtk_action_new", 
                "midori_database_statement_get_string", 
                "gtk_widget_destroy", 
                "midori_paths_get_icon", 
                "midori_viewable_get_type", 
                "gtk_text_view_new", 
                "gtk_tree_path_free", 
                "g_type_check_instance_cast", 
                "g_signal_connect_data", 
                "midori_view_get_display_uri", 
                "gtk_tree_view_set_cursor", 
                "gtk_list_store_new", 
                "g_param_spec_int64", 
                "g_type_name", 
                "gtk_tree_view_column_set_title", 
                "gtk_cell_renderer_text_new", 
                "g_param_spec_string", 
                "g_value_set_int64", 
                "g_type_instance_get_private", 
                "g_object_new", 
                "gtk_image_menu_item_set_always_show_image", 
                "__stack_chk_fail", 
                "gtk_vbox_get_type", 
                "midori_database_statement_step", 
                "midori_view_get_display_title", 
                "gtk_tree_model_iter_next", 
                "sqlite3_last_insert_rowid", 
                "gtk_image_new_from_stock", 
                "midori_context_action_add", 
                "g_once_init_enter", 
                "gtk_tree_view_set_headers_visible", 
                "gtk_icon_size_lookup_for_settings", 
                "gtk_tree_view_new_with_model", 
                "g_regex_unref", 
                "midori_database_statement_get_int64", 
                "gtk_text_view_get_buffer", 
                "g_date_time_to_unix", 
                "g_regex_error_quark", 
                "gtk_widget_show_all", 
                "g_object_class_install_property", 
                "gtk_box_pack_start", 
                "g_object_ref"
            ], 
            "rpm": "midori-0.5.12-0.2.fc26.x86_64.rpm"
        }, 
        "usr/lib64/midori/libapps_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/midori/libapps.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "g_test_add_func", 
                "g_once_init_enter", 
                "katze_array_new", 
                "g_object_unref", 
                "midori_viewable_get_type", 
                "g_type_class_peek_parent", 
                "g_markup_printf_escaped", 
                "g_signal_emit_by_name", 
                "gtk_tree_view_set_headers_visible", 
                "midori_test_job_run_sync", 
                "g_file_get_path", 
                "g_file_copy_async", 
                "g_clear_error", 
                "g_list_free", 
                "g_simple_async_result_get_op_res_gpointer", 
                "g_initable_get_type", 
                "g_error_matches", 
                "g_signal_connect_object", 
                "g_list_append", 
                "strlen", 
                "g_simple_async_result_propagate_error", 
                "g_quark_to_string", 
                "gtk_list_store_set", 
                "gtk_list_store_append", 
                "gtk_tree_sortable_set_sort_func", 
                "g_regex_unref", 
                "gtk_box_pack_start", 
                "midori_extension_get_app", 
                "midori_view_get_display_uri", 
                "g_assertion_message_expr", 
                "g_dgettext", 
                "g_signal_handlers_disconnect_matched", 
                "g_strdelimit", 
                "gtk_tree_view_new_with_model", 
                "gtk_action_set_accel_group", 
                "g_strcmp0", 
                "g_regex_replace_literal", 
                "g_file_enumerator_next_files_finish", 
                "gtk_toolbar_insert", 
                "g_build_path", 
                "gtk_tree_view_column_set_expand", 
                "gtk_widget_show", 
                "midori_extension_get_type", 
                "g_type_check_instance_is_a", 
                "gtk_toolbar_new", 
                "g_dbus_generate_guid", 
                "gtk_widget_destroy", 
                "midori_download_clean_filename", 
                "g_spawn_command_line_async", 
                "g_slice_free1", 
                "_ITM_deregisterTMCloneTable", 
                "g_object_get", 
                "__gmon_start__", 
                "gtk_widget_get_settings", 
                "g_free", 
                "g_type_check_class_cast", 
                "g_error_free", 
                "__cxa_finalize", 
                "g_log", 
                "g_strdup_printf", 
                "g_type_check_instance_cast", 
                "g_strconcat", 
                "g_output_stream_write_finish", 
                "g_propagate_error", 
                "gtk_action_group_add_action_with_accel", 
                "gtk_action_connect_accelerator", 
                "g_slice_alloc0", 
                "g_object_new", 
                "g_file_info_get_name", 
                "g_object_set", 
                "g_file_new_for_path", 
                "gtk_tree_model_get_iter", 
                "g_initable_init", 
                "g_file_error_quark", 
                "g_once_init_leave", 
                "g_simple_async_result_set_from_error", 
                "gtk_tree_view_get_path_at_pos", 
                "g_signal_parse_name", 
                "g_file_replace_finish", 
                "midori_app_get_type", 
                "gtk_action_new", 
                "g_simple_async_result_get_type", 
                "gtk_icon_size_lookup_for_settings", 
                "gtk_tree_view_append_column", 
                "g_simple_async_result_complete", 
                "gdk_pixbuf_save", 
                "g_strdup", 
                "gtk_widget_set_tooltip_text", 
                "midori_browser_get_action_group", 
                "midori_view_get_display_title", 
                "g_file_replace_async", 
                "g_file_monitor_directory", 
                "midori_test_job_construct", 
                "g_key_file_unref", 
                "gtk_action_group_get_action", 
                "g_return_if_fail_warning", 
                "gtk_tool_button_set_label", 
                "gtk_list_store_new", 
                "g_key_file_get_string", 
                "katze_assert_str_equal", 
                "g_regex_error_quark", 
                "g_list_foreach", 
                "gtk_widget_get_toplevel", 
                "gtk_window_add_accel_group", 
                "gtk_cell_layout_pack_start", 
                "gdk_pixbuf_new_from_file_at_size", 
                "g_file_enumerate_children_finish", 
                "gtk_tool_item_set_is_important", 
                "midori_view_get_type", 
                "midori_panel_append_page", 
                "gtk_tree_view_column_set_sizing", 
                "g_error_new_literal", 
                "g_output_stream_write_async", 
                "g_key_file_load_from_file", 
                "g_file_enumerator_next_files_async", 
                "g_file_trash", 
                "gtk_tool_button_set_use_underline", 
                "g_type_class_add_private", 
                "g_type_register_static", 
                "g_object_ref_sink", 
                "g_file_copy_finish", 
                "gtk_vbox_get_type", 
                "g_io_error_quark", 
                "g_file_monitor_get_type", 
                "midori_paths_get_icon", 
                "g_object_ref", 
                "midori_test_job_get_type", 
                "gtk_tree_sortable_set_sort_column_id", 
                "gtk_action_group_remove_action", 
                "g_type_instance_get_private", 
                "gtk_cell_renderer_pixbuf_new", 
                "g_type_interface_peek_parent", 
                "midori_browser_get_current_tab", 
                "g_key_file_set_string", 
                "g_signal_connect_data", 
                "midori_paths_get_user_data_dir", 
                "g_strchug", 
                "g_strchomp", 
                "g_type_add_interface_static", 
                "gtk_tree_path_free", 
                "gtk_tree_model_get", 
                "gtk_cell_renderer_text_new", 
                "gtk_tree_view_get_column", 
                "g_file_enumerate_children_async", 
                "g_file_get_child", 
                "__stack_chk_fail", 
                "gtk_list_store_remove", 
                "g_regex_escape_string", 
                "g_compute_checksum_for_string", 
                "g_file_make_directory_with_parents", 
                "gtk_tree_view_column_new", 
                "midori_paths_remove_path", 
                "g_str_has_prefix", 
                "g_key_file_to_data", 
                "gtk_tool_button_new_from_stock", 
                "_ITM_registerTMCloneTable", 
                "g_simple_async_result_new", 
                "midori_app_get_browsers", 
                "g_key_file_new", 
                "gtk_cell_layout_set_cell_data_func", 
                "gtk_accel_group_new", 
                "g_simple_async_result_complete_in_idle", 
                "katze_array_get_items", 
                "g_regex_new"
            ], 
            "rpm": "midori-0.5.12-0.2.fc26.x86_64.rpm"
        }, 
        "usr/lib64/midori/libcopy-tabs_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/midori/libcopy-tabs.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "g_object_unref", 
                "g_string_insert_c", 
                "gtk_widget_show", 
                "gtk_clipboard_set_text", 
                "midori_extension_get_type", 
                "g_object_new", 
                "midori_extension_get_app", 
                "gtk_menu_shell_append", 
                "midori_view_get_display_uri", 
                "g_signal_connect_data", 
                "g_list_free", 
                "g_signal_handlers_disconnect_matched", 
                "__gmon_start__", 
                "gtk_menu_item_new_with_mnemonic", 
                "g_dgettext", 
                "katze_array_peek_items", 
                "g_string_append", 
                "midori_browser_get_tabs", 
                "g_string_sized_new", 
                "g_type_check_instance_cast", 
                "gtk_menu_shell_get_type", 
                "__cxa_finalize", 
                "g_string_free", 
                "midori_browser_get_type", 
                "_ITM_deregisterTMCloneTable"
            ], 
            "rpm": "midori-0.5.12-0.2.fc26.x86_64.rpm"
        }, 
        "usr/lib64/midori/libstatusbar-features_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/midori/libstatusbar-features.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "g_type_check_instance_is_a", 
                "g_strfreev", 
                "gtk_bin_get_type", 
                "gtk_widget_destroy", 
                "g_dgettext", 
                "gtk_hbox_new", 
                "gtk_button_set_image", 
                "katze_property_proxy", 
                "gtk_label_get_type", 
                "gtk_widget_hide", 
                "gtk_entry_get_type", 
                "g_strdup_printf", 
                "gtk_button_get_type", 
                "gtk_toolbar_get_type", 
                "gtk_combo_box_text_get_type", 
                "midori_browser_get_current_tab", 
                "katze_object_get_enum", 
                "midori_view_get_zoom_level", 
                "gtk_entry_set_width_chars", 
                "gtk_bin_get_child", 
                "gtk_button_set_label", 
                "gtk_widget_show", 
                "katze_array_peek_items", 
                "midori_extension_get_string_list", 
                "gtk_combo_box_text_new_with_entry", 
                "g_object_set_data", 
                "strstr", 
                "midori_view_get_type", 
                "gtk_combo_box_text_append_text", 
                "gtk_image_new_from_stock", 
                "gtk_widget_show_all", 
                "midori_web_settings_has_plugin_support", 
                "midori_view_set_zoom_level", 
                "g_ascii_strtod", 
                "gtk_button_get_image", 
                "midori_extension_get_app", 
                "__gmon_start__", 
                "g_signal_connect_data", 
                "g_signal_handlers_disconnect_matched", 
                "g_free", 
                "g_object_get_data", 
                "katze_object_get_object", 
                "gtk_box_pack_end", 
                "g_object_unref", 
                "_ITM_registerTMCloneTable", 
                "gtk_box_pack_start", 
                "midori_browser_get_for_widget", 
                "_ITM_deregisterTMCloneTable", 
                "gtk_entry_set_text", 
                "gtk_widget_set_tooltip_text", 
                "g_object_new", 
                "__cxa_finalize", 
                "g_assertion_message_expr", 
                "midori_browser_get_settings", 
                "gtk_entry_get_text", 
                "midori_extension_get_type", 
                "g_type_check_instance_cast", 
                "gtk_label_set_ellipsize"
            ], 
            "rpm": "midori-0.5.12-0.2.fc26.x86_64.rpm"
        }, 
        "usr/lib64/midori/libopen-with_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/midori/libopen-with.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "g_cclosure_marshal_VOID__OBJECT", 
                "gtk_label_set_ellipsize", 
                "midori_extension_get_app", 
                "gtk_window_set_title", 
                "gtk_dialog_add_buttons", 
                "gtk_tree_sortable_set_sort_column_id", 
                "g_value_get_boxed", 
                "gtk_tree_view_column_new", 
                "gtk_tree_sortable_set_sort_func", 
                "g_app_info_set_as_default_for_type", 
                "gtk_box_get_type", 
                "g_type_register_static", 
                "g_once_init_leave", 
                "g_value_set_object", 
                "gtk_dialog_get_type", 
                "g_app_info_get_default_for_type", 
                "midori_uri_is_blank", 
                "g_file_new_for_uri", 
                "g_object_get", 
                "g_signal_handlers_disconnect_matched", 
                "gtk_widget_show_all", 
                "gtk_window_set_transient_for", 
                "g_param_spec_object", 
                "webkit_hit_test_result_get_link_uri", 
                "g_app_info_set_as_last_used_for_type", 
                "gtk_list_store_set", 
                "g_markup_printf_escaped", 
                "midori_uri_recursive_fork_protection", 
                "g_path_get_basename", 
                "g_content_type_get_description", 
                "g_value_get_string", 
                "gtk_widget_set_no_show_all", 
                "gtk_image_set_from_gicon", 
                "g_vfs_get_supported_uri_schemes", 
                "gtk_widget_get_toplevel", 
                "webkit_hit_test_result_get_context", 
                "gtk_dialog_response", 
                "gtk_button_get_type", 
                "gtk_cell_renderer_text_new", 
                "gtk_size_group_new", 
                "gtk_widget_destroy", 
                "g_app_info_get_type", 
                "g_strdup_printf", 
                "g_free", 
                "g_strcmp0", 
                "__gmon_start__", 
                "g_value_set_string", 
                "gtk_window_set_resizable", 
                "g_type_instance_get_private", 
                "g_object_set", 
                "gtk_label_new", 
                "gtk_vbox_get_type", 
                "g_strconcat", 
                "gtk_tree_view_columns_autosize", 
                "gtk_vbox_new", 
                "gtk_tree_view_new_with_model", 
                "g_object_ref_sink", 
                "g_list_copy", 
                "gtk_misc_set_alignment", 
                "gtk_action_new", 
                "g_app_info_launch", 
                "gtk_hbox_new", 
                "g_regex_new", 
                "g_app_info_get_name", 
                "gtk_window_set_default_size", 
                "gtk_menu_new", 
                "g_type_check_instance_cast", 
                "gtk_tree_view_append_column", 
                "g_app_info_get_executable", 
                "g_return_if_fail_warning", 
                "g_cclosure_marshal_VOID__STRING", 
                "gtk_container_set_border_width", 
                "gtk_widget_set_tooltip_text", 
                "gtk_dialog_run", 
                "gtk_dialog_set_default_response", 
                "g_list_foreach", 
                "g_signal_emit_by_name", 
                "gtk_entry_set_activates_default", 
                "_ITM_registerTMCloneTable", 
                "g_regex_replace_literal", 
                "g_clear_error", 
                "gtk_image_menu_item_new_with_mnemonic", 
                "g_regex_unref", 
                "gtk_widget_create_pango_layout", 
                "g_list_free", 
                "g_type_check_instance_is_a", 
                "gtk_widget_show", 
                "gtk_scrolled_window_new", 
                "gtk_tree_view_column_set_sizing", 
                "gtk_entry_get_text", 
                "gtk_window_set_destroy_with_parent", 
                "g_str_has_prefix", 
                "gtk_dialog_get_content_area", 
                "g_assertion_message_expr", 
                "gtk_image_new_from_stock", 
                "g_slice_alloc0", 
                "g_type_class_add_private", 
                "midori_settings_get_news_aggregator", 
                "g_propagate_error", 
                "gtk_tree_model_get_iter", 
                "katze_preferences_add_widget", 
                "g_app_info_should_show", 
                "gtk_window_get_type", 
                "g_object_new", 
                "g_strdup", 
                "g_app_info_get_all_for_type", 
                "midori_browser_get_type", 
                "g_list_append", 
                "katze_widget_popup", 
                "gtk_tree_view_set_headers_visible", 
                "pango_layout_get_pixel_size", 
                "__stack_chk_fail", 
                "gtk_cell_layout_set_cell_data_func", 
                "gtk_image_menu_item_set_image", 
                "gtk_entry_set_text", 
                "g_param_spec_string", 
                "g_vfs_get_default", 
                "g_app_info_get_all", 
                "midori_app_get_type", 
                "gtk_entry_new", 
                "g_error_free", 
                "midori_browser_get_tabs", 
                "gtk_tree_view_column_set_expand", 
                "g_quark_to_string", 
                "g_slice_free1", 
                "midori_tab_get_type", 
                "g_object_unref", 
                "gtk_tree_iter_get_type", 
                "midori_context_action_add", 
                "_ITM_deregisterTMCloneTable", 
                "g_app_info_get_display_name", 
                "g_app_info_create_from_commandline", 
                "gtk_list_store_append", 
                "gtk_tree_model_iter_n_children", 
                "g_regex_escape_string", 
                "g_log", 
                "gtk_label_set_use_markup", 
                "g_content_type_from_mime_type", 
                "gtk_widget_hide", 
                "gtk_widget_set_size_request", 
                "katze_preferences_add_group", 
                "katze_preferences_add_category", 
                "gtk_box_pack_start", 
                "gtk_label_set_label", 
                "gtk_image_new", 
                "g_content_types_get_registered", 
                "gtk_cell_renderer_pixbuf_new", 
                "g_signal_new", 
                "g_app_info_get_icon", 
                "midori_extension_get_type", 
                "gtk_menu_shell_append", 
                "g_strsplit", 
                "g_object_notify", 
                "g_signal_parse_name", 
                "gtk_cell_layout_pack_start", 
                "g_content_type_guess", 
                "g_object_ref", 
                "midori_browser_get_for_widget", 
                "midori_settings_set_news_aggregator", 
                "gtk_size_group_add_widget", 
                "g_signal_connect_object", 
                "g_content_type_get_mime_type", 
                "midori_uri_is_http", 
                "g_signal_connect_data", 
                "g_type_class_peek_parent", 
                "gtk_tree_view_get_selection", 
                "gtk_list_store_new", 
                "g_filename_from_uri", 
                "midori_download_get_basename_for_display", 
                "webkit_hit_test_result_get_image_uri", 
                "midori_settings_get_text_editor", 
                "g_type_name", 
                "__cxa_finalize", 
                "gtk_tree_model_get", 
                "g_dgettext", 
                "gtk_window_set_icon_name", 
                "midori_app_get_browsers", 
                "gtk_scrolled_window_set_policy", 
                "g_content_type_get_icon", 
                "gtk_widget_get_preferred_size", 
                "gtk_tree_selection_get_selected", 
                "midori_settings_set_text_editor", 
                "g_object_class_install_property", 
                "gtk_container_add", 
                "g_regex_error_quark", 
                "g_app_info_get_commandline", 
                "strstr", 
                "g_app_info_get_description", 
                "g_value_get_object"
            ], 
            "rpm": "midori-0.5.12-0.2.fc26.x86_64.rpm"
        }, 
        "usr/lib64/midori/libfeed-panel_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/midori/libfeed-panel.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "g_source_remove", 
                "midori_extension_get_string_list", 
                "gtk_action_group_get_action", 
                "midori_paths_get_icon", 
                "katze_object_get_object", 
                "g_quark_from_string", 
                "gtk_bin_get_type", 
                "xmlDocGetRootElement", 
                "katze_item_get_token", 
                "midori_view_new_with_item", 
                "katze_item_set_icon", 
                "gtk_tree_view_append_column", 
                "xmlCheckVersion", 
                "g_type_class_peek_parent", 
                "gtk_entry_new", 
                "gtk_widget_show", 
                "katze_item_get_type", 
                "g_malloc_n", 
                "midori_panel_append_page", 
                "gtk_dialog_set_default_response", 
                "g_type_check_class_cast", 
                "gtk_dialog_run", 
                "midori_panel_get_type", 
                "g_object_connect", 
                "gtk_menu_shell_get_type", 
                "__gmon_start__", 
                "g_signal_emit_by_name", 
                "katze_object_get_boolean", 
                "gtk_tree_store_get_type", 
                "gtk_vpaned_new", 
                "gtk_vbox_get_type", 
                "gtk_menu_get_type", 
                "g_dgettext", 
                "gtk_widget_get_style_context", 
                "katze_array_add_item", 
                "g_strjoin", 
                "gtk_entry_get_text", 
                "gtk_tree_view_get_type", 
                "gtk_dialog_get_content_area", 
                "midori_extension_get_type", 
                "midori_browser_add_uri", 
                "gtk_container_get_type", 
                "gtk_cell_renderer_text_new", 
                "g_signal_new", 
                "gtk_tree_view_new_with_model", 
                "xmlStrchr", 
                "xmlNodeGetContent", 
                "gtk_stock_add", 
                "g_assertion_message_expr", 
                "gtk_window_set_title", 
                "g_object_unref", 
                "g_dpgettext", 
                "xmlIsBlankNode", 
                "xmlGetProp", 
                "midori_tab_get_type", 
                "gtk_tree_view_column_set_cell_data_func", 
                "g_signal_handlers_disconnect_matched", 
                "katze_array_find_token", 
                "gtk_widget_render_icon", 
                "gtk_cell_renderer_pixbuf_new", 
                "gtk_tree_model_get", 
                "g_date_time_format", 
                "gtk_tree_store_move_after", 
                "gtk_tree_view_column_new", 
                "gtk_image_menu_item_new_from_stock", 
                "g_signal_emit", 
                "g_strconcat", 
                "g_str_hash", 
                "katze_array_get_nth_item", 
                "gtk_toolbar_new", 
                "gtk_tree_store_remove", 
                "midori_timeout_add_seconds", 
                "midori_view_set_html", 
                "gtk_tree_view_set_headers_visible", 
                "gtk_scrolled_window_set_shadow_type", 
                "g_date_time_new_from_unix_local", 
                "gtk_scrolled_window_set_policy", 
                "gtk_tree_store_insert_with_values", 
                "g_cclosure_marshal_VOID__VOID", 
                "gtk_message_dialog_format_secondary_text", 
                "gtk_label_get_type", 
                "g_free", 
                "__stack_chk_fail", 
                "g_strdup_printf", 
                "g_type_add_interface_static", 
                "g_type_register_static_simple", 
                "gtk_size_group_add_widget", 
                "xmlStrcmp", 
                "katze_array_move_item", 
                "gtk_box_pack_start", 
                "gtk_window_get_type", 
                "gtk_icon_set_add_source", 
                "gtk_entry_get_type", 
                "g_type_check_instance_cast", 
                "midori_browser_add_item", 
                "katze_item_get_added", 
                "katze_array_peek_items", 
                "gtk_widget_get_type", 
                "midori_browser_set_current_uri", 
                "soup_date_free", 
                "katze_item_set_name", 
                "g_malloc0", 
                "g_object_set_data", 
                "katze_item_new", 
                "g_intern_static_string", 
                "xmlReadMemory", 
                "g_error_free", 
                "g_return_if_fail_warning", 
                "gtk_tree_model_get_iter", 
                "gtk_entry_set_text", 
                "gtk_container_add", 
                "midori_browser_get_settings", 
                "gtk_icon_factory_add", 
                "g_once_init_enter", 
                "katze_item_set_meta_string", 
                "gtk_window_set_icon_name", 
                "pango_font_description_get_size", 
                "katze_item_get_text", 
                "gtk_tree_store_new", 
                "gtk_message_dialog_get_type", 
                "gtk_size_group_new", 
                "g_object_new", 
                "g_str_equal", 
                "htmlSAXParseDoc", 
                "xmlGetLastError", 
                "katze_widget_popup", 
                "gtk_widget_set_tooltip_text", 
                "xmlNodeListGetString", 
                "g_cclosure_marshal_VOID__POINTER", 
                "katze_item_set_added", 
                "gtk_label_set_text_with_mnemonic", 
                "gtk_dialog_new_with_buttons", 
                "gtk_icon_source_new", 
                "midori_browser_get_action_group", 
                "gtk_scrolled_window_new", 
                "katze_item_get_meta_string", 
                "xmlResetLastError", 
                "gtk_menu_new", 
                "midori_extension_set_string_list", 
                "gtk_widget_destroy", 
                "gtk_label_new_with_mnemonic", 
                "midori_extension_install_string_list", 
                "g_strndup", 
                "gtk_tool_item_set_is_important", 
                "g_error_new", 
                "gtk_tree_model_get_type", 
                "gtk_entry_set_activates_default", 
                "_ITM_deregisterTMCloneTable", 
                "gtk_container_set_border_width", 
                "gtk_toolbar_insert", 
                "midori_tab_get_web_view", 
                "g_slist_free", 
                "gtk_icon_source_set_icon_name", 
                "gtk_menu_shell_append", 
                "g_object_get_data", 
                "gtk_box_get_type", 
                "g_signal_connect_data", 
                "katze_item_get_parent", 
                "__cxa_finalize", 
                "midori_panel_page_num", 
                "katze_array_get_length", 
                "g_slist_foreach", 
                "xmlFreeDoc", 
                "g_slist_prepend", 
                "katze_item_get_uri", 
                "gtk_dialog_get_type", 
                "gtk_paned_pack1", 
                "gtk_tree_model_iter_nth_child", 
                "g_type_check_instance_is_a", 
                "gtk_window_get_focus", 
                "gtk_widget_show_all", 
                "gtk_tool_button_new_from_stock", 
                "gtk_icon_factory_add_default", 
                "katze_array_new", 
                "katze_item_set_token", 
                "gtk_tree_view_column_pack_start", 
                "_ITM_registerTMCloneTable", 
                "midori_web_settings_new", 
                "midori_viewable_get_type", 
                "gtk_widget_destroyed", 
                "gtk_widget_set_sensitive", 
                "gtk_widget_set_size_request", 
                "xmlMemoryDump", 
                "gtk_tree_view_get_model", 
                "katze_item_set_uri", 
                "gtk_style_context_get_font", 
                "katze_tree_view_get_selected_iter", 
                "soup_date_new_from_string", 
                "midori_browser_set_current_tab", 
                "gtk_scrolled_window_get_type", 
                "katze_item_get_name", 
                "katze_array_remove_item", 
                "gtk_hbox_new", 
                "soup_date_to_time_t", 
                "katze_item_set_text", 
                "midori_extension_get_app", 
                "gtk_paned_get_type", 
                "gtk_icon_set_unref", 
                "pango_font_description_get_family", 
                "gtk_icon_factory_new", 
                "gtk_icon_source_free", 
                "g_once_init_leave", 
                "gtk_bin_get_child", 
                "g_date_time_unref", 
                "g_object_set", 
                "midori_browser_get_for_widget", 
                "gtk_paned_pack2", 
                "gtk_icon_set_new", 
                "midori_browser_get_current_tab", 
                "midori_panel_set_current_page", 
                "katze_array_get_type", 
                "g_type_class_adjust_private_offset", 
                "gtk_message_dialog_new", 
                "midori_view_get_type"
            ], 
            "rpm": "midori-0.5.12-0.2.fc26.x86_64.rpm"
        }, 
        "usr/lib64/midori/libstatus-clock_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/midori/libstatus-clock.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "g_date_time_unref", 
                "g_dgettext", 
                "gtk_widget_destroy", 
                "katze_array_peek_items", 
                "g_signal_handlers_disconnect_matched", 
                "gtk_label_new", 
                "g_source_destroy", 
                "g_signal_connect_data", 
                "_ITM_registerTMCloneTable", 
                "midori_extension_get_type", 
                "gtk_label_set_label", 
                "g_source_unref", 
                "g_timeout_source_new_seconds", 
                "g_source_attach", 
                "g_date_time_new_now_local", 
                "midori_extension_install_string", 
                "g_strstr_len", 
                "g_date_time_format", 
                "g_free", 
                "g_object_unref", 
                "__cxa_finalize", 
                "g_source_set_callback", 
                "katze_object_get_object", 
                "gtk_widget_show", 
                "_ITM_deregisterTMCloneTable", 
                "g_type_check_instance_cast", 
                "__gmon_start__", 
                "gtk_box_get_type", 
                "g_object_set_data", 
                "gtk_box_pack_end", 
                "g_date_time_get_seconds", 
                "gtk_label_get_type", 
                "midori_extension_get_string"
            ], 
            "rpm": "midori-0.5.12-0.2.fc26.x86_64.rpm"
        }, 
        "usr/lib64/midori/libmouse-gestures_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/midori/libmouse-gestures.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "midori_extension_get_app", 
                "midori_debug", 
                "__stack_chk_fail", 
                "__cxa_finalize", 
                "g_print", 
                "midori_extension_get_config_dir", 
                "gtk_menu_new", 
                "midori_browser_activate_action", 
                "midori_view_populate_popup", 
                "g_object_connect", 
                "midori_extension_get_integer", 
                "katze_object_get_object", 
                "gtk_widget_get_type", 
                "g_key_file_get_keys", 
                "g_build_filename", 
                "strcmp", 
                "g_signal_connect_data", 
                "g_object_new", 
                "katze_widget_popup", 
                "__gmon_start__", 
                "acosf", 
                "g_signal_handlers_disconnect_matched", 
                "g_key_file_get_string_list", 
                "g_type_check_instance_cast", 
                "midori_extension_install_integer", 
                "g_object_disconnect", 
                "midori_browser_get_for_widget", 
                "g_log", 
                "g_free", 
                "g_key_file_new", 
                "midori_browser_get_tabs", 
                "sqrtf", 
                "g_object_unref", 
                "katze_array_peek_items", 
                "g_slice_free1", 
                "g_dgettext", 
                "_ITM_registerTMCloneTable", 
                "gtk_menu_get_type", 
                "g_list_free", 
                "g_key_file_free", 
                "g_slice_alloc", 
                "midori_view_get_web_view", 
                "g_malloc", 
                "_ITM_deregisterTMCloneTable", 
                "g_key_file_load_from_file"
            ], 
            "rpm": "midori-0.5.12-0.2.fc26.x86_64.rpm"
        }, 
        "usr/lib64/midori/libtabby_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/midori/libtabby.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "midori_database_statement_step", 
                "midori_browser_get_tabs", 
                "midori_tab_get_load_status", 
                "g_list_length", 
                "g_object_get", 
                "g_slist_position", 
                "g_value_get_int64", 
                "gtk_notebook_get_type", 
                "g_date_time_unref", 
                "midori_database_statement_get_double", 
                "katze_array_is_empty", 
                "g_object_ref", 
                "g_value_set_int64", 
                "g_once_init_enter", 
                "g_signal_parse_name", 
                "midori_browser_add_item", 
                "midori_database_new", 
                "g_ptr_array_add", 
                "g_return_if_fail_warning", 
                "webkit_web_view_get_uri", 
                "g_signal_connect_data", 
                "__cxa_finalize", 
                "katze_item_get_meta_string", 
                "g_signal_handlers_disconnect_matched", 
                "g_ascii_dtostr", 
                "g_object_set_data_full", 
                "midori_paths_get_config_filename_for_reading", 
                "midori_database_get_first_use", 
                "midori_array_from_file", 
                "g_file_error_quark", 
                "g_value_set_enum", 
                "katze_item_get_type", 
                "midori_browser_get_type", 
                "g_object_notify", 
                "g_list_free", 
                "g_type_name", 
                "midori_view_get_type", 
                "g_slist_free", 
                "midori_database_statement_get_string", 
                "g_quark_to_string", 
                "gtk_window_get_destroy_with_parent", 
                "g_type_interface_peek_parent", 
                "katze_item_set_name", 
                "g_type_instance_get_private", 
                "katze_item_set_meta_integer", 
                "g_type_check_class_cast", 
                "g_date_time_to_unix", 
                "g_object_unref", 
                "gtk_notebook_get_nth_page", 
                "midori_view_get_display_title", 
                "midori_extension_get_type", 
                "gtk_notebook_reorder_child", 
                "g_slice_free1", 
                "midori_extension_get_app", 
                "g_object_class_install_property", 
                "katze_item_get_name", 
                "g_idle_add_full", 
                "g_assertion_message_expr", 
                "g_log", 
                "katze_array_get_items", 
                "gtk_widget_get_type", 
                "g_list_concat", 
                "g_free", 
                "midori_app_create_browser", 
                "midori_database_transaction", 
                "g_slist_foreach", 
                "midori_app_get_type", 
                "__stack_chk_fail", 
                "strtol", 
                "katze_item_get_meta_integer", 
                "g_type_interface_peek", 
                "g_error_free", 
                "g_clear_error", 
                "katze_item_new", 
                "sokoke_magic_uri", 
                "midori_app_get_browsers", 
                "_ITM_deregisterTMCloneTable", 
                "g_type_class_peek_parent", 
                "g_strdup", 
                "g_type_class_add_private", 
                "g_enum_register_static", 
                "gtk_notebook_page_num", 
                "g_malloc0", 
                "__gmon_start__", 
                "strlen", 
                "g_slist_find_custom", 
                "midori_database_statement_get_int64", 
                "katze_item_set_uri", 
                "midori_view_get_proxy_item", 
                "g_ascii_strtod", 
                "g_getenv", 
                "_ITM_registerTMCloneTable", 
                "katze_array_new", 
                "midori_app_send_command", 
                "g_ptr_array_new", 
                "g_param_spec_enum", 
                "g_dgettext", 
                "g_type_check_instance_is_a", 
                "katze_item_set_meta_string", 
                "g_slist_insert_sorted_with_data", 
                "g_param_spec_object", 
                "g_slice_alloc0", 
                "g_signal_connect_object", 
                "g_object_get_data", 
                "g_value_get_enum", 
                "gtk_widget_show", 
                "midori_app_get_crashed", 
                "g_ptr_array_unref", 
                "g_param_spec_int64", 
                "g_value_get_object", 
                "g_type_register_static", 
                "g_once_init_leave", 
                "katze_item_get_uri", 
                "midori_database_prepare", 
                "g_object_new", 
                "midori_app_add_browser", 
                "midori_database_error_quark", 
                "g_value_set_object", 
                "midori_database_statement_row_id", 
                "midori_tab_get_web_view", 
                "g_type_add_interface_static", 
                "g_type_check_instance_cast", 
                "g_type_interface_add_prerequisite", 
                "midori_database_statement_exec"
            ], 
            "rpm": "midori-0.5.12-0.2.fc26.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Applications/Internet", 
            "Name": " midori", 
            "License": " LGPLv2+", 
            "URL": " http://midori-browser.org/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-14.phx2.fedoraproject.org", 
            "Description": "\nMidori is a lightweight web browser, and has many features expected of a\nmodern browser, including:\n* Full integration with GTK3.\n* Fast rendering with WebKit2.\n* Tabs, windows and session management.\n* Bookmarks are stored with XBEL.\n* Searchbox based on OpenSearch.\n* Custom context menu actions.\n* User scripts and user styles support.\n* Extensible via Lua scripts.\n\nThe project is currently in an early alpha state. The features are still being\nimplemented, and some are still quite incomplete.\n", 
            "Build Date": " Sat 11 Feb 2017 01:04:40 AM EST", 
            "Source RPM": " midori-0.5.12-0.2.fc26.src.rpm", 
            "Version": " 0.5.12", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Wed 22 Feb 2017 06:31:48 AM EST, Key ID f55e7430f5282ee4", 
            "Release": " 0.2.fc26", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " A lightweight GTK+ web browser", 
            "Size": " 6486312"
        }
    }
}