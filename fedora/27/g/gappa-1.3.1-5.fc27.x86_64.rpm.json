{
    "results": {
        "usr/bin/gappa": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/gappa", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_", 
                "isatty", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm", 
                "fileno", 
                "mpfr_set_z", 
                "__gmpz_get_str", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode", 
                "_ZNSt6localeC1Ev", 
                "mpfr_set_ui", 
                "mpfr_set4", 
                "__gmon_start__", 
                "__dynamic_cast", 
                "__stack_chk_fail", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEED1Ev", 
                "__gmpz_scan1", 
                "__assert_fail", 
                "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base", 
                "mpfr_add", 
                "_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "__gmpz_set", 
                "mpfr_number_p", 
                "mpfr_cmpabs", 
                "_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE7_M_syncEPcmm", 
                "__cxa_allocate_exception", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv", 
                "mpfr_get_z_2exp", 
                "mpfr_set_prec", 
                "fopen", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l", 
                "__gmpz_tdiv_q_2exp", 
                "mpfr_get_d", 
                "_ZNSt8ios_baseD2Ev", 
                "mpfr_set_ui_2exp", 
                "malloc", 
                "mpfr_set_inf", 
                "__cxa_end_catch", 
                "_ZNSo9_M_insertIdEERSoT_", 
                "_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "memcpy", 
                "_Unwind_Resume", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_", 
                "_ZSt20__throw_length_errorPKc", 
                "__gmpz_add", 
                "memcmp", 
                "_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_", 
                "mpfr_set_erangeflag", 
                "getc", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm", 
                "toupper", 
                "__gmpz_tstbit", 
                "mpfr_cmp3", 
                "_ZdlPvm", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "__gmpz_divisible_ui_p", 
                "__cxa_throw", 
                "mpfr_div", 
                "__gmpz_mul", 
                "__libc_start_main", 
                "_ZSt24__throw_out_of_range_fmtPKcz", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc", 
                "__cxa_begin_catch", 
                "_ZNSo9_M_insertIlEERSoT_", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm", 
                "_ZNSt8ios_baseC2Ev", 
                "mpfr_mul_2si", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm", 
                "clearerr", 
                "mpfr_snprintf", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEEC1Ev", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "__gmpz_divisible_2exp_p", 
                "_ZNSt8ios_base4InitD1Ev", 
                "strtol", 
                "perror", 
                "_ZSt19__throw_logic_errorPKc", 
                "__errno_location", 
                "mpfr_mul", 
                "fread", 
                "_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev", 
                "__cxa_rethrow", 
                "realloc", 
                "_ZNKSt5ctypeIcE13_M_widen_initEv", 
                "__gmpz_add_ui", 
                "_ZdlPv", 
                "_ZSt16__throw_bad_castv", 
                "_ZNSo3putEc", 
                "__gmpz_mul_2exp", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "__gmpz_ui_pow_ui", 
                "_ZNSt8ios_base4InitC1Ev", 
                "__cxa_finalize", 
                "__gmpz_sizeinbase", 
                "__cxa_free_exception", 
                "__gmpz_fdiv_q_2exp", 
                "__gmpz_init", 
                "__gmpz_clear", 
                "strtod", 
                "ferror", 
                "__cxa_bad_typeid", 
                "mpfr_init2", 
                "mpfr_sub", 
                "calloc", 
                "stpcpy", 
                "__gmpz_divexact_ui", 
                "_Znwm", 
                "mpfr_log2", 
                "exit", 
                "strlen", 
                "mpfr_greaterequal_p", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcmm", 
                "__cxa_guard_abort", 
                "_ITM_registerTMCloneTable", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEmmPKc", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev", 
                "__gmpz_init_set_str", 
                "_ZSt17__throw_bad_allocv", 
                "mpfr_less_p", 
                "__gmpz_sub_ui", 
                "mpfr_lessgreater_p", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm", 
                "mpfr_equal_p", 
                "mpfr_mul_ui", 
                "_ZNSt12__basic_fileIcED1Ev", 
                "__cxa_guard_release", 
                "mpfr_set_si", 
                "_ZNSo5flushEv", 
                "__fprintf_chk", 
                "free", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "_ZNSt6localeD1Ev", 
                "mpfr_set_d", 
                "fwrite", 
                "__gmpz_divexact", 
                "_ITM_deregisterTMCloneTable", 
                "mpfr_div_2ui", 
                "__gxx_personality_v0", 
                "__gmpz_cmp_ui", 
                "mpfr_lessequal_p", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcmm", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "strchr", 
                "isalpha", 
                "__cxa_pure_virtual", 
                "mpfr_sqrt", 
                "memmove", 
                "_ZNSt8__detail15_List_node_base4swapERS0_S1_", 
                "__gmpz_init_set", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc", 
                "_ZNSolsEi", 
                "_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc", 
                "_ZNSt8__detail15_List_node_base9_M_unhookEv", 
                "__gmpz_gcd", 
                "mpfr_set_si_2exp", 
                "__gmpz_set_str", 
                "__cxa_guard_acquire", 
                "mpfr_greater_p", 
                "__gmpz_init_set_si", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc", 
                "mpfr_clear", 
                "mpfr_neg", 
                "__cxa_atexit", 
                "mpfr_set_str", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm"
            ], 
            "rpm": "gappa-1.3.1-5.fc27.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " gappa", 
            "License": " GPLv2 or CeCILL", 
            "URL": " http://gappa.gforge.inria.fr/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildhw-08.phx2.fedoraproject.org", 
            "Description": "\nGappa is a tool intended to help verifying and formally prove\nproperties on numerical programs and circuits handling floating-point\nor fixed-point arithmetic.  This tool manipulates logical formulas\nstating the enclosures of expressions in some intervals.  Through the\nuse of rounding operators as part of the expressions, Gappa is specially\ndesigned to deal with formulas that could appear when certifying numerical\ncodes. In particular, Gappa makes it simple to bound computational errors\ndue to floating-point arithmetic.  The tool and its documentation were\nwritten by Guillaume Melquiond.\n", 
            "Build Date": " Wed 02 Aug 2017 09:05:38 PM EDT", 
            "Source RPM": " gappa-1.3.1-5.fc27.src.rpm", 
            "Version": " 1.3.1", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Thu 03 Aug 2017 07:52:09 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 5.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Prove programs with floating-point or fixed-point arithmetic", 
            "Size": " 1198262"
        }
    }
}