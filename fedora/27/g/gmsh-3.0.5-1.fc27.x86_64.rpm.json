{
    "results": {
        "usr/bin/gmsh": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/gmsh", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "_ZdlPvm", 
                "__libc_start_main", 
                "_ZSt19__throw_logic_errorPKc", 
                "_ZN13PluginManager22registerDefaultPluginsEv", 
                "_Z8GmshFLTKiPPc", 
                "_Z14GmshInitializeiPPc", 
                "__cxa_finalize", 
                "__gxx_personality_v0", 
                "_ZdlPv", 
                "_ZN3Msg4ExitEi", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_Z11InitOptionsi", 
                "memcpy", 
                "_ITM_deregisterTMCloneTable", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm", 
                "_ZN13PluginManager8instanceEv", 
                "_ZN6GModelC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", 
                "_ZN3CTX8instanceEv", 
                "exit", 
                "_Z15PrintOptionsDocv", 
                "_ZNSt8ios_base4InitD1Ev", 
                "__gmon_start__", 
                "__stack_chk_fail", 
                "_Znwm", 
                "_ITM_registerTMCloneTable", 
                "_Z9GmshBatchv", 
                "_ZN3Msg13GetGmshClientEv", 
                "_Unwind_Resume"
            ], 
            "rpm": "gmsh-3.0.5-1.fc27.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " gmsh", 
            "License": " GPLv2+", 
            "URL": " http://geuz.org/gmsh/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-06.phx2.fedoraproject.org", 
            "Description": "\nGmsh is a 3D finite element grid generator with a build-in CAD engine\nand post-processor. Its design goal is to provide a fast, light and\nuser-friendly meshing tool with parametric input and advanced\nvisualization capabilities. Gmsh is built around four modules:\ngeometry, mesh, solver and post-processing. The specification of any\ninput to these modules is done either interactively using the\ngraphical user interface or in ASCII text files using Gmsh's own scripting\nlanguage.\n", 
            "Build Date": " Thu 07 Sep 2017 09:42:48 AM EDT", 
            "Source RPM": " gmsh-3.0.5-1.fc27.src.rpm", 
            "Version": " 3.0.5", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Thu 07 Sep 2017 02:07:15 PM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 1.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " A three-dimensional finite element mesh generator", 
            "Size": " 11488"
        }
    }
}