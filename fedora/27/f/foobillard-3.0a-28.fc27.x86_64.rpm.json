{
    "results": {
        "usr/bin/foobillard": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/foobillard", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "glLineStipple", 
                "glBindTexture", 
                "FT_New_Face", 
                "glTexGeni", 
                "glDisable", 
                "write", 
                "glTexGenfv", 
                "asin", 
                "__stack_chk_fail", 
                "glRotatef", 
                "sincos", 
                "__memcpy_chk", 
                "glColorMask", 
                "glMaterialfv", 
                "gluNewTess", 
                "png_create_read_struct", 
                "glTranslatef", 
                "SDL_Init", 
                "strncasecmp", 
                "fseek", 
                "gluTessBeginPolygon", 
                "png_read_image", 
                "glDeleteTextures", 
                "glGetFloatv", 
                "glPopMatrix", 
                "fcntl", 
                "sqrtf", 
                "png_destroy_read_struct", 
                "perror", 
                "png_get_channels", 
                "__libc_start_main", 
                "acos", 
                "pow", 
                "glMatrixMode", 
                "getenv", 
                "_ITM_registerTMCloneTable", 
                "png_create_info_struct", 
                "glVertex3f", 
                "srand", 
                "FT_Set_Char_Size", 
                "strcpy", 
                "SDL_MixAudio", 
                "sin", 
                "glFogfv", 
                "glColor3f", 
                "glNormal3f", 
                "FT_Done_Face", 
                "SDL_GetVideoInfo", 
                "gluTessEndContour", 
                "connect", 
                "FT_Set_Pixel_Sizes", 
                "SDL_GetModState", 
                "exit", 
                "glPushMatrix", 
                "getopt_long_only", 
                "glLoadIdentity", 
                "SDL_OpenAudio", 
                "glTexCoordPointer", 
                "png_init_io", 
                "gluBuild2DMipmaps", 
                "glDeleteLists", 
                "SDL_GetVideoSurface", 
                "glEndList", 
                "strcmp", 
                "glGenTextures", 
                "__cxa_finalize", 
                "glFogi", 
                "SDL_ListModes", 
                "glMaterialf", 
                "SDL_GL_SwapBuffers", 
                "close", 
                "SDL_GL_SetAttribute", 
                "read", 
                "SDL_Quit", 
                "glGetIntegerv", 
                "free", 
                "glMultMatrixf", 
                "strlen", 
                "SDL_UnlockAudio", 
                "glViewport", 
                "glNewList", 
                "SDL_WM_ToggleFullScreen", 
                "memcpy", 
                "fgetc", 
                "FT_Get_Char_Index", 
                "gluTessBeginContour", 
                "glTexParameteri", 
                "glCallList", 
                "glFogf", 
                "__errno_location", 
                "SDL_PauseAudio", 
                "fread", 
                "glHint", 
                "listen", 
                "glActiveTextureARB", 
                "__cxa_atexit", 
                "glLoadMatrixf", 
                "glEnable", 
                "gluTessNormal", 
                "glDepthFunc", 
                "glNormal3fv", 
                "gethostname", 
                "__gmon_start__", 
                "FT_Init_FreeType", 
                "glIsTexture", 
                "cos", 
                "glFrontFace", 
                "SDL_GetError", 
                "_ITM_deregisterTMCloneTable", 
                "ftell", 
                "glGenLists", 
                "__stpcpy_chk", 
                "gluTessVertex", 
                "glCopyTexSubImage2D", 
                "exp", 
                "atan2", 
                "SDL_EnableKeyRepeat", 
                "glGetString", 
                "SDL_CloseAudio", 
                "SDL_SetVideoMode", 
                "FT_Outline_Decompose", 
                "gettimeofday", 
                "waitpid", 
                "glTexEnvi", 
                "log", 
                "atan", 
                "glPolygonOffset", 
                "glEnableClientState", 
                "chdir", 
                "fclose", 
                "glTexImage2D", 
                "malloc", 
                "accept", 
                "SDL_LockAudio", 
                "tan", 
                "glNormalPointer", 
                "glLightfv", 
                "glDrawElements", 
                "fflush", 
                "glVertex3fv", 
                "fputc", 
                "socket", 
                "puts", 
                "png_get_IHDR", 
                "bind", 
                "__ctype_b_loc", 
                "SDL_Delay", 
                "FT_Render_Glyph", 
                "png_get_rowbytes", 
                "glColor3ub", 
                "rand", 
                "__sprintf_chk", 
                "glBlendFunc", 
                "glVertexPointer", 
                "glColor4f", 
                "glShadeModel", 
                "gethostbyname", 
                "sscanf", 
                "glScalef", 
                "sqrt", 
                "glClear", 
                "__strcpy_chk", 
                "gluTessEndPolygon", 
                "__printf_chk", 
                "glTexCoord2f", 
                "__fprintf_chk", 
                "FT_Load_Glyph", 
                "glBegin", 
                "gluDeleteTess", 
                "glFrustum", 
                "glDepthMask", 
                "SDL_PollEvent", 
                "fopen", 
                "gluTessCallback", 
                "glEnd"
            ], 
            "rpm": "foobillard-3.0a-28.fc27.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Amusements/Games", 
            "Name": " foobillard", 
            "License": " GPLv2", 
            "URL": " http://foobillard.sunsite.dk/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-03.phx2.fedoraproject.org", 
            "Description": "\nFooBillard is an attempt to create a free OpenGL-billard for Linux.\nFooBillard is still under development but the main physics is implemented.\n", 
            "Build Date": " Wed 02 Aug 2017 07:54:17 PM EDT", 
            "Source RPM": " foobillard-3.0a-28.fc27.src.rpm", 
            "Version": " 3.0a", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Mon 07 Aug 2017 12:56:41 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 28.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " OpenGL billard game", 
            "Size": " 1211887"
        }
    }
}