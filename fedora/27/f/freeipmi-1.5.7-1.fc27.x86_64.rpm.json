{
    "results": {
        "usr/sbin/ipmi-sensors": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/sbin/ipmi-sensors", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "ipmi_sdr_ctx_create", 
                "__vsnprintf_chk", 
                "fputc", 
                "ipmi_ctx_find_inband", 
                "ipmi_ctx_create", 
                "__errno_location", 
                "ipmi_sdr_parse_fru_device_locator_parameters", 
                "strcpy", 
                "__sprintf_chk", 
                "ipmi_sdr_oem_parse_intel_node_manager", 
                "ipmi_sdr_parse_container_entity", 
                "qsort", 
                "ipmi_interpret_ctx_create", 
                "ipmi_interpret_sensor", 
                "ipmi_sdr_parse_tolerance", 
                "pthread_cond_signal", 
                "ipmidetect_handle_destroy", 
                "ipmi_sdr_parse_event_reading_type_code", 
                "ipmi_ctx_strerror", 
                "gethostname", 
                "ipmi_timestamp_string", 
                "pthread_attr_destroy", 
                "ipmi_sdr_parse_device_type", 
                "__strcat_chk", 
                "ipmi_interpret_ctx_set_manufacturer_id", 
                "ipmi_sdr_cache_search_record_id", 
                "exit", 
                "__fprintf_chk", 
                "ipmi_sdr_cache_delete", 
                "fflush", 
                "ipmi_sensor_read_ctx_errormsg", 
                "fiid_obj_set", 
                "getpwuid_r", 
                "ipmidetect_errnum", 
                "ipmi_cmd_get_device_id", 
                "ipmi_sdr_cache_next", 
                "open", 
                "fiid_obj_create", 
                "perror", 
                "ipmi_cmd_get_sdr_repository_allocation_info", 
                "ipmi_sdr_parse_sensor_type", 
                "ipmi_sdr_parse_sensor_record_sharing", 
                "ipmi_sdr_cache_search_sensor", 
                "ipmi_sdr_ctx_errnum", 
                "pthread_cond_wait", 
                "ipmi_sdr_parse_sensor_owner_lun", 
                "pthread_create", 
                "ipmi_get_event_messages", 
                "argp_state_help", 
                "fcntl", 
                "ipmi_sdr_parse_sensor_direction", 
                "ipmi_get_sensor_type_string", 
                "FIID_OBJ_GET", 
                "ipmidetect_handle_create", 
                "fiid_obj_errormsg", 
                "ipmi_sdr_ctx_errormsg", 
                "ipmi_sensor_read_ctx_destroy", 
                "strncmp", 
                "ipmi_ctx_destroy", 
                "stpcpy", 
                "fiid_obj_destroy", 
                "ipmi_sensor_read_ctx_strerror", 
                "ipmi_ctx_get_flags", 
                "ipmi_device_type_modifer_message", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "strdup", 
                "strerror", 
                "strtok", 
                "__strcpy_chk", 
                "ipmi_cmd_get_sensor_event_enable", 
                "ipmi_cmd_get_sensor_thresholds", 
                "ipmi_check_completion_code", 
                "ipmi_event_reading_type_code_class", 
                "ipmi_sdr_parse_record_id_and_type", 
                "strncasecmp", 
                "ipmi_sensor_read_ctx_create", 
                "ipmi_sdr_parse_sensor_owner_id", 
                "_ITM_deregisterTMCloneTable", 
                "strlen", 
                "ipmi_sdr_parse_sensor_capabilities", 
                "ipmi_ctx_errnum", 
                "__vfprintf_chk", 
                "strncpy", 
                "ipmi_sdr_ctx_set_debug_prefix", 
                "ipmi_sdr_parse_sensor_units", 
                "ipmi_sdr_parse_sensor_number", 
                "sysconf", 
                "ipmidetect_errormsg", 
                "ipmi_ctx_close", 
                "ipmi_sdr_cache_record_read", 
                "memmove", 
                "__ctype_b_loc", 
                "pthread_mutex_unlock", 
                "ipmidetect_load_data", 
                "fiid_obj_get", 
                "__libc_start_main", 
                "setrlimit", 
                "getrlimit", 
                "ipmi_interpret_ctx_errnum", 
                "ipmi_ctx_set_target", 
                "ipmi_sdr_parse_fru_entity_id_and_instance", 
                "write", 
                "ipmi_sdr_parse_device_id_string", 
                "ipmi_get_oem_sensor_type_string", 
                "__memcpy_chk", 
                "ipmi_ctx_set_flags", 
                "strtol", 
                "puts", 
                "fputs", 
                "ipmi_cmd_get_sdr_repository_info", 
                "memset", 
                "realloc", 
                "pthread_mutex_init", 
                "ipmi_sdr_ctx_set_flags", 
                "signal", 
                "ipmi_sdr_parse_entity_sensor_name", 
                "ipmi_sdr_parse_threshold_readable", 
                "ipmi_interpret_ctx_errormsg", 
                "ipmi_sdr_parse_entity_id_instance_type", 
                "mkdir", 
                "ipmi_sdr_parse_id_string", 
                "memchr", 
                "ipmi_sdr_parse_oem_data", 
                "ipmi_ctx_open_outofband", 
                "free", 
                "ipmi_sdr_parse_management_controller_device_locator_parameters", 
                "ipmi_interpret_ctx_destroy", 
                "strtod", 
                "ipmi_sdr_parse_sensor_decoding_data", 
                "__cxa_finalize", 
                "ipmi_sensor_read_ctx_errnum", 
                "ipmi_interpret_ctx_set_flags", 
                "ipmidetect_is_node_detected", 
                "__stack_chk_fail", 
                "pthread_mutex_lock", 
                "ipmi_sdr_ctx_destroy", 
                "ipmi_sdr_cache_create", 
                "ipmi_sensor_units_string", 
                "ipmi_sdr_parse_sensor_name", 
                "ipmi_sensor_read_ctx_set_flags", 
                "ipmi_sdr_parse_generic_device_locator_parameters", 
                "ipmi_sdr_cache_first", 
                "__snprintf_chk", 
                "ipmi_sdr_parse_accuracy", 
                "dirname", 
                "pthread_attr_setdetachstate", 
                "ipmi_sdr_parse_sensor_reading_ranges_specified", 
                "memcpy", 
                "ipmi_sensor_decode_value", 
                "ipmi_interpret_load_sensor_config", 
                "ipmi_sdr_parse_manufacturer_id", 
                "ipmi_interpret_ctx_set_product_id", 
                "access", 
                "strtoul", 
                "strcmp", 
                "ipmi_ctx_open_outofband_2_0", 
                "fwrite", 
                "snprintf", 
                "ipmi_cmd_get_sensor_hysteresis", 
                "__xstat", 
                "argp_parse", 
                "getpass", 
                "strcasecmp", 
                "ipmi_sensor_decode_resolution", 
                "strchr", 
                "malloc", 
                "ipmi_sdr_cache_record_count", 
                "ipmi_sdr_cache_open", 
                "close", 
                "ipmi_ctx_open_inband", 
                "ipmi_sdr_parse_sensor_reading_ranges", 
                "getuid", 
                "ipmi_iana_enterprise_numbers_string", 
                "ipmi_sdr_parse_product_id", 
                "read", 
                "pthread_attr_init", 
                "ipmi_sdr_parse_thresholds_raw", 
                "ipmi_ctx_errormsg"
            ], 
            "rpm": "freeipmi-1.5.7-1.fc27.x86_64.rpm"
        }, 
        "usr/sbin/ipmi-locate": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/sbin/ipmi-locate", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "ipmi_locate_acpi_spmi_get_device_info", 
                "__errno_location", 
                "__stack_chk_fail", 
                "exit", 
                "getrlimit", 
                "ipmi_locate_ctx_destroy", 
                "ipmi_locate_defaults_get_device_info", 
                "argp_state_help", 
                "__cxa_finalize", 
                "__libc_start_main", 
                "setrlimit", 
                "ipmi_locate_smbios_get_device_info", 
                "getuid", 
                "ipmi_locate_ctx_create", 
                "ipmi_locate_dmidecode_get_device_info", 
                "_ITM_deregisterTMCloneTable", 
                "__ctype_b_loc", 
                "ipmi_locate_pci_get_device_info", 
                "_ITM_registerTMCloneTable", 
                "strerror", 
                "ipmi_locate_ctx_errormsg", 
                "putchar", 
                "__gmon_start__", 
                "ipmi_locate_ctx_errnum", 
                "perror", 
                "puts", 
                "__printf_chk", 
                "__fprintf_chk", 
                "__sprintf_chk", 
                "strlen"
            ], 
            "rpm": "freeipmi-1.5.7-1.fc27.x86_64.rpm"
        }, 
        "usr/sbin/bmc-device": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/sbin/bmc-device", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "strncasecmp", 
                "strchr", 
                "ipmi_cmd_set_system_info_parameters_primary_operating_system_name_first_set", 
                "ipmi_sdr_ctx_set_flags", 
                "ipmi_cmd_get_system_interface_capabilities_ssif", 
                "ipmi_fru_read_data_area", 
                "getpwuid_r", 
                "pthread_attr_setdetachstate", 
                "ipmidetect_errormsg", 
                "access", 
                "argp_parse", 
                "ipmidetect_load_data", 
                "strerror", 
                "open", 
                "strtok_r", 
                "calloc", 
                "fputc", 
                "strtok", 
                "ipmi_cmd_get_sel_time", 
                "ipmi_cmd_get_fru_inventory_area_info", 
                "signal", 
                "ipmi_sdr_cache_search_sensor", 
                "ipmi_cmd_get_ip_udp_rmcp_statistics", 
                "ipmi_cmd_set_system_info_parameters_primary_operating_system_name", 
                "stpcpy", 
                "ipmi_sdr_cache_delete", 
                "fiid_obj_copy", 
                "ipmi_ctx_destroy", 
                "ipmi_fru_open_device_id", 
                "ipmi_fru_ctx_errormsg", 
                "ipmi_cmd_set_system_info_parameters_operating_system_name_first_set", 
                "fputs", 
                "ipmi_cmd_re_arm_sensor_events_ipmb", 
                "qsort", 
                "ipmi_cmd_set_sensor_reading_and_event_status", 
                "pthread_attr_init", 
                "ipmi_fru_ctx_errnum", 
                "memchr", 
                "ipmi_fru_ctx_set_flags", 
                "ipmi_cmd_get_acpi_power_state", 
                "_ITM_deregisterTMCloneTable", 
                "fiid_obj_destroy", 
                "ipmi_ctx_find_inband", 
                "ipmi_cmd_set_system_info_parameters_bmc_url_first_set", 
                "strftime", 
                "strcmp", 
                "ipmi_sdr_ctx_destroy", 
                "__fprintf_chk", 
                "__vsnprintf_chk", 
                "close", 
                "memset", 
                "ipmi_ctx_strerror", 
                "__libc_start_main", 
                "realloc", 
                "ipmi_cmd_set_sdr_repository_time", 
                "__snprintf_chk", 
                "pthread_create", 
                "strcasecmp", 
                "ipmi_ctx_close", 
                "ipmi_cmd_set_system_info_parameters_bmc_url", 
                "ipmi_timestamp_string", 
                "unlink", 
                "ipmi_cmd_set_sel_time_utc_offset", 
                "pthread_mutex_lock", 
                "ipmi_cmd_get_bmc_global_enables", 
                "ipmi_cmd_get_bt_interface_capabilities", 
                "strdup", 
                "fiid_obj_errormsg", 
                "__errno_location", 
                "_ITM_registerTMCloneTable", 
                "ipmi_sdr_cache_search_record_id", 
                "ipmi_ctx_open_inband", 
                "strptime", 
                "ipmi_cmd_set_system_info_parameters_base_os_hypervisor_url", 
                "ipmi_cmd_get_self_test_results", 
                "__cxa_finalize", 
                "ipmi_sdr_parse_record_id_and_type", 
                "getpass", 
                "ipmi_fru_ctx_create", 
                "ipmi_cmd_set_system_info_parameters_present_os_version_number_first_set", 
                "pthread_mutex_unlock", 
                "ipmi_cmd_set_system_info_parameters_system_name", 
                "ipmidetect_handle_destroy", 
                "sysconf", 
                "ipmi_cmd_get_sel_time_utc_offset", 
                "__strcpy_chk", 
                "ipmi_cmd_cold_reset", 
                "memcpy", 
                "ipmi_cmd_set_system_info_parameters_system_firmware_version_first_set", 
                "ipmi_cmd_set_system_info_parameters_system_name_first_set", 
                "perror", 
                "getuid", 
                "ipmi_get_channel_number", 
                "__sprintf_chk", 
                "ipmi_cmd_set_system_info_parameters_base_os_hypervisor_url_first_set", 
                "fiid_obj_create", 
                "setrlimit", 
                "ipmi_cmd_re_arm_sensor_events", 
                "__xstat", 
                "ipmi_cmd_get_system_interface_capabilities_kcs", 
                "ipmi_cmd_set_system_info_parameters_system_firmware_version", 
                "pthread_cond_signal", 
                "strncpy", 
                "ipmi_cmd_set_acpi_power_state", 
                "__stack_chk_fail", 
                "ipmi_ctx_open_outofband", 
                "ipmi_ctx_set_target", 
                "strlen", 
                "ipmi_cmd_platform_event", 
                "memmove", 
                "ipmi_cmd_write_fru_data", 
                "fwrite", 
                "FIID_OBJ_GET", 
                "__memcpy_chk", 
                "__gmon_start__", 
                "localtime_r", 
                "ipmi_cmd_get_channel_info", 
                "ipmi_cmd_set_system_info_parameters_operating_system_name", 
                "ipmi_cmd_get_sdr_repository_time", 
                "ipmidetect_errnum", 
                "snprintf", 
                "__vfprintf_chk", 
                "malloc", 
                "ipmi_fru_ctx_strerror", 
                "ipmi_ctx_create", 
                "pthread_attr_destroy", 
                "getrlimit", 
                "ipmi_ctx_errnum", 
                "strcpy", 
                "fflush", 
                "free", 
                "ipmidetect_handle_create", 
                "ipmidetect_is_node_detected", 
                "ipmi_sdr_parse_sensor_owner_lun", 
                "strtol", 
                "write", 
                "ipmi_cmd_get_auxiliary_log_status", 
                "dirname", 
                "fiid_obj_clear", 
                "ipmi_cmd_set_sel_time", 
                "fcntl", 
                "ipmi_sdr_ctx_errnum", 
                "gethostname", 
                "exit", 
                "ipmi_cmd_warm_reset", 
                "ipmi_fru_close_device_id", 
                "ipmi_sdr_parse_sensor_number", 
                "ipmi_sdr_parse_sensor_owner_id", 
                "ipmi_ctx_open_outofband_2_0", 
                "ipmi_cmd_set_system_info_parameters_present_os_version_number", 
                "pthread_cond_wait", 
                "ipmi_sdr_ctx_errormsg", 
                "ipmi_check_completion_code", 
                "ipmi_sdr_ctx_create", 
                "ipmi_ctx_errormsg", 
                "read", 
                "ipmi_sdr_cache_create", 
                "strtod", 
                "pthread_mutex_init", 
                "ipmi_sdr_cache_open", 
                "argp_state_help", 
                "__ctype_b_loc", 
                "mkdir", 
                "mktime", 
                "ipmi_sdr_ctx_set_debug_prefix", 
                "ipmi_fru_ctx_destroy", 
                "strncmp"
            ], 
            "rpm": "freeipmi-1.5.7-1.fc27.x86_64.rpm"
        }, 
        "usr/sbin/rmcpping": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/sbin/rmcpping", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "__libc_start_main", 
                "getopt", 
                "close", 
                "assemble_rmcp_pkt", 
                "strtol", 
                "__errno_location", 
                "unassemble_rmcp_pkt", 
                "fwrite", 
                "_ITM_deregisterTMCloneTable", 
                "strrchr", 
                "srand", 
                "__printf_chk", 
                "ipmi_lan_recvfrom", 
                "ipmi_dump_rmcp_packet", 
                "signal", 
                "__fprintf_chk", 
                "ipmi_cmd_str", 
                "hstrerror", 
                "strchr", 
                "__h_errno_location", 
                "fill_rmcp_hdr_asf", 
                "gethostbyname", 
                "fill_cmd_asf_presence_ping", 
                "strerror", 
                "fiid_obj_errormsg", 
                "inet_pton", 
                "strncpy", 
                "exit", 
                "select", 
                "__vfprintf_chk", 
                "bind", 
                "__fdelt_chk", 
                "__snprintf_chk", 
                "ipmi_cmd_dcmi_str", 
                "fiid_obj_create", 
                "putchar", 
                "time", 
                "FIID_OBJ_GET", 
                "ipmi_lan_sendto", 
                "memset", 
                "ioctl", 
                "socket", 
                "__gmon_start__", 
                "__cxa_finalize", 
                "__stack_chk_fail", 
                "inet_ntoa", 
                "ipmi_get_random"
            ], 
            "rpm": "freeipmi-1.5.7-1.fc27.x86_64.rpm"
        }, 
        "usr/sbin/ipmi-pet": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/sbin/ipmi-pet", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "strcasecmp", 
                "memmove", 
                "ipmi_sdr_parse_sensor_number", 
                "calloc", 
                "ipmi_sdr_ctx_errormsg", 
                "ipmi_ctx_set_target", 
                "ipmi_sel_ctx_set_parameter", 
                "ipmi_sdr_ctx_destroy", 
                "ipmi_get_oem_sensor_type_string", 
                "pthread_cond_wait", 
                "ipmi_sel_ctx_errormsg", 
                "pthread_attr_destroy", 
                "fiid_obj_get_all", 
                "ipmi_cmd_get_device_id", 
                "fiid_obj_errormsg", 
                "_ITM_registerTMCloneTable", 
                "ipmi_interpret_ctx_create", 
                "ipmi_sel_ctx_set_product_id", 
                "ipmi_sel_ctx_destroy", 
                "ipmi_sdr_ctx_create", 
                "memcpy", 
                "fiid_obj_set_all", 
                "fwrite", 
                "getuid", 
                "pthread_create", 
                "ipmi_cmd_pet_acknowledge", 
                "__libc_start_main", 
                "ipmi_ctx_create", 
                "__stack_chk_fail", 
                "getpass", 
                "pthread_attr_setdetachstate", 
                "ipmi_ctx_set_flags", 
                "fclose", 
                "strtod", 
                "ipmi_sdr_cache_create", 
                "ipmi_ctx_strerror", 
                "_ITM_deregisterTMCloneTable", 
                "ipmi_interpret_ctx_set_manufacturer_id", 
                "mktime", 
                "putchar", 
                "fiid_obj_set", 
                "__fprintf_chk", 
                "ipmi_sdr_parse_record_id_and_type", 
                "strchr", 
                "ipmi_get_sensor_type_string", 
                "__memcpy_chk", 
                "ipmi_sel_ctx_set_debug_prefix", 
                "ipmi_fru_ctx_create", 
                "pthread_mutex_lock", 
                "fputc", 
                "ipmi_iana_enterprise_numbers_string", 
                "__cxa_finalize", 
                "ipmi_interpret_load_sel_config", 
                "ipmi_sdr_parse_entity_sensor_name", 
                "ipmi_ctx_get_flags", 
                "strncmp", 
                "getpwuid_r", 
                "ipmi_sdr_cache_search_record_id", 
                "__strcat_chk", 
                "gethostname", 
                "snprintf", 
                "argp_parse", 
                "strncasecmp", 
                "__errno_location", 
                "ipmi_sdr_parse_sensor_name", 
                "fcntl", 
                "ipmi_ctx_open_outofband_2_0", 
                "exit", 
                "ipmi_fru_ctx_errnum", 
                "ipmi_ctx_errormsg", 
                "ipmi_ctx_destroy", 
                "perror", 
                "free", 
                "__strcpy_chk", 
                "strtol", 
                "fputs", 
                "__vsnprintf_chk", 
                "ipmi_sensor_units_string", 
                "mkdir", 
                "ipmi_sdr_cache_first", 
                "__vfprintf_chk", 
                "ipmi_sdr_parse_sensor_units", 
                "__snprintf_chk", 
                "strerror", 
                "__printf_chk", 
                "FIID_OBJ_GET", 
                "memchr", 
                "pthread_cond_signal", 
                "ipmi_sdr_cache_record_count", 
                "ipmi_sel_ctx_create", 
                "pthread_mutex_init", 
                "ipmi_sdr_parse_sensor_record_sharing", 
                "__sprintf_chk", 
                "ipmi_interpret_ctx_errnum", 
                "fiid_obj_create", 
                "__xstat", 
                "ipmi_sdr_cache_delete", 
                "dirname", 
                "sysconf", 
                "ipmi_sdr_parse_event_reading_type_code", 
                "ipmi_fru_type_length_field_to_string", 
                "malloc", 
                "ipmi_interpret_ctx_set_product_id", 
                "ipmi_event_reading_type_code_class", 
                "read", 
                "pthread_attr_init", 
                "ipmi_sel_ctx_set_manufacturer_id", 
                "stpcpy", 
                "ipmi_sdr_parse_entity_id_instance_type", 
                "ipmi_ctx_close", 
                "pthread_mutex_unlock", 
                "ipmi_sdr_parse_sensor_type", 
                "ipmi_sel_ctx_errnum", 
                "ipmi_sel_parse_read_record_string", 
                "qsort", 
                "fiid_obj_destroy", 
                "fopen", 
                "signal", 
                "ipmi_sdr_ctx_errnum", 
                "strsep", 
                "open", 
                "ipmi_sdr_cache_search_sensor", 
                "strtoul", 
                "__gmon_start__", 
                "strncpy", 
                "ipmi_fru_ctx_destroy", 
                "ipmi_ctx_open_outofband", 
                "strcmp", 
                "__ctype_b_loc", 
                "strtok", 
                "puts", 
                "ipmi_interpret_ctx_errormsg", 
                "ipmi_ctx_find_inband", 
                "__getdelim", 
                "getrlimit", 
                "realloc", 
                "strcpy", 
                "memset", 
                "strlen", 
                "ipmi_interpret_ctx_destroy", 
                "ipmi_interpret_ctx_set_flags", 
                "ipmi_sdr_cache_next", 
                "close", 
                "ipmi_sdr_ctx_set_debug_prefix", 
                "strdup", 
                "setrlimit", 
                "access", 
                "ipmi_ctx_errnum", 
                "ipmi_ctx_open_inband", 
                "ipmi_fru_ctx_errormsg", 
                "ipmi_sdr_cache_open", 
                "ipmi_sdr_ctx_set_flags"
            ], 
            "rpm": "freeipmi-1.5.7-1.fc27.x86_64.rpm"
        }, 
        "usr/sbin/ipmi-dcmi": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/sbin/ipmi-dcmi", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "ipmi_cmd_dcmi_get_dcmi_sensor_info", 
                "fwrite", 
                "__libc_start_main", 
                "stpcpy", 
                "ipmi_cmd_dcmi_set_asset_tag", 
                "ipmidetect_is_node_detected", 
                "strncasecmp", 
                "ipmi_ctx_set_target", 
                "fiid_template_len_bytes", 
                "__fprintf_chk", 
                "memcpy", 
                "strtoul", 
                "ipmi_timestamp_string", 
                "getuid", 
                "fputs", 
                "strchr", 
                "FIID_OBJ_GET", 
                "memset", 
                "strncmp", 
                "pthread_mutex_init", 
                "ipmi_cmd_dcmi_get_asset_tag", 
                "fiid_obj_get", 
                "close", 
                "strerror", 
                "ipmidetect_errormsg", 
                "__vfprintf_chk", 
                "ipmi_cmd_dcmi_get_dcmi_capability_info_supported_dcmi_capabilities", 
                "ipmi_cmd_dcmi_activate_deactivate_power_limit", 
                "strcmp", 
                "strdup", 
                "calloc", 
                "_ITM_registerTMCloneTable", 
                "ipmi_cmd_dcmi_set_management_controller_identifier_string", 
                "__snprintf_chk", 
                "setrlimit", 
                "memmove", 
                "signal", 
                "strcpy", 
                "access", 
                "pthread_attr_setdetachstate", 
                "read", 
                "fiid_obj_errormsg", 
                "ipmi_cmd_dcmi_get_power_reading", 
                "__memcpy_chk", 
                "ipmi_cmd_dcmi_get_dcmi_capability_info_enhanced_system_power_statistics_attributes", 
                "strtoll", 
                "__sprintf_chk", 
                "fiid_obj_destroy", 
                "ipmi_ctx_destroy", 
                "ipmi_cmd_dcmi_get_dcmi_capability_info_mandatory_platform_attributes", 
                "pthread_mutex_lock", 
                "__gmon_start__", 
                "strtok", 
                "open", 
                "strcasecmp", 
                "pthread_attr_destroy", 
                "ipmi_ctx_create", 
                "ipmi_ctx_errormsg", 
                "ipmi_ctx_close", 
                "realloc", 
                "write", 
                "argp_parse", 
                "ipmi_ctx_open_outofband_2_0", 
                "ipmidetect_load_data", 
                "fiid_obj_get_data", 
                "ipmidetect_errnum", 
                "pthread_create", 
                "memchr", 
                "strncpy", 
                "ipmi_cmd_dcmi_get_power_limit", 
                "malloc", 
                "snprintf", 
                "fiid_obj_set_all", 
                "pthread_cond_signal", 
                "ipmi_cmd_get_device_id", 
                "getpass", 
                "pthread_cond_wait", 
                "__errno_location", 
                "qsort", 
                "__ctype_b_loc", 
                "fcntl", 
                "strlen", 
                "fiid_obj_clear", 
                "ipmi_cmd_dcmi_get_management_controller_identifier_string", 
                "strtod", 
                "exit", 
                "pthread_attr_init", 
                "fflush", 
                "fiid_obj_create", 
                "ipmidetect_handle_create", 
                "fiid_obj_errnum", 
                "free", 
                "__cxa_finalize", 
                "argp_state_help", 
                "perror", 
                "ipmi_cmd_dcmi_get_dcmi_capability_info_optional_platform_attributes", 
                "_ITM_deregisterTMCloneTable", 
                "ipmi_check_completion_code", 
                "strtol", 
                "__stack_chk_fail", 
                "ipmi_ctx_find_inband", 
                "ipmi_ctx_open_inband", 
                "getrlimit", 
                "ipmi_ctx_strerror", 
                "ipmi_ctx_errnum", 
                "__vsnprintf_chk", 
                "ipmi_cmd_dcmi_get_dcmi_capability_info_manageability_access_attributes", 
                "ipmi_ctx_open_outofband", 
                "ipmi_cmd_dcmi_set_power_limit"
            ], 
            "rpm": "freeipmi-1.5.7-1.fc27.x86_64.rpm"
        }, 
        "usr/sbin/ipmi-chassis": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/sbin/ipmi-chassis", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "ipmidetect_is_node_detected", 
                "ipmi_ctx_find_inband", 
                "ipmi_cmd_get_system_boot_options_boot_flags", 
                "close", 
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize", 
                "fiid_obj_errormsg", 
                "ipmi_ctx_destroy", 
                "argp_state_help", 
                "ipmi_cmd_set_system_boot_options_boot_info_acknowledge", 
                "fwrite", 
                "ipmi_cmd_get_chassis_capabilities", 
                "strncmp", 
                "strerror", 
                "__stack_chk_fail", 
                "__snprintf_chk", 
                "strtod", 
                "__ctype_b_loc", 
                "ipmi_ctx_open_outofband", 
                "pthread_cond_wait", 
                "read", 
                "strtol", 
                "ipmidetect_handle_create", 
                "ipmidetect_load_data", 
                "memchr", 
                "__sprintf_chk", 
                "argp_parse", 
                "ipmi_cmd_get_chassis_status", 
                "pthread_create", 
                "ipmi_cmd_get_power_on_hours_counter", 
                "FIID_OBJ_GET", 
                "fiid_obj_get", 
                "__errno_location", 
                "open", 
                "ipmi_ctx_close", 
                "__vfprintf_chk", 
                "__fprintf_chk", 
                "ipmi_ctx_open_inband", 
                "getpass", 
                "strcmp", 
                "exit", 
                "ipmi_cmd_chassis_control", 
                "malloc", 
                "ipmi_cmd_chassis_identify", 
                "calloc", 
                "ipmi_cmd_set_system_boot_options_boot_flags", 
                "pthread_mutex_unlock", 
                "access", 
                "strdup", 
                "strncpy", 
                "stpcpy", 
                "memset", 
                "getuid", 
                "ipmi_ctx_create", 
                "memmove", 
                "write", 
                "free", 
                "__libc_start_main", 
                "fflush", 
                "fiid_obj_create", 
                "pthread_mutex_lock", 
                "strcasecmp", 
                "pthread_attr_destroy", 
                "ipmi_cmd_set_power_restore_policy", 
                "ipmidetect_handle_destroy", 
                "__strcat_chk", 
                "ipmi_ctx_strerror", 
                "__gmon_start__", 
                "ipmi_ctx_set_target", 
                "ipmi_ctx_open_outofband_2_0", 
                "ipmidetect_errnum", 
                "setrlimit", 
                "getrlimit", 
                "strtok", 
                "ipmi_cmd_set_power_cycle_interval", 
                "__vsnprintf_chk", 
                "pthread_cond_signal", 
                "signal", 
                "strchr", 
                "qsort", 
                "fcntl", 
                "strncasecmp", 
                "snprintf", 
                "strlen", 
                "fputs", 
                "perror", 
                "strcpy", 
                "memcpy", 
                "pthread_attr_init", 
                "ipmidetect_errormsg", 
                "pthread_mutex_init", 
                "ipmi_ctx_errnum", 
                "ipmi_ctx_errormsg", 
                "realloc", 
                "fiid_obj_destroy", 
                "ipmi_cmd_get_system_restart_cause"
            ], 
            "rpm": "freeipmi-1.5.7-1.fc27.x86_64.rpm"
        }, 
        "usr/sbin/ipmiconsole": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/sbin/ipmiconsole", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "argp_parse", 
                "ipmiconsole_ctx_errormsg", 
                "strtok", 
                "strncasecmp", 
                "puts", 
                "strerror", 
                "fwrite", 
                "__libc_start_main", 
                "strcasecmp", 
                "ipmiconsole_engine_submit_block", 
                "access", 
                "getpass", 
                "__fdelt_chk", 
                "getrlimit", 
                "ipmiconsole_ctx_destroy", 
                "fcntl", 
                "exit", 
                "__errno_location", 
                "read", 
                "__sprintf_chk", 
                "ipmiconsole_engine_init", 
                "signal", 
                "__printf_chk", 
                "strncpy", 
                "memset", 
                "strlen", 
                "__cxa_finalize", 
                "write", 
                "ipmiconsole_ctx_create", 
                "munmap", 
                "ipmiconsole_ctx_errnum", 
                "strdup", 
                "strtol", 
                "mlock", 
                "open", 
                "snprintf", 
                "ipmiconsole_engine_teardown", 
                "ipmiconsole_ctx_fd", 
                "__stack_chk_fail", 
                "__ctype_b_loc", 
                "tcgetattr", 
                "close", 
                "ipmiconsole_ctx_generate_break", 
                "__gmon_start__", 
                "__fprintf_chk", 
                "malloc", 
                "_ITM_registerTMCloneTable", 
                "strtod", 
                "_ITM_deregisterTMCloneTable", 
                "strtoul", 
                "memcpy", 
                "perror", 
                "mmap", 
                "strcmp", 
                "__snprintf_chk", 
                "free", 
                "strcpy", 
                "tcsetattr", 
                "getuid", 
                "ipmiconsole_ctx_set_config", 
                "argp_state_help"
            ], 
            "rpm": "freeipmi-1.5.7-1.fc27.x86_64.rpm"
        }, 
        "usr/sbin/ipmi-raw": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/sbin/ipmi-raw", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "pthread_attr_setdetachstate", 
                "__errno_location", 
                "strcmp", 
                "calloc", 
                "strdup", 
                "__stack_chk_fail", 
                "fwrite", 
                "ipmi_ctx_close", 
                "__ctype_b_loc", 
                "__vsnprintf_chk", 
                "ipmi_ctx_strerror", 
                "strerror", 
                "pthread_mutex_unlock", 
                "memset", 
                "memchr", 
                "ipmidetect_load_data", 
                "__libc_start_main", 
                "strncasecmp", 
                "ipmi_cmd_raw", 
                "strcpy", 
                "__sprintf_chk", 
                "open", 
                "stpcpy", 
                "ipmi_ctx_open_outofband_2_0", 
                "realloc", 
                "memcpy", 
                "qsort", 
                "fputs", 
                "fcntl", 
                "memmove", 
                "access", 
                "ipmidetect_errormsg", 
                "__snprintf_chk", 
                "pthread_cond_signal", 
                "strncpy", 
                "pthread_attr_init", 
                "ipmi_ctx_errormsg", 
                "fflush", 
                "perror", 
                "write", 
                "snprintf", 
                "strchr", 
                "fopen", 
                "ipmidetect_handle_create", 
                "__gmon_start__", 
                "ipmi_ctx_destroy", 
                "ipmi_ctx_open_inband", 
                "pthread_mutex_init", 
                "strtol", 
                "__fprintf_chk", 
                "strtod", 
                "read", 
                "__cxa_finalize", 
                "malloc", 
                "strlen", 
                "free", 
                "pthread_mutex_lock", 
                "argp_parse", 
                "ipmi_ctx_set_target", 
                "getuid", 
                "_ITM_deregisterTMCloneTable", 
                "exit", 
                "strsep", 
                "__getdelim", 
                "ipmi_ctx_create", 
                "pthread_attr_destroy", 
                "setrlimit", 
                "strcasecmp", 
                "getrlimit", 
                "__vfprintf_chk", 
                "ipmidetect_is_node_detected", 
                "pthread_create", 
                "strtoul", 
                "signal", 
                "pthread_cond_wait", 
                "strtok", 
                "ipmi_ctx_find_inband", 
                "ipmi_ctx_errnum", 
                "strncmp", 
                "ipmidetect_handle_destroy", 
                "close", 
                "ipmi_ctx_open_outofband", 
                "fclose"
            ], 
            "rpm": "freeipmi-1.5.7-1.fc27.x86_64.rpm"
        }, 
        "usr/sbin/ipmi-fru": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/sbin/ipmi-fru", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "getpass", 
                "strcpy", 
                "ipmi_iana_enterprise_numbers_string", 
                "__memcpy_chk", 
                "ipmidetect_load_data", 
                "ipmi_fru_multirecord_base_compatibility_record", 
                "ipmi_ctx_open_outofband_2_0", 
                "ipmi_ctx_open_outofband", 
                "realloc", 
                "ipmi_fru_multirecord_power_supply_information", 
                "perror", 
                "pthread_mutex_unlock", 
                "ipmi_sdr_ctx_set_flags", 
                "strncpy", 
                "stpcpy", 
                "__sprintf_chk", 
                "ipmi_fru_multirecord_extended_dc_output", 
                "getpwuid_r", 
                "getrlimit", 
                "__strcpy_chk", 
                "strtol", 
                "ipmi_fru_ctx_set_manufacturer_id", 
                "ipmi_ctx_errnum", 
                "setrlimit", 
                "ipmi_sdr_cache_delete", 
                "_ITM_deregisterTMCloneTable", 
                "ipmi_ctx_errormsg", 
                "fwrite", 
                "ipmi_fru_close_device_id", 
                "ipmi_fru_ctx_strerror", 
                "ipmi_fru_open_device_id", 
                "read", 
                "strerror", 
                "ipmi_ctx_destroy", 
                "strtok", 
                "ipmi_sdr_parse_management_controller_device_locator_parameters", 
                "ipmi_sdr_ctx_errormsg", 
                "ipmidetect_errnum", 
                "memmove", 
                "calloc", 
                "_ITM_registerTMCloneTable", 
                "strdup", 
                "fcntl", 
                "memcpy", 
                "__vsnprintf_chk", 
                "dirname", 
                "strtod", 
                "__xstat", 
                "ipmi_ctx_open_inband", 
                "ipmi_jedec_manufacturer_id_search", 
                "ipmi_fru_ctx_errormsg", 
                "pthread_create", 
                "ipmi_fru_type_length_field_to_string", 
                "ipmi_fru_next", 
                "ipmi_fru_ctx_set_flags", 
                "pthread_attr_setdetachstate", 
                "signal", 
                "ipmi_sdr_cache_iterate", 
                "exit", 
                "strncmp", 
                "ipmi_sdr_parse_device_id_string", 
                "sysconf", 
                "fputs", 
                "qsort", 
                "ipmidetect_is_node_detected", 
                "ipmi_sdr_parse_fru_device_locator_parameters", 
                "pthread_cond_signal", 
                "ipmidetect_handle_create", 
                "__fprintf_chk", 
                "argp_parse", 
                "pthread_attr_destroy", 
                "ipmi_cmd_get_device_id", 
                "memset", 
                "FIID_OBJ_GET", 
                "open", 
                "fiid_obj_create", 
                "memchr", 
                "strchr", 
                "write", 
                "ipmidetect_handle_destroy", 
                "strtoul", 
                "ipmi_fru_product_info_area", 
                "pthread_mutex_lock", 
                "ipmi_ctx_close", 
                "fiid_obj_errormsg", 
                "close", 
                "getuid", 
                "ipmi_fru_ctx_destroy", 
                "ipmi_ctx_set_target", 
                "ipmi_fru_ctx_get_flags", 
                "ipmi_ctx_find_inband", 
                "mkdir", 
                "ipmi_fru_board_info_area", 
                "strlen", 
                "ipmi_fru_open_device_id_with_buffer", 
                "strncasecmp", 
                "fiid_obj_set_all", 
                "ipmi_sdr_ctx_destroy", 
                "pthread_attr_init", 
                "fflush", 
                "__vfprintf_chk", 
                "ipmi_fru_read_data_area", 
                "fiid_obj_destroy", 
                "__snprintf_chk", 
                "pthread_cond_wait", 
                "__stack_chk_fail", 
                "gethostname", 
                "fiid_obj_get_data", 
                "malloc", 
                "ipmi_fru_multirecord_dc_load", 
                "__libc_start_main", 
                "ipmi_fru_multirecord_extended_dc_load", 
                "ipmidetect_errormsg", 
                "strcmp", 
                "ipmi_sdr_parse_device_type", 
                "fiid_template_block_len_bytes", 
                "ipmi_sdr_ctx_set_debug_prefix", 
                "ipmi_sdr_ctx_create", 
                "ipmi_fru_chassis_info_area", 
                "ipmi_fru_ctx_create", 
                "ipmi_sdr_cache_search_sensor", 
                "__gmon_start__", 
                "ipmi_ctx_create", 
                "ipmi_fru_first", 
                "ipmi_sdr_cache_create", 
                "snprintf", 
                "ipmi_fru_multirecord_oem_record", 
                "ipmi_timestamp_string", 
                "pthread_mutex_init", 
                "ipmi_fru_multirecord_dc_output", 
                "ipmi_sdr_ctx_errnum", 
                "ipmi_fru_ctx_set_debug_prefix", 
                "ipmi_fru_ctx_errnum", 
                "access", 
                "free", 
                "ipmi_fru_multirecord_extended_compatibility_record", 
                "ipmi_ctx_strerror", 
                "argp_state_help", 
                "ipmi_sdr_cache_open", 
                "fputc", 
                "ipmi_fru_ctx_set_product_id", 
                "ipmi_fru_multirecord_management_access_record", 
                "__cxa_finalize", 
                "ipmi_fru_read_multirecord_record_type_id", 
                "__errno_location"
            ], 
            "rpm": "freeipmi-1.5.7-1.fc27.x86_64.rpm"
        }, 
        "usr/sbin/ipmi-sel": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/sbin/ipmi-sel", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "ipmi_sel_ctx_destroy", 
                "ipmi_ctx_find_inband", 
                "ipmi_ctx_open_inband", 
                "ipmi_sel_clear_sel", 
                "ipmi_sel_parse_read_event_type_code", 
                "pthread_mutex_init", 
                "ipmi_sdr_parse_sensor_units", 
                "ipmi_ctx_open_outofband", 
                "memcpy", 
                "setrlimit", 
                "ipmi_sdr_parse_sensor_type", 
                "__stack_chk_fail", 
                "snprintf", 
                "strncasecmp", 
                "ipmi_interpret_ctx_set_flags", 
                "strtol", 
                "signal", 
                "ipmidetect_errnum", 
                "strtoul", 
                "access", 
                "ipmi_sdr_parse_sensor_number", 
                "ipmi_timestamp_string", 
                "ipmi_sel_parse_read_timestamp", 
                "__vsnprintf_chk", 
                "ipmi_sel_ctx_set_separator", 
                "ipmi_sdr_ctx_errnum", 
                "pthread_mutex_unlock", 
                "ipmi_sdr_parse_event_reading_type_code", 
                "ipmidetect_is_node_detected", 
                "fiid_obj_errormsg", 
                "write", 
                "ipmi_interpret_ctx_errnum", 
                "ipmidetect_load_data", 
                "ipmi_interpret_ctx_create", 
                "realloc", 
                "ipmi_cmd_get_sel_info", 
                "ipmi_sel_ctx_set_parameter", 
                "argp_state_help", 
                "ipmi_ctx_open_outofband_2_0", 
                "free", 
                "_ITM_deregisterTMCloneTable", 
                "ipmi_ctx_close", 
                "_ITM_registerTMCloneTable", 
                "ipmidetect_handle_create", 
                "qsort", 
                "ipmi_sel_ctx_set_product_id", 
                "ipmi_sdr_ctx_create", 
                "fwrite", 
                "ipmi_sel_ctx_set_manufacturer_id", 
                "pthread_cond_wait", 
                "getrlimit", 
                "pthread_create", 
                "ipmi_sdr_cache_record_count", 
                "ipmi_ctx_destroy", 
                "__ctype_b_loc", 
                "ipmi_sel_parse_read_event_data1_event_data2_flag", 
                "__xstat", 
                "ipmi_ctx_errnum", 
                "strptime", 
                "strcasecmp", 
                "ipmi_sdr_ctx_set_debug_prefix", 
                "ipmi_sel_parse", 
                "ipmi_sdr_parse_sensor_name", 
                "ipmi_sel_parse_read_record_string", 
                "ipmi_sel_ctx_create", 
                "__snprintf_chk", 
                "ipmi_sel_parse_read_record_id", 
                "strncmp", 
                "ipmi_sel_ctx_set_ipmi_version", 
                "ipmi_sel_parse_read_event_data1_event_data3_flag", 
                "getuid", 
                "ipmi_sel_delete_sel_entry", 
                "mktime", 
                "mkdir", 
                "argp_parse", 
                "__libc_start_main", 
                "ipmi_sel_ctx_errormsg", 
                "strcmp", 
                "open", 
                "ipmi_sel_ctx_register_reservation_id", 
                "ipmi_sel_parse_read_record_type", 
                "pthread_cond_signal", 
                "getpwuid_r", 
                "FIID_OBJ_GET", 
                "ipmi_interpret_ctx_set_manufacturer_id", 
                "ipmi_interpret_load_sel_config", 
                "ipmi_sdr_parse_sensor_record_sharing", 
                "sysconf", 
                "fcntl", 
                "puts", 
                "__errno_location", 
                "ipmi_sel_ctx_set_debug_prefix", 
                "stpcpy", 
                "ipmi_interpret_ctx_errormsg", 
                "strncpy", 
                "ipmi_sdr_cache_next", 
                "strlen", 
                "pthread_attr_init", 
                "malloc", 
                "ipmi_get_oem_sensor_type_string", 
                "ipmi_sdr_cache_open", 
                "read", 
                "__sprintf_chk", 
                "getpass", 
                "ipmi_sensor_units_string", 
                "ipmi_ctx_errormsg", 
                "dirname", 
                "strtok", 
                "strcpy", 
                "pthread_attr_destroy", 
                "ipmi_sel_parse_read_record", 
                "ipmi_sdr_parse_entity_sensor_name", 
                "__gmon_start__", 
                "ipmi_sdr_parse_record_id_and_type", 
                "strchr", 
                "memmove", 
                "fiid_obj_create", 
                "__strcpy_chk", 
                "ipmi_sdr_cache_search_sensor", 
                "ipmi_sel_parse_record_ids", 
                "memset", 
                "fputc", 
                "fiid_obj_destroy", 
                "ipmi_sel_record_type_class", 
                "ipmi_ctx_set_target", 
                "time", 
                "__strcat_chk", 
                "ipmi_sdr_ctx_errormsg", 
                "ipmi_sel_ctx_errnum", 
                "fputs", 
                "fflush", 
                "__vfprintf_chk", 
                "ipmi_ctx_strerror", 
                "ipmi_sdr_cache_search_record_id", 
                "pthread_mutex_lock", 
                "ipmi_ctx_create", 
                "ipmi_sdr_cache_delete", 
                "ipmi_interpret_ctx_set_product_id", 
                "__fprintf_chk", 
                "ipmi_cmd_get_device_id", 
                "perror", 
                "pthread_attr_setdetachstate", 
                "strerror", 
                "ipmidetect_errormsg", 
                "ipmi_sel_parse_read_sensor_type", 
                "exit", 
                "ipmi_cmd_get_sel_allocation_info", 
                "ipmi_sel_parse_read_event_data3", 
                "ipmi_event_reading_type_code_class", 
                "ipmi_sdr_cache_create", 
                "ipmi_sel_parse_read_event_data2", 
                "ipmi_sdr_cache_first", 
                "ipmi_sdr_ctx_destroy", 
                "memchr", 
                "gethostname", 
                "__memcpy_chk", 
                "strdup", 
                "calloc", 
                "close", 
                "ipmi_get_sensor_type_string", 
                "ipmi_sel_ctx_set_flags", 
                "ipmidetect_handle_destroy", 
                "strtod"
            ], 
            "rpm": "freeipmi-1.5.7-1.fc27.x86_64.rpm"
        }, 
        "usr/sbin/bmc-info": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/sbin/bmc-info", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "ipmi_ctx_get_flags", 
                "strtoul", 
                "getrlimit", 
                "malloc", 
                "exit", 
                "ipmi_cmd_get_system_info_parameters_operating_system_name_first_set", 
                "pthread_cond_wait", 
                "strncasecmp", 
                "ipmi_ctx_destroy", 
                "strchr", 
                "ipmidetect_handle_destroy", 
                "ipmi_ctx_strerror", 
                "ipmi_ctx_set_target", 
                "ipmi_ctx_errnum", 
                "ipmi_check_completion_code", 
                "pthread_mutex_init", 
                "realloc", 
                "ipmi_cmd_get_system_info_parameters_present_os_version_number", 
                "ipmidetect_is_node_detected", 
                "__stack_chk_fail", 
                "pthread_cond_signal", 
                "ipmi_ctx_find_inband", 
                "qsort", 
                "ipmi_iana_enterprise_numbers_string", 
                "fiid_obj_copy", 
                "calloc", 
                "read", 
                "strerror", 
                "pthread_mutex_lock", 
                "ipmi_cmd_get_system_info_parameters_primary_operating_system_name", 
                "ipmi_cmd_get_system_info_parameters_present_os_version_number_first_set", 
                "ipmi_ctx_create", 
                "FIID_OBJ_GET", 
                "__sprintf_chk", 
                "__gmon_start__", 
                "fiid_obj_errormsg", 
                "memmove", 
                "__vfprintf_chk", 
                "ipmi_cmd_get_device_id", 
                "ipmi_cmd_get_device_guid", 
                "ipmi_cmd_get_system_info_parameters_system_name_first_set", 
                "memchr", 
                "ipmi_cmd_get_system_info_parameters_system_firmware_version", 
                "strlen", 
                "fflush", 
                "pthread_mutex_unlock", 
                "fiid_obj_get", 
                "ipmi_cmd_get_channel_info", 
                "perror", 
                "fiid_obj_destroy", 
                "signal", 
                "_ITM_registerTMCloneTable", 
                "write", 
                "ipmidetect_handle_create", 
                "fcntl", 
                "ipmidetect_load_data", 
                "__fprintf_chk", 
                "fwrite", 
                "ipmidetect_errormsg", 
                "strcmp", 
                "ipmi_cmd_get_system_guid", 
                "pthread_create", 
                "__vsnprintf_chk", 
                "strcasecmp", 
                "argp_state_help", 
                "open", 
                "fputs", 
                "ipmi_ctx_errormsg", 
                "memset", 
                "strtol", 
                "strtod", 
                "strdup", 
                "strncmp", 
                "__libc_start_main", 
                "ipmi_cmd_get_system_info_parameters_base_os_hypervisor_url_first_set", 
                "argp_parse", 
                "strtok", 
                "getpass", 
                "free", 
                "ipmi_cmd_get_system_info_parameters_primary_operating_system_name_first_set", 
                "__snprintf_chk", 
                "pthread_attr_destroy", 
                "access", 
                "ipmi_cmd_get_system_info_parameters_base_os_hypervisor_url", 
                "ipmi_cmd_get_system_info_parameters_system_firmware_version_first_set", 
                "snprintf", 
                "pthread_attr_init", 
                "ipmi_cmd_get_system_info_parameters_operating_system_name", 
                "fiid_obj_clear", 
                "__errno_location", 
                "ipmi_cmd_get_system_info_parameters_bmc_url_first_set", 
                "ipmi_cmd_get_system_info_parameters_system_name", 
                "memcpy", 
                "ipmi_ctx_open_outofband_2_0", 
                "ipmi_ctx_open_inband", 
                "fiid_obj_get_data", 
                "ipmi_ctx_open_outofband", 
                "ipmi_ctx_set_flags", 
                "ipmi_cmd_get_system_info_parameters_bmc_url", 
                "ipmidetect_errnum", 
                "__ctype_b_loc", 
                "strncpy", 
                "stpcpy", 
                "_ITM_deregisterTMCloneTable", 
                "fiid_obj_create", 
                "setrlimit", 
                "__cxa_finalize", 
                "strcpy", 
                "pthread_attr_setdetachstate", 
                "close"
            ], 
            "rpm": "freeipmi-1.5.7-1.fc27.x86_64.rpm"
        }, 
        "usr/sbin/ipmi-oem": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/sbin/ipmi-oem", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "fiid_obj_destroy", 
                "mkdir", 
                "ipmi_sdr_parse_sensor_record_sharing", 
                "getpass", 
                "memcpy", 
                "strncasecmp", 
                "ipmi_sdr_cache_create", 
                "ipmi_get_channel_numbers", 
                "ipmi_cmd_oem_intel_node_manager_get_node_manager_statistics", 
                "memchr", 
                "gethostname", 
                "fcntl", 
                "_ITM_registerTMCloneTable", 
                "ipmidetect_is_node_detected", 
                "ipmi_cmd_set_system_info_parameters", 
                "ipmi_sdr_ctx_destroy", 
                "write", 
                "getpwuid_r", 
                "FIID_OBJ_GET", 
                "ipmidetect_errnum", 
                "ipmi_sdr_cache_iterate", 
                "ipmi_cmd_set_lan_configuration_parameters", 
                "pthread_mutex_init", 
                "fflush", 
                "ipmi_get_oem_sensor_type_string", 
                "strerror", 
                "ipmi_timestamp_string", 
                "strdup", 
                "fiid_obj_clear", 
                "ipmi_sdr_cache_record_count", 
                "memset", 
                "ipmi_cmd_oem_intel_node_manager_get_turbo_synchronization_ratio", 
                "ipmi_sdr_parse_device_id_string", 
                "ipmi_sdr_ctx_set_flags", 
                "ipmi_cmd_raw", 
                "strcasecmp", 
                "ipmi_sdr_oem_parse_intel_node_manager", 
                "ipmi_sdr_ctx_errnum", 
                "strtol", 
                "_ITM_deregisterTMCloneTable", 
                "fiid_obj_get_data", 
                "__stack_chk_fail", 
                "inet_ntop", 
                "ipmi_sensor_units_string", 
                "ipmi_cmd_oem_intel_node_manager_set_node_manager_power_draw_range", 
                "ipmi_ctx_find_inband", 
                "ipmi_cmd_oem_intel_node_manager_get_node_manager_policy_suspend_periods", 
                "read", 
                "pthread_attr_init", 
                "fiid_obj_errormsg", 
                "ipmi_ctx_open_inband", 
                "ipmi_cmd_get_lan_configuration_parameters_mac_address", 
                "ipmi_sdr_parse_sensor_name", 
                "__ctype_b_loc", 
                "strcpy", 
                "__errno_location", 
                "pthread_cond_wait", 
                "ipmi_sdr_parse_event_reading_type_code", 
                "sysconf", 
                "setrlimit", 
                "ipmi_cmd_oem_intel_node_manager_get_node_manager_alert_destination", 
                "ipmi_sdr_cache_next", 
                "ipmi_get_channel_number", 
                "ipmi_cmd_get_sol_configuration_parameters", 
                "ipmi_ctx_errnum", 
                "fiid_obj_create", 
                "ipmi_sdr_ctx_create", 
                "pthread_create", 
                "perror", 
                "__strcpy_chk", 
                "pthread_cond_signal", 
                "ipmi_sdr_cache_delete", 
                "ipmi_sdr_parse_entity_id_instance_type", 
                "ipmi_cmd_oem_intel_node_manager_set_node_manager_policy", 
                "getuid", 
                "__libc_start_main", 
                "strncpy", 
                "__vsnprintf_chk", 
                "ipmi_sdr_cache_search_sensor", 
                "fputc", 
                "gettimeofday", 
                "pthread_attr_destroy", 
                "__sprintf_chk", 
                "ipmi_sdr_cache_record_read", 
                "access", 
                "strtoul", 
                "__snprintf_chk", 
                "ipmidetect_handle_create", 
                "ipmi_cmd_get_device_id", 
                "ipmi_cmd_oem_intel_node_manager_set_node_manager_alert_destination", 
                "ipmi_ctx_strerror", 
                "ipmi_cmd_oem_intel_node_manager_enable_disable_node_manager_policy_control", 
                "putchar", 
                "ipmi_cmd_oem_intel_node_manager_set_turbo_synchronization_ratio", 
                "ipmi_sdr_cache_open", 
                "ipmi_cmd_oem_intel_node_manager_set_node_manager_policy_alert_thresholds", 
                "__gmon_start__", 
                "calloc", 
                "__memcpy_chk", 
                "ipmi_cmd_get_user_name", 
                "ipmi_ctx_open_outofband_2_0", 
                "pthread_mutex_unlock", 
                "pthread_attr_setdetachstate", 
                "__printf_chk", 
                "snprintf", 
                "ipmi_cmd_oem_intel_node_manager_get_node_manager_version", 
                "ipmi_ctx_create", 
                "ipmi_sdr_parse_sensor_type", 
                "free", 
                "ipmi_cmd_oem_intel_node_manager_set_node_manager_alert_destination_ipmb", 
                "ipmi_cmd_get_lan_configuration_parameters", 
                "ipmi_ctx_errormsg", 
                "ipmi_ctx_set_target", 
                "strncmp", 
                "ipmi_sdr_ctx_set_debug_prefix", 
                "ipmi_sdr_parse_id_string", 
                "strlen", 
                "ipmi_cmd_set_sol_configuration_parameters", 
                "strtod", 
                "__cxa_finalize", 
                "sleep", 
                "__xstat", 
                "ipmidetect_handle_destroy", 
                "ipmi_cmd_oem_intel_node_manager_get_node_manager_capabilities", 
                "realloc", 
                "ipmi_sdr_parse_sensor_units", 
                "ipmi_event_reading_type_code_class", 
                "strcmp", 
                "ipmi_get_sensor_type_string", 
                "malloc", 
                "sscanf", 
                "puts", 
                "signal", 
                "ipmidetect_load_data", 
                "ipmi_cmd_master_write_read", 
                "ipmi_sdr_ctx_errormsg", 
                "ipmi_ctx_open_outofband", 
                "ipmi_cmd_get_sensor_reading", 
                "ipmi_check_completion_code", 
                "ipmi_sdr_cache_first", 
                "ipmi_ctx_close", 
                "ipmi_sdr_parse_sensor_number", 
                "ipmidetect_errormsg", 
                "getrlimit", 
                "open", 
                "__vfprintf_chk", 
                "memmove", 
                "ipmi_cmd_oem_intel_node_manager_reset_node_manager_statistics", 
                "argp_parse", 
                "ipmi_completion_code_strerror_r", 
                "ipmi_cmd_oem_intel_node_manager_get_node_manager_policy_alert_thresholds", 
                "ipmi_cmd_get_user_access", 
                "pthread_mutex_lock", 
                "stpcpy", 
                "exit", 
                "__fprintf_chk", 
                "close", 
                "strtok", 
                "qsort", 
                "ipmi_sdr_parse_entity_sensor_name", 
                "ipmi_cmd_oem_intel_node_manager_get_node_manager_policy", 
                "dirname", 
                "ipmi_sdr_cache_search_record_id", 
                "ipmi_cmd_oem_intel_node_manager_set_node_manager_policy_suspend_periods", 
                "ipmi_sdr_parse_record_id_and_type", 
                "ipmi_ctx_destroy", 
                "strchr", 
                "fputs", 
                "ipmi_sdr_parse_oem_data", 
                "ipmi_cmd_oem_intel_node_manager_set_node_manager_policy_boot_time_policy"
            ], 
            "rpm": "freeipmi-1.5.7-1.fc27.x86_64.rpm"
        }, 
        "usr/sbin/ipmiping": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/sbin/ipmiping", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "fwrite", 
                "time", 
                "__stack_chk_fail", 
                "__gmon_start__", 
                "bind", 
                "ipmi_dump_lan_packet", 
                "_ITM_deregisterTMCloneTable", 
                "strrchr", 
                "srand", 
                "__fprintf_chk", 
                "fill_lan_session_hdr", 
                "ipmi_lan_recvfrom", 
                "ioctl", 
                "inet_ntoa", 
                "strncpy", 
                "socket", 
                "memset", 
                "putchar", 
                "select", 
                "inet_pton", 
                "__errno_location", 
                "fill_lan_msg_hdr", 
                "fill_cmd_get_channel_authentication_capabilities", 
                "strtol", 
                "ipmi_get_random", 
                "__h_errno_location", 
                "FIID_OBJ_GET", 
                "ipmi_lan_sendto", 
                "ipmi_lan_check_net_fn", 
                "ipmi_cmd_str", 
                "fiid_obj_destroy", 
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize", 
                "ipmi_lan_check_packet_checksum", 
                "fill_rmcp_hdr_ipmi", 
                "__libc_start_main", 
                "__snprintf_chk", 
                "assemble_ipmi_lan_pkt", 
                "signal", 
                "fiid_obj_create", 
                "strchr", 
                "ipmi_check_completion_code_success", 
                "__fdelt_chk", 
                "__printf_chk", 
                "exit", 
                "strerror", 
                "fiid_obj_errormsg", 
                "ipmi_check_cmd", 
                "close", 
                "ipmi_cmd_dcmi_str", 
                "unassemble_ipmi_lan_pkt", 
                "getopt", 
                "__vfprintf_chk"
            ], 
            "rpm": "freeipmi-1.5.7-1.fc27.x86_64.rpm"
        }, 
        "usr/sbin/ipmipower": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/sbin/ipmipower", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "fiid_obj_packet_valid", 
                "read", 
                "ipmi_dump_lan_packet", 
                "ipmi_lan_check_packet_session_authentication_code", 
                "gettimeofday", 
                "ipmidetect_handle_create", 
                "ipmi_cmd_str", 
                "gethostbyname", 
                "__errno_location", 
                "ipmi_cipher_suite_id_to_algorithms", 
                "strdup", 
                "strtol", 
                "ipmi_check_authentication_capabilities_username", 
                "perror", 
                "assemble_rmcp_pkt", 
                "fill_cmd_get_chassis_status", 
                "ipmidetect_load_data", 
                "malloc", 
                "__cxa_finalize", 
                "ipmi_check_authentication_capabilities_k_g", 
                "ipmidetect_errormsg", 
                "ipmi_calculate_rakp_3_key_exchange_authentication_code", 
                "memcpy", 
                "strtok", 
                "fill_rmcpplus_rakp_message_3", 
                "fill_cmd_close_session", 
                "strcat", 
                "strcmp", 
                "getpass", 
                "fwrite", 
                "ipmi_lan_sendto", 
                "__syslog_chk", 
                "exit", 
                "mlock", 
                "ipmidetect_errnum", 
                "ipmi_check_authentication_capabilities_ipmi_2_0", 
                "unassemble_rmcp_pkt", 
                "qsort", 
                "fill_rmcpplus_open_session", 
                "strncmp", 
                "ipmi_lan_check_packet_checksum", 
                "bind", 
                "fiid_obj_destroy", 
                "ipmi_get_random", 
                "hstrerror", 
                "fflush", 
                "ipmi_check_session_sequence_number_1_5", 
                "strcasecmp", 
                "unassemble_ipmi_lan_pkt", 
                "fill_cmd_get_channel_authentication_capabilities", 
                "fill_lan_msg_hdr", 
                "fiid_obj_create", 
                "ipmidetect_is_node_detected", 
                "fill_cmd_asf_presence_ping", 
                "__sprintf_chk", 
                "ipmi_rmcpplus_check_packet_session_authentication_code", 
                "fiid_obj_set", 
                "ipmi_lan_check_checksum", 
                "__vsnprintf_chk", 
                "ipmi_check_open_session_maximum_privilege", 
                "fill_rmcp_hdr_asf", 
                "access", 
                "ipmi_is_ipmi_1_5_packet", 
                "ipmi_rmcpplus_check_payload_pad", 
                "mmap", 
                "fill_cmd_get_session_challenge", 
                "_ITM_deregisterTMCloneTable", 
                "__stack_chk_fail", 
                "fiid_obj_clear", 
                "ipmi_rmcpplus_check_rakp_2_key_exchange_authentication_code", 
                "memchr", 
                "ipmi_cmd_dcmi_str", 
                "ipmidetect_handle_destroy", 
                "__ctype_b_loc", 
                "ipmi_rmcpplus_check_rakp_4_integrity_check_value", 
                "ipmi_check_cmd", 
                "memset", 
                "getuid", 
                "setrlimit", 
                "ipmi_dump_rmcpplus_packet", 
                "strtoul", 
                "strncpy", 
                "ipmi_check_authentication_capabilities_authentication_type", 
                "strtod", 
                "fill_rmcpplus_rakp_message_1", 
                "ipmi_rmcpplus_init", 
                "fill_cmd_chassis_control", 
                "socket", 
                "fill_rmcpplus_session_hdr", 
                "getrlimit", 
                "fcntl", 
                "fiid_obj_get_data", 
                "write", 
                "strerror", 
                "FIID_OBJ_GET", 
                "poll", 
                "__h_errno_location", 
                "fill_cmd_set_session_privilege_level", 
                "__gmon_start__", 
                "free", 
                "calloc", 
                "__strncat_chk", 
                "memmove", 
                "munmap", 
                "__strcpy_chk", 
                "fiid_obj_set_data", 
                "close", 
                "ipmi_lan_recvfrom", 
                "__libc_start_main", 
                "strlen", 
                "fill_lan_session_hdr", 
                "assemble_ipmi_lan_pkt", 
                "fill_cmd_activate_session", 
                "stpcpy", 
                "strncasecmp", 
                "strcpy", 
                "ipmi_check_session_sequence_number_2_0", 
                "recvfrom", 
                "ipmi_rmcpplus_check_integrity_pad", 
                "fill_cmd_chassis_identify", 
                "fiid_obj_errormsg", 
                "__snprintf_chk", 
                "open", 
                "snprintf", 
                "__fprintf_chk", 
                "fill_cmd_get_sensor_reading", 
                "argp_parse", 
                "_ITM_registerTMCloneTable", 
                "fill_rmcp_hdr_ipmi", 
                "fiid_obj_clear_field", 
                "ipmi_check_session_sequence_number_2_0_init", 
                "unassemble_ipmi_rmcpplus_pkt", 
                "strchr", 
                "ipmi_calculate_rmcpplus_session_keys", 
                "realloc", 
                "assemble_ipmi_rmcpplus_pkt", 
                "fill_rmcpplus_session_trlr"
            ], 
            "rpm": "freeipmi-1.5.7-1.fc27.x86_64.rpm"
        }, 
        "usr/sbin/ipmidetect": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/sbin/ipmidetect", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "__fprintf_chk", 
                "memchr", 
                "__libc_start_main", 
                "ipmidetect_handle_destroy", 
                "strncpy", 
                "exit", 
                "ipmidetect_get_undetected_nodes_string", 
                "strlen", 
                "write", 
                "__errno_location", 
                "memcpy", 
                "strtok", 
                "qsort", 
                "strdup", 
                "_ITM_registerTMCloneTable", 
                "strerror", 
                "ipmidetect_errnum", 
                "__ctype_b_loc", 
                "snprintf", 
                "fcntl", 
                "__gmon_start__", 
                "malloc", 
                "ipmidetect_get_detected_nodes_string", 
                "__stack_chk_fail", 
                "memset", 
                "_ITM_deregisterTMCloneTable", 
                "strrchr", 
                "read", 
                "__syslog_chk", 
                "realloc", 
                "stpcpy", 
                "fputc", 
                "strtoul", 
                "ipmidetect_handle_create", 
                "ipmidetect_is_node_undetected", 
                "strtol", 
                "strcmp", 
                "ipmidetect_errormsg", 
                "argp_parse", 
                "ipmidetect_load_data", 
                "strchr", 
                "__cxa_finalize", 
                "free", 
                "__snprintf_chk", 
                "strncmp"
            ], 
            "rpm": "freeipmi-1.5.7-1.fc27.x86_64.rpm"
        }, 
        "usr/sbin/ipmi-config": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/sbin/ipmi-config", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "ipmi_cmd_get_user_access", 
                "__xstat", 
                "getpwuid_r", 
                "ipmi_cmd_set_lan_configuration_parameters_default_gateway_mac_address", 
                "ipmi_cmd_set_pef_configuration_parameters_pef_control", 
                "ipmi_sdr_parse_sensor_number", 
                "ipmi_cmd_get_pef_configuration_parameters_alert_policy_table", 
                "ipmi_sdr_parse_id_string", 
                "ipmidetect_load_data", 
                "__vsnprintf_chk", 
                "strlen", 
                "__cxa_finalize", 
                "ipmi_ctx_errnum", 
                "__libc_start_main", 
                "_ITM_registerTMCloneTable", 
                "fiid_obj_destroy", 
                "ipmi_sdr_parse_event_reading_type_code", 
                "ipmi_cmd_get_pef_configuration_parameters_pef_startup_delay", 
                "ipmi_cmd_get_lan_configuration_parameters_destination_type", 
                "ipmi_cmd_get_lan_configuration_parameters_number_of_destinations", 
                "ipmi_cmd_get_sol_configuration_parameters_sol_authentication", 
                "strcasecmp", 
                "getuid", 
                "ipmi_sdr_parse_threshold_assertion_supported", 
                "getrlimit", 
                "dirname", 
                "ipmi_cmd_set_channel_security_keys", 
                "ipmi_cmd_get_lan_configuration_parameters_default_gateway_mac_address", 
                "ipmi_cmd_set_lan_configuration_parameters_gratuitous_arp_interval", 
                "ipmi_cmd_set_lan_configuration_parameters_destination_addresses", 
                "ipmi_cmd_get_lan_configuration_parameters_bad_password_threshold", 
                "ipmi_cmd_set_system_boot_options_boot_flags", 
                "ipmi_ctx_open_outofband", 
                "strncpy", 
                "ipmi_cmd_get_pef_configuration_parameters_pef_action_global_control", 
                "memmove", 
                "ipmi_ctx_open_outofband_2_0", 
                "snprintf", 
                "read", 
                "ipmi_cmd_set_serial_modem_configuration_call_retry_interval", 
                "ipmidetect_handle_destroy", 
                "ipmi_cmd_dcmi_set_power_limit", 
                "ipmi_cmd_get_lan_configuration_parameters_backup_gateway_address", 
                "fill_cmd_set_user_password", 
                "strchr", 
                "ipmi_cmd_get_pef_configuration_parameters_event_filter_table", 
                "ipmi_ctx_open_inband", 
                "ipmi_sdr_ctx_errormsg", 
                "strstr", 
                "ipmi_cmd_get_sensor_hysteresis", 
                "ipmi_cmd_get_channel_access", 
                "ipmi_cmd_get_sol_configuration_parameters_sol_volatile_bit_rate", 
                "fclose", 
                "access", 
                "ipmi_cmd_get_pef_configuration_parameters_pef_control", 
                "ipmi_cmd_dcmi_set_asset_tag", 
                "ipmi_cmd_set_serial_modem_configuration_page_blackout_interval", 
                "setrlimit", 
                "sleep", 
                "ipmi_cmd_get_lan_configuration_parameters_destination_addresses", 
                "ipmi_cmd_set_sol_configuration_parameters_sol_authentication", 
                "pthread_cond_wait", 
                "ipmi_cmd_set_pef_configuration_parameters_pef_alert_startup_delay", 
                "ipmi_get_channel_numbers", 
                "fiid_obj_create", 
                "pthread_mutex_lock", 
                "realloc", 
                "pthread_create", 
                "close", 
                "ipmi_cmd_set_pef_configuration_parameters_pef_startup_delay", 
                "__ctype_b_loc", 
                "fiid_obj_set_data", 
                "ipmi_cmd_set_lan_configuration_parameters_community_string", 
                "strcmp", 
                "__strcpy_chk", 
                "ipmi_sdr_parse_sensor_type", 
                "ipmi_sdr_ctx_set_debug_prefix", 
                "ipmi_cmd_set_sol_configuration_parameters_character_accumulate_interval_and_send_threshold", 
                "ipmi_sdr_cache_delete", 
                "ipmi_cmd_set_pef_configuration_parameters_alert_policy_table", 
                "ipmi_cmd_get_lan_configuration_parameters_bmc_generated_arp_control", 
                "fgets", 
                "ipmi_cmd_set_system_boot_options_boot_info_acknowledge", 
                "ipmi_event_reading_type_code_class", 
                "ipmi_cmd_get_lan_configuration_parameters_authentication_type_enables", 
                "ipmi_sensor_decode_value", 
                "signal", 
                "sscanf", 
                "ipmi_cmd_set_lan_configuration_parameters_bmc_generated_arp_control", 
                "memchr", 
                "ipmi_cmd_set_user_password", 
                "ipmidetect_handle_create", 
                "ipmi_cmd_get_pef_configuration_parameters_alert_string", 
                "ipmi_cmd_set_lan_configuration_parameters_mac_address", 
                "__vfprintf_chk", 
                "ipmi_cmd_get_sensor_event_enable", 
                "strncasecmp", 
                "__memcpy_chk", 
                "unlink", 
                "free", 
                "strtok", 
                "ipmi_sdr_parse_record_id_and_type", 
                "ipmi_sdr_ctx_create", 
                "exit", 
                "ipmi_cmd_set_lan_configuration_parameters_default_gateway_address", 
                "ipmi_cmd_get_lan_configuration_parameters_backup_gateway_mac_address", 
                "ipmi_cmd_set_pef_configuration_parameters_alert_strings", 
                "ipmi_cmd_set_sol_configuration_parameters_sol_payload_port_number", 
                "ipmi_sdr_parse_sensor_decoding_data", 
                "ipmi_cmd_set_power_restore_policy", 
                "ipmi_sdr_parse_threshold_deassertion_supported", 
                "ipmi_sdr_ctx_destroy", 
                "ipmi_cmd_get_system_boot_options_boot_flags", 
                "strtoul", 
                "memset", 
                "ipmi_sensor_units_string", 
                "ipmi_ctx_set_target", 
                "ipmi_get_sensor_type_string", 
                "ipmi_sdr_ctx_set_flags", 
                "ipmi_cmd_get_lan_configuration_parameters_secondary_rmcp_port_number", 
                "ipmi_cmd_set_lan_configuration_parameters_subnet_mask", 
                "ipmi_cmd_get_sensor_thresholds", 
                "fflush", 
                "ipmi_check_completion_code_success", 
                "ipmi_cmd_set_lan_configuration_parameters_vlan_priority", 
                "ipmi_sdr_parse_sensor_capabilities", 
                "ipmi_cmd_set_serial_modem_configuration_ipmi_messaging_comm_settings", 
                "strncmp", 
                "write", 
                "fopen", 
                "fputc", 
                "qsort", 
                "ipmi_cmd_get_lan_configuration_parameters_mac_address", 
                "ipmi_cmd_set_user_access", 
                "ipmi_sdr_cache_search_record_id", 
                "strtod", 
                "calloc", 
                "ipmi_cmd_set_pef_configuration_parameters_alert_string_keys", 
                "ipmi_cmd_get_sol_configuration_parameters_sol_payload_port_number", 
                "malloc", 
                "ipmi_ctx_close", 
                "ipmi_sdr_cache_open", 
                "ipmi_cmd_get_lan_configuration_parameters_rmcpplus_messaging_cipher_suite_entries", 
                "ipmi_cmd_set_sol_configuration_parameters_sol_retry", 
                "stpcpy", 
                "ipmi_cmd_set_lan_configuration_parameters_ip_address", 
                "strdup", 
                "sysconf", 
                "ipmi_cmd_get_lan_configuration_parameters_community_string", 
                "ipmi_cmd_set_lan_configuration_parameters_destination_type", 
                "pthread_attr_init", 
                "__errno_location", 
                "ipmi_ctx_find_inband", 
                "ipmi_cmd_set_lan_configuration_parameters_vlan_id", 
                "ipmi_cmd_set_system_boot_options_BMC_boot_flag_valid_bit_clearing", 
                "pthread_mutex_init", 
                "ipmi_sdr_cache_create", 
                "ipmi_cmd_get_pef_configuration_parameters_pef_alert_startup_delay", 
                "fiid_obj_clear", 
                "ipmi_ctx_errormsg", 
                "__sprintf_chk", 
                "ipmi_sdr_ctx_errnum", 
                "gethostname", 
                "ipmi_cmd_set_lan_configuration_parameters_rmcpplus_messaging_cipher_suite_privilege_levels", 
                "ipmi_cmd_dcmi_get_asset_tag", 
                "ipmi_cmd_get_pef_configuration_parameters_number_of_event_filters", 
                "ipmi_cmd_get_user_payload_access", 
                "strcpy", 
                "__strcat_chk", 
                "fwrite", 
                "ipmi_cmd_get_pef_configuration_parameters_number_of_alert_policy_entries", 
                "ipmi_cmd_dcmi_get_management_controller_identifier_string", 
                "strerror", 
                "ipmi_cmd_set_lan_configuration_parameters_bad_password_threshold", 
                "ipmi_cmd_get_lan_configuration_parameters_primary_rmcp_port_number", 
                "ipmi_cmd_get_sol_configuration_parameters_character_accumulate_interval_and_send_threshold", 
                "ipmidetect_is_node_detected", 
                "ipmi_cmd_get_lan_configuration_parameters_ip_address_source", 
                "pthread_attr_setdetachstate", 
                "ipmidetect_errormsg", 
                "ipmi_cmd_set_user_payload_access", 
                "pthread_attr_destroy", 
                "perror", 
                "ipmi_cmd_get_lan_configuration_parameters_vlan_priority", 
                "ipmi_sdr_parse_assertion_supported", 
                "ipmi_cmd_set_lan_configuration_parameters_backup_gateway_address", 
                "ipmi_ctx_create", 
                "ipmi_cmd_get_pef_configuration_parameters_alert_string_keys", 
                "fiid_obj_get", 
                "ipmi_cmd_set_sensor_hysteresis", 
                "ipmi_cmd_set_lan_configuration_parameters_secondary_rmcp_port_number", 
                "ipmi_sdr_cache_iterate", 
                "pthread_cond_signal", 
                "ipmi_cmd_get_chassis_status", 
                "fiid_obj_get_data", 
                "ipmi_cmd_set_sol_configuration_parameters_sol_non_volatile_bit_rate", 
                "ipmi_sensor_decode_raw_value", 
                "ipmi_cmd_get_sol_configuration_parameters_sol_retry", 
                "ipmidetect_errnum", 
                "ipmi_cmd_get_lan_configuration_parameters_gratuitous_arp_interval", 
                "ipmi_cmd_set_serial_modem_configuration_connection_mode", 
                "ipmi_cmd_set_sol_configuration_parameters_sol_volatile_bit_rate", 
                "ipmi_cmd_set_sol_configuration_parameters_sol_enable", 
                "ipmi_cmd_get_lan_configuration_parameters_default_gateway_address", 
                "ipmi_cmd_get_lan_configuration_parameters_vlan_id", 
                "ipmi_cmd_set_lan_configuration_parameters_authentication_type_enables", 
                "ipmi_cmd_get_sol_configuration_parameters_sol_payload_channel", 
                "ipmi_cmd_get_serial_modem_configuration_page_blackout_interval", 
                "fputs", 
                "ipmi_cmd_set_pef_configuration_parameters_pef_action_global_control", 
                "_ITM_deregisterTMCloneTable", 
                "ipmi_cmd_get_pef_capabilities", 
                "ipmi_cmd_set_lan_configuration_parameters_primary_rmcp_port_number", 
                "pthread_mutex_unlock", 
                "ipmi_cmd_set_pef_configuration_parameters_event_filter_table", 
                "ipmi_cmd_set_lan_configuration_parameters_backup_gateway_mac_address", 
                "ipmi_sdr_parse_deassertion_supported", 
                "argp_state_help", 
                "mkdir", 
                "ipmi_cmd_get_serial_modem_configuration_ipmi_messaging_comm_settings", 
                "fiid_obj_errormsg", 
                "FIID_OBJ_GET", 
                "ipmi_cmd_set_lan_configuration_parameters_ip_address_source", 
                "ipmi_cmd", 
                "ipmi_cmd_set_channel_access", 
                "memcpy", 
                "ipmi_cmd_get_lan_configuration_parameters_rmcpplus_messaging_cipher_suite_entry_support", 
                "ipmi_ctx_destroy", 
                "ipmi_cmd_get_sol_configuration_parameters_sol_enable", 
                "ipmi_cmd_get_lan_configuration_parameters_ipv4_header_parameters", 
                "ipmi_ctx_strerror", 
                "ipmi_cmd_set_sensor_event_enable", 
                "ipmi_cmd_dcmi_get_power_limit", 
                "ipmi_cmd_get_lan_configuration_parameters_authentication_type_support", 
                "ipmi_sdr_cache_search_sensor", 
                "fiid_obj_errnum", 
                "ipmi_cmd_get_lan_configuration_parameters_subnet_mask", 
                "ipmi_sdr_parse_threshold_settable", 
                "__snprintf_chk", 
                "ipmi_sdr_parse_threshold_readable", 
                "fcntl", 
                "ipmi_cmd_get_serial_modem_configuration_connection_mode", 
                "ipmi_cmd_set_power_cycle_interval", 
                "ipmi_cmd_set_front_panel_enables", 
                "ipmi_cmd_get_pef_configuration_parameters_number_of_alert_strings", 
                "ipmi_sdr_parse_sensor_units", 
                "ipmi_check_completion_code", 
                "ipmi_cmd_get_lan_configuration_parameters_rmcpplus_messaging_cipher_suite_privilege_levels", 
                "ipmi_cmd_dcmi_set_management_controller_identifier_string", 
                "ipmi_cmd_set_user_name", 
                "ipmi_cmd_get_user_name", 
                "ipmi_cmd_get_serial_modem_configuration_call_retry_interval", 
                "__stack_chk_fail", 
                "ipmi_cmd_get_lan_configuration_parameters_ip_address", 
                "strtok_r", 
                "getpass", 
                "ipmi_cmd_set_sensor_thresholds", 
                "ipmi_cmd_get_sol_configuration_parameters_sol_non_volatile_bit_rate", 
                "__fprintf_chk", 
                "strtol", 
                "__gmon_start__", 
                "inet_aton", 
                "argp_parse"
            ], 
            "rpm": "freeipmi-1.5.7-1.fc27.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Applications/System", 
            "Name": " freeipmi", 
            "License": " GPLv3+", 
            "URL": " http://www.gnu.org/software/freeipmi/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-17.phx2.fedoraproject.org", 
            "Description": "\nThe FreeIPMI project provides \"Remote-Console\" (out-of-band) and\n\"System Management Software\" (in-band) based on Intelligent\nPlatform Management Interface specification.\n", 
            "Build Date": " Fri 25 Aug 2017 08:54:58 AM EDT", 
            "Source RPM": " freeipmi-1.5.7-1.fc27.src.rpm", 
            "Version": " 1.5.7", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Fri 25 Aug 2017 09:01:36 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 1.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " IPMI remote console and system management software", 
            "Size": " 10255135"
        }
    }
}