{
    "results": {
        "usr/bin/fwknop": {
            "report-functions": [
                "__ctype_b_loc", 
                "fko_get_spa_digest_type", 
                "fko_key_gen", 
                "strtol", 
                "getopt_long", 
                "strstr", 
                "strerror", 
                "__stack_chk_fail", 
                "fko_new_with_data", 
                "fko_errstr", 
                "__snprintf_chk", 
                "fko_set_spa_message_type", 
                "fko_destroy", 
                "fko_get_version", 
                "fko_get_gpg_exe", 
                "malloc", 
                "_IO_getc", 
                "open64", 
                "close", 
                "strchr", 
                "strcasecmp", 
                "tcsetattr", 
                "fko_get_spa_client_timeout", 
                "fdopen", 
                "send", 
                "sigprocmask", 
                "setbuf", 
                "remove", 
                "__strncpy_chk", 
                "setsockopt", 
                "fko_set_username", 
                "fko_get_gpg_signature_summary", 
                "memset", 
                "fko_get_gpg_signer", 
                "fko_spa_data_final", 
                "sleep", 
                "strrchr", 
                "fputs", 
                "random", 
                "fko_get_encoded_data", 
                "memcmp", 
                "exit", 
                "rename", 
                "connect", 
                "gai_strerror", 
                "fgets", 
                "fko_get_spa_hmac_type", 
                "fko_get_spa_hmac", 
                "recv", 
                "fko_get_gpg_home_dir", 
                "fko_set_gpg_home_dir", 
                "memmove", 
                "fko_get_spa_server_auth", 
                "fko_get_rand_value", 
                "fko_set_gpg_exe", 
                "fko_set_gpg_recipient", 
                "unlink", 
                "__fprintf_chk", 
                "fko_gpg_errstr", 
                "fko_get_username", 
                "fko_get_gpg_recipient", 
                "strncmp", 
                "getaddrinfo", 
                "fko_get_gpg_signature_id", 
                "fileno", 
                "putchar", 
                "fko_set_spa_encryption_mode", 
                "write", 
                "sendto", 
                "fko_set_spa_message", 
                "fko_get_spa_data", 
                "unsetenv", 
                "dup2", 
                "inet_aton", 
                "fko_get_gpg_ignore_verify_error", 
                "free", 
                "fko_get_gpg_signature_verify", 
                "execvpe", 
                "__errno_location", 
                "getuid", 
                "__printf_chk", 
                "fko_get_spa_encryption_mode", 
                "inet_addr", 
                "__vfprintf_chk", 
                "fko_set_spa_client_timeout", 
                "tcgetattr", 
                "__memcpy_chk", 
                "fputc", 
                "sigemptyset", 
                "fopen", 
                "__gmon_start__", 
                "__vsnprintf_chk", 
                "fko_new", 
                "fko_get_spa_digest", 
                "fko_set_timestamp", 
                "sscanf", 
                "perror", 
                "fko_get_spa_nat_access", 
                "waitpid", 
                "getenv", 
                "socket", 
                "fork", 
                "__xstat64", 
                "sigaddset", 
                "fko_set_spa_digest_type", 
                "__libc_start_main", 
                "fko_set_spa_hmac_type", 
                "fko_get_spa_encryption_type", 
                "strlen", 
                "fko_base64_decode", 
                "fko_get_timestamp", 
                "fko_set_gpg_signer", 
                "_ITM_registerTMCloneTable", 
                "fko_decrypt_spa_data", 
                "fko_set_spa_nat_access", 
                "fko_set_rand_value", 
                "__cxa_finalize", 
                "pipe", 
                "freeaddrinfo", 
                "fko_get_spa_message_type", 
                "fopen64", 
                "_ITM_deregisterTMCloneTable", 
                "fclose", 
                "fko_get_gpg_signature_status", 
                "ctermid", 
                "fko_set_spa_encryption_type", 
                "fko_get_gpg_signature_fpr", 
                "fko_get_spa_message", 
                "calloc", 
                "strncasecmp", 
                "inet_ntop"
            ], 
            "rpm": "fwknop-2.6.9-5.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/fwknop"
        }, 
        "usr/sbin/fwknopd": {
            "report-functions": [
                "fopen", 
                "dup2", 
                "lockf64", 
                "pcap_datalink", 
                "inet_ntop", 
                "setgid", 
                "free", 
                "fko_get_spa_server_auth", 
                "getopt_long", 
                "opendir", 
                "kill", 
                "fwrite", 
                "fko_get_gpg_signature_summary", 
                "pcap_compile", 
                "fko_gpg_signature_id_match", 
                "strnlen", 
                "fko_encryption_type", 
                "strcasecmp", 
                "pcap_dispatch", 
                "strcasestr", 
                "perror", 
                "fko_get_spa_client_timeout", 
                "memcmp", 
                "accept", 
                "fclose", 
                "strftime", 
                "_ITM_deregisterTMCloneTable", 
                "fko_get_gpg_ignore_verify_error", 
                "closedir", 
                "__xstat", 
                "pcap_setnonblock", 
                "setlocale", 
                "pcap_open_offline", 
                "fko_set_gpg_recipient", 
                "umask", 
                "__vsyslog_chk", 
                "fgets", 
                "inet_aton", 
                "fko_set_gpg_exe", 
                "fko_get_spa_digest_type", 
                "getuid", 
                "__vsnprintf_chk", 
                "__isoc99_sscanf", 
                "fko_key_gen", 
                "__vfprintf_chk", 
                "fko_get_timestamp", 
                "puts", 
                "usleep", 
                "fko_set_raw_spa_digest", 
                "fko_get_spa_encryption_mode", 
                "shutdown", 
                "fko_decrypt_spa_data", 
                "socket", 
                "close", 
                "mkdir", 
                "strdup", 
                "pcap_setfilter", 
                "fko_gpg_signature_fpr_match", 
                "fko_get_version", 
                "__snprintf_chk", 
                "fko_set_gpg_home_dir", 
                "fko_get_spa_hmac", 
                "fko_errstr", 
                "sigemptyset", 
                "getaddrinfo", 
                "fko_get_spa_data", 
                "fko_get_spa_message", 
                "__strncpy_chk", 
                "fko_get_spa_encryption_type", 
                "freeaddrinfo", 
                "strrchr", 
                "rename", 
                "time", 
                "fdopen", 
                "pipe", 
                "fko_get_gpg_signature_verify", 
                "getpid", 
                "waitpid", 
                "__cxa_finalize", 
                "putchar", 
                "strlen", 
                "fko_new_with_data", 
                "fko_get_encoded_data", 
                "mktime", 
                "__ctype_b_loc", 
                "__gmon_start__", 
                "pcap_geterr", 
                "setsid", 
                "fko_get_spa_digest", 
                "asctime", 
                "strerror", 
                "__xstat64", 
                "calloc", 
                "open64", 
                "pcap_close", 
                "read", 
                "access", 
                "fko_get_spa_message_type", 
                "_ITM_registerTMCloneTable", 
                "listen", 
                "__fdelt_chk", 
                "__lxstat", 
                "fko_set_gpg_signature_verify", 
                "recvfrom", 
                "fko_get_gpg_home_dir", 
                "localtime", 
                "chdir", 
                "fko_destroy", 
                "pcap_freecode", 
                "sleep", 
                "sscanf", 
                "fko_get_raw_spa_digest", 
                "fko_get_gpg_signature_fpr", 
                "getppid", 
                "readdir", 
                "strcmp", 
                "getpwnam", 
                "fko_set_raw_spa_digest_type", 
                "fko_get_rand_value", 
                "bind", 
                "strtol", 
                "fopen64", 
                "fcntl", 
                "fko_set_gpg_ignore_verify_error", 
                "setsockopt", 
                "strchr", 
                "openlog", 
                "fko_get_raw_spa_digest_type", 
                "fko_base64_decode", 
                "gai_strerror", 
                "__stack_chk_fail", 
                "pcap_setdirection", 
                "pcap_breakloop", 
                "inet_pton", 
                "fko_get_spa_hmac_type", 
                "strtoll", 
                "write", 
                "fko_get_gpg_signature_status", 
                "sigaction", 
                "pcap_open_live", 
                "fsync", 
                "strtoul", 
                "strncasecmp", 
                "fko_gpg_errstr", 
                "__printf_chk", 
                "select", 
                "fflush", 
                "setuid", 
                "__lxstat64", 
                "strstr", 
                "fko_get_gpg_signature_id", 
                "fko_get_gpg_recipient", 
                "fork", 
                "exit", 
                "strcspn", 
                "fko_get_gpg_exe", 
                "execvpe", 
                "fko_get_username", 
                "__libc_start_main", 
                "__errno_location", 
                "fko_get_gpg_signer", 
                "fko_get_spa_nat_access"
            ], 
            "rpm": "fwknop-2.6.9-5.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/sbin/fwknopd"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " System Environment/Daemons", 
            "Name": " fwknop", 
            "License": " GPLv2", 
            "URL": " http://www.cipherdyne.org/fwknop/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-22.phx2.fedoraproject.org", 
            "Description": "\nfwknop implements an authorization scheme known as Single Packet\nAuthorization (SPA) that requires only a single encrypted packet to\ncommunicate various pieces of information including desired access through an\niptables policy and/or specific commands to execute on the target system.\nThe main application of this program is to protect services such as SSH with\nan additional layer of security in order to make the exploitation of\nvulnerabilities (both 0-day and unpatched code) much more difficult.  The\nauthorization server passively monitors authorization packets via libpcap and\nhence there is no \"server\" to which to connect in the traditional sense.  Any\nservice protected by fwknop is inaccessible (by using iptables to\nintercept packets within the kernel) before authenticating; anyone scanning for\nthe service will not be able to detect that it is even listening.  This\nauthorization scheme offers many advantages over port knocking, include being\nnon-replayable, much more data can be communicated, and the scheme cannot be\nbroken by simply connecting to extraneous ports on the server in an effort to\nbreak knock sequences.  The authorization packets can easily be spoofed as\nwell, and this makes it possible to make it appear as though, say,\nwww.yahoo.com is trying to authenticate to a target system but in reality the\nactual connection will come from a seemingly unrelated IP. Although the\ndefault data collection method is to use libpcap to sniff packets off the\nwire, fwknop can also read packets out of a file that is written by the\niptables ulogd pcap writer or by a separate sniffer process.\n", 
            "Build Date": " Wed 02 Aug 2017 08:46:51 PM EDT", 
            "Source RPM": " fwknop-2.6.9-5.fc27.src.rpm", 
            "Version": " 2.6.9", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Mon 07 Aug 2017 01:39:23 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 5.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " A Single Packet Authorization (SPA) implementation", 
            "Size": " 499528"
        }
    }
}