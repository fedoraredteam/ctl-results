{
    "results": {
        "usr/bin/fbzx": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/fbzx", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ZNSt8ios_base4InitD1Ev", 
                "_ZdlPv", 
                "__dynamic_cast", 
                "SDL_ShowCursor", 
                "_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev", 
                "snd_pcm_hw_params_set_format", 
                "closedir", 
                "__fprintf_chk", 
                "sleep", 
                "SDL_MapRGB", 
                "__libc_start_main", 
                "strlen", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "random", 
                "SDL_Init", 
                "snd_pcm_hw_params_malloc", 
                "pa_simple_new", 
                "SDL_PollEvent", 
                "SDL_NumJoysticks", 
                "pa_simple_free", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm", 
                "_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "SDL_WaitEvent", 
                "fwrite", 
                "SDL_SetColors", 
                "exit", 
                "_ZNSt8ios_baseC2Ev", 
                "write", 
                "opendir", 
                "snd_pcm_hw_params_any", 
                "snd_pcm_hw_params_set_rate_near", 
                "_ZNSt12__basic_fileIcED1Ev", 
                "_ZNSt6localeD1Ev", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc", 
                "SDL_InitSubSystem", 
                "SDL_JoystickOpen", 
                "__cxa_pure_virtual", 
                "SDL_LockSurface", 
                "__printf_chk", 
                "_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv", 
                "strncmp", 
                "_Unwind_Resume", 
                "usleep", 
                "_ZdaPv", 
                "snd_pcm_writei", 
                "SDL_Flip", 
                "SDL_EventState", 
                "feof", 
                "_Znam", 
                "getenv", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc", 
                "_ZNSt8ios_base4InitC1Ev", 
                "malloc", 
                "ioctl", 
                "fread", 
                "_ZNSt6localeC1Ev", 
                "readdir", 
                "SDL_UnlockSurface", 
                "__sprintf_chk", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm", 
                "_ZdlPvm", 
                "snd_pcm_hw_params_set_buffer_size_near", 
                "puts", 
                "__gxx_personality_v0", 
                "snd_pcm_open", 
                "SDL_Quit", 
                "__strcat_chk", 
                "fputc", 
                "pa_simple_write", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv", 
                "_ZNSolsEi", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_", 
                "snd_pcm_prepare", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate", 
                "__strcpy_chk", 
                "_Znwm", 
                "memcmp", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "snd_pcm_hw_params_set_access", 
                "_ZNKSt12__basic_fileIcE7is_openEv", 
                "_ZSt19__throw_logic_errorPKc", 
                "snd_pcm_drain", 
                "_ZNSt8ios_baseD2Ev", 
                "rand", 
                "__stpcpy_chk", 
                "SDL_WM_GrabInput", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEEC1Ev", 
                "fopen", 
                "__cxa_atexit", 
                "memcpy", 
                "_ZNSo5writeEPKcl", 
                "snd_pcm_hw_params", 
                "open", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEED1Ev", 
                "__stack_chk_fail", 
                "snd_pcm_hw_params_set_rate_resample", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "strcasecmp", 
                "__xstat", 
                "snd_pcm_hw_params_set_channels", 
                "free", 
                "fclose", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode", 
                "snd_pcm_close", 
                "SDL_SetVideoMode", 
                "_ZNSi4readEPcl", 
                "strcpy", 
                "__gmon_start__", 
                "close", 
                "SDL_WM_SetCaption"
            ], 
            "rpm": "fbzx-3.8.0-3.fc27.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " fbzx", 
            "License": " GPLv3+", 
            "URL": " http://www.rastersoft.com/programas/fbzx.html", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-09.phx2.fedoraproject.org", 
            "Description": "\nFBZX is a Sinclair Spectrum emulator, designed to work at full screen using\nthe FrameBuffer or under X-Windows.\n", 
            "Build Date": " Wed 02 Aug 2017 07:16:23 PM EDT", 
            "Source RPM": " fbzx-3.8.0-3.fc27.src.rpm", 
            "Version": " 3.8.0", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Sun 06 Aug 2017 11:59:33 PM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 3.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " A ZX Spectrum emulator for FrameBuffer", 
            "Size": " 536233"
        }
    }
}