{
    "results": {
        "usr/lib/security/pam_mount_so": {
            "report-functions": [
                "ehd_logctl", 
                "pam_get_user", 
                "xmlGetProp", 
                "mlock", 
                "pam_get_data", 
                "pam_set_data", 
                "chdir", 
                "xmlParseFile", 
                "write", 
                "geteuid", 
                "HXmc_strcat", 
                "HXmc_length", 
                "HX_exit", 
                "getgrouplist", 
                "_ITM_registerTMCloneTable", 
                "__xstat64", 
                "HXformat_aprintf", 
                "__ctype_b_loc", 
                "seteuid", 
                "sysconf", 
                "fclose", 
                "HXformat_add", 
                "sigtimedwait", 
                "mkdir", 
                "sigprocmask", 
                "getgrgid", 
                "fopen64", 
                "rmdir", 
                "mnt_new_context", 
                "strlen", 
                "HXmap_find", 
                "HXproc_wait", 
                "HXmap_add", 
                "xmlDocGetRootElement", 
                "HXmap_travfree", 
                "mnt_new_iter", 
                "xmlFreeDoc", 
                "HXformat_free", 
                "strchr", 
                "getpwnam", 
                "getgrnam", 
                "__assert_fail", 
                "usleep", 
                "HXmap_travinit", 
                "_ITM_deregisterTMCloneTable", 
                "mnt_fs_get_target", 
                "HXmc_meminit", 
                "HXdeque_init", 
                "HXmap_free", 
                "_Jv_RegisterClasses", 
                "unsetenv", 
                "chown", 
                "strncasecmp", 
                "ehd_kdreq_set", 
                "HX_strdup", 
                "pcre_exec", 
                "strcasecmp", 
                "strtoul", 
                "endmntent", 
                "pthread_mutex_unlock", 
                "ehd_keydec_run", 
                "getgroups", 
                "mnt_context_get_mtab", 
                "__errno_location", 
                "pcre_compile", 
                "free", 
                "__isoc99_fscanf", 
                "setmntent", 
                "sigismember", 
                "HX_init", 
                "memset", 
                "HXdeque_to_vec", 
                "pam_get_item", 
                "HXproc_run_async", 
                "setgroups", 
                "HXmc_strinit", 
                "__gmon_start__", 
                "setsid", 
                "sigaction", 
                "HXdeque_push", 
                "__stack_chk_fail", 
                "pam_strerror", 
                "setegid", 
                "strcmp", 
                "sigaddset", 
                "HXformat_init", 
                "ehd_keydec_strerror", 
                "ehd_kdreq_free", 
                "strerror", 
                "HX_realpath", 
                "__cxa_finalize", 
                "cryptmount_exit", 
                "HX_basename", 
                "getenv", 
                "HXmap_traverse", 
                "munlock", 
                "pam_set_item", 
                "fdopen", 
                "HX_strsep", 
                "ehd_err", 
                "close", 
                "fgets", 
                "HXdeque_del", 
                "setvbuf", 
                "open64", 
                "HXdeque_free", 
                "setuid", 
                "setenv", 
                "setgid", 
                "HXmc_free", 
                "perror", 
                "getuid", 
                "__snprintf_chk", 
                "getmntent", 
                "malloc", 
                "HXmap_init", 
                "mnt_fs_get_source", 
                "HX_getl", 
                "cryptmount_init", 
                "pthread_mutex_lock", 
                "mnt_table_next_fs", 
                "ehd_dbg", 
                "HX_chomp", 
                "mnt_free_context", 
                "strtol", 
                "pam_getenv", 
                "calloc"
            ], 
            "rpm": "pam_mount-2.15-3.fc24.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/security/pam_mount.so"
        }, 
        "usr/sbin/pmt-ehd": {
            "report-functions": [
                "HXdeque_to_vec", 
                "close", 
                "_Jv_RegisterClasses", 
                "pthread_mutex_lock", 
                "strlen", 
                "ehd_err", 
                "HX_exit", 
                "cryptmount_exit", 
                "crypt_format", 
                "HXmc_meminit", 
                "fchown", 
                "getgrouplist", 
                "HX_getl", 
                "ehd_mtreq_new", 
                "HX_strlcpy", 
                "sysconf", 
                "cryptmount_init", 
                "strerror", 
                "setenv", 
                "crypt_free", 
                "HXproc_run_async", 
                "ioctl", 
                "ehd_unload", 
                "ftruncate64", 
                "HXformat_aprintf", 
                "HXdeque_init", 
                "ehd_mtinfo_free", 
                "memset", 
                "sigaction", 
                "HXproc_run_sync", 
                "pthread_mutex_unlock", 
                "__xstat64", 
                "__ctype_tolower_loc", 
                "fileno", 
                "setgroups", 
                "ehd_get_password", 
                "setsid", 
                "__libc_start_main", 
                "putchar", 
                "HXformat_add", 
                "abort", 
                "crypt_init", 
                "perror", 
                "ehd_mtreq_free", 
                "setuid", 
                "malloc", 
                "__printf_chk", 
                "__gmon_start__", 
                "__cxa_finalize", 
                "HXmc_strinit", 
                "HXdeque_free", 
                "strchr", 
                "__assert_fail", 
                "HX_getopt_help_cb", 
                "ehd_load", 
                "HX_strlncat", 
                "__lxstat64", 
                "_ITM_registerTMCloneTable", 
                "strcmp", 
                "HXmc_free", 
                "ehd_cipherdigest_security", 
                "strtoul", 
                "HX_basename", 
                "puts", 
                "HX_init", 
                "free", 
                "HX_rand", 
                "__stack_chk_fail", 
                "__errno_location", 
                "HXdeque_push", 
                "getgroups", 
                "isatty", 
                "HXmc_length", 
                "chdir", 
                "crypt_keyslot_add_by_volume_key", 
                "HX_getopt", 
                "ehd_mtinfo_get", 
                "open64", 
                "HXmc_strcat", 
                "_ITM_deregisterTMCloneTable", 
                "HX_readlink", 
                "HX_chomp", 
                "ehd_logctl", 
                "getpwnam", 
                "setgid", 
                "HX_strdup", 
                "HX_getopt_usage_cb", 
                "__fprintf_chk", 
                "ehd_dbg", 
                "ehd_mtreq_set", 
                "fwrite"
            ], 
            "rpm": "pam_mount-2.15-3.fc24.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/sbin/pmt-ehd"
        }, 
        "usr/sbin/pmvarrun": {
            "report-functions": [
                "__gmon_start__", 
                "read", 
                "getopt", 
                "puts", 
                "strtol", 
                "perror", 
                "ftruncate64", 
                "ehd_logctl", 
                "chmod", 
                "HX_mkdir", 
                "__xstat64", 
                "fcntl", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "getenv", 
                "close", 
                "strerror", 
                "__printf_chk", 
                "open64", 
                "unlink", 
                "ehd_err", 
                "_Jv_RegisterClasses", 
                "strtoul", 
                "__snprintf_chk", 
                "__stack_chk_fail", 
                "chown", 
                "HX_basename", 
                "HX_strdup", 
                "lseek64", 
                "ehd_dbg", 
                "exit", 
                "_ITM_registerTMCloneTable", 
                "getpwnam", 
                "__errno_location", 
                "write", 
                "fchown", 
                "__assert_fail", 
                "fwrite", 
                "alarm"
            ], 
            "rpm": "pam_mount-2.15-3.fc24.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/sbin/pmvarrun"
        }, 
        "sbin/mount_crypt": {
            "report-functions": [
                "HXproc_run_async", 
                "HXdeque_push", 
                "getenv", 
                "_ITM_deregisterTMCloneTable", 
                "cryptmount_exit", 
                "HX_realpath", 
                "setsid", 
                "HX_getopt_usage_cb", 
                "HXformat_add", 
                "open64", 
                "setuid", 
                "__cxa_finalize", 
                "malloc", 
                "ehd_unload", 
                "ftruncate64", 
                "__libc_start_main", 
                "HX_getl", 
                "HXdeque_init", 
                "write", 
                "HX_init", 
                "HXmc_meminit", 
                "__assert_fail", 
                "abort", 
                "__ctype_b_loc", 
                "setgroups", 
                "HX_basename", 
                "chdir", 
                "HX_getopt_help_cb", 
                "ehd_kdreq_set", 
                "strpbrk", 
                "HX_chomp", 
                "__fprintf_chk", 
                "__stack_chk_fail", 
                "fopen64", 
                "HXformat_aprintf", 
                "__xstat64", 
                "read", 
                "ehd_mtreq_new", 
                "getgrouplist", 
                "HXmc_free", 
                "fwrite", 
                "pthread_mutex_lock", 
                "ehd_kdreq_new", 
                "pthread_mutex_unlock", 
                "pwrite64", 
                "fcntl", 
                "ehd_logctl", 
                "getgroups", 
                "_Jv_RegisterClasses", 
                "HXdeque_free", 
                "HXmc_memcat", 
                "__gmon_start__", 
                "HX_getopt", 
                "HXmc_strcat", 
                "setenv", 
                "ehd_err", 
                "_ITM_registerTMCloneTable", 
                "HX_exit", 
                "sysconf", 
                "strcmp", 
                "ehd_mtinfo_free", 
                "free", 
                "strchr", 
                "ehd_is_luks", 
                "ehd_mtreq_set", 
                "__errno_location", 
                "setgid", 
                "pread64", 
                "ftello64", 
                "strerror", 
                "perror", 
                "__fxstat64", 
                "HXmc_length", 
                "sigaction", 
                "HX_mkdir", 
                "HX_strdup", 
                "strtoul", 
                "ehd_keydec_strerror", 
                "fileno", 
                "ehd_cipherdigest_security", 
                "strlen", 
                "ehd_kdreq_free", 
                "getpwnam", 
                "HX_dirname", 
                "strcspn", 
                "HXproc_run_sync", 
                "HXdeque_to_vec", 
                "cryptmount_init", 
                "HX_strsep", 
                "fclose", 
                "close", 
                "ehd_get_password", 
                "ehd_load", 
                "ehd_dbg"
            ], 
            "rpm": "pam_mount-2.15-3.fc24.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "sbin/mount.crypt"
        }, 
        "usr/lib/libcryptmount_so_0_0_0": {
            "report-functions": [
                "calloc", 
                "HXmc_meminit", 
                "__errno_location", 
                "__stack_chk_fail", 
                "__open64_2", 
                "tcgetattr", 
                "strncpy", 
                "sigemptyset", 
                "crypt_activate_by_passphrase", 
                "malloc", 
                "_ITM_deregisterTMCloneTable", 
                "strchr", 
                "EVP_get_cipherbyname", 
                "getenv", 
                "__fprintf_chk", 
                "crypt_deactivate", 
                "EVP_BytesToKey", 
                "_ITM_registerTMCloneTable", 
                "fputc", 
                "isatty", 
                "tcflush", 
                "__cxa_finalize", 
                "tcsetattr", 
                "putchar", 
                "HXmc_strinit", 
                "__gmon_start__", 
                "crypt_init", 
                "OpenSSL_add_all_ciphers", 
                "__xstat64", 
                "ioctl", 
                "EVP_get_digestbyname", 
                "EVP_CIPHER_CTX_init", 
                "HXmc_free", 
                "OpenSSL_add_all_digests", 
                "__ctype_b_loc", 
                "crypt_activate_by_volume_key", 
                "HX_basename", 
                "strerror", 
                "pthread_mutex_lock", 
                "open64", 
                "crypt_load", 
                "EVP_DecryptUpdate", 
                "EVP_DecryptFinal_ex", 
                "read", 
                "crypt_free", 
                "HX_strdup", 
                "free", 
                "HX_strsep", 
                "__vfprintf_chk", 
                "__assert_fail", 
                "fileno", 
                "HX_getl", 
                "__printf_chk", 
                "__fxstat64", 
                "HX_chomp", 
                "fflush", 
                "close", 
                "EVP_CIPHER_CTX_cleanup", 
                "__snprintf_chk", 
                "strlen", 
                "fwrite", 
                "sigaction", 
                "_Jv_RegisterClasses", 
                "nanosleep", 
                "kill", 
                "__vsyslog_chk", 
                "crypt_format", 
                "pthread_mutex_unlock", 
                "HX_init", 
                "HXmc_strcat", 
                "OPENSSL_add_all_algorithms_noconf", 
                "HX_exit", 
                "EVP_DecryptInit_ex"
            ], 
            "rpm": "pam_mount-2.15-3.fc24.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libcryptmount.so.0.0.0"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " System Environment/Base", 
            "Name": " pam_mount", 
            "License": " LGPLv2+ and (LGPLv2 or LGPLv3) and Public Domain", 
            "URL": " http://pam-mount.sourceforge.net/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-22-nfs.phx2.fedoraproject.org", 
            "Description": "\nThis module is aimed at environments with central file servers that a user\nwishes to mount on login and unmount on logout, such as (semi-)diskless\nstations where many users can logon and where statically mounting the entire\n/home from a server is a security risk, or listing all possible volumes in\n/etc/fstab is not feasible.\n\n* Users can define their own list of volumes without having to change\n  (possibly non-writable) global config files.\n* Single sign-on feature - the user needs to type the password just once (at login)\n* Transparent mount process\n* No stored passwords\n* Volumes are unmounted on logout, freeing system resources and not leaving\n  data exposed.\n\nThe module also supports mounting local filesystems of any kind the normal\nmount utility supports, with extra code to make sure certain volumes are set up\nproperly because often they need more  than just a mount call, such as\nencrypted volumes. This includes SMB/CIFS, FUSE, dm-crypt and LUKS.\n\nIf  you  intend  to use pam_mount to protect volumes on your computer using an\nencrypted filesystem system, please know that there are many other issues you\nneed to consider in order to protect your data. For example, you probably want\nto disable or encrypt your swap partition (the cryptoswap can help you do\nthis). Do not assume  a  system  is  secure  without  carefully  considering\npotential threats.\n", 
            "Build Date": " Thu 04 Feb 2016 12:38:14 PM EST", 
            "Source RPM": " pam_mount-2.15-3.fc24.src.rpm", 
            "Version": " 2.15", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Sat 25 Feb 2017 11:38:32 AM EST, Key ID f55e7430f5282ee4", 
            "Release": " 3.fc24", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " A PAM module that can mount volumes for a user session", 
            "Size": " 309911"
        }
    }
}