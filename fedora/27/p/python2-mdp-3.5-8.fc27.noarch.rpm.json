{
    "results": {
        "usr/lib/python2_7/site-packages/mdp/parallel/parallelflows_pyc": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib/python2.7/site-packages/mdp/parallel/parallelflows.pyc", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {}, 
            "report-functions": [], 
            "rpm": "python2-mdp-3.5-8.fc27.noarch.rpm"
        }, 
        "usr/lib/python2_7/site-packages/mdp/test/test_parallelflows_py": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib/python2.7/site-packages/mdp/test/test_parallelflows.py", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {}, 
            "report-functions": [], 
            "rpm": "python2-mdp-3.5-8.fc27.noarch.rpm"
        }, 
        "usr/lib/python2_7/site-packages/mdp/parallel/parallelflows_pyo": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib/python2.7/site-packages/mdp/parallel/parallelflows.pyo", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {}, 
            "report-functions": [], 
            "rpm": "python2-mdp-3.5-8.fc27.noarch.rpm"
        }, 
        "usr/lib/python2_7/site-packages/mdp/test/test_parallelflows_pyc": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib/python2.7/site-packages/mdp/test/test_parallelflows.pyc", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {}, 
            "report-functions": [], 
            "rpm": "python2-mdp-3.5-8.fc27.noarch.rpm"
        }, 
        "usr/lib/python2_7/site-packages/mdp/parallel/parallelflows_py": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib/python2.7/site-packages/mdp/parallel/parallelflows.py", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {}, 
            "report-functions": [], 
            "rpm": "python2-mdp-3.5-8.fc27.noarch.rpm"
        }, 
        "usr/lib/python2_7/site-packages/mdp/test/test_parallelflows_pyo": {
            "find-libc-functions": [
                ""
            ], 
            "filename": "usr/lib/python2.7/site-packages/mdp/test/test_parallelflows.pyo", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {}, 
            "report-functions": [], 
            "rpm": "python2-mdp-3.5-8.fc27.noarch.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " python2-mdp", 
            "License": " BSD", 
            "URL": " http://mdp-toolkit.sourceforge.net/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " burren.bos.redhat.com", 
            "Description": "\nThe Modular toolkit for Data Processing (MDP) package is a library of\nwidely used data processing algorithms, and the possibility to combine\nthem together to form pipelines for building more complex data\nprocessing software. MDP has been designed to be used as-is and as a\nframework for scientific data processing development.\n\nFrom the user\u2019s perspective, MDP consists of a collection of units,\nwhich process data. For example, these include algorithms for\nsupervised and unsupervised learning, principal and independent\ncomponents analysis and classification. These units can be chained\ninto data processing flows, to create pipelines as well as more\ncomplex feed-forward network architectures. Given a set of input data,\nMDP takes care of training and executing all nodes in the network in\nthe correct order and passing intermediate data between the\nnodes. This allows the user to specify complex algorithms as a series\nof simpler data processing steps.\n", 
            "Build Date": " Mon 07 Aug 2017 12:44:38 PM EDT", 
            "Source RPM": " python-mdp-3.5-8.fc27.src.rpm", 
            "Version": " 3.5", 
            "Architecture": " noarch", 
            "Signature": " RSA/SHA256, Tue 08 Aug 2017 10:58:18 PM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 8.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Library for building data processing pipelines for machine learning", 
            "Size": " 2887118"
        }
    }
}