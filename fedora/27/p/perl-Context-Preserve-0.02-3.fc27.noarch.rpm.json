{
    "results": "no elfs found", 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " perl-Context-Preserve", 
            "License": " GPL+ or Artistic", 
            "URL": " http://search.cpan.org/dist/Context-Preserve", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-aarch64-18.arm.fedoraproject.org", 
            "Description": "\nSometimes you need to call a function, get the results, act on the\nresults, then return the result of the function. This is painful because\nof contexts; the original function can behave different if it's called\nin void, scalar, or list context. You can ignore the various cases and\njust pick one, but that's fragile. To do things right, you need to see\nwhich case you're being called in, and then call the function in that\ncontext. This results in 3 code paths, which is a pain to type in (and\nmaintain).  This module automates the process. You provide a coderef that\nis the \"original function\", and another coderef to run after the\noriginal runs. You can modify the return value (aliased to @_) here, and\ndo whatever else you need to do. 'wantarray' is correct inside both\ncoderefs; in \"after\", though, the return value is ignored and the value\n'wantarray' returns is related to the context that the original function\nwas called in.\n", 
            "Build Date": " Fri 28 Jul 2017 02:07:45 AM EDT", 
            "Source RPM": " perl-Context-Preserve-0.02-3.fc27.src.rpm", 
            "Version": " 0.02", 
            "Architecture": " noarch", 
            "Signature": " RSA/SHA256, Fri 28 Jul 2017 09:27:58 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 3.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Run code after a subroutine call, preserving context", 
            "Size": " 30423"
        }
    }
}