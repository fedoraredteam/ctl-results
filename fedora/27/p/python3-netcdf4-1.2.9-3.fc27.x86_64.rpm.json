{
    "results": {
        "usr/lib64/python3_6/site-packages/netCDF4/_netCDF4_cpython-36m-x86_64-linux-gnu_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/python3.6/site-packages/netCDF4/_netCDF4.cpython-36m-x86_64-linux-gnu.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "PyObject_Size", 
                "PyObject_ClearWeakRefs", 
                "PyErr_WriteUnraisable", 
                "PyUnicode_Compare", 
                "PyErr_SetString", 
                "PyUnicode_InternFromString", 
                "nc_inq_varname", 
                "nc_inq_unlimdims", 
                "nc_rename_att", 
                "PyUnicode_DecodeASCII", 
                "__cxa_finalize", 
                "nc_inq_typeids", 
                "PyLong_AsLong", 
                "PyMem_Free", 
                "PyObject_GC_Track", 
                "PyErr_NormalizeException", 
                "PyModule_GetDict", 
                "PyObject_IsTrue", 
                "PyBytes_AsStringAndSize", 
                "PyObject_Call", 
                "nc_inq_vartype", 
                "PyObject_GetItem", 
                "nc_inq_var_endian", 
                "PyType_Ready", 
                "nc_def_var_chunking", 
                "nc_put_att", 
                "PyEval_SaveThread", 
                "PyNumber_Index", 
                "free", 
                "PyRun_StringFlags", 
                "PyObject_IsSubclass", 
                "nc_free_vlens", 
                "PyImport_ImportModuleLevelObject", 
                "PyObject_RichCompare", 
                "PyBuffer_Release", 
                "nc_inq_format_extended", 
                "PyLong_AsUnsignedLong", 
                "nc_def_compound", 
                "nc_insert_array_compound", 
                "nc_def_var_fletcher32", 
                "nc_close", 
                "PyInstanceMethod_New", 
                "PyMem_Malloc", 
                "nc_inq_compound", 
                "PyArg_UnpackTuple", 
                "PySequence_Contains", 
                "PyImport_Import", 
                "PyNumber_TrueDivide", 
                "_Py_CheckRecursiveCall", 
                "PyCode_New", 
                "nc_inq_vardimid", 
                "PyTuple_GetSlice", 
                "PyFloat_FromString", 
                "nc_inq_path", 
                "nc_sync", 
                "nc_inq", 
                "nc_inq_dimname", 
                "nc_inq_var_chunking", 
                "PyTuple_Pack", 
                "PyMem_Realloc", 
                "PyUnicode_Format", 
                "PyObject_GC_Del", 
                "PyImport_ImportModule", 
                "__stack_chk_fail", 
                "nc_inq_vlen", 
                "PyTuple_New", 
                "nc_inq_var_deflate", 
                "PyErr_NoMemory", 
                "PyMethod_New", 
                "PyDict_New", 
                "PyObject_Dir", 
                "PyLong_FromSize_t", 
                "nc_inq_libvers", 
                "nc_def_var_fill", 
                "__gmon_start__", 
                "PyUnicode_Decode", 
                "PyDict_SetItem", 
                "nc_put_vars", 
                "PyNumber_Add", 
                "PyObject_IsInstance", 
                "PyUnicode_FromUnicode", 
                "PyNumber_InPlaceMultiply", 
                "nc_inq_var_fill", 
                "PyUnicode_FromStringAndSize", 
                "nc_get_att_string", 
                "nc_inq_user_type", 
                "nc_free_string", 
                "nc_inq_enum", 
                "PyDict_GetItem", 
                "nc_insert_enum", 
                "nc_redef", 
                "nc_get_vara", 
                "PyUnicode_FromString", 
                "nc_inq_nvars", 
                "PyFloat_AsDouble", 
                "PyObject_Malloc", 
                "PyObject_GC_UnTrack", 
                "PyNumber_Subtract", 
                "nc_inq_att", 
                "PyDict_Contains", 
                "nc_inq_var_fletcher32", 
                "PyImport_GetModuleDict", 
                "nc_inq_attname", 
                "PyNumber_Or", 
                "PyTuple_GetItem", 
                "nc_def_dim", 
                "nc_set_var_chunk_cache", 
                "PyLong_FromSsize_t", 
                "memcpy", 
                "_ITM_deregisterTMCloneTable", 
                "PyObject_Repr", 
                "PyUnicode_AsUTF8String", 
                "Py_GetVersion", 
                "nc_get_att_text", 
                "PySequence_List", 
                "PyErr_SetObject", 
                "PyList_Append", 
                "nc_create", 
                "PyBytes_FromStringAndSize", 
                "PyNumber_Long", 
                "PyList_Sort", 
                "PyEval_EvalCodeEx", 
                "nc_put_att_string", 
                "PyObject_GetAttr", 
                "PyThreadState_Get", 
                "PySequence_Tuple", 
                "nc_def_vlen", 
                "nc_open", 
                "nc_put_att_text", 
                "_PyUnicode_Ready", 
                "PyException_SetTraceback", 
                "memcmp", 
                "PyErr_Format", 
                "PyTraceBack_Here", 
                "PyEval_RestoreThread", 
                "PyErr_SetNone", 
                "nc_rename_grp", 
                "PyCapsule_GetPointer", 
                "nc_set_default_format", 
                "PyType_IsSubtype", 
                "nc_insert_compound", 
                "PyLong_AsSsize_t", 
                "_PyObject_GC_New", 
                "nc_def_enum", 
                "PyErr_ExceptionMatches", 
                "nc_rename_dim", 
                "strlen", 
                "nc_strerror", 
                "PyUnicode_FromFormat", 
                "PyDict_GetItemWithError", 
                "nc_inq_format", 
                "PyLong_AsDouble", 
                "PyObject_GetIter", 
                "PyLong_FromLong", 
                "nc_inq_dimids", 
                "PyErr_Fetch", 
                "PyObject_GetBuffer", 
                "nc_set_fill", 
                "PyErr_Restore", 
                "PyNumber_InPlaceAdd", 
                "PyDict_Size", 
                "PyFloat_FromDouble", 
                "PyImport_AddModule", 
                "PyNumber_Multiply", 
                "PyEval_EvalFrameEx", 
                "PyList_AsTuple", 
                "nc_inq_grpname", 
                "nc_open_mem", 
                "PyDict_GetItemString", 
                "nc_inq_varndims", 
                "PyObject_GenericGetAttr", 
                "PyErr_Occurred", 
                "_PyObject_CallFunction_SizeT", 
                "nc_def_var", 
                "PyErr_GivenExceptionMatches", 
                "nc_del_att", 
                "PyObject_HasAttr", 
                "PyLong_FromUnsignedLong", 
                "PyDict_Next", 
                "nc_inq_varnatts", 
                "nc_inq_varids", 
                "PyDict_SetItemString", 
                "nc_def_var_endian", 
                "PyFrame_New", 
                "PyUnicode_Join", 
                "nc_inq_dimlen", 
                "nc_enddef", 
                "PyErr_Clear", 
                "nc_get_var_chunk_cache", 
                "nc_inq_grps", 
                "nc_inq_natts", 
                "PySlice_New", 
                "nc_get_vars", 
                "nc_get_att", 
                "PyNumber_FloorDivide", 
                "PyDict_Copy", 
                "PyUnicode_DecodeUTF8", 
                "malloc", 
                "PyObject_GetAttrString", 
                "nc_put_vara", 
                "PyObject_Free", 
                "PyList_New", 
                "nc_inq_compound_field", 
                "PyCFunction_NewEx", 
                "nc_def_grp", 
                "PyIter_Next", 
                "PyObject_SelfIter", 
                "PyObject_CallObject", 
                "_ITM_registerTMCloneTable", 
                "PySet_New", 
                "nc_rename_var", 
                "PyObject_SetAttrString", 
                "PyOS_snprintf", 
                "_PyList_Extend", 
                "nc_def_var_deflate", 
                "PyObject_CallFinalizerFromDealloc", 
                "PyUnicode_AsUnicode", 
                "PyNumber_Absolute", 
                "nc_inq_ndims", 
                "PyErr_Print", 
                "nc_inq_enum_member", 
                "PyObject_SetAttr", 
                "PyBytes_FromString", 
                "PyModule_Create2", 
                "PyNumber_Negative"
            ], 
            "rpm": "python3-netcdf4-1.2.9-3.fc27.x86_64.rpm"
        }, 
        "usr/lib64/python3_6/site-packages/netcdftime/_netcdftime_cpython-36m-x86_64-linux-gnu_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/python3.6/site-packages/netcdftime/_netcdftime.cpython-36m-x86_64-linux-gnu.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "PyUnicode_Decode", 
                "PyObject_GetItem", 
                "PyErr_GivenExceptionMatches", 
                "PyObject_GC_Track", 
                "memcmp", 
                "PyObject_Size", 
                "PyOS_snprintf", 
                "PyObject_HasAttr", 
                "PyEval_EvalFrameEx", 
                "PyDict_Size", 
                "Py_GetVersion", 
                "PyNumber_Multiply", 
                "PyDict_Next", 
                "PyObject_IsInstance", 
                "PyDict_GetItem", 
                "PyCapsule_New", 
                "PyList_New", 
                "PyUnicode_FromStringAndSize", 
                "PyDict_New", 
                "PyNumber_TrueDivide", 
                "PyObject_CallFinalizerFromDealloc", 
                "PyUnicode_FromFormat", 
                "PyObject_Free", 
                "_Py_CheckRecursiveCall", 
                "PyDict_GetItemString", 
                "PyErr_Format", 
                "PyObject_Hash", 
                "PyTuple_New", 
                "PyErr_SetObject", 
                "PyType_IsSubtype", 
                "PyDict_Copy", 
                "PyErr_Clear", 
                "PyMem_Malloc", 
                "PyTraceBack_Here", 
                "PyObject_Call", 
                "PyErr_ExceptionMatches", 
                "PyNumber_FloorDivide", 
                "PyLong_FromLong", 
                "PyDict_GetItemWithError", 
                "PyErr_Occurred", 
                "PyUnicode_AsUnicode", 
                "PyModule_GetDict", 
                "PyUnicode_Compare", 
                "PyObject_GC_UnTrack", 
                "PyObject_GetAttr", 
                "PyNumber_Remainder", 
                "PyException_SetTraceback", 
                "PyObject_SetAttrString", 
                "PyImport_Import", 
                "PyDict_SetItem", 
                "PyObject_GetAttrString", 
                "PyTuple_GetItem", 
                "PyTuple_GetSlice", 
                "PyObject_SetItem", 
                "PyNumber_Add", 
                "PyNumber_Subtract", 
                "PyLong_AsSsize_t", 
                "PyUnicode_InternFromString", 
                "PyFrame_New", 
                "PyCode_New", 
                "PyCFunction_NewEx", 
                "PyTuple_Pack", 
                "PyObject_ClearWeakRefs", 
                "__cxa_finalize", 
                "__gmon_start__", 
                "PyNumber_And", 
                "PySequence_Contains", 
                "PyBytes_FromStringAndSize", 
                "PyLong_FromSsize_t", 
                "PyObject_GetIter", 
                "PyMethod_New", 
                "PySlice_New", 
                "PyObject_IsTrue", 
                "PyUnicode_FromString", 
                "PyErr_SetNone", 
                "__stack_chk_fail", 
                "PyFloat_FromDouble", 
                "_ITM_registerTMCloneTable", 
                "_PyUnicode_Ready", 
                "PyDict_SetItemString", 
                "PyImport_GetModuleDict", 
                "PyType_Ready", 
                "PyThreadState_Get", 
                "PyInstanceMethod_New", 
                "PyMem_Realloc", 
                "PyModule_Create2", 
                "PyNumber_Negative", 
                "_PyObject_GC_New", 
                "PyNumber_Index", 
                "PyImport_ImportModuleLevelObject", 
                "PyNumber_Long", 
                "PyEval_EvalCodeEx", 
                "_ITM_deregisterTMCloneTable", 
                "PyNumber_InPlaceSubtract", 
                "PyObject_GC_Del", 
                "PyErr_NormalizeException", 
                "PyLong_AsLong", 
                "PyErr_WarnEx", 
                "PySequence_Tuple", 
                "PyFloat_FromString", 
                "PyObject_SetAttr", 
                "PyList_Append", 
                "PyLong_AsDouble", 
                "PyUnicode_Format", 
                "PyImport_AddModule", 
                "PyObject_RichCompare"
            ], 
            "rpm": "python3-netcdf4-1.2.9-3.fc27.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Development/Languages", 
            "Name": " python3-netcdf4", 
            "License": " MIT", 
            "URL": " https://github.com/Unidata/netcdf4-python", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-22.phx2.fedoraproject.org", 
            "Description": "\nnetCDF version 4 has many features not found in earlier versions of the\nlibrary and is implemented on top of HDF5. This module can read and write\nfiles in both the new netCDF 4 and the old netCDF 3 format, and can create\nfiles that are readable by HDF5 clients. The API modeled after\nScientific.IO.NetCDF, and should be familiar to users of that module.\n\nMost new features of netCDF 4 are implemented, such as multiple unlimited\ndimensions, groups and zlib data compression. All the new numeric data types\n(such as 64 bit and unsigned integer types) are implemented. Compound and\nvariable length (vlen) data types are supported, but the enum and opaque data\ntypes are not. Mixtures of compound and vlen data types (compound types\ncontaining vlens, and vlens containing compound types) are not supported.\n", 
            "Build Date": " Thu 03 Aug 2017 11:55:58 PM EDT", 
            "Source RPM": " netcdf4-python-1.2.9-3.fc27.src.rpm", 
            "Version": " 1.2.9", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Fri 04 Aug 2017 08:14:59 PM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 3.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Python/numpy interface to netCDF", 
            "Size": " 2743923"
        }
    }
}