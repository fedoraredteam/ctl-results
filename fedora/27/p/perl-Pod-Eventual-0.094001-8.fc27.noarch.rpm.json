{
    "results": "no elfs found", 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " perl-Pod-Eventual", 
            "License": " GPL+ or Artistic", 
            "URL": " http://search.cpan.org/dist/Pod-Eventual/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-aarch64-12.arm.fedoraproject.org", 
            "Description": "\nPOD is a pretty simple format to write, but it can be a big pain to deal\nwith reading it and doing anything useful with it. Most existing POD\nparsers care about semantics, like whether a =item occurred after an\n=over but before a back, figuring out how to link a L<>, and other things\nlike that.\n\nPod::Eventual is much less ambitious and much more stupid. Fortunately, stupid\nis often better (that's what I keep telling myself, anyway).\n\nPod::Eventual reads line-based input and produces events describing each POD\nparagraph or directive it finds. Once complete events are immediately passed to\nthe handle_event method. This method should be implemented by Pod::Eventual\nsub-classes. If it isn't, Pod::Eventual's own handle_event will be called, and\nwill raise an exception.\n", 
            "Build Date": " Fri 28 Jul 2017 05:53:21 AM EDT", 
            "Source RPM": " perl-Pod-Eventual-0.094001-8.fc27.src.rpm", 
            "Version": " 0.094001", 
            "Architecture": " noarch", 
            "Signature": " RSA/SHA256, Fri 28 Jul 2017 03:20:32 PM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 8.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Read a POD document as a series of trivial events", 
            "Size": " 33772"
        }
    }
}