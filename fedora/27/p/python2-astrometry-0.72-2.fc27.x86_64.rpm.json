{
    "results": {
        "usr/lib64/python2_7/site-packages/astrometry/util/_util_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/python2.7/site-packages/astrometry/util/_util.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "arcsec2deg", 
                "anwcs_rotate_wcs", 
                "arcmin2arcsec", 
                "PyInt_AsLong", 
                "healpixl_to_radecdeg", 
                "quadfile_fix_header", 
                "xyztohealpix", 
                "make_rand_star", 
                "fits_use_error_system", 
                "quadfile_write_header", 
                "coadd_weight_image_mask_value", 
                "anwcs_wcstools_from_string", 
                "qfits_header_getitem", 
                "tan_get_orientation", 
                "xyzarr2radec", 
                "tan_print", 
                "anwcs_print", 
                "__stack_chk_fail", 
                "coadd_add_image", 
                "PyLong_AsDouble", 
                "sip_ensure_inverse_polynomials", 
                "startree_check_inverse_perm", 
                "sip_get_radec_center_hms", 
                "fits_pad_file", 
                "fits_get_double_val", 
                "anwcs_create_allsky_hammer_aitoff2", 
                "coadd_new", 
                "anwcs_create_mollweide", 
                "dmedsmooth", 
                "Py_BuildValue", 
                "PyType_Ready", 
                "sip_from_string", 
                "dfind2", 
                "dist2deg", 
                "tan_iwc2radec", 
                "dist2arcsec", 
                "fits_write_data_I", 
                "fits_header_set_double", 
                "healpix_to_xyz", 
                "startree_search", 
                "PyModule_GetDict", 
                "arcmin2distsq", 
                "fits_write_data_D", 
                "PyErr_Occurred", 
                "fputc", 
                "tan_radec2iwc", 
                "startree_search_for", 
                "startree_get_cut_margin", 
                "sip_compute_inverse_polynomials", 
                "radectohealpix", 
                "xyz2radec", 
                "sip_read_header_file_ext", 
                "sip_copy", 
                "fits_check_endian", 
                "PyTuple_New", 
                "fit_tan_wcs_move_tangent_point", 
                "radec2xyzarrmany", 
                "arcsec2distsq", 
                "index_free", 
                "_ITM_deregisterTMCloneTable", 
                "index_get_quad_filename", 
                "fits_write_i16_image", 
                "startree_get_data_column_array", 
                "fits_append_all_headers", 
                "fit_sip_coefficients", 
                "qfits_header_del", 
                "sip_imageh", 
                "anwcs_walk_discontinuity", 
                "sip_walk_image_boundary", 
                "lanczos", 
                "lanczos_resample_f", 
                "tan_transform", 
                "startree_get_tagalong_column_name", 
                "sip_read_header_file_ext_only", 
                "fits_find_table_column", 
                "qfits_header_read_hdr_string", 
                "PyCObject_AsVoidPtr", 
                "tan_pixel_scale", 
                "fits_header_modf", 
                "startree_get_data_column", 
                "radec2xyzarr", 
                "healpix_to_radecarr", 
                "fits_write_data_L", 
                "coadd_debug", 
                "radecdegarr2xyzarr", 
                "qfits_header_destroy", 
                "PyObject_Init", 
                "dec2mercy", 
                "healpix_radec_bounds", 
                "healpix_to_radec", 
                "sip_xyzarr2pixelxy", 
                "wcs_pv2sip", 
                "tan_read_header_file_ext_only", 
                "anwcs_set_size", 
                "startree_get_tagalong_column_names", 
                "dselip_cleanup", 
                "anwcs_find_discontinuity", 
                "coadd_new_from_wcs", 
                "log_get_level", 
                "sip_get_orientation", 
                "fits_write_header", 
                "tan_read_header_file_ext", 
                "fits_add_endian", 
                "project_equal_area", 
                "fits_write_data_B", 
                "quadfile_dimquads", 
                "il_size", 
                "fits_header_addf_longstring", 
                "qfits_header_dump", 
                "fits_write_data", 
                "lanczos_resample_unw_sep_f", 
                "atodec", 
                "anwcs_add_to_header", 
                "tan_radec2pixelxy", 
                "startree_get", 
                "qfits_header_add", 
                "healpix_compose_xyl", 
                "codetree_D", 
                "fits_get_header_for_image3", 
                "anwcs_radec_is_inside_image", 
                "fits_header_set_int", 
                "wcs_shift", 
                "radecdegtohealpixl", 
                "fits_update_value", 
                "sip_get_radec_bounds", 
                "PySequence_Size", 
                "healpix_to_radecdeg", 
                "fits_offset_of_column", 
                "sip_pixel_is_inside_image", 
                "codetree_write_to_file", 
                "quadfile_get_filename", 
                "sip_read_header_file", 
                "PyDict_GetItem", 
                "wcs_pixel_center_for_size", 
                "PyInt_FromLong", 
                "tan_rotate", 
                "rad2arcsec", 
                "sip_imagew", 
                "radectohealpixl", 
                "fits_blocks_needed", 
                "anwcs_walk_outline", 
                "distsq2deg", 
                "PyCapsule_Import", 
                "PyErr_Restore", 
                "dcen3x3", 
                "dallpeaks", 
                "fits_get_long_string", 
                "qfits_header_mod", 
                "xyzarrtohealpix", 
                "fits_get_header_for_image", 
                "anwcs_get_radec_center_and_radius", 
                "startree_get_tagalong_column_array_size", 
                "PyObject_GetAttrString", 
                "anwcs_walk_image_boundary", 
                "nearest_resample_d", 
                "codetree_get_permuted", 
                "fits_copy_all_headers", 
                "index_nquads", 
                "coadd_divide_by_weight", 
                "arcmin2dist", 
                "sip_print", 
                "__printf_chk", 
                "startree_get_cut_nside", 
                "PyArg_UnpackTuple", 
                "PyString_ConcatAndDel", 
                "il_get", 
                "dobjects", 
                "anwcs_open_wcstools", 
                "quadfile_open_fits", 
                "index_close", 
                "healpix_within_range_of_xyz", 
                "qfits_header_list", 
                "qfits_zeropad", 
                "sip_pixelxy2xyzarr", 
                "arcsec2arcmin", 
                "startree_open_fits", 
                "PyLong_FromUnsignedLong", 
                "puts", 
                "startree_get_radec", 
                "fits_write_data_A", 
                "PyString_FromStringAndSize", 
                "sip_pixelxy2radec", 
                "fits_add_column", 
                "sip_read_tan_or_sip_header_file_ext", 
                "anwcs_open_wcslib", 
                "strlen", 
                "codetree_write_to_file_flipped", 
                "qfits_header_write_line", 
                "qfits_header_getstr_pretty", 
                "distsq2arcsec", 
                "sip_wrap_tan", 
                "startree_write_to_file", 
                "PySequence_Check", 
                "PyString_Format", 
                "anwcs_open_sip", 
                "arcmin2deg", 
                "star_midpoint", 
                "tan_det_cd", 
                "fits_header_add_int", 
                "PyDict_SetItem", 
                "index_dimquads", 
                "healpix_rangesearch_radec_approx", 
                "PySequence_GetItem", 
                "healpix_get_neighboursl", 
                "hms2ra", 
                "sip_radec2pixelxy_check", 
                "fits_add_args", 
                "fits_write_float_image", 
                "codetree_new", 
                "healpix_region_search", 
                "distsq2arc", 
                "ra2hmsstring", 
                "healpix_nside_for_side_length_arcmin", 
                "is_blank_line", 
                "anwcs_new_tan", 
                "malloc", 
                "PyType_IsSubtype", 
                "fits_pad_file_with", 
                "fits_header_add_longstring_boilerplate", 
                "qfits_header_new", 
                "fit_tan_wcs_weighted", 
                "sip_free", 
                "dsigma_u8", 
                "arcmin2rad", 
                "healpix_decompose_xy", 
                "fits_bytes_needed", 
                "fits_header_add_double", 
                "healpix_distance_to_radec", 
                "anwcs_pixel_scale", 
                "anwcs_imagew", 
                "tan_scale", 
                "quadfile_switch_to_reading", 
                "startree_compute_inverse_perm", 
                "fwrite", 
                "radec2xyz", 
                "starts_with", 
                "startree_set_jitter", 
                "dallpeaks_i16", 
                "PyTuple_SetItem", 
                "radec_derivatives", 
                "qfits_header_getboolean", 
                "fit_tan_wcs_move_tangent_point_weighted", 
                "xyzarrtohealpixf", 
                "fits_get_header_for_image2", 
                "fits_find_column", 
                "sip_pixel_scale", 
                "anwcs_create_box_upsidedown", 
                "rad2dist", 
                "anwcs_free", 
                "startree_open", 
                "PyObject_Size", 
                "strstr", 
                "sip_shift", 
                "anwcs_create_allsky_hammer_aitoff", 
                "healpix_compose_xy", 
                "dfind2_u8", 
                "healpix_rangesearch_xyz_approx", 
                "quadfile_write_header_to", 
                "tan_print_to", 
                "index_is_file_index", 
                "startree_header", 
                "sip_create_header", 
                "fits_write_u8_image", 
                "distsq2rad", 
                "xyzarrtohealpixl", 
                "startree_N", 
                "radecdeg2xyzarr", 
                "sip_get_image_size", 
                "dms2dec", 
                "rad2distsq", 
                "healpix_to_xyzarr", 
                "qfits_header_sort", 
                "PyLong_AsLong", 
                "PyFloat_FromDouble", 
                "PyString_AsString", 
                "project_hammer_aitoff_x", 
                "qfits_header_add_after", 
                "nearest_resample_f", 
                "coadd_create_weight_image_from_range", 
                "qfits_header_getstr", 
                "startree_write_to_file_flipped", 
                "PyTuple_GetSlice", 
                "quadfile_get_header", 
                "tan_read_header", 
                "startree_free_data_column", 
                "healpix_compose_ring", 
                "startree_nodes", 
                "dsmooth2", 
                "startree_get_cut_nsweeps", 
                "qfits_header_default", 
                "fits_write_data_E", 
                "tan_pixelxy2radec", 
                "healpix_distance_to_xyz", 
                "tan_pixel_is_inside_image", 
                "an_fits_copy_header", 
                "codetree_header", 
                "strcmp", 
                "healpix_rangesearch_radec", 
                "qfits_header_getdouble", 
                "collapsing_find_minlabel", 
                "anwcs_create_hammer_aitoff", 
                "z2dec", 
                "__cxa_finalize", 
                "PyErr_Clear", 
                "arcsec2rad", 
                "anwcs_pixelxy2xyz", 
                "rad2deg", 
                "PyList_Append", 
                "sip_radec2iwc", 
                "PyImport_ImportModule", 
                "radectohealpixlf", 
                "qfits_header_copy", 
                "quadfile_get_index_scale_upper_arcsec", 
                "healpix_xy_to_nested", 
                "startree_get_cut_dedup", 
                "sip_calc_distortion", 
                "radecrange2xyzrange", 
                "tan_write_to_file", 
                "qfits_header_setitem", 
                "file_exists", 
                "dmask", 
                "PyList_GetItem", 
                "PyObject_GenericGetAttr", 
                "sin", 
                "deg2distsq", 
                "wcs_pv2sip_header", 
                "sip_get_crval", 
                "tan_write_to", 
                "startree_append_to", 
                "index_get_quad_dim", 
                "startree_new", 
                "fits_header_addf", 
                "codetree_nodes", 
                "codetree_get", 
                "tan_read_header_file", 
                "fits_add_long_history", 
                "fits_add_reverse_endian", 
                "strncpy", 
                "log_init", 
                "sip_pixel_distortion", 
                "healpix_get_neighbours_within_range_radec", 
                "fits_write_header_and_image", 
                "xyzarr2radecdegarr", 
                "lanczos_resample_d", 
                "random", 
                "qfits_header_append", 
                "memcpy", 
                "qfits_header_findmatch", 
                "PyFloat_AsDouble", 
                "PyInstance_NewRaw", 
                "fits_write_data_J", 
                "fits_header_mod_int", 
                "fits_copy_table", 
                "healpix_within_range_of_radec", 
                "Py_InitModule4_64", 
                "PyObject_Malloc", 
                "atora", 
                "codetree_append_to", 
                "quadfile_write_all_quads_to", 
                "startree_D", 
                "healpix_convert_xy_nside", 
                "arcsec2dist", 
                "fits_header_mod_double", 
                "xyzarr2radecarr", 
                "quadfile_write_quad", 
                "tan_pixelxy2iwc", 
                "PyInt_FromSize_t", 
                "PyErr_Format", 
                "PyObject_Call", 
                "PyErr_Fetch", 
                "deg_between_radecdeg", 
                "index_load", 
                "startree_get_jitter", 
                "PyObject_GetAttr", 
                "healpix_get_neighbours", 
                "startree_search_for_radec", 
                "anwcs_xyz2pixelxy", 
                "startree_get_sweep", 
                "tan_add_to_header", 
                "startree_get_cut_band", 
                "tan_get_radius_deg", 
                "PyObject_Free", 
                "ra2mercx", 
                "resample_wcs", 
                "sip_pixel_undistortion", 
                "strncmp", 
                "PyList_Size", 
                "radecdeg2xyz", 
                "anwcs_open", 
                "startree_get_data_column_int64", 
                "anwcs_write", 
                "dsmooth", 
                "fits_get_table_column", 
                "PyCapsule_GetPointer", 
                "dsmooth2_u8", 
                "PyModule_AddObject", 
                "tan_get_radec_center", 
                "radectohealpixf", 
                "sip_scale", 
                "PyLong_FromVoidPtr", 
                "dec2dms", 
                "PyList_New", 
                "codetree_close", 
                "fits_is_table_header", 
                "PyDict_SetItemString", 
                "fits_fill_endian_string", 
                "startree_close", 
                "fit_sip_wcs_2", 
                "sip_write_to_file", 
                "PyString_FromFormat", 
                "anwcs_create_box", 
                "rad2arcmin", 
                "PyBool_FromLong", 
                "codetree_open_fits", 
                "dsigma", 
                "free", 
                "tan_xyzarr2pixelxy", 
                "deg2arcsec", 
                "fits_copy_non_table_headers", 
                "anwcs_imageh", 
                "fits_add_uint_size", 
                "sip_get_radec_center_hms_string", 
                "sip_read_header", 
                "anwcs_get_sip", 
                "startree_get_tagalong", 
                "qfits_header_getint", 
                "sip_iwc2radec", 
                "healpix_convert_nside", 
                "xyzarr2radecdeg", 
                "sip_pixelxy2iwc", 
                "__gmon_start__", 
                "sip_xyzarr2iwc", 
                "quadfile_close", 
                "xy2ra", 
                "xyztohealpixf", 
                "startree_get_tagalong_column_fits_type", 
                "log_set_level", 
                "healpix_xy_to_ring", 
                "quadfile_check", 
                "tan_iwc2xyzarr", 
                "index_reload", 
                "sip_det_cd", 
                "quadfile_open_for_writing", 
                "fits_check_uint_size", 
                "anwcs_create_mercator_2", 
                "jdtomjd", 
                "index_get_missing_cut_params", 
                "sip_get_radius_deg", 
                "_ITM_registerTMCloneTable", 
                "fits_is_primary_header", 
                "radecdegtohealpixlf", 
                "quadfile_get_stars", 
                "calloc", 
                "index_build_from", 
                "star_coords", 
                "PyCapsule_New", 
                "fits_write_data_K", 
                "sip_filter_stars_in_field", 
                "anwcs_pixelxy2radec", 
                "sip_radec2pixelxy", 
                "coadd_set_lanczos", 
                "tan_create_header", 
                "dimquad2dimcode", 
                "radecdeg2xyzarrmany", 
                "sip_write_to", 
                "anwcs_write_to", 
                "PyList_SetItem", 
                "arcsec_between_radecdeg", 
                "mag2flux", 
                "fits_add_long_comment", 
                "dist2rad", 
                "sip_iwc2pixelxy", 
                "anwcs_radec2pixelxy", 
                "anwcs_get_cd_matrix", 
                "sip_get_field_size", 
                "fits_get_endian_string", 
                "startree_get_tagalong_N_columns", 
                "deg2rad", 
                "PyLong_AsUnsignedLong", 
                "anwcs_create_mercator", 
                "distsq_between_radecdeg", 
                "PyErr_SetString", 
                "xyztohealpixlf", 
                "dec2dmsstring", 
                "sip_create", 
                "PyDict_New", 
                "tan_is_inside_image", 
                "fits_mod_reverse_endian", 
                "fits_to_string", 
                "sip_xyz2pixelxy", 
                "fit_sip_wcs", 
                "index_unload", 
                "PyErr_WriteUnraisable", 
                "sip_add_to_header", 
                "deg2dist", 
                "healpix_ring_to_xy", 
                "healpix_side_length_arcmin", 
                "sip_print_to", 
                "tan_pixelxy2xyzarr", 
                "ra2hms", 
                "coadd_get_snapshot", 
                "fits_write_data_array", 
                "healpix_to_radecdegarr", 
                "radecdegtohealpixf", 
                "fits_write_data_X", 
                "tan_xyzarr2iwc", 
                "fit_tan_wcs", 
                "_PyObject_GetDictPtr", 
                "anwcs_print_stdout", 
                "healpix_nested_to_xy", 
                "qfits_header_debug_dump", 
                "healpix_rangesearch_xyz", 
                "index_get_qidx_filename", 
                "anwcs_new_sip", 
                "dselip", 
                "dallpeaks_u8", 
                "sip_calc_inv_distortion", 
                "fits_append_long_comment", 
                "tan_iwc2pixelxy", 
                "PyErr_Print", 
                "fits_check_double_size", 
                "mjdtojd", 
                "anwcs_wcslib_to_string", 
                "PyString_FromString", 
                "PyNumber_Check", 
                "fits_get_dupstring", 
                "PyArg_ParseTuple", 
                "PyString_AsStringAndSize", 
                "healpix_get_neighbours_within_range", 
                "fputs", 
                "anwcs_open_tan", 
                "deg2arcmin", 
                "index_nstars", 
                "quadfile_open_in_memory", 
                "sip_get_radec_center", 
                "codetree_N", 
                "index_is_within_range", 
                "qfits_header_getcom", 
                "_PyObject_New", 
                "qfits_header_n", 
                "PyObject_IsTrue", 
                "healpix_decompose_xyl", 
                "healpix_decompose_ring", 
                "fits_add_double_size", 
                "fits_pad_file_name", 
                "coadd_free", 
                "codetree_open", 
                "quadfile_open", 
                "index_close_fds", 
                "anwcs_wcslib_from_string", 
                "sip_is_inside_image", 
                "tan_pixelxy2radecarr", 
                "xyztohealpixl", 
                "index_get_code_dim", 
                "radecdegtohealpix", 
                "index_overlaps_scale_range", 
                "dpeaks", 
                "startree_has_tagalong", 
                "quadfile_nquads", 
                "qfits_is_fits", 
                "PyObject_CallFunctionObjArgs", 
                "anwcs_is_discontinuous", 
                "quadfile_get_index_scale_lower_arcsec", 
                "anwcs_scale_wcs", 
                "PyTuple_Size", 
                "anwcs_overlaps", 
                "_PyInstance_Lookup", 
                "dsmooth2_i16"
            ], 
            "rpm": "python2-astrometry-0.72-2.fc27.x86_64.rpm"
        }, 
        "usr/lib64/python2_7/site-packages/astrometry/sdss/_cutils_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/python2.7/site-packages/astrometry/sdss/_cutils.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "strncpy", 
                "PyString_FromFormat", 
                "memcpy", 
                "PyErr_WriteUnraisable", 
                "PyErr_Occurred", 
                "PyTuple_SetItem", 
                "fputs", 
                "strlen", 
                "strcmp", 
                "__stack_chk_fail", 
                "fputc", 
                "PyCapsule_GetPointer", 
                "__printf_chk", 
                "__gmon_start__", 
                "strstr", 
                "PyLong_AsDouble", 
                "PyType_IsSubtype", 
                "_PyObject_New", 
                "PyArg_ParseTuple", 
                "PyErr_Restore", 
                "PyDict_SetItemString", 
                "PyModule_GetDict", 
                "PyObject_Call", 
                "strncmp", 
                "PyCapsule_Import", 
                "__cxa_finalize", 
                "PyObject_CallFunctionObjArgs", 
                "PyBool_FromLong", 
                "Py_InitModule4_64", 
                "PyObject_GenericGetAttr", 
                "PyDict_New", 
                "malloc", 
                "PyString_FromString", 
                "PyLong_FromVoidPtr", 
                "PyObject_IsTrue", 
                "fwrite", 
                "PyString_ConcatAndDel", 
                "PyTuple_Pack", 
                "PyErr_Clear", 
                "PyObject_Malloc", 
                "free", 
                "PyFloat_AsDouble", 
                "PyModule_AddObject", 
                "PyObject_Free", 
                "PyLong_AsLong", 
                "PyErr_Fetch", 
                "PyInt_AsLong", 
                "atan2", 
                "PyCapsule_New", 
                "asin", 
                "PyInstance_NewRaw", 
                "PyDict_SetItem", 
                "PyArg_UnpackTuple", 
                "PyType_Ready", 
                "_PyObject_GetDictPtr", 
                "_ITM_registerTMCloneTable", 
                "PyString_Format", 
                "PyFloat_FromDouble", 
                "PyObject_Init", 
                "_ITM_deregisterTMCloneTable", 
                "PyErr_SetString"
            ], 
            "rpm": "python2-astrometry-0.72-2.fc27.x86_64.rpm"
        }, 
        "usr/lib64/python2_7/site-packages/astrometry/libkd/spherematch_c_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/python2.7/site-packages/astrometry/libkd/spherematch_c.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "PyList_New", 
                "kdtree_n", 
                "PyTuple_Size", 
                "il_append", 
                "_ITM_registerTMCloneTable", 
                "kdtree_free", 
                "PyErr_SetString", 
                "kdtree_free_query", 
                "__cxa_finalize", 
                "PyErr_Clear", 
                "kdtree_print", 
                "PyList_SetItem", 
                "dualtree_nearestneighbour", 
                "dl_get", 
                "kdtree_permute", 
                "__sqrt_finite", 
                "kdtree_rangesearch_options", 
                "PyList_Append", 
                "__stack_chk_fail", 
                "malloc", 
                "PyImport_ImportModule", 
                "PyType_Ready", 
                "dl_new", 
                "__gmon_start__", 
                "realloc", 
                "il_get", 
                "PyArg_ParseTuple", 
                "free", 
                "calloc", 
                "PyObject_GetAttrString", 
                "dl_append", 
                "kdtree_build", 
                "strdup", 
                "kdtree_node_node_mindist2_exceeds", 
                "PyErr_Format", 
                "PyModule_AddObject", 
                "Py_InitModule4_64", 
                "kdtree_get_bboxes", 
                "il_free", 
                "dl_free", 
                "il_size", 
                "PyErr_Print", 
                "il_new", 
                "_ITM_deregisterTMCloneTable", 
                "Py_BuildValue", 
                "kdtree_fits_write", 
                "kdtree_fits_close", 
                "PyCObject_AsVoidPtr", 
                "PyInt_FromLong", 
                "kdtree_copy_data_double", 
                "PyType_GenericNew"
            ], 
            "rpm": "python2-astrometry-0.72-2.fc27.x86_64.rpm"
        }, 
        "usr/lib64/python2_7/site-packages/astrometry/blind/_plotstuff_c_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/python2.7/site-packages/astrometry/blind/_plotstuff_c.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "anwcs_walk_outline", 
                "PyErr_SetString", 
                "cairo_pattern_destroy", 
                "jpeg_stdio_src", 
                "anwcs_walk_image_boundary", 
                "rdlist_set_raname", 
                "PyTuple_SetItem", 
                "anwcs_get_radec_bounds", 
                "cairo_stroke", 
                "fit_transform", 
                "PyString_FromFormat", 
                "anqfits_get_image_const", 
                "PyTuple_GetSlice", 
                "png_set_gray_to_rgb", 
                "anwcs_imageh", 
                "__fprintf_chk", 
                "fitstable_read_structs", 
                "anwcs_get_radec_center_and_radius", 
                "cairo_set_dash", 
                "tan_pixel_scale", 
                "convolve_get_gaussian_kernel_f", 
                "bl_free", 
                "PyLong_FromVoidPtr", 
                "index_load", 
                "fitstable_next_struct", 
                "PyList_New", 
                "cairo_save", 
                "uniform_sample", 
                "memcpy", 
                "ngc_get_name_list", 
                "anwcs_scale_wcs", 
                "png_set_interlace_handling", 
                "cairo_create", 
                "dl_size", 
                "anwcs_radec2pixelxy", 
                "free", 
                "cos", 
                "xylist_set_yname", 
                "jpeg_start_decompress", 
                "_ITM_registerTMCloneTable", 
                "bl_access", 
                "cairo_fill_preserve", 
                "constellations_get_shortname", 
                "starxy_getx", 
                "anwcs_set_size", 
                "png_set_palette_to_rgb", 
                "PyList_SetItem", 
                "rdlist_set_decname", 
                "PyErr_Fetch", 
                "cairo_set_line_width", 
                "imax", 
                "PyErr_Clear", 
                "PyType_Ready", 
                "jpeg_std_error", 
                "PyString_AsStringAndSize", 
                "rd_free", 
                "anwcs_radec_is_inside_image", 
                "cairo_surface_status", 
                "PyErr_Occurred", 
                "__sprintf_chk", 
                "sincos", 
                "cairo_surface_finish", 
                "PyFloat_FromDouble", 
                "xylist_open", 
                "constellations_get_unique_stars", 
                "startree_get_radec", 
                "fitscolumn_char_type", 
                "cairo_set_operator", 
                "deg2rad", 
                "__vasprintf_chk", 
                "PyImport_ImportModule", 
                "constellation_containing", 
                "png_set_IHDR", 
                "strlen", 
                "xylist_close", 
                "fitscolumn_float_type", 
                "rd_getdec", 
                "healpix_side_length_arcmin", 
                "bl_new", 
                "xylist_get_imagew", 
                "__exp_finite", 
                "PyObject_GetAttr", 
                "cairo_pattern_set_matrix", 
                "anwcs_imagew", 
                "normalize", 
                "cairo_surface_flush", 
                "fitscolumn_i64_type", 
                "jpeg_CreateCompress", 
                "il_get", 
                "inverse_3by3", 
                "dist2deg", 
                "healpix_to_radecdeg", 
                "PyArg_ParseTuple", 
                "cairo_matrix_init", 
                "cairo_arc", 
                "henry_draper_open", 
                "fitstable_get_primary_header", 
                "PySequence_Size", 
                "henry_draper_close", 
                "PyInstance_NewRaw", 
                "fitstable_write_primary_header", 
                "PyErr_WriteUnraisable", 
                "il_insert_unique_ascending", 
                "PyObject_Malloc", 
                "PyObject_Init", 
                "dot_product_3", 
                "compare_doubles_asc", 
                "pl_append", 
                "index_nquads", 
                "normalize_3", 
                "il_new", 
                "png_get_IHDR", 
                "PyErr_Print", 
                "strstr", 
                "cairo_set_font_size", 
                "sscanf", 
                "PyNumber_Check", 
                "matrix_vector_3", 
                "PyModule_GetDict", 
                "startree_search_for", 
                "qfits_pixdump", 
                "log_get_level", 
                "PyInt_FromLong", 
                "PyDict_New", 
                "log_logverb", 
                "bl_size", 
                "jpeg_read_scanlines", 
                "permuted_sort", 
                "cairo_fill", 
                "jpeg_read_header", 
                "fitstable_close", 
                "anwcs_new_sip", 
                "PyString_FromString", 
                "starts_with", 
                "anwcs_pixel_scale", 
                "cairo_text_extents", 
                "__errno_location", 
                "xylist_set_xname", 
                "fitstable_write_header", 
                "healpix_decompose_xy", 
                "bl_remove_all", 
                "cairo_status_to_string", 
                "il_size", 
                "bright_stars_n", 
                "qidxfile_get_quads", 
                "fitscolumn_i32_type", 
                "dl_remove_all", 
                "png_create_read_struct", 
                "qidxfile_open", 
                "arcsec2deg", 
                "fitscolumn_double_type", 
                "cairo_show_text", 
                "PyErr_Restore", 
                "png_read_info", 
                "invert_2by2_arr", 
                "strncmp", 
                "PyDict_GetItem", 
                "dl_get", 
                "streq", 
                "matrix_matrix_3", 
                "jpeg_set_colorspace", 
                "anwcs_new_tan", 
                "png_read_end", 
                "fitstable_nrows", 
                "fitscolumn_int_type", 
                "cairo_image_surface_create", 
                "qfits_header_add", 
                "fopen64", 
                "ppm_allocrow", 
                "strcmp", 
                "PySequence_GetItem", 
                "png_get_valid", 
                "distsq2deg", 
                "dl_append", 
                "PyTuple_Size", 
                "PyFloat_AsDouble", 
                "average_image_f", 
                "png_set_strip_16", 
                "png_read_update_info", 
                "PyLong_AsUnsignedLong", 
                "PyList_Append", 
                "bl_append", 
                "rdlist_open", 
                "anwcs_print", 
                "henry_draper_get", 
                "strchr", 
                "bright_stars_get", 
                "xylist_get_primary_header", 
                "pl_get", 
                "__atan2_finite", 
                "exit", 
                "cairo_set_source_rgba", 
                "malloc", 
                "ppm_readppmrow", 
                "jpeg_CreateDecompress", 
                "__hypot_finite", 
                "square", 
                "Py_InitModule4_64", 
                "anwcs_open", 
                "log_loglevel", 
                "deg2dist", 
                "cairo_line_to", 
                "PyObject_IsTrue", 
                "inrange", 
                "vector_length_3", 
                "fitstable_open", 
                "dl_free", 
                "fitscolumn_bool_type", 
                "healpix_rangesearch_radec", 
                "pl_free", 
                "fitscolumn_u8_type", 
                "png_read_image", 
                "xylist_get_imageh", 
                "asprintf_safe", 
                "anqfits_open", 
                "jpeg_destroy_decompress", 
                "average_weighted_image_f", 
                "strerror", 
                "cross_product", 
                "sip_create", 
                "fitstable_fix_header", 
                "strncpy", 
                "xylist_set_include_background", 
                "il_free", 
                "constellations_get_longname", 
                "index_free", 
                "PyObject_Free", 
                "distsq_exceeds", 
                "ngc_num_entries", 
                "log_init", 
                "pl_set", 
                "report_errno", 
                "fputs", 
                "PyType_IsSubtype", 
                "anwcs_rotate_wcs", 
                "strdup", 
                "strtof", 
                "PyObject_Call", 
                "deg2distsq", 
                "PyLong_AsLong", 
                "sl_get", 
                "__stack_chk_fail", 
                "log_logdebug", 
                "resample_wcs", 
                "index_get_quad_dim", 
                "starxy_sety", 
                "PyTuple_New", 
                "permutation_init", 
                "png_set_expand", 
                "PyLong_AsDouble", 
                "sl_split", 
                "__cxa_finalize", 
                "__sqrt_finite", 
                "fitstable_pushback", 
                "cairo_image_surface_get_data", 
                "png_destroy_write_struct", 
                "resample_wcs_rgba", 
                "asinh", 
                "dl_new", 
                "fitstable_open_for_writing", 
                "healpix_compose_xy", 
                "cairo_paint_with_alpha", 
                "cairo_surface_destroy", 
                "jpeg_finish_decompress", 
                "constellations_n", 
                "png_create_write_struct", 
                "fitstable_write_struct", 
                "point_in_polygon", 
                "png_set_packing", 
                "PyArg_UnpackTuple", 
                "anwcs_open_wcslib", 
                "PyCObject_AsVoidPtr", 
                "get_output_image_size", 
                "qfits_header_getint", 
                "png_write_image", 
                "fwrite", 
                "vector_length_squared_3", 
                "__gmon_start__", 
                "ppm_readppminit", 
                "invert_2by2", 
                "PyDict_SetItem", 
                "cairo_status", 
                "quadfile_get_stars", 
                "anqfits_close", 
                "is_power_of_two", 
                "imin", 
                "deg2arcsec", 
                "pl_new", 
                "jpeg_finish_compress", 
                "qidxfile_close", 
                "fitstable_add_column_struct", 
                "png_set_filter", 
                "strdup_safe", 
                "xyzarr2radecdeg", 
                "jpeg_set_defaults", 
                "xylist_set_include_flux", 
                "jpeg_start_compress", 
                "fitscolumn_i16_type", 
                "srand", 
                "fitstable_print_missing", 
                "PyBool_FromLong", 
                "log_logmsg", 
                "cairo_destroy", 
                "png_set_compression_level", 
                "jpeg_simple_progression", 
                "constellations_get_star_radec", 
                "starxy_n", 
                "puts", 
                "cairo_set_antialias", 
                "_ITM_deregisterTMCloneTable", 
                "rd_n", 
                "_PyObject_GetDictPtr", 
                "rdlist_read_field_num", 
                "png_set_tRNS_to_alpha", 
                "PyString_Format", 
                "cairo_close_path", 
                "png_create_info_struct", 
                "compare_floats_asc", 
                "cairo_restore", 
                "read_string_terminated", 
                "rand", 
                "PyObject_CallFunctionObjArgs", 
                "fitstable_fix_primary_header", 
                "PyCapsule_GetPointer", 
                "cairo_pattern_create_for_surface", 
                "PyModule_AddObject", 
                "strtod", 
                "cairo_image_surface_create_for_data", 
                "ppm_init", 
                "radecdeg2xyzarr", 
                "png_write_info", 
                "starxy_setx", 
                "fputc", 
                "__printf_chk", 
                "tan_vectors", 
                "xylist_read_field_num", 
                "_PyObject_New", 
                "starxy_from_dl", 
                "PyString_FromStringAndSize", 
                "PyString_ConcatAndDel", 
                "jpeg_stdio_dest", 
                "PyDict_SetItemString", 
                "pm_freerow", 
                "pl_size", 
                "cairo_get_operator", 
                "compare_uchars_asc", 
                "strtol", 
                "jpeg_destroy_compress", 
                "fitscolumn_any_type", 
                "PyObject_GenericGetAttr", 
                "anwcs_create_box_upsidedown", 
                "cairo_pdf_surface_create_for_stream", 
                "sl_free2", 
                "split_string_once", 
                "fitstable_use_buffered_reading", 
                "fitstable_read_extension", 
                "rd_from_dl", 
                "starxy_free", 
                "cairo_pattern_set_filter", 
                "feof", 
                "sl_size", 
                "cairo_stroke_preserve", 
                "ngc_get_entry_named", 
                "rd_getra", 
                "calloc", 
                "anwcs_find_discontinuity", 
                "PySequence_Check", 
                "png_set_filler", 
                "constellations_get_lines_radec", 
                "image_to_xyz", 
                "report_error", 
                "png_write_end", 
                "png_init_io", 
                "anqfits_readpix", 
                "jpeg_set_linear_quality", 
                "cairo_matrix_invert", 
                "cairo_set_source", 
                "PyErr_Format", 
                "cairo_paint", 
                "anwcs_pixelxy2radec", 
                "PyObject_GetAttrString", 
                "deg_between_radecdeg", 
                "PyInt_AsLong", 
                "fclose", 
                "convolve_separable_f", 
                "ngc_get_entry_accurate", 
                "PyCapsule_Import", 
                "anwcs_free", 
                "gaussian_sample", 
                "fitscolumn_boolean_type", 
                "strcaseeq", 
                "cairo_move_to", 
                "png_destroy_read_struct", 
                "jpeg_write_scanlines", 
                "starxy_gety", 
                "convolve_separable_weighted_f", 
                "_PyInstance_Lookup"
            ], 
            "rpm": "python2-astrometry-0.72-2.fc27.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " python2-astrometry", 
            "License": " BSD and GPLv2+ and GPLv3+", 
            "URL": " http://www.astrometry.net", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildhw-05.phx2.fedoraproject.org", 
            "Description": "\nPython modules from astrometry\n", 
            "Build Date": " Mon 25 Sep 2017 05:47:40 AM EDT", 
            "Source RPM": " astrometry-0.72-2.fc27.src.rpm", 
            "Version": " 0.72", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Mon 25 Sep 2017 07:47:53 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 2.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Python modules from astrometry", 
            "Size": " 3194954"
        }
    }
}