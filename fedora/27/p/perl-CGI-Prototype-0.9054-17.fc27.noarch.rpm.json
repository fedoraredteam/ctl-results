{
    "results": "no elfs found", 
    "metadata": {
        "spec_data": {
            "Group": " Development/Libraries", 
            "Name": " perl-CGI-Prototype", 
            "License": " GPL+ or Artistic", 
            "URL": " http://search.cpan.org/dist/CGI-Prototype/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-aarch64-06.arm.fedoraproject.org", 
            "Description": "\nThe core of every CGI application seems to be roughly the same:\n\n*   Analyze the incoming parameters, cookies, and URLs to determine the state\nof the application (let's call this \"dispatch\").\n* Based on the current state, analyze the incoming parameters to respond to\nany form submitted (\"respond\").\n*   From there, decide what response page should be generated, and produce it\n(\"render\").\n\nCGI::Prototype creates a \"Class::Prototyped\" engine for doing all this, with\nthe right amount of callback hooks to customize the process.  Because I'm\nbiased toward Template Toolkit for rendering HTML, I've also integrated that\nas my rendering engine of choice. And, being a fan of clean MVC designs, the\nclasses become the controllers, and the templates become the views, with clean\nseparation of responsibilities, and \"CGI::Prototype\" a sort of \"archetypal\"\ncontroller.\n", 
            "Build Date": " Fri 28 Jul 2017 01:37:24 AM EDT", 
            "Source RPM": " perl-CGI-Prototype-0.9054-17.fc27.src.rpm", 
            "Version": " 0.9054", 
            "Architecture": " noarch", 
            "Signature": " RSA/SHA256, Fri 28 Jul 2017 08:01:42 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 17.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Create a CGI application by subclassing", 
            "Size": " 48333"
        }
    }
}