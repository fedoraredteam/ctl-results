{
    "results": {
        "usr/bin/procServ": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/procServ", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "strncpy", 
                "sigprocmask", 
                "__fprintf_chk", 
                "getenv", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm", 
                "chdir", 
                "tcsetattr", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv", 
                "waitpid", 
                "unlink", 
                "__strncat_chk", 
                "getgid", 
                "socket", 
                "__assert_fail", 
                "getrlimit", 
                "exit", 
                "__cxa_allocate_exception", 
                "_Znwm", 
                "isatty", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_", 
                "strncat", 
                "__errno_location", 
                "getpwnam", 
                "telnet_free", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l", 
                "getcwd", 
                "index", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "telnet_init", 
                "perror", 
                "open", 
                "setsid", 
                "getopt_long", 
                "strlen", 
                "memcpy", 
                "accept", 
                "read", 
                "bind", 
                "calloc", 
                "setsockopt", 
                "_ZSt24__throw_out_of_range_fmtPKcz", 
                "shutdown", 
                "chown", 
                "fclose", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEEC1Ev", 
                "setrlimit", 
                "strerror", 
                "__cxa_end_catch", 
                "sigaddset", 
                "sigemptyset", 
                "getpid", 
                "dup", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm", 
                "telnet_send", 
                "write", 
                "_ZNSo9_M_insertImEERSoT_", 
                "execvp", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode", 
                "_ZSt19__throw_logic_errorPKc", 
                "_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev", 
                "strcmp", 
                "_ITM_deregisterTMCloneTable", 
                "getsockname", 
                "_ZNSt6localeD1Ev", 
                "__snprintf_chk", 
                "__cxa_begin_catch", 
                "puts", 
                "telnet_negotiate", 
                "time", 
                "pselect", 
                "__cxa_throw", 
                "_ZNSt12__basic_fileIcED1Ev", 
                "__stack_chk_fail", 
                "close", 
                "localtime_r", 
                "_ZNSt8ios_baseD2Ev", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc", 
                "fwrite", 
                "strtol", 
                "__fdelt_chk", 
                "listen", 
                "strdup", 
                "_ZNSolsEi", 
                "abort", 
                "_Unwind_Resume", 
                "chmod", 
                "sscanf", 
                "tcgetattr", 
                "_ITM_registerTMCloneTable", 
                "__libc_start_main", 
                "strftime", 
                "__printf_chk", 
                "kill", 
                "_ZdlPv", 
                "_ZdlPvm", 
                "__gxx_personality_v0", 
                "inet_ntop", 
                "__xstat", 
                "fork", 
                "getuid", 
                "sigaction", 
                "fopen", 
                "_ZNSt8ios_baseC2Ev", 
                "forkpty", 
                "telnet_recv", 
                "__gmon_start__", 
                "__cxa_pure_virtual", 
                "getgrnam", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate", 
                "free", 
                "__cxa_finalize", 
                "fsync"
            ], 
            "rpm": "procServ-2.7.0-4.fc27.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Applications/System", 
            "Name": " procServ", 
            "License": " GPLv3", 
            "URL": " https://github.com/ralphlange/procServ", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-13.phx2.fedoraproject.org", 
            "Description": "\nprocServ is a wrapper that starts an arbitrary command as a child process in\nthe background, connecting its standard input and output to a Unix domain\nsocket or a TCP port for telnet access.\nIt supports logging, child restart (manual or automatic on exit), and more.\n\nprocServ does not have the rich feature set of the screen utility,\nbut is intended to provide running a command in a system service style,\nin a small, robust way.\nHandling multiple users, authorization, authentication, central logging\nis done best on a higher level, using a package like conserver.\n\nFor security reasons, procServ only accepts connections from localhost.\n", 
            "Build Date": " Fri 04 Aug 2017 07:41:13 AM EDT", 
            "Source RPM": " procServ-2.7.0-4.fc27.src.rpm", 
            "Version": " 2.7.0", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Sat 05 Aug 2017 04:40:39 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 4.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Process server with telnet console and log access", 
            "Size": " 255387"
        }
    }
}