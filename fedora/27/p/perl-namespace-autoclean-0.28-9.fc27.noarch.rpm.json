{
    "results": "no elfs found", 
    "metadata": {
        "spec_data": {
            "Group": " Development/Libraries", 
            "Name": " perl-namespace-autoclean", 
            "License": " GPL+ or Artistic", 
            "URL": " http://search.cpan.org/dist/namespace-autoclean", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-18.phx2.fedoraproject.org", 
            "Description": "\nWhen you import a function into a Perl package, it will naturally also be\navailable as a method. The 'namespace::autoclean' pragma will remove all\nimported symbols at the end of the current package's compile cycle. Functions\ncalled in the package itself will still be bound by their name, but they won't\nshow up as methods on your class or instances. This module is very similar to\nnamespace::clean, except it will clean all imported functions, no matter if you\nimported them before or after you 'use'd the pragma. It will also not touch\nanything that looks like a method.\n", 
            "Build Date": " Fri 28 Jul 2017 07:39:04 AM EDT", 
            "Source RPM": " perl-namespace-autoclean-0.28-9.fc27.src.rpm", 
            "Version": " 0.28", 
            "Architecture": " noarch", 
            "Signature": " RSA/SHA256, Fri 28 Jul 2017 06:57:32 PM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 9.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Keep imports out of your namespace", 
            "Size": " 41709"
        }
    }
}