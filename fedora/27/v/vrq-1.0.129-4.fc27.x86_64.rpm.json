{
    "results": {
        "usr/lib64/vrq-1_0_129/sim_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/vrq-1.0.129/sim.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "gzflush", 
                "_ZN6CBlock12GetParamListEv", 
                "strncpy", 
                "index", 
                "_ZN8CObstackC1EPKci", 
                "__fread_chk", 
                "_ZNSt8ios_baseD2Ev", 
                "exp", 
                "signal", 
                "_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate", 
                "_ZN9CInstance13GetParametersEv", 
                "__isoc99_sscanf", 
                "fwrite", 
                "rindex", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l", 
                "strtol", 
                "__vfprintf_chk", 
                "getenv", 
                "__gmon_start__", 
                "exit", 
                "ftello", 
                "perror", 
                "isalnum", 
                "_ZN5CGate12GetArgumentsEv", 
                "strncmp", 
                "_ZSt24__throw_out_of_range_fmtPKcz", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm", 
                "_ZN5CPort13GetConnectionEv", 
                "_ZN7CVector8GetWidthEv", 
                "_ZN6CBlock10GetVarListEv", 
                "toupper", 
                "lt_dlsym", 
                "_ZN7CVectorD1Ev", 
                "_ZN7CVector10GetDecimalEv", 
                "_ZN7CVector9GetStringEv", 
                "ldexp", 
                "pow", 
                "_ZN6CBlock13GetGenvarListEv", 
                "isalpha", 
                "__printf_chk", 
                "fgets", 
                "puts", 
                "_ITM_registerTMCloneTable", 
                "unlink", 
                "tolower", 
                "__cxa_rethrow", 
                "clock", 
                "_ZN9CInstance13GetDefinitionEv", 
                "malloc", 
                "_ZN5CNode5stackE", 
                "opendir", 
                "BZ2_bzdopen", 
                "_ZN8CObstackD1Ev", 
                "_ZNK7CSymbol8ExternalEv", 
                "_ZNSo9_M_insertIPKvEERSoT_", 
                "stpcpy", 
                "gzclose", 
                "_ZSt16__throw_bad_castv", 
                "_Z11shell_xfreePvi", 
                "memset", 
                "strtod", 
                "_ZN5CNodeC1EP7Coord_t8NodeOp_t", 
                "__cxa_end_catch", 
                "fmod", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "_IO_getc", 
                "abort", 
                "calloc", 
                "__fprintf_chk", 
                "__stpcpy_chk", 
                "__cxa_throw", 
                "warningCount", 
                "_ZNKSt5ctypeIcE13_M_widen_initEv", 
                "_ZN7CModule11IsPrimitiveEv", 
                "_ZN5CGate15GetDelayControlEv", 
                "qsort", 
                "strlen", 
                "fopen", 
                "fflush", 
                "_Z10GetPlusArgPKc", 
                "memcpy", 
                "isatty", 
                "_ZSt17__throw_bad_allocv", 
                "__cxa_guard_abort", 
                "times", 
                "isspace", 
                "strchr", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcmm", 
                "_ZN7CSymbol6LookupEPKc", 
                "time", 
                "_ZdlPv", 
                "free", 
                "__strcpy_chk", 
                "__strcat_chk", 
                "vfscanf", 
                "_ZN8CObstack5AllocEl", 
                "strcpy", 
                "_ZNSt6localeC1Ev", 
                "_ZNK5CUIntanEj", 
                "_Z14GetPluginPathsRNSt7__cxx114listINS_12basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEE", 
                "_Z12shell_assertPKci", 
                "_ZNSt8ios_base4InitC1Ev", 
                "fclose", 
                "gzdopen", 
                "readdir", 
                "dup", 
                "BZ2_bzwrite", 
                "_ZNSt8ios_baseC2Ev", 
                "_ZN5Array9ArrayDeclEP5CNode", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm", 
                "lt_dlopen", 
                "__cxa_finalize", 
                "fputc", 
                "__cxa_guard_release", 
                "_Z3NegP7CVectorS0_", 
                "_ZN7CVector6GetHexEv", 
                "_ZN5CGate7GetTypeEv", 
                "_ZN7CVector9GetBinaryEv", 
                "fseeko", 
                "_ZNSo3putEc", 
                "errorCount", 
                "add_history", 
                "fileno", 
                "_ZNK5CUIntrsEj", 
                "memmove", 
                "_ZN5CNode8ArgCountEv", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "__cxa_atexit", 
                "_Znwm", 
                "system", 
                "strrchr", 
                "_ZN7CVector8GetOctalEv", 
                "_ZN6CBlock10GetNetListEv", 
                "_ZN6CParam13GetExpressionEv", 
                "lt_dlclose", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "__gxx_personality_v0", 
                "_ZNSo5flushEv", 
                "_ZNSt8ios_base4InitD1Ev", 
                "strcmp", 
                "_ITM_deregisterTMCloneTable", 
                "BZ2_bzclose", 
                "_ZN9CInstance17GetArgumentVectorEv", 
                "_ZNSt6localeD1Ev", 
                "_ZN7CVectorC1El", 
                "sysconf", 
                "ctime", 
                "_ZNK5CUInt9GetUINT32Ev", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "sqrt", 
                "strtok", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "memcmp", 
                "log", 
                "_ZSt19__throw_logic_errorPKc", 
                "_ZNK5CUIntneEj", 
                "__cxa_pure_virtual", 
                "__cxa_begin_catch", 
                "__vsprintf_chk", 
                "_ZSt20__throw_length_errorPKc", 
                "_ZN5CNode9EvalINT32Ev", 
                "realloc", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_", 
                "__sprintf_chk", 
                "_ZNK7CSymbol7GetNameEv", 
                "_ZdlPvm", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm", 
                "__cxa_guard_acquire", 
                "gzwrite", 
                "__stack_chk_fail", 
                "__snprintf_chk", 
                "ungetc", 
                "_Z11GetPlusArgsPKcRNSt7__cxx114listINS1_12basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EEE", 
                "strdup", 
                "_ZNSo9_M_insertIlEERSoT_", 
                "__cxa_allocate_exception", 
                "_Unwind_Resume"
            ], 
            "rpm": "vrq-1.0.129-4.fc27.x86_64.rpm"
        }, 
        "usr/lib64/vrq-1_0_129/coverage_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/vrq-1.0.129/coverage.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "_ZN11CSimpleTypeC1E13VarDataType_t", 
                "__cxa_pure_virtual", 
                "_Znwm", 
                "memcmp", 
                "__cxa_atexit", 
                "_ZN5CNodeC1EP7Coord_t8NodeOp_t", 
                "_ZSt19__throw_logic_errorPKc", 
                "_Z5errorP7Coord_tPKcz", 
                "_ZN5CNode5stackE", 
                "__fprintf_chk", 
                "_ZN5CNode8ArgCountEv", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm", 
                "memcpy", 
                "__gxx_personality_v0", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "_ZN8CObstack4GrowEPKvl", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "_ZN7CVectorC1El", 
                "_ITM_registerTMCloneTable", 
                "_Unwind_Resume", 
                "_ZN8CObstack5AllocEl", 
                "_Z10GetPlusArgPKc", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_ZN7CSymbol6LookupEPKc", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "_ITM_deregisterTMCloneTable", 
                "strrchr", 
                "_ZN7CVectoraSEm", 
                "strlen", 
                "_Z12shell_assertPKci", 
                "__sprintf_chk", 
                "_ZdlPvm", 
                "strstr", 
                "fopen", 
                "_ZdlPv", 
                "_ZNSt8ios_base4InitD1Ev", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm", 
                "__cxa_finalize", 
                "abort", 
                "_ZN4CVarC1EP7CSymbolP7Coord_tP9CDataTypei", 
                "__gmon_start__", 
                "_ZNK7CSymbol7GetNameEv", 
                "__stack_chk_fail"
            ], 
            "rpm": "vrq-1.0.129-4.fc27.x86_64.rpm"
        }, 
        "usr/bin/vrq": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/vrq", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "regcomp", 
                "__gxx_personality_v0", 
                "__sprintf_chk", 
                "_ITM_registerTMCloneTable", 
                "free", 
                "strdup", 
                "stpcpy", 
                "strndup", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l", 
                "_ZNSt8ios_baseD2Ev", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate", 
                "strncpy", 
                "_ZNSolsEi", 
                "__gmon_start__", 
                "argz_stringify", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm", 
                "ldexp", 
                "malloc", 
                "opendir", 
                "__ctype_b_loc", 
                "__cxa_guard_release", 
                "dlclose", 
                "strchr", 
                "strpbrk", 
                "_Znwm", 
                "isalpha", 
                "exit", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm", 
                "fileno", 
                "strcpy", 
                "getenv", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "memcpy", 
                "fclose", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc", 
                "memcmp", 
                "argz_append", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc", 
                "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base", 
                "__cxa_rethrow", 
                "abort", 
                "dlerror", 
                "isatty", 
                "_ZNSt8__detail15_List_node_base9_M_unhookEv", 
                "strncat", 
                "_ZNSt6localeC1Ev", 
                "ferror", 
                "__cxa_throw", 
                "strtod", 
                "fwrite", 
                "_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_", 
                "strspn", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_", 
                "readdir", 
                "_ZNSt6localeD1Ev", 
                "fputs", 
                "argz_insert", 
                "_ZSt17__throw_bad_allocv", 
                "_Unwind_Resume", 
                "__cxa_guard_acquire", 
                "argz_create_sep", 
                "__printf_chk", 
                "strstr", 
                "__dynamic_cast", 
                "getc", 
                "__cxa_finalize", 
                "putchar", 
                "ungetc", 
                "regexec", 
                "__errno_location", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm", 
                "strlen", 
                "_ZNSt8ios_baseC2Ev", 
                "__libc_start_main", 
                "_ZNSt8ios_base4InitD1Ev", 
                "__cxa_allocate_exception", 
                "__cxa_atexit", 
                "__cxa_pure_virtual", 
                "_ZSt20__throw_length_errorPKc", 
                "closedir", 
                "__vsnprintf_chk", 
                "__snprintf_chk", 
                "_ZSt19__throw_logic_errorPKc", 
                "fgets", 
                "_ZNSt8__detail15_List_node_base11_M_transferEPS0_S1_", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "fread", 
                "fgetc", 
                "feof", 
                "random", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "memmove", 
                "strcmp", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc", 
                "access", 
                "realloc", 
                "_ZNSt8ios_base4InitC1Ev", 
                "puts", 
                "_ZdlPvm", 
                "dlsym", 
                "_ZdlPv", 
                "_ITM_deregisterTMCloneTable", 
                "__stack_chk_fail", 
                "pow", 
                "strtol", 
                "_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "strncmp", 
                "strcspn", 
                "__fprintf_chk", 
                "__cxa_end_catch", 
                "_ZdaPv", 
                "__assert_fail", 
                "calloc", 
                "dlopen", 
                "__cxa_begin_catch", 
                "__cxa_call_unexpected", 
                "rindex", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "strtok", 
                "fputc", 
                "memset", 
                "strrchr", 
                "fopen", 
                "__vfprintf_chk"
            ], 
            "rpm": "vrq-1.0.129-4.fc27.x86_64.rpm"
        }, 
        "usr/lib64/vrq-1_0_129/flatten_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/vrq-1.0.129/flatten.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "_ZNK7CSymbol7GetNameEv", 
                "__cxa_atexit", 
                "memcmp", 
                "__gmon_start__", 
                "_ZN5CNode9LabelBitsEi", 
                "_ZNSt8ios_base4InitD1Ev", 
                "_Z7messageP7Coord_tP7Messagez", 
                "_ZSt19__throw_logic_errorPKc", 
                "_ZN8CObstack5AllocEl", 
                "_Unwind_Resume", 
                "__cxa_pure_virtual", 
                "_ZdlPvm", 
                "_ZN5CNodeC1EP7Coord_t8NodeOp_t", 
                "strlen", 
                "_ITM_deregisterTMCloneTable", 
                "_ZN5CNode5CloneEP8CObstack", 
                "_ZN7CSymbol6LookupEPKc", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_ZN9CInstance13GetDefinitionEv", 
                "_Z14AnalyseModulesP5CNodeRSt3setIP7CModuleSt4lessIS3_ESaIS3_EES8_S8_S8_RSt3mapIS3_S0_S5_SaISt4pairIKS3_S0_EEE", 
                "_ZN5CNode13PostSubVisit1EPFPS_S0_PvES1_", 
                "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base", 
                "_ZN6CBlock3AddEP6CParam", 
                "_ZN6CBlock3AddEP4CVar", 
                "_ZN5CPort13GetConnectionEv", 
                "_ZTI5CDecl", 
                "_Z5errorP7Coord_tPKcz", 
                "_ZN6CBlock10GetVarListEv", 
                "_ZN8CObstackC1EPKci", 
                "_ZN8CObstackD1Ev", 
                "_ZTI6CParam", 
                "_ZN5CNode10PostVisit1EPFvPS_PvES1_", 
                "_ZN8CObstack4GrowEPKvl", 
                "_ZN7CModule11IsPrimitiveEv", 
                "_ZN8CObstack6FinishEv", 
                "_ZN9CInstance17GetArgumentVectorEv", 
                "__stack_chk_fail", 
                "_Znwm", 
                "_ZN7Message15RegisterWarningEP8CBackendNS_8Action_tEPKcS4_z", 
                "_ZN6CBlock10GetNetListEv", 
                "__cxa_finalize", 
                "__gxx_personality_v0", 
                "_ZTI4CVar", 
                "_ZTI4CNet", 
                "__dynamic_cast", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "_ZN5CNode5stackE", 
                "_ZN5CNode8ArgCountEv", 
                "strspn", 
                "memcpy", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "_Z5traceP7Coord_tPKcz", 
                "_Z12shell_assertPKci", 
                "_ITM_registerTMCloneTable", 
                "_ZN6CBlock12GetParamListEv", 
                "_ZN6CBlock3AddEP4CNet", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm"
            ], 
            "rpm": "vrq-1.0.129-4.fc27.x86_64.rpm"
        }, 
        "usr/lib64/vrq-1_0_129/rectify_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/vrq-1.0.129/rectify.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "_ZdlPv", 
                "_ZN8CObstack5AllocEl", 
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable", 
                "_ZdlPvm", 
                "__stack_chk_fail", 
                "_Z11shell_xfreePvi", 
                "__gmon_start__", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "_Z13shell_xmalloci", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm", 
                "__cxa_pure_virtual", 
                "_ZNK5CUIntneEj", 
                "_Z7messageP7Coord_tP7Messagez", 
                "_Unwind_Resume", 
                "__gxx_personality_v0", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm", 
                "_ZN7Message15RegisterWarningEP8CBackendNS_8Action_tEPKcS4_z", 
                "_ZN5CAttr22GetAttributeExpressionEPKc", 
                "memcmp", 
                "memcpy", 
                "_ZNK5CUIntcoEv", 
                "_ZN5CNode9EvalINT32Ev", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_ZNK5CUIntanERKS_", 
                "__cxa_atexit", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "_ZN5CNode12GetAttributeEPKcPS_i", 
                "_ZNSt8ios_base4InitD1Ev", 
                "_Znwm", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "_Z10GetPlusArgPKc", 
                "strtol", 
                "_ZSt19__throw_logic_errorPKc", 
                "_ZNK5CUIntorERKS_", 
                "_ZN5CNode12HasAttributeEPKcPS_i", 
                "strlen", 
                "_Z12shell_assertPKci", 
                "_ZN5CNode9PreVisit1EPFiPS_PvES1_", 
                "_ZN5CNode8ArgCountEv"
            ], 
            "rpm": "vrq-1.0.129-4.fc27.x86_64.rpm"
        }, 
        "usr/lib64/vrq-1_0_129/stats_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/vrq-1.0.129/stats.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "_ZN6CBlock10GetNetListEv", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "_ZN5CNode19IsWidthEvaluateableEv", 
                "_ZN5CNode5stackE", 
                "_Z7messageP7Coord_tP7Messagez", 
                "_ZSt19__throw_logic_errorPKc", 
                "abort", 
                "_ZN5CNode8ArgCountEv", 
                "_ITM_registerTMCloneTable", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "_ZN8CObstack5AllocEl", 
                "_ZdlPv", 
                "_ZN5CNode9PreVisit1EPFiPS_PvES1_", 
                "__stack_chk_fail", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "_Z5errorP7Coord_tPKcz", 
                "_ZN5CNode9LabelBitsEi", 
                "putchar", 
                "memcmp", 
                "_ZdlPvm", 
                "_ZNK7CSymbol7GetNameEv", 
                "_ITM_deregisterTMCloneTable", 
                "_ZN5CNode9EvalINT32Ev", 
                "_ZN6CBlock10GetVarListEv", 
                "__printf_chk", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "__cxa_finalize", 
                "_ZN5CNodeC1EP7Coord_t8NodeOp_t", 
                "__cxa_atexit", 
                "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base", 
                "__cxa_pure_virtual", 
                "_Unwind_Resume", 
                "_Z10IdentifierPKc", 
                "__gmon_start__", 
                "_Znwm", 
                "_ZNSt8ios_base4InitC1Ev", 
                "memcpy", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm", 
                "_ZN7Message15RegisterWarningEP8CBackendNS_8Action_tEPKcS4_z", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm", 
                "_ZNSt8ios_base4InitD1Ev", 
                "__gxx_personality_v0", 
                "_ZN9CInstance13GetDefinitionEv"
            ], 
            "rpm": "vrq-1.0.129-4.fc27.x86_64.rpm"
        }, 
        "usr/lib64/vrq-1_0_129/filter_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/vrq-1.0.129/filter.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "_Z12shell_assertPKci", 
                "__cxa_finalize", 
                "memcpy", 
                "__cxa_begin_catch", 
                "_ZSt20__throw_length_errorPKc", 
                "_ITM_deregisterTMCloneTable", 
                "_ZN5CNode13PostSubVisit1EPFPS_S0_PvES1_", 
                "_Znwm", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm", 
                "_ZN5CNode9PreVisit1EPFiPS_PvES1_", 
                "_ZNSt8ios_base4InitD1Ev", 
                "_ITM_registerTMCloneTable", 
                "_ZSt19__throw_logic_errorPKc", 
                "strlen", 
                "abort", 
                "_ZdlPv", 
                "__stack_chk_fail", 
                "__gxx_personality_v0", 
                "__cxa_pure_virtual", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "_ZSt24__throw_out_of_range_fmtPKcz", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "tolower", 
                "_ZNSt8ios_base4InitC1Ev", 
                "__cxa_end_catch", 
                "__gmon_start__", 
                "memcmp", 
                "_Unwind_Resume", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm", 
                "_Z10GetPlusArgPKc", 
                "_ZdlPvm", 
                "_Z11GetPlusArgsPKcRNSt7__cxx114listINS1_12basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EEE", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm", 
                "nodeOpDescription", 
                "__cxa_rethrow", 
                "_ZN5CNode8ArgCountEv", 
                "nodeOpName", 
                "__cxa_atexit"
            ], 
            "rpm": "vrq-1.0.129-4.fc27.x86_64.rpm"
        }, 
        "usr/lib64/vrq-1_0_129/builder_so": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/vrq-1.0.129/builder.so", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "_Z9logprintfPKcz", 
                "memcmp", 
                "_ZN4CNetC1EP7CSymbolP7Coord_t6Wire_tP9CDataTypei", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "_ZN7CVectorC1El", 
                "_ZNK7CSymbol7GetNameEv", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm", 
                "fclose", 
                "_ZSt20__throw_length_errorPKc", 
                "_ZN7CModule8SetPortsEP5CNode", 
                "fputc", 
                "__cxa_pure_virtual", 
                "_Z5errorP7Coord_tPKcz", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "getcwd", 
                "_ZN5CPortC1EP7CSymboliP7Coord_t", 
                "_ZN5CNode9EvalINT32Ev", 
                "includeFiles", 
                "_ITM_registerTMCloneTable", 
                "_Z10GetPlusArgPKc", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_ZN5CNodeC1EP7Coord_t8NodeOp_t", 
                "__gxx_personality_v0", 
                "_ZN7CSymtabI5CDeclE7ResolveEP7CSymbol", 
                "_ZN11CSimpleTypeC1E13VarDataType_t", 
                "abort", 
                "strchr", 
                "_ZN7Message15RegisterWarningEP8CBackendNS_8Action_tEPKcS4_z", 
                "_ZN7CSymbol6LookupEPKc", 
                "_ZN5CNode9LabelBitsEi", 
                "strlen", 
                "__cxa_finalize", 
                "fopen", 
                "strrchr", 
                "__gmon_start__", 
                "_Z12shell_assertPKci", 
                "__cxa_atexit", 
                "_Z7messageP7Coord_tP7Messagez", 
                "_ZN5CPort13SetConnectionEP5CNode", 
                "__fprintf_chk", 
                "_ZNSt8ios_base4InitD1Ev", 
                "_ZN9CInstance13GetDefinitionEv", 
                "_ZN7CVectoraSEm", 
                "_ZN6CBlock3AddEP4CNet", 
                "_ZSt19__throw_logic_errorPKc", 
                "_ZN9CInstance12GetArgumentsEv", 
                "fwrite", 
                "_ZdlPvm", 
                "_ZN5CPort13GetConnectionEv", 
                "_Znwm", 
                "_ZN5CNode8ArgCountEv", 
                "_ZdlPv", 
                "_ZN8CObstack5AllocEl", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "outputPath", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm", 
                "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base", 
                "_ZN11CSimpleTypeC1E13VarDataType_tRNSt7__cxx114listIP5CNodeSaIS4_EEE", 
                "_ITM_deregisterTMCloneTable", 
                "_ZN9CInstance12SetArgumentsEP5CNode", 
                "_ZN5CNode11GetWidthExpEv", 
                "_ZN8CPortDirC1EP7CSymbolP7Coord_t6Decl_tP9CDataType", 
                "memcpy", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm", 
                "_ZN5CNode5stackE", 
                "__stack_chk_fail", 
                "_Unwind_Resume"
            ], 
            "rpm": "vrq-1.0.129-4.fc27.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Applications/Engineering", 
            "Name": " vrq", 
            "License": " GPLv2+", 
            "URL": " http://vrq.sourceforge.net/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-14.phx2.fedoraproject.org", 
            "Description": "\nVRQ is modular verilog parser that supports plugin tools to process verilog.\nMultiple tools may be invoked in a pipeline fashion within a single execution\nof vrq. It is a generic front-end parser with support for plugin backend\ncustomizable tools.\n", 
            "Build Date": " Fri 04 Aug 2017 10:59:02 PM EDT", 
            "Source RPM": " vrq-1.0.129-4.fc27.src.rpm", 
            "Version": " 1.0.129", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Sat 05 Aug 2017 12:19:56 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 4.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Verilog tool framework with plugins for manipulating source code", 
            "Size": " 2180119"
        }
    }
}