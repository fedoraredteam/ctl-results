{
    "results": {
        "usr/lib/libvolume_key_so_1_2_2": {
            "report-functions": [
                "g_locale_to_utf8", 
                "g_strdup_printf", 
                "g_ptr_array_new", 
                "crypt_volume_key_get", 
                "__xpg_strerror_r", 
                "_ITM_registerTMCloneTable", 
                "g_base64_encode", 
                "PK11_ParamFromIV", 
                "NSS_CMSEncoder_Finish", 
                "PK11_GetInternalKeySlot", 
                "PK11_FreeSlot", 
                "SECKEY_DestroyPublicKey", 
                "g_slist_prepend", 
                "crypt_get_cipher", 
                "g_malloc", 
                "gpgme_set_protocol", 
                "crypt_init", 
                "g_slist_reverse", 
                "g_strdup", 
                "SECKEY_DestroyPrivateKey", 
                "strtol", 
                "NSS_CMSRecipientInfo_Destroy", 
                "PR_GetErrorText", 
                "gpgme_data_new_from_mem", 
                "gpgme_strsource", 
                "g_quark_from_static_string", 
                "memchr", 
                "blkid_get_tag_value", 
                "g_get_host_name", 
                "NSS_CMSEnvelopedData_Create", 
                "crypt_free", 
                "gpgme_data_release", 
                "PK11_GetMechanism", 
                "__cxa_finalize", 
                "__fprintf_chk", 
                "CERT_GetCertIssuerAndSN", 
                "PK11_GetBestSlot", 
                "strlen", 
                "g_set_error", 
                "gpgme_check_version_internal", 
                "g_locale_from_utf8", 
                "g_clear_error", 
                "__gmon_start__", 
                "crypt_get_uuid", 
                "free", 
                "g_log", 
                "PR_GetError", 
                "strcmp", 
                "ctime_r", 
                "crypt_get_cipher_mode", 
                "crypt_keyslot_add_by_volume_key", 
                "NSS_CMSMessage_CreateFromDER", 
                "SECKEY_PublicKeyStrength", 
                "NSS_CMSEnvelopedData_AddRecipient", 
                "NSS_CMSMessage_Destroy", 
                "gpgme_data_new", 
                "gpgme_ctx_set_engine_info", 
                "SECITEM_AllocItem", 
                "gpgme_op_decrypt", 
                "PK11_GenerateNewParam", 
                "__stack_chk_fail", 
                "NSS_CMSEncoder_Update", 
                "g_prefix_error", 
                "g_strv_length", 
                "PK11_PubUnwrapSymKey", 
                "g_realloc", 
                "CERT_GetDefaultCertDB", 
                "PK11_WrapSymKey", 
                "g_free", 
                "SECITEM_FreeItem", 
                "g_ptr_array_free", 
                "CERT_FindCertByIssuerAndSN", 
                "gpgme_set_passphrase_cb", 
                "NSS_CMSRecipientInfo_Create", 
                "_ITM_deregisterTMCloneTable", 
                "fwrite", 
                "crypt_get_error", 
                "g_str_has_prefix", 
                "PK11_ExtractKeyValue", 
                "gpgme_op_encrypt", 
                "blkid_put_cache", 
                "PR_GetErrorTextLength", 
                "g_base64_decode", 
                "CERT_DestroyCertificate", 
                "PK11_FreeSymKey", 
                "gpgme_strerror_r", 
                "PK11_ImportSymKey", 
                "PK11_GetKeyLength", 
                "bindtextdomain", 
                "PORT_FreeArena", 
                "blkid_get_cache", 
                "g_snprintf", 
                "NSS_CMSEnvelopedData_Destroy", 
                "setlocale", 
                "NSS_CMSEnvelopedData_GetContentInfo", 
                "crypt_volume_key_verify", 
                "gpgme_data_release_and_get_mem", 
                "PK11_IVFromParam", 
                "PK11_PubWrapSymKey", 
                "_IO_putc", 
                "g_strsplit", 
                "g_memdup", 
                "g_return_if_fail_warning", 
                "g_ptr_array_add", 
                "gpgme_set_locale", 
                "__errno_location", 
                "g_dgettext", 
                "gpgme_free", 
                "crypt_load", 
                "CERT_ExtractPublicKey", 
                "PORT_NewArena", 
                "PK11_UnwrapSymKey", 
                "g_strfreev", 
                "PK11_FindPrivateKeyFromCert", 
                "NSS_CMSMessage_GetContent", 
                "NSS_CMSEncoder_Start", 
                "g_malloc0", 
                "PR_ErrorToString", 
                "gpgme_release", 
                "NSS_CMSMessage_Create", 
                "gpgme_new", 
                "write", 
                "PK11_GetKeyData", 
                "gpgme_error_from_errno", 
                "crypt_activate_by_volume_key", 
                "crypt_get_volume_key_size", 
                "NSS_CMSMessage_GetContentInfo"
            ], 
            "rpm": "volume_key-libs-0.3.9-15.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libvolume_key.so.1.2.2"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " System Environment/Libraries", 
            "Name": " volume_key-libs", 
            "License": " GPLv2", 
            "URL": " https://pagure.io/volume_key/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-04.phx2.fedoraproject.org", 
            "Description": "\nThis package provides libvolume_key, a library for manipulating storage volume\nencryption keys and storing them separately from volumes.\n\nThe main goal of the software is to allow restoring access to an encrypted\nhard drive if the primary user forgets the passphrase.  The encryption key\nback up can also be useful for extracting data after a hardware or software\nfailure that corrupts the header of the encrypted volume, or to access the\ncompany data after an employee leaves abruptly.\n", 
            "Build Date": " Fri 04 Aug 2017 10:53:45 PM EDT", 
            "Source RPM": " volume_key-0.3.9-15.fc27.src.rpm", 
            "Version": " 0.3.9", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Sat 05 Aug 2017 10:00:29 PM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 15.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " A library for manipulating storage encryption keys and passphrases", 
            "Size": " 696911"
        }
    }
}