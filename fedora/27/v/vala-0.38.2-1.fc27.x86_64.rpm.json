{
    "results": {
        "usr/bin/vapicheck-0_38": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/vapicheck-0.38", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "g_path_get_basename", 
                "g_strndup", 
                "g_param_spec_internal", 
                "g_hash_table_lookup", 
                "strtoll", 
                "g_strdup", 
                "g_assertion_message_expr", 
                "g_list_free", 
                "g_string_free", 
                "memcpy", 
                "g_log", 
                "g_file_get_contents", 
                "g_strsplit", 
                "g_string_new", 
                "g_markup_parse_context_new", 
                "g_return_if_fail_warning", 
                "g_str_equal", 
                "strchr", 
                "vala_source_reference_new", 
                "g_error_free", 
                "vala_code_context_ref", 
                "strtod", 
                "g_realloc", 
                "g_strv_length", 
                "vala_code_context_unref", 
                "vala_hash_set_new", 
                "vala_source_file_get_filename", 
                "g_hash_table_insert", 
                "g_module_close", 
                "vala_source_file_ref", 
                "strlen", 
                "g_type_instance_get_private", 
                "vala_array_list_new", 
                "__stack_chk_fail", 
                "g_list_insert_sorted", 
                "g_markup_error_quark", 
                "g_set_error", 
                "g_io_channel_read_line", 
                "g_list_length", 
                "g_type_name", 
                "_ITM_deregisterTMCloneTable", 
                "g_hash_table_destroy", 
                "g_type_check_instance_cast", 
                "vala_source_location_init", 
                "g_mapped_file_get_length", 
                "g_module_open", 
                "g_malloc0", 
                "g_module_error", 
                "g_type_class_add_private", 
                "g_once_init_leave", 
                "strcpy", 
                "g_strchug", 
                "g_string_append", 
                "strspn", 
                "g_strdup_printf", 
                "g_list_append", 
                "g_direct_equal", 
                "g_type_free_instance", 
                "__fprintf_chk", 
                "g_type_is_a", 
                "g_clear_error", 
                "g_hash_table_new", 
                "g_mapped_file_unref", 
                "g_list_free_full", 
                "g_strfreev", 
                "vala_report_error", 
                "g_once_init_enter", 
                "g_free", 
                "g_string_append_printf", 
                "g_str_hash", 
                "g_malloc", 
                "g_value_type_compatible", 
                "vala_list_remove_at", 
                "g_io_channel_new_file", 
                "g_type_fundamental_next", 
                "vala_list_get", 
                "strstr", 
                "g_strchomp", 
                "vala_collection_get_size", 
                "strcmp", 
                "strtoull", 
                "_ITM_registerTMCloneTable", 
                "strtol", 
                "__libc_start_main", 
                "g_str_has_prefix", 
                "g_type_check_value_holds", 
                "vala_source_reference_unref", 
                "g_type_create_instance", 
                "g_markup_parse_context_get_position", 
                "g_mapped_file_get_contents", 
                "g_type_register_fundamental", 
                "vala_source_file_unref", 
                "g_type_check_instance_is_a", 
                "vala_iterable_unref", 
                "g_type_class_peek_parent", 
                "memchr", 
                "g_io_channel_unref", 
                "g_str_has_suffix", 
                "vala_collection_add", 
                "g_file_test", 
                "__cxa_finalize", 
                "g_markup_parse_context_end_parse", 
                "vala_code_context_new", 
                "g_list_last", 
                "g_quark_to_string", 
                "__gmon_start__", 
                "g_markup_parse_context_free", 
                "g_strconcat", 
                "g_markup_parse_context_parse", 
                "vala_collection_contains", 
                "g_quark_from_static_string"
            ], 
            "rpm": "vala-0.38.2-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/libvala-0_38_so_0_0_0": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/libvala-0.38.so.0.0.0", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "memmove", 
                "g_str_equal", 
                "g_type_check_class_cast", 
                "g_unlink", 
                "g_sequence_insert_sorted", 
                "g_clear_error", 
                "g_strchug", 
                "g_module_symbol", 
                "g_list_free_full", 
                "memcmp", 
                "g_utf8_strdown", 
                "g_slice_free1", 
                "g_string_erase", 
                "g_type_fundamental_next", 
                "g_ascii_strup", 
                "strtol", 
                "g_utf8_validate", 
                "g_type_add_interface_static", 
                "g_path_is_absolute", 
                "g_enum_register_static", 
                "g_sequence_get_length", 
                "g_list_length", 
                "g_type_class_unref", 
                "g_ascii_formatd", 
                "g_strchomp", 
                "g_path_skip_root", 
                "g_direct_hash", 
                "g_type_create_instance", 
                "g_path_get_dirname", 
                "g_utf8_get_char_validated", 
                "strlen", 
                "g_free", 
                "g_string_insert_c", 
                "g_match_info_fetch", 
                "g_error_new_literal", 
                "g_strescape", 
                "fwrite", 
                "g_enum_get_value_by_nick", 
                "g_mapped_file_new", 
                "g_param_spec_internal", 
                "strstr", 
                "fputc", 
                "g_regex_escape_string", 
                "g_regex_new", 
                "g_return_if_fail_warning", 
                "g_type_instance_get_private", 
                "g_string_prepend", 
                "g_quark_from_static_string", 
                "__fprintf_chk", 
                "g_strnfill", 
                "g_pattern_spec_free", 
                "g_strdup_printf", 
                "g_sequence_new", 
                "g_str_has_prefix", 
                "g_utf8_get_char", 
                "g_spaced_primes_closest", 
                "g_type_free_instance", 
                "g_utf8_prev_char", 
                "g_ascii_strtoll", 
                "g_regex_replace_literal", 
                "g_strcompress", 
                "g_file_error_quark", 
                "g_unichar_isupper", 
                "g_quark_from_string", 
                "g_sequence_iter_next", 
                "g_type_register_static", 
                "g_type_name", 
                "g_list_remove", 
                "g_value_type_compatible", 
                "g_unichar_toupper", 
                "g_string_append_unichar", 
                "g_regex_unref", 
                "g_once_init_leave", 
                "g_boxed_type_register_static", 
                "g_type_fundamental", 
                "g_type_check_instance_cast", 
                "g_string_new", 
                "g_static_private_set", 
                "g_slice_alloc0", 
                "g_strndup", 
                "g_stpcpy", 
                "g_quark_to_string", 
                "g_ascii_tolower", 
                "fclose", 
                "fileno", 
                "g_module_close", 
                "g_memdup", 
                "g_error_free", 
                "g_error_new", 
                "g_get_prgname", 
                "_ITM_deregisterTMCloneTable", 
                "g_list_prepend", 
                "g_list_nth_data", 
                "g_str_hash", 
                "g_assertion_message_expr", 
                "g_malloc0", 
                "_ITM_registerTMCloneTable", 
                "g_str_has_suffix", 
                "__gmon_start__", 
                "g_unichar_tolower", 
                "memset", 
                "g_pattern_match_string", 
                "g_direct_equal", 
                "g_get_system_data_dirs", 
                "g_string_append", 
                "g_strcmp0", 
                "g_sequence_get", 
                "g_regex_error_quark", 
                "g_spawn_command_line_sync", 
                "g_type_interface_peek", 
                "g_log", 
                "g_type_interface_peek_parent", 
                "g_strsplit", 
                "g_regex_replace", 
                "g_get_current_dir", 
                "g_string_sized_new", 
                "g_build_path", 
                "g_mapped_file_get_length", 
                "g_realloc_n", 
                "g_sequence_iter_is_end", 
                "g_type_is_a", 
                "fopen", 
                "fputs", 
                "g_list_append", 
                "g_file_get_contents", 
                "g_ascii_strtod", 
                "g_regex_match", 
                "g_malloc", 
                "g_type_class_peek_parent", 
                "g_utf8_strchr", 
                "g_mapped_file_unref", 
                "g_once_init_enter", 
                "memchr", 
                "g_match_info_unref", 
                "g_path_get_basename", 
                "g_module_open", 
                "g_type_check_instance_is_a", 
                "g_static_private_get", 
                "g_type_check_value_holds", 
                "g_propagate_error", 
                "g_sequence_get_begin_iter", 
                "__stack_chk_fail", 
                "g_string_free", 
                "g_signal_handlers_destroy", 
                "__cxa_finalize", 
                "g_string_truncate", 
                "g_strconcat", 
                "g_static_private_init", 
                "g_unichar_to_utf8", 
                "rename", 
                "g_strdup", 
                "g_type_class_add_private", 
                "g_malloc0_n", 
                "g_type_interface_add_prerequisite", 
                "g_pattern_spec_new", 
                "strchr", 
                "g_type_class_ref", 
                "g_spawn_error_quark", 
                "g_type_register_fundamental", 
                "g_sequence_free", 
                "g_unichar_isdigit", 
                "g_mapped_file_get_contents"
            ], 
            "rpm": "vala-0.38.2-1.fc27.x86_64.rpm"
        }, 
        "usr/bin/vapigen-0_38": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/vapigen-0.38", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "vala_struct_set_simple_type", 
                "vala_code_node_set_attribute_bool", 
                "vala_attribute_has_argument", 
                "vala_error_code_new", 
                "vala_code_node_add_error_type", 
                "vala_void_type_new", 
                "vala_data_type_get_value_owned", 
                "g_type_fundamental_next", 
                "vala_code_context_add_packages_from_file", 
                "vala_variable_get_initializer", 
                "vala_code_writer_new", 
                "vala_variable_set_variable_type", 
                "vala_enum_get_type", 
                "g_mapped_file_get_contents", 
                "vala_symbol_add_struct", 
                "g_module_open", 
                "vala_symbol_get_parent_symbol", 
                "g_option_error_quark", 
                "vala_property_set_is_abstract", 
                "setlocale", 
                "strcmp", 
                "vala_array_list_new", 
                "vala_error_domain_add_code", 
                "g_string_new", 
                "vala_pointer_type_new", 
                "vala_interface_add_prerequisite", 
                "g_quark_to_string", 
                "vala_method_get_is_abstract", 
                "g_str_has_prefix", 
                "g_utf8_get_char", 
                "vala_property_set_interface_only", 
                "vala_symbol_add_error_domain", 
                "vala_report_error", 
                "vala_method_set_binding", 
                "g_string_truncate", 
                "vala_struct_set_base_type", 
                "strchr", 
                "g_match_info_unref", 
                "g_option_context_add_main_entries", 
                "vala_method_get_coroutine", 
                "g_type_check_instance_is_a", 
                "g_hash_table_lookup", 
                "vala_code_visitor_construct", 
                "g_type_class_peek_parent", 
                "vala_class_set_is_abstract", 
                "vala_source_reference_get_file", 
                "vala_map_get", 
                "g_strfreev", 
                "vala_null_literal_new", 
                "vala_struct_set_rank", 
                "vala_code_node_set_attribute_string", 
                "g_set_error", 
                "vala_parser_new", 
                "vala_iterator_get", 
                "memcpy", 
                "vala_data_type_set_value_owned", 
                "vala_delegate_get_type", 
                "vala_iterable_ref", 
                "vala_scope_lookup", 
                "vala_property_set_property_type", 
                "vala_gir_parser_new", 
                "vala_code_context_get_root", 
                "vala_member_access_new", 
                "vala_struct_get_type", 
                "vala_collection_get_size", 
                "g_string_free", 
                "g_ascii_strup", 
                "g_malloc0_n", 
                "vala_code_node_get_attribute_string", 
                "g_build_path", 
                "vala_code_visitor_unref", 
                "vala_collection_remove", 
                "vala_source_reference_new", 
                "vala_interface_get_type", 
                "vala_enum_new", 
                "g_pattern_match_string", 
                "vala_iterable_iterator", 
                "__gmon_start__", 
                "g_string_append", 
                "g_type_check_value_holds", 
                "vala_iterator_next", 
                "g_once_init_leave", 
                "g_str_hash", 
                "vala_map_set", 
                "vala_code_context_get_source_files", 
                "g_type_free_instance", 
                "vala_data_type_copy", 
                "vala_array_type_get_element_type", 
                "vala_method_get_type", 
                "vala_error_domain_new", 
                "vala_symbol_add_signal", 
                "g_hash_table_new", 
                "vala_map_unref", 
                "vala_hash_map_new", 
                "strcpy", 
                "strtoll", 
                "g_regex_unref", 
                "g_hash_table_insert", 
                "vala_code_node_set_attribute_double", 
                "vala_property_accessor_new", 
                "g_strsplit", 
                "vala_symbol_get_scope", 
                "vala_code_context_get_report", 
                "vala_symbol_add_constant", 
                "g_type_create_instance", 
                "g_pattern_spec_equal", 
                "g_string_append_printf", 
                "vala_constant_get_type", 
                "g_type_class_add_private", 
                "vala_symbol_add_delegate", 
                "vala_callable_set_return_type", 
                "vala_code_node_unref", 
                "g_list_last", 
                "vala_struct_new", 
                "strlen", 
                "vala_iterable_unref", 
                "vala_object_type_symbol_get_type", 
                "vala_symbol_camel_case_to_lower_case", 
                "g_utf8_offset_to_pointer", 
                "vala_source_file_add_node", 
                "vala_data_type_set_nullable", 
                "vala_property_get_get_accessor", 
                "vala_list_get", 
                "vala_symbol_add_property", 
                "vala_class_set_is_immutable", 
                "vala_enum_value_get_type", 
                "vala_code_context_get_metadata_path", 
                "g_type_name", 
                "vala_signal_get_type", 
                "vala_real_literal_new", 
                "vala_property_get_type", 
                "g_type_register_static", 
                "vala_source_file_ref", 
                "vala_code_node_set_source_reference", 
                "vala_interface_new", 
                "g_quark_from_static_string", 
                "g_option_context_set_help_enabled", 
                "vala_source_file_get_filename", 
                "vala_symbol_set_name", 
                "vala_symbol_get_type", 
                "vala_unresolved_symbol_new", 
                "vala_enum_add_value", 
                "vala_code_node_get_error_types", 
                "vala_iterator_unref", 
                "vala_parameter_set_ellipsis", 
                "g_type_register_fundamental", 
                "vala_code_context_unref", 
                "vala_code_context_add_source_file", 
                "g_file_error_quark", 
                "vala_array_type_get_type", 
                "vala_struct_is_simple_type", 
                "vala_typeparameter_new", 
                "g_signal_handlers_destroy", 
                "vala_source_reference_unref", 
                "vala_error_domain_get_type", 
                "g_type_check_instance_cast", 
                "vala_property_accessor_get_writable", 
                "vala_map_contains", 
                "vala_callable_get_parameters", 
                "vala_object_type_symbol_get_methods", 
                "vala_class_get_type", 
                "memchr", 
                "vala_report_get_errors", 
                "vala_method_set_has_construct_function", 
                "vala_source_file_set_gir_version", 
                "g_realloc", 
                "__fprintf_chk", 
                "vala_unresolved_type_new_from_symbol", 
                "vala_property_set_get_accessor", 
                "vala_source_file_set_gir_namespace", 
                "vala_unresolved_type_set_unresolved_symbol", 
                "strstr", 
                "vala_variable_get_variable_type", 
                "g_mapped_file_get_length", 
                "vala_callable_get_return_type", 
                "vala_creation_method_new", 
                "vala_method_new", 
                "g_strndup", 
                "g_list_length", 
                "vala_parameter_copy", 
                "vala_symbol_set_access", 
                "g_string_append_unichar", 
                "fwrite", 
                "vala_method_set_coroutine", 
                "g_option_context_new", 
                "vala_data_type_add_type_argument", 
                "g_slist_length", 
                "vala_signal_set_is_virtual", 
                "vala_code_node_get_attribute", 
                "g_strv_length", 
                "vala_property_accessor_get_value_type", 
                "vala_symbol_add_class", 
                "g_regex_error_quark", 
                "g_list_free", 
                "g_strdup", 
                "vala_array_type_new", 
                "vala_source_file_set_explicit", 
                "g_direct_hash", 
                "vala_code_node_accept_children", 
                "vala_report_set_enable_warnings", 
                "vala_enum_value_new", 
                "g_list_free_full", 
                "vala_code_context_accept", 
                "vala_symbol_add_enum", 
                "vala_code_writer_write_file", 
                "g_option_context_parse", 
                "vala_field_new", 
                "vala_variable_set_initializer", 
                "g_assertion_message_expr", 
                "g_direct_equal", 
                "vala_parameter_new_with_ellipsis", 
                "g_markup_parse_context_free", 
                "vala_field_get_type", 
                "g_file_test", 
                "g_str_has_suffix", 
                "g_strchomp", 
                "vala_typesymbol_get_type", 
                "g_strconcat", 
                "vala_parameter_get_direction", 
                "vala_code_context_add_external_package", 
                "g_utf8_strchr", 
                "vala_code_context_set_nostdpkg", 
                "g_return_if_fail_warning", 
                "vala_signal_new", 
                "vala_source_location_init", 
                "vala_symbol_set_external", 
                "g_unichar_isdigit", 
                "vala_unresolved_type_new", 
                "g_module_error", 
                "vala_source_file_unref", 
                "g_slist_prepend", 
                "__stack_chk_fail", 
                "vala_source_file_get_cinclude_filename", 
                "vala_delegate_add_type_parameter", 
                "vala_scope_remove", 
                "g_list_append", 
                "vala_unresolved_type_get_type", 
                "vala_parameter_set_direction", 
                "vala_delegate_new", 
                "vala_source_file_set_file_type", 
                "vala_class_get_default_construction_method", 
                "vala_parser_parse", 
                "__libc_start_main", 
                "vala_code_node_ref", 
                "vala_class_add_base_type", 
                "vala_code_context_new", 
                "g_string_insert_c", 
                "vala_symbol_add_method", 
                "vala_method_set_is_abstract", 
                "g_type_is_a", 
                "g_regex_new", 
                "vala_property_set_set_accessor", 
                "vala_creation_method_get_type", 
                "g_file_get_contents", 
                "g_strchug", 
                "vala_void_type_get_type", 
                "vala_delegate_set_has_target", 
                "vala_class_new", 
                "vala_symbol_add_interface", 
                "g_match_info_fetch", 
                "vala_attribute_get_bool", 
                "g_param_spec_internal", 
                "g_strcmp0", 
                "g_clear_error", 
                "vala_enum_get_values", 
                "g_regex_match", 
                "g_malloc", 
                "vala_code_node_set_attribute", 
                "vala_code_context_ref", 
                "vala_integer_literal_new", 
                "g_ascii_strtoll", 
                "vala_symbol_get_name", 
                "vala_unresolved_symbol_set_inner", 
                "g_type_instance_get_private", 
                "vala_code_context_check", 
                "vala_string_literal_new", 
                "g_error_free", 
                "vala_gir_parser_parse", 
                "vala_code_node_get_source_reference", 
                "vala_class_get_is_compact", 
                "vala_property_new", 
                "vala_property_get_set_accessor", 
                "vala_hash_set_new", 
                "vala_code_context_set_profile", 
                "g_option_context_free", 
                "g_str_equal", 
                "vala_parameter_new", 
                "vala_namespace_get_type", 
                "_ITM_registerTMCloneTable", 
                "vala_symbol_add_field", 
                "vala_property_get_property_type", 
                "vala_unresolved_type_get_unresolved_symbol", 
                "g_mapped_file_unref", 
                "g_malloc0", 
                "g_list_insert_sorted", 
                "g_string_sized_new", 
                "vala_report_set_verbose_errors", 
                "g_once_init_enter", 
                "g_pattern_spec_new", 
                "g_markup_parse_context_new", 
                "strspn", 
                "vala_code_visitor_get_type", 
                "vala_collection_add", 
                "g_strdup_printf", 
                "vala_callable_add_parameter", 
                "vala_boolean_literal_new", 
                "g_free", 
                "vala_map_get_keys", 
                "g_slist_free_full", 
                "g_markup_error_quark", 
                "g_markup_parse_context_get_position", 
                "g_type_check_class_cast", 
                "vala_object_type_symbol_get_properties", 
                "strtol", 
                "vala_constant_new", 
                "strtod", 
                "g_markup_parse_context_end_parse", 
                "g_value_type_compatible", 
                "vala_object_type_symbol_add_type_parameter", 
                "vala_code_context_push", 
                "g_markup_parse_context_parse", 
                "g_module_close", 
                "vala_symbol_get_external_package", 
                "g_hash_table_destroy", 
                "vala_method_set_is_virtual", 
                "g_ascii_strtod", 
                "vala_symbol_add_namespace", 
                "vala_namespace_new", 
                "__cxa_finalize", 
                "g_log", 
                "vala_source_file_new", 
                "strtoull", 
                "_ITM_deregisterTMCloneTable", 
                "vala_class_set_is_compact"
            ], 
            "rpm": "vala-0.38.2-1.fc27.x86_64.rpm"
        }, 
        "usr/bin/valac-0_38": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/valac-0.38", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "vala_data_type_is_disposable", 
                "vala_method_get_scanf_format", 
                "vala_code_context_set_experimental_non_null", 
                "vala_object_type_symbol_get_type", 
                "vala_block_get_statements", 
                "g_string_append_unichar", 
                "vala_symbol_lower_case_to_camel_case", 
                "vala_cast_expression_get_type_reference", 
                "vala_character_literal_get_type", 
                "vala_symbol_is_private_symbol", 
                "strstr", 
                "vala_real_literal_get_type", 
                "vala_unary_expression_get_operator", 
                "vala_code_node_set_attribute_cache", 
                "vala_data_type_get_data_type", 
                "vala_method_get_type", 
                "vala_reference_type_get_type", 
                "vala_class_is_fundamental", 
                "vala_method_get_signal_reference", 
                "vala_return_statement_get_type", 
                "g_shell_error_quark", 
                "vala_target_value_get_type", 
                "vala_array_type_set_inline_allocated", 
                "vala_foreach_statement_get_collection", 
                "g_mkdir_with_parents", 
                "vala_block_get_captured", 
                "vala_collection_clear", 
                "vala_catch_clause_get_type", 
                "vala_lockable_get_lock_used", 
                "vala_source_file_accept", 
                "vala_code_context_get_verbose_mode", 
                "vala_symbol_get_full_name", 
                "g_child_watch_add_full", 
                "vala_data_type_get_type_parameter", 
                "vala_source_file_get_csource_filename", 
                "close", 
                "vala_struct_get_default_construction_method", 
                "vala_code_context_set_run_output", 
                "vala_switch_statement_get_expression", 
                "vala_member_access_get_type", 
                "vala_named_argument_get_type", 
                "vala_data_type_compatible", 
                "vala_object_creation_expression_get_object_initializer", 
                "vala_symbol_get_active", 
                "vala_return_statement_get_return_expression", 
                "vala_code_node_get_attribute_bool", 
                "vala_code_context_get_debug", 
                "vala_code_context_require_glib_version", 
                "vala_data_type_to_prototype_string", 
                "vala_member_initializer_get_initializer", 
                "vala_array_type_get_inline_allocated", 
                "vala_foreach_statement_get_variable_name", 
                "vala_code_writer_new", 
                "g_get_tmp_dir", 
                "vala_signal_type_new", 
                "vala_catch_clause_get_body", 
                "vala_code_context_get_symbols_filename", 
                "vala_integer_literal_get_value", 
                "g_type_check_class_cast", 
                "vala_attribute_get_string", 
                "vala_symbol_get_source_type", 
                "vala_method_get_overrides", 
                "vala_variable_get_variable_type", 
                "g_error_free", 
                "vala_dynamic_property_get_dynamic_type", 
                "vala_code_context_add_source_file", 
                "vala_expression_get_lvalue", 
                "g_utf8_strrchr", 
                "vala_data_type_copy", 
                "vala_code_context_get_header_filename", 
                "g_once_init_enter", 
                "vala_struct_is_floating_type", 
                "vala_class_get_is_compact", 
                "vala_class_get_has_class_private_fields", 
                "g_str_has_prefix", 
                "vala_iterator_unref", 
                "vala_parameter_get_direction", 
                "strtol", 
                "vala_declaration_statement_get_declaration", 
                "vala_code_generator_store_parameter", 
                "vala_class_set_has_private_fields", 
                "vala_struct_get_fields", 
                "vala_method_call_get_argument_list", 
                "g_slice_free1", 
                "vala_report_get_warnings", 
                "vala_method_get_is_virtual", 
                "vala_try_statement_get_finally_body", 
                "vala_method_type_new", 
                "g_regex_escape_string", 
                "vala_code_context_write_dependencies", 
                "vala_code_context_get_entry_point", 
                "vala_source_file_set_gir_version", 
                "vala_markup_reader_get_name", 
                "vala_data_type_get_parameters", 
                "vala_typecheck_get_expression", 
                "vala_method_get_is_async_callback", 
                "vala_callable_get_return_type", 
                "vala_symbol_is_internal_symbol", 
                "vala_code_context_set_basedir", 
                "vala_symbol_get_external", 
                "vala_symbol_camel_case_to_lower_case", 
                "vala_expression_get_formal_target_type", 
                "vala_code_context_get_mem_profiler", 
                "vala_target_value_construct", 
                "vala_object_creation_expression_get_type_reference", 
                "g_malloc0_n", 
                "vala_generic_type_get_type", 
                "vala_lambda_expression_get_method", 
                "vala_namespace_get_classes", 
                "fclose", 
                "vala_invalid_type_new", 
                "vala_member_access_get_member_name", 
                "vala_namespace_get_type", 
                "vala_integer_type_get_type", 
                "vala_reference_transfer_expression_get_inner", 
                "vala_property_get_field", 
                "vala_method_get_postconditions", 
                "vala_code_context_get_analyzer", 
                "vala_delegate_type_new", 
                "vala_member_access_get_inner", 
                "g_direct_equal", 
                "vala_typesymbol_get_type", 
                "g_type_is_a", 
                "vala_markup_reader_get_attribute", 
                "vala_method_get_is_abstract", 
                "vala_code_context_set_includedir", 
                "g_getenv", 
                "vala_code_context_get_module_init_method", 
                "g_option_error_quark", 
                "vala_named_argument_get_name", 
                "vala_iterator_get", 
                "vala_field_get_type", 
                "vala_array_creation_expression_get_initializer_list", 
                "vala_object_type_new", 
                "vala_property_get_set_accessor", 
                "vala_switch_statement_get_type", 
                "vala_code_context_add_external_package", 
                "vala_loop_get_type", 
                "vala_class_get_classes", 
                "vala_destructor_get_binding", 
                "vala_symbol_get_parent_symbol", 
                "vala_callable_get_type", 
                "vala_callable_add_parameter", 
                "vala_attribute_get_bool", 
                "vala_method_get_returns_modified_pointer", 
                "vala_block_get_local_variables", 
                "vala_catch_clause_get_clabel_name", 
                "vala_collection_contains", 
                "vala_markup_reader_unref", 
                "g_main_loop_quit", 
                "vala_local_variable_get_is_result", 
                "g_path_get_basename", 
                "vala_property_get_type", 
                "vala_class_type_new", 
                "vala_array_creation_expression_get_rank", 
                "g_quark_to_string", 
                "vala_string_literal_get_translate", 
                "vala_namespace_get_interfaces", 
                "vala_symbol_get_version", 
                "vala_named_argument_get_inner", 
                "vala_parameter_get_ellipsis", 
                "vala_error_type_get_error_domain", 
                "vala_block_get_type", 
                "vala_void_type_get_type", 
                "__isoc99_sscanf", 
                "vala_struct_is_simple_type", 
                "vala_enum_value_type_get_type", 
                "vala_typeof_expression_get_type_reference", 
                "vala_parameter_new", 
                "strchr", 
                "vala_signal_get_default_handler", 
                "vala_parameter_get_params_array", 
                "__fprintf_chk", 
                "vala_foreach_statement_get_collection_variable", 
                "vala_generic_type_new", 
                "vala_typecheck_get_type_reference", 
                "vala_code_context_get_use_header", 
                "vala_binary_expression_get_type", 
                "fputs", 
                "g_strdup", 
                "vala_code_context_set_use_fast_vapi", 
                "g_type_class_peek_parent", 
                "vala_method_get_base_interface_method", 
                "vala_code_context_get_basedir", 
                "vala_code_context_get_version_header", 
                "vala_parser_parse", 
                "vala_local_variable_new", 
                "vala_local_variable_get_init", 
                "vala_code_context_ref", 
                "vala_code_generator_load_local", 
                "vala_code_context_get_packages", 
                "vala_data_type_get_nullable", 
                "vala_array_copy_method_get_type", 
                "vala_code_context_push", 
                "vala_typesymbol_is_subtype_of", 
                "g_quark_from_string", 
                "vala_hash_set_new", 
                "vala_source_reference_get_file", 
                "vala_data_type_is_array", 
                "vala_basic_block_get_predecessors", 
                "vala_code_node_get_source_reference", 
                "vala_attribute_cache_construct", 
                "vala_struct_get_is_immutable", 
                "vala_method_get_printf_format", 
                "vala_code_context_set_nostdpkg", 
                "vala_markup_reader_get_content", 
                "vala_try_statement_get_type", 
                "vala_slice_expression_get_container", 
                "vala_parameter_set_direction", 
                "vala_foreach_statement_get_body", 
                "vala_genie_parser_parse", 
                "g_error_new", 
                "vala_code_node_get_unreachable", 
                "g_stpcpy", 
                "vala_code_context_get_output", 
                "vala_array_creation_expression_get_element_type", 
                "vala_constructor_get_this_parameter", 
                "g_propagate_error", 
                "vala_source_reference_get_end", 
                "g_option_context_set_help_enabled", 
                "vala_enum_get_is_flags", 
                "vala_code_context_set_checking", 
                "g_type_create_instance", 
                "g_str_equal", 
                "g_mkstemp", 
                "vala_array_type_get_element_type", 
                "vala_real_literal_get_value", 
                "vala_collection_add", 
                "vala_code_context_accept", 
                "g_mapped_file_get_contents", 
                "g_strconcat", 
                "vala_error_domain_get_type", 
                "vala_code_node_accept_children", 
                "g_type_class_add_private", 
                "setlocale", 
                "vala_code_context_get_gresource_path", 
                "vala_code_context_set_header_filename", 
                "vala_data_type_get_type", 
                "vala_binary_expression_get_operator", 
                "vala_source_reference_get_begin", 
                "g_slice_alloc0", 
                "vala_object_type_symbol_get_type_parameters", 
                "utime", 
                "vala_report_get_errors", 
                "g_assertion_message_expr", 
                "vala_class_get_class_destructor", 
                "vala_delegate_get_sender_type", 
                "vala_iterator_next", 
                "vala_local_variable_get_captured", 
                "vala_struct_value_type_new", 
                "vala_code_context_set_profile", 
                "vala_foreach_statement_get_use_iterator", 
                "g_file_test", 
                "vala_code_context_set_symbols_filename", 
                "g_spawn_error_quark", 
                "vala_initializer_list_get_initializers", 
                "vala_assignment_get_operator", 
                "vala_comment_unref", 
                "vala_code_context_set_target_glib_major", 
                "vala_subroutine_get_return_block", 
                "vala_member_initializer_get_symbol_reference", 
                "vala_pointer_type_new", 
                "g_regex_unref", 
                "g_clear_error", 
                "vala_report_warning", 
                "vala_property_get_base_interface_property", 
                "vala_error_type_new", 
                "vala_list_index_of", 
                "vala_data_type_get_type_arguments", 
                "vala_source_file_set_gir_namespace", 
                "vala_method_clear_parameters", 
                "vala_semantic_analyzer_symbol_lookup_inherited", 
                "vala_destructor_get_this_parameter", 
                "vala_dynamic_method_get_dynamic_type", 
                "vala_integer_literal_get_type_suffix", 
                "vala_symbol_get_comment", 
                "vala_struct_value_type_get_type", 
                "vala_pointer_type_get_base_type", 
                "vala_code_node_get_type", 
                "vala_parameter_get_format_arg", 
                "vala_property_get_base_property", 
                "vala_string_literal_get_type", 
                "g_string_new", 
                "g_once_init_leave", 
                "vala_parameter_get_base_parameter", 
                "vala_version_attribute_get_replacement", 
                "vala_code_context_get_codegen", 
                "vala_scope_get_symbol_table", 
                "g_main_loop_new", 
                "vala_method_get_coroutine", 
                "vala_code_context_set_hide_internal", 
                "g_string_free", 
                "vala_switch_label_get_expression", 
                "vala_property_get_blurb", 
                "vala_code_context_set_verbose_mode", 
                "vala_object_creation_expression_get_is_yield_expression", 
                "vala_source_file_get_file_type", 
                "vala_source_file_get_cinclude_filename", 
                "vala_struct_is_boolean_type", 
                "g_direct_hash", 
                "vala_dynamic_signal_get_type", 
                "g_path_is_absolute", 
                "vala_dynamic_signal_get_dynamic_type", 
                "g_regex_replace_literal", 
                "vala_property_get_nick", 
                "g_strescape", 
                "vala_data_type_is_real_struct_type", 
                "vala_report_set_verbose_errors", 
                "vala_map_unref", 
                "fputc", 
                "g_quark_from_static_string", 
                "g_type_check_value_holds", 
                "vala_foreach_statement_get_element_variable", 
                "vala_symbol_get_access", 
                "vala_signal_type_get_signal_symbol", 
                "vala_code_node_get_attribute_double", 
                "vala_code_context_get_hide_internal", 
                "vala_object_creation_expression_get_argument_list", 
                "vala_property_accessor_get_readable", 
                "g_utf8_strdown", 
                "vala_code_generator_load_parameter", 
                "vala_code_context_set_directory", 
                "vala_delegate_type_get_is_called_once", 
                "g_strndup", 
                "__cxa_finalize", 
                "vala_source_file_get_gir_version", 
                "vala_if_statement_get_condition", 
                "vala_symbol_is_class_member", 
                "vala_data_type_get_value_owned", 
                "g_string_insert_c", 
                "vala_source_file_unref", 
                "vala_base_access_get_type", 
                "vala_enum_value_type_new", 
                "g_unichar_toupper", 
                "g_value_type_compatible", 
                "vala_floating_type_get_type", 
                "vala_property_accessor_get_type", 
                "vala_interface_get_prerequisites", 
                "vala_method_get_is_inline", 
                "vala_class_get_has_private_fields", 
                "vala_array_type_get_type", 
                "vala_code_visitor_construct", 
                "vala_code_context_set_version_header", 
                "vala_method_call_get_type", 
                "vala_error_type_get_type", 
                "vala_collection_remove", 
                "vala_code_generator_emit", 
                "vala_value_type_get_type_symbol", 
                "vala_list_get", 
                "vala_code_context_add_source_filename", 
                "vala_method_get_base_interface_type", 
                "vala_property_accessor_get_prop", 
                "vala_target_value_set_value_type", 
                "vala_property_get_this_parameter", 
                "g_strcmp0", 
                "vala_method_get_base_method", 
                "vala_code_context_get_internal_header_filename", 
                "vala_interface_get_type", 
                "_ITM_deregisterTMCloneTable", 
                "vala_void_type_new", 
                "vala_property_get_is_virtual", 
                "g_return_if_fail_warning", 
                "vala_catch_clause_set_clabel_name", 
                "vala_code_node_set_attribute_string", 
                "g_main_loop_unref", 
                "memcmp", 
                "vala_variable_get_single_assignment", 
                "vala_destructor_get_type", 
                "vala_constructor_get_binding", 
                "vala_class_get_class_constructor", 
                "vala_expression_get_formal_value_type", 
                "vala_source_file_set_used", 
                "vala_enum_get_values", 
                "vala_target_value_set_actual_value_type", 
                "vala_code_context_get_directory", 
                "vala_object_type_get_type", 
                "g_signal_handlers_destroy", 
                "g_spawn_command_line_sync", 
                "vala_code_generator_store_local", 
                "vala_signal_type_get_type", 
                "vala_code_context_get_checking", 
                "vala_delegate_get_type", 
                "vala_method_set_coroutine", 
                "vala_genie_parser_new", 
                "vala_unlock_statement_get_resource", 
                "vala_iterable_unref", 
                "vala_code_generator_store_field", 
                "vala_pointer_type_get_type", 
                "g_type_fundamental_next", 
                "vala_property_accessor_get_method", 
                "vala_expression_statement_get_expression", 
                "vala_array_type_get_length", 
                "vala_slice_expression_get_stop", 
                "vala_initializer_list_get_size", 
                "__gmon_start__", 
                "vala_code_node_set_error", 
                "vala_attribute_get_double", 
                "vala_local_variable_set_init", 
                "g_strchomp", 
                "vala_element_access_get_indices", 
                "vala_class_get_base_class", 
                "vala_subroutine_get_result_var", 
                "g_option_context_parse", 
                "vala_switch_section_has_default_label", 
                "vala_attribute_cache_unref", 
                "vala_parser_new", 
                "vala_report_error", 
                "vala_code_node_to_string", 
                "vala_code_visitor_visit_local_variable", 
                "vala_method_get_format_arg_index", 
                "vala_struct_get_signed", 
                "vala_property_get_overrides", 
                "vala_code_context_get_deprecated", 
                "vala_lockable_get_type", 
                "vala_signal_get_emitter", 
                "vala_field_get_binding", 
                "vala_code_node_set_source_reference", 
                "vala_method_get_closure", 
                "vala_object_type_symbol_get_methods", 
                "vala_method_get_binding", 
                "vala_method_type_get_type", 
                "vala_code_node_get_attribute_cache", 
                "g_path_get_dirname", 
                "vala_property_accessor_get_value_parameter", 
                "vala_code_node_get_error", 
                "vala_class_get_destructor", 
                "g_free", 
                "vala_code_context_set_gobject_tracing", 
                "g_realloc_n", 
                "vala_enum_get_type", 
                "vala_sizeof_expression_get_type_reference", 
                "vala_list_insert", 
                "vala_method_get_this_parameter", 
                "vala_parameter_set_captured", 
                "vala_code_visitor_unref", 
                "vala_array_type_set_fixed_length", 
                "g_regex_new", 
                "chmod", 
                "vala_code_node_get_tree_can_fail", 
                "vala_code_node_get_attribute_cache_index", 
                "vala_code_context_realpath", 
                "g_strchug", 
                "vala_string_literal_get_value", 
                "vala_try_statement_get_catch_clauses", 
                "g_shell_parse_argv", 
                "vala_code_context_set_deprecated", 
                "vala_expression_get_value_type", 
                "g_mapped_file_new", 
                "vala_binary_expression_get_left", 
                "vala_source_file_get_comments", 
                "g_string_append_printf", 
                "vala_object_type_symbol_get_properties", 
                "vala_method_call_get_call", 
                "g_mapped_file_unref", 
                "vala_code_context_set_assert", 
                "vala_markup_reader_new", 
                "g_malloc", 
                "vala_if_statement_get_false_statement", 
                "vala_semantic_analyzer_get_data_type_for_symbol", 
                "vala_expression_get_target_value", 
                "vala_array_list_new", 
                "vala_member_access_new_simple", 
                "g_str_has_suffix", 
                "vala_code_context_get_c_source_files", 
                "vala_integer_literal_get_type", 
                "vala_element_access_get_container", 
                "__stack_chk_fail", 
                "g_strcanon", 
                "vala_method_get_type_parameter_index", 
                "vala_report_deprecated", 
                "vala_catch_clause_get_error_variable", 
                "vala_symbol_get_type", 
                "vala_code_visitor_get_type", 
                "vala_code_context_get_compile_only", 
                "vala_struct_get_base_struct", 
                "_ITM_registerTMCloneTable", 
                "vala_initializer_list_get_type", 
                "vala_method_call_get_is_assert", 
                "vala_array_length_field_get_type", 
                "g_regex_error_quark", 
                "vala_code_context_set_save_temps", 
                "vala_foreach_statement_get_type", 
                "vala_method_get_type_parameters", 
                "vala_code_context_set_target_glib_minor", 
                "vala_code_generator_load_field", 
                "vala_struct_is_integer_type", 
                "vala_markup_reader_read_token", 
                "vala_slice_expression_get_start", 
                "vala_code_context_set_codegen", 
                "vala_catch_clause_get_error_type", 
                "vala_enum_value_type_get_to_string_method", 
                "vala_code_context_get_report", 
                "vala_lock_statement_get_resource", 
                "vala_comment_get_content", 
                "vala_source_file_accept_children", 
                "vala_target_value_unref", 
                "vala_code_writer_write_file", 
                "vala_throw_statement_get_error_expression", 
                "g_mapped_file_get_length", 
                "vala_code_context_get_source_files", 
                "vala_member_access_get_type_arguments", 
                "vala_code_visitor_visit_property", 
                "vala_method_get_preconditions", 
                "vala_source_file_get_gir_namespace", 
                "vala_symbol_set_active", 
                "vala_method_get_async_end_parameters", 
                "vala_character_literal_get_value", 
                "vala_code_node_accept", 
                "vala_attribute_get_integer", 
                "vala_map_ref", 
                "vala_boolean_literal_get_type", 
                "vala_cast_expression_get_inner", 
                "vala_code_context_set_use_header", 
                "vala_regex_literal_get_value", 
                "vala_expression_is_constant", 
                "g_type_free_instance", 
                "vala_attribute_get_name", 
                "vala_delete_statement_get_expression", 
                "vala_error_code_get_value", 
                "vala_property_accessor_get_automatic_body", 
                "vala_expression_set_value_type", 
                "vala_member_access_get_prototype_access", 
                "vala_class_get_type", 
                "g_ascii_strup", 
                "vala_code_visitor_visit_end_full_expression", 
                "vala_try_statement_get_after_try_block_reachable", 
                "vala_property_accessor_get_value_type", 
                "vala_source_file_new", 
                "vala_property_accessor_get_construction", 
                "vala_array_move_method_get_type", 
                "vala_object_type_symbol_get_signals", 
                "vala_attribute_cache_get_type", 
                "vala_code_context_new", 
                "vala_code_context_get_save_csources", 
                "__xstat", 
                "vala_code_node_unref", 
                "vala_null_type_get_type", 
                "g_type_register_static", 
                "vala_report_set_colors", 
                "vala_code_node_get_attribute_integer", 
                "vala_target_value_get_value_type", 
                "vala_class_get_constructor", 
                "vala_expression_get_target_type", 
                "vala_map_get_values", 
                "fopen", 
                "vala_symbol_get_name", 
                "vala_callable_get_parameters", 
                "vala_integer_type_new", 
                "vala_version_attribute_get_since", 
                "g_option_context_add_main_entries", 
                "g_str_hash", 
                "vala_string_literal_eval", 
                "vala_constant_get_type_reference", 
                "vala_if_statement_get_true_statement", 
                "vala_pointer_indirection_get_inner", 
                "vala_attribute_cache_ref", 
                "g_utf8_get_char", 
                "vala_property_accessor_get_writable", 
                "vala_constructor_get_type", 
                "g_type_instance_get_private", 
                "vala_collection_get_size", 
                "vala_code_generator_get_type", 
                "vala_data_type_get_return_type", 
                "vala_unary_expression_get_inner", 
                "vala_expression_statement_get_type", 
                "vala_target_value_ref", 
                "__libc_start_main", 
                "vala_error_domain_get_codes", 
                "vala_symbol_get_from_commandline", 
                "vala_creation_method_get_type", 
                "vala_method_is_variadic", 
                "g_option_context_free", 
                "vala_lambda_expression_get_type", 
                "vala_interface_get_virtuals", 
                "vala_code_context_get", 
                "fwrite", 
                "vala_code_context_set_output", 
                "vala_code_context_set_internal_header_filename", 
                "vala_property_get_get_accessor", 
                "g_type_check_instance_cast", 
                "vala_property_get_initializer", 
                "vala_class_get_static_destructor", 
                "vala_data_type_construct", 
                "vala_boolean_literal_get_value", 
                "vala_code_context_get_gobject_tracing", 
                "vala_version_attribute_get_deprecated_since", 
                "vala_data_type_is_real_non_null_struct_type", 
                "vala_boolean_type_new", 
                "vala_class_type_get_class_symbol", 
                "vala_switch_statement_get_sections", 
                "vala_foreach_statement_get_type_reference", 
                "vala_dynamic_method_get_type", 
                "vala_property_get_binding", 
                "vala_switch_label_get_section", 
                "vala_class_get_fields", 
                "vala_map_set", 
                "vala_code_node_get_attribute_string", 
                "g_file_error_quark", 
                "g_unichar_isalnum", 
                "vala_data_type_get_floating_reference", 
                "g_unlink", 
                "vala_scope_lookup", 
                "g_type_check_instance_is_a", 
                "vala_interface_get_classes", 
                "g_log", 
                "vala_variable_get_type", 
                "vala_creation_method_get_chain_up", 
                "vala_dynamic_property_get_type", 
                "vala_assignment_get_type", 
                "vala_code_context_get_assert", 
                "vala_code_context_unref", 
                "vala_struct_get_type", 
                "vala_report_set_enable_warnings", 
                "g_type_register_fundamental", 
                "g_strnfill", 
                "vala_code_node_check", 
                "vala_code_context_set_ccode_only", 
                "vala_gir_parser_parse", 
                "vala_code_context_add_define", 
                "vala_code_context_set_vapi_comments", 
                "vala_symbol_get_external_package", 
                "vala_switch_section_get_labels", 
                "vala_hash_map_new", 
                "vala_property_get_notify", 
                "vala_try_statement_get_body", 
                "vala_code_context_set_entry_point_name", 
                "vala_signal_get_type", 
                "vala_postfix_expression_get_inner", 
                "vala_array_resize_method_get_type", 
                "vala_struct_is_disposable", 
                "vala_data_type_equals", 
                "vala_property_get_property_type", 
                "vala_map_get_keys", 
                "vala_code_context_set_mem_profiler", 
                "vala_enum_value_get_type", 
                "g_markup_escape_text", 
                "vala_signal_type_get_handler_type", 
                "vala_code_context_set_debug", 
                "vala_map_get", 
                "vala_assignment_get_left", 
                "vala_unary_expression_get_type", 
                "vala_data_type_set_value_owned", 
                "vala_code_writer_set_cheader_override", 
                "g_strsplit", 
                "vala_code_context_set_experimental", 
                "vala_binary_expression_get_right", 
                "vala_character_literal_get_char", 
                "vala_code_node_get_parent_node", 
                "vala_class_type_get_type", 
                "vala_code_node_ref", 
                "vala_value_type_get_type", 
                "vala_data_type_get_actual_type", 
                "vala_list_remove_at", 
                "vala_error_code_get_type", 
                "vala_iterable_ref", 
                "strlen", 
                "vala_gir_parser_new", 
                "g_string_append", 
                "vala_dynamic_signal_get_handler", 
                "vala_data_type_set_nullable", 
                "vala_cast_expression_get_is_silent_cast", 
                "memchr", 
                "vala_class_get_base_types", 
                "g_type_name", 
                "vala_namespace_get_namespaces", 
                "vala_code_visitor_visit_method", 
                "g_strdup_printf", 
                "vala_element_access_get_type", 
                "vala_code_node_get_attribute", 
                "vala_array_type_get_rank", 
                "g_enum_register_static", 
                "vala_struct_get_width", 
                "rename", 
                "vala_method_get_async_begin_parameters", 
                "vala_code_context_get_target_glib_major", 
                "vala_typesymbol_is_reference_type", 
                "vala_code_node_get_error_types", 
                "vala_list_set", 
                "vala_object_type_get_type_symbol", 
                "vala_assignment_get_right", 
                "vala_method_get_entry_point", 
                "vala_data_type_is_reference_type_or_type_parameter", 
                "g_ascii_strdown", 
                "g_boxed_type_register_static", 
                "vala_code_generator_construct", 
                "vala_constant_get_type", 
                "g_spawn_async", 
                "vala_class_get_default_construction_method", 
                "vala_constant_get_value", 
                "vala_map_contains", 
                "vala_class_get_is_immutable", 
                "vala_version_attribute_get_deprecated", 
                "vala_target_value_get_actual_value_type", 
                "vala_code_context_set_compile_only", 
                "vala_delegate_type_get_delegate_symbol", 
                "vala_loop_get_body", 
                "vala_symbol_is_instance_member", 
                "g_option_context_new", 
                "vala_interface_type_get_type", 
                "vala_attribute_has_argument", 
                "vala_code_context_check", 
                "g_shell_quote", 
                "vala_field_get_is_volatile", 
                "vala_expression_get_symbol_reference", 
                "vala_object_creation_expression_get_type", 
                "vala_method_call_get_is_constructv_chainup", 
                "vala_cast_expression_get_is_non_null_cast", 
                "vala_expression_set_target_value", 
                "vala_yield_statement_get_yield_expression", 
                "vala_class_get_is_abstract", 
                "vala_delegate_type_get_type", 
                "vala_addressof_expression_get_inner", 
                "vala_array_type_get_fixed_length", 
                "vala_code_context_get_root", 
                "vala_property_get_is_abstract", 
                "vala_subroutine_get_body", 
                "vala_signal_get_is_virtual", 
                "vala_variable_get_initializer", 
                "vala_data_type_has_type_arguments", 
                "vala_symbol_get_scope", 
                "g_malloc0", 
                "vala_expression_is_non_null", 
                "vala_postfix_expression_get_increment", 
                "vala_boolean_type_get_type", 
                "vala_iterable_iterator", 
                "g_main_loop_run", 
                "vala_code_node_set_attribute_bool", 
                "vala_delegate_get_has_target", 
                "g_utf8_strchr", 
                "vala_source_file_get_filename", 
                "vala_array_creation_expression_get_sizes", 
                "vala_local_variable_get_type", 
                "vala_interface_type_get_interface_symbol", 
                "g_build_filename", 
                "vala_floating_type_new", 
                "g_param_spec_internal", 
                "vala_method_type_get_method_symbol", 
                "vala_method_call_get_is_yield_expression", 
                "vala_parameter_get_captured", 
                "vala_error_type_get_error_code", 
                "vala_parameter_get_type"
            ], 
            "rpm": "vala-0.38.2-1.fc27.x86_64.rpm"
        }, 
        "usr/lib64/vala-0_38/gen-introspect-0_38": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/vala-0.38/gen-introspect-0.38", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "g_strchomp", 
                "g_module_open", 
                "g_object_class_list_properties", 
                "g_list_reverse", 
                "g_hash_table_new", 
                "g_ascii_strdown", 
                "__isoc99_sscanf", 
                "strstr", 
                "g_markup_printf_escaped", 
                "g_str_has_prefix", 
                "g_signal_list_ids", 
                "isatty", 
                "g_path_is_absolute", 
                "ferror", 
                "g_strjoinv", 
                "g_spawn_close_pid", 
                "strcpy", 
                "write", 
                "g_list_foreach", 
                "__errno_location", 
                "g_mapped_file_get_contents", 
                "strtod", 
                "g_type_parent", 
                "strlen", 
                "fopen", 
                "g_type_name", 
                "__realpath_chk", 
                "g_utf8_strrchr", 
                "fwrite", 
                "kill", 
                "strtoull", 
                "g_list_prepend", 
                "g_string_new", 
                "g_malloc0", 
                "g_hash_table_insert", 
                "g_list_length", 
                "__libc_start_main", 
                "g_file_get_contents", 
                "__stack_chk_fail", 
                "g_realloc", 
                "strrchr", 
                "g_hash_table_destroy", 
                "g_malloc", 
                "g_list_concat", 
                "g_markup_parse_context_free", 
                "strtoll", 
                "g_set_error", 
                "g_list_free", 
                "g_option_context_parse", 
                "g_strdup_printf", 
                "fputs", 
                "strchr", 
                "g_return_if_fail_warning", 
                "g_slist_foreach", 
                "g_type_default_interface_ref", 
                "_ITM_registerTMCloneTable", 
                "g_quark_from_static_string", 
                "g_option_context_free", 
                "g_type_class_ref", 
                "g_list_last", 
                "malloc", 
                "_ITM_deregisterTMCloneTable", 
                "g_spawn_async_with_pipes", 
                "g_type_fundamental", 
                "g_free", 
                "g_str_has_suffix", 
                "g_str_equal", 
                "g_strv_length", 
                "g_printf", 
                "g_malloc0_n", 
                "g_module_close", 
                "fdopen", 
                "exit", 
                "g_strndup", 
                "strerror", 
                "g_string_append_printf", 
                "read", 
                "_IO_getc", 
                "free", 
                "g_hash_table_lookup", 
                "g_str_hash", 
                "g_option_context_new", 
                "strspn", 
                "g_markup_parse_context_end_parse", 
                "fileno", 
                "g_slist_reverse", 
                "g_strv_get_type", 
                "g_markup_parse_context_get_position", 
                "close", 
                "__gmon_start__", 
                "__ctype_b_loc", 
                "g_list_insert_sorted", 
                "fputc", 
                "g_option_context_add_main_entries", 
                "g_slice_free1", 
                "__fprintf_chk", 
                "rewind", 
                "g_string_free", 
                "g_strescape", 
                "strcmp", 
                "g_markup_parse_context_new", 
                "g_slist_free", 
                "g_strfreev", 
                "g_module_error", 
                "g_memdup", 
                "fclose", 
                "__cxa_finalize", 
                "g_strdup", 
                "fgetc", 
                "unlink", 
                "g_slist_prepend", 
                "g_mapped_file_unref", 
                "g_hash_table_new_full", 
                "realloc", 
                "memcpy", 
                "g_strcompress", 
                "g_type_interface_prerequisites", 
                "g_signal_query", 
                "g_strsplit", 
                "memchr", 
                "g_strconcat", 
                "g_markup_error_quark", 
                "g_strchug", 
                "g_log", 
                "g_object_interface_list_properties", 
                "g_type_interfaces", 
                "calloc", 
                "strncpy", 
                "fread", 
                "g_unlink", 
                "g_string_insert_c", 
                "g_markup_parse_context_parse", 
                "g_file_open_tmp", 
                "g_list_append", 
                "strtol", 
                "g_mapped_file_get_length", 
                "g_string_append", 
                "waitpid", 
                "g_module_symbol", 
                "g_slice_alloc", 
                "clearerr", 
                "g_printerr"
            ], 
            "rpm": "vala-0.38.2-1.fc27.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " vala", 
            "License": " LGPLv2+ and BSD", 
            "URL": " https://wiki.gnome.org/Projects/Vala", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-11.phx2.fedoraproject.org", 
            "Description": "\nVala is a new programming language that aims to bring modern programming\nlanguage features to GNOME developers without imposing any additional\nruntime requirements and without using a different ABI compared to\napplications and libraries written in C.\n\nvalac, the Vala compiler, is a self-hosting compiler that translates\nVala source code into C source and header files. It uses the GObject\ntype system to create classes and interfaces declared in the Vala source\ncode. It's also planned to generate GIDL files when gobject-\nintrospection is ready.\n\nThe syntax of Vala is similar to C#, modified to better fit the GObject\ntype system.\n", 
            "Build Date": " Sun 08 Oct 2017 06:44:58 PM EDT", 
            "Source RPM": " vala-0.38.2-1.fc27.src.rpm", 
            "Version": " 0.38.2", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Sun 08 Oct 2017 06:53:57 PM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 1.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " A modern programming language for GNOME", 
            "Size": " 11298167"
        }
    }
}