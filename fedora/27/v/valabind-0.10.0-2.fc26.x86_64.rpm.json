{
    "results": {
        "usr/bin/valabind": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/valabind", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "g_spawn_close_pid", 
                "g_regex_new", 
                "vala_code_context_get_root", 
                "vala_namespace_get_type", 
                "g_quark_to_string", 
                "g_signal_handlers_destroy", 
                "vala_struct_get_type", 
                "g_regex_unref", 
                "vala_code_node_unref", 
                "g_slice_alloc0", 
                "vala_source_reference_ref", 
                "fwrite", 
                "g_type_class_add_private", 
                "vala_code_context_check", 
                "g_list_prepend", 
                "g_list_nth", 
                "vala_field_get_ctype", 
                "vala_source_file_get_filename", 
                "g_strconcat", 
                "g_list_copy", 
                "vala_constant_get_type_reference", 
                "vala_code_context_new", 
                "vala_method_get_binding", 
                "vala_code_context_accept", 
                "g_slist_append", 
                "vala_code_context_has_package", 
                "vala_namespace_get_fields", 
                "vala_code_context_add_define", 
                "g_slist_remove", 
                "vala_parameter_get_direction", 
                "vala_array_type_get_element_type", 
                "vala_class_get_is_compact", 
                "g_type_instance_get_private", 
                "strlen", 
                "__fprintf_chk", 
                "g_quark_from_string", 
                "g_hash_table_replace", 
                "g_spawn_async_with_pipes", 
                "vala_data_type_get_type", 
                "__stack_chk_fail", 
                "vala_namespace_get_enums", 
                "fdopen", 
                "vala_object_type_symbol_get_type_parameters", 
                "g_list_nth_data", 
                "vala_class_get_structs", 
                "vala_data_type_get_type_arguments", 
                "vala_source_file_accept_children", 
                "vala_parameter_get_type", 
                "g_option_context_parse", 
                "g_ascii_toupper", 
                "vala_report_get_errors", 
                "vala_class_get_classes", 
                "g_spawn_error_quark", 
                "vala_generic_type_get_type", 
                "vala_source_file_new", 
                "vala_source_file_unref", 
                "vala_code_visitor_unref", 
                "g_type_name", 
                "vala_ccode_base_module_is_reference_counting", 
                "vala_code_node_ref", 
                "g_slist_copy", 
                "g_regex_replace_literal", 
                "g_param_spec_internal", 
                "g_type_free_instance", 
                "vala_source_reference_unref", 
                "g_list_delete_link", 
                "g_quark_from_static_string", 
                "g_type_fundamental_next", 
                "g_utf8_strup", 
                "g_value_type_compatible", 
                "strtol", 
                "g_file_open_tmp", 
                "vala_ccode_base_module_get_ccode_header_filenames", 
                "__cxa_finalize", 
                "g_slist_prepend", 
                "g_type_register_static", 
                "vala_collection_get_size", 
                "g_option_context_add_main_entries", 
                "vala_data_type_to_qualified_string", 
                "g_malloc0", 
                "g_realloc_n", 
                "g_hash_table_ref", 
                "vala_parser_new", 
                "vala_namespace_get_constants", 
                "vala_namespace_get_namespaces", 
                "g_strdup_printf", 
                "g_build_filename", 
                "vala_symbol_set_name", 
                "vala_code_context_push", 
                "vala_namespace_get_classes", 
                "g_slist_free", 
                "g_malloc0_n", 
                "vala_report_error", 
                "vala_symbol_get_full_name", 
                "g_hash_table_lookup", 
                "vala_class_get_delegates", 
                "vala_iterable_ref", 
                "vala_code_visitor_construct", 
                "fputs", 
                "vala_delegate_get_parameters", 
                "g_type_register_fundamental", 
                "g_list_append", 
                "vala_enum_value_type_get_type", 
                "g_type_check_instance_cast", 
                "g_error_free", 
                "g_type_check_value_holds", 
                "g_str_has_prefix", 
                "vala_delegate_type_get_type", 
                "g_file_test", 
                "g_strchug", 
                "fclose", 
                "vala_code_context_get_profile", 
                "waitpid", 
                "g_log", 
                "g_assertion_message_expr", 
                "vala_class_get_type", 
                "g_regex_error_quark", 
                "vala_method_get_this_parameter", 
                "vala_pointer_type_get_base_type", 
                "vala_namespace_get_methods", 
                "g_once_init_enter", 
                "vala_class_get_fields", 
                "g_hash_table_unref", 
                "vala_struct_get_fields", 
                "vala_array_type_get_length", 
                "vala_method_get_return_type", 
                "vala_source_reference_get_file", 
                "g_list_length", 
                "g_option_context_set_help_enabled", 
                "vala_list_get", 
                "vala_object_type_symbol_get_methods", 
                "vala_iterable_unref", 
                "g_type_check_class_cast", 
                "vala_code_visitor_visit_delegate", 
                "g_hash_table_insert", 
                "vala_code_context_get_report", 
                "g_slist_length", 
                "vala_code_visitor_get_type", 
                "g_type_check_instance_is_a", 
                "vala_data_type_get_data_type", 
                "strstr", 
                "exit", 
                "g_option_context_free", 
                "g_strndup", 
                "g_file_error_quark", 
                "g_hash_table_new_full", 
                "vala_parser_parse", 
                "vala_symbol_get_name", 
                "vala_ccode_base_module_get_ccode_unref_function", 
                "g_once_init_leave", 
                "g_spawn_sync", 
                "__gmon_start__", 
                "vala_parameter_get_ellipsis", 
                "g_file_get_contents", 
                "vala_enum_get_values", 
                "g_hash_table_contains", 
                "vala_ccode_base_module_get_ccode_name", 
                "g_error_new", 
                "vala_pointer_type_get_type", 
                "g_return_if_fail_warning", 
                "g_slice_free1", 
                "g_strsplit", 
                "g_strchomp", 
                "g_type_create_instance", 
                "vala_code_visitor_visit_method", 
                "vala_reference_type_get_type", 
                "memchr", 
                "__libc_start_main", 
                "g_list_free", 
                "vala_namespace_get_structs", 
                "_ITM_registerTMCloneTable", 
                "close", 
                "vala_code_context_add_package", 
                "g_error_new_literal", 
                "vala_code_node_accept", 
                "vala_code_node_get_source_reference", 
                "vala_code_visitor_ref", 
                "vala_code_context_is_defined", 
                "vala_creation_method_get_type", 
                "g_strdup", 
                "g_hash_table_foreach", 
                "g_str_hash", 
                "vala_variable_get_variable_type", 
                "vala_code_context_get_vapi_path", 
                "g_slist_foreach", 
                "g_type_is_a", 
                "vala_code_context_add_external_package", 
                "vala_array_type_get_type", 
                "vala_class_get_enums", 
                "vala_struct_get_methods", 
                "vala_code_context_add_source_file", 
                "vala_array_type_get_fixed_length", 
                "g_type_class_peek_parent", 
                "vala_data_type_get_parameters", 
                "vala_symbol_is_private_symbol", 
                "vala_code_node_to_string", 
                "g_utf8_strrchr", 
                "vala_ccode_base_module_get_ccode_prefix", 
                "vala_code_node_accept_children", 
                "fopen", 
                "vala_symbol_get_parent_symbol", 
                "vala_data_type_get_return_type", 
                "vala_ccode_base_module_get_ccode_free_function", 
                "_ITM_deregisterTMCloneTable", 
                "g_option_error_quark", 
                "g_print", 
                "g_utf8_strchr", 
                "vala_code_context_unref", 
                "g_str_equal", 
                "vala_code_context_set_profile", 
                "g_unlink", 
                "g_path_get_dirname", 
                "g_option_context_new", 
                "g_regex_escape_string", 
                "vala_integer_literal_get_value", 
                "g_list_foreach", 
                "g_free", 
                "vala_integer_literal_get_type", 
                "g_clear_error", 
                "g_strcmp0"
            ], 
            "rpm": "valabind-0.10.0-2.fc26.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Applications/Engineering", 
            "Name": " valabind", 
            "License": " GPLv3+", 
            "URL": " https://github.com/radare/valabind", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-13.phx2.fedoraproject.org", 
            "Description": "\nValabind is a tool to parse vala[1] or vapi files to transform them\ninto swig[2] interface files, C++, NodeJS-ffi or GIR.  With swig, you\ncan create language bindings for any API written in vala or C with a\nvapi interface.  It can also generate bindings for C++.\n", 
            "Build Date": " Sat 11 Feb 2017 06:30:59 PM EST", 
            "Source RPM": " valabind-0.10.0-2.fc26.src.rpm", 
            "Version": " 0.10.0", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Sun 26 Feb 2017 04:24:24 PM EST, Key ID f55e7430f5282ee4", 
            "Release": " 2.fc26", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Transform vala or vapi files into swig, C++, NodeJS-ffi, or GIR", 
            "Size": " 262575"
        }
    }
}