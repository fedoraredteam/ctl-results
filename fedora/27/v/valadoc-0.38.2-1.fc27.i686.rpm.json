{
    "results": {
        "usr/bin/valadoc-0_38": {
            "report-functions": [
                "vala_struct_get_default_construction_method", 
                "valadoc_api_formal_parameter_set_default_value", 
                "vala_property_get_base_interface_property", 
                "vala_iterator_unref", 
                "vala_class_get_fields", 
                "vala_data_type_is_real_struct_type", 
                "vala_code_generator_construct", 
                "vala_method_get_type_parameters", 
                "valadoc_api_enum_value_get_type", 
                "vala_data_type_get_value_owned", 
                "vala_code_context_get_internal_header_filename", 
                "vala_class_set_has_private_fields", 
                "g_type_create_instance", 
                "vala_expression_statement_get_expression", 
                "vala_generic_type_get_type", 
                "valadoc_error_reporter_new", 
                "g_string_append", 
                "vala_code_context_get_header_filename", 
                "vala_array_type_set_fixed_length", 
                "vala_data_type_equals", 
                "valadoc_api_tree_check_comments", 
                "vala_property_get_blurb", 
                "valadoc_api_class_new", 
                "vala_data_type_set_nullable", 
                "vala_code_context_get_checking", 
                "vala_pointer_type_get_type", 
                "vala_code_context_get_target_glib_major", 
                "vala_property_accessor_get_prop", 
                "g_type_interface_peek_parent", 
                "vala_code_context_has_package", 
                "valadoc_api_field_set_field_type", 
                "valadoc_api_callable_get_return_type", 
                "vala_parameter_get_ellipsis", 
                "vala_class_get_destructor", 
                "vala_code_generator_get_type", 
                "vala_markup_reader_read_token", 
                "vala_slice_expression_get_start", 
                "vala_code_context_set_experimental_non_null", 
                "valadoc_doclet_process", 
                "vala_code_node_get_attribute_double", 
                "vala_data_type_has_type_arguments", 
                "vala_map_get_keys", 
                "vala_iterator_next", 
                "valadoc_api_pointer_new", 
                "vala_data_type_construct", 
                "vala_unary_expression_get_inner", 
                "vala_code_context_new", 
                "g_ascii_strup", 
                "valadoc_api_interface_get_type", 
                "vala_symbol_get_comment", 
                "vala_switch_label_get_expression", 
                "vala_null_type_get_type", 
                "vala_code_context_set_experimental", 
                "vala_expression_set_value_type", 
                "vala_data_type_compatible", 
                "vala_class_get_is_immutable", 
                "vala_array_length_field_get_type", 
                "vala_array_resize_method_get_type", 
                "vala_method_get_binding", 
                "vala_method_get_preconditions", 
                "valadoc_api_struct_get_base_type", 
                "g_stpcpy", 
                "vala_object_type_new", 
                "vala_method_call_get_call", 
                "vala_map_set", 
                "vala_element_access_get_container", 
                "valadoc_api_error_domain_new", 
                "valadoc_api_interface_get_implemented_interface_list", 
                "vala_if_statement_get_condition", 
                "vala_foreach_statement_get_collection", 
                "vala_object_creation_expression_get_type_reference", 
                "vala_semantic_analyzer_get_data_type_for_symbol", 
                "vala_code_node_set_attribute_cache", 
                "vala_version_attribute_get_deprecated", 
                "vala_struct_get_is_immutable", 
                "valadoc_api_node_accept_all_children", 
                "vala_code_context_accept", 
                "vala_data_type_get_type_arguments", 
                "valadoc_error_reporter_set_settings", 
                "vala_map_unref", 
                "__isoc99_sscanf", 
                "vala_hash_map_new", 
                "vala_method_get_is_virtual", 
                "valadoc_api_field_get_field_type", 
                "vala_method_get_printf_format", 
                "vala_property_accessor_get_automatic_body", 
                "valadoc_api_method_new", 
                "vala_source_file_get_gir_namespace", 
                "vala_addressof_expression_get_inner", 
                "g_once_init_enter", 
                "vala_code_node_get_source_reference", 
                "vala_destructor_get_this_parameter", 
                "vala_collection_get_size", 
                "vala_error_type_new", 
                "valadoc_api_visitor_construct", 
                "vala_method_get_type", 
                "g_type_register_fundamental", 
                "vala_property_accessor_get_construction", 
                "vala_code_context_get_assert", 
                "valadoc_api_signature_builder_append_keyword", 
                "vala_object_type_symbol_get_methods", 
                "vala_symbol_lower_case_to_camel_case", 
                "valadoc_api_typereference_set_data_type", 
                "vala_foreach_statement_get_collection_variable", 
                "vala_report_set_enable_warnings", 
                "vala_generic_type_new", 
                "g_string_append_unichar", 
                "vala_parameter_get_captured", 
                "valadoc_api_signature_builder_unref", 
                "vala_typecheck_get_expression", 
                "vala_code_generator_store_parameter", 
                "valadoc_api_attribute_add_string", 
                "vala_attribute_get_bool", 
                "valadoc_settings_new", 
                "vala_attribute_cache_unref", 
                "valadoc_api_item_get_data", 
                "vala_enum_get_values", 
                "vala_gir_comment_get_type", 
                "vala_property_get_field", 
                "vala_attribute_cache_ref", 
                "vala_list_set", 
                "vala_struct_is_boolean_type", 
                "vala_class_type_new", 
                "g_signal_handlers_destroy", 
                "vala_symbol_get_parent_symbol", 
                "vala_namespace_get_namespaces", 
                "vala_property_accessor_get_value_type", 
                "vala_source_reference_unref", 
                "vala_class_type_get_type", 
                "valadoc_api_source_comment_new", 
                "vala_source_file_unref", 
                "vala_code_context_add_define", 
                "valadoc_gtkdoc_renderer_new", 
                "valadoc_api_array_get_data_type", 
                "vala_delegate_get_has_target", 
                "g_strchug", 
                "valadoc_api_class_get_base_type", 
                "valadoc_api_pointer_get_data_type", 
                "vala_member_initializer_get_symbol_reference", 
                "valadoc_api_tree_accept", 
                "vala_struct_get_base_type", 
                "vala_code_context_get_gir_path", 
                "valadoc_api_tree_accept_children", 
                "vala_yield_statement_get_yield_expression", 
                "vala_target_value_set_value_type", 
                "g_regex_replace_literal", 
                "vala_code_node_get_attribute_string", 
                "valadoc_api_package_get_is_package", 
                "vala_code_context_get_hide_internal", 
                "memchr", 
                "vala_code_context_set_directory", 
                "vala_version_attribute_get_replacement", 
                "vala_switch_statement_get_expression", 
                "vala_report_get_warnings", 
                "vala_delete_statement_get_expression", 
                "g_strndup", 
                "g_clear_error", 
                "valadoc_driver_get_type", 
                "vala_code_context_get_deprecated", 
                "vala_object_type_get_type_symbol", 
                "vala_struct_is_floating_type", 
                "g_malloc", 
                "vala_symbol_camel_case_to_lower_case", 
                "vala_namespace_get_type", 
                "valadoc_api_property_get_property_type", 
                "valadoc_api_node_get_source_file", 
                "vala_member_access_get_type", 
                "vala_symbol_set_active", 
                "g_type_register_static", 
                "vala_code_node_unref", 
                "vala_enum_get_is_flags", 
                "valadoc_api_gir_source_comment_set_return_comment", 
                "valadoc_content_content_renderer_render_children", 
                "vala_map_iterator_next", 
                "vala_array_type_get_length", 
                "rename", 
                "vala_class_get_constructor", 
                "vala_local_variable_new", 
                "vala_scope_lookup", 
                "vala_code_node_get_attribute_cache", 
                "vala_foreach_statement_get_type", 
                "__libc_start_main", 
                "g_object_unref", 
                "valadoc_error_reporter_get_warnings", 
                "vala_array_creation_expression_get_element_type", 
                "vala_map_get_values", 
                "g_return_if_fail_warning", 
                "vala_collection_remove", 
                "vala_cast_expression_get_inner", 
                "vala_data_type_get_data_type", 
                "vala_variable_get_variable_type", 
                "vala_method_get_base_interface_method", 
                "vala_target_value_get_actual_value_type", 
                "vala_data_type_set_value_owned", 
                "vala_data_type_copy", 
                "vala_named_argument_get_type", 
                "valadoc_api_error_domain_get_type", 
                "valadoc_api_typereference_add_type_argument", 
                "g_option_context_parse", 
                "vala_enum_get_type", 
                "g_type_instance_get_private", 
                "vala_block_get_captured", 
                "valadoc_api_error_code_new", 
                "vala_local_variable_set_init", 
                "vala_signal_type_get_signal_symbol", 
                "vala_error_domain_get_codes", 
                "g_malloc0_n", 
                "g_strcmp0", 
                "vala_binary_expression_get_right", 
                "vala_class_get_has_private_fields", 
                "vala_method_clear_parameters", 
                "valadoc_api_enum_value_new", 
                "g_utf8_strrchr", 
                "vala_declaration_statement_get_declaration", 
                "vala_throw_statement_get_error_expression", 
                "valadoc_api_signature_builder_append_symbol", 
                "vala_attribute_cache_construct", 
                "vala_value_type_get_type_symbol", 
                "g_string_append_printf", 
                "valadoc_api_field_get_type", 
                "g_strcanon", 
                "strlen", 
                "vala_dynamic_method_get_type", 
                "vala_iterable_iterator", 
                "valadoc_driver_write_gir", 
                "vala_interface_get_virtuals", 
                "g_strdup", 
                "vala_struct_is_integer_type", 
                "g_option_context_set_help_enabled", 
                "vala_property_get_is_virtual", 
                "vala_property_get_initializer", 
                "vala_expression_is_constant", 
                "vala_constant_get_value", 
                "vala_struct_get_base_struct", 
                "g_string_free", 
                "vala_member_access_get_member_name", 
                "vala_interface_get_type", 
                "vala_array_copy_method_get_type", 
                "vala_expression_get_symbol_reference", 
                "valadoc_api_method_get_type", 
                "vala_code_context_set_profile", 
                "valadoc_api_delegate_new", 
                "g_strchomp", 
                "valadoc_importer_valadoc_documentation_importer_new", 
                "vala_subroutine_get_body", 
                "valadoc_api_signature_builder_append_highlighted", 
                "vala_array_type_get_fixed_length", 
                "vala_integer_literal_get_value", 
                "vala_method_get_entry_point", 
                "vala_try_statement_get_catch_clauses", 
                "vala_loop_get_body", 
                "valadoc_api_namespace_new", 
                "valadoc_api_tree_ref", 
                "vala_symbol_get_full_name", 
                "vala_member_access_get_type_arguments", 
                "vala_integer_literal_get_type", 
                "vala_class_is_fundamental", 
                "g_str_hash", 
                "vala_symbol_get_active", 
                "vala_symbol_get_external_package", 
                "vala_assignment_get_left", 
                "g_path_get_basename", 
                "vala_constructor_get_binding", 
                "vala_local_variable_get_is_result", 
                "g_utf8_get_char", 
                "vala_method_call_get_is_yield_expression", 
                "valadoc_api_typereference_get_type", 
                "valadoc_api_property_set_getter", 
                "valadoc_documentation_parser_new", 
                "valadoc_api_tree_import_comments", 
                "vala_value_type_get_type", 
                "vala_error_code_get_type", 
                "valadoc_api_tree_unref", 
                "vala_code_context_set_target_glib_minor", 
                "vala_reference_type_get_type", 
                "valadoc_api_struct_get_type", 
                "valadoc_api_child_symbol_registrar_new", 
                "g_object_new", 
                "g_malloc0", 
                "vala_loop_get_type", 
                "vala_comment_get_content", 
                "g_file_get_contents", 
                "vala_enum_value_type_get_to_string_method", 
                "valadoc_api_pointer_set_data_type", 
                "vala_target_value_construct", 
                "vala_data_type_get_nullable", 
                "valadoc_driver_build", 
                "vala_string_literal_get_value", 
                "vala_gir_comment_parameter_iterator", 
                "vala_code_generator_load_field", 
                "vala_slice_expression_get_container", 
                "vala_expression_is_non_null", 
                "vala_symbol_get_scope", 
                "vala_lambda_expression_get_parameters", 
                "vala_code_node_set_error", 
                "vala_parameter_get_format_arg", 
                "vala_constant_get_type", 
                "vala_object_type_get_type", 
                "vala_method_call_get_type", 
                "g_type_class_peek_parent", 
                "vala_code_context_get_mem_profiler", 
                "valadoc_gtkdoc_renderer_get_content", 
                "vala_property_get_notify", 
                "vala_code_node_get_parent_node", 
                "vala_code_context_add_package", 
                "valadoc_module_loader_get_instance", 
                "fputc", 
                "valadoc_api_source_file_get_data", 
                "vala_symbol_get_version", 
                "vala_code_context_set_basedir", 
                "memcmp", 
                "vala_binary_expression_get_type", 
                "vala_interface_get_prerequisites", 
                "vala_switch_statement_get_type", 
                "vala_property_get_base_property", 
                "vala_string_literal_get_type", 
                "g_once_init_leave", 
                "vala_expression_set_target_value", 
                "vala_dynamic_property_get_type", 
                "strchr", 
                "valadoc_taglets_return_get_type", 
                "vala_class_get_base_types", 
                "vala_unary_expression_get_operator", 
                "vala_gir_parser_new", 
                "vala_initializer_list_get_type", 
                "vala_enum_value_type_get_type", 
                "g_boxed_type_register_static", 
                "vala_source_file_new", 
                "valadoc_api_tree_add_package", 
                "vala_subroutine_get_result_var", 
                "g_direct_equal", 
                "vala_code_context_get_debug", 
                "vala_data_type_to_prototype_string", 
                "setlocale", 
                "vala_code_context_get_basedir", 
                "vala_constructor_get_this_parameter", 
                "vala_integer_type_new", 
                "vala_markup_reader_new", 
                "vala_code_node_get_error", 
                "vala_target_value_get_value_type", 
                "vala_code_node_to_string", 
                "valadoc_api_tree_set_data", 
                "g_file_error_quark", 
                "vala_local_variable_get_captured", 
                "vala_code_context_set_target_glib_major", 
                "vala_lambda_expression_get_type", 
                "vala_code_node_set_attribute_bool", 
                "vala_code_node_get_attribute_integer", 
                "g_mapped_file_get_length", 
                "valadoc_api_package_new", 
                "valadoc_realpath", 
                "vala_parameter_set_direction", 
                "valadoc_api_tree_add_external_c_files", 
                "vala_boolean_type_get_type", 
                "valadoc_api_typeparameter_new", 
                "vala_target_value_set_actual_value_type", 
                "vala_switch_label_get_section", 
                "vala_try_statement_get_after_try_block_reachable", 
                "valadoc_markup_writer_escape", 
                "vala_integer_literal_get_type_suffix", 
                "vala_callable_get_return_type", 
                "vala_typesymbol_is_reference_type", 
                "vala_version_attribute_get_since", 
                "vala_code_context_ref", 
                "valadoc_error_reporter_get_errors", 
                "vala_property_get_set_accessor", 
                "valadoc_api_constant_new", 
                "valadoc_api_field_new", 
                "vala_class_get_static_destructor", 
                "vala_code_context_check", 
                "vala_enum_value_get_type", 
                "g_file_test", 
                "vala_object_type_symbol_get_properties", 
                "vala_switch_section_get_labels", 
                "vala_struct_value_type_new", 
                "g_value_type_compatible", 
                "vala_code_visitor_get_type", 
                "vala_map_iterator_get_value", 
                "vala_character_literal_get_char", 
                "vala_array_list_new", 
                "vala_lockable_get_type", 
                "vala_integer_type_get_type", 
                "vala_method_type_get_method_symbol", 
                "g_mapped_file_new", 
                "vala_source_file_get_csource_filename", 
                "valadoc_api_source_comment_unref", 
                "vala_lambda_expression_get_method", 
                "vala_source_reference_get_file", 
                "vala_source_file_ref", 
                "vala_expression_get_target_type", 
                "vala_array_type_get_type", 
                "g_type_check_instance_is_a", 
                "valadoc_api_signature_builder_append_literal", 
                "vala_interface_type_get_type", 
                "vala_local_variable_get_init", 
                "vala_method_call_get_is_assert", 
                "g_mkdir_with_parents", 
                "vala_regex_literal_get_value", 
                "vala_boolean_literal_get_type", 
                "vala_method_type_new", 
                "__fprintf_chk", 
                "vala_struct_is_simple_type", 
                "vala_attribute_get_string", 
                "valadoc_module_loader_get_doclet_path", 
                "vala_method_get_signal_reference", 
                "vala_code_node_get_tree_can_fail", 
                "g_type_check_value_holds", 
                "vala_method_get_async_end_parameters", 
                "g_type_check_instance_cast", 
                "vala_iterable_ref", 
                "vala_sizeof_expression_get_type_reference", 
                "__cxa_finalize", 
                "vala_character_literal_get_value", 
                "vala_code_node_set_source_reference", 
                "vala_signal_get_type", 
                "vala_delegate_type_get_delegate_symbol", 
                "valadoc_api_property_set_setter", 
                "vala_code_node_get_unreachable", 
                "vala_property_accessor_get_writable", 
                "vala_collection_contains", 
                "valadoc_api_source_file_get_type", 
                "vala_source_file_get_relative_filename", 
                "g_strnfill", 
                "g_quark_to_string", 
                "vala_variable_get_single_assignment", 
                "valadoc_api_typereference_new", 
                "vala_comment_get_source_reference", 
                "g_direct_hash", 
                "vala_method_get_is_inline", 
                "vala_source_file_get_nodes", 
                "vala_member_access_get_prototype_access", 
                "valadoc_api_struct_new", 
                "vala_attribute_get_double", 
                "valadoc_importer_gir_documentation_importer_new", 
                "vala_gir_comment_get_return_content", 
                "fclose", 
                "vala_boolean_type_new", 
                "valadoc_api_array_new", 
                "vala_data_type_get_actual_type", 
                "vala_class_get_classes", 
                "vala_cast_expression_get_is_non_null_cast", 
                "vala_method_get_returns_modified_pointer", 
                "vala_dynamic_signal_get_dynamic_type", 
                "vala_block_get_type", 
                "vala_code_node_get_error_types", 
                "vala_creation_method_get_type", 
                "vala_code_context_get_use_header", 
                "valadoc_api_typereference_get_type_arguments", 
                "vala_data_type_get_return_type", 
                "vala_field_get_binding", 
                "vala_object_type_symbol_get_signals", 
                "vala_constant_get_type_reference", 
                "valadoc_api_formal_parameter_set_parameter_type", 
                "valadoc_api_tree_new", 
                "g_str_has_prefix", 
                "valadoc_api_node_get_full_name", 
                "valadoc_api_signature_builder_ref", 
                "g_strescape", 
                "vala_struct_value_type_get_type", 
                "vala_method_type_get_type", 
                "vala_postfix_expression_get_increment", 
                "valadoc_api_symbol_add_attribute", 
                "valadoc_api_enum_get_type", 
                "g_free", 
                "vala_property_get_binding", 
                "vala_data_type_is_real_non_null_struct_type", 
                "g_enum_register_static", 
                "vala_property_accessor_get_type", 
                "vala_class_get_default_construction_method", 
                "vala_symbol_is_private_symbol", 
                "vala_catch_clause_get_error_variable", 
                "vala_assignment_get_operator", 
                "vala_code_context_get_report", 
                "vala_object_creation_expression_get_argument_list", 
                "g_assertion_message_expr", 
                "vala_data_type_get_floating_reference", 
                "vala_semantic_analyzer_symbol_lookup_inherited", 
                "vala_property_accessor_get_method", 
                "vala_method_call_get_argument_list", 
                "vala_foreach_statement_get_element_variable", 
                "valadoc_error_reporter_set_colors", 
                "vala_catch_clause_get_type", 
                "vala_delegate_type_new", 
                "vala_property_get_property_type", 
                "g_ascii_strdown", 
                "valadoc_api_interface_set_base_type", 
                "vala_namespace_get_classes", 
                "vala_pointer_indirection_get_inner", 
                "vala_switch_section_has_default_label", 
                "vala_delegate_get_type", 
                "valadoc_api_class_add_interface", 
                "vala_map_iterator_get_key", 
                "valadoc_api_property_new", 
                "vala_code_node_get_attribute", 
                "vala_method_get_type_parameter_index", 
                "valadoc_api_delegate_get_type", 
                "vala_member_access_new_simple", 
                "vala_source_reference_get_begin", 
                "g_str_equal", 
                "vala_foreach_statement_get_body", 
                "vala_code_context_push", 
                "vala_void_type_get_type", 
                "valadoc_api_callable_set_return_type", 
                "vala_symbol_get_access", 
                "g_string_insert_c", 
                "vala_symbol_get_type", 
                "valadoc_api_constant_get_type", 
                "vala_code_context_require_glib_version", 
                "g_strconcat", 
                "vala_code_visitor_construct", 
                "vala_creation_method_get_chain_up", 
                "vala_object_type_symbol_get_type_parameters", 
                "vala_typeof_expression_get_type_reference", 
                "vala_floating_type_get_type", 
                "vala_initializer_list_get_initializers", 
                "vala_iterable_unref", 
                "vala_lock_statement_get_resource", 
                "vala_class_get_type", 
                "valadoc_api_formal_parameter_get_parameter_type", 
                "vala_catch_clause_get_clabel_name", 
                "vala_parameter_get_base_parameter", 
                "vala_symbol_get_from_commandline", 
                "vala_code_visitor_visit_method", 
                "vala_class_get_base_class", 
                "vala_if_statement_get_false_statement", 
                "vala_code_visitor_visit_local_variable", 
                "vala_code_context_get_gobject_tracing", 
                "vala_method_get_coroutine", 
                "g_unichar_toupper", 
                "g_regex_escape_string", 
                "valadoc_api_class_get_implemented_interface_list", 
                "vala_cast_expression_get_is_silent_cast", 
                "valadoc_api_signal_get_type", 
                "vala_data_type_get_type_parameter", 
                "vala_invalid_type_new", 
                "vala_code_context_add_source_file", 
                "vala_named_argument_get_inner", 
                "valadoc_api_array_get_type", 
                "vala_signal_type_get_type", 
                "vala_object_creation_expression_get_struct_creation", 
                "vala_foreach_statement_get_type_reference", 
                "vala_gir_parser_parse", 
                "vala_markup_reader_get_attribute", 
                "g_object_ref", 
                "vala_source_reference_ref", 
                "vala_source_file_get_comments", 
                "vala_lockable_get_lock_used", 
                "vala_pointer_type_new", 
                "valadoc_remove_directory", 
                "vala_catch_clause_set_clabel_name", 
                "vala_class_get_is_abstract", 
                "valadoc_error_reporter_simple_error", 
                "vala_markup_reader_get_name", 
                "vala_list_remove_at", 
                "valadoc_api_constant_get_constant_type", 
                "vala_data_type_is_array", 
                "vala_property_get_get_accessor", 
                "vala_using_directive_new", 
                "vala_string_literal_eval", 
                "vala_code_node_accept_children", 
                "vala_method_get_this_parameter", 
                "vala_method_get_is_async_callback", 
                "vala_attribute_has_argument", 
                "vala_enum_value_type_new", 
                "g_unlink", 
                "vala_code_context_get_gresource_path", 
                "vala_class_type_get_class_symbol", 
                "vala_method_is_variadic", 
                "vala_method_get_async_begin_parameters", 
                "valadoc_api_tree_get_data", 
                "vala_expression_get_formal_value_type", 
                "vala_code_context_get", 
                "vala_code_generator_store_field", 
                "vala_method_get_is_abstract", 
                "vala_source_file_get_file_type", 
                "vala_parameter_get_direction", 
                "valadoc_module_loader_create_doclet", 
                "vala_property_get_is_abstract", 
                "vala_array_type_set_inline_allocated", 
                "g_type_fundamental_next", 
                "valadoc_api_method_set_base_method", 
                "g_realloc", 
                "valadoc_gtkdoc_renderer_render_symbol", 
                "vala_method_get_base_interface_type", 
                "vala_report_error", 
                "vala_signal_get_default_handler", 
                "vala_dynamic_property_get_dynamic_type", 
                "vala_array_creation_expression_get_sizes", 
                "vala_method_get_overrides", 
                "_ITM_registerTMCloneTable", 
                "valadoc_api_constant_set_constant_type", 
                "vala_code_node_ref", 
                "vala_parameter_get_type", 
                "vala_reference_transfer_expression_get_inner", 
                "vala_code_node_set_attribute_string", 
                "vala_symbol_is_internal_symbol", 
                "g_type_free_instance", 
                "vala_symbol_is_class_member", 
                "vala_if_statement_get_true_statement", 
                "vala_string_literal_get_translate", 
                "g_type_class_add_private", 
                "vala_struct_get_type", 
                "fopen", 
                "vala_basic_block_get_predecessors", 
                "vala_typecheck_get_type_reference", 
                "vala_binary_expression_get_left", 
                "vala_method_get_format_arg_index", 
                "valadoc_api_signal_new", 
                "vala_symbol_get_external", 
                "g_realloc_n", 
                "vala_code_context_get_vapi_path", 
                "g_regex_error_quark", 
                "valadoc_api_node_add_child", 
                "g_unichar_isalnum", 
                "vala_code_visitor_visit_property", 
                "vala_code_visitor_visit_end_full_expression", 
                "vala_code_context_get_symbols_filename", 
                "g_option_context_new", 
                "vala_parser_new", 
                "vala_report_get_errors", 
                "valadoc_api_error_code_get_type", 
                "vala_foreach_statement_get_use_iterator", 
                "valadoc_api_enum_new", 
                "vala_assignment_get_right", 
                "vala_property_accessor_get_value_parameter", 
                "g_path_get_dirname", 
                "vala_class_get_class_destructor", 
                "vala_attribute_get_name", 
                "vala_expression_get_formal_target_type", 
                "vala_error_domain_get_type", 
                "vala_method_get_scanf_format", 
                "g_regex_unref", 
                "vala_map_ref", 
                "vala_namespace_get_comments", 
                "valadoc_api_attribute_new", 
                "vala_code_node_check", 
                "vala_source_file_accept", 
                "vala_property_get_type", 
                "vala_element_access_get_indices", 
                "vala_list_insert", 
                "vala_map_iterator_unref", 
                "vala_constructor_get_type", 
                "vala_signal_type_new", 
                "vala_class_get_has_class_private_fields", 
                "g_option_context_add_main_entries", 
                "g_regex_new", 
                "vala_dynamic_signal_get_type", 
                "vala_cast_expression_get_type_reference", 
                "vala_destructor_get_type", 
                "g_type_is_a", 
                "vala_method_get_base_method", 
                "vala_array_move_method_get_type", 
                "g_type_check_class_cast", 
                "vala_interface_get_classes", 
                "g_strsplit", 
                "vala_markup_reader_get_content", 
                "vala_method_get_postconditions", 
                "vala_code_visitor_unref", 
                "vala_data_type_is_weak", 
                "vala_class_get_class_constructor", 
                "vala_assignment_get_type", 
                "vala_object_type_symbol_get_type", 
                "vala_source_file_get_cinclude_filename", 
                "valadoc_api_namespace_get_type", 
                "vala_array_type_get_rank", 
                "vala_expression_get_target_value", 
                "vala_code_context_get_root", 
                "vala_signal_type_get_handler_type", 
                "vala_typesymbol_is_subtype_of", 
                "valadoc_error_reporter_set_warnings_offset", 
                "vala_comment_unref", 
                "vala_array_type_get_element_type", 
                "vala_data_type_get_is_dynamic", 
                "vala_callable_add_parameter", 
                "vala_try_statement_get_type", 
                "vala_void_type_new", 
                "valadoc_api_formal_parameter_new", 
                "vala_markup_reader_unref", 
                "vala_iterator_get", 
                "valadoc_api_struct_set_base_type", 
                "vala_class_get_is_compact", 
                "vala_target_value_ref", 
                "vala_return_statement_get_return_expression", 
                "g_mapped_file_get_contents", 
                "vala_code_context_get_type", 
                "vala_source_file_set_gir_version", 
                "vala_parser_parse", 
                "vala_parameter_get_params_array", 
                "valadoc_api_symbol_get_type", 
                "vala_code_generator_store_local", 
                "vala_code_node_get_attribute_bool", 
                "vala_namespace_get_interfaces", 
                "vala_method_set_coroutine", 
                "vala_struct_is_disposable", 
                "vala_symbol_get_name", 
                "valadoc_api_typereference_get_data_type", 
                "vala_element_access_get_type", 
                "vala_data_type_get_parameters", 
                "vala_interface_type_get_interface_symbol", 
                "vala_callable_get_parameters", 
                "vala_expression_get_lvalue", 
                "g_option_context_free", 
                "vala_data_type_is_disposable", 
                "vala_target_value_unref", 
                "vala_try_statement_get_finally_body", 
                "g_str_has_suffix", 
                "g_string_new", 
                "g_utf8_strchr", 
                "vala_code_context_unref", 
                "fwrite", 
                "vala_unlock_statement_get_resource", 
                "vala_signal_get_emitter", 
                "vala_delegate_type_get_is_called_once", 
                "vala_collection_clear", 
                "vala_namespace_add_using_directive", 
                "vala_code_generator_load_local", 
                "vala_struct_get_signed", 
                "g_getenv", 
                "g_strdup_printf", 
                "__gmon_start__", 
                "vala_local_variable_get_type", 
                "vala_block_get_local_variables", 
                "vala_callable_get_type", 
                "vala_unresolved_symbol_new", 
                "vala_variable_get_initializer", 
                "valadoc_api_class_get_type", 
                "vala_signal_get_is_virtual", 
                "vala_code_context_get_analyzer", 
                "vala_block_get_statements", 
                "vala_initializer_list_get_size", 
                "g_build_filename", 
                "valadoc_api_property_set_base_property", 
                "vala_code_context_get_version_header", 
                "vala_expression_get_value_type", 
                "__stack_chk_fail", 
                "vala_variable_get_type", 
                "vala_attribute_cache_get_type", 
                "vala_source_file_accept_children", 
                "vala_error_type_get_error_code", 
                "vala_switch_statement_get_sections", 
                "vala_member_access_get_inner", 
                "vala_method_get_closure", 
                "vala_typesymbol_get_type", 
                "g_error_free", 
                "valadoc_taglets_param_get_parameter_name", 
                "vala_map_contains", 
                "vala_symbol_is_instance_member", 
                "valadoc_api_tree_create_tree", 
                "vala_code_node_get_type", 
                "vala_object_creation_expression_get_is_yield_expression", 
                "vala_source_file_set_gir_namespace", 
                "g_type_name", 
                "vala_code_node_get_attribute_cache_index", 
                "vala_scope_get_symbol_table", 
                "vala_member_initializer_get_initializer", 
                "vala_error_type_get_error_domain", 
                "vala_delegate_type_get_type", 
                "vala_array_creation_expression_get_initializer_list", 
                "valadoc_api_signature_builder_append", 
                "vala_data_type_to_qualified_string", 
                "valadoc_api_property_get_type", 
                "vala_destructor_get_binding", 
                "vala_source_file_get_filename", 
                "valadoc_api_enum_value_set_default_value", 
                "valadoc_error_reporter_set_errors_offset", 
                "vala_boolean_literal_get_value", 
                "vala_method_call_get_is_constructv_chainup", 
                "vala_error_code_get_value", 
                "vala_code_node_emit", 
                "vala_struct_get_width", 
                "vala_code_context_get_module_init_method", 
                "g_utf8_strdown", 
                "vala_error_type_get_type", 
                "valadoc_api_interface_new", 
                "vala_named_argument_get_name", 
                "vala_report_warning", 
                "valadoc_api_signature_builder_new", 
                "vala_code_context_get_profile", 
                "g_log", 
                "vala_hash_set_new", 
                "valadoc_api_pointer_get_type", 
                "vala_array_type_get_inline_allocated", 
                "vala_postfix_expression_get_inner", 
                "vala_property_get_nick", 
                "valadoc_api_interface_add_interface", 
                "vala_parameter_set_captured", 
                "vala_property_get_this_parameter", 
                "vala_target_value_get_type", 
                "valadoc_api_class_set_base_type", 
                "valadoc_api_tree_parse_comments", 
                "vala_expression_statement_get_type", 
                "vala_dynamic_signal_get_handler", 
                "vala_data_type_get_type", 
                "vala_object_creation_expression_get_object_initializer", 
                "vala_code_node_accept", 
                "fputs", 
                "vala_return_statement_get_type", 
                "_ITM_deregisterTMCloneTable", 
                "g_markup_escape_text", 
                "strstr", 
                "valadoc_api_property_accessor_new", 
                "vala_array_creation_expression_get_rank", 
                "vala_source_reference_get_end", 
                "valadoc_api_array_set_data_type", 
                "valadoc_api_property_set_property_type", 
                "vala_slice_expression_get_stop", 
                "__xstat", 
                "g_mapped_file_unref", 
                "strtol", 
                "vala_foreach_statement_get_variable_name", 
                "valadoc_content_comment_find_taglets", 
                "vala_symbol_get_source_type", 
                "valadoc_api_source_file_new", 
                "vala_try_statement_get_body", 
                "g_param_spec_internal", 
                "vala_source_file_add_using_directive", 
                "vala_source_file_set_used", 
                "vala_report_deprecated", 
                "vala_struct_get_fields", 
                "vala_base_access_get_type", 
                "vala_source_file_get_type", 
                "vala_binary_expression_get_operator", 
                "valadoc_api_signature_builder_get", 
                "valadoc_api_visitor_get_type", 
                "vala_pointer_type_get_base_type", 
                "vala_list_get", 
                "vala_character_literal_get_type", 
                "vala_version_attribute_get_deprecated_since", 
                "vala_code_context_get_codegen", 
                "vala_floating_type_new", 
                "vala_field_get_is_volatile", 
                "vala_collection_add", 
                "valadoc_api_gir_source_comment_new", 
                "vala_delegate_get_sender_type", 
                "valadoc_api_attribute_add_boolean", 
                "vala_catch_clause_get_error_type", 
                "vala_real_literal_get_type", 
                "vala_data_type_is_reference_type_or_type_parameter", 
                "vala_list_index_of", 
                "vala_map_get", 
                "vala_parameter_new", 
                "g_option_error_quark", 
                "vala_subroutine_get_return_block", 
                "vala_real_literal_get_value", 
                "utime", 
                "vala_property_get_overrides", 
                "vala_field_get_type", 
                "valadoc_api_interface_get_base_type", 
                "valadoc_api_formal_parameter_get_ellipsis", 
                "vala_property_accessor_get_readable", 
                "vala_code_context_get_source_files", 
                "vala_code_context_add_c_source_file", 
                "vala_source_file_get_gir_version", 
                "vala_unary_expression_get_type", 
                "vala_catch_clause_get_body", 
                "valadoc_api_node_get_documentation", 
                "valadoc_api_gir_source_comment_add_parameter_content", 
                "vala_code_generator_load_parameter", 
                "g_type_add_interface_static"
            ], 
            "rpm": "valadoc-0.38.2-1.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/valadoc-0.38"
        }, 
        "usr/lib/valadoc/doclets/devhelp/libdoclet_so": {
            "report-functions": [
                "valadoc_api_struct_get_type", 
                "valadoc_html_basic_doclet_write_wiki_pages", 
                "valadoc_devhelp_markup_writer_new", 
                "valadoc_api_property_get_type", 
                "vala_iterable_ref", 
                "g_type_class_add_private", 
                "valadoc_devhelp_markup_writer_end_functions", 
                "vala_iterable_unref", 
                "valadoc_api_method_get_type", 
                "valadoc_html_basic_doclet_get_type", 
                "valadoc_api_field_get_type", 
                "vala_list_get", 
                "_ITM_deregisterTMCloneTable", 
                "valadoc_markup_writer_unref", 
                "valadoc_html_basic_doclet_construct", 
                "valadoc_devhelp_markup_writer_end_book", 
                "g_mkdir_with_parents", 
                "valadoc_copy_directory", 
                "g_free", 
                "valadoc_html_basic_doclet_write_file_footer", 
                "g_once_init_leave", 
                "fclose", 
                "_ITM_registerTMCloneTable", 
                "g_once_init_enter", 
                "g_type_instance_get_private", 
                "valadoc_html_basic_doclet_write_file_header", 
                "valadoc_markup_writer_simple_tag", 
                "mkdir", 
                "vala_collection_get_size", 
                "valadoc_api_node_accept_all_children", 
                "valadoc_api_enum_get_type", 
                "valadoc_api_tree_accept", 
                "fopen", 
                "g_malloc0", 
                "g_strconcat", 
                "valadoc_api_node_is_browsable", 
                "g_object_unref", 
                "vala_collection_add", 
                "valadoc_devhelp_markup_writer_start_functions", 
                "valadoc_html_basic_doclet_write_symbol_content", 
                "__cxa_finalize", 
                "g_object_ref", 
                "g_type_check_class_cast", 
                "valadoc_api_tree_accept_children", 
                "g_type_check_instance_cast", 
                "valadoc_html_markup_writer_new", 
                "g_build_filename", 
                "g_strdup", 
                "valadoc_html_basic_doclet_get_settings", 
                "valadoc_html_html_renderer_set_writer", 
                "valadoc_api_signal_get_type", 
                "valadoc_devhelp_markup_writer_end_sub", 
                "valadoc_devhelp_markup_writer_start_chapters", 
                "valadoc_html_basic_doclet_get_link", 
                "g_type_class_peek_parent", 
                "valadoc_api_constant_get_type", 
                "valadoc_html_basic_doclet_write_package_content", 
                "valadoc_devhelp_markup_writer_start_sub", 
                "vala_array_list_new", 
                "g_return_if_fail_warning", 
                "valadoc_api_node_get_full_name", 
                "g_type_register_static", 
                "valadoc_api_node_get_name", 
                "__gmon_start__", 
                "valadoc_api_node_get_type", 
                "valadoc_devhelp_markup_writer_start_book", 
                "valadoc_devhelp_markup_writer_end_chapters", 
                "valadoc_documentation_get_package"
            ], 
            "rpm": "valadoc-0.38.2-1.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/valadoc/doclets/devhelp/libdoclet.so"
        }, 
        "usr/lib/valadoc/doclets/gtkdoc/libdoclet_so": {
            "report-functions": [
                "valadoc_api_class_get_is_fundamental", 
                "valadoc_api_class_get_private_cname", 
                "valadoc_api_class_get_is_class_type_macro_name", 
                "vala_collection_clear", 
                "valadoc_api_typesymbol_get_type_macro_name", 
                "valadoc_api_property_get_is_override", 
                "vala_iterable_ref", 
                "valadoc_content_inline_taglet_produce_content", 
                "vala_map_unref", 
                "valadoc_api_callable_get_return_type", 
                "g_type_name", 
                "g_strnfill", 
                "valadoc_content_list_bullet_to_string", 
                "valadoc_api_interface_get_interface_macro_name", 
                "valadoc_api_typesymbol_get_is_type_macro_name", 
                "valadoc_api_symbol_get_attribute", 
                "valadoc_api_signal_get_type", 
                "g_once_init_leave", 
                "valadoc_api_attribute_argument_get_value", 
                "g_value_type_compatible", 
                "valadoc_content_content_element_accept", 
                "valadoc_api_method_get_is_yields", 
                "valadoc_api_constant_get_type", 
                "g_regex_replace_literal", 
                "valadoc_api_property_accessor_get_cname", 
                "valadoc_api_class_get_ref_function_cname", 
                "valadoc_api_method_get_is_virtual", 
                "vala_map_get", 
                "valadoc_api_node_get_nspace", 
                "valadoc_api_delegate_get_is_static", 
                "g_str_has_prefix", 
                "g_malloc", 
                "g_str_has_suffix", 
                "g_realloc", 
                "valadoc_api_formal_parameter_get_parameter_type", 
                "valadoc_api_tree_accept", 
                "valadoc_api_error_domain_get_quark_macro_name", 
                "valadoc_api_formal_parameter_get_is_out", 
                "valadoc_content_embedded_get_url", 
                "g_option_context_free", 
                "valadoc_api_item_get_parent", 
                "valadoc_api_enum_get_type", 
                "g_listenv", 
                "vala_iterable_unref", 
                "g_type_register_static", 
                "valadoc_api_node_accept_all_children", 
                "valadoc_api_error_domain_get_type", 
                "valadoc_api_tree_get_external_c_files", 
                "g_option_context_set_help_enabled", 
                "g_getenv", 
                "g_stpcpy", 
                "g_clear_error", 
                "g_malloc0", 
                "g_regex_escape_string", 
                "g_type_class_peek_parent", 
                "g_type_is_a", 
                "valadoc_api_method_get_is_abstract", 
                "valadoc_taglets_see_get_symbol", 
                "rename", 
                "valadoc_api_property_get_property_type", 
                "strlen", 
                "_ITM_registerTMCloneTable", 
                "vala_collection_add_all", 
                "g_strdup_printf", 
                "valadoc_api_interface_get_cname", 
                "valadoc_api_constant_get_cname", 
                "valadoc_api_struct_get_copy_function_cname", 
                "valadoc_api_node_get_children_by_types", 
                "valadoc_api_property_get_is_abstract", 
                "valadoc_api_signal_get_dbus_name", 
                "valadoc_doclet_get_type", 
                "valadoc_api_formal_parameter_get_ellipsis", 
                "valadoc_api_tree_unref", 
                "valadoc_api_field_get_cname", 
                "g_type_check_instance_cast", 
                "g_regex_error_quark", 
                "fputc", 
                "valadoc_taglets_param_get_parameter_name", 
                "fopen", 
                "valadoc_content_source_code_get_code", 
                "valadoc_content_wiki_link_get_name", 
                "valadoc_api_node_get_children_by_type", 
                "g_utf8_strrchr", 
                "g_quark_to_string", 
                "valadoc_api_class_get_base_type", 
                "valadoc_taglets_see_get_symbol_name", 
                "g_strconcat", 
                "valadoc_api_class_get_is_abstract", 
                "g_regex_new", 
                "g_regex_unref", 
                "g_param_spec_internal", 
                "valadoc_api_package_get_is_package", 
                "valadoc_api_enum_value_get_cname", 
                "valadoc_api_delegate_get_type", 
                "valadoc_api_enum_value_get_type", 
                "valadoc_api_property_get_cname", 
                "g_type_class_add_private", 
                "valadoc_api_node_get_type", 
                "valadoc_taglets_throws_get_error_domain", 
                "valadoc_api_visitor_get_type", 
                "valadoc_api_symbol_get_is_internal", 
                "g_strcmp0", 
                "g_utf8_strdown", 
                "valadoc_taglets_param_get_type", 
                "valadoc_api_class_get_cname", 
                "g_strchug", 
                "valadoc_api_enum_get_cname", 
                "valadoc_api_struct_get_type", 
                "g_spawn_sync", 
                "valadoc_api_method_get_is_override", 
                "valadoc_api_field_get_is_static", 
                "_ITM_deregisterTMCloneTable", 
                "g_object_new", 
                "g_type_register_fundamental", 
                "g_strsplit", 
                "memchr", 
                "valadoc_api_typereference_get_is_nullable", 
                "g_path_get_dirname", 
                "g_string_append", 
                "valadoc_api_class_get_type_id", 
                "valadoc_api_class_get_get_value_function_cname", 
                "valadoc_api_node_get_name", 
                "valadoc_api_typereference_get_data_type", 
                "g_malloc0_n", 
                "valadoc_api_typeparameter_get_type", 
                "valadoc_api_property_accessor_get_is_construct", 
                "g_string_insert_c", 
                "vala_collection_to_array", 
                "valadoc_api_property_accessor_get_is_get", 
                "g_option_context_parse", 
                "g_ascii_tolower", 
                "g_option_context_new", 
                "__gmon_start__", 
                "g_signal_handlers_destroy", 
                "g_strndup", 
                "valadoc_api_node_get_full_name", 
                "g_mkdir_with_parents", 
                "g_str_equal", 
                "g_type_add_interface_static", 
                "g_realloc_n", 
                "valadoc_taglets_link_get_type", 
                "valadoc_api_struct_get_cname", 
                "g_string_new", 
                "g_type_check_value_holds", 
                "valadoc_documentation_get_filename", 
                "vala_hash_map_new", 
                "valadoc_content_symbol_link_get_given_symbol_name", 
                "strstr", 
                "valadoc_copy_file", 
                "valadoc_api_tree_ref", 
                "valadoc_api_property_accessor_get_is_set", 
                "g_type_interface_peek_parent", 
                "valadoc_content_content_element_accept_children", 
                "valadoc_taglets_throws_get_error_domain_name", 
                "valadoc_taglets_return_get_type", 
                "valadoc_content_embedded_get_caption", 
                "g_string_free", 
                "valadoc_taglets_inherit_doc_get_type", 
                "g_string_append_printf", 
                "g_string_append_unichar", 
                "valadoc_api_typereference_get_dbus_type_signature", 
                "valadoc_taglets_deprecated_get_type", 
                "valadoc_taglets_since_get_version", 
                "valadoc_error_reporter_simple_error", 
                "valadoc_api_property_get_dbus_name", 
                "valadoc_api_class_get_unref_function_cname", 
                "valadoc_api_array_get_data_type", 
                "vala_map_get_keys", 
                "valadoc_content_content_visitor_construct", 
                "valadoc_api_method_get_cname", 
                "valadoc_api_method_get_base_method", 
                "valadoc_api_error_code_get_cname", 
                "vala_list_insert", 
                "g_option_context_add_main_entries", 
                "vala_iterator_next", 
                "g_build_filename", 
                "valadoc_api_struct_get_destroy_function_cname", 
                "valadoc_api_property_get_type", 
                "valadoc_api_method_get_dbus_result_name", 
                "valadoc_api_symbol_get_type", 
                "vala_iterator_remove", 
                "g_path_get_basename", 
                "fgetc", 
                "fputs", 
                "g_object_unref", 
                "g_markup_escape_text", 
                "__stack_chk_fail", 
                "valadoc_api_property_get_getter", 
                "valadoc_api_attribute_get_argument", 
                "valadoc_taglets_see_get_type", 
                "valadoc_api_signal_get_cname", 
                "vala_list_get", 
                "valadoc_api_node_is_browsable", 
                "g_enum_register_static", 
                "vala_list_sort", 
                "vala_array_list_new", 
                "valadoc_api_tree_accept_children", 
                "valadoc_api_typereference_get_is_unowned", 
                "valadoc_api_method_get_finish_function_cname", 
                "valadoc_api_property_get_is_virtual", 
                "valadoc_api_struct_get_dup_function_cname", 
                "g_utf8_strup", 
                "valadoc_error_reporter_get_errors", 
                "g_option_error_quark", 
                "g_return_if_fail_warning", 
                "valadoc_api_typesymbol_get_type_function_name", 
                "valadoc_content_list_get_bullet", 
                "g_strdup", 
                "g_file_get_contents", 
                "g_type_fundamental_next", 
                "valadoc_api_class_get_param_spec_function_cname", 
                "valadoc_api_class_get_class_macro_name", 
                "valadoc_taglets_since_get_type", 
                "vala_iterator_unref", 
                "valadoc_api_signal_get_is_dbus_visible", 
                "g_assertion_message_expr", 
                "g_object_ref", 
                "valadoc_api_class_get_take_value_function_cname", 
                "valadoc_api_struct_get_free_function_cname", 
                "g_file_test", 
                "valadoc_api_typesymbol_get_type_cast_macro_name", 
                "vala_map_get_values", 
                "valadoc_content_inline_content_get_content", 
                "fclose", 
                "valadoc_api_class_get_dbus_name", 
                "g_spawn_command_line_sync", 
                "valadoc_api_method_get_dbus_name", 
                "g_type_instance_get_private", 
                "valadoc_api_error_domain_get_quark_function_name", 
                "valadoc_content_run_get_style", 
                "valadoc_content_content_visitor_get_type", 
                "valadoc_api_error_domain_get_cname", 
                "g_type_create_instance", 
                "g_type_check_instance_is_a", 
                "g_direct_equal", 
                "valadoc_api_node_accept_children", 
                "valadoc_taglets_throws_get_type", 
                "valadoc_api_class_get_type", 
                "g_free", 
                "valadoc_content_symbol_link_get_symbol", 
                "valadoc_api_method_get_is_constructor", 
                "g_type_check_class_cast", 
                "valadoc_api_symbol_get_is_private", 
                "valadoc_api_method_get_type", 
                "valadoc_api_formal_parameter_get_type", 
                "vala_map_set", 
                "g_strchomp", 
                "valadoc_api_field_get_type", 
                "g_spawn_error_quark", 
                "valadoc_api_interface_get_dbus_name", 
                "valadoc_api_error_code_get_type", 
                "valadoc_api_class_get_set_value_function_cname", 
                "valadoc_api_method_get_is_static", 
                "valadoc_api_formal_parameter_get_is_ref", 
                "valadoc_api_visitor_construct", 
                "valadoc_api_property_get_base_property", 
                "g_str_hash", 
                "vala_collection_get_size", 
                "valadoc_realpath", 
                "valadoc_api_item_get_type", 
                "valadoc_api_tree_search_symbol_str", 
                "valadoc_api_typereference_get_is_owned", 
                "valadoc_error_reporter_simple_warning", 
                "vala_iterator_get", 
                "__cxa_finalize", 
                "valadoc_api_interface_get_type", 
                "valadoc_api_delegate_get_cname", 
                "valadoc_api_class_get_class_type_macro_name", 
                "valadoc_api_property_get_setter", 
                "vala_iterable_iterator", 
                "valadoc_content_link_get_url", 
                "valadoc_api_node_get_documentation", 
                "valadoc_content_text_get_content", 
                "valadoc_api_tree_get_package_list", 
                "g_once_init_enter", 
                "valadoc_api_array_get_type", 
                "valadoc_api_symbol_get_is_deprecated", 
                "g_file_set_contents", 
                "valadoc_api_symbol_get_is_protected", 
                "g_log", 
                "valadoc_api_method_get_is_dbus_visible", 
                "vala_collection_add"
            ], 
            "rpm": "valadoc-0.38.2-1.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/valadoc/doclets/gtkdoc/libdoclet.so"
        }, 
        "usr/lib/valadoc/doclets/html/libdoclet_so": {
            "report-functions": [
                "valadoc_html_basic_doclet_is_internal_node", 
                "valadoc_html_basic_doclet_write_navi_leaf_symbol", 
                "g_type_register_static", 
                "valadoc_html_link_helper_translate_wiki_name", 
                "fclose", 
                "mkdir", 
                "valadoc_wiki_page_get_name", 
                "valadoc_html_html_renderer_new", 
                "valadoc_html_basic_doclet_write_file_footer", 
                "valadoc_html_basic_doclet_write_navi_package", 
                "g_object_unref", 
                "valadoc_api_tree_accept", 
                "valadoc_html_basic_doclet_construct", 
                "_ITM_registerTMCloneTable", 
                "g_free", 
                "valadoc_html_link_helper_set_enable_browsable_check", 
                "valadoc_html_basic_doclet_get_settings", 
                "valadoc_html_basic_doclet_write_wiki_pages", 
                "g_once_init_enter", 
                "valadoc_html_basic_doclet_write_navi_symbol", 
                "valadoc_markup_writer_unref", 
                "g_strcmp0", 
                "valadoc_html_link_helper_get_enable_browsable_check", 
                "valadoc_html_markup_writer_new", 
                "valadoc_html_basic_doclet_get_type", 
                "__gmon_start__", 
                "valadoc_api_node_get_full_name", 
                "g_type_check_class_cast", 
                "__cxa_finalize", 
                "valadoc_html_link_helper_construct", 
                "valadoc_html_html_renderer_set_writer", 
                "g_build_filename", 
                "valadoc_documentation_get_package", 
                "g_strconcat", 
                "valadoc_html_basic_doclet_write_namespace_content", 
                "valadoc_html_basic_doclet_write_file_header", 
                "valadoc_copy_directory", 
                "valadoc_api_node_is_browsable", 
                "valadoc_api_node_accept_all_children", 
                "g_object_ref", 
                "g_strdup", 
                "_ITM_deregisterTMCloneTable", 
                "valadoc_html_basic_doclet_write_package_content", 
                "valadoc_api_node_get_name", 
                "valadoc_html_link_helper_get_type", 
                "valadoc_html_basic_doclet_write_symbol_content", 
                "valadoc_html_basic_doclet_write_navi_packages", 
                "valadoc_html_basic_doclet_write_package_index_content", 
                "g_return_if_fail_warning", 
                "valadoc_api_tree_accept_children", 
                "g_type_class_peek_parent", 
                "fopen", 
                "g_mkdir_with_parents"
            ], 
            "rpm": "valadoc-0.38.2-1.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/valadoc/doclets/html/libdoclet.so"
        }, 
        "usr/lib/libvaladoc-0_38_so_0_0_0": {
            "report-functions": [
                "gvLayout", 
                "vala_list_sort", 
                "g_utf8_offset_to_pointer", 
                "g_string_append_unichar", 
                "vala_map_set", 
                "g_mapped_file_get_length", 
                "memchr", 
                "g_realloc_n", 
                "g_value_set_enum", 
                "vala_value_set_iterable", 
                "g_param_spec_enum", 
                "g_unichar_isdigit", 
                "g_slice_alloc0", 
                "g_string_new", 
                "vala_iterator_next", 
                "g_unichar_isalnum", 
                "g_assertion_message_expr", 
                "g_type_interface_peek", 
                "strtol", 
                "g_enum_register_static", 
                "g_type_class_unref", 
                "gvFreeLayout", 
                "g_type_instance_get_private", 
                "g_queue_pop_head", 
                "g_realloc", 
                "g_path_get_dirname", 
                "g_type_class_peek_parent", 
                "g_module_close", 
                "__stack_chk_fail", 
                "g_type_register_static", 
                "g_key_file_new", 
                "g_type_register_fundamental", 
                "g_utf8_strchr", 
                "agedge", 
                "fgetc", 
                "g_ascii_tolower", 
                "g_queue_is_empty", 
                "g_string_append_len", 
                "g_build_filename", 
                "vala_collection_get_type", 
                "g_utf8_get_char", 
                "g_gtype_get_type", 
                "g_dir_close", 
                "g_value_get_int", 
                "vala_list_insert_all", 
                "g_type_is_a", 
                "g_value_set_int", 
                "g_error_new_literal", 
                "g_malloc0", 
                "g_mapped_file_unref", 
                "g_error_new", 
                "gvContext", 
                "vala_iterator_unref", 
                "g_unlink", 
                "g_param_spec_boolean", 
                "g_strchomp", 
                "vala_list_index_of", 
                "g_ascii_strcasecmp", 
                "vala_iterator_remove", 
                "g_stpcpy", 
                "g_string_erase", 
                "g_error_free", 
                "g_key_file_error_quark", 
                "g_string_prepend", 
                "fopen", 
                "vala_array_list_get_type", 
                "g_object_interface_install_property", 
                "g_file_get_contents", 
                "agsafeset", 
                "g_param_spec_boxed", 
                "g_regex_new", 
                "vala_list_get_type", 
                "g_get_system_data_dirs", 
                "g_object_notify_by_pspec", 
                "g_utf8_prev_char", 
                "g_dir_read_name", 
                "g_type_create_instance", 
                "fwrite", 
                "g_return_if_fail_warning", 
                "g_boxed_type_register_static", 
                "g_value_get_boolean", 
                "g_propagate_error", 
                "g_direct_equal", 
                "g_match_info_unref", 
                "g_unichar_to_utf8", 
                "g_strsplit", 
                "g_mapped_file_get_contents", 
                "g_regex_escape_string", 
                "g_param_spec_internal", 
                "g_str_has_suffix", 
                "g_queue_clear", 
                "feof", 
                "g_param_spec_string", 
                "g_object_ref", 
                "g_direct_hash", 
                "_ITM_deregisterTMCloneTable", 
                "strlen", 
                "vala_collection_clear", 
                "vala_array_list_new", 
                "g_quark_from_string", 
                "vala_list_first", 
                "vala_map_iterator_get_key", 
                "g_type_check_value_holds", 
                "g_value_get_string", 
                "g_string_free", 
                "g_path_is_absolute", 
                "vala_map_iterator_unref", 
                "g_value_get_pointer", 
                "g_value_get_enum", 
                "vala_iterable_iterator", 
                "g_value_set_boolean", 
                "g_malloc", 
                "g_ascii_toupper", 
                "fputc", 
                "g_type_check_instance_cast", 
                "g_strconcat", 
                "g_value_set_boxed", 
                "g_value_set_object", 
                "gvRenderData", 
                "g_key_file_get_keys", 
                "vala_map_contains", 
                "g_type_free_instance", 
                "g_str_equal", 
                "g_value_set_string", 
                "vala_hash_map_new", 
                "g_mapped_file_new", 
                "vala_map_iterator_get_value", 
                "gvLayoutJobs", 
                "g_clear_error", 
                "g_key_file_unref", 
                "g_type_name", 
                "g_type_check_instance_is_a", 
                "g_utf8_get_char_validated", 
                "g_type_class_ref", 
                "vala_collection_to_array", 
                "g_initially_unowned_get_type", 
                "g_string_append_printf", 
                "g_regex_replace", 
                "fputs", 
                "g_utf8_strlen", 
                "g_object_ref_sink", 
                "vala_list_insert", 
                "g_once_init_leave", 
                "g_match_info_fetch", 
                "g_queue_push_tail", 
                "g_dir_open", 
                "g_quark_from_static_string", 
                "g_string_prepend_unichar", 
                "g_strrstr", 
                "g_strdup_vprintf", 
                "g_queue_new", 
                "strstr", 
                "g_signal_handlers_destroy", 
                "agopen", 
                "g_param_spec_pointer", 
                "g_object_new", 
                "g_regex_match", 
                "g_key_file_get_string", 
                "g_ascii_dtostr", 
                "g_str_has_prefix", 
                "gvFreeContext", 
                "vala_map_unref", 
                "vala_list_remove_at", 
                "vala_collection_add_all", 
                "g_path_get_basename", 
                "vala_map_iterator_next", 
                "_ITM_registerTMCloneTable", 
                "fclose", 
                "g_utf8_strrchr", 
                "g_strdup_printf", 
                "vala_map_get_values", 
                "g_key_file_get_boolean", 
                "g_type_interface_add_prerequisite", 
                "g_quark_to_string", 
                "g_file_error_quark", 
                "g_utf8_strdown", 
                "g_module_open", 
                "g_strchug", 
                "g_type_add_interface_static", 
                "g_error_copy", 
                "gvRender", 
                "mkdir", 
                "gvRenderFilename", 
                "vala_map_clear", 
                "g_type_class_add_private", 
                "vala_collection_remove", 
                "g_param_spec_int", 
                "__fprintf_chk", 
                "g_unichar_isalpha", 
                "g_type_interface_peek_parent", 
                "g_file_test", 
                "vala_hash_set_new", 
                "g_uri_parse_scheme", 
                "g_value_get_object", 
                "vala_map_get_keys", 
                "vala_map_map_iterator", 
                "g_path_skip_root", 
                "g_module_symbol", 
                "g_value_set_pointer", 
                "g_regex_unref", 
                "agclose", 
                "g_str_hash", 
                "g_regex_error_quark", 
                "g_type_fundamental_next", 
                "g_string_insert_c", 
                "vala_iterable_unref", 
                "g_log", 
                "vala_map_get", 
                "vala_iterator_get", 
                "vala_list_last", 
                "g_key_file_get_groups", 
                "vala_list_get", 
                "g_string_append", 
                "g_module_build_path", 
                "g_strcmp0", 
                "vala_collection_get_size", 
                "g_value_type_compatible", 
                "vala_list_set", 
                "g_strnfill", 
                "vala_iterable_ref", 
                "g_build_path", 
                "fileno", 
                "g_type_check_class_cast", 
                "g_malloc0_n", 
                "g_key_file_load_from_file", 
                "g_object_class_install_property", 
                "g_free", 
                "__cxa_finalize", 
                "vala_collection_add", 
                "g_slice_free1", 
                "g_regex_replace_literal", 
                "agnode", 
                "g_strndup", 
                "g_ascii_strtod", 
                "vala_collection_get_is_empty", 
                "g_object_unref", 
                "g_strdup", 
                "vala_param_spec_iterable", 
                "g_enum_get_value", 
                "vala_map_ref", 
                "vala_collection_contains", 
                "g_param_spec_object", 
                "g_queue_free_full", 
                "__gmon_start__"
            ], 
            "rpm": "valadoc-0.38.2-1.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libvaladoc-0.38.so.0.0.0"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " valadoc", 
            "License": " LGPLv2+ and BSD", 
            "URL": " https://wiki.gnome.org/Projects/Vala", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-22.phx2.fedoraproject.org", 
            "Description": "\nValadoc is a documentation generator for generating API documentation from Vala\nsource code.\n", 
            "Build Date": " Sun 08 Oct 2017 06:45:02 PM EDT", 
            "Source RPM": " vala-0.38.2-1.fc27.src.rpm", 
            "Version": " 0.38.2", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Sun 08 Oct 2017 06:53:49 PM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 1.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Vala documentation generator", 
            "Size": " 2532869"
        }
    }
}