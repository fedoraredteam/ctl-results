{
    "results": {
        "complexity": {
            "r2aa": {
                "afCc": null, 
                "afC": null
            }
        }, 
        "usr/bin/nccopy": {
            "report-functions": [
                "nc_def_vlen", 
                "nc_inq_grpname_full", 
                "nc_put_vara", 
                "nc_inq_nvars", 
                "nc_inq_dimid", 
                "strdup", 
                "__stack_chk_fail", 
                "nc_inq_varname", 
                "_ITM_registerTMCloneTable", 
                "nc_def_dim", 
                "nc_open", 
                "nc_inq_format", 
                "nc_inq_grp_parent", 
                "nc_inq_ndims", 
                "nc_free_string", 
                "nc_inq_unlimdims", 
                "nc_inq_dimlen", 
                "nc_inq_varid", 
                "nc_get_vara", 
                "strncpy", 
                "__errno_location", 
                "nc_inq_vardimid", 
                "nc_def_var_endian", 
                "fputc", 
                "nc_inq_opaque", 
                "nc_set_fill", 
                "strlen", 
                "strcmp", 
                "__libc_start_main", 
                "nc_inq_grp_full_ncid", 
                "__snprintf_chk", 
                "nc_inq_vlen", 
                "nc_def_var", 
                "malloc", 
                "strcpy", 
                "nc_inq_enum", 
                "nc_inq_dimids", 
                "nc_inq_varnatts", 
                "nc_inq_varndims", 
                "nc_create", 
                "__vfprintf_chk", 
                "nc_inq_grps", 
                "nc_inq_var_fletcher32", 
                "nc_inq_compound_field", 
                "nc_insert_compound", 
                "__ctype_b_loc", 
                "strtok", 
                "nc_inq_type", 
                "strtod", 
                "nc_inq_vartype", 
                "nc_inq_grpname", 
                "nc_insert_array_compound", 
                "fflush", 
                "__assert_fail", 
                "nc_inq_dim", 
                "nc_inq_var_deflate", 
                "nc_inq_enum_member", 
                "nc_inq_grp_ncid", 
                "nc_copy_att", 
                "nc_inq_unlimdim", 
                "nc_enddef", 
                "nc_def_grp", 
                "nc_def_opaque", 
                "_ITM_deregisterTMCloneTable", 
                "strrchr", 
                "nc_insert_enum", 
                "nc_inq_typeid", 
                "__cxa_finalize", 
                "nc_strerror", 
                "strtol", 
                "fputs", 
                "nc_def_enum", 
                "nc_free_vlens", 
                "nc_def_var_deflate", 
                "nc_inq_var_chunking", 
                "nc_def_compound", 
                "free", 
                "nc_inq_libvers", 
                "__fprintf_chk", 
                "exit", 
                "nc_inq_var", 
                "nc_close", 
                "nc_inq_user_type", 
                "nc_set_var_chunk_cache", 
                "getopt", 
                "nc_inq_typeids", 
                "nc_def_var_fletcher32", 
                "nc_inq", 
                "__gmon_start__", 
                "nc_inq_compound", 
                "nc_inq_var_endian", 
                "nc_def_var_chunking"
            ], 
            "rpm": "netcdf-4.4.1.1-6.fc27.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/nccopy"
        }, 
        "usr/bin/ncgen": {
            "report-functions": [
                "strchr", 
                "ferror", 
                "strrchr", 
                "nc_def_var", 
                "nc_put_att_uchar", 
                "fflush", 
                "nc_enddef", 
                "__assert_fail", 
                "strdup", 
                "nc_def_var_chunking", 
                "strcat", 
                "nc_put_att_ulonglong", 
                "strcasecmp", 
                "strncat", 
                "free", 
                "nc_inq_libvers", 
                "__ctype_b_loc", 
                "__stack_chk_fail", 
                "stpcpy", 
                "nc_put_att_text", 
                "__cxa_finalize", 
                "malloc", 
                "strtoull", 
                "rewind", 
                "nc_insert_array_compound", 
                "nc_put_var1", 
                "nc_def_dim", 
                "fputs", 
                "fputc", 
                "calloc", 
                "H5Eprint1", 
                "nc_insert_enum", 
                "strncmp", 
                "nc_put_vara", 
                "nc_put_att_longlong", 
                "__vfprintf_chk", 
                "nc_put_att_uint", 
                "Cdh2e", 
                "nc_strerror", 
                "__errno_location", 
                "nc_def_var_deflate", 
                "fwrite", 
                "strtol", 
                "fileno", 
                "__snprintf_chk", 
                "nc_def_enum", 
                "nc_create", 
                "nc_put_att_double", 
                "abort", 
                "__libc_start_main", 
                "nc_put_att_int", 
                "nc_put_att_ushort", 
                "getopt", 
                "nc_put_att_float", 
                "nc_def_grp", 
                "nc_def_compound", 
                "nc_insert_compound", 
                "clearerr", 
                "__memset_chk", 
                "fopen64", 
                "strcpy", 
                "__strncat_chk", 
                "fread", 
                "nc_def_var_fill", 
                "strlen", 
                "nc_put_att_schar", 
                "memmove", 
                "isatty", 
                "__ctype_tolower_loc", 
                "_IO_getc", 
                "nc_put_att_short", 
                "perror", 
                "nc_def_vlen", 
                "nc_def_var_fletcher32", 
                "_ITM_deregisterTMCloneTable", 
                "__sprintf_chk", 
                "nc_close", 
                "cdChar2Comp", 
                "nc_put_att_string", 
                "__vsnprintf_chk", 
                "nc_def_opaque", 
                "_ITM_registerTMCloneTable", 
                "nc_put_att", 
                "__strcat_chk", 
                "__gmon_start__", 
                "nc_def_var_endian", 
                "exit", 
                "strcmp", 
                "nc_set_fill", 
                "__isoc99_sscanf", 
                "__fprintf_chk"
            ], 
            "rpm": "netcdf-4.4.1.1-6.fc27.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/ncgen"
        }, 
        "usr/bin/ncdump": {
            "report-functions": [
                "__libc_start_main", 
                "nc_inq_var_chunking", 
                "nc_inq", 
                "nc_inq_dim", 
                "puts", 
                "nc_inq_var_fill", 
                "nc_inq_var_fletcher32", 
                "open64", 
                "nc_inq_user_type", 
                "nc_inq_unlimdims", 
                "strcmp", 
                "nc_inq_format", 
                "cdRel2Iso", 
                "strrchr", 
                "__isoc99_sscanf", 
                "nc_get_att_text", 
                "__stack_chk_fail", 
                "nc_inq_var_deflate", 
                "__ctype_b_loc", 
                "__fprintf_chk", 
                "nc_free_string", 
                "nc_inq_grp_parent", 
                "nc_inq_att", 
                "nc_inq_varid", 
                "nc_get_vara", 
                "strtol", 
                "nc_inq_enum_ident", 
                "nc_inq_attname", 
                "strncat", 
                "nc_inq_format_extended", 
                "nc_get_att", 
                "fputc", 
                "putchar", 
                "nc_inq_type", 
                "nc_inq_var", 
                "free", 
                "nc_inq_varname", 
                "nc_inq_typeids", 
                "__errno_location", 
                "__printf_chk", 
                "nc_get_att_double", 
                "nc_inq_grpname_full", 
                "fwrite", 
                "nc_inq_grp_ncid", 
                "read", 
                "strdup", 
                "__vfprintf_chk", 
                "__snprintf_chk", 
                "nc_close", 
                "nc_inq_grpname", 
                "strncpy", 
                "nc_inq_vardimid", 
                "nc_open_mem", 
                "nc_open", 
                "close", 
                "nc_inq_enum_member", 
                "nc_inq_var_endian", 
                "setlocale", 
                "lseek64", 
                "nc_inq_grps", 
                "_ITM_registerTMCloneTable", 
                "nc_inq_vartype", 
                "nc_inq_dimlen", 
                "nc__testurl", 
                "nc_inq_libvers", 
                "__cxa_finalize", 
                "nc_inq_dimid", 
                "nc_strerror", 
                "nc_inq_grp_full_ncid", 
                "fputs", 
                "nc_inq_varndims", 
                "getopt", 
                "__gmon_start__", 
                "nc_inq_compound_field", 
                "_ITM_deregisterTMCloneTable", 
                "nc_get_att_int", 
                "nc_inq_ndims", 
                "fflush", 
                "__sprintf_chk", 
                "strlen", 
                "exit", 
                "strtok", 
                "__ctype_tolower_loc", 
                "__assert_fail", 
                "strncmp", 
                "nc_inq_dimids", 
                "nc_inq_dimname"
            ], 
            "rpm": "netcdf-4.4.1.1-6.fc27.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/ncdump"
        }, 
        "usr/bin/ncgen3": {
            "report-functions": [
                "calloc", 
                "getopt", 
                "nc_create", 
                "_IO_getc", 
                "strcpy", 
                "nc_put_vara_schar", 
                "nc_put_att_schar", 
                "__errno_location", 
                "nc_set_fill", 
                "fwrite", 
                "strcat", 
                "nc_put_vara_text", 
                "nc_put_vara_float", 
                "strrchr", 
                "nc_put_vara_short", 
                "__gmon_start__", 
                "nc_put_att_text", 
                "strtol", 
                "fopen64", 
                "nc_put_att_float", 
                "isatty", 
                "exit", 
                "__fprintf_chk", 
                "__stpcpy_chk", 
                "nc_close", 
                "nc_def_dim", 
                "malloc", 
                "nc_put_vara_int", 
                "fread", 
                "fflush", 
                "__cxa_finalize", 
                "fputs", 
                "_ITM_registerTMCloneTable", 
                "nc_put_att_double", 
                "fileno", 
                "__snprintf_chk", 
                "nc_put_att_int", 
                "clearerr", 
                "strcmp", 
                "nc_put_vara_double", 
                "nc_strerror", 
                "nc_def_var", 
                "nc_inq_libvers", 
                "strtod", 
                "strncat", 
                "nc_enddef", 
                "strncpy", 
                "__libc_start_main", 
                "__isoc99_sscanf", 
                "perror", 
                "ferror", 
                "strchr", 
                "strlen", 
                "__stack_chk_fail", 
                "nc_put_att_short", 
                "fputc", 
                "_ITM_deregisterTMCloneTable", 
                "__strcat_chk", 
                "realloc", 
                "__sprintf_chk", 
                "__ctype_b_loc", 
                "__vfprintf_chk"
            ], 
            "rpm": "netcdf-4.4.1.1-6.fc27.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/ncgen3"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Applications/Engineering", 
            "Name": " netcdf", 
            "License": " NetCDF", 
            "URL": " http://www.unidata.ucar.edu/software/netcdf/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-19.phx2.fedoraproject.org", 
            "Description": "\nNetCDF (network Common Data Form) is an interface for array-oriented\ndata access and a freely-distributed collection of software libraries\nfor C, Fortran, C++, and perl that provides an implementation of the\ninterface.  The NetCDF library also defines a machine-independent\nformat for representing scientific data.  Together, the interface,\nlibrary, and format support the creation, access, and sharing of\nscientific data. The NetCDF software was developed at the Unidata\nProgram Center in Boulder, Colorado.\n\nNetCDF data is:\n\n   o Self-Describing: A NetCDF file includes information about the\n     data it contains.\n\n   o Network-transparent:  A NetCDF file is represented in a form that\n     can be accessed by computers with different ways of storing\n     integers, characters, and floating-point numbers.\n\n   o Direct-access:  A small subset of a large dataset may be accessed\n     efficiently, without first reading through all the preceding\n     data.\n\n   o Appendable:  Data can be appended to a NetCDF dataset along one\n     dimension without copying the dataset or redefining its\n     structure. The structure of a NetCDF dataset can be changed,\n     though this sometimes causes the dataset to be copied.\n\n   o Sharable:  One writer and multiple readers may simultaneously\n     access the same NetCDF file.\n", 
            "Build Date": " Fri 04 Aug 2017 12:10:24 AM EDT", 
            "Source RPM": " netcdf-4.4.1.1-6.fc27.src.rpm", 
            "Version": " 4.4.1.1", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Fri 04 Aug 2017 09:51:07 PM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 6.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Libraries for the Unidata network Common Data Form", 
            "Size": " 2390231"
        }
    }
}