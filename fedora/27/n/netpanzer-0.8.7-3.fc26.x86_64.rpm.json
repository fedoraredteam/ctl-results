{
    "results": {
        "usr/bin/netpanzer": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/netpanzer", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "_ZNSt11range_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", 
                "strtol", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsputnEPKcl", 
                "_ZNSt11range_errorD2Ev", 
                "Mix_PlayingMusic", 
                "lua_createtable", 
                "_ZdlPv", 
                "lua_pcall", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEcm", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE7seekoffElSt12_Ios_SeekdirSt13_Ios_Openmode", 
                "dl_iterate_phdr", 
                "__cxa_free_exception", 
                "SDL_SetVideoMode", 
                "SDL_WaitThread", 
                "toupper", 
                "_ZNSi10_M_extractItEERSiRT_", 
                "SDL_CreateMutex", 
                "_Znwm", 
                "_ZNSt13runtime_errorC1EPKc", 
                "_ZNSirsERi", 
                "atan", 
                "PHYSFS_readSBE64", 
                "strerror", 
                "_ZSt17__throw_bad_allocv", 
                "memset", 
                "memmove", 
                "PHYSFS_readSLE64", 
                "PHYSFS_writeUBE16", 
                "Mix_OpenAudio", 
                "pthread_once", 
                "PHYSFS_setWriteDir", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE8overflowEi", 
                "PHYSFS_writeSLE32", 
                "signal", 
                "PHYSFS_readSBE16", 
                "luaL_openlibs", 
                "_ZNSt6localeD1Ev", 
                "_ZNSt9exceptionD2Ev", 
                "PHYSFS_readSLE32", 
                "localtime", 
                "SDL_SemWait", 
                "__gmon_start__", 
                "SDL_VideoModeOK", 
                "SDL_GetTicks", 
                "_ZNSi10_M_extractImEERSiRT_", 
                "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base", 
                "Mix_HookMusicFinished", 
                "SDL_WarpMouse", 
                "__cxa_throw", 
                "PHYSFS_getWriteDir", 
                "SDL_DestroySemaphore", 
                "fcntl", 
                "_ZdaPvm", 
                "SDL_KillThread", 
                "raise", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcmm", 
                "SDL_Delay", 
                "__cxa_throw_bad_array_new_length", 
                "listen", 
                "fputs", 
                "_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", 
                "lua_gettable", 
                "Mix_CloseAudio", 
                "_ZNKSt5ctypeIcE13_M_widen_initEv", 
                "Mix_PlayChannelTimed", 
                "lua_settable", 
                "PHYSFS_flush", 
                "_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "sendto", 
                "__assert_fail", 
                "PHYSFS_writeULE32", 
                "shutdown", 
                "sqrt", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcmm", 
                "PHYSFS_readUBE32", 
                "srand", 
                "_ZSt24__throw_out_of_range_fmtPKcz", 
                "lua_touserdata", 
                "_ZNSo5flushEv", 
                "PHYSFS_setBuffer", 
                "SDL_SaveBMP_RW", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_", 
                "SDL_GetVideoInfo", 
                "PHYSFS_addToSearchPath", 
                "lua_remove", 
                "strcpy", 
                "PHYSFS_getRealDir", 
                "Mix_HaltMusic", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "pthread_mutex_unlock", 
                "lua_getfield", 
                "sprintf", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev", 
                "recv", 
                "PHYSFS_deinit", 
                "SDL_SemPost", 
                "lua_call", 
                "__libc_start_main", 
                "lua_pushlstring", 
                "PHYSFS_freeList", 
                "lua_setfield", 
                "PHYSFS_writeULE64", 
                "lua_topointer", 
                "lua_tolstring", 
                "lua_pushinteger", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE4syncEv", 
                "getpid", 
                "__cxa_guard_release", 
                "PHYSFS_readULE64", 
                "SDL_GetError", 
                "_ZNSt13runtime_errorD1Ev", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE5imbueERKSt6locale", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4copyEPcmm", 
                "PHYSFS_readULE16", 
                "lua_settop", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "SDL_Init", 
                "SDL_CreateSemaphore", 
                "lua_pushvalue", 
                "SDL_ListModes", 
                "SDL_DestroyMutex", 
                "SDL_ShowCursor", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsgetnEPcl", 
                "__cxa_end_catch", 
                "__cxa_rethrow", 
                "malloc", 
                "_ZNSt8ios_baseC2Ev", 
                "memcpy", 
                "abort", 
                "strftime", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE9showmanycEv", 
                "isspace", 
                "lua_type", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate", 
                "rand", 
                "lua_rawseti", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "_ZSt9terminatev", 
                "accept", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEmm", 
                "luaL_checkinteger", 
                "_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE", 
                "__pthread_key_create", 
                "PHYSFS_getDirSeparator", 
                "SDL_FreeSurface", 
                "lua_rawget", 
                "__cxa_call_unexpected", 
                "PHYSFS_writeSLE64", 
                "close", 
                "SDL_QuitSubSystem", 
                "strlen", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm", 
                "SDL_Quit", 
                "lua_rawset", 
                "PHYSFS_isSymbolicLink", 
                "PHYSFS_tell", 
                "realloc", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE5uflowEv", 
                "SDL_InitSubSystem", 
                "__cxa_guard_acquire", 
                "_ZNSo3putEc", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE6setbufEPcl", 
                "SDL_strlcpy", 
                "PHYSFS_write", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l", 
                "luaL_newmetatable", 
                "PHYSFS_delete", 
                "strcmp", 
                "luaL_loadbuffer", 
                "strchr", 
                "unlink", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEmmRKS4_", 
                "PHYSFS_writeSBE16", 
                "PHYSFS_getUserDir", 
                "_Znam", 
                "socket", 
                "PHYSFS_writeSLE16", 
                "_ZNSi3getERc", 
                "__dynamic_cast", 
                "Mix_FreeChunk", 
                "_ZNSo9_M_insertImEERSoT_", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "PHYSFS_writeSBE64", 
                "atan2", 
                "SDL_RWFromFile", 
                "_ZNKSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE3strEv", 
                "time", 
                "SDL_SetColors", 
                "__cxa_get_exception_ptr", 
                "_ZNSt8ios_baseD2Ev", 
                "vsnprintf", 
                "connect", 
                "Mix_LoadMUS_RW", 
                "_ZNKSt13runtime_error4whatEv", 
                "lua_replace", 
                "select", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE7seekposESt4fposI11__mbstate_tESt13_Ios_Openmode", 
                "strcasecmp", 
                "_ZNSt12__basic_fileIcED1Ev", 
                "strtod", 
                "_ZNSt13runtime_errorC1ERKS_", 
                "lua_tonumber", 
                "PHYSFS_getLastModTime", 
                "SDL_UnlockSurface", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm", 
                "Mix_PlayMusic", 
                "strncpy", 
                "PHYSFS_exists", 
                "lua_pushboolean", 
                "luaL_register", 
                "_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc", 
                "_ZdaPv", 
                "_ZNSt8__detail15_List_node_base9_M_unhookEv", 
                "SDL_WM_SetCaption", 
                "__errno_location", 
                "__cxa_begin_catch", 
                "free", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm", 
                "lua_setmetatable", 
                "__cxa_allocate_exception", 
                "PHYSFS_removeFromSearchPath", 
                "_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1ESt13_Ios_Openmode", 
                "_ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base", 
                "sqrtf", 
                "_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE7_M_syncEPcmm", 
                "PHYSFS_writeULE16", 
                "PHYSFS_isDirectory", 
                "lua_isnumber", 
                "_ZNSolsEi", 
                "__cxa_atexit", 
                "stpcpy", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv", 
                "PHYSFS_read", 
                "PHYSFS_readSBE32", 
                "luaL_newstate", 
                "Mix_HaltChannel", 
                "fgets", 
                "SDL_GetMouseState", 
                "_ZdlPvm", 
                "printf", 
                "__ctype_b_loc", 
                "_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev", 
                "PHYSFS_eof", 
                "PHYSFS_fileLength", 
                "PHYSFS_getLastError", 
                "__gxx_personality_v0", 
                "lua_pushnil", 
                "_ZNSo9_M_insertIlEERSoT_", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE9pbackfailEi", 
                "Mix_AllocateChannels", 
                "fprintf", 
                "strdup", 
                "PHYSFS_readULE32", 
                "sincosf", 
                "getaddrinfo", 
                "PHYSFS_enumerateFiles", 
                "PHYSFS_readSLE16", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE9underflowEv", 
                "Mix_VolumeChunk", 
                "PHYSFS_readUBE16", 
                "lua_toboolean", 
                "SDL_UpperBlit", 
                "_ZSt16__throw_bad_castv", 
                "pthread_mutex_lock", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm", 
                "__cxa_pure_virtual", 
                "SDL_CreateThread", 
                "exit", 
                "Mix_LoadWAV_RW", 
                "setsockopt", 
                "PHYSFS_seek", 
                "recvfrom", 
                "PHYSFS_writeSBE32", 
                "lua_pushcclosure", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEmmPKc", 
                "PHYSFS_openRead", 
                "Mix_VolumeMusic", 
                "_ZNSi10_M_extractIlEERSiRT_", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEED1Ev", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm", 
                "_ZSt20__throw_length_errorPKc", 
                "send", 
                "lua_pushnumber", 
                "calloc", 
                "snprintf", 
                "PHYSFS_init", 
                "_ZNSo5writeEPKcl", 
                "PHYSFS_getBaseDir", 
                "freeaddrinfo", 
                "_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_", 
                "atan2f", 
                "lua_gettop", 
                "luaL_loadfile", 
                "_ZNSolsEs", 
                "SDL_EnableUNICODE", 
                "lua_close", 
                "bind", 
                "PHYSFS_close", 
                "_ZNSt6localeC1Ev", 
                "SDL_PollEvent", 
                "lua_insert", 
                "_ZNSt8ios_base4InitD1Ev", 
                "SDL_mutexV", 
                "_ZSt19__throw_logic_errorPKc", 
                "Mix_FadeOutMusic", 
                "PHYSFS_writeUBE32", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_", 
                "SDL_LockSurface", 
                "strrchr", 
                "_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_", 
                "lua_getmetatable", 
                "Mix_FreeMusic", 
                "lua_getinfo", 
                "lua_isstring", 
                "PHYSFS_openWrite", 
                "lua_pushlightuserdata", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcmm", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEEC1Ev", 
                "PHYSFS_openAppend", 
                "lua_setfenv", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcmm", 
                "PHYSFS_readUBE64", 
                "inet_ntoa", 
                "lua_pushstring", 
                "PHYSFS_mkdir", 
                "PHYSFS_writeUBE64", 
                "SDL_mutexP", 
                "lua_getstack"
            ], 
            "rpm": "netpanzer-0.8.7-3.fc26.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Amusements/Games", 
            "Name": " netpanzer", 
            "License": " GPLv2+", 
            "URL": " http://www.netpanzer.info", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildhw-04.phx2.fedoraproject.org", 
            "Description": "\nnetPanzer is an online multiplayer tactical warfare game designed for FAST\nACTION combat. Gameplay concentrates on the core -- no resource management is\nneeded. The game is based on quick tactical action and unit management in\nreal-time. Battles progress quickly and constantly as destroyed players respawn\nwith a set of new units. Players can join or leave multiplayer games at any\ntime.\n", 
            "Build Date": " Sat 11 Feb 2017 02:52:00 AM EST", 
            "Source RPM": " netpanzer-0.8.7-3.fc26.src.rpm", 
            "Version": " 0.8.7", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Mon 27 Feb 2017 05:12:30 AM EST, Key ID f55e7430f5282ee4", 
            "Release": " 3.fc26", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " An Online Multiplayer Tactical Warfare Game", 
            "Size": " 31090599"
        }
    }
}