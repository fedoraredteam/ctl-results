{
    "results": {
        "usr/lib/libjack_so_0_1_0": {
            "report-functions": [
                "bind", 
                "__assert_fail", 
                "snprintf", 
                "free", 
                "_ITM_deregisterTMCloneTable", 
                "shm_open", 
                "strcat", 
                "pthread_join", 
                "__cxa_rethrow", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "pthread_exit", 
                "pthread_cond_timedwait", 
                "pthread_key_delete", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "_ZNSolsEj", 
                "read", 
                "__gxx_personality_v0", 
                "close", 
                "_ZNSolsEl", 
                "__gmon_start__", 
                "gettimeofday", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv", 
                "getenv", 
                "fcntl", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_", 
                "_ZNSolsEm", 
                "mmap", 
                "mkdir", 
                "_ZNSt13runtime_errorC2EPKc", 
                "readdir", 
                "_ZSt20__throw_length_errorPKc", 
                "getuid", 
                "fopen", 
                "pthread_cond_init", 
                "_ZdlPv", 
                "__cxa_finalize", 
                "fflush", 
                "rmdir", 
                "pthread_key_create", 
                "_ZNSolsEy", 
                "pthread_setcanceltype", 
                "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base", 
                "pthread_setspecific", 
                "__cxa_end_catch", 
                "pthread_getspecific", 
                "semget", 
                "connect", 
                "pthread_attr_setinheritsched", 
                "sigprocmask", 
                "_ZNSaIcEC1Ev", 
                "_ZNSt8ios_base4InitD1Ev", 
                "strdup", 
                "atoi", 
                "sigaddset", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv", 
                "kill", 
                "opendir", 
                "dlerror", 
                "pthread_cancel", 
                "pthread_equal", 
                "memmove", 
                "mlock", 
                "munlockall", 
                "_ZNSt9bad_allocD1Ev", 
                "sem_getvalue", 
                "vsnprintf", 
                "fscanf", 
                "pthread_mutexattr_destroy", 
                "fputc", 
                "sem_close", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_", 
                "abort", 
                "time", 
                "sigemptyset", 
                "_ZNKSt13runtime_error4whatEv", 
                "malloc", 
                "regcomp", 
                "_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev", 
                "closedir", 
                "strcmp", 
                "fchmod", 
                "open", 
                "_ZNSt13runtime_errorD2Ev", 
                "_ZNSolsEPFRSoS_E", 
                "__errno_location", 
                "__cxa_throw", 
                "usleep", 
                "pthread_cond_wait", 
                "shm_unlink", 
                "_exit", 
                "pthread_cond_destroy", 
                "clock_gettime", 
                "_ZStlsIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_St5_Setw", 
                "pthread_attr_setschedparam", 
                "fork", 
                "_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_", 
                "popen", 
                "_ZNSt14basic_ofstreamIcSt11char_traitsIcEE7is_openEv", 
                "pthread_setschedparam", 
                "_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1EPKcSt13_Ios_Openmode", 
                "sem_unlink", 
                "strncmp", 
                "strftime", 
                "pthread_mutex_lock", 
                "strcspn", 
                "socket", 
                "sem_timedwait", 
                "getpid", 
                "pthread_attr_setdetachstate", 
                "_ZdlPvj", 
                "pthread_create", 
                "__cxa_pure_virtual", 
                "_Unwind_Resume", 
                "memset", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_", 
                "_ZNSaIcED1Ev", 
                "__udivdi3", 
                "strncpy", 
                "setsockopt", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev", 
                "__cxa_allocate_exception", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc", 
                "floorf", 
                "pthread_mutexattr_settype", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv", 
                "execv", 
                "munlock", 
                "waitpid", 
                "__cxa_free_exception", 
                "listen", 
                "pthread_attr_init", 
                "_ZNSolsEi", 
                "_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc", 
                "strlen", 
                "fclose", 
                "pclose", 
                "mlockall", 
                "strerror", 
                "semop", 
                "sched_get_priority_max", 
                "__cxa_atexit", 
                "pthread_attr_destroy", 
                "pthread_self", 
                "rint", 
                "write", 
                "munmap", 
                "pthread_cond_broadcast", 
                "_ZSt17__throw_bad_allocv", 
                "localtime", 
                "pthread_attr_setstacksize", 
                "__stack_chk_fail", 
                "_Znwj", 
                "pthread_attr_setschedpolicy", 
                "_ZNSt8__detail15_List_node_base9_M_unhookEv", 
                "__cxa_begin_catch", 
                "_ITM_registerTMCloneTable", 
                "regfree", 
                "accept", 
                "pthread_mutexattr_init", 
                "memcpy", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjRKS4_", 
                "pthread_mutex_trylock", 
                "fgets", 
                "sem_wait", 
                "pthread_mutex_init", 
                "regexec", 
                "ftruncate", 
                "fprintf", 
                "pthread_mutex_unlock", 
                "pthread_attr_setscope", 
                "pthread_mutex_destroy", 
                "sem_open", 
                "strcpy", 
                "pthread_cond_signal", 
                "sem_post", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "strchr", 
                "sleep", 
                "unlink"
            ], 
            "rpm": "jack-audio-connection-kit-1.9.10-10.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/libjack.so.0.1.0"
        }, 
        "usr/lib/libjackserver_so_0_1_0": {
            "report-functions": [
                "_ZNSt14basic_ofstreamIcSt11char_traitsIcEE7is_openEv", 
                "munlock", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev", 
                "pthread_attr_setschedparam", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_", 
                "sem_unlink", 
                "malloc", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEcj", 
                "dlsym", 
                "pthread_setcanceltype", 
                "atol", 
                "__cxa_throw", 
                "pthread_attr_destroy", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_", 
                "sched_get_priority_max", 
                "getenv", 
                "pthread_cond_destroy", 
                "pthread_cond_timedwait", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findERKS4_j", 
                "realloc", 
                "fputc", 
                "pthread_key_create", 
                "strlen", 
                "pthread_key_delete", 
                "connect", 
                "logf", 
                "htonl", 
                "strdup", 
                "mmap", 
                "gettimeofday", 
                "rmdir", 
                "__udivdi3", 
                "send", 
                "vsnprintf", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_", 
                "rint", 
                "atoi", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEj", 
                "_ZdaPv", 
                "regexec", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjRKS4_", 
                "pthread_attr_setinheritsched", 
                "gethostname", 
                "_ZNSt9bad_allocD1Ev", 
                "pthread_attr_init", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEjj", 
                "close", 
                "strftime", 
                "fgets", 
                "_ZdlPv", 
                "_ZNSolsEl", 
                "pthread_cond_broadcast", 
                "semop", 
                "strcasecmp", 
                "__gmon_start__", 
                "pthread_cancel", 
                "pthread_attr_setdetachstate", 
                "__cxa_free_exception", 
                "pthread_setspecific", 
                "pthread_mutex_init", 
                "pthread_cond_init", 
                "shm_unlink", 
                "strrchr", 
                "tolower", 
                "pthread_exit", 
                "regcomp", 
                "_ZNSolsEPFRSoS_E", 
                "sem_timedwait", 
                "pthread_cond_wait", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "regfree", 
                "semget", 
                "fclose", 
                "time", 
                "fchmod", 
                "poll", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEcj", 
                "htons", 
                "__cxa_throw_bad_array_new_length", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE2atEj", 
                "fwrite", 
                "__cxa_atexit", 
                "__cxa_pure_virtual", 
                "_ZNSt13runtime_errorC2EPKc", 
                "inet_ntoa", 
                "fprintf", 
                "calloc", 
                "strcmp", 
                "fflush", 
                "sigfillset", 
                "opus_custom_mode_destroy", 
                "recvfrom", 
                "_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_", 
                "strstr", 
                "_Znwj", 
                "strchr", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_", 
                "_ZStlsIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_St5_Setw", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc", 
                "opus_custom_decode_float", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEcj", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv", 
                "uname", 
                "pthread_mutex_destroy", 
                "sigismember", 
                "mlockall", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_", 
                "strncmp", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc", 
                "pthread_sigmask", 
                "shutdown", 
                "sigwait", 
                "fscanf", 
                "gethostbyname", 
                "pthread_join", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "pclose", 
                "_ZNSt8ios_base4InitD1Ev", 
                "__dynamic_cast", 
                "opus_custom_decoder_create", 
                "memcpy", 
                "recv", 
                "munlockall", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc", 
                "free", 
                "sem_wait", 
                "__cxa_begin_catch", 
                "sched_get_priority_min", 
                "pthread_attr_setstacksize", 
                "memmove", 
                "_ZNSolsEi", 
                "ntohl", 
                "pthread_mutex_trylock", 
                "pthread_equal", 
                "pthread_setschedparam", 
                "_Znaj", 
                "sprintf", 
                "_ZSt20__throw_length_errorPKc", 
                "strncpy", 
                "pthread_mutex_lock", 
                "pthread_attr_setscope", 
                "usleep", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_", 
                "__cxa_finalize", 
                "floorf", 
                "_ZNSolsEj", 
                "pthread_mutexattr_init", 
                "shm_open", 
                "_ZNKSt13runtime_error4whatEv", 
                "_ZNSt13runtime_errorD2Ev", 
                "_Unwind_Resume", 
                "pthread_cond_signal", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev", 
                "opus_custom_mode_create", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_", 
                "listen", 
                "_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev", 
                "__cxa_rethrow", 
                "sigaction", 
                "_ZNSt9exceptionD1Ev", 
                "getsockopt", 
                "mkdir", 
                "abort", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv", 
                "mlock", 
                "unlink", 
                "memcmp", 
                "pthread_mutex_unlock", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "strcpy", 
                "pthread_mutexattr_destroy", 
                "fcntl", 
                "readdir", 
                "getopt_long", 
                "pthread_attr_setschedpolicy", 
                "_ZNSt8ios_base4InitC1Ev", 
                "ntohs", 
                "clock_gettime", 
                "inet_aton", 
                "strtoul", 
                "__gxx_personality_v0", 
                "__cxa_get_exception_ptr", 
                "dlerror", 
                "_ZdlPvj", 
                "sigaddset", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcj", 
                "__stack_chk_fail", 
                "sigprocmask", 
                "__errno_location", 
                "opus_custom_encoder_create", 
                "_ITM_registerTMCloneTable", 
                "__cxa_end_catch", 
                "_ZNSaIcED1Ev", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "_ITM_deregisterTMCloneTable", 
                "socket", 
                "_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc", 
                "memset", 
                "_ZNSaIcEC1Ev", 
                "opus_custom_encoder_ctl", 
                "getuid", 
                "_ZNSolsEm", 
                "_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1EPKcSt13_Ios_Openmode", 
                "dlclose", 
                "sem_post", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv", 
                "dlopen", 
                "closedir", 
                "pthread_getspecific", 
                "sem_open", 
                "_ZNSolsEy", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv", 
                "accept", 
                "setsockopt", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcj", 
                "write", 
                "setsid", 
                "munmap", 
                "opus_custom_encoder_destroy", 
                "_ZNSt8__detail15_List_node_base9_M_unhookEv", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv", 
                "pthread_mutexattr_settype", 
                "pthread_create", 
                "read", 
                "pthread_self", 
                "sem_getvalue", 
                "sem_close", 
                "getpid", 
                "opendir", 
                "opus_custom_encode_float", 
                "bind", 
                "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base", 
                "open", 
                "__cxa_allocate_exception", 
                "powf", 
                "ftruncate", 
                "_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_", 
                "snprintf", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4copyEPcjj", 
                "fopen", 
                "opus_custom_decoder_destroy", 
                "kill", 
                "sigemptyset", 
                "sendto", 
                "localtime", 
                "__assert_fail", 
                "_ZSt17__throw_bad_allocv", 
                "strerror"
            ], 
            "rpm": "jack-audio-connection-kit-1.9.10-10.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/libjackserver.so.0.1.0"
        }, 
        "usr/lib/jack/audioadapter_so": {
            "report-functions": [
                "snprintf", 
                "jack_ringbuffer_write_space", 
                "jack_get_ports", 
                "calloc", 
                "snd_ctl_open", 
                "snd_pcm_readi", 
                "src_strerror", 
                "jack_get_sample_rate", 
                "snd_pcm_hw_params_get_format", 
                "jack_ringbuffer_write", 
                "jack_ringbuffer_get_read_vector", 
                "snd_ctl_card_info_get_name", 
                "__assert_fail", 
                "memset", 
                "GetMicroSeconds", 
                "_ITM_deregisterTMCloneTable", 
                "snd_pcm_hw_params_malloc", 
                "snd_pcm_hw_params_any", 
                "snd_pcm_hw_params", 
                "_Unwind_Resume", 
                "jack_ringbuffer_create", 
                "snd_pcm_format_name", 
                "jack_log", 
                "jack_ringbuffer_read", 
                "_ZNSt8ios_base4InitD1Ev", 
                "__cxa_pure_virtual", 
                "jack_set_latency_callback", 
                "snd_ctl_card_info_get_id", 
                "strdup", 
                "jack_ringbuffer_read_advance", 
                "jack_connect", 
                "snd_ctl_card_info_get_driver", 
                "_ZN4Jack15JackPosixThread15AcquireRealTimeEi", 
                "snd_pcm_hw_params_set_channels_near", 
                "__cxa_end_catch", 
                "snd_pcm_hw_params_set_format", 
                "jack_port_set_latency_range", 
                "jack_port_name", 
                "snd_pcm_close", 
                "jack_get_buffer_size", 
                "snd_pcm_writei", 
                "__cxa_finalize", 
                "src_reset", 
                "jack_info", 
                "cos", 
                "_ZdaPv", 
                "__gmon_start__", 
                "snd_pcm_hw_params_set_period_size", 
                "snd_pcm_hw_params_set_rate_near", 
                "snd_pcm_hw_params_set_periods", 
                "_ZN4Jack13JackArgParser10FreeParamsEP7_JSList", 
                "_ZN4Jack16GetEngineControlEv", 
                "snd_pcm_hw_params_get_access", 
                "_ZdlPvj", 
                "jack_set_process_callback", 
                "_Znwj", 
                "_ZN4Jack13JackArgParserD1Ev", 
                "strncmp", 
                "_ZN4Jack15JackPosixThread9StartSyncEv", 
                "src_process", 
                "snd_pcm_hw_params_set_access", 
                "src_delete", 
                "jack_ringbuffer_reset", 
                "jack_ringbuffer_free", 
                "_ZN4Jack13JackArgParserC1EPKc", 
                "jack_port_register", 
                "snd_pcm_readn", 
                "__cxa_begin_catch", 
                "_ZNSt8ios_base4InitC1Ev", 
                "src_new", 
                "__stack_chk_fail", 
                "_ZN4Jack13JackArgParser11ParseParamsEP18jack_driver_desc_tPP7_JSList", 
                "jack_ringbuffer_read_space", 
                "snd_ctl_card_info_get_components", 
                "jack_activate", 
                "snd_ctl_card_info_get_mixername", 
                "_ITM_registerTMCloneTable", 
                "snd_ctl_close", 
                "jack_driver_descriptor_add_parameter", 
                "jack_error", 
                "snd_pcm_hw_params_get_period_size", 
                "snd_pcm_hw_params_get_channels", 
                "snd_pcm_writen", 
                "jack_driver_descriptor_construct", 
                "jack_port_unregister", 
                "snd_pcm_prepare", 
                "snd_ctl_card_info", 
                "jack_ringbuffer_reset_size", 
                "_ZN4Jack15JackPosixThread4StopEv", 
                "snd_pcm_open", 
                "jack_ringbuffer_get_write_vector", 
                "snd_ctl_card_info_get_longname", 
                "jack_free", 
                "snd_pcm_hw_params_free", 
                "jack_set_buffer_size_callback", 
                "_ZN4Jack15JackPosixThread4KillEv", 
                "snd_ctl_card_info_sizeof", 
                "free", 
                "snd_strerror", 
                "jack_ringbuffer_write_advance", 
                "_Znaj", 
                "__gxx_personality_v0", 
                "jack_port_get_buffer", 
                "jack_set_sample_rate_callback", 
                "snd_pcm_format_size", 
                "__cxa_throw_bad_array_new_length"
            ], 
            "rpm": "jack-audio-connection-kit-1.9.10-10.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/jack/audioadapter.so"
        }, 
        "usr/lib/libjacknet_so_0_1_0": {
            "report-functions": [
                "strcmp", 
                "pthread_mutexattr_settype", 
                "pthread_exit", 
                "pthread_join", 
                "strcpy", 
                "putchar", 
                "pthread_mutex_destroy", 
                "pthread_key_delete", 
                "_ZNSaIcEC1Ev", 
                "pthread_mutex_trylock", 
                "sched_get_priority_max", 
                "__cxa_atexit", 
                "powf", 
                "_Znaj", 
                "opus_custom_mode_destroy", 
                "_ZNSt9bad_allocD1Ev", 
                "opus_custom_decode_float", 
                "send", 
                "pthread_mutex_init", 
                "__cxa_pure_virtual", 
                "connect", 
                "opus_custom_mode_create", 
                "src_reset", 
                "clock_gettime", 
                "_ZdaPv", 
                "malloc", 
                "sched_get_priority_min", 
                "usleep", 
                "logf", 
                "__cxa_throw_bad_array_new_length", 
                "_ZNSt8ios_base4InitD1Ev", 
                "__stack_chk_fail", 
                "_Unwind_Resume", 
                "pthread_attr_init", 
                "pthread_getspecific", 
                "close", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv", 
                "inet_ntoa", 
                "recv", 
                "pthread_attr_setscope", 
                "inet_aton", 
                "gethostname", 
                "_ZNSt13runtime_errorC2EPKc", 
                "pthread_attr_setschedpolicy", 
                "getsockopt", 
                "src_delete", 
                "_ZNSt13runtime_errorD2Ev", 
                "pthread_setspecific", 
                "__cxa_free_exception", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_guard_acquire", 
                "opus_custom_encoder_ctl", 
                "__cxa_finalize", 
                "recvfrom", 
                "htonl", 
                "memset", 
                "socket", 
                "pthread_create", 
                "pthread_mutexattr_destroy", 
                "printf", 
                "opus_custom_decoder_create", 
                "opus_custom_decoder_destroy", 
                "ntohs", 
                "__gmon_start__", 
                "__cxa_end_catch", 
                "pthread_cancel", 
                "pthread_mutex_unlock", 
                "_ZdlPvj", 
                "ntohl", 
                "src_process", 
                "mmap", 
                "pthread_attr_setinheritsched", 
                "pthread_setschedparam", 
                "strerror", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc", 
                "memcpy", 
                "opus_custom_encoder_create", 
                "gethostbyname", 
                "sendto", 
                "pthread_attr_setstacksize", 
                "bind", 
                "pthread_attr_setdetachstate", 
                "pthread_attr_setschedparam", 
                "pthread_equal", 
                "cos", 
                "vsnprintf", 
                "opus_custom_encode_float", 
                "atoi", 
                "pthread_mutex_lock", 
                "snprintf", 
                "__assert_fail", 
                "setsockopt", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev", 
                "getenv", 
                "__cxa_allocate_exception", 
                "__errno_location", 
                "_ZNSaIcED1Ev", 
                "pthread_key_create", 
                "pthread_attr_destroy", 
                "open", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_", 
                "pthread_self", 
                "_ZNKSt13runtime_error4whatEv", 
                "__cxa_guard_release", 
                "__gxx_personality_v0", 
                "src_strerror", 
                "__cxa_begin_catch", 
                "pthread_mutexattr_init", 
                "opus_custom_encoder_destroy", 
                "strlen", 
                "src_new", 
                "_ITM_registerTMCloneTable", 
                "htons", 
                "pthread_setcanceltype", 
                "free"
            ], 
            "rpm": "jack-audio-connection-kit-1.9.10-10.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/libjacknet.so.0.1.0"
        }, 
        "usr/lib/jack/jack_net_so": {
            "report-functions": [
                "_ZN4Jack10JackDriver15ProcessReadSyncEv", 
                "_ZN4Jack21JackNetSlaveInterface7InitAPIEv", 
                "_ZN4Jack16JackGraphManager11ReleasePortEij", 
                "atoi", 
                "_ZN4Jack21JackNetSlaveInterface8DataRecvEv", 
                "_ZN4Jack10JackDriver9SetMasterEb", 
                "__cxa_throw_bad_array_new_length", 
                "_ZTVN4Jack21JackNetSlaveInterfaceE", 
                "printf", 
                "_ZNK4Jack8JackPort7GetTypeEv", 
                "_ZN4Jack11GetHostNameEPci", 
                "__stack_chk_fail", 
                "_ZN4Jack15JackAudioDriver13SetSampleRateEj", 
                "_ZN4Jack21JackNetSlaveInterface4InitEv", 
                "_ZN4Jack21JackNetSlaveInterface9SetParamsEv", 
                "_ZN4Jack15JackAudioDriver14GetInputBufferEi", 
                "_ZN4Jack15JackTimedDriver5StartEv", 
                "_ZN4Jack10JackDriver17ProcessWriteAsyncEv", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_", 
                "_ZN4Jack14JackPosixMutex4LockEv", 
                "_ZN4Jack10JackDriver18CycleTakeBeginTimeEv", 
                "__cxa_atexit", 
                "_ZN4Jack10JackDriver17ProcessReadSlavesEv", 
                "_ZN4Jack15JackAudioDriver13SetBufferSizeEj", 
                "_Znwj", 
                "_ZNSt8ios_base4InitD1Ev", 
                "_ZN4Jack14JackPosixMutex6UnlockEv", 
                "strcpy", 
                "_ZN4Jack16JackGraphManager9GetBufferEjj", 
                "_ZN4Jack21JackNetSlaveInterface14FatalRecvErrorEv", 
                "_ZNK4Jack8JackPort7GetNameEv", 
                "snprintf", 
                "_ZN4Jack18JackThreadedDriverC2EPNS_10JackDriverE", 
                "_ITM_registerTMCloneTable", 
                "_ZN4Jack10JackDriver10StopSlavesEv", 
                "_ZThn4_N4Jack15JackAudioDriver12ClientNotifyEiPKciiS2_ii", 
                "_ZN4Jack17JackNetUnixSocket8IsSocketEv", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_", 
                "_ZN4Jack21JackNetSlaveInterface16DecodeSyncPacketERi", 
                "_ZN4Jack21JackNetSlaveInterface4SendEji", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "__assert_fail", 
                "_ZN4Jack10JackDriver16NotifyBufferSizeEj", 
                "getenv", 
                "_ZN4Jack15JackAudioDriver15GetOutputBufferEi", 
                "_ZN4Jack15JackAudioDriverC2EPKcS2_PNS_16JackLockedEngineEPNS_18JackPosixSemaphoreE", 
                "_ZN4Jack10JackDriver4StopEv", 
                "_ZN4Jack16JackGraphManager7GetPortEj", 
                "free", 
                "__cxa_rethrow", 
                "_ZN4Jack10JackDriver4OpenEv", 
                "_ZN4Jack19JackTransportEngine5QueryEP14_jack_position", 
                "jack_info", 
                "_ZN4Jack13NetMidiBuffer9SetBufferEiPNS_14JackMidiBufferE", 
                "_ZN4Jack10JackDriver12ResumeRefNumEv", 
                "_ZTVN4Jack22JackWaitThreadedDriverE", 
                "_ZNK4Jack8JackPort10GetLatencyEv", 
                "_ZTIN4Jack16JackWaiterDriverE", 
                "jack_driver_descriptor_add_parameter", 
                "_Unwind_Resume", 
                "_ZN4Jack19JackTransportEngine13RequestNewPosEP14_jack_position", 
                "_ZN4Jack10JackDriver9GetMasterEv", 
                "GetMicroSeconds", 
                "_ZN4Jack15JackAudioDriver12ClientNotifyEiPKciiS2_ii", 
                "_ZN4Jack8JackPort15SetLatencyRangeE23JackLatencyCallbackModeP19_jack_latency_range", 
                "_ZN4Jack10JackDriver10NotifyXRunEyf", 
                "_ZNSt8ios_base4InitC1Ev", 
                "strlen", 
                "_ZN4Jack15JackAudioDriverD2Ev", 
                "_ZN4Jack16JackNetInterfaceD2Ev", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev", 
                "_ZN4Jack20SessionParamsDisplayEPNS_15_session_paramsE", 
                "_ZN4Jack10JackDriver5CloseEv", 
                "_ZN4Jack19JackTransportEngine13ResetTimebaseEi", 
                "_ZN4Jack10JackDriver8AddSlaveEPNS_19JackDriverInterfaceE", 
                "_ZNK4Jack10JackDriver16GetClientControlEv", 
                "_ZN4Jack21JackNetSlaveInterface13fSlaveCounterE", 
                "_ZN4Jack21JackNetSlaveInterface8SyncSendEv", 
                "_ZN4Jack16JackGraphManager14GetConnectionsEj", 
                "_ZN4Jack12SocketAPIEndEv", 
                "_ZSt17__throw_bad_allocv", 
                "_ZTIN4Jack21JackNetSlaveInterfaceE", 
                "__cxa_finalize", 
                "_ZN4Jack10JackDriver11ProcessReadEv", 
                "_ZN4Jack10JackEngine14PortUnRegisterEij", 
                "_ZN4Jack15JackAudioDriver7ProcessEv", 
                "_ZN4Jack10JackDriver16ProcessWriteSyncEv", 
                "__cxa_end_catch", 
                "_ZN4Jack16JackNetInterfaceC2EPKci", 
                "jack_error", 
                "_ZN4Jack16JackWaiterDriver11ProcessNullEv", 
                "__gxx_personality_v0", 
                "_ZN4Jack21JackNetSlaveInterface8DataSendEv", 
                "__gmon_start__", 
                "_ZN4Jack10JackDriver13SuspendRefNumEv", 
                "__cxa_pure_virtual", 
                "_ZN4Jack17JackNetUnixSocket7GetNameEPc", 
                "_ZN4Jack16JackGraphManager7GetPortEPKc", 
                "_ZdlPvj", 
                "_ZN4Jack8JackPort8SetAliasEPKc", 
                "_ZN4Jack10JackDriver16ProcessReadAsyncEv", 
                "_ZN4Jack10JackDriver15LoadConnectionsEib", 
                "_ZN4Jack10JackDriver18ProcessWriteSlavesEv", 
                "_ZTVN4Jack15JackTimedDriverE", 
                "_ITM_deregisterTMCloneTable", 
                "_ZNSaIcEC1Ev", 
                "jack_driver_descriptor_construct", 
                "_ZN4Jack10JackDriver11RemoveSlaveEPNS_19JackDriverInterfaceE", 
                "_ZTVN4Jack16JackWaiterDriverE", 
                "strncpy", 
                "_ZN4Jack21JackNetSlaveInterface16EncodeSyncPacketEi", 
                "__cxa_begin_catch", 
                "jack_log", 
                "_ZN4Jack13NetMidiBufferD1Ev", 
                "_Znaj", 
                "_ZN4Jack21JackNetSlaveInterface4RecvEji", 
                "_ZN4Jack17GetTransportStateEi", 
                "_ZN4Jack15JackPosixThread4KillEv", 
                "_ZThn4_NK4Jack10JackDriver16GetClientControlEv", 
                "_ZN4Jack10JackDriver16NotifySampleRateEj", 
                "_ZN4Jack10JackDriver15SaveConnectionsEi", 
                "_ZN4Jack10JackEngine12PortRegisterEiPKcS2_jjPj", 
                "_ZN4Jack15JackAudioDriver4OpenEjjbbiibPKcS2_jj", 
                "_ZNSaIcED1Ev", 
                "_ZN4Jack21JackNetSlaveInterface14FatalSendErrorEv", 
                "_ZdlPv", 
                "_ZNK4Jack10JackDriver10IsRealTimeEv", 
                "_ZdaPv", 
                "_ZN4Jack10JackDriver11StartSlavesEv"
            ], 
            "rpm": "jack-audio-connection-kit-1.9.10-10.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/jack/jack_net.so"
        }, 
        "usr/lib/jack/netadapter_so": {
            "report-functions": [
                "__gmon_start__", 
                "jack_ringbuffer_write_space", 
                "_ZN4Jack15JackPosixThread16DropSelfRealTimeEv", 
                "jack_get_buffer_size", 
                "_ZN4Jack21JackNetSlaveInterface14FatalSendErrorEv", 
                "_ZN4Jack17JackNetUnixSocket10SetAddressEPKci", 
                "_ITM_deregisterTMCloneTable", 
                "src_strerror", 
                "snprintf", 
                "jack_port_get_buffer", 
                "src_new", 
                "jack_ringbuffer_read_advance", 
                "strcpy", 
                "_ITM_registerTMCloneTable", 
                "__cxa_allocate_exception", 
                "strlen", 
                "jack_port_register", 
                "strncpy", 
                "set_threaded_log_function", 
                "_ZN4Jack21JackNetSlaveInterface14FatalRecvErrorEv", 
                "jack_ringbuffer_free", 
                "__cxa_throw_bad_array_new_length", 
                "_ZN4Jack17JackNetUnixSocket7GetNameEPc", 
                "__cxa_end_catch", 
                "_ZNSt8ios_base4InitD1Ev", 
                "_ZN4Jack13JackArgParser7GetArgcEv", 
                "jack_ringbuffer_get_write_vector", 
                "_ZN4Jack15JackPosixThread4KillEv", 
                "__cxa_throw", 
                "jack_port_unregister", 
                "jack_ringbuffer_read_space", 
                "_ZN4Jack15JackPosixThread19AcquireSelfRealTimeEi", 
                "_ZdaPv", 
                "jack_set_latency_callback", 
                "GetMicroSeconds", 
                "jack_port_set_latency_range", 
                "_ZN4Jack13JackArgParserC1EPKc", 
                "_ZNSt9bad_allocD1Ev", 
                "memset", 
                "__cxa_pure_virtual", 
                "_ZNSt8ios_base4InitC1Ev", 
                "__stack_chk_fail", 
                "_ZN4Jack21JackNetSlaveInterface8SyncSendEv", 
                "jack_ringbuffer_create", 
                "src_delete", 
                "jack_ringbuffer_get_read_vector", 
                "jack_ringbuffer_read", 
                "jack_driver_descriptor_construct", 
                "_ZN4Jack16GetEngineControlEv", 
                "_ZN4Jack13JackArgParser10FreeParamsEP7_JSList", 
                "_ZN4Jack20SessionParamsDisplayEPNS_15_session_paramsE", 
                "jack_log", 
                "__cxa_finalize", 
                "_ZN4Jack15JackPosixThread9StartSyncEv", 
                "_Znwj", 
                "atoi", 
                "_ZN4Jack16JackNetInterfaceC2Ev", 
                "getenv", 
                "jack_transport_reposition", 
                "_ZN4Jack21JackNetSlaveInterface4RecvEji", 
                "__assert_fail", 
                "jack_get_ports", 
                "src_reset", 
                "_ZN4Jack13JackArgParserD1Ev", 
                "jack_port_name", 
                "_ZN4Jack16JackNetInterfaceD2Ev", 
                "__gxx_personality_v0", 
                "cos", 
                "_ZN4Jack21JackNetSlaveInterface16DecodeSyncPacketERi", 
                "_ZN4Jack21JackNetSlaveInterface8DataSendEv", 
                "jack_ringbuffer_reset_size", 
                "__cxa_begin_catch", 
                "jack_error", 
                "_ZN4Jack13JackArgParser11ParseParamsEP18jack_driver_desc_tPP7_JSList", 
                "_ZN4Jack17JackNetUnixSocket7SetPortEi", 
                "jack_set_sample_rate_callback", 
                "src_process", 
                "_ZN4Jack12SocketAPIEndEv", 
                "jack_transport_query", 
                "jack_transport_start", 
                "_ZN4Jack21JackNetSlaveInterface9SetParamsEv", 
                "jack_set_buffer_size_callback", 
                "_ZN4Jack17GetTransportStateEi", 
                "jack_free", 
                "_ZN4Jack17JackNetUnixSocket5CloseEv", 
                "_ZN4Jack21JackNetSlaveInterface7InitAPIEv", 
                "_Unwind_Resume", 
                "jack_info", 
                "_ZN4Jack11GetHostNameEPci", 
                "jack_activate", 
                "_ZN4Jack21JackNetSlaveInterface8SyncRecvEv", 
                "_ZdlPvj", 
                "__cxa_atexit", 
                "jack_driver_descriptor_add_parameter", 
                "_ZN4Jack21JackNetSlaveInterface8DataRecvEv", 
                "_ZN4Jack21JackNetSlaveInterface4SendEji", 
                "jack_ringbuffer_reset", 
                "_ZN4Jack13JackException12PrintMessageEv", 
                "jack_set_process_callback", 
                "_ZN4Jack21JackNetSlaveInterface4InitEv", 
                "jack_ringbuffer_write_advance", 
                "jack_transport_stop", 
                "jack_get_sample_rate", 
                "jack_connect", 
                "jack_ringbuffer_write"
            ], 
            "rpm": "jack-audio-connection-kit-1.9.10-10.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/jack/netadapter.so"
        }, 
        "usr/lib/jack/jack_dummy_so": {
            "report-functions": [
                "_ZN4Jack15JackTimedDriver11ProcessWaitEv", 
                "_ZN4Jack10JackDriver5CloseEv", 
                "_ZN4Jack10JackDriver10InitializeEv", 
                "jack_driver_descriptor_add_parameter", 
                "_ZN4Jack10JackDriver4OpenEv", 
                "_ZTIN4Jack15JackTimedDriverE", 
                "_ZN4Jack15JackAudioDriver13SetBufferSizeEj", 
                "_ZNSt8ios_base4InitD1Ev", 
                "_ZdlPv", 
                "_ZN4Jack10JackDriver8AddSlaveEPNS_19JackDriverInterfaceE", 
                "__gxx_personality_v0", 
                "__cxa_atexit", 
                "_ZN4Jack10JackDriver15SaveConnectionsEi", 
                "_ZN4Jack10JackDriver15ProcessReadSyncEv", 
                "_ZN4Jack10JackDriver11RemoveSlaveEPNS_19JackDriverInterfaceE", 
                "_ZN4Jack10JackDriver18CycleTakeBeginTimeEv", 
                "_ZThn4_NK4Jack10JackDriver16GetClientControlEv", 
                "_ZdlPvj", 
                "lroundf", 
                "_ZThn4_N4Jack15JackAudioDriver12ClientNotifyEiPKciiS2_ii", 
                "_ZN4Jack15JackAudioDriver12ClientNotifyEiPKciiS2_ii", 
                "_ZN4Jack15JackAudioDriverD2Ev", 
                "__gmon_start__", 
                "_ZSt17__throw_bad_allocv", 
                "_ZN4Jack18JackThreadedDriverC1EPNS_10JackDriverE", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "_ZN4Jack10JackDriver12ResumeRefNumEv", 
                "jack_error", 
                "__cxa_finalize", 
                "_ZTVN4Jack15JackTimedDriverE", 
                "_ZN4Jack15JackAudioDriver7ProcessEv", 
                "_ZN4Jack10JackDriver18ProcessWriteSlavesEv", 
                "__stack_chk_fail", 
                "_ZN4Jack15JackAudioDriver15UpdateLatenciesEv", 
                "_Znwj", 
                "_ZN4Jack10JackDriver15LoadConnectionsEib", 
                "_Unwind_Resume", 
                "_ZN4Jack10JackDriver12ProcessWriteEv", 
                "_ZN4Jack15JackAudioDriver6DetachEv", 
                "_ZN4Jack10JackDriver9SetMasterEb", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_ZN4Jack10JackDriver4ReadEv", 
                "_ZN4Jack10JackDriver11ProcessReadEv", 
                "_ZN4Jack10JackDriver17ProcessWriteAsyncEv", 
                "jack_driver_descriptor_construct", 
                "_ZN4Jack15JackAudioDriverC2EPKcS2_PNS_16JackLockedEngineEPNS_18JackPosixSemaphoreE", 
                "_ZThn4_N4Jack10JackDriver5CloseEv", 
                "_ZN4Jack10JackDriver17ProcessReadSlavesEv", 
                "_ZN4Jack10JackDriver13SuspendRefNumEv", 
                "_ZN4Jack10JackDriver16ProcessWriteSyncEv", 
                "_ZN4Jack15JackAudioDriver6AttachEv", 
                "_ZNK4Jack10JackDriver16GetClientControlEv", 
                "_ZN4Jack10JackDriver11StartSlavesEv", 
                "_ZN4Jack15JackAudioDriver5WriteEv", 
                "_ITM_registerTMCloneTable", 
                "_ZN4Jack10JackDriver16ProcessReadAsyncEv", 
                "_ZN4Jack10JackDriver4StopEv", 
                "_ZN4Jack10JackDriver9GetMasterEv", 
                "_ZN4Jack15JackAudioDriver4OpenEjjbbiibPKcS2_jj", 
                "_ZN4Jack10JackDriver10StopSlavesEv", 
                "_ZNK4Jack10JackDriver10IsRealTimeEv", 
                "_ZN4Jack15JackAudioDriver13SetSampleRateEj"
            ], 
            "rpm": "jack-audio-connection-kit-1.9.10-10.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/jack/jack_dummy.so"
        }, 
        "usr/lib/jack/jack_netone_so": {
            "report-functions": [
                "_ZTIN4Jack16JackWaiterDriverE", 
                "socket", 
                "floor", 
                "_ZN4Jack15JackAudioDriver7ProcessEv", 
                "_ZN4Jack10JackDriver9GetMasterEv", 
                "ntohs", 
                "_ZN4Jack10JackDriver18ProcessWriteSlavesEv", 
                "opus_custom_decoder_destroy", 
                "_ZN4Jack10JackDriver16NotifyBufferSizeEj", 
                "sendto", 
                "opus_custom_encoder_create", 
                "_ZTVN4Jack16JackWaiterDriverE", 
                "opus_custom_encode_float", 
                "_ZN4Jack10JackDriver10NotifyXRunEyf", 
                "recvfrom", 
                "sigismember", 
                "sigprocmask", 
                "_ZTVN4Jack15JackTimedDriverE", 
                "_ZN4Jack15JackAudioDriver15UpdateLatenciesEv", 
                "_ZNK4Jack10JackDriver10IsRealTimeEv", 
                "_ZN4Jack10JackDriver15LoadConnectionsEib", 
                "jack_port_type", 
                "opus_custom_encoder_ctl", 
                "__errno_location", 
                "_ZN4Jack15JackAudioDriver12ClientNotifyEiPKciiS2_ii", 
                "opus_custom_mode_destroy", 
                "jack_port_unregister", 
                "jack_port_register", 
                "close", 
                "_Znwj", 
                "_ZN4Jack15JackAudioDriver13SetSampleRateEj", 
                "_ZN4Jack9JackTools21ThrowJackNetExceptionEv", 
                "opus_custom_encoder_destroy", 
                "htonl", 
                "_ZN4Jack10JackDriver10StopSlavesEv", 
                "_ZN4Jack10JackDriver4OpenEv", 
                "_ZN4Jack16JackGraphManager9GetBufferEjj", 
                "_ITM_registerTMCloneTable", 
                "jack_error", 
                "opus_custom_mode_create", 
                "__gxx_personality_v0", 
                "__gmon_start__", 
                "_ZNK4Jack10JackDriver16GetClientControlEv", 
                "jack_log", 
                "sigaction", 
                "jack_midi_event_write", 
                "_ZN4Jack10JackDriver16ProcessReadAsyncEv", 
                "_ZN4Jack16JackGraphManager7GetPortEj", 
                "sigaddset", 
                "_ZN4Jack14JackPosixMutex4LockEv", 
                "src_process", 
                "jack_set_sync_callback", 
                "ppoll", 
                "_ZN4Jack10JackDriver17ProcessWriteAsyncEv", 
                "src_delete", 
                "memcpy", 
                "malloc", 
                "_ZN4Jack10JackDriver16NotifySampleRateEj", 
                "_ZN4Jack15JackTimedDriver5StartEv", 
                "__cxa_atexit", 
                "_ZN4Jack10JackDriver4StopEv", 
                "snprintf", 
                "__cxa_pure_virtual", 
                "_ZN4Jack15JackAudioDriverD2Ev", 
                "jack_driver_descriptor_construct", 
                "_ZN4Jack18JackThreadedDriverC2EPNS_10JackDriverE", 
                "_ZdlPvj", 
                "jack_info", 
                "memcmp", 
                "jack_midi_get_event_count", 
                "_ZN4Jack10JackDriver15SaveConnectionsEi", 
                "strncmp", 
                "_ZN4Jack10JackDriver15ProcessReadSyncEv", 
                "_ZThn4_N4Jack15JackAudioDriver12ClientNotifyEiPKciiS2_ii", 
                "_ZN4Jack10JackDriver12ResumeRefNumEv", 
                "_ZN4Jack10JackDriver16ProcessWriteSyncEv", 
                "_ZN4Jack15JackAudioDriverC2EPKcS2_PNS_16JackLockedEngineEPNS_18JackPosixSemaphoreE", 
                "__cxa_rethrow", 
                "_ZN4Jack10JackDriver9SetMasterEb", 
                "_ZN4Jack10JackDriver17ProcessReadSlavesEv", 
                "_ZN4Jack10JackDriver11StartSlavesEv", 
                "_ZThn4_NK4Jack10JackDriver16GetClientControlEv", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "__cxa_finalize", 
                "jack_port_type_size", 
                "__cxa_begin_catch", 
                "jack_driver_descriptor_add_parameter", 
                "memset", 
                "_ZN4Jack10JackEngine12PortRegisterEiPKcS2_jjPj", 
                "_ZN4Jack10JackDriver11ProcessReadEv", 
                "ntohl", 
                "__udivdi3", 
                "_ZN4Jack19JackTransportEngine5QueryEP14_jack_position", 
                "perror", 
                "_ZN4Jack15JackPosixThread4KillEv", 
                "__cxa_end_catch", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_ZN4Jack10JackDriver8AddSlaveEPNS_19JackDriverInterfaceE", 
                "opus_custom_decode_float", 
                "_ITM_deregisterTMCloneTable", 
                "_ZN4Jack16JackWaiterDriver11ProcessNullEv", 
                "_ZN4Jack19JackTransportEngine13RequestNewPosEP14_jack_position", 
                "_Unwind_Resume", 
                "_ZN4Jack15JackAudioDriver4OpenEjjbbiibPKcS2_jj", 
                "src_set_ratio", 
                "poll", 
                "_ZN4Jack10JackDriver11RemoveSlaveEPNS_19JackDriverInterfaceE", 
                "_ZN4Jack15JackAudioDriver13SetBufferSizeEj", 
                "_ZNK4Jack8JackPort7GetTypeEv", 
                "jack_activate", 
                "jack_midi_event_get", 
                "bind", 
                "_ZSt17__throw_bad_allocv", 
                "_ZTVN4Jack22JackWaitThreadedDriverE", 
                "free", 
                "htons", 
                "_ZN4Jack10JackDriver5CloseEv", 
                "_ZN4Jack10JackDriver18CycleTakeBeginTimeEv", 
                "jack_port_get_buffer", 
                "_ZN4Jack10JackDriver12ProcessWriteEv", 
                "exit", 
                "opus_custom_decoder_create", 
                "jack_midi_clear_buffer", 
                "sigemptyset", 
                "_ZN4Jack10JackEngine14PortUnRegisterEij", 
                "_ZN4Jack14JackPosixMutex6UnlockEv", 
                "_ZNSt8ios_base4InitD1Ev", 
                "jack_get_time", 
                "_ZdlPv", 
                "_ZN4Jack10JackDriver13SuspendRefNumEv"
            ], 
            "rpm": "jack-audio-connection-kit-1.9.10-10.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/jack/jack_netone.so"
        }, 
        "usr/lib/jack/inprocess_so": {
            "report-functions": [
                "memcpy", 
                "jack_port_get_buffer", 
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize", 
                "jack_activate", 
                "_ITM_deregisterTMCloneTable", 
                "fwrite", 
                "jack_free", 
                "free", 
                "jack_port_register", 
                "malloc", 
                "jack_connect", 
                "jack_set_process_callback", 
                "jack_port_name"
            ], 
            "rpm": "jack-audio-connection-kit-1.9.10-10.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/jack/inprocess.so"
        }, 
        "usr/lib/jack/jack_alsarawmidi_so": {
            "report-functions": [
                "snd_strerror", 
                "_ZN4Jack15JackPosixThread9StartSyncEv", 
                "read", 
                "snd_rawmidi_write", 
                "_ZN4Jack10JackDriver5CloseEv", 
                "__cxa_free_exception", 
                "_ZN4Jack14JackMidiDriver15ProcessReadSyncEv", 
                "snd_rawmidi_open", 
                "_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", 
                "snd_rawmidi_close", 
                "_ZN4Jack10JackDriver11StartSlavesEv", 
                "_ZN4Jack14JackMidiDriver4OpenEbbiibPKcS2_jj", 
                "_ZN4Jack10JackDriver11ProcessReadEv", 
                "_ZN4Jack10JackDriver15SaveConnectionsEi", 
                "_ZN4Jack14JackMidiDriver16ProcessReadAsyncEv", 
                "_ZN4Jack17JackMidiSendQueue20GetNextScheduleFrameEv", 
                "_ZN4Jack10JackDriver4OpenEv", 
                "snd_card_next", 
                "__gxx_personality_v0", 
                "pipe", 
                "ppoll", 
                "_ZN4Jack16JackGraphManager7GetPortEj", 
                "_ZN4Jack14JackMidiDriver15UpdateLatenciesEv", 
                "_ZN4Jack14JackMidiDriver15GetOutputBufferEi", 
                "_ZN4Jack10JackDriver5StartEv", 
                "__udivdi3", 
                "snd_rawmidi_params", 
                "_ZTVN4Jack17JackMidiSendQueueE", 
                "snd_ctl_rawmidi_info", 
                "strerror", 
                "__cxa_throw_bad_array_new_length", 
                "_ZN4Jack10JackDriver4OpenEjjbbiibPKcS2_jj", 
                "__cxa_pure_virtual", 
                "_ZThn4_NK4Jack10JackDriver16GetClientControlEv", 
                "snd_rawmidi_params_current", 
                "snd_ctl_close", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev", 
                "__assert_fail", 
                "_ZN4Jack10JackDriver17IsFixedBufferSizeEv", 
                "_ZN4Jack26JackMidiRawInputWriteQueue7ProcessEj", 
                "_ZTVN4Jack18JackMidiWriteQueueE", 
                "_ZN4Jack18JackMidiAsyncQueueC1Ejj", 
                "close", 
                "_ZN4Jack10JackDriver12ProcessWriteEv", 
                "snd_ctl_rawmidi_next_device", 
                "snd_rawmidi_info_get_device", 
                "snd_rawmidi_params_free", 
                "jack_driver_descriptor_construct", 
                "_ZN4Jack10JackDriver8AddSlaveEPNS_19JackDriverInterfaceE", 
                "_ZdlPv", 
                "__cxa_end_catch", 
                "jack_error", 
                "_ZN4Jack14JackMidiDriver16ProcessWriteSyncEv", 
                "snd_rawmidi_params_malloc", 
                "_ZN4Jack14JackMidiDriver13SetBufferSizeEj", 
                "__cxa_get_exception_ptr", 
                "_Znaj", 
                "snd_rawmidi_info_set_device", 
                "_ZN4Jack14JackMidiDriver6DetachEv", 
                "_ZN4Jack8JackPort8SetAliasEPKc", 
                "snd_rawmidi_info_free", 
                "_ZN4Jack10JackDriver9SetMasterEb", 
                "snd_rawmidi_info_malloc", 
                "_ZN4Jack14JackPosixMutex4LockEv", 
                "fcntl", 
                "snd_rawmidi_params_set_no_active_sensing", 
                "snd_rawmidi_poll_descriptors", 
                "_ZN4Jack17GetTimeFromFramesEj", 
                "_ZN4Jack15JackPosixThread4KillEv", 
                "__cxa_rethrow", 
                "_ZN4Jack14JackMidiDriverC2EPKcS2_PNS_16JackLockedEngineEPNS_18JackPosixSemaphoreE", 
                "_ZN4Jack10JackEngine12PortRegisterEiPKcS2_jjPj", 
                "write", 
                "_ZN4Jack27JackMidiRawOutputWriteQueue7ProcessEj", 
                "snprintf", 
                "_ZN4Jack20JackMidiReceiveQueueD2Ev", 
                "_ZNSt13runtime_errorD1Ev", 
                "snd_rawmidi_info_set_subdevice", 
                "_ITM_registerTMCloneTable", 
                "snd_rawmidi_info_get_subdevices_count", 
                "_ZN4Jack26JackMidiRawInputWriteQueue17GetAvailableSpaceEv", 
                "_ZNSt9exceptionD1Ev", 
                "_ZN4Jack10JackDriver9GetMasterEv", 
                "__cxa_begin_catch", 
                "snd_rawmidi_info_get_card", 
                "_ZTIN4Jack14JackMidiDriverE", 
                "snd_rawmidi_info_get_name", 
                "__errno_location", 
                "_ZTVN4Jack17JackMidiReadQueueE", 
                "_ZN4Jack17JackMidiSendQueueD2Ev", 
                "_ZN4Jack27JackMidiRawOutputWriteQueueC1EPNS_17JackMidiSendQueueEjjj", 
                "_ZN4Jack10JackDriver15LoadConnectionsEib", 
                "_ZN4Jack24JackMidiBufferWriteQueue15ResetMidiBufferEPNS_14JackMidiBufferEj", 
                "_ITM_deregisterTMCloneTable", 
                "jack_info", 
                "_ZN4Jack10JackDriver12ClientNotifyEiPKciiS2_ii", 
                "_ZThn4_N4Jack10JackDriver12ClientNotifyEiPKciiS2_ii", 
                "__cxa_atexit", 
                "GetMicroSeconds", 
                "snd_rawmidi_params_set_buffer_size", 
                "_ZN4Jack10JackDriver10InitializeEv", 
                "_ZSt17__throw_bad_allocv", 
                "_ZdaPv", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_ZN4Jack10JackDriver17ProcessReadSlavesEv", 
                "_ZN4Jack14JackMidiDriver17ProcessWriteAsyncEv", 
                "_ZN4Jack10JackDriver13SuspendRefNumEv", 
                "_ZN4Jack10JackDriver10StopSlavesEv", 
                "_ZN4Jack8JackPort15SetLatencyRangeE23JackLatencyCallbackModeP19_jack_latency_range", 
                "__umoddi3", 
                "_ZN4Jack15JackPosixThread19AcquireSelfRealTimeEi", 
                "_ZNSaIcED1Ev", 
                "_ZN4Jack23JackMidiBufferReadQueue15ResetMidiBufferEPNS_14JackMidiBufferE", 
                "_ZSt24__throw_out_of_range_fmtPKcz", 
                "_ZTIN4Jack20JackMidiReceiveQueueE", 
                "_ZN4Jack23JackMidiBufferReadQueueC1Ev", 
                "_ZNK4Jack10JackDriver16GetClientControlEv", 
                "snd_rawmidi_params_set_avail_min", 
                "snd_rawmidi_poll_descriptors_count", 
                "_ZN4Jack10JackDriver18ProcessWriteSlavesEv", 
                "snd_rawmidi_info_get_subdevice", 
                "__cxa_finalize", 
                "set_threaded_log_function", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_", 
                "snd_rawmidi_info_copy", 
                "_ZN4Jack10JackDriver7ProcessEv", 
                "_ZNK4Jack10JackDriver10IsRealTimeEv", 
                "_ZN4Jack15JackPosixThread4StopEv", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc", 
                "__cxa_throw", 
                "_ZN4Jack10JackDriver12ResumeRefNumEv", 
                "_ZN4Jack10JackDriver4StopEv", 
                "_ZNSt8ios_base4InitD1Ev", 
                "_ZN4Jack14JackPosixMutex6UnlockEv", 
                "_ZN4Jack15GetCurrentFrameEv", 
                "snd_rawmidi_poll_descriptors_revents", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_", 
                "__cxa_allocate_exception", 
                "_ZSt20__throw_length_errorPKc", 
                "_ZN4Jack26JackMidiRawInputWriteQueueC1EPNS_18JackMidiWriteQueueEjj", 
                "_Znwj", 
                "_ZN4Jack14JackMidiDriver14GetInputBufferEi", 
                "__gmon_start__", 
                "_ZNSaIcEC1Ev", 
                "_ZN4Jack14JackMidiDriverD2Ev", 
                "_ZNSt13runtime_errorC1EPKc", 
                "_ZNKSt9exception4whatEv", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "snd_rawmidi_info_get_stream", 
                "snd_rawmidi_info_set_stream", 
                "_ZN4Jack10JackDriver11RemoveSlaveEPNS_19JackDriverInterfaceE", 
                "_ZTIN4Jack17JackMidiSendQueueE", 
                "_ZN4Jack24JackMidiBufferWriteQueueC1Ev", 
                "_Unwind_Resume", 
                "snd_ctl_open", 
                "__stack_chk_fail", 
                "snd_rawmidi_read", 
                "_ZdlPvj", 
                "_ZTVN4Jack20JackMidiReceiveQueueE"
            ], 
            "rpm": "jack-audio-connection-kit-1.9.10-10.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/jack/jack_alsarawmidi.so"
        }, 
        "usr/lib/jack/netmanager_so": {
            "report-functions": [
                "_ZN4Jack13JackArgParserD1Ev", 
                "jack_port_register", 
                "_ZN4Jack17GetTransportStateEi", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "strlen", 
                "jack_set_buffer_size_callback", 
                "_ZN4Jack17JackNetUnixSocket7GetNameEPc", 
                "jack_client_create_thread", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "_ITM_registerTMCloneTable", 
                "_ZN4Jack17JackNetUnixSocket12SetLocalLoopEv", 
                "snprintf", 
                "jack_port_get_buffer", 
                "_ZNSaIcEC1Ev", 
                "_Znwj", 
                "strerror", 
                "jack_port_set_latency_range", 
                "_ZN4Jack22JackNetMasterInterface4RecvEji", 
                "_ZN4Jack22JackNetMasterInterface9SetParamsEv", 
                "_ZN4Jack10JackServer9GetEngineEv", 
                "jack_port_unregister", 
                "_ZN4Jack20SessionParamsDisplayEPNS_15_session_paramsE", 
                "atoi", 
                "jack_set_sample_rate_callback", 
                "_ZdaPv", 
                "_ZN4Jack17JackNetUnixSocket14JoinMCastGroupEPKc", 
                "jack_client_kill_thread", 
                "_ZN4Jack14JackPosixMutex6UnlockEv", 
                "__gxx_personality_v0", 
                "__cxa_finalize", 
                "jack_activate", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "_ZN4Jack22JackNetMasterInterface8DataRecvEv", 
                "_Unwind_Resume", 
                "_ZN4Jack17JackNetUnixSocketC1Ev", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_", 
                "jack_client_open", 
                "_ZN4Jack22JackNetMasterInterface4ExitEv", 
                "jack_transport_query", 
                "jack_on_shutdown", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "jack_set_process_callback", 
                "jack_connect", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev", 
                "_ZN4Jack17JackNetUnixSocket8GetErrorEv", 
                "_ZN4Jack13JackArgParserC1EPKc", 
                "_ZN4Jack17JackNetUnixSocket5CloseEv", 
                "_ZN4Jack13SocketAPIInitEv", 
                "jack_port_connected", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_", 
                "_ZN4Jack17JackNetUnixSocketD1Ev", 
                "strcpy", 
                "__stack_chk_fail", 
                "memset", 
                "_ZN4Jack22JackNetMasterInterface14FatalRecvErrorEv", 
                "jack_port_by_id", 
                "_ZN4Jack10JackEngine16NotifyClientXRunEi", 
                "jack_client_close", 
                "_ZN4Jack22JackNetMasterInterface16EncodeSyncPacketEi", 
                "jack_set_sync_callback", 
                "jack_log", 
                "__errno_location", 
                "__gmon_start__", 
                "jack_port_name", 
                "__cxa_begin_catch", 
                "_ZN4Jack22JackNetMasterInterface8DataSendEv", 
                "jack_transport_stop", 
                "_ZN4Jack22JackNetMasterInterface8SyncRecvEv", 
                "_ZN4Jack13JackArgParser11ParseParamsEP18jack_driver_desc_tPP7_JSList", 
                "_ZN4Jack17JackNetUnixSocket10SetTimeOutEi", 
                "_ZN4Jack13GetPacketTypeEPNS_15_session_paramsE", 
                "jack_transport_start", 
                "_ZN4Jack13JackArgParser7GetArgcEv", 
                "_ZSt17__throw_bad_allocv", 
                "__cxa_atexit", 
                "_ZN4Jack16JackNetInterfaceD2Ev", 
                "jack_get_client_name", 
                "jack_info", 
                "_ZN4Jack17JackNetUnixSocket7GetPortEv", 
                "_ZN4Jack17JackNetUnixSocket9NewSocketEv", 
                "_ZN4Jack14JackPosixMutex4LockEv", 
                "__cxa_end_catch", 
                "jack_set_latency_callback", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_ZNSt8__detail15_List_node_base9_M_unhookEv", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_", 
                "_ITM_deregisterTMCloneTable", 
                "jack_release_timebase", 
                "jack_free", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv", 
                "_ZNSaIcED1Ev", 
                "_ZN4Jack22JackNetMasterInterface4InitEv", 
                "getenv", 
                "jack_driver_descriptor_add_parameter", 
                "_ZdlPvj", 
                "_ZN4Jack17JackNetUnixSocket9CatchHostEPvji", 
                "_ZN4Jack12SocketAPIEndEv", 
                "_ZNSt8ios_base4InitD1Ev", 
                "_ZN4Jack17JackNetUnixSocket4BindEv", 
                "_ZN4Jack17SessionParamsNToHEPNS_15_session_paramsES1_", 
                "_ZN4Jack16JackNetInterfaceC2ERNS_15_session_paramsERNS_17JackNetUnixSocketEPKc", 
                "__cxa_rethrow", 
                "__cxa_throw_bad_array_new_length", 
                "_ZdlPv", 
                "jack_error", 
                "jack_set_timebase_callback", 
                "jack_driver_descriptor_construct", 
                "_ZN4Jack13NetMidiBuffer9SetBufferEiPNS_14JackMidiBufferE", 
                "jack_transport_reposition", 
                "_ZN4Jack17JackNetUnixSocket7SetPortEi", 
                "jack_get_buffer_size", 
                "_ZN4Jack22JackNetMasterInterface4SendEji", 
                "jack_port_get_all_connections", 
                "_ZN4Jack13JackArgParser10FreeParamsEP7_JSList", 
                "_Znaj", 
                "_ZN4Jack22JackNetMasterInterface8SyncSendEv", 
                "_ZN4Jack22JackNetMasterInterface14FatalSendErrorEv", 
                "_ZN4Jack22JackNetMasterInterface16DecodeSyncPacketERi", 
                "jack_get_ports"
            ], 
            "rpm": "jack-audio-connection-kit-1.9.10-10.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/jack/netmanager.so"
        }, 
        "usr/lib/jack/jack_alsa_so": {
            "report-functions": [
                "sprintf", 
                "__gmon_start__", 
                "snd_pcm_hw_params_free", 
                "_ZN4Jack10JackDriver15LoadConnectionsEib", 
                "sem_init", 
                "snd_rawmidi_info_set_subdevice", 
                "_ZN4Jack10JackDriver10InitializeEv", 
                "_ZN4Jack18JackThreadedDriverC1EPNS_10JackDriverE", 
                "snd_ctl_pcm_next_device", 
                "_ZN4Jack10JackDriver13SuspendRefNumEv", 
                "snd_pcm_poll_descriptors", 
                "snd_pcm_sw_params_set_stop_threshold", 
                "sem_post", 
                "snd_pcm_start", 
                "snd_rawmidi_info_get_name", 
                "_ZN4Jack10JackDriver12ProcessWriteEv", 
                "snd_ctl_elem_id_set_interface", 
                "snd_seq_get_any_port_info", 
                "snd_seq_control_queue", 
                "fgets", 
                "snd_ctl_elem_value_set_name", 
                "_ZN4Jack15JackAudioDriverD2Ev", 
                "_ZN4Jack15JackAudioDriver13SetSampleRateEj", 
                "__umoddi3", 
                "_ZdlPvj", 
                "_ZN4Jack15JackAudioDriver6DetachEv", 
                "snd_pcm_hw_params_set_periods_min", 
                "snd_seq_port_subscribe_set_dest", 
                "jack_midi_event_reserve", 
                "snd_pcm_hw_params_get_access", 
                "jack_ringbuffer_get_read_vector", 
                "snd_seq_alloc_queue", 
                "strerror", 
                "snd_rawmidi_info_get_subdevice_name", 
                "snd_ctl_card_info_get_name", 
                "snd_pcm_info_set_device", 
                "snd_rawmidi_info_set_device", 
                "jack_ringbuffer_write", 
                "snd_pcm_info_set_stream", 
                "sem_wait", 
                "memmove", 
                "snd_pcm_poll_descriptors_count", 
                "_ZN4Jack10JackDriver8AddSlaveEPNS_19JackDriverInterfaceE", 
                "__errno_location", 
                "snd_pcm_hw_params_get_period_size", 
                "snd_pcm_sw_params_set_silence_threshold", 
                "free", 
                "snd_seq_client_info_get_client", 
                "snd_pcm_hw_params_get_format", 
                "jack_info", 
                "_ZN4Jack10JackDriver17ProcessWriteAsyncEv", 
                "snd_ctl_elem_id_sizeof", 
                "snd_ctl_elem_id_set_device", 
                "__gxx_personality_v0", 
                "snd_pcm_sw_params_set_avail_min", 
                "strcmp", 
                "snd_seq_event_output", 
                "_ZN4Jack15JackPosixThread8StartImpEPmiiPFPvS2_ES2_", 
                "_ZThn4_N4Jack15JackAudioDriver12ClientNotifyEiPKciiS2_ii", 
                "_ZNK4Jack10JackDriver16GetClientControlEv", 
                "snd_ctl_pcm_info", 
                "strlen", 
                "jack_error", 
                "snd_ctl_elem_value_set_enumerated", 
                "snd_seq_queue_status_sizeof", 
                "_ZTIN4Jack15JackAudioDriverE", 
                "snd_pcm_sw_params_malloc", 
                "__cxa_rethrow", 
                "snd_ctl_open", 
                "close", 
                "feof", 
                "_ZN4Jack14JackFrameTimer13ReadFrameTimeEPNS_9JackTimerE", 
                "_ZN4Jack10JackDriver10NotifyXRunEyf", 
                "jack_ringbuffer_free", 
                "snd_midi_event_free", 
                "snd_rawmidi_poll_descriptors_count", 
                "sem_close", 
                "lrintf", 
                "snd_rawmidi_info_get_device", 
                "snd_seq_event_input", 
                "poll", 
                "_ZN4Jack15JackAudioDriver4OpenEjjbbiibPKcS2_jj", 
                "snd_pcm_open", 
                "jack_constraint_free", 
                "set_threaded_log_function", 
                "snd_ctl_elem_value_set_interface", 
                "_ZN4Jack9JackTimer11Time2FramesEyj", 
                "pthread_cancel", 
                "__ctype_b_loc", 
                "_ZN4Jack17JackServerGlobals17on_device_acquireE", 
                "_ZN4Jack10JackDriver4StopEv", 
                "__assert_fail", 
                "snd_seq_port_info_get_port", 
                "snd_pcm_hw_params_set_channels", 
                "_ZN4Jack10JackDriver5StartEv", 
                "_ZN4Jack10JackDriver9SetMasterEb", 
                "__cxa_begin_catch", 
                "snd_pcm_nonblock", 
                "_ZN4Jack15JackAudioDriver13SetBufferSizeEj", 
                "pthread_mutex_lock", 
                "snd_rawmidi_info_get_subdevices_count", 
                "jack_midi_event_get", 
                "puts", 
                "snd_seq_nonblock", 
                "_ZNSt8ios_base4InitD1Ev", 
                "snd_pcm_hw_params_malloc", 
                "snd_pcm_mmap_begin", 
                "snd_pcm_poll_descriptors_revents", 
                "snd_pcm_hw_params_set_format", 
                "snd_seq_port_subscribe_set_time_update", 
                "snd_pcm_info_set_subdevice", 
                "snd_seq_port_info_sizeof", 
                "snd_pcm_mmap_commit", 
                "_ZN4Jack15JackAudioDriver7ProcessEv", 
                "snd_pcm_info_get_name", 
                "jack_constraint_compose_enum_char", 
                "snd_pcm_sw_params_current", 
                "__stack_chk_fail", 
                "snd_pcm_hw_params_set_buffer_size", 
                "snd_seq_connect_from", 
                "jack_ringbuffer_read_space", 
                "snd_pcm_hw_params_set_rate_near", 
                "access", 
                "_ZNK4Jack10JackDriver10IsRealTimeEv", 
                "snd_seq_open", 
                "read", 
                "malloc", 
                "jack_midi_clear_buffer", 
                "snd_pcm_sw_params_set_start_threshold", 
                "_ZSt17__throw_bad_allocv", 
                "_Unwind_Resume", 
                "printf", 
                "snd_ctl_elem_read", 
                "snd_seq_port_info_get_capability", 
                "snd_ctl_close", 
                "calloc", 
                "__cxa_end_catch", 
                "snd_rawmidi_read", 
                "snd_seq_connect_to", 
                "snd_card_next", 
                "snd_rawmidi_info_get_subdevice", 
                "snd_pcm_close", 
                "snd_pcm_status", 
                "fprintf", 
                "snd_seq_subscribe_port", 
                "memset", 
                "snd_strerror", 
                "jack_ringbuffer_create", 
                "snd_seq_create_simple_port", 
                "snd_seq_queue_status_get_real_time", 
                "__cxa_atexit", 
                "jack_get_microseconds", 
                "GetMicroSeconds", 
                "pthread_join", 
                "snd_rawmidi_poll_descriptors_revents", 
                "_ZThn4_NK4Jack10JackDriver16GetClientControlEv", 
                "snd_rawmidi_info_sizeof", 
                "_ZN4Jack15JackAudioDriverC2EPKcS2_PNS_16JackLockedEngineEPNS_18JackPosixSemaphoreE", 
                "snd_pcm_hw_params_get_channels_max", 
                "snd_rawmidi_write", 
                "_ZN4Jack14JackPosixMutex6UnlockEv", 
                "_ZN4Jack10JackDriver12CycleIncTimeEv", 
                "snd_seq_get_queue_status", 
                "snd_pcm_format_physical_width", 
                "_ITM_registerTMCloneTable", 
                "strchr", 
                "snd_ctl_card_info_get_driver", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "_ZN4Jack15JackAudioDriver12ClientNotifyEiPKciiS2_ii", 
                "snd_ctl_elem_id_set_numid", 
                "snd_ctl_rawmidi_info", 
                "snd_pcm_drop", 
                "_ZN4Jack10JackDriver16ProcessWriteSyncEv", 
                "_ZN4Jack10JackEngine14PortUnRegisterEij", 
                "_ZN4Jack17JackServerGlobals17on_device_releaseE", 
                "snd_rawmidi_info_get_stream", 
                "snd_seq_port_subscribe_set_queue", 
                "write", 
                "snd_rawmidi_drain", 
                "snd_ctl_card_info_get_card", 
                "snd_seq_set_client_name", 
                "snd_ctl_elem_write", 
                "snd_seq_disconnect_from", 
                "snd_ctl_elem_value_get_bytes", 
                "_ZN4Jack10JackDriver17ProcessReadSlavesEv", 
                "snd_pcm_status_get_state", 
                "snd_seq_client_info_set_client", 
                "snd_ctl_elem_value_set_index", 
                "snd_ctl_elem_id_set_index", 
                "bzero", 
                "snd_pcm_info_sizeof", 
                "snd_seq_client_info_sizeof", 
                "exit", 
                "_ZN4Jack10JackEngine12PortRegisterEiPKcS2_jjPj", 
                "snd_ctl_card_info_sizeof", 
                "jack_constraint_add_enum", 
                "strncasecmp", 
                "snd_seq_client_info_get_name", 
                "clock_nanosleep", 
                "getenv", 
                "snd_midi_event_reset_decode", 
                "_ZN4Jack10JackDriver9GetMasterEv", 
                "popen", 
                "strtok", 
                "snd_rawmidi_info_set_stream", 
                "pthread_mutex_unlock", 
                "snd_pcm_hw_params", 
                "_ZN4Jack10JackDriver11RemoveSlaveEPNS_19JackDriverInterfaceE", 
                "snd_midi_event_new", 
                "jack_constraint_compose_enum_str", 
                "jack_ringbuffer_write_space", 
                "snd_seq_port_info_set_client", 
                "pipe", 
                "memcpy", 
                "floor", 
                "snd_pcm_hw_params_set_periods_near", 
                "snd_seq_close", 
                "snd_rawmidi_poll_descriptors", 
                "snd_seq_port_subscribe_set_time_real", 
                "_ZN4Jack14JackPosixMutex4LockEv", 
                "snd_pcm_sw_params", 
                "_ZN4Jack10JackDriver11StartSlavesEv", 
                "jack_driver_descriptor_add_parameter", 
                "_ITM_deregisterTMCloneTable", 
                "snd_pcm_avail_update", 
                "jack_ringbuffer_read_advance", 
                "snd_ctl_elem_id_set_name", 
                "strdup", 
                "jack_ringbuffer_get_write_vector", 
                "_ZN4Jack10JackDriver15SaveConnectionsEi", 
                "snd_pcm_hw_params_any", 
                "snd_seq_get_any_client_info", 
                "snd_midi_event_encode", 
                "snd_seq_port_subscribe_sizeof", 
                "snd_rawmidi_info_get_card", 
                "pthread_mutex_init", 
                "snd_pcm_hw_params_set_periods_integer", 
                "snprintf", 
                "atoi", 
                "__divdi3", 
                "snd_midi_event_reset_encode", 
                "_ZN4Jack9JackTimerC1Ev", 
                "_ZN4Jack10JackDriver4OpenEv", 
                "_ZdlPv", 
                "_ZN4Jack8JackPort15SetLatencyRangeE23JackLatencyCallbackModeP19_jack_latency_range", 
                "jack_ringbuffer_reset", 
                "snd_pcm_hw_params_set_period_size", 
                "_ZN4Jack10JackDriver16ProcessReadAsyncEv", 
                "snd_pcm_status_get_trigger_tstamp", 
                "strndup", 
                "_ZN4Jack10JackDriver12ResumeRefNumEv", 
                "snd_midi_event_decode", 
                "snd_ctl_card_info", 
                "open", 
                "jack_log", 
                "snd_ctl_elem_value_set_id", 
                "jack_ringbuffer_read", 
                "jack_midi_get_event_count", 
                "_ZN4Jack16JackGraphManager7GetPortEj", 
                "snd_ctl_elem_value_set_integer", 
                "snd_rawmidi_open", 
                "_Znwj", 
                "_ZN4Jack8JackPort8SetAliasEPKc", 
                "snd_ctl_elem_id_set_subdevice", 
                "jack_driver_descriptor_construct", 
                "snd_seq_drop_input", 
                "_ZN4Jack10JackDriver11ProcessReadEv", 
                "snd_rawmidi_close", 
                "snd_pcm_prepare", 
                "_ZN4Jack10JackDriver18ProcessWriteSlavesEv", 
                "snd_pcm_hw_params_get_rate", 
                "__cxa_finalize", 
                "pthread_create", 
                "pclose", 
                "snd_seq_client_id", 
                "jack_midi_event_write", 
                "snd_ctl_card_info_get_id", 
                "snd_seq_drain_output", 
                "snd_pcm_status_get_tstamp", 
                "_ZN4Jack10JackDriver10StopSlavesEv", 
                "snd_seq_port_subscribe_set_sender", 
                "snd_seq_port_info_set_port", 
                "snd_ctl_elem_value_sizeof", 
                "_ZN4Jack10JackDriver5CloseEv", 
                "snd_pcm_status_sizeof", 
                "snd_pcm_hw_params_set_access", 
                "_ZN4Jack10JackDriver15ProcessReadSyncEv", 
                "_ZN4Jack16JackGraphManager9GetBufferEjj", 
                "__moddi3", 
                "_ZNSt8ios_base4InitC1Ev", 
                "snd_seq_query_next_port", 
                "snd_pcm_sw_params_free", 
                "snd_seq_query_next_client", 
                "jack_ringbuffer_write_advance", 
                "snd_seq_port_info_get_type", 
                "snd_pcm_link"
            ], 
            "rpm": "jack-audio-connection-kit-1.9.10-10.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/jack/jack_alsa.so"
        }, 
        "usr/lib/jack/jack_firewire_so": {
            "report-functions": [
                "_ZN4Jack8JackPort8SetAliasEPKc", 
                "_ZN4Jack10JackDriver15ProcessReadSyncEv", 
                "jack_log", 
                "__cxa_end_catch", 
                "_ZN4Jack10JackDriver11ProcessReadEv", 
                "_ZN4Jack15JackAudioDriver13SetSampleRateEj", 
                "_ZN4Jack10JackDriver13SuspendRefNumEv", 
                "_ZThn4_N4Jack15JackAudioDriver12ClientNotifyEiPKciiS2_ii", 
                "calloc", 
                "free", 
                "ffado_streaming_get_capture_stream_name", 
                "_ZN4Jack10JackDriver8AddSlaveEPNS_19JackDriverInterfaceE", 
                "_ZN4Jack10JackDriver10InitializeEv", 
                "_ZN4Jack10JackDriver17ProcessReadSlavesEv", 
                "__stack_chk_fail", 
                "ffado_streaming_set_playback_stream_buffer", 
                "_ZN4Jack27JackMidiRawOutputWriteQueue7ProcessEj", 
                "ffado_get_api_version", 
                "_ZN4Jack10JackDriver12ProcessWriteEv", 
                "sleep", 
                "_ZTVN4Jack20JackMidiReceiveQueueE", 
                "_ZN4Jack14JackPosixMutex4LockEv", 
                "_ZTIN4Jack20JackMidiReceiveQueueE", 
                "ffado_streaming_finish", 
                "ffado_streaming_get_playback_stream_type", 
                "_ZN4Jack10JackDriver17ProcessWriteAsyncEv", 
                "ffado_streaming_stop", 
                "__gmon_start__", 
                "_ZN4Jack12GetLastFrameEv", 
                "jack_driver_descriptor_add_parameter", 
                "_ZN4Jack10JackDriver15LoadConnectionsEib", 
                "_ZN4Jack10JackDriver12CycleIncTimeEv", 
                "GetMicroSeconds", 
                "_ZN4Jack10JackDriver16ProcessWriteSyncEv", 
                "_ZTVN4Jack17JackMidiReadQueueE", 
                "_ZN4Jack15JackAudioDriver12ClientNotifyEiPKciiS2_ii", 
                "_ZN4Jack20JackMidiReceiveQueueD2Ev", 
                "_ZN4Jack14JackPosixMutex6UnlockEv", 
                "_ZN4Jack10JackDriver5StartEv", 
                "_ZN4Jack26JackMidiRawInputWriteQueueC1EPNS_18JackMidiWriteQueueEjj", 
                "_Unwind_Resume", 
                "_ZNK4Jack10JackDriver16GetClientControlEv", 
                "__cxa_atexit", 
                "_ZN4Jack10JackDriver10StopSlavesEv", 
                "_ZN4Jack15JackAudioDriverC2EPKcS2_PNS_16JackLockedEngineEPNS_18JackPosixSemaphoreE", 
                "_ZThn4_NK4Jack10JackDriver16GetClientControlEv", 
                "_ZTIN4Jack15JackAudioDriverE", 
                "_ZN4Jack10JackEngine12PortRegisterEiPKcS2_jjPj", 
                "_ZN4Jack23JackMidiBufferReadQueue15ResetMidiBufferEPNS_14JackMidiBufferE", 
                "_ZN4Jack24JackMidiBufferWriteQueue15ResetMidiBufferEPNS_14JackMidiBufferEj", 
                "_ITM_deregisterTMCloneTable", 
                "jack_error", 
                "_ZN4Jack10JackDriver4OpenEv", 
                "_ZN4Jack10JackDriver18ProcessWriteSlavesEv", 
                "_ZNK4Jack10JackDriver10IsRealTimeEv", 
                "_ZN4Jack18JackThreadedDriverC1EPNS_10JackDriverE", 
                "__cxa_begin_catch", 
                "_ZN4Jack27JackMidiRawOutputWriteQueueC1EPNS_17JackMidiSendQueueEjjj", 
                "_ZN4Jack15JackAudioDriver4OpenEjjbbiibPKcS2_jj", 
                "ffado_streaming_wait", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "_ZN4Jack10JackDriver9SetMasterEb", 
                "memset", 
                "ffado_streaming_set_period_size", 
                "_ZdlPv", 
                "_ZN4Jack10JackDriver11StartSlavesEv", 
                "_ZSt17__throw_bad_allocv", 
                "_ZN4Jack10JackDriver10NotifyXRunEyf", 
                "_Znwj", 
                "_ZN4Jack16JackGraphManager9GetBufferEjj", 
                "ffado_streaming_get_nb_capture_streams", 
                "_ZN4Jack10JackDriver5CloseEv", 
                "_ZTVN4Jack17JackMidiSendQueueE", 
                "ffado_streaming_capture_stream_onoff", 
                "ffado_streaming_set_audio_datatype", 
                "_ZN4Jack8JackPort15SetLatencyRangeE23JackLatencyCallbackModeP19_jack_latency_range", 
                "_ZN4Jack10JackDriver4StopEv", 
                "_ZN4Jack23JackMidiBufferReadQueueC1Ev", 
                "ffado_streaming_init", 
                "ffado_streaming_start", 
                "_ZdlPvj", 
                "_ZTIN4Jack17JackMidiSendQueueE", 
                "__assert_fail", 
                "ffado_streaming_transfer_capture_buffers", 
                "__cxa_rethrow", 
                "_ZN4Jack17JackMidiSendQueueD2Ev", 
                "memcpy", 
                "_ZN4Jack10JackDriver15SaveConnectionsEi", 
                "_ZN4Jack26JackMidiRawInputWriteQueue7ProcessEj", 
                "ffado_streaming_get_nb_playback_streams", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_ZN4Jack16JackGraphManager7GetPortEj", 
                "_ZN4Jack10JackDriver9GetMasterEv", 
                "__cxa_finalize", 
                "_ZN4Jack15JackAudioDriver13SetBufferSizeEj", 
                "_ZN4Jack10JackDriver12ResumeRefNumEv", 
                "_ZN4Jack15JackAudioDriverD2Ev", 
                "_ZN4Jack15JackAudioDriver6DetachEv", 
                "_ZN4Jack10JackDriver11RemoveSlaveEPNS_19JackDriverInterfaceE", 
                "ffado_get_version", 
                "_ZTVN4Jack18JackMidiWriteQueueE", 
                "ffado_streaming_get_capture_stream_type", 
                "_ZN4Jack15JackAudioDriver7ProcessEv", 
                "ffado_streaming_set_capture_stream_buffer", 
                "ffado_streaming_playback_stream_onoff", 
                "_ZNSt8ios_base4InitD1Ev", 
                "_ZN4Jack24JackMidiBufferWriteQueueC1Ev", 
                "ffado_streaming_transfer_playback_buffers", 
                "snprintf", 
                "jack_driver_descriptor_construct", 
                "_ITM_registerTMCloneTable", 
                "ffado_streaming_prepare", 
                "ffado_streaming_get_playback_stream_name"
            ], 
            "rpm": "jack-audio-connection-kit-1.9.10-10.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/jack/jack_firewire.so"
        }, 
        "usr/bin/jackrec": {
            "report-functions": [
                "fprintf", 
                "sf_close", 
                "sf_error_str", 
                "sf_writef_float", 
                "jack_ringbuffer_read_space", 
                "sprintf", 
                "jack_connect", 
                "getopt_long", 
                "fwrite", 
                "__libc_start_main", 
                "puts", 
                "jack_port_name", 
                "pthread_cond_signal", 
                "jack_activate", 
                "jack_ringbuffer_create", 
                "pthread_mutex_unlock", 
                "malloc", 
                "pthread_mutex_trylock", 
                "pthread_join", 
                "atoi", 
                "pthread_mutex_lock", 
                "jack_client_close", 
                "pthread_create", 
                "jack_ringbuffer_free", 
                "jack_on_shutdown", 
                "sf_open", 
                "jack_get_sample_rate", 
                "signal", 
                "free", 
                "jack_port_register", 
                "pthread_cond_wait", 
                "jack_set_process_callback", 
                "__stack_chk_fail", 
                "exit", 
                "pthread_setcanceltype", 
                "jack_client_open", 
                "memset", 
                "__gmon_start__", 
                "jack_ringbuffer_read"
            ], 
            "rpm": "jack-audio-connection-kit-1.9.10-10.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/bin/jackrec"
        }, 
        "usr/lib/jack/profiler_so": {
            "report-functions": [
                "free", 
                "_ZN4Jack13JackArgParserC1EPKc", 
                "jack_log", 
                "_ZN4Jack14JackPosixMutex4LockEv", 
                "snprintf", 
                "_ZN4Jack14JackPosixMutex6UnlockEv", 
                "__cxa_end_catch", 
                "_ZN4Jack10JackEngine15GetClientRefNumEPKc", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEjj", 
                "jack_cpu_load", 
                "__cxa_rethrow", 
                "_ZN4Jack13JackArgParser10FreeParamsEP7_JSList", 
                "jack_driver_descriptor_construct", 
                "_ZN4Jack10JackServer9GetEngineEv", 
                "_ZNSaIcEC1Ev", 
                "jack_port_get_buffer", 
                "_Znwj", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev", 
                "__stack_chk_fail", 
                "jack_get_ports", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEcj", 
                "_ZdlPvj", 
                "jack_set_process_callback", 
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable", 
                "_Unwind_Resume", 
                "jack_port_register", 
                "_ZNSaIcED1Ev", 
                "__gxx_personality_v0", 
                "jack_error", 
                "jack_port_unregister", 
                "jack_driver_descriptor_add_parameter", 
                "__cxa_begin_catch", 
                "jack_info", 
                "_ZN4Jack13JackArgParser7GetArgcEv", 
                "_ZN4Jack13JackArgParserD1Ev", 
                "_ZNSt8ios_base4InitD1Ev", 
                "__assert_fail", 
                "jack_activate", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv", 
                "jack_set_client_registration_callback", 
                "__gmon_start__", 
                "_ZN4Jack13JackArgParser11ParseParamsEP18jack_driver_desc_tPP7_JSList", 
                "__cxa_atexit"
            ], 
            "rpm": "jack-audio-connection-kit-1.9.10-10.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/jack/profiler.so"
        }, 
        "usr/lib/jack/jack_loopback_so": {
            "report-functions": [
                "_ZN4Jack10JackDriver4StopEv", 
                "_ZN4Jack15JackAudioDriver4OpenEjjbbiibPKcS2_jj", 
                "_ZN4Jack15JackAudioDriver6AttachEv", 
                "jack_error", 
                "_ZN4Jack10JackDriver12ProcessWriteEv", 
                "_ZN4Jack10JackDriver5CloseEv", 
                "_ZN4Jack10JackDriver4ReadEv", 
                "_ZdlPvj", 
                "_ZN4Jack10JackDriver15SaveConnectionsEi", 
                "_ZN4Jack15JackAudioDriver13SetSampleRateEj", 
                "_ZSt17__throw_bad_allocv", 
                "_ZN4Jack10JackDriver5StartEv", 
                "__gxx_personality_v0", 
                "__cxa_finalize", 
                "_ZTIN4Jack15JackAudioDriverE", 
                "_ITM_registerTMCloneTable", 
                "__stack_chk_fail", 
                "_ZN4Jack15JackAudioDriver12ClientNotifyEiPKciiS2_ii", 
                "_ZThn4_N4Jack10JackDriver5CloseEv", 
                "_ZN4Jack15JackAudioDriver14GetInputBufferEi", 
                "_ZN4Jack10JackDriver12ResumeRefNumEv", 
                "jack_driver_descriptor_add_parameter", 
                "_ZN4Jack15JackAudioDriver13SetBufferSizeEj", 
                "_ZN4Jack10JackDriver18ProcessWriteSlavesEv", 
                "_ZN4Jack15JackAudioDriverD2Ev", 
                "_ZN4Jack10JackDriver15LoadConnectionsEib", 
                "_ZN4Jack10JackDriver17ProcessReadSlavesEv", 
                "_ZNK4Jack10JackDriver10IsRealTimeEv", 
                "_ZdlPv", 
                "_ZN4Jack10JackDriver9SetMasterEb", 
                "_ZN4Jack10JackDriver17IsFixedBufferSizeEv", 
                "_ZN4Jack10JackDriver11ProcessReadEv", 
                "jack_driver_descriptor_construct", 
                "__cxa_atexit", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_ZN4Jack10JackDriver10StopSlavesEv", 
                "_ZN4Jack15JackAudioDriverC2EPKcS2_PNS_16JackLockedEngineEPNS_18JackPosixSemaphoreE", 
                "_ZN4Jack10JackDriver11StartSlavesEv", 
                "__gmon_start__", 
                "_ZNSt8ios_base4InitD1Ev", 
                "_ZN4Jack10JackDriver4OpenEv", 
                "_Znwj", 
                "_ZN4Jack10JackDriver8AddSlaveEPNS_19JackDriverInterfaceE", 
                "_ZN4Jack15JackAudioDriver15GetOutputBufferEi", 
                "_ITM_deregisterTMCloneTable", 
                "_ZThn4_N4Jack15JackAudioDriver12ClientNotifyEiPKciiS2_ii", 
                "_ZN4Jack10JackDriver11RemoveSlaveEPNS_19JackDriverInterfaceE", 
                "_Unwind_Resume", 
                "_ZN4Jack15JackAudioDriver15UpdateLatenciesEv", 
                "_ZThn4_NK4Jack10JackDriver16GetClientControlEv", 
                "_ZNK4Jack10JackDriver16GetClientControlEv", 
                "_ZN4Jack15JackAudioDriver6DetachEv", 
                "_ZN4Jack10JackDriver10InitializeEv", 
                "_ZN4Jack15JackAudioDriver5WriteEv", 
                "_ZN4Jack10JackDriver9GetMasterEv", 
                "_ZN4Jack15JackAudioDriver7ProcessEv"
            ], 
            "rpm": "jack-audio-connection-kit-1.9.10-10.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/jack/jack_loopback.so"
        }, 
        "usr/bin/jackd": {
            "report-functions": [
                "_ZdlPv", 
                "jackctl_setup_signals", 
                "jackctl_parameter_get_enum_constraints_count", 
                "dbus_message_new_method_return", 
                "jackctl_wait_signals", 
                "dbus_message_iter_init_append", 
                "atoi", 
                "_Unwind_Resume", 
                "dbus_connection_ref", 
                "silent_jack_error_callback", 
                "dbus_message_append_args", 
                "jack_info", 
                "_ZNSt8ios_base4InitC1Ev", 
                "strlen", 
                "dbus_connection_add_filter", 
                "jackctl_server_create", 
                "jackctl_server_destroy", 
                "calloc", 
                "_ZSt17__throw_bad_allocv", 
                "jackctl_server_load_internal", 
                "jackctl_server_get_internals_list", 
                "__cxa_atexit", 
                "dbus_message_iter_close_container", 
                "_ZNSt8ios_base4InitD1Ev", 
                "dbus_message_is_method_call", 
                "jackctl_driver_get_name", 
                "free", 
                "printf", 
                "dbus_connection_unregister_object_path", 
                "dbus_connection_send", 
                "_Znwj", 
                "fputc", 
                "jack_set_error_function", 
                "jack_error", 
                "fprintf", 
                "dbus_connection_try_register_object_path", 
                "__assert_fail", 
                "jackctl_server_start", 
                "jackctl_parameter_get_enum_constraint_value", 
                "jackctl_driver_params_parse", 
                "jackctl_server_open", 
                "malloc", 
                "dbus_set_error", 
                "dbus_message_new_method_call", 
                "dbus_message_iter_open_container", 
                "jackctl_internal_get_name", 
                "jackctl_server_get_drivers_list", 
                "dbus_message_iter_append_basic", 
                "jackctl_driver_get_type", 
                "jackctl_parameter_set_value", 
                "dbus_message_get_args", 
                "sprintf", 
                "dbus_error_has_name", 
                "__libc_start_main", 
                "dbus_bus_get", 
                "dbus_connection_remove_filter", 
                "strcpy", 
                "strncpy", 
                "jackctl_server_close", 
                "jackctl_server_add_slave", 
                "__stack_chk_fail", 
                "dbus_message_is_signal", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "dbus_bus_release_name", 
                "dbus_bus_request_name", 
                "jackctl_server_unload_internal", 
                "jackctl_server_get_parameters", 
                "jackctl_server_remove_slave", 
                "dbus_error_free", 
                "fwrite", 
                "strcmp", 
                "__gxx_personality_v0", 
                "dbus_message_new_error", 
                "dbus_connection_unref", 
                "dbus_connection_send_with_reply_and_block", 
                "strerror", 
                "dbus_message_new_error_printf", 
                "dbus_error_init", 
                "jackctl_server_stop", 
                "dbus_connection_read_write_dispatch", 
                "dbus_message_unref", 
                "getopt_long", 
                "jackctl_parameter_get_enum_constraint_description", 
                "__gmon_start__", 
                "tolower", 
                "jackctl_driver_get_parameters"
            ], 
            "rpm": "jack-audio-connection-kit-1.9.10-10.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/bin/jackd"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " System Environment/Daemons", 
            "Name": " jack-audio-connection-kit", 
            "License": " GPLv2 and GPLv2+ and LGPLv2+", 
            "URL": " http://www.jackaudio.org", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-04.phx2.fedoraproject.org", 
            "Description": "\nJACK is a low-latency audio server, written primarily for the Linux operating\nsystem. It can connect a number of different applications to an audio device, as\nwell as allowing them to share audio between themselves. Its clients can run in\ntheir own processes (i.e. as a normal application), or can they can run within a\nJACK server (i.e. a \"plugin\").\n\nJACK is different from other audio server efforts in that it has been designed\nfrom the ground up to be suitable for professional audio work. This means that\nit focuses on two key areas: synchronous execution of all clients, and low\nlatency operation.\n", 
            "Build Date": " Thu 03 Aug 2017 06:15:19 AM EDT", 
            "Source RPM": " jack-audio-connection-kit-1.9.10-10.fc27.src.rpm", 
            "Version": " 1.9.10", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Fri 04 Aug 2017 12:27:21 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 10.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " The Jack Audio Connection Kit", 
            "Size": " 2295799"
        }
    }
}