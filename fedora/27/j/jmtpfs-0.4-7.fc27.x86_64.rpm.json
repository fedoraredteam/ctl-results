{
    "results": {
        "usr/bin/jmtpfs": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/jmtpfs", 
            "complexity": {
                "r2aa": {
                    "afCc": 83, 
                    "afC": 1452
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "_ZNSt8ios_base4InitC1Ev", 
                "LIBMTP_Send_File_From_File_Descriptor", 
                "_ZNSt8ios_base4InitD1Ev", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm", 
                "pthread_mutexattr_destroy", 
                "__cxa_finalize", 
                "_ZNKSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE3strEv", 
                "magic_open", 
                "LIBMTP_new_file_t", 
                "LIBMTP_Detect_Raw_Devices", 
                "_ZNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEEC1ERKNS_12basic_stringIcS2_S3_EESt13_Ios_Openmode", 
                "LIBMTP_Create_Folder", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcmm", 
                "strlen", 
                "__cxa_free_exception", 
                "lseek64", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc", 
                "LIBMTP_Get_Filemetadata", 
                "fuse_get_context", 
                "LIBMTP_Release_Device", 
                "LIBMTP_Clear_Errorstack", 
                "_ZNKSt5ctypeIcE13_M_widen_initEv", 
                "pthread_mutexattr_settype", 
                "_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", 
                "_ZNSt13runtime_errorC1EPKc", 
                "__stack_chk_fail", 
                "getgid", 
                "LIBMTP_Set_Object_String", 
                "fuse_opt_add_arg", 
                "_ZSt20__throw_length_errorPKc", 
                "_ZNKSt8__detail20_Prime_rehash_policy14_M_need_rehashEmmm", 
                "_ZSt17__throw_bad_allocv", 
                "__cxa_pure_virtual", 
                "fileno", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "_ZNSt13runtime_errorD2Ev", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l", 
                "tmpfile64", 
                "_ZNSt8__detail15_List_node_base9_M_unhookEv", 
                "fclose", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_", 
                "_ZNSt6localeD1Ev", 
                "LIBMTP_Get_Errorstack", 
                "memset", 
                "_ZNSolsEi", 
                "__cxa_allocate_exception", 
                "pthread_mutex_lock", 
                "LIBMTP_Get_File_To_File_Descriptor", 
                "_ZNSt8ios_baseC2Ev", 
                "memcmp", 
                "_ZNSo9_M_insertImEERSoT_", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcmm", 
                "__gxx_personality_v0", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm", 
                "magic_buffer", 
                "__fxstat64", 
                "pthread_mutex_destroy", 
                "__cxa_rethrow", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_end_catch", 
                "pthread_mutexattr_init", 
                "_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "__cxa_throw", 
                "strdup", 
                "fwrite", 
                "_ZNSo3putEc", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "_ZNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "LIBMTP_Get_Files_And_Folders", 
                "LIBMTP_Open_Raw_Device_Uncached", 
                "__errno_location", 
                "magic_load", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm", 
                "_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_", 
                "fread", 
                "__cxa_begin_catch", 
                "getuid", 
                "fuse_opt_parse", 
                "ftruncate64", 
                "magic_error", 
                "LIBMTP_Get_Storage", 
                "LIBMTP_Init", 
                "LIBMTP_Delete_Object", 
                "LIBMTP_destroy_file_t", 
                "free", 
                "_ZdlPv", 
                "fseek", 
                "__gmon_start__", 
                "_ZNSt8ios_baseD2Ev", 
                "fflush", 
                "LIBMTP_Get_Modelname", 
                "_ZNSt6localeC1Ev", 
                "_ZNKSt13runtime_error4whatEv", 
                "_ZSt19__throw_logic_errorPKc", 
                "__cxa_atexit", 
                "time", 
                "exit", 
                "_ZSt16__throw_bad_castv", 
                "pthread_mutex_init", 
                "pthread_mutex_unlock", 
                "_Znwm", 
                "__assert_fail", 
                "_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", 
                "__libc_start_main", 
                "_ZSt24__throw_out_of_range_fmtPKcz", 
                "read", 
                "ferror", 
                "_ZNSirsERi", 
                "LIBMTP_Set_File_Name", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm", 
                "_ZNSt13runtime_errorD1Ev", 
                "_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEC1ESt13_Ios_Openmode", 
                "_ZNSo5flushEv", 
                "fuse_main_real", 
                "memcpy"
            ], 
            "rpm": "jmtpfs-0.4-7.fc27.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Applications/Multimedia", 
            "Name": " jmtpfs", 
            "License": " GPLv3", 
            "URL": " http://research.jacquette.com/jmtpfs-exchanging-files-between-android-devices-and-linux/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-28.phx2.fedoraproject.org", 
            "Description": "\njmtpfs is a FUSE and libmtp based filesystem for accessing MTP (Media\nTransfer Protocol) devices. It was specifically designed for exchanging\nfiles between Linux systems and newer Android devices that support MTP\nbut not USB Mass Storage.\n\nThe goal is to create a well behaved filesystem, allowing tools like\nfind and rsync to work as expected. MTP file types are set automatically\nbased on file type detection using libmagic. Setting the file appears to\nbe necessary for some Android apps, like Gallery, to be able to find and\nuse the files.\n\nSince it is meant as an Android file transfer utility, the playlists and\nother non-file based data are not supported.\n", 
            "Build Date": " Thu 03 Aug 2017 06:29:24 AM EDT", 
            "Source RPM": " jmtpfs-0.4-7.fc27.src.rpm", 
            "Version": " 0.4", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Fri 04 Aug 2017 12:41:47 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 7.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " FUSE and libmtp based filesystem for accessing MTP devices", 
            "Size": " 153519"
        }
    }
}