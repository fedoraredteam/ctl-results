{
    "results": {
        "usr/bin/tegrarcm": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/tegrarcm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "_ZNK8CryptoPP8Rijndael3Enc18ProcessAndXorBlockEPKhS3_Ph", 
                "_ZNK8CryptoPP22BufferedTransformation21TotalBytesRetrievableEv", 
                "libusb_error_name", 
                "_ZNK8CryptoPP22BufferedTransformation16NumberOfMessagesEv", 
                "_ZN8CryptoPP22BufferedTransformation14TransferAllTo2ERS0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb", 
                "__cxa_begin_catch", 
                "_ZN8CryptoPP22BufferedTransformation12SkipMessagesEj", 
                "_ZN8CryptoPP22BufferedTransformation4SkipEy", 
                "_ZNK8CryptoPP6Filter12CopyRangeTo2ERNS_22BufferedTransformationERyyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb", 
                "libusb_release_interface", 
                "__xstat", 
                "_ZNK8CryptoPP6Filter22AttachedTransformationEv", 
                "__stack_chk_fail", 
                "_ZN8CryptoPP8Rijndael4Base15UncheckedSetKeyEPKhjRKNS_14NameValuePairsE", 
                "_ZN8CryptoPP9CMAC_Base6UpdateEPKhm", 
                "_ZNK8CryptoPP6Filter20NewDefaultAttachmentEv", 
                "_ZNK8CryptoPP22BufferedTransformation4PeekEPhm", 
                "libusb_free_device_list", 
                "__cxa_end_catch", 
                "_ZN8CryptoPP21SimpleKeyingInterface9GetNextIVERNS_21RandomNumberGeneratorEPh", 
                "_ZThn8_N8CryptoPP22BufferedTransformation14GetWaitObjectsERNS_19WaitObjectContainerERKNS_9CallStackE", 
                "_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc", 
                "_ZN8CryptoPP6Filter6DetachEPNS_22BufferedTransformationE", 
                "_ZThn8_N8CryptoPP9CMAC_Base6UpdateEPKhm", 
                "libusb_get_device", 
                "__libc_start_main", 
                "_ZN8CryptoPP6Filter5FlushEbib", 
                "close", 
                "libusb_free_config_descriptor", 
                "_ZN8CryptoPP22BufferedTransformation12ChannelFlushERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbib", 
                "_ZN8CryptoPP22BufferedTransformation21ChannelPutModifiable2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPhmib", 
                "_ZThn8_NK8CryptoPP8Rijndael3Enc18ProcessAndXorBlockEPKhS3_Ph", 
                "_ITM_registerTMCloneTable", 
                "_ZThn8_NK8CryptoPP22BufferedTransformation21GetMaxWaitObjectCountEv", 
                "_ZNK8CryptoPP8Rijndael3Enc21AdvancedProcessBlocksEPKhS3_Phmj", 
                "libusb_get_port_numbers", 
                "_ZSt19__throw_logic_errorPKc", 
                "__printf_chk", 
                "strtoul", 
                "libusb_get_bus_number", 
                "_ZN8CryptoPP6Filter10InitializeERKNS_14NameValuePairsEi", 
                "_ZNK8CryptoPP22BufferedTransformation4PeekERh", 
                "_ZN8CryptoPP6Filter11TransferTo2ERNS_22BufferedTransformationERyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb", 
                "_ZN8CryptoPP6FilterC2EPNS_22BufferedTransformationE", 
                "_ITM_deregisterTMCloneTable", 
                "_Unwind_Resume", 
                "libusb_open", 
                "memcpy", 
                "libusb_init", 
                "open", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_ZdlPvm", 
                "__read_chk", 
                "_ZNK8CryptoPP22BufferedTransformation11AnyMessagesEv", 
                "_ZN8CryptoPP6Filter22AttachedTransformationEv", 
                "__assert_fail", 
                "_ZSt18uncaught_exceptionv", 
                "_ZSt20__throw_length_errorPKc", 
                "_ZdlPv", 
                "__fxstat", 
                "_ZN8CryptoPP22BufferedTransformation14GetNextMessageEv", 
                "libusb_exit", 
                "__cxa_pure_virtual", 
                "_ZN8CryptoPP9CMAC_Base15UncheckedSetKeyEPKhjRKNS_14NameValuePairsE", 
                "_ZN8CryptoPP9AlgorithmC2Eb", 
                "_ZNK8CryptoPP22BufferedTransformation14MaxRetrievableEv", 
                "_ZNK8CryptoPP22BufferedTransformation14AnyRetrievableEv", 
                "_ZN8CryptoPP19AlgorithmParametersC1ERKS0_", 
                "free", 
                "_ZN8CryptoPP19UnalignedDeallocateEPv", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm", 
                "_ZN8CryptoPP22BufferedTransformation3GetEPhm", 
                "_ZN8CryptoPP17UnalignedAllocateEm", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm", 
                "_ZNK8CryptoPP19BlockTransformation20OptimalDataAlignmentEv", 
                "libusb_bulk_transfer", 
                "_ZN8CryptoPP9CMAC_Base14TruncatedFinalEPhm", 
                "read", 
                "_ZN8CryptoPP11StringStore15StoreInitializeERKNS_14NameValuePairsE", 
                "_ZN8CryptoPP21SimpleKeyingInterface6SetKeyEPKhmRKNS_14NameValuePairsE", 
                "memset", 
                "__fprintf_chk", 
                "strlen", 
                "_ZThn8_NK8CryptoPP8Rijndael3Enc21AdvancedProcessBlocksEPKhS3_Phmj", 
                "libusb_get_active_config_descriptor", 
                "__errno_location", 
                "_ZNK8CryptoPP22BufferedTransformation21GetMaxWaitObjectCountEv", 
                "_ZThn8_N8CryptoPP9CMAC_Base14TruncatedFinalEPhm", 
                "malloc", 
                "_ZN8CryptoPP19AlgorithmParametersC1Ev", 
                "_ZN8CryptoPP6Filter16MessageSeriesEndEib", 
                "_ZN8CryptoPP22BufferedTransformation14GetWaitObjectsERNS_19WaitObjectContainerERKNS_9CallStackE", 
                "calloc", 
                "__cxa_throw", 
                "_ZNSt9exceptionD2Ev", 
                "write", 
                "_Znwm", 
                "__cxa_allocate_exception", 
                "_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_", 
                "libusb_get_device_descriptor", 
                "_ZNSt8ios_base4InitD1Ev", 
                "error", 
                "_ZN8CryptoPP22BufferedTransformation21ChannelCreatePutSpaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERm", 
                "getopt_long", 
                "libusb_get_device_list", 
                "libusb_close", 
                "_ZN8CryptoPP22BufferedTransformation19SetRetrievalChannelERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", 
                "_ZN8CryptoPP22BufferedTransformation3GetERh", 
                "__cxa_finalize", 
                "__gmon_start__", 
                "libusb_claim_interface", 
                "_ZN8CryptoPP18HashTransformation15TruncatedVerifyEPKhm", 
                "_ZN8CryptoPP22BufferedTransformation7SkipAllEv", 
                "_ZN8CryptoPP22BufferedTransformation6AttachEPS0_", 
                "_ZN8CryptoPP11StringStore11TransferTo2ERNS_22BufferedTransformationERyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb", 
                "__cxa_free_exception", 
                "_ZN8CryptoPP22BufferedTransformation19TransferMessagesTo2ERS0_RjRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb", 
                "__cxa_atexit", 
                "memcmp", 
                "exit"
            ], 
            "rpm": "tegrarcm-1.7-5.fc27.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " tegrarcm", 
            "License": " BSD and and Redistributable, no modification permitted", 
            "URL": " https://github.com/NVIDIA/tegrarcm", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-10.phx2.fedoraproject.org", 
            "Description": "\nThis program is used to send code to a Tegra device in recovery mode.\nIt does not supported locked devices with an encrypted boot key, only\nopen devices such as the ventana, cardhu, or dalmore reference boards.\nIt is not capable of flashing firmware to a device, but can be used to\ndownload firmware that is then capable of flashing.  For example in\nChromeOS tegrarcm is used to download a special build of u-boot to the\ntarget Tegra device with a payload that it then flashes to the boot\ndevice.\n", 
            "Build Date": " Fri 04 Aug 2017 08:11:30 PM EDT", 
            "Source RPM": " tegrarcm-1.7-5.fc27.src.rpm", 
            "Version": " 1.7", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Sat 05 Aug 2017 06:30:27 PM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 5.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Send code to a Tegra device in recovery mode", 
            "Size": " 639687"
        }
    }
}