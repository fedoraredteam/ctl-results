{
    "results": {
        "usr/bin/dvipost": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/dvipost", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, normal executable!", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "report-functions": [
                "strrchr", 
                "_IO_putc", 
                "__libc_start_main", 
                "rewind", 
                "free", 
                "strlen", 
                "puts", 
                "perror", 
                "fread", 
                "memcpy", 
                "__gmon_start__", 
                "fork", 
                "fputs", 
                "__xstat", 
                "time", 
                "__vfprintf_chk", 
                "ungetc", 
                "strtol", 
                "ferror", 
                "__stack_chk_fail", 
                "closedir", 
                "strtod", 
                "tmpfile", 
                "qsort", 
                "malloc", 
                "exit", 
                "fflush", 
                "_IO_getc", 
                "strcpy", 
                "strcmp", 
                "__fprintf_chk", 
                "popen", 
                "__printf_chk", 
                "opendir", 
                "fgets", 
                "__ctype_b_loc", 
                "fopen", 
                "fclose", 
                "putchar", 
                "strchr", 
                "__sprintf_chk", 
                "waitpid", 
                "execvp"
            ], 
            "rpm": "tetex-dvipost-1.1-23.fc26.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Applications/Publishing", 
            "Name": " tetex-dvipost", 
            "License": " GPLv2+", 
            "URL": " http://efeu.cybertec.at/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildhw-03.phx2.fedoraproject.org", 
            "Description": "\nThe command dvipost is a post procesor for dvi files, created by latex\nor tex. It is used for special modes, which normally needs the support\nof dvi drivers (such as dvips). With dvipost, this features could be\nimplemented independent of the preferred driver. Currently, the post\nprocessor supports layout raster, change bars and overstrike mode.\n", 
            "Build Date": " Sat 11 Feb 2017 12:15:30 PM EST", 
            "Source RPM": " tetex-dvipost-1.1-23.fc26.src.rpm", 
            "Version": " 1.1", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Sat 25 Feb 2017 06:03:57 PM EST, Key ID f55e7430f5282ee4", 
            "Release": " 23.fc26", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " LaTeX post filter command to support change bars and overstrike mode", 
            "Size": " 71636"
        }
    }
}