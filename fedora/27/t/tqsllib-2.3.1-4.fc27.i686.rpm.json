{
    "results": {
        "usr/lib/libtqsllib_so_2_5": {
            "report-functions": [
                "strcmp", 
                "fopen", 
                "OPENSSL_sk_dup", 
                "X509_EXTENSION_get_object", 
                "BIO_push", 
                "closedir", 
                "fputc", 
                "X509_STORE_new", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_", 
                "strtod", 
                "ferror", 
                "BIO_read", 
                "_Znwj", 
                "__cxa_begin_catch", 
                "BASIC_CONSTRAINTS_free", 
                "OBJ_nid2obj", 
                "X509_check_issued", 
                "X509_STORE_CTX_set_purpose", 
                "_ZNSt8ios_baseC2Ev", 
                "PKCS12_init", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate", 
                "BIO_free", 
                "getenv", 
                "_ZSt20__throw_length_errorPKc", 
                "X509_free", 
                "PKCS7_free", 
                "memmove", 
                "time", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcjj", 
                "_ZNSt8ios_baseD2Ev", 
                "PKCS12_free", 
                "_ZNSt8ios_base4InitD1Ev", 
                "PKCS12_pack_p7encdata", 
                "memcmp", 
                "X509_get_issuer_name", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode", 
                "ERR_clear_error", 
                "PEM_write_bio_PUBKEY", 
                "X509_EXTENSION_get_data", 
                "XML_ParserFree", 
                "readdir", 
                "BIO_s_mem", 
                "X509_ATTRIBUTE_set1_object", 
                "PKCS12_set_mac", 
                "PKCS12_add_friendlyname_utf8", 
                "EVP_PKEY_assign", 
                "fgets", 
                "PEM_X509_INFO_read_bio", 
                "BIO_new_file", 
                "RSA_generate_key_ex", 
                "ASN1_STRING_get0_data", 
                "EVP_des_ede3_cbc", 
                "free", 
                "XML_SetUserData", 
                "OBJ_txt2obj", 
                "BIO_ctrl", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "OPENSSL_sk_shift", 
                "X509_ATTRIBUTE_set1_data", 
                "_ZNSo3putEc", 
                "mkdir", 
                "_Unwind_Resume", 
                "_Znaj", 
                "snprintf", 
                "OPENSSL_sk_free", 
                "ASN1_TYPE_set", 
                "X509_dup", 
                "XML_SetEndElementHandler", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_", 
                "_ITM_registerTMCloneTable", 
                "EVP_PKEY_new", 
                "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base", 
                "db_strerror", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "__cxa_end_catch", 
                "EVP_PKEY_free", 
                "strtok", 
                "__xstat", 
                "ASN1_INTEGER_get", 
                "fputs", 
                "X509_REQ_set_version", 
                "PKCS12_SAFEBAG_get0_attrs", 
                "__cxa_throw_bad_array_new_length", 
                "strstr", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEEC1Ev", 
                "_ZNSt6localeD1Ev", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev", 
                "_ZdlPv", 
                "PKCS12_SAFEBAG_create_cert", 
                "i2t_ASN1_OBJECT", 
                "ASN1_INTEGER_to_BN", 
                "strcasecmp", 
                "BIO_free_all", 
                "malloc", 
                "db_create", 
                "X509_get0_notAfter", 
                "PKCS12_SAFEBAG_create_pkcs8_encrypt", 
                "RAND_status", 
                "X509_digest", 
                "XML_Parse", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKcj", 
                "PEM_write_bio_PrivateKey", 
                "ASN1_TYPE_new", 
                "OPENSSL_asc2uni", 
                "gzread", 
                "RAND_file_name", 
                "OPENSSL_uni2asc", 
                "setlocale", 
                "__cxa_guard_release", 
                "PKCS12_SAFEBAG_get_bag_nid", 
                "X509_STORE_CTX_init", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc", 
                "fclose", 
                "CRYPTO_free", 
                "strchr", 
                "opendir", 
                "X509_NAME_oneline", 
                "setenv", 
                "EVP_MD_CTX_free", 
                "BIO_ctrl_pending", 
                "fflush", 
                "_ZdlPvj", 
                "X509_STORE_CTX_set0_trusted_stack", 
                "__vfprintf_chk", 
                "ERR_peek_error", 
                "OBJ_obj2txt", 
                "EVP_PKEY2PKCS8", 
                "strdup", 
                "strlen", 
                "_ZSt17__throw_bad_allocv", 
                "X509_verify_cert", 
                "OBJ_obj2nid", 
                "PKCS12_SAFEBAG_get0_attr", 
                "XML_SetCharacterDataHandler", 
                "_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_", 
                "gzopen", 
                "PEM_read_bio_X509", 
                "__snprintf_chk", 
                "getpid", 
                "EVP_sha256", 
                "_ZNKSt5ctypeIcE13_M_widen_initEv", 
                "X509_get_ext_count", 
                "OBJ_create", 
                "PEM_write_bio_X509_REQ", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "PKCS12_SAFEBAG_get1_cert", 
                "_ZNSt12__basic_fileIcED1Ev", 
                "EVP_MD_CTX_new", 
                "gzrewind", 
                "_ZSt19__throw_logic_errorPKc", 
                "_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev", 
                "PEM_read_bio_PUBKEY", 
                "PKCS12_unpack_p7data", 
                "X509_get_ext", 
                "_ZNSt14basic_ofstreamIcSt11char_traitsIcEE5closeEv", 
                "isspace", 
                "PKCS12_pack_authsafes", 
                "ctime", 
                "EVP_DigestInit", 
                "X509_get_ext_d2i", 
                "PKCS12_verify_mac", 
                "OPENSSL_sk_new_null", 
                "OBJ_txt2nid", 
                "gzclose", 
                "OPENSSL_sk_num", 
                "__cxa_finalize", 
                "ERR_error_string_n", 
                "X509_NAME_ENTRY_get_object", 
                "X509_NAME_entry_count", 
                "X509_REQ_get_subject_name", 
                "_ZNSt8ios_base4InitC1Ev", 
                "strtol", 
                "X509_REQ_set_pubkey", 
                "_ZNSt14basic_ofstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode", 
                "RAND_load_file", 
                "PKCS12_SAFEBAG_free", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc", 
                "X509_issuer_and_serial_cmp", 
                "__gxx_personality_v0", 
                "__ctype_b_loc", 
                "__cxa_rethrow", 
                "BN_new", 
                "__ctype_toupper_loc", 
                "BIO_new_mem_buf", 
                "OPENSSL_sk_pop_free", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj", 
                "_ZSt24__throw_out_of_range_fmtPKcz", 
                "_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_", 
                "db_env_create", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_", 
                "X509_STORE_CTX_set_verify_cb", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj", 
                "_ZSt16__throw_bad_castv", 
                "PEM_read_bio_RSAPrivateKey", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_", 
                "X509_get_pubkey", 
                "d2i_PKCS12_bio", 
                "PKCS12_SAFEBAG_get_nid", 
                "X509_STORE_free", 
                "X509_NAME_get_entry", 
                "_ZNSo5flushEv", 
                "X509_REQ_new", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcj", 
                "ASN1_OBJECT_free", 
                "BN_bn2hex", 
                "X509_STORE_set_verify_cb", 
                "PKCS12_unpack_p7encdata", 
                "__cxa_atexit", 
                "BN_set_word", 
                "X509_get_subject_name", 
                "strncmp", 
                "PKCS12_decrypt_skey", 
                "calloc", 
                "_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1Ev", 
                "EVP_PKEY_cmp", 
                "ASN1_STRING_length", 
                "X509_STORE_CTX_get0_chain", 
                "X509_INFO_free", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcjj", 
                "_ITM_deregisterTMCloneTable", 
                "X509_STORE_CTX_new", 
                "XML_SetStartElementHandler", 
                "qsort", 
                "EVP_sha1", 
                "strerror", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj", 
                "PEM_write_bio_X509", 
                "X509_STORE_CTX_set_flags", 
                "__memcpy_chk", 
                "RSA_new", 
                "fgetc", 
                "_ZdaPv", 
                "EVP_DigestUpdate", 
                "EVP_PKEY_size", 
                "gmtime", 
                "__stack_chk_fail", 
                "X509_get0_notBefore", 
                "__gmon_start__", 
                "EVP_VerifyFinal", 
                "fseek", 
                "X509_STORE_CTX_free", 
                "BIO_f_base64", 
                "X509_get_serialNumber", 
                "X509_ATTRIBUTE_new", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "X509_STORE_CTX_get_error", 
                "X509_NAME_add_entry_by_NID", 
                "BN_free", 
                "BIO_write", 
                "fwrite", 
                "strncat", 
                "BN_ucmp", 
                "PKCS8_PRIV_KEY_INFO_free", 
                "PKCS12_pack_p7data", 
                "ERR_get_error", 
                "unlink", 
                "PKCS12_unpack_authsafes", 
                "OPENSSL_sk_push", 
                "BIO_new_fp", 
                "kill", 
                "X509_REQ_free", 
                "XML_ParserCreate", 
                "OPENSSL_sk_value", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_i", 
                "EVP_SignFinal", 
                "RSA_free", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj", 
                "__errno_location", 
                "sscanf", 
                "OpenSSL_version_num", 
                "X509_REQ_sign", 
                "rename", 
                "__strncat_chk", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEED1Ev", 
                "PKCS12_add_localkeyid", 
                "X509_NAME_ENTRY_get_data", 
                "strncpy", 
                "i2d_PKCS12_bio", 
                "BIO_new", 
                "__fprintf_chk", 
                "toupper", 
                "X509_verify_cert_error_string"
            ], 
            "rpm": "tqsllib-2.3.1-4.fc27.i686.rpm", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libtqsllib.so.2.5"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " tqsllib", 
            "License": " BSD", 
            "URL": " http://sourceforge.net/projects/trustedqsl/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-17.phx2.fedoraproject.org", 
            "Source RPM": " trustedqsl-2.3.1-4.fc27.src.rpm", 
            "Description": "\nThe TrustedQSL library is used for generating digitally signed\nQSO records (records of Amateur Radio contacts). This package\ncontains the library and configuration files needed to run\nTrustedQSL applications.\n", 
            "Build Date": " Mon 11 Sep 2017 12:29:13 PM EDT", 
            "Epoch": " 1", 
            "Version": " 2.3.1", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Wed 13 Sep 2017 03:48:55 PM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 4.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " TrustedQSL library", 
            "Size": " 467397"
        }
    }
}