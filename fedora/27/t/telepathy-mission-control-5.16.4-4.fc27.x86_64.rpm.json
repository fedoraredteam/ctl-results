{
    "results": {
        "usr/bin/mc-tool": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/mc-tool", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "g_list_free_full", 
                "g_str_has_prefix", 
                "g_free", 
                "tp_account_reconnect_finish", 
                "tp_account_get_normalized_name", 
                "tp_account_manager_create_account_finish", 
                "g_strfreev", 
                "strchr", 
                "tp_proxy_prepare_finish", 
                "g_list_sort", 
                "g_strdup_printf", 
                "tp_account_set_icon_name_async", 
                "__fprintf_chk", 
                "_ITM_registerTMCloneTable", 
                "tp_account_get_storage_provider", 
                "tp_account_get_connection", 
                "__printf_chk", 
                "g_type_init", 
                "g_type_name", 
                "g_hash_table_new_full", 
                "g_hash_table_iter_next", 
                "strtol", 
                "g_value_set_string", 
                "g_hash_table_iter_init", 
                "tp_proxy_get_factory", 
                "g_strjoinv", 
                "tp_account_get_feature_quark_core", 
                "g_value_unset", 
                "exit", 
                "g_type_check_instance_cast", 
                "tp_account_update_parameters_async", 
                "g_strsplit", 
                "g_value_set_uint", 
                "tp_account_set_icon_name_finish", 
                "tp_account_get_connection_status", 
                "tp_account_get_service", 
                "g_datalist_get_data", 
                "tp_account_set_enabled_finish", 
                "tp_account_get_supersedes", 
                "tp_account_get_connect_automatically", 
                "__gmon_start__", 
                "g_ascii_strcasecmp", 
                "tp_account_is_valid", 
                "__cxa_finalize", 
                "dbus_g_object_path_get_g_type", 
                "tp_simple_client_factory_add_account_features", 
                "tp_account_manager_dup_valid_accounts", 
                "__xpg_basename", 
                "g_str_hash", 
                "g_type_check_value_holds", 
                "tp_account_get_feature_quark_addressing", 
                "g_ptr_array_new", 
                "tp_account_get_nickname", 
                "tp_proxy_prepare_async", 
                "tp_account_get_uri_schemes", 
                "tp_account_set_connect_automatically_finish", 
                "tp_account_set_nickname_async", 
                "g_malloc0", 
                "g_value_dup_boxed", 
                "g_variant_unref", 
                "tp_asv_new", 
                "g_main_loop_new", 
                "tp_simple_client_factory_new", 
                "g_value_dup_string", 
                "g_ptr_array_add", 
                "g_str_equal", 
                "g_main_loop_quit", 
                "tp_account_set_enabled_async", 
                "tp_simple_client_factory_ensure_account", 
                "__stack_chk_fail", 
                "g_variant_print", 
                "tp_account_get_parameters", 
                "tp_account_get_display_name", 
                "tp_account_set_automatic_presence_finish", 
                "tp_account_get_path_suffix", 
                "g_return_if_fail_warning", 
                "tp_account_is_enabled", 
                "g_value_get_uint", 
                "g_value_set_boxed", 
                "tp_dbus_daemon_dup", 
                "tp_account_remove_finish", 
                "g_strdup", 
                "tp_account_request_presence_finish", 
                "strlen", 
                "g_ptr_array_unref", 
                "tp_account_get_requested_presence", 
                "tp_account_get_current_presence", 
                "g_value_get_int", 
                "tp_account_remove_async", 
                "g_hash_table_replace", 
                "g_value_init", 
                "_ITM_deregisterTMCloneTable", 
                "g_datalist_id_set_data_full", 
                "g_object_unref", 
                "tp_proxy_get_object_path", 
                "g_log", 
                "tp_account_dup_storage_identifier_variant", 
                "g_main_loop_unref", 
                "tp_account_set_nickname_finish", 
                "g_error_free", 
                "g_ascii_strncasecmp", 
                "tp_account_get_type", 
                "tp_account_manager_get_type", 
                "g_main_loop_run", 
                "tp_account_set_display_name_finish", 
                "g_value_set_int", 
                "tp_account_get_automatic_presence", 
                "tp_account_get_changing_presence", 
                "__libc_start_main", 
                "g_clear_error", 
                "g_quark_from_static_string", 
                "tp_account_get_icon_name", 
                "tp_account_update_parameters_finish", 
                "tp_account_get_storage_restrictions", 
                "tp_account_get_feature_quark_storage", 
                "puts", 
                "tp_account_reconnect_async", 
                "strtoul", 
                "tp_account_manager_new", 
                "tp_account_set_connect_automatically_async", 
                "tp_account_set_automatic_presence_async", 
                "g_hash_table_lookup", 
                "tp_account_set_service_finish", 
                "strcmp", 
                "g_value_set_boolean", 
                "tp_account_manager_create_account_async", 
                "g_strdup_value_contents", 
                "tp_account_set_service_async", 
                "g_value_get_boolean"
            ], 
            "rpm": "telepathy-mission-control-5.16.4-4.fc27.x86_64.rpm"
        }, 
        "usr/lib64/libmission-control-plugins_so_0_5_1": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/lib64/libmission-control-plugins.so.0.5.1", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "g_type_check_instance_cast", 
                "g_type_interface_peek", 
                "tp_asv_get_uint32", 
                "tp_strdiff", 
                "g_dir_open", 
                "g_str_has_prefix", 
                "dbus_g_method_return_error", 
                "g_getenv", 
                "g_quark_to_string", 
                "g_str_hash", 
                "g_return_if_fail_warning", 
                "g_cclosure_marshal_VOID__STRING", 
                "g_strdup", 
                "_ITM_registerTMCloneTable", 
                "g_signal_emit", 
                "g_module_close", 
                "g_simple_async_result_new", 
                "g_list_length", 
                "g_dir_read_name", 
                "tp_asv_get_string", 
                "g_signal_new", 
                "tp_error_quark", 
                "g_error_new", 
                "g_simple_async_result_get_type", 
                "__cxa_finalize", 
                "g_once_init_leave", 
                "tp_proxy_get_factory", 
                "g_type_check_instance_is_fundamentally_a", 
                "g_list_prepend", 
                "g_build_filename", 
                "tp_simple_client_factory_ensure_channel", 
                "tp_simple_client_factory_new", 
                "g_simple_async_result_propagate_error", 
                "g_type_register_static", 
                "tp_simple_client_factory_ensure_connection", 
                "g_module_symbol", 
                "g_value_peek_pointer", 
                "g_quark_try_string", 
                "_ITM_deregisterTMCloneTable", 
                "g_str_equal", 
                "g_module_open", 
                "g_type_check_instance_is_a", 
                "g_type_name", 
                "g_type_check_value", 
                "g_hash_table_new", 
                "g_slice_alloc0", 
                "__gmon_start__", 
                "g_simple_async_result_complete_in_idle", 
                "g_once_init_enter", 
                "g_module_error", 
                "tp_dbus_daemon_dup", 
                "g_slice_free1", 
                "g_object_unref", 
                "dbus_g_error_quark", 
                "g_hash_table_ref", 
                "g_free", 
                "g_module_make_resident", 
                "g_set_error", 
                "g_dir_close", 
                "g_log", 
                "g_error_free", 
                "g_parse_debug_string", 
                "g_strcmp0", 
                "__stack_chk_fail", 
                "g_type_interface_add_prerequisite", 
                "g_hash_table_unref", 
                "g_str_has_suffix", 
                "g_object_ref"
            ], 
            "rpm": "telepathy-mission-control-5.16.4-4.fc27.x86_64.rpm"
        }, 
        "usr/bin/mc-wait-for-name": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/bin/mc-wait-for-name", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "g_main_loop_ref", 
                "g_main_loop_quit", 
                "g_option_context_add_main_entries", 
                "g_source_remove", 
                "setlocale", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "tp_dbus_check_valid_bus_name", 
                "g_type_init", 
                "_ITM_deregisterTMCloneTable", 
                "g_main_loop_run", 
                "tp_dbus_daemon_watch_name_owner", 
                "g_main_loop_new", 
                "__cxa_finalize", 
                "g_object_unref", 
                "g_set_prgname", 
                "tp_dbus_daemon_dup", 
                "g_option_context_parse", 
                "tp_cli_dbus_daemon_call_start_service_by_name", 
                "g_error_free", 
                "g_timeout_add_seconds", 
                "g_log", 
                "g_idle_add", 
                "g_option_context_new", 
                "g_main_loop_unref"
            ], 
            "rpm": "telepathy-mission-control-5.16.4-4.fc27.x86_64.rpm"
        }, 
        "usr/libexec/mission-control-5": {
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "filename": "usr/libexec/mission-control-5", 
            "complexity": {
                "r2aa": "failed: ERROR: Cannot find radare2 in PATH"
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "report-functions": [
                "mcp_account_manager_get_unique_name", 
                "tp_vardict_get_int64", 
                "g_key_file_get_uint64", 
                "g_dbus_proxy_get_cached_property", 
                "g_value_set_static_boxed", 
                "tp_connection_manager_param_is_secret", 
                "g_key_file_get_integer", 
                "g_key_file_remove_key", 
                "tp_vardict_get_object_path", 
                "mcp_list_objects", 
                "mcp_request_get_type", 
                "tp_svc_interface_set_dbus_properties_info", 
                "g_cclosure_marshal_VOID__STRING", 
                "g_type_check_class_cast", 
                "tp_svc_channel_dispatch_operation_emit_finished", 
                "g_file_get_uri", 
                "__libc_start_main", 
                "g_key_file_set_string_list", 
                "tp_connection_upgrade_contacts_async", 
                "dbus_error_init", 
                "g_variant_new_object_path", 
                "mcp_account_storage_get_type", 
                "g_value_take_string", 
                "strlen", 
                "tp_channel_dup_immutable_properties", 
                "tp_cli_channel_interface_destroyable_call_destroy", 
                "tp_svc_channel_dispatcher_implement_delegate_channels", 
                "g_timeout_add_full", 
                "mcp_account_storage_set_parameter", 
                "g_param_spec_pointer", 
                "tp_proxy_get_type", 
                "tp_type_dbus_hash_s_28ubb_29", 
                "tp_g_value_slice_new", 
                "g_hash_table_foreach", 
                "g_value_dup_string", 
                "tp_cli_dbus_properties_call_get_all", 
                "tp_contact_get_identifier", 
                "g_strv_get_type", 
                "tp_proxy_get_factory", 
                "tp_cli_connection_call_disconnect", 
                "g_hash_table_iter_next", 
                "tp_proxy_get_bus_name", 
                "tp_cli_connection_call_get_interfaces", 
                "g_value_get_boxed", 
                "g_list_delete_link", 
                "g_str_equal", 
                "g_io_channel_unix_new", 
                "_exit", 
                "tp_dbus_errors_quark", 
                "g_type_check_value_holds", 
                "tp_channel_get_channel_type_id", 
                "g_get_system_data_dirs", 
                "g_value_transform", 
                "fclose", 
                "g_key_file_get_string", 
                "g_rmdir", 
                "g_slice_alloc0", 
                "tp_asv_new", 
                "g_warn_message", 
                "g_key_file_free", 
                "g_value_set_pointer", 
                "tp_contact_get_avatar_file", 
                "tp_value_array_unpack", 
                "g_parse_debug_string", 
                "g_strcmp0", 
                "tp_connection_manager_get_type", 
                "g_path_get_dirname", 
                "tp_svc_dbus_properties_get_type", 
                "tp_iface_quark_channel_type_tubes", 
                "g_value_array_append", 
                "g_value_get_uchar", 
                "tp_dbus_properties_mixin_iface_init", 
                "g_key_file_set_boolean", 
                "tp_proxy_has_interface_by_id", 
                "tp_iface_quark_client_observer", 
                "g_mkdir_with_parents", 
                "g_set_error", 
                "tp_weak_ref_dup_object", 
                "tp_intset_destroy", 
                "tp_connection_manager_get_protocol_object", 
                "g_unix_fd_list_get_length", 
                "tp_protocol_get_param", 
                "g_quark_from_string", 
                "tp_cli_dbus_properties_connect_to_properties_changed", 
                "g_type_register_static", 
                "tp_asv_get_uint32", 
                "mcp_account_storage_get_additional_info", 
                "tp_type_dbus_hash_ss", 
                "g_list_last", 
                "g_dir_read_name", 
                "tp_proxy_get_object_path", 
                "g_slice_free1", 
                "g_settings_new", 
                "g_queue_new", 
                "tp_svc_channel_dispatcher_interface_operation_list_emit_new_dispatch_operation", 
                "mcp_dispatch_operation_policy_handler_is_suitable_async", 
                "g_type_check_instance_is_fundamentally_a", 
                "g_quark_to_string", 
                "tp_svc_channel_dispatcher_interface_operation_list_emit_dispatch_operation_finished", 
                "g_strdelimit", 
                "tp_iface_quark_connection_interface_avatars", 
                "g_snprintf", 
                "g_hash_table_ref", 
                "g_type_check_value", 
                "g_value_array_free", 
                "g_value_set_int64", 
                "g_value_set_static_string", 
                "g_list_copy", 
                "g_slist_prepend", 
                "g_type_set_qdata", 
                "tp_proxy_get_dbus_connection", 
                "tp_cli_client_interface_requests_call_remove_request", 
                "tp_connection_manager_param_is_required", 
                "remove", 
                "tp_dbus_check_valid_bus_name", 
                "g_variant_ref", 
                "dbus_message_get_args", 
                "tp_svc_channel_dispatcher_implement_create_channel", 
                "tp_iface_quark_connection_interface_contact_capabilities", 
                "tp_proxy_borrow_interface_by_id", 
                "tp_proxy_add_interface_by_id", 
                "g_object_get_property", 
                "g_dbus_connection_signal_subscribe", 
                "tp_asv_set_boxed", 
                "g_network_monitor_get_default", 
                "chmod", 
                "g_object_set_property", 
                "tp_protocol_get_name", 
                "g_hash_table_get_values", 
                "g_param_spec_boxed", 
                "tp_cli_client_approver_call_add_dispatch_operation", 
                "mcp_account_storage_delete", 
                "tp_vardict_get_string", 
                "tp_svc_channel_request_implement_cancel", 
                "strerror", 
                "g_type_add_interface_static", 
                "g_dbus_connection_call_with_unix_fd_list", 
                "tp_svc_channel_dispatch_operation_implement_handle_with_time", 
                "dbus_g_type_get_map", 
                "tp_cli_dbus_properties_call_get", 
                "tp_svc_dbus_properties_implement_get_all", 
                "g_variant_unref", 
                "g_value_array_new", 
                "dbus_g_proxy_end_call", 
                "g_ptr_array_set_free_func", 
                "tp_g_value_slice_dup", 
                "g_value_get_object", 
                "g_assertion_message_expr", 
                "rename", 
                "g_bus_get_finish", 
                "g_type_init", 
                "tp_connection_manager_param_free", 
                "tp_cli_connection_connect_to_new_channel", 
                "g_type_class_adjust_private_offset", 
                "umask", 
                "tp_contact_get_avatar_mime_type", 
                "g_str_has_prefix", 
                "tp_proxy_pending_call_v0_take_results", 
                "g_error_free", 
                "__gmon_start__", 
                "getenv", 
                "mcp_dispatch_operation_policy_get_type", 
                "g_variant_get_uint32", 
                "tp_proxy_prepare_async", 
                "mcp_account_storage_priority", 
                "g_propagate_error", 
                "tp_dbus_check_valid_interface_name", 
                "tp_connection_manager_param_is_dbus_property", 
                "tp_svc_account_implement_remove", 
                "g_value_init", 
                "g_get_home_dir", 
                "g_value_get_int64", 
                "g_type_instance_get_private", 
                "g_unix_fd_list_get", 
                "tp_dbus_daemon_dup", 
                "g_file_load_contents", 
                "g_variant_equal", 
                "tp_cli_connection_call_list_channels", 
                "mcp_account_storage_commit", 
                "g_get_user_data_dir", 
                "tp_svc_channel_dispatch_operation_implement_handle_with", 
                "g_value_get_type", 
                "g_ptr_array_add", 
                "dbus_error_is_set", 
                "g_get_user_cache_dir", 
                "mcp_set_debug", 
                "tp_connection_manager_param_get_default", 
                "g_dbus_proxy_new_finish", 
                "g_malloc", 
                "dbus_g_object_type_install_info", 
                "g_strdup_value_contents", 
                "mcp_account_manager_set_value", 
                "tp_simple_client_factory_get_dbus_daemon", 
                "g_timeout_add_seconds", 
                "tp_simple_client_factory_new", 
                "g_value_set_boolean", 
                "g_value_set_object", 
                "g_strconcat", 
                "tp_debug_sender_log_handler", 
                "tp_channel_leave_async", 
                "dbus_g_proxy_call_no_reply", 
                "fcntl", 
                "strrchr", 
                "g_slist_free_full", 
                "mcp_account_storage_set", 
                "tp_cli_protocol_call_identify_account", 
                "mcp_account_storage_ready", 
                "g_variant_type_checked_", 
                "g_list_append", 
                "g_cclosure_marshal_generic", 
                "tp_connection_dup_contact_by_id_async", 
                "tp_proxy_pending_call_v0_completed", 
                "tp_asv_get_boolean", 
                "mcp_dispatch_operation_get_type", 
                "g_dbus_connection_call_with_unix_fd_list_finish", 
                "tp_cli_connection_interface_avatars_call_set_avatar", 
                "g_malloc0", 
                "g_array_new", 
                "tp_contact_get_presence_type", 
                "g_list_free", 
                "g_variant_is_of_type", 
                "g_hash_table_size", 
                "dbus_connection_add_filter", 
                "g_signal_connect_data", 
                "g_log_set_default_handler", 
                "tp_contact_get_avatar_token", 
                "g_bus_get", 
                "tp_dbus_daemon_cancel_name_owner_watch", 
                "tp_svc_account_emit_removed", 
                "tp_cli_connection_interface_avatars_call_clear_avatar", 
                "tp_svc_account_interface_avatar_get_type", 
                "tp_cli_connection_manager_call_request_connection", 
                "tp_svc_channel_request_implement_proceed", 
                "g_queue_peek_head", 
                "tp_g_value_slice_free", 
                "tp_svc_account_get_type", 
                "tp_svc_channel_dispatcher_implement_present_channel", 
                "tp_dbus_daemon_request_name", 
                "tp_strdiff", 
                "mcp_debug_init", 
                "g_file_test", 
                "g_key_file_load_from_file", 
                "tp_asv_get_boxed", 
                "tp_intset_new", 
                "tp_cli_dbus_properties_call_set", 
                "tp_svc_channel_request_emit_succeeded_with_channel", 
                "g_set_application_name", 
                "mcp_account_storage_set_attribute", 
                "g_list_foreach", 
                "g_hash_table_get_type", 
                "g_dbus_proxy_new_for_bus", 
                "g_value_copy", 
                "g_key_file_new", 
                "tp_channel_get_requested", 
                "tp_iface_quark_channel_type_contact_list", 
                "tp_g_hash_table_update", 
                "tp_cli_connection_interface_requests_call_create_channel", 
                "g_type_class_ref", 
                "g_array_append_vals", 
                "tp_g_signal_connect_object", 
                "g_slice_alloc", 
                "tp_type_dbus_array_oa_7bsv_7d", 
                "g_malloc0_n", 
                "g_ptr_array_new", 
                "tp_channel_get_type", 
                "g_key_file_get_value", 
                "mcp_account_storage_name", 
                "g_log", 
                "g_strdupv", 
                "tp_svc_channel_dispatch_operation_implement_claim", 
                "tp_svc_channel_dispatch_operation_get_type", 
                "tp_channel_get_connection", 
                "g_cclosure_marshal_VOID__VOID", 
                "__cxa_finalize", 
                "mcp_request_policy_get_type", 
                "tp_dbus_daemon_watch_name_owner", 
                "g_unlink", 
                "g_key_file_to_data", 
                "g_hash_table_unref", 
                "g_strerror", 
                "g_value_get_uint64", 
                "dbus_g_connection_lookup_g_object", 
                "g_param_spec_object", 
                "tp_type_dbus_struct_uss", 
                "tp_iface_quark_connection_interface_requests", 
                "_ITM_deregisterTMCloneTable", 
                "__xstat", 
                "g_list_reverse", 
                "__stack_chk_fail", 
                "tp_cli_connection_interface_service_point_connect_to_service_points_changed", 
                "tp_channel_get_feature_quark_group", 
                "nm_client_get_state", 
                "g_strndup", 
                "g_object_steal_qdata", 
                "tp_dbus_properties_mixin_getter_gobject_properties", 
                "g_return_if_fail_warning", 
                "g_value_take_boxed", 
                "g_key_file_set_integer", 
                "tp_svc_account_implement_reconnect", 
                "dbus_g_type_specialized_construct", 
                "tp_svc_account_interface_addressing_implement_set_uri_scheme_association", 
                "g_settings_bind", 
                "tp_connection_manager_new", 
                "_ITM_registerTMCloneTable", 
                "strncmp", 
                "tp_connection_get_self_contact", 
                "g_array_free", 
                "tp_svc_account_emit_account_property_changed", 
                "g_ptr_array_foreach", 
                "dbus_g_proxy_begin_call_with_timeout", 
                "mcp_account_storage_description", 
                "dbus_g_method_return", 
                "g_error_new_literal", 
                "tp_proxy_get_dbus_daemon", 
                "g_timeout_add", 
                "fopen", 
                "g_array_unref", 
                "tp_cli_connection_call_connect", 
                "g_queue_pop_head", 
                "g_cclosure_marshal_VOID__OBJECT", 
                "tp_cli_connection_interface_contact_capabilities_call_update_capabilities", 
                "g_value_set_uchar", 
                "tp_dbus_properties_mixin_make_properties_hash", 
                "tp_svc_channel_dispatcher_get_type", 
                "dbus_g_connection_get_connection", 
                "g_free", 
                "tp_error_quark", 
                "g_strdup", 
                "g_variant_is_object_path", 
                "g_key_file_load_from_data", 
                "g_list_insert_sorted", 
                "tp_type_dbus_struct_ays", 
                "tp_svc_account_manager_emit_account_validity_changed", 
                "g_file_get_contents", 
                "g_value_unset", 
                "tp_type_dbus_struct_oa_7bsv_7d", 
                "g_unix_open_pipe", 
                "g_ptr_array_unref", 
                "tp_connection_manager_param_get_name", 
                "__errno_location", 
                "tp_connection_get_status", 
                "g_dir_open", 
                "tp_svc_channel_dispatch_operation_emit_channel_lost", 
                "mcp_dispatch_operation_policy_handler_is_suitable_finish", 
                "tp_proxy_is_prepared", 
                "tp_connection_upgrade_contacts_finish", 
                "tp_error_get_dbus_name", 
                "tp_asv_set_boolean", 
                "g_value_get_uint", 
                "mcp_account_storage_provider", 
                "dbus_connection_remove_filter", 
                "__fprintf_chk", 
                "tp_dbus_daemon_unregister_object", 
                "dbus_g_type_get_collection", 
                "g_queue_delete_link", 
                "g_quark_try_string", 
                "g_enum_get_value", 
                "mcp_read_dir", 
                "g_ascii_strtoull", 
                "g_object_new", 
                "g_signal_emit_by_name", 
                "g_object_add_weak_pointer", 
                "tp_iface_quark_channel_interface_destroyable", 
                "g_array_sized_new", 
                "tp_svc_account_interface_addressing_get_type", 
                "tp_connection_get_type", 
                "g_idle_add_full", 
                "g_value_set_string", 
                "dbus_error_free", 
                "tp_connection_dup_contact_by_id_finish", 
                "g_list_remove", 
                "tp_asv_take_string", 
                "g_network_monitor_get_network_available", 
                "g_type_get_qdata", 
                "tp_vardict_get_uint64", 
                "write", 
                "tp_asv_get_string", 
                "tp_cli_connection_interface_power_saving_call_set_power_saving", 
                "dbus_bus_add_match", 
                "tp_cli_dbus_daemon_call_list_activatable_names", 
                "tp_dbus_g_method_return_not_implemented", 
                "tp_svc_channel_request_get_type", 
                "g_list_prepend", 
                "g_variant_new", 
                "mcp_request_policy_check", 
                "tp_dbus_properties_mixin_class_init", 
                "tp_proxy_pending_call_v0_new", 
                "tp_iface_quark_client_handler", 
                "g_key_file_set_value", 
                "g_object_get", 
                "tp_type_dbus_array_of_o", 
                "tp_cli_connection_interface_aliasing_call_set_aliases", 
                "tp_proxy_get_invalidated", 
                "g_value_set_int", 
                "tp_cli_connection_interface_requests_connect_to_new_channels", 
                "g_dbus_connection_signal_unsubscribe", 
                "g_variant_get_type_string", 
                "g_dir_close", 
                "mcp_account_storage_create", 
                "tp_escape_as_identifier", 
                "g_value_dup_object", 
                "tp_svc_account_implement_update_parameters", 
                "g_ascii_strtoll", 
                "g_main_loop_quit", 
                "g_param_spec_string", 
                "tp_debug_set_flags", 
                "tp_cli_client_interface_requests_call_add_request", 
                "g_hash_table_new", 
                "g_build_filename", 
                "g_ptr_array_new_with_free_func", 
                "tp_value_array_build", 
                "g_value_set_boxed", 
                "g_key_file_get_keys", 
                "g_value_set_double", 
                "tp_type_dbus_hash_oa_7bsv_7d", 
                "g_assertion_message_cmpstr", 
                "tp_svc_channel_dispatcher_implement_ensure_channel", 
                "g_queue_get_length", 
                "g_key_file_get_groups", 
                "g_object_class_install_property", 
                "g_once_init_enter", 
                "g_string_free", 
                "tp_iface_quark_connection_interface_aliasing", 
                "g_value_get_string", 
                "g_key_file_get_double", 
                "dbus_g_method_return_error", 
                "g_dbus_is_interface_name", 
                "tp_svc_account_manager_emit_account_removed", 
                "tp_iface_quark_client_approver", 
                "g_type_check_instance_is_a", 
                "g_list_free_full", 
                "g_key_file_set_string", 
                "tp_cli_channel_interface_messages_call_send_message", 
                "tp_svc_dbus_properties_emit_properties_changed", 
                "close", 
                "g_hash_table_new_full", 
                "dbus_g_object_register_marshaller", 
                "g_clear_error", 
                "g_queue_foreach", 
                "time", 
                "tp_svc_dbus_properties_implement_get", 
                "g_once_init_leave", 
                "tp_svc_channel_dispatcher_implement_create_channel_with_hints", 
                "tp_svc_account_manager_implement_create_account", 
                "g_io_add_watch", 
                "tp_svc_channel_request_emit_failed", 
                "g_main_loop_run", 
                "g_object_notify", 
                "sigaction", 
                "g_getenv", 
                "tp_strv_contains", 
                "g_hash_table_remove_all", 
                "g_object_ref", 
                "tp_intset_add", 
                "g_assertion_message_error", 
                "g_queue_free", 
                "tp_client_get_type", 
                "g_hash_table_replace", 
                "g_string_append", 
                "mcp_account_storage_owns", 
                "tp_svc_account_manager_get_type", 
                "g_error_copy", 
                "tp_proxy_pending_call_v0_take_pending_call", 
                "tp_svc_channel_request_emit_succeeded", 
                "g_value_get_int", 
                "g_ptr_array_sized_new", 
                "g_error_new", 
                "g_type_parent", 
                "tp_debug_sender_add_message_vprintf", 
                "tp_cli_client_observer_call_observe_channels", 
                "g_object_unref", 
                "g_queue_is_empty", 
                "nm_client_new", 
                "tp_simple_client_factory_ensure_channel", 
                "tp_svc_channel_dispatcher_implement_ensure_channel_with_hints", 
                "g_boxed_free", 
                "tp_dbus_daemon_register_object", 
                "g_intern_static_string", 
                "g_key_file_get_boolean", 
                "g_source_remove", 
                "mcp_account_storage_commit_one", 
                "mcp_dispatch_operation_policy_check", 
                "mcp_account_storage_get", 
                "tp_cli_dbus_daemon_call_list_names", 
                "tp_iface_quark_connection_interface_capabilities", 
                "tp_contact_get_presence_message", 
                "tp_cli_channel_call_close", 
                "g_type_interface_peek", 
                "tp_asv_take_boxed", 
                "g_object_set_qdata_full", 
                "tp_cli_connection_interface_simple_presence_call_set_presence", 
                "tp_vardict_get_boolean", 
                "tp_channel_leave_finish", 
                "dbus_connection_set_exit_on_disconnect", 
                "g_object_weak_ref", 
                "tp_iface_quark_connection_interface_power_saving", 
                "g_key_file_get_int64", 
                "tp_contact_get_handle", 
                "tp_type_dbus_array_of_a_7bsv_7d", 
                "g_value_set_uint", 
                "g_param_spec_int64", 
                "g_list_sort", 
                "g_string_new", 
                "mcp_account_manager_get_type", 
                "g_ptr_array_free", 
                "g_cclosure_marshal_VOID__INT", 
                "g_type_register_static_simple", 
                "g_strdup_printf", 
                "tp_weak_ref_destroy", 
                "tp_asv_set_string", 
                "mcp_account_storage_get_restrictions", 
                "g_type_class_unref", 
                "tp_simple_client_factory_get_type", 
                "g_str_hash", 
                "g_variant_new_tuple", 
                "g_variant_get_child_value", 
                "dbus_g_proxy_new_for_name", 
                "tp_dbus_check_valid_object_path", 
                "tp_contact_get_presence_status", 
                "sigemptyset", 
                "mcp_dbus_acl_authorised_async", 
                "g_key_file_get_string_list", 
                "g_strfreev", 
                "tp_error_get_type", 
                "tp_proxy_prepare_finish", 
                "tp_svc_account_interface_avatar_emit_avatar_changed", 
                "tp_debug_divert_messages", 
                "g_strv_length", 
                "g_hash_table_iter_remove", 
                "g_strrstr", 
                "g_queue_peek_head_link", 
                "g_key_file_set_double", 
                "tp_iface_quark_client_interface_requests", 
                "g_value_dup_boxed", 
                "g_main_loop_unref", 
                "tp_connection_manager_param_get_dbus_signature", 
                "g_value_set_uint64", 
                "g_list_length", 
                "g_quark_from_static_string", 
                "g_object_set", 
                "g_main_loop_new", 
                "g_queue_push_head", 
                "g_list_find", 
                "g_type_class_peek_parent", 
                "g_error_new_valist", 
                "g_dbus_proxy_get_name_owner", 
                "dbus_g_connection_unregister_g_object", 
                "tp_weak_ref_new", 
                "strtol", 
                "g_signal_handler_disconnect", 
                "tp_channel_close_async", 
                "tp_connection_get_feature_quark_connected", 
                "g_cclosure_marshal_VOID__BOOLEAN", 
                "g_value_get_boolean", 
                "dbus_g_value_parse_g_variant", 
                "g_hash_table_add", 
                "g_type_check_instance_cast", 
                "g_variant_classify", 
                "g_hash_table_remove", 
                "dbus_g_method_get_sender", 
                "strcmp", 
                "g_hash_table_contains", 
                "g_key_file_remove_group", 
                "g_type_class_add_private", 
                "mcp_account_storage_list", 
                "g_type_name", 
                "g_param_spec_boolean", 
                "exit", 
                "g_signal_handlers_disconnect_matched", 
                "tp_dbus_daemon_get_type", 
                "g_printerr", 
                "g_file_set_contents", 
                "tp_svc_account_interface_storage_get_type", 
                "mcp_account_storage_get_identifier", 
                "tp_debug_sender_dup", 
                "g_regex_match", 
                "g_queue_push_tail", 
                "g_queue_clear", 
                "tp_type_dbus_struct_ss", 
                "g_hash_table_lookup", 
                "g_object_remove_weak_pointer", 
                "g_signal_emit", 
                "g_hash_table_insert", 
                "dbus_g_connection_register_g_object", 
                "g_object_get_qdata", 
                "dbus_g_object_path_get_g_type", 
                "strchr", 
                "tp_svc_channel_dispatcher_interface_operation_list_get_type", 
                "g_signal_new", 
                "g_variant_print", 
                "tp_connection_manager_get_name", 
                "g_value_get_double", 
                "g_variant_ref_sink", 
                "tp_connection_init_known_interfaces", 
                "g_variant_get", 
                "tp_intset_is_member", 
                "tp_cli_client_handler_call_handle_channels", 
                "tp_protocol_dup_params", 
                "g_set_error_literal", 
                "tp_proxy_or_subclass_hook_on_interface_add", 
                "tp_cli_connection_interface_requests_call_ensure_channel", 
                "tp_dbus_daemon_get_unique_name", 
                "tp_list_connection_names", 
                "tp_cli_connection_interface_avatars_call_get_known_avatar_tokens", 
                "dbus_g_value_build_g_variant", 
                "tp_simple_client_factory_ensure_connection", 
                "tp_svc_dbus_properties_implement_set", 
                "g_hash_table_iter_init", 
                "tp_iface_quark_connection_interface_simple_presence", 
                "g_regex_new", 
                "dbus_message_is_signal", 
                "g_slist_free"
            ], 
            "rpm": "telepathy-mission-control-5.16.4-4.fc27.x86_64.rpm"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " telepathy-mission-control", 
            "License": " LGPLv2", 
            "URL": " http://telepathy.freedesktop.org/wiki/Mission_Control", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-12.phx2.fedoraproject.org", 
            "Source RPM": " telepathy-mission-control-5.16.4-4.fc27.src.rpm", 
            "Description": "\nMission Control, or MC, is a Telepathy component providing a way for\n\"end-user\" applications to abstract some of the details of connection\nmanagers, to provide a simple way to manipulate a bunch of connection\nmanagers at once, and to remove the need to have in each program the\naccount definitions and credentials.\n", 
            "Build Date": " Fri 04 Aug 2017 08:23:04 PM EDT", 
            "Epoch": " 1", 
            "Version": " 5.16.4", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Sat 05 Aug 2017 06:51:29 PM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 4.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Central control for Telepathy connection manager", 
            "Size": " 572258"
        }
    }
}