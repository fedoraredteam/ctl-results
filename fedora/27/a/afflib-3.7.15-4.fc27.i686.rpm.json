{
    "results": {
        "usr/lib/libafflib_so_0_0_0": {
            "report-functions": [
                "fdopen", 
                "BIO_new_mem_buf", 
                "__strncpy_chk", 
                "gmtime_r", 
                "perror", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc", 
                "AES_encrypt", 
                "curl_slist_append", 
                "__fxstat64", 
                "XML_SetElementHandler", 
                "EVP_SealInit", 
                "__moddi3", 
                "exit", 
                "curl_easy_perform", 
                "uncompress", 
                "setvbuf", 
                "clock", 
                "__cxa_allocate_exception", 
                "__assert_fail", 
                "ioctl", 
                "__stack_chk_fail", 
                "strlen", 
                "fopen64", 
                "XML_SetUserData", 
                "islower", 
                "__ctype_b_loc", 
                "_ITM_registerTMCloneTable", 
                "__snprintf_chk", 
                "tolower", 
                "strerror", 
                "EVP_EncryptUpdate", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_rethrow", 
                "X509_get_pubkey", 
                "BIO_free", 
                "strcasecmp", 
                "XML_ErrorString", 
                "BIO_new", 
                "putchar", 
                "__udivdi3", 
                "__open64_2", 
                "open64", 
                "inflate", 
                "_ZdaPvj", 
                "__cxa_atexit", 
                "PEM_read_bio_PrivateKey", 
                "inflateEnd", 
                "flock", 
                "ftruncate64", 
                "_Unwind_Resume", 
                "aio_read64", 
                "__gxx_personality_v0", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "__strcat_chk", 
                "_ZSt24__throw_out_of_range_fmtPKcz", 
                "strstr", 
                "closedir", 
                "popen", 
                "sigaction", 
                "strncmp", 
                "aio_cancel64", 
                "X509_free", 
                "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base", 
                "__gmon_start__", 
                "readdir64", 
                "__memcpy_chk", 
                "AES_decrypt", 
                "__cxa_end_catch", 
                "EVP_SignFinal", 
                "fwrite", 
                "__vfprintf_chk", 
                "feof", 
                "EVP_DecryptUpdate", 
                "curl_global_init", 
                "__stpcpy_chk", 
                "SHA1", 
                "__cxa_begin_catch", 
                "localtime_r", 
                "EVP_OpenInit", 
                "HMAC", 
                "rmdir", 
                "toupper", 
                "_ZdlPv", 
                "_ZSt19__throw_logic_errorPKc", 
                "__xstat64", 
                "umask", 
                "fread", 
                "deflateEnd", 
                "malloc", 
                "EVP_sha1", 
                "lseek64", 
                "curl_easy_init", 
                "aio_error64", 
                "unlink", 
                "XML_Parse", 
                "aio_return64", 
                "strncpy", 
                "getenv", 
                "RAND_bytes", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj", 
                "valloc", 
                "XML_ParserFree", 
                "strrchr", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj", 
                "__cxa_throw", 
                "close", 
                "EVP_MD_CTX_free", 
                "stpcpy", 
                "opendir", 
                "XML_ParserCreate", 
                "memcmp", 
                "_Znaj", 
                "deflateInit2_", 
                "realloc", 
                "memmove", 
                "isspace", 
                "EVP_MD_CTX_new", 
                "EVP_DigestUpdate", 
                "strcpy", 
                "__cxa_finalize", 
                "EVP_CIPHER_CTX_free", 
                "BIO_ctrl", 
                "sigaddset", 
                "memset", 
                "inflateInit_", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj", 
                "isalpha", 
                "__printf_chk", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "MD5", 
                "OPENSSL_init_crypto", 
                "write", 
                "__realpath_chk", 
                "fclose", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj", 
                "sscanf", 
                "EVP_PKEY_free", 
                "strdup", 
                "puts", 
                "__errno_location", 
                "__ctype_toupper_loc", 
                "curl_easy_cleanup", 
                "XML_GetErrorCode", 
                "__cxa_throw_bad_array_new_length", 
                "EVP_get_digestbyname", 
                "EVP_SealFinal", 
                "XML_SetCharacterDataHandler", 
                "pclose", 
                "mkstemp64", 
                "__ctype_tolower_loc", 
                "PEM_read_bio_X509", 
                "EVP_VerifyFinal", 
                "__divmoddi4", 
                "time", 
                "compress2", 
                "__strcpy_chk", 
                "curl_easy_getinfo", 
                "free", 
                "fflush", 
                "strtok_r", 
                "strtol", 
                "__divdi3", 
                "_ZSt20__throw_length_errorPKc", 
                "__fprintf_chk", 
                "deflate", 
                "AES_set_encrypt_key", 
                "sigprocmask", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_", 
                "strftime", 
                "ftello64", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "fputs", 
                "AES_set_decrypt_key", 
                "EVP_PKEY_size", 
                "EVP_OpenFinal", 
                "sigwait", 
                "_Znwj", 
                "localtime", 
                "sigfillset", 
                "__udivmoddi4", 
                "curl_slist_free_all", 
                "XML_GetCurrentLineNumber", 
                "fileno", 
                "_ZdaPv", 
                "EVP_DigestInit", 
                "inflateInit2_", 
                "__isoc99_sscanf", 
                "EVP_CIPHER_CTX_new", 
                "BIO_new_file", 
                "strchr", 
                "_ZdlPvj", 
                "__sprintf_chk", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_ZNSt8ios_base4InitD1Ev", 
                "EVP_aes_256_cbc", 
                "warnx", 
                "strcmp", 
                "munmap", 
                "fseeko64", 
                "access", 
                "fputc", 
                "sigemptyset", 
                "curl_easy_setopt", 
                "AES_cbc_encrypt", 
                "mmap64", 
                "aio_write64", 
                "BIO_s_mem", 
                "fsync", 
                "PEM_write_bio_X509", 
                "read", 
                "mkdir", 
                "inflateReset", 
                "snprintf", 
                "calloc", 
                "rename", 
                "strtoul", 
                "errx"
            ], 
            "rpm": "afflib-3.7.15-4.fc27.i686.rpm", 
            "complexity": {
                "r2aa": {
                    "afCc": null, 
                    "afC": null
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libafflib.so.0.0.0"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " afflib", 
            "License": " BSD with advertising", 
            "URL": " https://github.com/sshock/AFFLIBv3", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-32.phx2.fedoraproject.org", 
            "Description": "\nAFF\u00ae is an open and extensible file format designed to store disk images and\nassociated metadata.\nafflib is library for support of the Advanced Forensic Format (AFF).\n", 
            "Build Date": " Wed 02 Aug 2017 01:41:50 PM EDT", 
            "Source RPM": " afflib-3.7.15-4.fc27.src.rpm", 
            "Version": " 3.7.15", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Sat 05 Aug 2017 11:08:54 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 4.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Library to support the Advanced Forensic Format", 
            "Size": " 541738"
        }
    }
}