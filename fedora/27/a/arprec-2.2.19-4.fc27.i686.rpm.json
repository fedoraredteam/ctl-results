{
    "results": {
        "usr/lib/libarprec_so_0_0_0": {
            "report-functions": [
                "__gmon_start__", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj", 
                "_ZNSi6ignoreEv", 
                "_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev", 
                "_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE7_M_syncEPcjj", 
                "__cxa_finalize", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE9pbackfailEi", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsgetnEPci", 
                "_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "_ZNSt6localeD1Ev", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate", 
                "_ZSt2wsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_", 
                "_ZNSo3putEc", 
                "_ZNSo5flushEv", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj", 
                "__gxx_personality_v0", 
                "ldexp", 
                "log10", 
                "atan2", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsputnEPKci", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEED1Ev", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_i", 
                "ceil", 
                "pow", 
                "__sprintf_chk", 
                "_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev", 
                "_ZSt16__throw_bad_castv", 
                "strtol", 
                "_ZNKSt5ctypeIcE13_M_widen_initEv", 
                "_ZNSi6ignoreEi", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv", 
                "_ZNSi7putbackEc", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE6setbufEPci", 
                "_ZSt24__throw_out_of_range_fmtPKcz", 
                "_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_", 
                "strcpy", 
                "__assert_fail", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_ZdlPv", 
                "_ZNSt12__basic_fileIcED1Ev", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE5uflowEv", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE9showmanycEv", 
                "__cxa_atexit", 
                "exit", 
                "log", 
                "_ZNSt8ios_baseC2Ev", 
                "__cxa_guard_abort", 
                "strlen", 
                "sqrt", 
                "_Znaj", 
                "_ZSt19__throw_logic_errorPKc", 
                "_ZNSt6localeC1Ev", 
                "__cxa_throw_bad_array_new_length", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode", 
                "exp", 
                "_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_", 
                "_Unwind_Resume", 
                "_ZdaPv", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE5imbueERKSt6locale", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE7seekoffExSt12_Ios_SeekdirSt13_Ios_Openmode", 
                "_ZNSirsERi", 
                "_ZNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "_ITM_registerTMCloneTable", 
                "_ZNSi4readEPci", 
                "_ZNSi10_M_extractIdEERSiRT_", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE4syncEv", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj", 
                "sincos", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE7seekposESt4fposI11__mbstate_tESt13_Ios_Openmode", 
                "_ZNSt8ios_baseD2Ev", 
                "malloc", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEEC1Ev", 
                "_ITM_deregisterTMCloneTable", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_", 
                "_ZNSolsEi", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc", 
                "rand", 
                "free", 
                "_ZNSt8ios_base4InitD1Ev", 
                "_ZNSo5writeEPKci", 
                "__cxa_guard_acquire", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "floor", 
                "__printf_chk", 
                "_Znwj", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj", 
                "__cxa_guard_release", 
                "_ZdlPvj", 
                "_ZdaPvj", 
                "_ZNSo9_M_insertIdEERSoT_", 
                "__stack_chk_fail", 
                "strncpy", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc"
            ], 
            "rpm": "arprec-2.2.19-4.fc27.i686.rpm", 
            "complexity": {
                "r2aa": {
                    "afCc": null, 
                    "afC": null
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libarprec.so.0.0.0"
        }, 
        "usr/lib/libarprec_f_main_so_0_0_0": {
            "report-functions": [
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__"
            ], 
            "rpm": "arprec-2.2.19-4.fc27.i686.rpm", 
            "complexity": {
                "r2aa": {
                    "afCc": 1, 
                    "afC": 19
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libarprec_f_main.so.0.0.0"
        }, 
        "usr/lib/libarprecmod_so_0_0_0": {
            "report-functions": [
                "malloc", 
                "c_mpmul_zq", 
                "c_mpneg_z", 
                "_ZN2mp10prec_wordsE", 
                "fpu_fix_end", 
                "c_mparg", 
                "c_mpeq_zx", 
                "c_mpcssnf", 
                "_ZN2mp7mp_initEiPKcb", 
                "c_mplog10", 
                "c_mpcos", 
                "c_mpgtt", 
                "_gfortran_st_read_done", 
                "c_mpmod", 
                "c_mpltt_i", 
                "c_mpsub_zx", 
                "_ZN7mp_real3_piE", 
                "c_mpeq_zz", 
                "c_mpneg_q", 
                "c_mpsub_jd", 
                "c_mpdiv_qd", 
                "c_mpdiv_iq", 
                "c_mpdble", 
                "c_mpsqrt", 
                "c_mpsin_z", 
                "__powidf2", 
                "__cxa_finalize", 
                "c_mppwr_zq", 
                "c_mpdiv_qz", 
                "c_mpaint", 
                "c_mpcos_z", 
                "_ZN7mp_real6_log10E", 
                "c_mpdiv_jj", 
                "c_mpadd_zq", 
                "c_mpcpr", 
                "_Unwind_Resume", 
                "c_mplet", 
                "_gfortran_st_read", 
                "c_mpmul_zd", 
                "c_mpgetprecwords", 
                "c_mpacos", 
                "c_mpinp", 
                "_gfortran_compare_string", 
                "_gfortran_stop_string", 
                "c_mpbesselexp", 
                "c_mpsetprec", 
                "c_mperfc", 
                "c_mpnrt", 
                "c_mpcpr_z", 
                "c_mpdiv_zq", 
                "c_mplet_i", 
                "_ZNSt8ios_base4InitD1Ev", 
                "c_mppwr_d", 
                "c_mpmul_zz", 
                "c_mpatan", 
                "c_mpadd_ji", 
                "c_mpsub_zz", 
                "c_mpexp_z", 
                "c_mppwr_ji", 
                "c_mpgetprec", 
                "_gfortran_string_len_trim", 
                "c_mpbessel", 
                "c_mpsin", 
                "c_mpcosh", 
                "c_mpcsshf", 
                "_ITM_registerTMCloneTable", 
                "c_mpsub", 
                "c_mpdiv", 
                "c_mpgetpar", 
                "c_mpsub_zq", 
                "free", 
                "_gfortran_transfer_real_write", 
                "c_mpabs_z", 
                "c_mprand", 
                "fpu_fix_start", 
                "_ZN2mp7n_wordsE", 
                "c_mpsub_d", 
                "c_mpget_d", 
                "c_mpsub_qz", 
                "c_mpdmc", 
                "c_mpltt", 
                "c_mp_to_str", 
                "c_mpmul_ji", 
                "__gmon_start__", 
                "c_mpmul_qi", 
                "_ZN7mp_real5_log2E", 
                "c_mpeq_d", 
                "c_mpcpr_d", 
                "c_mpltt_d", 
                "_gfortran_transfer_character", 
                "_gfortran_st_write", 
                "c_mpwrite", 
                "c_mplet_d", 
                "c_mpeq", 
                "c_mpadd_jd", 
                "_ZN2mp7fmpwds5E", 
                "c_mplog", 
                "c_mpadd_d", 
                "c_mpmul_qd", 
                "c_mpeq_int", 
                "c_mpadd_zx", 
                "c_mppwr_zi", 
                "_ZN7mp_real4_epsE", 
                "_ZN7mp_real4mpeqERKS_RS_i", 
                "c_mpdiv_zd", 
                "__cxa_atexit", 
                "c_mpdiv_dq", 
                "c_mpsub_xz", 
                "c_mpget", 
                "c_mpabs", 
                "c_mperf", 
                "c_mplog_z", 
                "c_mpgtt_d", 
                "c_mpsub_ji", 
                "c_mpexp", 
                "c_mpeq_ji", 
                "c_mpget_i", 
                "c_mppwr_jj", 
                "_ITM_deregisterTMCloneTable", 
                "c_mpdiv_qi", 
                "__stack_chk_fail", 
                "c_mpatan2", 
                "_gfortran_transfer_integer_write", 
                "c_mpout_z", 
                "log10", 
                "c_mpmul", 
                "c_mpgtt_i", 
                "c_mpasin", 
                "c_mpadd", 
                "c_mptanh", 
                "c_mpeq_zq", 
                "c_mpadd_zz", 
                "c_mpsetpar", 
                "_ZdaPv", 
                "c_mpdotd", 
                "_gfortran_string_index", 
                "_gfortran_transfer_character_write", 
                "_gfortran_st_write_done", 
                "c_mpmdc", 
                "c_mpsqrt_z", 
                "c_mpsinh", 
                "c_mpinfr", 
                "c_mpgetoutputprec", 
                "c_mpdiv_zz", 
                "c_mpdiv_dz", 
                "c_mpsub_dq", 
                "c_mpsub_ij", 
                "c_mpsetoutputprec", 
                "c_mpdiv_ij", 
                "__gxx_personality_v0", 
                "c_mpdiv_ji", 
                "_gfortran_st_open", 
                "c_mpnint", 
                "c_mppwr", 
                "_gfortran_st_rewind", 
                "c_mptan", 
                "c_ovcheck", 
                "c_mpsub_dj", 
                "_gfortran_st_close", 
                "c_mpgamma", 
                "c_mpsetprecwords", 
                "c_mpcpr_i", 
                "_gfortran_transfer_real"
            ], 
            "rpm": "arprec-2.2.19-4.fc27.i686.rpm", 
            "complexity": {
                "r2aa": {
                    "afCc": null, 
                    "afC": null
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libarprecmod.so.0.0.0"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " arprec", 
            "License": " BSD", 
            "URL": " http://crd.lbl.gov/~dhbailey/mpdist", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-30.phx2.fedoraproject.org", 
            "Description": "\nARPREC is a software package for performing arbitrary precision\narithmetic.  It consists of a revision and extension of Bailey's\nearlier MPFUN package, enhanced with special IEEE numerical\ntechniques.  Features include:\n\n  * Written in C++ for broad portability and fast execution.\n\n  * Includes C++ and Fortran 90/95 interfaces based on custom data-types\n    and operator/function overloading, which permit the library to be\n    used with only minor modifications for many conventional C++ and\n    Fortran-90 programs.\n\n  * Includes all of the usual arithmetic operations, as well as many\n    transcendental functions, including cos, sin, tan, arccos, arcsin,\n    arctan, exp, log, log10, erf, gamma and Bessel functions.\n\n  * Supports three arbitrary precision data-types: mp_real, mp_int\n    and mp_complex.\n\n  * Supports many mixed-mode operations between arbitrary precision\n    variables or constants and conventional variables or constants.\n\n  * Includes special library routines, incorporating advanced\n    algorithms for extra-high precision (above 1000 digits) computation.\n\n  * Includes a number of sample application programs, including programs\n    for quadrature (numerical definite integrals), PLSQ (integer relation\n    finding) and polynomial root finding.\n\n  * Includes the \"Experimental Mathematician's Toolkit\".  This is a\n    self-contained interactive program that performs many operations\n    typical of modern experimental mathematics, including arithmetic\n    expressions, common transcendental functions, infinite series\n    evaluation, definite integrals, polynomial roots, user-defined\n    functions, all evaluated to a user-defined level of numeric\n    precision, up to 1000 decimal digits.\n", 
            "Build Date": " Wed 02 Aug 2017 02:44:08 PM EDT", 
            "Source RPM": " arprec-2.2.19-4.fc27.src.rpm", 
            "Version": " 2.2.19", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Mon 07 Aug 2017 04:22:34 AM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 4.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Software package for performing arbitrary precision arithmetic", 
            "Size": " 593994"
        }
    }
}