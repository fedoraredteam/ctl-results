{
    "results": {
        "usr/lib/libadns_so_1_5": {
            "report-functions": [
                "memmove", 
                "fclose", 
                "getenv", 
                "strcspn", 
                "abort", 
                "__errno_location", 
                "__sprintf_chk", 
                "strerror", 
                "sigaction", 
                "writev", 
                "_IO_getc", 
                "strcmp", 
                "inet_aton", 
                "read", 
                "strcpy", 
                "free", 
                "close", 
                "realloc", 
                "write", 
                "fopen", 
                "strspn", 
                "select", 
                "sigdelset", 
                "if_indextoname", 
                "__fdelt_chk", 
                "strtoul", 
                "inet_pton", 
                "sigfillset", 
                "__assert_fail", 
                "__snprintf_chk", 
                "connect", 
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable", 
                "getprotobyname", 
                "recvfrom", 
                "__poll_chk", 
                "fcntl", 
                "gettimeofday", 
                "memcmp", 
                "ldiv", 
                "sigprocmask", 
                "malloc", 
                "strchr", 
                "if_nametoindex", 
                "__gmon_start__", 
                "__vfprintf_chk", 
                "ferror", 
                "getpid", 
                "memchr", 
                "__cxa_finalize", 
                "nrand48", 
                "perror", 
                "socket", 
                "__memcpy_chk", 
                "sendto", 
                "strlen", 
                "__stack_chk_fail"
            ], 
            "rpm": "adns-1.5.1-3.fc27.i686.rpm", 
            "complexity": {
                "r2aa": {
                    "afCc": null, 
                    "afC": null
                }
            }, 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libadns.so.1.5"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " System Environment/Libraries", 
            "Name": " adns", 
            "License": " GPL+", 
            "URL": " http://www.chiark.greenend.org.uk/~ian/adns/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildhw-08.phx2.fedoraproject.org", 
            "Description": "\nadns is a resolver library for C (and C++) programs. In contrast with\nthe existing interfaces, gethostbyname et al and libresolv, it has the\nfollowing features:\n - It is reasonably easy to use for simple programs which just want to\n   translate names to addresses, look up MX records, etc.\n - It can be used in an asynchronous, non-blocking, manner. Many\n   queries can be handled simultaneously.\n - Responses are decoded automatically into a natural representation\n   for a C program - there is no need to deal with DNS packet formats.\n - Sanity checking (eg, name syntax checking, reverse/forward\n   correspondence, CNAME pointing to CNAME) is performed automatically.\n - Time-to-live, CNAME and other similar information is returned in an\n   easy-to-use form, without getting in the way.\n - There is no global state in the library; resolver state is an opaque\n   data structure which the client creates explicitly. A program can have\n   several instances of the resolver.\n - Errors are reported to the application in a way that distinguishes\n   the various causes of failure properly.\n - Understands conventional resolv.conf, but this can overridden by\n   environment variables.\n - Flexibility. For example, the application can tell adns to: ignore\n   environment variables (for setuid programs), disable sanity checks eg\n   to return arbitrary data, override or ignore resolv.conf in favour of\n   supplied configuration, etc.\n - Believed to be correct ! For example, will correctly back off to TCP\n   in case of long replies or queries, or to other nameservers if several\n   are available. It has sensible handling of bad responses etc.\n", 
            "Build Date": " Wed 02 Aug 2017 01:39:15 PM EDT", 
            "Source RPM": " adns-1.5.1-3.fc27.src.rpm", 
            "Version": " 1.5.1", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Sat 05 Aug 2017 03:16:21 PM EDT, Key ID f55e7430f5282ee4", 
            "Release": " 3.fc27", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Advanced, easy to use, asynchronous-capable DNS client library", 
            "Size": " 144629"
        }
    }
}