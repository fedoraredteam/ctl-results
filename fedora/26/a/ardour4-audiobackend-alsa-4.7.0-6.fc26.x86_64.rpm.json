{
    "results": {
        "complexity": {
            "r2 aa": "failed: ERROR: Cannot find radare2 in PATH"
        }, 
        "usr/lib64/ardour4/backends/libalsa_audiobackend_so": {
            "report-functions": [
                "__snprintf_chk", 
                "pthread_attr_destroy", 
                "_ZdaPv", 
                "snd_seq_connect_from", 
                "_ZN6ARDOUR20ardour_dll_directoryB5cxx11Ev", 
                "snd_pcm_sw_params_current", 
                "_ZNSt8ios_base4InitD1Ev", 
                "snd_ctl_close", 
                "snd_rawmidi_read", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "_ZN4Glib7Threads5Mutex4lockEv", 
                "_ZN6ARDOUR10SystemExecC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPc", 
                "snd_pcm_hw_params_get_periods", 
                "__fprintf_chk", 
                "_ZN3PBD20ScopedConnectionListC1Ev", 
                "snd_ctl_card_info_sizeof", 
                "snd_pcm_hw_params_set_rate", 
                "_ZN6ARDOUR11PortManager17reestablish_portsEv", 
                "snd_pcm_hw_params_malloc", 
                "_ZN6ARDOUR11card_to_numEPKc", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm", 
                "snd_ctl_open", 
                "__cxa_pure_virtual", 
                "__cxa_begin_catch", 
                "_ZN6ARDOUR11AudioEngine20thread_init_callbackEPv", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_", 
                "memcmp", 
                "snd_strerror", 
                "_ZN3PBD20ScopedConnectionList14add_connectionERKN5boost10shared_ptrINS_10ConnectionEEE", 
                "regfree", 
                "_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc", 
                "strlen", 
                "_ZN4Glib7Threads5Mutex6unlockEv", 
                "sched_get_priority_min", 
                "snd_pcm_hw_params", 
                "snd_pcm_close", 
                "regcomp", 
                "_ZN4Glib6usleepEm", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm", 
                "snd_pcm_hw_params_set_periods_integer", 
                "snd_pcm_hw_params_set_access", 
                "snd_midi_event_decode", 
                "select", 
                "__ppoll_chk", 
                "_ZN6ARDOUR11PortManager15reconnect_portsEv", 
                "_ZSt24__throw_out_of_range_fmtPKcz", 
                "snd_pcm_poll_descriptors", 
                "_ZNSt13runtime_errorC2ERKS_", 
                "_ZNSt6localeD1Ev", 
                "snd_pcm_sw_params_set_tstamp_mode", 
                "_ITM_registerTMCloneTable", 
                "snd_midi_event_reset_encode", 
                "mlock", 
                "_ZN6ARDOUR29get_alsa_rawmidi_device_namesERSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_St4lessIS6_ESaISt4pairIKS6_S6_EEE", 
                "snd_pcm_status_sizeof", 
                "__cxa_end_catch", 
                "_ZN6ARDOUR11AudioEngine18buffer_size_changeEj", 
                "snd_ctl_card_info", 
                "_ITM_deregisterTMCloneTable", 
                "_ZNSolsEi", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_", 
                "snd_seq_event_output", 
                "pthread_create", 
                "_ZSt17__throw_bad_allocv", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate", 
                "snd_pcm_status_get_tstamp", 
                "pthread_attr_setscope", 
                "pthread_exit", 
                "_ZNSt8ios_base4InitC1Ev", 
                "snd_seq_close", 
                "pthread_cond_wait", 
                "getenv", 
                "snd_pcm_sw_params_malloc", 
                "__gmon_start__", 
                "pthread_attr_setstacksize", 
                "snd_midi_event_free", 
                "snd_pcm_hw_params_get_channels_max", 
                "snd_seq_nonblock", 
                "pthread_self", 
                "_ZN6ARDOUR26get_alsa_device_parametersEPKcbPNS_14ALSADeviceInfoE", 
                "__gxx_personality_v0", 
                "snd_pcm_sw_params", 
                "pthread_attr_setschedparam", 
                "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base", 
                "memset", 
                "pthread_join", 
                "__stack_chk_fail", 
                "pthread_cond_init", 
                "snd_rawmidi_params_set_buffer_size", 
                "snd_seq_event_input", 
                "snd_pcm_sw_params_set_avail_min", 
                "_ZN6ARDOUR11AudioEngine16latency_callbackEb", 
                "snd_pcm_open", 
                "_ZNSt13runtime_errorC2EPKc", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev", 
                "snd_pcm_hw_params_set_periods", 
                "pthread_cond_signal", 
                "snd_pcm_mmap_commit", 
                "snd_pcm_hw_params_get_rate", 
                "snd_midi_event_new", 
                "_ZNKSt5ctypeIcE13_M_widen_initEv", 
                "snd_rawmidi_write", 
                "poll", 
                "snd_pcm_mmap_begin", 
                "_ZdlPv", 
                "snd_pcm_format_name", 
                "strerror", 
                "memcpy", 
                "snd_pcm_hw_params_free", 
                "snd_rawmidi_params_malloc", 
                "__memcpy_chk", 
                "pthread_mutex_init", 
                "__cxa_throw", 
                "_Znam", 
                "_ZNSt8ios_baseD2Ev", 
                "snd_rawmidi_drain", 
                "calloc", 
                "__dynamic_cast", 
                "strdup", 
                "_ZN3PBD20ScopedConnectionList16drop_connectionsEv", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "strtol", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm", 
                "pthread_mutex_lock", 
                "_Znwm", 
                "_ZN6ARDOUR11AudioEngine15halted_callbackEPKc", 
                "snd_seq_set_client_name", 
                "snd_seq_parse_address", 
                "__memmove_chk", 
                "_ZSt19__throw_logic_errorPKc", 
                "dgettext", 
                "snd_pcm_hw_params_any", 
                "_ZSt16__throw_bad_castv", 
                "_ZN4Glib7Threads5MutexD1Ev", 
                "snd_pcm_poll_descriptors_count", 
                "pthread_mutex_unlock", 
                "snd_pcm_prepare", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "snd_rawmidi_close", 
                "getpid", 
                "memmove", 
                "snd_pcm_sw_params_free", 
                "__cxa_finalize", 
                "snd_rawmidi_params_current", 
                "_ZN3PBD10SystemExec5startEiPKc", 
                "pthread_attr_setschedpolicy", 
                "_ZN6ARDOUR27get_alsa_audio_device_namesERSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_St4lessIS6_ESaISt4pairIKS6_S6_EEENS_10AlsaDuplexE", 
                "strcmp", 
                "_ZN3PBD9find_fileERKNS_10SearchpathERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS8_", 
                "snd_pcm_avail_update", 
                "_ZSt20__throw_length_errorPKc", 
                "__errno_location", 
                "_ZN4Glib14build_filenameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_", 
                "snd_rawmidi_poll_descriptors", 
                "regexec", 
                "malloc", 
                "_ZN6ARDOUR11AudioEngine16process_callbackEj", 
                "_ZN6ARDOUR11PortManager16connect_callbackERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_b", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "_ZN3PBD20ScopedConnectionListD1Ev", 
                "sched_get_priority_max", 
                "g_get_monotonic_time", 
                "pthread_attr_init", 
                "snd_rawmidi_poll_descriptors_revents", 
                "_ZN6ARDOUR24get_alsa_sequencer_namesERSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_St4lessIS6_ESaISt4pairIKS6_S6_EEE", 
                "snd_pcm_hw_params_get_period_size", 
                "_ZN4Glib7Threads5MutexC1Ev", 
                "snd_seq_drain_output", 
                "snd_midi_event_encode", 
                "_ZNSt6localeC1Ev", 
                "snd_midi_event_reset_decode", 
                "snd_rawmidi_poll_descriptors_count", 
                "snd_pcm_hw_params_get_access", 
                "snd_pcm_status", 
                "snd_pcm_link", 
                "_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "snd_rawmidi_params_set_no_active_sensing", 
                "snd_rawmidi_params_set_avail_min", 
                "snd_pcm_hw_params_set_format", 
                "_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE7_M_syncEPcmm", 
                "_ZNSo3putEc", 
                "_ZN6ARDOUR11AudioEngine18sample_rate_changeEj", 
                "snd_seq_open", 
                "snd_rawmidi_open", 
                "snd_pcm_status_get_state", 
                "snd_pcm_hw_params_set_period_size", 
                "_ZN6ARDOUR11AudioEngine18freewheel_callbackEb", 
                "_ZN6ARDOUR12AudioBackend24get_standard_device_nameB5cxx11ENS0_18StandardDeviceNameE", 
                "__cxa_atexit", 
                "snd_pcm_hw_params_get_format", 
                "snd_seq_poll_descriptors", 
                "_Unwind_Resume", 
                "_ZN3PBD10SearchpathC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", 
                "snd_seq_connect_to", 
                "__cxa_free_exception", 
                "_ZNSt13runtime_errorD2Ev", 
                "_ZNKSt13runtime_error4whatEv", 
                "snd_pcm_drop", 
                "pthread_mutex_destroy", 
                "__cxa_rethrow", 
                "snd_pcm_hw_params_set_channels", 
                "_ZN6ARDOUR11PortManager20graph_order_callbackEv", 
                "_ZNSo5flushEv", 
                "pthread_attr_setinheritsched", 
                "snd_pcm_poll_descriptors_revents", 
                "snd_seq_poll_descriptors_count", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l", 
                "snd_pcm_status_get_trigger_tstamp", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc", 
                "snd_pcm_hw_params_set_buffer_size", 
                "pthread_mutex_trylock", 
                "__cxa_allocate_exception", 
                "pthread_cond_destroy", 
                "snd_pcm_start", 
                "free", 
                "snd_seq_create_simple_port", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base"
            ], 
            "rpm": "ardour4-audiobackend-alsa-4.7.0-6.fc26.x86_64.rpm", 
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib64/ardour4/backends/libalsa_audiobackend.so"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Applications/Multimedia", 
            "Name": " ardour4-audiobackend-alsa", 
            "License": " GPLv3+", 
            "URL": " http://ardour.org", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-17.phx2.fedoraproject.org", 
            "Description": "\nThis package provides the ALSA audio backend for Ardour.\n", 
            "Build Date": " Fri 10 Feb 2017 01:37:56 AM EST", 
            "Source RPM": " ardour4-4.7.0-6.fc26.src.rpm", 
            "Version": " 4.7.0", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Mon 13 Feb 2017 01:07:52 PM EST, Key ID 812a6b4b64dab85d", 
            "Release": " 6.fc26", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " ALSA audio backend for ardour4", 
            "Size": " 231936"
        }
    }
}