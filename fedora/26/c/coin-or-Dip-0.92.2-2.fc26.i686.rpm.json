{
    "results": {
        "usr/bin/dip": {
            "report-functions": [
                "_ZN14UtilParameters10GetSettingEPKcbS1_", 
                "_ZNSt12__basic_fileIcED1Ev", 
                "_ZNK8CbcModel15isProvenOptimalEv", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc", 
                "_ZNK8CbcModel21isSecondsLimitReachedEv", 
                "_ZNSo3putEc", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj", 
                "__stack_chk_fail", 
                "_ZNK9CoinMpsIO10getNumColsEv", 
                "_ZN8CbcModelD1Ev", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "_ZNK8CbcModel23getBestPossibleObjValueEv", 
                "omp_get_num_procs", 
                "_ZN14UtilParameters10GetSettingEPKcdS1_", 
                "getcwd", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_i", 
                "_ZN14UtilParameters15ScanCmdLineArgsERiPPc", 
                "_ITM_deregisterTMCloneTable", 
                "_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc", 
                "__cxa_finalize", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj", 
                "omp_get_thread_num", 
                "__libc_start_main", 
                "_ZN14UtilParameters10GetSettingEPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES1_", 
                "__gmon_start__", 
                "_ZdaPvj", 
                "_ZN9CoinMpsIOC1ERKS_", 
                "_ZN10AlpsParams17setDefaultEntriesEv", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEcj", 
                "_ITM_registerTMCloneTable", 
                "strlen", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode", 
                "_ZNSo9_M_insertIdEERSoT_", 
                "__assert_fail", 
                "_ZNSt8ios_baseC2Ev", 
                "_ZN9DecompApp13initializeAppEv", 
                "_Znaj", 
                "_ZN9DecompApp10startupLogEv", 
                "_ZSt20__throw_length_errorPKc", 
                "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base", 
                "_ZN9CoinMpsIOC1Ev", 
                "_ZdlPv", 
                "_ZNSt8ios_baseD2Ev", 
                "_ZdaPv", 
                "_ZN8CoinLpIOC1ERKS_", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "__cxa_end_catch", 
                "_ZNSt8__detail15_List_node_base9_M_unhookEv", 
                "_ZNSt6localeD1Ev", 
                "_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_", 
                "_ZN9DecompApp11setInfinityEv", 
                "GOMP_parallel", 
                "_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "exit", 
                "__cxa_allocate_exception", 
                "_ZN8CoinLpIOC1Ev", 
                "_Unwind_Resume", 
                "_ZN21OsiCbcSolverInterfaceC1EP18OsiSolverInterfaceP11CbcStrategy", 
                "_ZN8CbcModelC1ERK18OsiSolverInterface", 
                "_ZN21OsiSymSolverInterfaceC1Ev", 
                "omp_get_num_threads", 
                "gettimeofday", 
                "_ZN8CbcModel14branchAndBoundEi", 
                "_Znwj", 
                "_ZNSt6localeC1Ev", 
                "_ZN15AlpsDecompModel5solveEv", 
                "_ZN14UtilParameters10GetSettingEPKciS1_", 
                "_ZN8CbcModel11setLogLevelEi", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_", 
                "_ZNKSt5ctypeIcE13_M_widen_initEv", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev", 
                "__cxa_free_exception", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "_ZdlPvj", 
                "_ZN10AlpsParams17createKeywordListEv", 
                "__gxx_personality_v0", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEEC1Ev", 
                "_ZSt19__throw_logic_errorPKc", 
                "_ZN15CglCutGeneratorD2Ev", 
                "__cxa_begin_catch", 
                "_ZN8CoinLpIOD1Ev", 
                "_ZSt9terminatev", 
                "_ZNSo5flushEv", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj", 
                "_ZN9CoinMpsIOD1Ev", 
                "_ZN10DecompAlgo9initSetupEv", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_", 
                "_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev", 
                "memmove", 
                "_ZN16CoinPackedVectorD1Ev", 
                "_ZSt17__throw_bad_allocv", 
                "_ZN15AlpsDecompModel15setAlpsSettingsEv", 
                "__cxa_rethrow", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv", 
                "__cxa_throw", 
                "_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1EPKcSt13_Ios_Openmode", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEED1Ev", 
                "_ZNSt8ios_base4InitD1Ev", 
                "_ZSt16__throw_bad_castv", 
                "_ZNSolsEi", 
                "__cxa_atexit", 
                "getrusage", 
                "_ZSt24__throw_out_of_range_fmtPKcz", 
                "puts", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "_ZNSo9_M_insertIbEERSoT_", 
                "__cxa_pure_virtual"
            ], 
            "rpm": "coin-or-Dip-0.92.2-2.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/dip"
        }, 
        "complexity": {
            "r2 aa": "failed: ERROR: Cannot find radare2 in PATH"
        }, 
        "usr/lib/libDecomp_so_1_6_2": {
            "report-functions": [
                "__cxa_atexit", 
                "_ZNSt8__detail15_List_node_base11_M_transferEPS0_S1_", 
                "_ZN9AlpsModel14readParametersEiPKPKc", 
                "_ZNSi7getlineEPcic", 
                "acos", 
                "_ZN8CbcModelC1ERK18OsiSolverInterface", 
                "_ZNK16CoinPackedMatrix5timesERK20CoinPackedVectorBasePd", 
                "_ZNK20CoinPackedVectorBase10dotProductEPKd", 
                "_ZNSi10_M_extractIdEERSiRT_", 
                "_Z8CbcMain1iPPKcR8CbcModel", 
                "_ZN8CoinLpIOD1Ev", 
                "memmove", 
                "fgets", 
                "_ZNK9CoinMpsIO11getRowUpperEv", 
                "_ZNK8CbcModel21isContinuousUnboundedEv", 
                "_ZN8CbcModelD1Ev", 
                "_ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EES4_", 
                "calloc", 
                "_ZN16CoinPackedMatrix7reserveEiib", 
                "_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1Ev", 
                "_ZNK8CbcModel21isSecondsLimitReachedEv", 
                "_ZdlPv", 
                "_ZNK8CoinLpIO11getRowUpperEv", 
                "_ZNK8CoinLpIO11getColUpperEv", 
                "_ZN16CoinPackedVectorC1EiPKiPKdb", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj", 
                "_ZNK16CoinPackedMatrix14transposeTimesEPKdPd", 
                "_ZNK8CoinLpIO10columnNameEi", 
                "strchr", 
                "_ZNSo5flushEv", 
                "rand", 
                "_ZNK13AlpsKnowledge6decodeER11AlpsEncoded", 
                "_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1Ev", 
                "_ZNK8CoinLpIO15objectiveOffsetEv", 
                "_ZdaPv", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj", 
                "_ZNSo9_M_insertIlEERSoT_", 
                "_ZN9OsiRowCutC1ERKS_", 
                "strlen", 
                "_ZNSt8__detail15_List_node_base9_M_unhookEv", 
                "_ZN7OsiCutsC1Ev", 
                "strtok", 
                "getrusage", 
                "_ZN16CglKnapsackCoverC1Ev", 
                "_ZN25AlpsKnowledgeBrokerSerial16initializeSearchEiPPcR9AlpsModel", 
                "_ZN16CoinPackedMatrix13setDimensionsEii", 
                "_ZN12CglFlowCoverC1Ev", 
                "_ZNK8CoinLpIO14integerColumnsEv", 
                "_ZNK8CoinLpIO7rowNameEi", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj", 
                "_ZN16CoinPackedVector6insertEid", 
                "srand", 
                "_Z14sym_get_statusP15SYM_ENVIRONMENT", 
                "__cxa_begin_catch", 
                "_ZN9AlpsModel7nodeLogEP12AlpsTreeNodeb", 
                "_ZNSt12__basic_fileIcED1Ev", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_i", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcjj", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc", 
                "_ZN9OsiRowCut5setUbEd", 
                "__assert_fail", 
                "_ZNK9CoinMpsIO18getObjCoefficientsEv", 
                "floor", 
                "_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev", 
                "_ZN9OsiRowCutC1Ev", 
                "_ZN9CoinMpsIOD1Ev", 
                "_ZNK9OsiRowCut2lbEv", 
                "_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev", 
                "_ZdlPvj", 
                "_ZN9CglGomoryC1Ev", 
                "_ZNK16CoinPackedMatrix5timesEPKdPd", 
                "__cxa_end_catch", 
                "_ZN16CoinPackedMatrix10appendRowsEiPKiS1_PKdi", 
                "_ZN8CoinLpIO6readLpEPKc", 
                "_Z17sym_set_int_paramP15SYM_ENVIRONMENTPKci", 
                "strcmp", 
                "_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_", 
                "_ZN16CoinPackedMatrixC1ERKS_", 
                "_ZN16CoinPackedMatrix11submatrixOfERKS_iPKi", 
                "omp_get_thread_num", 
                "_ZN16CoinPackedMatrix10appendColsEiPKPK20CoinPackedVectorBase", 
                "GOMP_loop_dynamic_next", 
                "cos", 
                "_ZNK8CoinLpIO18getObjCoefficientsEv", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcjj", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEED1Ev", 
                "_ZNK8CoinLpIO11getRowLowerEv", 
                "_ZNK20CoinPackedVectorBase11denseVectorEi", 
                "_ZNSt8ios_baseC2Ev", 
                "_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1ESt13_Ios_Openmode", 
                "_ZNK8CbcModel23getBestPossibleObjValueEv", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_", 
                "_ZNK8CoinLpIO14getMatrixByRowEv", 
                "malloc", 
                "_ZN10CglOddHoleC1Ev", 
                "_ZN18CoinWarmStartBasisC1Ev", 
                "_ZN9CglCliqueC1Ebb", 
                "__cxa_throw_bad_array_new_length", 
                "_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "_ZNK9CoinMpsIO14integerColumnsEv", 
                "_ZN9OsiRowCut5setLbEd", 
                "_ZN24CglMixedIntegerRounding2C1Ev", 
                "_ZSt19__throw_logic_errorPKc", 
                "_ZNK8CbcModel13savedSolutionEi", 
                "_ZNK9CoinMpsIO9isIntegerEi", 
                "_ZNK8CoinLpIO10getNumRowsEv", 
                "__gmon_start__", 
                "__cxa_free_exception", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj", 
                "_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc", 
                "ceil", 
                "__cxa_allocate_exception", 
                "__printf_chk", 
                "_ZNKSt5ctypeIcE13_M_widen_initEv", 
                "_ZNSolsEi", 
                "_ZNK9CoinMpsIO7rowNameEi", 
                "GOMP_loop_end_nowait", 
                "_ZNSo9_M_insertIdEERSoT_", 
                "_ZN16CoinPackedVectorC1ERK20CoinPackedVectorBase", 
                "_ZNK8CoinLpIO9isIntegerEi", 
                "_ZN16CoinPackedMatrix9appendColERK20CoinPackedVectorBase", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_", 
                "_ZN21OsiSymSolverInterfaceC1Ev", 
                "fopen", 
                "_ZNK8CoinLpIO11getColLowerEv", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev", 
                "_ZNK8CbcModel15isProvenOptimalEv", 
                "_ZNK20CoinPackedVectorBase7twoNormEv", 
                "fclose", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEEC1Ev", 
                "__cxa_finalize", 
                "_ZNK9CoinMpsIO14getMatrixByRowEv", 
                "_ZN16CoinPackedMatrixC1EbiiiPKdPKiS3_S3_dd", 
                "_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev", 
                "__cxa_rethrow", 
                "strtol", 
                "_ITM_deregisterTMCloneTable", 
                "_ZN21OsiClpSolverInterfaceC1Ev", 
                "_Znaj", 
                "_ZN16CoinPackedMatrixD1Ev", 
                "_ZN19AlpsKnowledgeBrokerC2Ev", 
                "__stack_chk_fail", 
                "__strcpy_chk", 
                "__gxx_personality_v0", 
                "_ZNK19AlpsKnowledgeBroker11getBestNodeEv", 
                "_ZN15CglCutGeneratorD2Ev", 
                "_ZNSt8ios_base4InitC1Ev", 
                "sqrt", 
                "_ZN23CoinShallowPackedVectorC1EiPKiPKdb", 
                "__stpcpy_chk", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc", 
                "_ZN9OsiRowCutD1Ev", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc", 
                "_ZNK9CoinMpsIO14getNumElementsEv", 
                "_ZNSo9_M_insertImEERSoT_", 
                "_ZN9CoinMpsIO7readMpsEPKcS1_", 
                "_ZNK9CoinMpsIO15objectiveOffsetEv", 
                "_ZN20CoinPackedVectorBaseD2Ev", 
                "_ZN11CglTreeInfoC1Ev", 
                "puts", 
                "fscanf", 
                "_ZN16CoinPackedMatrixC1Ev", 
                "_Z31sym_is_proven_primal_infeasibleP15SYM_ENVIRONMENT", 
                "_ZNSirsERi", 
                "GOMP_loop_dynamic_start", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_", 
                "omp_set_num_threads", 
                "_Z20sym_get_col_solutionP15SYM_ENVIRONMENTPd", 
                "_ZN19AlpsKnowledgeBrokerD2Ev", 
                "_ZNK19AlpsKnowledgeBroker16getBestKnowledgeE17AlpsKnowledgeType", 
                "_ZNSt8ios_baseD2Ev", 
                "_ZN16CoinPackedMatrix20reverseOrderedCopyOfERKS_", 
                "_ZN16CoinPackedVectorD1Ev", 
                "gettimeofday", 
                "_Z19sym_get_sp_solutionP15SYM_ENVIRONMENTiPdS1_", 
                "_ZNK9OsiRowCut3rowEv", 
                "_ZNK9CoinMpsIO11getColUpperEv", 
                "_ZNK8CoinLpIO10getNumColsEv", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEcj", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode", 
                "_ZNK9CoinMpsIO11getRowLowerEv", 
                "__dynamic_cast", 
                "_ZN16CoinPackedMatrix10appendColsEiPKiS1_PKdi", 
                "tolower", 
                "abort", 
                "_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE", 
                "_ZNK16CoinPackedMatrix15getMajorIndicesEv", 
                "_ZdaPvj", 
                "_ZNKSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE3strEv", 
                "_ZNK9CoinMpsIO10getNumColsEv", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "__cxa_throw", 
                "_ZNK8CbcModel18isProvenInfeasibleEv", 
                "_Unwind_Resume", 
                "_ZSt20__throw_length_errorPKc", 
                "_ZNSt6localeC1Ev", 
                "_ZN11CglTreeInfoD1Ev", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc", 
                "_Znwj", 
                "_Z8CbcMain0R8CbcModel", 
                "GOMP_critical_end", 
                "_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_", 
                "_ZNK9OsiRowCut2ubEv", 
                "clock", 
                "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base", 
                "_ZN8CbcModel14branchAndBoundEi", 
                "_ZN16CoinPackedVectorC1Eb", 
                "__cxa_pure_virtual", 
                "_Z15sym_get_obj_valP15SYM_ENVIRONMENTPd", 
                "_ZNK13AlpsKnowledge6encodeEv", 
                "sscanf", 
                "_ZN8CbcModel11setLogLevelEi", 
                "exit", 
                "_Z15sym_get_sp_sizeP15SYM_ENVIRONMENTPi", 
                "_ZNK21OsiClpSolverInterface11getModelPtrEv", 
                "_ZNK9CoinMpsIO10getNumRowsEv", 
                "_ZNSo3putEc", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcjj", 
                "_ZSt17__throw_bad_allocv", 
                "_ZN25AlpsKnowledgeBrokerSerial10rootSearchEP12AlpsTreeNode", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate", 
                "GOMP_critical_start", 
                "_ZNK9CoinMpsIO10columnNameEi", 
                "_ZN18CoinWarmStartBasis17assignBasisStatusEiiRPcS1_", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev", 
                "_ZNSo9_M_insertIbEERSoT_", 
                "_ZN16CoinPackedMatrix24bottomAppendPackedMatrixERKS_", 
                "GOMP_parallel", 
                "_ZSt16__throw_bad_castv", 
                "_ZNK8CbcModel20numberSavedSolutionsEv", 
                "_ZN21OsiSymSolverInterface11loadProblemERK16CoinPackedMatrixPKdS4_S4_S4_S4_", 
                "_ZNSt8ios_base4InitD1Ev", 
                "_ZNK9CoinMpsIO11getColLowerEv", 
                "_ZSt24__throw_out_of_range_fmtPKcz", 
                "memcmp", 
                "_ZN16CoinPackedVector9setVectorEiPKiPKdb", 
                "_ZN9OsiRowCut6setRowERK16CoinPackedVector", 
                "_ZN16CoinPackedMatrix15reverseOrderingEv", 
                "_ZN16CoinPackedMatrix10appendRowsEiPKPK20CoinPackedVectorBase", 
                "_ZN7OsiCutsD1Ev", 
                "_ITM_registerTMCloneTable", 
                "_ZN18CoinMessageHandler11setLogLevelEi", 
                "_ZN16CoinPackedVectorC1ERKS_", 
                "_ZN16CoinPackedMatrixC1Ebdd", 
                "strtod"
            ], 
            "rpm": "coin-or-Dip-0.92.2-2.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libDecomp.so.1.6.2"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Applications/Engineering", 
            "Name": " coin-or-Dip", 
            "License": " EPL", 
            "URL": " http://www.coin-or.org/projects/Dip.xml", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-09.phx2.fedoraproject.org", 
            "Description": "\nDIP (Decomposition for Integer Programming) is an open-source extensible\nsoftware framework for implementing decomposition-based bounding algorithms\nfor use in solving large-scale discrete optimization problems. The framework\nprovides a simple API for experimenting with various decomposition-based\nalgorithms, such as Dantzig-Wolfe decomposition, Lagrangian relaxation,\nand various cutting plane methods. Given a compact formulation and a\nrelaxation, the framework takes care of all algorithmic details associated\nwith implementing any of a wide range of decomposition-based algorithms,\nsuch as branch and cut, branch and price, branch and cut and price,\nsubgradient-based Lagrangian relaxation, branch and relax and cut, and\ndecompose and cut. The user can specify customizations, such as methods\nfor generating valid inequalities and branching, in terms of the variables\nof the compact formulation, without having to worry about the details of\nany required reformulations.\n", 
            "Build Date": " Mon 27 Feb 2017 03:08:22 AM EST", 
            "Source RPM": " coin-or-Dip-0.92.2-2.fc26.src.rpm", 
            "Version": " 0.92.2", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Mon 27 Feb 2017 03:48:33 AM EST, Key ID 812a6b4b64dab85d", 
            "Release": " 2.fc26", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Decomposition for Integer Programming", 
            "Size": " 1028950"
        }
    }
}