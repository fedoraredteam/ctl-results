{
    "results": {
        "complexity": {
            "r2 aa": "failed: ERROR: Cannot find radare2 in PATH"
        }, 
        "usr/lib64/libFlopCpp_so_0_0_0": {
            "report-functions": [
                "__cxa_begin_catch", 
                "_Znam", 
                "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_ZNSo3putEc", 
                "__gxx_personality_v0", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "__cxa_throw_bad_array_new_length", 
                "_ZN16CoinPackedMatrixC1EbiiiPKdPKiS3_S3_", 
                "_ZNSt8ios_baseC2Ev", 
                "_ZNKSt5ctypeIcE13_M_widen_initEv", 
                "_ZSt20__throw_length_errorPKc", 
                "_ZN16CoinPackedVector6insertEid", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "_ZNSo9_M_insertIdEERSoT_", 
                "_ZdlPvm", 
                "_Znwm", 
                "_Unwind_Resume", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l", 
                "_ITM_registerTMCloneTable", 
                "_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_", 
                "_ZdaPv", 
                "_ZNSolsEi", 
                "_ZNSo5flushEv", 
                "_ZNSt8ios_base4InitD1Ev", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_get_exception_ptr", 
                "_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "__cxa_atexit", 
                "_ZN16CoinPackedMatrixD1Ev", 
                "_ZdlPv", 
                "_ZSt16__throw_bad_castv", 
                "__cxa_pure_virtual", 
                "_ZN16CoinPackedVectorD1Ev", 
                "_ZSt19__throw_logic_errorPKc", 
                "_ZN16CoinPackedVectorC1Eb", 
                "_ZNSt6localeD1Ev", 
                "_ZNSo9_M_insertImEERSoT_", 
                "getrusage", 
                "__gmon_start__", 
                "__cxa_end_catch", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_", 
                "memcpy", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm", 
                "_ZNSt8ios_baseD2Ev", 
                "__stack_chk_fail", 
                "_ZSt17__throw_bad_allocv", 
                "_ZNSt6localeC1Ev", 
                "__cxa_finalize"
            ], 
            "rpm": "coin-or-FlopC++-1.2.4-3.fc26.x86_64.rpm", 
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib64/libFlopCpp.so.0.0.0"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Applications/Engineering", 
            "Name": " coin-or-FlopC++", 
            "License": " EPL", 
            "URL": " http://www.coin-or.org/modules/FlopC++.xml", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-25.phx2.fedoraproject.org", 
            "Description": "\nAn open source algebraic modelling language implemented as a C++ class\nlibrary.\n\nUsing FLOPC++, linear optimization models can be specified in a declarative\nstyle, similar to algebraic modelling languages such as GAMS and AMPL,\nwithin a C++ program. As a result the traditional strengths of algebraic\nmodelling languages are preserved, while embedding linear optimization\nmodels in software applications is facilitated.\n\nFLOPC++ can be used as a substitute for traditional modelling languages,\nwhen modelling linear optimization problems, but its principal strength\nlies in the fact that the modelling facilities are combined with a\npowerful general purpose programming language. This combination is\nessential for implementing efficient algorithms (using linear optimization\nfor subproblems), integrating optimization models in user applications, etc.\n", 
            "Build Date": " Mon 15 May 2017 07:08:34 PM EDT", 
            "Source RPM": " coin-or-FlopC++-1.2.4-3.fc26.src.rpm", 
            "Version": " 1.2.4", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Mon 22 May 2017 05:09:41 PM EDT, Key ID 812a6b4b64dab85d", 
            "Release": " 3.fc26", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Algebraic modelling language", 
            "Size": " 272810"
        }
    }
}