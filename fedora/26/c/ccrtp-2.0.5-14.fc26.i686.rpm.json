{
    "results": {
        "complexity": {
            "r2 aa": "failed: ERROR: Cannot find radare2 in PATH"
        }, 
        "usr/lib/libccrtp_so_0_0_0": {
            "report-functions": [
                "_ZNSo3putEc", 
                "_ZNSt8ios_baseC2Ev", 
                "_ZNK3ost11IPV4AddresseqERKS0_", 
                "_ZN3ost7Process7getUserEv", 
                "gcry_check_version", 
                "_ZN7ucommon14RecursiveMutex7_unlockEv", 
                "close", 
                "_ZN3ost11IPV6AddressC1ERKS0_", 
                "_ZSt19__throw_logic_errorPKc", 
                "gcry_md_read", 
                "_ZNK7ucommon14JoinableThread9is_activeEv", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE7seekposESt4fposI11__mbstate_tESt13_Ios_Openmode", 
                "_ZNSt6localeD1Ev", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE9pbackfailEi", 
                "_ZN3ost6Socket9writeDataEPKvjm", 
                "__fdelt_chk", 
                "_ZN3ost6ThreadD2Ev", 
                "_ZN7ucommon6Thread5yieldEv", 
                "__udivdi3", 
                "_ZNKSt5ctypeIcE13_M_widen_initEv", 
                "_ZN7ucommon14RecursiveMutex5_lockEv", 
                "_ZNK3ost11IPV4Address11getHostnameEv", 
                "__gmon_start__", 
                "__sprintf_chk", 
                "memcmp", 
                "_ZN3ost11IPV4AddressaSERKS0_", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE9underflowEv", 
                "__assert_fail", 
                "send", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj", 
                "_ZNSt8__detail15_List_node_base7_M_hookEPS0_", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE6setbufEPci", 
                "_ZN3ost6Thread4exitEv", 
                "malloc", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE9showmanycEv", 
                "_ZN7ucommon11ConditionalD2Ev", 
                "_ZN7ucommon14RecursiveMutex4lockEv", 
                "_ZTv0_n20_N7ucommon6RWLock8_unshareEv", 
                "_Znaj", 
                "__memcpy_chk", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE7seekoffExSt12_Ios_SeekdirSt13_Ios_Openmode", 
                "_ZN3ost11IPV4AddressC1ERKS0_", 
                "_ZN3ost6Thread5startEv", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj", 
                "__cxa_pure_virtual", 
                "_ZN7ucommon6RWLock7_unlockEv", 
                "_ZN3ost11UDPTransmit7connectERKNS_8IPV4HostEt", 
                "ioctl", 
                "gcry_cipher_encrypt", 
                "_ZTv0_n16_N7ucommon6RWLock6_shareEv", 
                "_ZN7ucommon6RWLock6_shareEv", 
                "_Znwj", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE4syncEv", 
                "__gxx_personality_v0", 
                "_ZSt20__throw_length_errorPKc", 
                "_ZN7ucommon14RecursiveMutex7releaseEv", 
                "_ZN7ucommon6RWLock8_unshareEv", 
                "__stack_chk_fail", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsgetnEPci", 
                "_ZN3ost9UDPSocket4sendEPKvj", 
                "__cxa_guard_acquire", 
                "gcry_md_write", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "free", 
                "_ZN3ost7Process6getEnvEPKc", 
                "_ZN7ucommon14RecursiveMutexC2Ev", 
                "_ZN3ost8IPV4HostC1EPKc", 
                "_ZSt16__throw_bad_castv", 
                "_ZN3ost6Socket9endSocketEv", 
                "_ZNK3ost11IPV4AddressneERKS0_", 
                "_ZN3ost6Socket8readDataEPvjcm", 
                "_ZNK3ost6Socket13getIPV4SenderEPt", 
                "_ZNK3ost11IPV6AddresseqERKS0_", 
                "_ZN7ucommon6RWLock6accessEm", 
                "_ITM_registerTMCloneTable", 
                "_ZN7ucommon6RWLock5_lockEv", 
                "gcry_md_open", 
                "_ZN7ucommon17ConditionalAccessD2Ev", 
                "rand", 
                "_ZNSo5flushEv", 
                "_ZN3ost6Thread7initialEv", 
                "_ZN3ost6Thread5finalEv", 
                "_ZNSt8ios_baseD2Ev", 
                "_ZN3ost11IPV6AddressD1Ev", 
                "_ZN7ucommon14SharedProtocol5shareEv", 
                "read", 
                "_ZNSt8__detail15_List_node_base9_M_unhookEv", 
                "_ZN7ucommon6RWLockC2Ev", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj", 
                "__cxa_finalize", 
                "gcry_control", 
                "gcry_cipher_setkey", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsputnEPKci", 
                "_ZN3ost11IPV4AddressD2Ev", 
                "_ZN3ost10UDPReceive7connectERKNS_8IPV4HostEt", 
                "_ZN3ost9UDPSocket7setPeerERKNS_8IPV4HostEt", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE5imbueERKSt6locale", 
                "__cxa_end_catch", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE8overflowEi", 
                "gcry_md_setkey", 
                "__cxa_atexit", 
                "_ZN3ost11UDPTransmitC2ERKNS_11IPV4AddressEt", 
                "__cxa_guard_release", 
                "select", 
                "_ZNSt6localeC1Ev", 
                "gcry_md_close", 
                "_ZN3ost9TimerPortC1Ev", 
                "__cxa_guard_abort", 
                "_ZN3ost6Thread6notifyEPS0_", 
                "_ZNSt8ios_base4InitD1Ev", 
                "_ZN3ost9UDPSocket7receiveEPvjb", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_ZN7ucommon14SharedProtocol9exclusiveEv", 
                "_ZNK3ost6Socket13getIPV6SenderEPt", 
                "_ZN3ost11IPV4AddressC1EPKcPKNS_13IPV4ValidatorE", 
                "_ZNSt15basic_streambufIcSt11char_traitsIcEE5uflowEv", 
                "recv", 
                "_Unwind_Resume", 
                "_ZN3ost9UDPSocketD2Ev", 
                "_ZN7ucommon6RWLock6modifyEm", 
                "_ZdlPv", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_i", 
                "_ZN7ucommon6RWLock7releaseEv", 
                "_ZN3ost7SysTime12getTimeOfDayEP7timeval", 
                "strlen", 
                "_ZN7ucommon14SharedProtocolD2Ev", 
                "gcry_cipher_close", 
                "_ZN3ost10UDPReceiveC2ERKNS_11IPV4AddressEt", 
                "gcry_md_reset", 
                "open", 
                "_ZN3ost6Socket9isPendingENS0_7PendingEm", 
                "__fprintf_chk", 
                "_ZN7ucommon17ExclusiveProtocolD2Ev", 
                "_ZdaPv", 
                "__cxa_begin_catch", 
                "gcry_cipher_open"
            ], 
            "rpm": "ccrtp-2.0.5-14.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libccrtp.so.0.0.0"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " System Environment/Libraries", 
            "Name": " ccrtp", 
            "License": " GPLv2+", 
            "URL": " http://www.gnu.org/software/commoncpp/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-29.phx2.fedoraproject.org", 
            "Description": "\nccRTP is a generic, extensible and efficient C++ framework for\ndeveloping applications based on the Real-Time Transport Protocol\n(RTP) from the IETF. It is based on Common C++ and provides a full\nRTP/RTCP stack for sending and receiving of realtime data by the use\nof send and receive packet queues. ccRTP supports unicast,\nmulti-unicast and multicast, manages multiple sources, handles RTCP\nautomatically, supports different threading models and is generic as\nfor underlying network and transport protocols.\n", 
            "Build Date": " Fri 10 Feb 2017 02:38:23 AM EST", 
            "Source RPM": " ccrtp-2.0.5-14.fc26.src.rpm", 
            "Version": " 2.0.5", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Mon 13 Feb 2017 04:23:45 PM EST, Key ID 812a6b4b64dab85d", 
            "Release": " 14.fc26", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Common C++ class framework for RTP/RTCP", 
            "Size": " 304487"
        }
    }
}