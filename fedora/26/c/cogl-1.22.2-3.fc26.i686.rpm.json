{
    "results": {
        "usr/lib/libcogl_so_20_4_2": {
            "report-functions": [
                "g_list_free", 
                "__stack_chk_fail", 
                "asinf", 
                "g_str_has_prefix", 
                "XGetSubImage", 
                "g_strconcat", 
                "g_module_symbol", 
                "eglInitialize", 
                "g_array_free", 
                "g_object_unref", 
                "XDestroyWindow", 
                "XSync", 
                "g_malloc_n", 
                "XCreateWindow", 
                "g_hash_table_new", 
                "g_hook_prepend", 
                "g_ascii_strtoull", 
                "XDamageSubtract", 
                "g_key_file_free", 
                "g_ptr_array_add", 
                "g_try_malloc", 
                "g_queue_peek_tail", 
                "g_type_fundamental_next", 
                "gbm_surface_release_buffer", 
                "g_dgettext", 
                "gdk_pixbuf_get_has_alpha", 
                "bindtextdomain", 
                "cairo_surface_write_to_png", 
                "g_list_length", 
                "XDamageQueryExtension", 
                "g_hook_alloc", 
                "g_strcmp0", 
                "eglTerminate", 
                "g_array_new", 
                "g_queue_find", 
                "atan2f", 
                "g_string_free", 
                "g_ascii_strcasecmp", 
                "wl_display_get_fd", 
                "g_getenv", 
                "g_queue_pop_tail", 
                "g_option_group_set_translation_domain", 
                "wl_display_dispatch", 
                "XCloseDisplay", 
                "strtoul", 
                "g_string_set_size", 
                "g_queue_peek_head", 
                "XUnmapWindow", 
                "XFree", 
                "XNextRequest", 
                "g_source_remove_poll", 
                "g_module_close", 
                "g_intern_static_string", 
                "shmget", 
                "g_option_group_set_parse_hooks", 
                "floorf", 
                "g_parse_debug_string", 
                "g_string_append", 
                "g_byte_array_set_size", 
                "wl_display_flush", 
                "strcmp", 
                "g_once_init_leave", 
                "wl_proxy_marshal", 
                "drmModeGetCrtc", 
                "ceilf", 
                "g_hash_table_lookup", 
                "g_string_append_len", 
                "g_strdup", 
                "sscanf", 
                "g_build_filename", 
                "strchr", 
                "eglGetProcAddress", 
                "g_slist_delete_link", 
                "__errno_location", 
                "gbm_surface_destroy", 
                "g_strsplit", 
                "g_flags_register_static", 
                "g_hook_list_init", 
                "g_byte_array_free", 
                "g_setenv", 
                "gdk_pixbuf_new_from_file", 
                "g_byte_array_new", 
                "g_strfreev", 
                "g_malloc0", 
                "XFixesDestroyRegion", 
                "cairo_image_surface_create", 
                "g_hash_table_remove", 
                "g_list_find", 
                "eglQueryString", 
                "wl_egl_window_destroy", 
                "getenv", 
                "gdk_pixbuf_get_width", 
                "cairo_fill_preserve", 
                "drmModeSetCrtc", 
                "XDamageDestroy", 
                "g_list_append", 
                "g_list_concat", 
                "wl_display_roundtrip", 
                "g_array_remove_index_fast", 
                "g_malloc0_n", 
                "g_hash_table_lookup_extended", 
                "g_strdup_printf", 
                "gdk_pixbuf_get_rowstride", 
                "XGetGeometry", 
                "XAllocSizeHints", 
                "g_free", 
                "g_list_remove_link", 
                "XShmDetach", 
                "qsort", 
                "g_quark_from_string", 
                "g_type_class_peek_parent", 
                "wl_shm_buffer_get_width", 
                "XRRGetCrtcInfo", 
                "drmModeGetConnector", 
                "wl_display_dispatch_pending", 
                "XGetVisualInfo", 
                "wl_proxy_marshal_constructor", 
                "g_get_system_config_dirs", 
                "g_source_set_priority", 
                "wl_shm_buffer_get_stride", 
                "strncmp", 
                "g_hash_table_get_values", 
                "gdk_pixbuf_get_n_channels", 
                "gbm_device_destroy", 
                "XTranslateCoordinates", 
                "gbm_bo_get_handle", 
                "shmctl", 
                "XRRSelectInput", 
                "bind_textdomain_codeset", 
                "eglCreateContext", 
                "g_error_new_valist", 
                "tan", 
                "eglQuerySurface", 
                "g_memdup", 
                "drmModeFreeConnector", 
                "g_malloc", 
                "XShmCreateImage", 
                "cairo_destroy", 
                "close", 
                "wl_shm_buffer_get_data", 
                "XRRGetOutputInfo", 
                "g_type_add_interface_static", 
                "g_slist_remove", 
                "eglSwapInterval", 
                "g_log", 
                "g_slice_alloc0", 
                "gbm_surface_create", 
                "gettimeofday", 
                "g_source_add_poll", 
                "g_string_insert_c", 
                "wl_proxy_marshal_constructor_versioned", 
                "g_list_insert_before", 
                "g_assertion_message_cmpnum", 
                "g_hash_table_destroy", 
                "exit", 
                "cairo_surface_destroy", 
                "wl_shm_buffer_get_format", 
                "g_string_assign", 
                "g_type_interface_add_prerequisite", 
                "wl_egl_window_resize", 
                "g_slice_alloc", 
                "g_printerr", 
                "g_source_get_time", 
                "__cxa_finalize", 
                "g_option_group_new", 
                "gdk_pixbuf_get_pixels", 
                "g_enum_register_static", 
                "eglMakeCurrent", 
                "cairo_rectangle", 
                "g_slice_copy", 
                "clock_gettime", 
                "drmModeAddFB", 
                "g_direct_equal", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "wl_egl_window_create", 
                "wl_proxy_destroy", 
                "g_option_group_add_entries", 
                "g_direct_hash", 
                "g_warn_message", 
                "XGetErrorText", 
                "eglGetConfigAttrib", 
                "g_key_file_new", 
                "g_hook_list_clear", 
                "g_array_set_size", 
                "g_hash_table_iter_next", 
                "g_list_prepend", 
                "drmHandleEvent", 
                "memcmp", 
                "drmModeGetResources", 
                "drmModeRmFB", 
                "g_get_user_config_dir", 
                "g_file_set_contents", 
                "g_logv", 
                "gdk_pixbuf_get_file_info", 
                "g_return_if_fail_warning", 
                "XCreateColormap", 
                "XSynchronize", 
                "XShmAttach", 
                "XFixesCreateRegion", 
                "g_queue_push_tail", 
                "strstr", 
                "drmModePageFlip", 
                "eglGetError", 
                "sincosf", 
                "gbm_create_device", 
                "eglSwapBuffers", 
                "eglDestroyContext", 
                "g_slist_foreach", 
                "wl_display_disconnect", 
                "drmModeGetEncoder", 
                "g_hook_list_invoke", 
                "gdk_pixbuf_get_colorspace", 
                "g_hash_table_new_full", 
                "cairo_set_source_rgb", 
                "gdk_pixbuf_get_height", 
                "eglCreateWindowSurface", 
                "g_ptr_array_new_with_free_func", 
                "g_hook_destroy_link", 
                "g_hash_table_foreach", 
                "g_string_new", 
                "g_queue_clear", 
                "g_error_free", 
                "shmat", 
                "g_slist_prepend", 
                "g_list_free_1", 
                "g_hook_find_func_data", 
                "g_type_register_fundamental", 
                "XRRGetScreenResources", 
                "g_hash_table_size", 
                "drmModeFreeEncoder", 
                "acosf", 
                "XNextEvent", 
                "eglChooseConfig", 
                "g_array_append_vals", 
                "g_source_new", 
                "g_str_equal", 
                "strcspn", 
                "g_print", 
                "eglGetDisplay", 
                "g_array_sized_new", 
                "g_once_init_enter", 
                "sinf", 
                "g_ptr_array_free", 
                "g_module_open", 
                "wl_display_connect", 
                "gbm_surface_lock_front_buffer", 
                "g_queue_init", 
                "strlen", 
                "wl_shm_buffer_get", 
                "XShmQueryExtension", 
                "XMapWindow", 
                "g_slist_free", 
                "XPending", 
                "g_hash_table_insert", 
                "wl_proxy_add_listener", 
                "g_list_remove", 
                "_ITM_registerTMCloneTable", 
                "g_boxed_type_register_static", 
                "sqrtf", 
                "g_error_copy", 
                "wl_shm_buffer_get_height", 
                "eglDestroySurface", 
                "XSetWMNormalHints", 
                "XOpenDisplay", 
                "XSetErrorHandler", 
                "g_queue_pop_head", 
                "eglBindAPI", 
                "g_hash_table_iter_init", 
                "g_string_append_printf", 
                "g_quark_from_static_string", 
                "g_list_delete_link", 
                "g_assertion_message_expr", 
                "open", 
                "g_assertion_message_cmpstr", 
                "g_slice_free1", 
                "g_type_name", 
                "g_key_file_load_from_file", 
                "g_type_register_static_simple", 
                "gdk_pixbuf_get_bits_per_sample", 
                "XGetWindowAttributes", 
                "g_value_register_transform_func", 
                "cairo_stroke", 
                "g_key_file_get_string", 
                "XShmGetImage", 
                "cairo_create", 
                "gbm_bo_get_stride", 
                "XFixesFetchRegionAndBounds", 
                "XRRQueryExtension", 
                "g_strndup", 
                "g_list_reverse", 
                "g_strjoinv", 
                "tanf", 
                "g_strstr_len", 
                "XDamageCreate", 
                "g_str_hash", 
                "g_list_foreach", 
                "g_list_sort", 
                "memmem", 
                "shmdt", 
                "XGetImage"
            ], 
            "rpm": "cogl-1.22.2-3.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libcogl.so.20.4.2"
        }, 
        "usr/lib/libcogl-pango_so_20_4_2": {
            "report-functions": [
                "cairo_surface_destroy", 
                "cogl_meta_texture_foreach_in_region", 
                "__cxa_finalize", 
                "pango_cairo_font_map_new", 
                "cogl_color_init_from_4ub", 
                "pango_context_get_font_map", 
                "g_array_set_size", 
                "g_return_if_fail_warning", 
                "pango_layout_iter_next_line", 
                "g_hook_list_invoke", 
                "cogl_primitive_new_p2", 
                "cogl_texture_get_height", 
                "g_slist_prepend", 
                "pango_cairo_font_get_scaled_font", 
                "g_hook_find_func_data", 
                "cogl_pipeline_set_color", 
                "cogl_pipeline_copy", 
                "g_hook_list_init", 
                "cogl_atlas_texture_new_with_size", 
                "g_param_spec_pointer", 
                "g_hash_table_unref", 
                "g_assertion_message_expr", 
                "pango_renderer_get_matrix", 
                "g_type_register_static_simple", 
                "cairo_destroy", 
                "cairo_create", 
                "g_hook_prepend", 
                "g_once_init_enter", 
                "_ITM_deregisterTMCloneTable", 
                "_cogl_context_get_default", 
                "cogl_object_set_user_data", 
                "g_slice_alloc0", 
                "cogl_get_rectangle_indices", 
                "cogl_framebuffer_push_matrix", 
                "pango_cairo_font_map_set_resolution", 
                "pango_font_get_glyph_extents", 
                "cogl_pipeline_set_layer_filters", 
                "cairo_set_source_rgba", 
                "pango_layout_get_type", 
                "_ITM_registerTMCloneTable", 
                "g_slice_free1", 
                "cairo_surface_flush", 
                "g_hash_table_remove_all", 
                "cogl_get_draw_framebuffer", 
                "g_slice_alloc", 
                "pango_font_map_create_context", 
                "g_object_get_qdata", 
                "cogl_color_get_alpha_byte", 
                "cairo_image_surface_create", 
                "g_malloc0", 
                "cairo_image_surface_get_data", 
                "cogl_color_equal", 
                "g_hook_alloc", 
                "g_object_set_qdata_full", 
                "g_type_class_peek_parent", 
                "cogl_primitive_set_mode", 
                "_cogl_atlas_reserve_space", 
                "g_type_check_class_cast", 
                "cogl_framebuffer_translate", 
                "cogl_framebuffer_draw_rectangle", 
                "cogl_attribute_new", 
                "g_hook_destroy_link", 
                "_cogl_atlas_new", 
                "g_malloc", 
                "g_slist_free", 
                "pango_layout_get_iter", 
                "cogl_primitive_draw", 
                "g_hash_table_foreach", 
                "g_value_get_pointer", 
                "g_malloc_n", 
                "pango_extents_to_pixels", 
                "pango_layout_get_line_count", 
                "g_hash_table_new_full", 
                "cogl_pipeline_set_layer_combine", 
                "cogl_texture_set_region", 
                "cogl_primitive_new_with_attributes", 
                "cogl_color_get_red_byte", 
                "g_type_name", 
                "pango_renderer_get_type", 
                "g_free", 
                "g_quark_from_static_string", 
                "g_slist_foreach", 
                "cogl_buffer_map", 
                "g_array_free", 
                "g_direct_equal", 
                "pango_font_map_get_type", 
                "pango_layout_get_context", 
                "pango_renderer_get_color", 
                "cogl_color_get_blue_byte", 
                "cogl_pipeline_new", 
                "cogl_color_get_green_byte", 
                "g_log", 
                "_cogl_atlas_add_reorganize_callback", 
                "__stack_chk_fail", 
                "g_type_check_instance_is_a", 
                "cogl_primitive_set_indices", 
                "_cogl_atlas_texture_remove_reorganize_callback", 
                "cogl_framebuffer_draw_textured_rectangles", 
                "cogl_object_ref", 
                "pango_layout_get_line", 
                "g_object_new", 
                "pango_cairo_font_map_get_type", 
                "_cogl_texture_get_format", 
                "cairo_show_glyphs", 
                "g_object_class_install_property", 
                "g_object_ref", 
                "g_intern_static_string", 
                "cogl_buffer_unmap", 
                "cogl_object_unref", 
                "cogl_error_free", 
                "pango_renderer_draw_layout", 
                "g_hook_list_clear", 
                "pango_layout_line_ref", 
                "cogl_buffer_set_data", 
                "_cogl_atlas_texture_add_reorganize_callback", 
                "cogl_texture_allocate", 
                "g_direct_hash", 
                "cogl_pipeline_set_layer_wrap_mode", 
                "g_object_unref", 
                "g_hash_table_remove", 
                "cairo_set_scaled_font", 
                "cogl_texture_get_width", 
                "pango_layout_iter_get_line_readonly", 
                "g_hash_table_insert", 
                "g_array_new", 
                "pango_layout_iter_free", 
                "g_hash_table_destroy", 
                "cairo_image_surface_get_stride", 
                "g_type_check_instance_cast", 
                "pango_layout_line_unref", 
                "cogl_color_premultiply", 
                "g_type_class_adjust_private_offset", 
                "cogl_attribute_buffer_new_with_size", 
                "g_once_init_leave", 
                "pango_renderer_draw_layout_line", 
                "g_hash_table_lookup", 
                "cogl_framebuffer_pop_matrix", 
                "cogl_pipeline_set_layer_texture", 
                "pango_cairo_font_get_type"
            ], 
            "rpm": "cogl-1.22.2-3.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libcogl-pango.so.20.4.2"
        }, 
        "complexity": {
            "r2 aa": "failed: ERROR: Cannot find radare2 in PATH"
        }, 
        "usr/lib/libcogl-path_so_20_4_2": {
            "report-functions": [
                "cogl_is_pipeline", 
                "cogl_framebuffer_pop_clip", 
                "_ITM_registerTMCloneTable", 
                "g_hash_table_new", 
                "cogl_primitive_draw", 
                "_cogl_pipeline_layer_get_texture", 
                "cogl_framebuffer_draw_rectangle", 
                "cogl_primitive_new_with_attributes", 
                "g_enum_register_static", 
                "cogl_pipeline_get_n_layers", 
                "cogl_get_draw_framebuffer", 
                "cogl_texture_is_sliced", 
                "__cxa_finalize", 
                "cogl_pipeline_copy", 
                "_cogl_framebuffer_get_stencil_bits", 
                "_cogl_framebuffer_get_modelview_stack", 
                "g_once_init_leave", 
                "_cogl_context_get_default", 
                "g_free", 
                "cogl_attribute_new", 
                "_setjmp", 
                "g_once_init_enter", 
                "__assert_fail", 
                "_cogl_pipeline_prune_to_n_layers", 
                "g_array_set_size", 
                "_cogl_clip_stack_push_rectangle", 
                "cogl_is_framebuffer", 
                "_ITM_deregisterTMCloneTable", 
                "cogl_attribute_buffer_new_with_size", 
                "cogl_indices_new", 
                "g_realloc", 
                "g_slice_free1", 
                "g_type_register_static_simple", 
                "_cogl_texture_can_hardware_repeat", 
                "g_slice_copy", 
                "g_assertion_message_expr", 
                "__longjmp_chk", 
                "g_slice_alloc", 
                "_cogl_object_default_unref", 
                "g_str_equal", 
                "g_malloc_n", 
                "cogl_attribute_buffer_new", 
                "cogl_object_unref", 
                "_cogl_primitive_draw", 
                "cogl_get_source", 
                "g_malloc", 
                "_cogl_clip_stack_push_primitive", 
                "g_array_new", 
                "cogl_object_ref", 
                "g_array_free", 
                "__stack_chk_fail", 
                "_cogl_pipeline_foreach_layer_internal", 
                "cogl_primitive_set_indices", 
                "g_intern_static_string", 
                "g_str_hash", 
                "sincosf", 
                "g_array_append_vals", 
                "_cogl_framebuffer_get_projection_stack", 
                "_cogl_buffer_unmap_for_fill_or_fallback", 
                "g_log", 
                "g_hash_table_insert", 
                "cogl_object_get_gtype", 
                "g_type_class_peek_parent", 
                "g_return_if_fail_warning"
            ], 
            "rpm": "cogl-1.22.2-3.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libcogl-path.so.20.4.2"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " cogl", 
            "License": " LGPLv2+", 
            "URL": " http://www.clutter-project.org/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-13.phx2.fedoraproject.org", 
            "Description": "\nCogl is a small open source library for using 3D graphics hardware to draw\npretty pictures. The API departs from the flat state machine style of\nOpenGL and is designed to make it easy to write orthogonal components that\ncan render without stepping on each others toes.\n\nAs well aiming for a nice API, we think having a single library as opposed\nto an API specification like OpenGL has a few advantages too; like being\nable to paper over the inconsistencies/bugs of different OpenGL\nimplementations in a centralized place, not to mention the myriad of OpenGL\nextensions. It also means we are in a better position to provide utility\nAPIs that help software developers since they only need to be implemented\nonce and there is no risk of inconsistency between implementations.\n\nHaving other backends, besides OpenGL, such as drm, Gallium or D3D are\noptions we are interested in for the future.\n", 
            "Build Date": " Fri 10 Feb 2017 08:46:17 AM EST", 
            "Source RPM": " cogl-1.22.2-3.fc26.src.rpm", 
            "Version": " 1.22.2", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Fri 10 Feb 2017 11:16:28 AM EST, Key ID 812a6b4b64dab85d", 
            "Release": " 3.fc26", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " A library for using 3D graphics hardware to draw pretty pictures", 
            "Size": " 1531035"
        }
    }
}