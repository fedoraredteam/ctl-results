{
    "results": {
        "usr/lib/libcolordprivate_so_2_0_5": {
            "report-functions": [
                "cmsBuildTabulatedToneCurve16", 
                "cmsCreate_sRGBProfileTHR", 
                "g_type_class_adjust_private_offset", 
                "g_object_new", 
                "g_date_time_unref", 
                "udev_unref", 
                "cmsDictGetEntryList", 
                "g_param_spec_double", 
                "cmsMLUtranslationsCount", 
                "cmsCloseProfile", 
                "cmsMLUgetASCII", 
                "g_build_filename", 
                "g_param_spec_uint", 
                "cmsCreateNULLProfileTHR", 
                "cmsCreateExtendedTransform", 
                "g_ptr_array_ref", 
                "_Unwind_Resume", 
                "g_bytes_new_with_free_func", 
                "g_malloc0", 
                "g_markup_parse_context_parse", 
                "cmsGetDeviceClass", 
                "g_value_get_uint", 
                "g_ptr_array_add", 
                "g_value_set_boxed", 
                "g_file_enumerator_next_file", 
                "g_array_prepend_vals", 
                "cmsWriteRawTag", 
                "g_snprintf", 
                "g_file_get_parent", 
                "g_thread_pool_push", 
                "g_path_get_basename", 
                "g_file_make_directory_with_parents", 
                "cmsGetHeaderAttributes", 
                "cmsDictFree", 
                "cmsLabEncoded2Float", 
                "g_file_info_get_attribute_boolean", 
                "g_cclosure_marshal_generic", 
                "g_resource_ref", 
                "udev_list_entry_get_by_name", 
                "cmsGetHeaderFlags", 
                "g_boxed_type_register_static", 
                "g_bytes_new", 
                "g_quark_from_static_string", 
                "g_bytes_get_size", 
                "g_set_error_literal", 
                "cmsOpenProfileFromMemTHR", 
                "g_hash_table_remove", 
                "cmsCreateProofingTransformTHR", 
                "cmsSetProfileVersion", 
                "g_node_depth", 
                "g_strcmp0", 
                "g_array_sized_new", 
                "g_value_get_boolean", 
                "cmsSetDeviceClass", 
                "udev_hwdb_unref", 
                "g_slice_free1", 
                "g_propagate_error", 
                "g_strsplit", 
                "g_string_append_printf", 
                "g_signal_new", 
                "g_hash_table_get_keys", 
                "cmsPluginTHR", 
                "g_ptr_array_unref", 
                "cmsEstimateGamma", 
                "cmsMLUtranslationsCodes", 
                "udev_list_entry_get_value", 
                "g_clear_error", 
                "cmsNamedColorInfo", 
                "g_print", 
                "cmsNamedColorCount", 
                "g_intern_static_string", 
                "g_ptr_array_remove", 
                "cmsUnregisterPluginsTHR", 
                "__gmon_start__", 
                "cmsMLUsetWide", 
                "cmsDoTransform", 
                "cmsGetTagCount", 
                "g_markup_parse_context_unref", 
                "g_type_check_instance_cast", 
                "cmsIT8SetDataFormat", 
                "cmsCreateXYZProfileTHR", 
                "cmsBuildTabulatedToneCurveFloat", 
                "g_value_set_uint", 
                "g_ptr_array_sort", 
                "g_ucs4_to_utf8", 
                "cmsGetHeaderProfileID", 
                "cmsMLUgetWide", 
                "g_ascii_strtoull", 
                "g_file_load_contents", 
                "udev_new", 
                "g_slice_alloc", 
                "cmsIT8Free", 
                "cmsGetColorSpace", 
                "pow", 
                "g_string_insert_c", 
                "g_node_new", 
                "g_type_name", 
                "_ITM_registerTMCloneTable", 
                "g_malloc0_n", 
                "fdopen", 
                "g_str_equal", 
                "g_thread_pool_new", 
                "g_file_info_get_attribute_string", 
                "g_array_append_vals", 
                "g_type_register_static_simple", 
                "g_string_free", 
                "cmsXYZ2xyY", 
                "g_malloc_n", 
                "g_value_set_string", 
                "g_file_get_type", 
                "cmsReadTag", 
                "g_file_monitor_directory", 
                "g_strdelimit", 
                "cmsGetPCS", 
                "g_type_class_peek_parent", 
                "_ITM_deregisterTMCloneTable", 
                "g_strdup", 
                "g_file_get_contents", 
                "g_log", 
                "g_str_has_prefix", 
                "g_value_set_boolean", 
                "cmsCreateLab2ProfileTHR", 
                "g_signal_emit", 
                "g_date_time_format", 
                "g_markup_parse_context_new", 
                "cmsReadRawTag", 
                "g_string_append", 
                "cmsFreeToneCurve", 
                "g_return_if_fail_warning", 
                "g_param_spec_string", 
                "g_hash_table_new_full", 
                "cmsD50_XYZ", 
                "g_node_destroy", 
                "g_param_spec_boxed", 
                "g_hash_table_unref", 
                "g_hash_table_ref", 
                "g_prefix_error", 
                "g_list_free", 
                "cmsDoTransformStride", 
                "cmsGetToneCurveEstimatedTableEntries", 
                "g_file_enumerate_children", 
                "cmsGetTagSignature", 
                "g_str_hash", 
                "cmsMLUfree", 
                "g_file_new_for_path", 
                "cmsBuildGamma", 
                "g_hash_table_destroy", 
                "cmsSetAlarmCodes", 
                "g_type_add_instance_private", 
                "g_param_spec_object", 
                "cmsGetProfileInfoASCII", 
                "cmsSmoothToneCurve", 
                "g_once_init_leave", 
                "g_assertion_message_expr", 
                "g_str_has_suffix", 
                "g_utf8_to_ucs4", 
                "g_strchomp", 
                "g_object_class_install_property", 
                "g_array_unref", 
                "g_file_info_get_name", 
                "__gcc_personality_v0", 
                "g_signal_connect_data", 
                "g_file_get_path", 
                "g_error_free", 
                "cmsTempFromWhitePoint", 
                "g_object_unref", 
                "cmsTagLinkedTo", 
                "g_value_get_object", 
                "cmsDeleteContext", 
                "cmsCreateContext", 
                "cmsDictAddEntry", 
                "g_thread_pool_free", 
                "cmsIT8EnumProperties", 
                "cmsIT8SetSheetType", 
                "__stack_chk_fail", 
                "g_utf8_validate", 
                "g_strstr_len", 
                "g_ascii_strtod", 
                "g_strfreev", 
                "g_string_erase", 
                "cmsGetProfileVersion", 
                "g_ptr_array_set_size", 
                "cmsGetHeaderRenderingIntent", 
                "g_value_set_object", 
                "g_value_get_double", 
                "udev_hwdb_new", 
                "strlen", 
                "g_object_ref", 
                "g_error_matches", 
                "g_boxed_copy", 
                "cmsCreateTransformTHR", 
                "cmsGetHeaderCreator", 
                "cmsCreateRGBProfileTHR", 
                "cmsCreateMultiprofileTransformTHR", 
                "g_file_query_info_finish", 
                "cmsMD5computeID", 
                "g_param_spec_boolean", 
                "udev_hwdb_get_properties_list_entry", 
                "g_node_insert_before", 
                "g_node_traverse", 
                "g_array_ref", 
                "g_set_error", 
                "g_slice_alloc0", 
                "g_strdup_printf", 
                "cmsGetHeaderCreationDateTime", 
                "g_type_check_class_cast", 
                "cmsDictNextEntry", 
                "cmsSetLogErrorHandlerTHR", 
                "cmsIT8SaveToMem", 
                "cmsMLUalloc", 
                "g_ptr_array_new", 
                "cmsIT8Alloc", 
                "g_object_notify", 
                "g_file_query_info_async", 
                "cmsSetColorSpace", 
                "g_get_home_dir", 
                "g_strndup", 
                "g_hash_table_lookup", 
                "cmsWriteTag", 
                "g_value_set_double", 
                "cmsD50_xyY", 
                "__cxa_finalize", 
                "g_resource_unref", 
                "g_file_query_exists", 
                "g_string_truncate", 
                "g_resource_lookup_data", 
                "cmsIT8SetDataRowCol", 
                "g_string_new", 
                "cmsDictAlloc", 
                "g_ptr_array_free", 
                "cmsIT8GetProperty", 
                "cmsIT8GetSheetType", 
                "cmsGetContextUserData", 
                "cmsSliceSpaceFloat", 
                "g_file_replace_contents", 
                "g_ptr_array_new_with_free_func", 
                "g_file_query_info", 
                "mktime", 
                "cmsSaveProfileToMem", 
                "g_hash_table_insert", 
                "g_get_user_data_dir", 
                "g_malloc", 
                "g_array_new", 
                "g_ascii_formatd", 
                "exp", 
                "g_file_info_get_file_type", 
                "g_hash_table_size", 
                "g_free", 
                "cmsGetProfileContextID", 
                "g_type_check_instance_is_a", 
                "g_date_time_new_from_unix_local", 
                "cmsIT8SetPropertyStr", 
                "g_ascii_strtoll", 
                "cmsIT8LoadFromMem", 
                "g_once_init_enter", 
                "g_compute_checksum_for_data", 
                "g_bytes_unref", 
                "g_strv_length", 
                "cmsSetHeaderRenderingIntent", 
                "sqrt", 
                "cmsOpenProfileFromStreamTHR", 
                "cmsEvalToneCurveFloat", 
                "g_bytes_get_data", 
                "cmsIT8SetPropertyUncooked", 
                "g_ascii_dtostr", 
                "g_date_time_new_now_local", 
                "cmsMLUsetASCII", 
                "cmsDeleteTransform"
            ], 
            "rpm": "colord-libs-1.3.5-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libcolordprivate.so.2.0.5"
        }, 
        "usr/lib/libcolorhug_so_2_0_5": {
            "report-functions": [
                "g_usb_device_control_transfer", 
                "g_ptr_array_unref", 
                "__gmon_start__", 
                "g_usb_device_control_transfer_finish", 
                "_ITM_registerTMCloneTable", 
                "g_usb_device_error_quark", 
                "strchr", 
                "g_usb_device_interrupt_transfer_async", 
                "g_type_check_instance_cast", 
                "cd_spectrum_get_size", 
                "g_strlcpy", 
                "g_str_hash", 
                "g_type_class_adjust_private_offset", 
                "cd_it8_get_kind", 
                "g_object_new", 
                "g_main_loop_quit", 
                "__cxa_finalize", 
                "g_task_is_valid", 
                "g_malloc0", 
                "g_strcmp0", 
                "g_getenv", 
                "g_return_if_fail_warning", 
                "g_task_get_cancellable", 
                "g_task_get_type", 
                "g_print", 
                "g_task_set_task_data", 
                "strlen", 
                "g_string_free", 
                "_ITM_deregisterTMCloneTable", 
                "_Unwind_Resume", 
                "g_quark_from_static_string", 
                "g_strjoinv", 
                "cd_spectrum_dup", 
                "g_error_matches", 
                "cd_buffer_read_uint16_le", 
                "g_object_unref", 
                "g_usb_device_control_transfer_async", 
                "g_signal_new", 
                "__memcpy_chk", 
                "g_usb_device_get_type", 
                "g_signal_emit", 
                "g_hash_table_remove", 
                "g_once_init_enter", 
                "g_main_loop_new", 
                "g_task_propagate_boolean", 
                "__gcc_personality_v0", 
                "cd_it8_get_type", 
                "g_string_insert_c", 
                "cd_it8_has_option", 
                "strncpy", 
                "g_string_append_len", 
                "g_strdup", 
                "g_string_append_printf", 
                "g_log", 
                "g_strdup_printf", 
                "g_task_return_boolean", 
                "cd_spectrum_resample_to_size", 
                "g_task_get_source_object", 
                "g_object_ref", 
                "cd_spectrum_add_value", 
                "g_string_new", 
                "g_main_loop_unref", 
                "g_error_free", 
                "g_hash_table_insert", 
                "g_hash_table_lookup", 
                "cd_spectrum_new", 
                "g_assertion_message_expr", 
                "cd_it8_get_matrix", 
                "g_task_new", 
                "g_ptr_array_new_with_free_func", 
                "g_usb_device_release_interface", 
                "g_type_check_class_cast", 
                "g_ascii_strtoull", 
                "g_usb_device_get_vid", 
                "g_ptr_array_add", 
                "g_intern_static_string", 
                "__stack_chk_fail", 
                "g_once_init_leave", 
                "memcmp", 
                "g_usb_device_interrupt_transfer_finish", 
                "g_type_add_instance_private", 
                "g_type_register_static_simple", 
                "cd_mat33_get_data", 
                "cd_spectrum_free", 
                "cd_it8_get_title", 
                "g_hash_table_size", 
                "g_set_error", 
                "g_task_return_new_error", 
                "g_usb_device_get_pid", 
                "g_cclosure_marshal_generic", 
                "g_hash_table_new_full", 
                "g_timeout_add", 
                "g_type_class_peek_parent", 
                "g_usb_device_open", 
                "cd_buffer_read_uint32_le", 
                "g_bytes_new", 
                "g_set_error_literal", 
                "g_usb_device_set_configuration", 
                "g_usb_device_get_platform_id", 
                "cd_color_xyz_new", 
                "g_str_equal", 
                "g_hash_table_unref", 
                "g_cancellable_get_type", 
                "g_usb_device_claim_interface", 
                "__isoc99_sscanf", 
                "cd_spectrum_get_value", 
                "g_memdup", 
                "g_usb_device_close", 
                "g_bytes_get_data", 
                "g_task_get_task_data", 
                "g_prefix_error", 
                "g_type_check_instance_is_a"
            ], 
            "rpm": "colord-libs-1.3.5-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libcolorhug.so.2.0.5"
        }, 
        "complexity": {
            "r2 aa": "failed: ERROR: Cannot find radare2 in PATH"
        }, 
        "usr/lib/libcolordcompat_so": {
            "report-functions": [
                "g_return_if_fail_warning", 
                "_ITM_deregisterTMCloneTable", 
                "g_error_matches", 
                "g_object_unref", 
                "cd_client_import_profile_sync", 
                "cd_profile_get_id", 
                "g_compute_checksum_for_string", 
                "g_free", 
                "cd_client_error_quark", 
                "g_file_new_for_path", 
                "cd_device_connect_sync", 
                "cd_device_make_profile_default_sync", 
                "cd_client_connect_sync", 
                "cd_device_remove_profile_sync", 
                "cd_device_error_quark", 
                "cd_client_find_device_by_property_sync", 
                "cd_profile_connect_sync", 
                "cd_device_get_default_profile", 
                "cd_client_find_profile_by_filename_sync", 
                "__cxa_finalize", 
                "g_printerr", 
                "_ITM_registerTMCloneTable", 
                "cd_device_add_profile_sync", 
                "cd_device_get_id", 
                "__strdup", 
                "cd_client_find_profile_by_property_sync", 
                "cd_profile_get_filename", 
                "__gcc_personality_v0", 
                "_Unwind_Resume", 
                "cd_client_new", 
                "g_clear_error", 
                "__stack_chk_fail", 
                "__gmon_start__"
            ], 
            "rpm": "colord-libs-1.3.5-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libcolordcompat.so"
        }, 
        "usr/lib/libcolord_so_2_0_5": {
            "report-functions": [
                "g_cancellable_get_type", 
                "g_variant_builder_init", 
                "g_signal_connect_object", 
                "g_signal_connect_data", 
                "g_variant_get_child", 
                "cd_device_mode_to_string", 
                "g_hash_table_lookup", 
                "g_file_get_basename", 
                "g_hash_table_size", 
                "cd_device_kind_from_string", 
                "g_dbus_proxy_new_for_bus_sync", 
                "g_main_loop_quit", 
                "g_value_set_string", 
                "cd_icc_get_filename", 
                "g_object_unref", 
                "g_file_query_info_async", 
                "g_string_free", 
                "g_main_loop_unref", 
                "g_dbus_proxy_get_cached_property", 
                "cd_icc_get_checksum", 
                "g_set_error", 
                "g_dbus_message_get_message_type", 
                "g_value_set_boolean", 
                "g_type_add_instance_private", 
                "g_dbus_message_set_unix_fd_list", 
                "g_dbus_proxy_new_for_bus_finish", 
                "cd_object_scope_to_string", 
                "cd_color_xyz_free", 
                "cd_object_scope_from_string", 
                "__cxa_finalize", 
                "g_variant_iter_loop", 
                "cd_icc_new", 
                "cd_sensor_cap_to_string", 
                "g_dbus_error_strip_remote_error", 
                "cd_spectrum_add_value", 
                "g_string_append_printf", 
                "cd_device_relation_to_string", 
                "g_task_get_cancellable", 
                "g_file_new_for_path", 
                "g_variant_get_int64", 
                "g_task_return_pointer", 
                "g_dbus_error_is_remote_error", 
                "g_strv_get_type", 
                "g_value_dup_string", 
                "g_dbus_proxy_get_type", 
                "g_file_query_exists", 
                "g_task_propagate_boolean", 
                "g_variant_get_child_value", 
                "g_task_return_boolean", 
                "cd_spectrum_new", 
                "g_once_init_leave", 
                "g_dbus_proxy_get_connection", 
                "g_ptr_array_set_size", 
                "g_param_spec_uint", 
                "cd_spectrum_set_end", 
                "g_param_spec_string", 
                "cd_profile_error_from_string", 
                "g_log", 
                "g_task_new", 
                "g_get_real_time", 
                "g_str_hash", 
                "g_object_add_weak_pointer", 
                "g_list_free", 
                "localtime", 
                "g_variant_dup_string", 
                "g_type_name", 
                "g_hash_table_ref", 
                "g_dbus_connection_get_type", 
                "_ITM_deregisterTMCloneTable", 
                "g_task_get_task_data", 
                "g_dbus_error_register_error", 
                "g_clear_error", 
                "g_file_get_path", 
                "cd_sensor_error_from_string", 
                "g_ptr_array_new_with_free_func", 
                "cd_colorspace_to_string", 
                "cd_spectrum_set_start", 
                "g_file_copy", 
                "cd_client_error_from_string", 
                "g_hash_table_new_full", 
                "g_task_return_int", 
                "g_dbus_message_new_method_call", 
                "g_strcmp0", 
                "g_value_set_uint", 
                "g_variant_iter_init", 
                "g_task_get_type", 
                "g_hash_table_remove_all", 
                "g_variant_get", 
                "g_hash_table_insert", 
                "g_object_ref", 
                "g_ptr_array_add", 
                "_ITM_registerTMCloneTable", 
                "g_quark_from_static_string", 
                "g_object_new", 
                "g_dbus_connection_send_message_with_reply_finish", 
                "g_variant_get_uint64", 
                "g_file_query_info_finish", 
                "g_param_spec_int64", 
                "g_assertion_message_expr", 
                "g_task_set_task_data", 
                "g_type_register_static_simple", 
                "g_value_set_boxed", 
                "cd_color_xyz_new", 
                "cd_sensor_cap_from_string", 
                "__gcc_personality_v0", 
                "cd_colorspace_from_string", 
                "g_type_class_peek_parent", 
                "__gmon_start__", 
                "g_free", 
                "close", 
                "g_signal_emit", 
                "g_once_init_enter", 
                "g_value_set_int64", 
                "g_dbus_proxy_call_finish", 
                "cd_sensor_state_from_string", 
                "g_file_info_get_attribute_string", 
                "g_main_loop_run", 
                "__stack_chk_fail", 
                "g_dbus_message_get_body", 
                "g_param_spec_boolean", 
                "g_dbus_message_set_body", 
                "g_variant_get_uint32", 
                "g_task_return_error", 
                "g_variant_new", 
                "g_variant_ref", 
                "g_dbus_proxy_call", 
                "g_task_return_new_error", 
                "g_dbus_error_get_remote_error", 
                "g_hash_table_destroy", 
                "g_task_is_valid", 
                "g_variant_dup_strv", 
                "g_variant_builder_add", 
                "g_access", 
                "g_value_set_uint64", 
                "_Unwind_Resume", 
                "g_main_loop_new", 
                "cd_device_kind_to_string", 
                "g_malloc0", 
                "g_type_check_instance_cast", 
                "g_string_new", 
                "g_ptr_array_ref", 
                "g_task_get_source_object", 
                "g_cclosure_marshal_VOID__VOID", 
                "cd_icc_load_file", 
                "cd_spectrum_free", 
                "g_str_equal", 
                "g_error_matches", 
                "g_variant_get_boolean", 
                "g_hash_table_get_keys", 
                "cd_profile_kind_from_string", 
                "g_variant_get_string", 
                "g_strfreev", 
                "g_file_get_parent", 
                "g_dbus_connection_send_message_with_reply", 
                "g_object_class_install_property", 
                "g_task_propagate_int", 
                "g_intern_static_string", 
                "g_strdup", 
                "g_type_check_class_cast", 
                "g_file_get_type", 
                "g_ptr_array_unref", 
                "g_param_spec_uint64", 
                "strftime", 
                "open", 
                "g_dbus_proxy_get_name_owner", 
                "g_dbus_proxy_new_for_bus", 
                "g_file_make_directory_with_parents", 
                "cd_device_error_from_string", 
                "cd_icc_get_type", 
                "g_unix_fd_list_append", 
                "cd_device_mode_from_string", 
                "g_task_propagate_pointer", 
                "g_type_class_adjust_private_offset", 
                "g_strdup_printf", 
                "g_variant_unref", 
                "g_object_notify", 
                "cd_standard_space_to_string", 
                "g_hash_table_unref", 
                "cd_device_relation_from_string", 
                "g_error_free", 
                "g_timeout_add", 
                "g_get_user_data_dir", 
                "g_signal_new", 
                "g_param_spec_boxed", 
                "g_variant_get_strv", 
                "g_type_check_instance_is_a", 
                "g_variant_n_children", 
                "g_cclosure_marshal_VOID__OBJECT", 
                "g_unix_fd_list_new", 
                "g_build_filename", 
                "g_variant_type_checked_", 
                "g_source_remove", 
                "cd_sensor_kind_from_string", 
                "g_return_if_fail_warning"
            ], 
            "rpm": "colord-libs-1.3.5-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libcolord.so.2.0.5"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " colord-libs", 
            "License": " GPLv2+ and LGPLv2+", 
            "URL": " http://www.freedesktop.org/software/colord/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildhw-02.phx2.fedoraproject.org", 
            "Description": "\ncolord is a low level system activated daemon that maps color devices\nto color profiles in the system context.\n", 
            "Build Date": " Mon 27 Feb 2017 10:09:23 AM EST", 
            "Source RPM": " colord-1.3.5-1.fc26.src.rpm", 
            "Version": " 1.3.5", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Mon 27 Feb 2017 01:06:24 PM EST, Key ID 812a6b4b64dab85d", 
            "Release": " 1.fc26", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Color daemon library", 
            "Size": " 585388"
        }
    }
}