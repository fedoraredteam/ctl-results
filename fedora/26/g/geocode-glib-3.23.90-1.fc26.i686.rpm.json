{
    "results": {
        "complexity": {
            "r2 aa": "failed: ERROR: Cannot find radare2 in PATH"
        }, 
        "usr/lib/libgeocode-glib_so_0_0_0": {
            "report-functions": [
                "g_checksum_free", 
                "strchr", 
                "g_strdup_printf", 
                "g_param_spec_object", 
                "g_value_set_uint", 
                "g_value_set_double", 
                "g_propagate_error", 
                "soup_session_new_with_options", 
                "g_param_spec_double", 
                "json_reader_new", 
                "g_object_class_install_properties", 
                "g_type_class_unref", 
                "g_type_interface_add_prerequisite", 
                "soup_session_queue_message", 
                "g_task_run_in_thread", 
                "g_mutex_lock", 
                "g_once_init_leave", 
                "g_param_spec_uint64", 
                "g_param_spec_string", 
                "g_hash_table_iter_init", 
                "g_set_error_literal", 
                "g_node_insert", 
                "g_value_dup_object", 
                "g_assertion_message_expr", 
                "soup_session_send_message", 
                "g_checksum_update", 
                "g_cancellable_set_error_if_cancelled", 
                "g_ptr_array_add", 
                "atan2", 
                "g_value_copy", 
                "g_hash_table_lookup_extended", 
                "g_value_init", 
                "g_string_append_printf", 
                "g_regex_match", 
                "json_reader_list_members", 
                "json_reader_read_member", 
                "g_object_set", 
                "g_set_error", 
                "g_string_prepend", 
                "sqrt", 
                "g_type_instance_get_private", 
                "g_value_dup_string", 
                "g_type_check_instance_is_a", 
                "json_reader_get_string_value", 
                "__stack_chk_fail", 
                "g_hash_table_contains", 
                "g_checksum_new", 
                "g_strdup", 
                "bindtextdomain", 
                "g_string_truncate", 
                "g_weak_ref_get", 
                "g_strdup_value_contents", 
                "g_node_new", 
                "g_task_report_error", 
                "g_type_register_static_simple", 
                "g_type_class_adjust_private_offset", 
                "soup_message_new", 
                "g_checksum_get_string", 
                "g_hash_table_ref", 
                "g_hash_table_foreach", 
                "json_parser_new", 
                "_Unwind_Resume", 
                "g_type_class_add_private", 
                "sin", 
                "g_value_set_string", 
                "g_utf8_validate", 
                "g_value_get_string", 
                "g_match_info_is_partial_match", 
                "g_intern_static_string", 
                "g_value_get_uint64", 
                "g_object_unref", 
                "soup_uri_to_string", 
                "g_list_prepend", 
                "g_list_copy_deep", 
                "round", 
                "__gmon_start__", 
                "g_value_set_enum", 
                "g_clear_error", 
                "g_uri_parse_scheme", 
                "g_malloc0", 
                "json_node_get_value_type", 
                "g_ptr_array_set_size", 
                "json_reader_count_elements", 
                "setlocale", 
                "g_hash_table_insert", 
                "g_task_set_task_data", 
                "g_type_class_ref", 
                "g_get_application_name", 
                "g_icon_new_for_string", 
                "g_string_free", 
                "g_object_class_install_property", 
                "g_param_spec_enum", 
                "g_async_result_get_type", 
                "json_reader_get_member_name", 
                "g_file_new_for_path", 
                "g_enum_register_static", 
                "g_hash_table_size", 
                "g_value_transform", 
                "g_ptr_array_new", 
                "g_param_spec_uint", 
                "json_parser_load_from_data", 
                "g_ptr_array_unref", 
                "g_str_hash", 
                "g_log", 
                "g_task_return_new_error", 
                "strtol", 
                "g_str_equal", 
                "__cxa_finalize", 
                "g_task_get_source_object", 
                "g_file_load_contents_async", 
                "g_list_free", 
                "g_match_info_free", 
                "g_strfreev", 
                "g_type_check_class_cast", 
                "g_ptr_array_remove_index_fast", 
                "g_value_take_string", 
                "g_value_set_uint64", 
                "g_string_new", 
                "__gcc_personality_v0", 
                "g_type_add_instance_private", 
                "json_reader_get_value", 
                "json_node_get_string", 
                "g_object_ref", 
                "g_weak_ref_set", 
                "g_ascii_strtod", 
                "g_utf8_strup", 
                "g_file_get_contents", 
                "strncmp", 
                "soup_form_encode_hash", 
                "soup_message_get_uri", 
                "cos", 
                "g_io_error_quark", 
                "g_get_current_time", 
                "g_error_free", 
                "g_strstr_len", 
                "g_task_return_pointer", 
                "g_hash_table_unref", 
                "g_type_check_instance_cast", 
                "g_hash_table_new_full", 
                "g_node_destroy", 
                "g_node_traverse", 
                "g_free", 
                "g_regex_new", 
                "g_task_get_type", 
                "g_param_spec_boolean", 
                "nl_langinfo", 
                "__errno_location", 
                "g_list_reverse", 
                "g_type_interface_peek", 
                "g_application_get_application_id", 
                "g_value_get_boolean", 
                "strlen", 
                "g_return_if_fail_warning", 
                "g_icon_get_type", 
                "g_file_load_contents_finish", 
                "g_strsplit", 
                "g_strerror", 
                "g_ascii_dtostr", 
                "g_value_set_boolean", 
                "json_reader_get_error", 
                "g_value_get_double", 
                "json_reader_end_member", 
                "g_value_get_uint", 
                "g_error_new", 
                "g_object_notify_by_pspec", 
                "_ITM_deregisterTMCloneTable", 
                "g_ptr_array_new_with_free_func", 
                "g_match_info_fetch_named", 
                "g_strcmp0", 
                "g_build_filename", 
                "g_uri_unescape_segment", 
                "g_string_append", 
                "g_task_get_task_data", 
                "g_type_add_interface_static", 
                "g_list_free_full", 
                "g_regex_unref", 
                "g_strndup", 
                "g_match_info_matches", 
                "g_quark_from_static_string", 
                "g_strconcat", 
                "g_error_copy", 
                "g_ascii_formatd", 
                "g_str_has_prefix", 
                "g_task_new", 
                "g_mkdir_with_parents", 
                "bind_textdomain_codeset", 
                "g_mutex_unlock", 
                "g_hash_table_remove", 
                "g_type_name", 
                "g_object_new", 
                "g_file_set_contents", 
                "g_cancellable_get_type", 
                "g_value_get_object", 
                "g_value_get_enum", 
                "json_parser_get_root", 
                "g_once_impl", 
                "json_reader_get_double_value", 
                "json_reader_read_element", 
                "g_enum_get_value_by_nick", 
                "g_application_get_default", 
                "g_hash_table_iter_next", 
                "g_task_propagate_pointer", 
                "g_ascii_strcasecmp", 
                "g_once_init_enter", 
                "json_reader_is_value", 
                "json_reader_end_element", 
                "_ITM_registerTMCloneTable", 
                "g_hash_table_lookup", 
                "g_hash_table_new", 
                "g_value_unset", 
                "g_type_class_peek_parent", 
                "g_task_return_error", 
                "g_get_user_cache_dir"
            ], 
            "rpm": "geocode-glib-3.23.90-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libgeocode-glib.so.0.0.0"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " geocode-glib", 
            "License": " LGPLv2+", 
            "URL": " http://www.gnome.org/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-29.phx2.fedoraproject.org", 
            "Description": "\ngeocode-glib is a convenience library for the geocoding (finding longitude,\nand latitude from an address) and reverse geocoding (finding an address from\ncoordinates). It uses Nominatim service to achieve that. It also caches\n(reverse-)geocoding requests for faster results and to avoid unnecessary server\nload.\n", 
            "Build Date": " Mon 13 Feb 2017 09:12:34 AM EST", 
            "Source RPM": " geocode-glib-3.23.90-1.fc26.src.rpm", 
            "Version": " 3.23.90", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Mon 13 Feb 2017 11:03:29 AM EST, Key ID 812a6b4b64dab85d", 
            "Release": " 1.fc26", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Geocoding helper library", 
            "Size": " 217097"
        }
    }
}