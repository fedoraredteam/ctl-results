{
    "results": {
        "usr/lib/gstreamer-1_0/libgstcurl_so": {
            "report-functions": [
                "g_strndup", 
                "g_type_class_adjust_private_offset", 
                "gst_poll_new", 
                "g_cond_init", 
                "gst_poll_fd_ctl_write", 
                "g_mutex_lock", 
                "gst_base_sink_get_type", 
                "gst_poll_free", 
                "curl_easy_cleanup", 
                "g_value_dup_string", 
                "gst_poll_wait", 
                "strrchr", 
                "_ITM_deregisterTMCloneTable", 
                "gst_poll_fd_ctl_read", 
                "curl_easy_getinfo", 
                "g_value_get_boolean", 
                "g_date_time_format", 
                "curl_slist_append", 
                "g_value_set_int", 
                "g_str_has_prefix", 
                "g_assertion_message_expr", 
                "g_mutex_unlock", 
                "curl_easy_perform", 
                "curl_multi_remove_handle", 
                "g_strdup", 
                "gst_debug_log", 
                "curl_easy_strerror", 
                "gst_element_message_full", 
                "gst_poll_set_flushing", 
                "g_base64_encode_step", 
                "curl_easy_setopt", 
                "gst_element_get_state", 
                "g_return_if_fail_warning", 
                "curl_multi_cleanup", 
                "__errno_location", 
                "g_strerror", 
                "g_type_register_static_simple", 
                "gst_buffer_map", 
                "g_param_spec_string", 
                "g_strsplit_set", 
                "__cxa_finalize", 
                "curl_easy_init", 
                "g_date_time_unref", 
                "g_mkdir_with_parents", 
                "gst_poll_remove_fd", 
                "g_value_set_string", 
                "getsockname", 
                "g_type_class_peek_parent", 
                "g_byte_array_free", 
                "g_byte_array_append", 
                "curl_multi_info_read", 
                "g_filename_from_uri", 
                "g_strdup_printf", 
                "g_param_spec_boolean", 
                "strlen", 
                "__stack_chk_fail", 
                "g_value_set_boolean", 
                "g_byte_array_remove_range", 
                "curl_multi_add_handle", 
                "gst_event_parse_caps", 
                "g_byte_array_new", 
                "_gst_element_error_printf", 
                "_gst_debug_register_funcptr", 
                "g_utf8_validate", 
                "g_free", 
                "curl_multi_perform", 
                "_gst_debug_category_new", 
                "g_thread_try_new", 
                "gst_resource_error_quark", 
                "g_once_init_leave", 
                "g_thread_join", 
                "g_strfreev", 
                "g_type_check_instance_is_a", 
                "curl_multi_init", 
                "curl_slist_free_all", 
                "g_value_get_int", 
                "setsockopt", 
                "g_strchomp", 
                "_gst_debug_dump_mem", 
                "g_base64_encode_close", 
                "curl_multi_strerror", 
                "g_strv_length", 
                "_ITM_registerTMCloneTable", 
                "gst_poll_fd_init", 
                "gst_buffer_unmap", 
                "gst_element_class_add_static_pad_template", 
                "g_base64_encode", 
                "gst_element_class_set_static_metadata", 
                "__gmon_start__", 
                "g_date_time_new_now_local", 
                "g_random_int", 
                "g_once_init_enter", 
                "g_param_spec_int", 
                "g_object_class_install_property", 
                "g_malloc", 
                "g_cond_wait", 
                "g_error_free", 
                "gst_caps_get_structure", 
                "gst_structure_get_name", 
                "gst_element_register", 
                "g_memdup", 
                "g_intern_static_string", 
                "g_cond_clear"
            ], 
            "rpm": "gstreamer1-plugins-bad-free-extras-1.12.1-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gstreamer-1.0/libgstcurl.so"
        }, 
        "usr/lib/gstreamer-1_0/libgstteletext_so": {
            "report-functions": [
                "gst_structure_get_string", 
                "gst_element_class_add_static_pad_template", 
                "gst_pad_set_event_function_full", 
                "vbi_decode", 
                "gst_buffer_pool_new", 
                "gst_element_message_full", 
                "gst_element_get_type", 
                "gst_buffer_pool_set_config", 
                "gst_object_unref", 
                "g_value_get_int", 
                "gst_pad_push", 
                "_gst_debug_category_new", 
                "gst_query_new_allocation", 
                "g_string_new", 
                "g_value_set_boolean", 
                "g_string_append_printf", 
                "g_type_class_adjust_private_offset", 
                "g_type_class_peek_parent", 
                "gst_buffer_unmap", 
                "gst_resource_error_quark", 
                "gst_element_add_pad", 
                "g_once_init_leave", 
                "g_queue_free", 
                "vbi_print_page_region", 
                "g_object_class_install_property", 
                "gst_mini_object_unref", 
                "vbi_unref_page", 
                "gst_buffer_pool_get_config", 
                "gst_pad_push_event", 
                "vbi_event_handler_register", 
                "_gst_debug_register_funcptr", 
                "g_queue_is_empty", 
                "g_value_dup_string", 
                "g_type_name", 
                "gst_caps_is_empty", 
                "g_memdup", 
                "gst_caps_get_structure", 
                "_ITM_deregisterTMCloneTable", 
                "gst_debug_log", 
                "gst_buffer_pool_acquire_buffer", 
                "vbi_decoder_delete", 
                "gst_pad_query_caps", 
                "g_value_set_int", 
                "g_malloc", 
                "g_strdup", 
                "g_queue_push_tail", 
                "gst_flow_get_name", 
                "g_strchug", 
                "g_intern_static_string", 
                "vbi_draw_vt_page_region", 
                "gst_pad_event_default", 
                "g_type_register_static_simple", 
                "g_param_spec_int", 
                "__gmon_start__", 
                "gst_element_message_full_with_details", 
                "g_strcmp0", 
                "g_queue_new", 
                "gst_buffer_pool_config_set_params", 
                "gst_buffer_get_size", 
                "_ITM_registerTMCloneTable", 
                "gst_pad_new_from_static_template", 
                "g_free", 
                "gst_buffer_new_wrapped", 
                "g_strfreev", 
                "gst_event_type_get_name", 
                "g_value_set_string", 
                "gst_pad_set_chain_function_full", 
                "g_mutex_unlock", 
                "__stack_chk_fail", 
                "gst_pad_peer_query_caps", 
                "g_strchomp", 
                "gst_buffer_pool_set_active", 
                "g_return_if_fail_warning", 
                "g_string_free", 
                "gst_event_new_caps", 
                "__cxa_finalize", 
                "g_string_append", 
                "gst_structure_set", 
                "gst_query_parse_nth_allocation_pool", 
                "gst_make_element_message_details", 
                "vbi_fetch_vt_page", 
                "gst_element_register", 
                "gst_buffer_new_allocate", 
                "gst_mini_object_make_writable", 
                "gst_element_class_set_static_metadata", 
                "gst_query_get_n_allocation_pools", 
                "vbi_decoder_new", 
                "g_param_spec_string", 
                "g_param_spec_boolean", 
                "g_mutex_clear", 
                "g_mutex_init", 
                "g_queue_pop_head", 
                "gst_pad_peer_query", 
                "g_malloc0", 
                "_gst_element_error_printf", 
                "gst_structure_get_name", 
                "g_value_get_boolean", 
                "g_log", 
                "g_once_init_enter", 
                "gst_stream_error_quark", 
                "gst_buffer_map", 
                "g_mutex_lock"
            ], 
            "rpm": "gstreamer1-plugins-bad-free-extras-1.12.1-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gstreamer-1.0/libgstteletext.so"
        }, 
        "usr/lib/gstreamer-1_0/libgstmodplug_so": {
            "report-functions": [
                "gst_element_get_type", 
                "g_object_class_install_property", 
                "gst_buffer_resize", 
                "_Znwj", 
                "gst_pad_pull_range", 
                "gst_pad_set_activate_function_full", 
                "_Unwind_Resume", 
                "g_value_set_int", 
                "gst_pad_set_event_function_full", 
                "gst_pad_pause_task", 
                "_ZN10CSoundFile6CreateEPKhj", 
                "gst_stream_error_quark", 
                "_ZNK10CSoundFile14GetMaxPositionEv", 
                "g_value_set_boolean", 
                "g_intern_static_string", 
                "gst_pad_set_activatemode_function_full", 
                "g_param_spec_boolean", 
                "_gst_debug_category_new", 
                "__udivdi3", 
                "__divdi3", 
                "gst_buffer_new_allocate", 
                "g_param_spec_string", 
                "gst_caps_is_fixed", 
                "gst_buffer_unmap", 
                "gst_tag_list_new_empty", 
                "gst_event_new_caps", 
                "g_type_class_peek_parent", 
                "gst_pad_get_peer", 
                "gst_buffer_fill", 
                "gst_util_uint64_scale_int", 
                "gst_structure_get_string", 
                "g_rec_mutex_lock", 
                "_gst_debug_register_funcptr", 
                "gst_query_parse_position", 
                "gst_query_new_scheduling", 
                "_ZN10CSoundFileC1Ev", 
                "g_rec_mutex_unlock", 
                "gst_event_parse_seek", 
                "gst_pad_push_event", 
                "gst_element_post_message", 
                "gst_event_new_tag", 
                "_ITM_registerTMCloneTable", 
                "gst_buffer_map", 
                "gst_pad_start_task", 
                "_ZdlPvj", 
                "gst_element_register", 
                "gst_pad_peer_query", 
                "_ZN10CSoundFile19SetReverbParametersEjj", 
                "gst_pad_event_default", 
                "gst_pad_query_duration", 
                "gst_element_class_add_static_pad_template", 
                "_ZN10CSoundFile15GetSongCommentsEPcjj", 
                "gst_caps_get_structure", 
                "gst_pad_push", 
                "_ZN10CSoundFile21SetSurroundParametersEjj", 
                "__moddi3", 
                "__cxa_finalize", 
                "_ZN10CSoundFile15SetWaveConfigExEbbbbbbb", 
                "gst_object_unref", 
                "g_value_get_int", 
                "gst_pad_set_query_function_full", 
                "gst_structure_fixate_field_nearest_int", 
                "_ZN10CSoundFile7DestroyEv", 
                "gst_element_message_full", 
                "gst_pad_get_type", 
                "g_return_if_fail_warning", 
                "gst_debug_log", 
                "gst_element_class_set_static_metadata", 
                "_ITM_deregisterTMCloneTable", 
                "__gxx_personality_v0", 
                "gst_mini_object_unref", 
                "g_once_init_enter", 
                "g_str_equal", 
                "gst_event_new_flush_start", 
                "gst_query_set_duration", 
                "gst_query_parse_duration", 
                "gst_pad_get_pad_template_caps", 
                "gst_query_set_position", 
                "_ZN10CSoundFile13SetWaveConfigEjjjb", 
                "gst_query_has_scheduling_mode_with_flags", 
                "gst_event_new_eos", 
                "g_type_check_instance_is_a", 
                "g_type_register_static_simple", 
                "gst_event_new_flush_stop", 
                "gst_caps_fixate", 
                "gst_segment_init", 
                "gst_structure_fixate_field_string", 
                "_ZN10CSoundFile13SetCurrentPosEj", 
                "_ZNK10CSoundFile13GetCurrentPosEv", 
                "g_once_init_leave", 
                "_ZN10CSoundFile4ReadEPvj", 
                "g_value_get_boolean", 
                "gst_pad_activate_mode", 
                "_ZN10CSoundFile9GetLengthEbb", 
                "gst_pad_new_from_static_template", 
                "gst_mini_object_make_writable", 
                "g_type_class_adjust_private_offset", 
                "g_assertion_message_expr", 
                "gst_structure_get_int", 
                "gst_message_new_segment_start", 
                "_ZN10CSoundFileD1Ev", 
                "gst_pad_query_default", 
                "gst_pad_send_event", 
                "_ZN10CSoundFile17SetResamplingModeEj", 
                "__gmon_start__", 
                "gst_element_add_pad", 
                "gst_tag_list_add", 
                "g_param_spec_int", 
                "gst_pad_get_allowed_caps", 
                "gst_pad_stop_task", 
                "gst_flow_get_name", 
                "_ZN10CSoundFile18SetXBassParametersEjj", 
                "__stack_chk_fail", 
                "gst_event_new_segment"
            ], 
            "rpm": "gstreamer1-plugins-bad-free-extras-1.12.1-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gstreamer-1.0/libgstmodplug.so"
        }, 
        "usr/lib/gstreamer-1_0/libgstassrender_so": {
            "report-functions": [
                "gst_video_frame_unmap", 
                "gst_segment_clip", 
                "gst_video_overlay_composition_new", 
                "ass_render_frame", 
                "gst_query_parse_caps", 
                "gst_query_set_caps_result", 
                "ass_renderer_done", 
                "gst_event_parse_tag", 
                "gst_video_info_init", 
                "ass_process_codec_private", 
                "gst_video_meta_unmap", 
                "gst_caps_can_intersect", 
                "gst_element_add_pad", 
                "g_mutex_lock", 
                "gst_pad_event_default", 
                "ass_free_track", 
                "gst_pad_set_chain_function_full", 
                "gst_pad_set_event_function_full", 
                "g_type_class_peek_parent", 
                "gst_caps_features_is_any", 
                "gst_segment_init", 
                "gst_tag_list_get_tag_size", 
                "g_mutex_init", 
                "_gst_element_error_printf", 
                "gst_pad_push_event", 
                "gst_buffer_add_video_meta", 
                "g_cond_clear", 
                "ass_set_fonts", 
                "gst_caps_features_add", 
                "g_value_set_boolean", 
                "gst_structure_get_string", 
                "gst_structure_get", 
                "gst_query_parse_nth_allocation_meta", 
                "gst_event_copy_segment", 
                "gst_pad_get_pad_template_caps", 
                "gst_pad_new_from_static_template", 
                "ass_library_init", 
                "ass_set_pixel_aspect", 
                "gst_event_parse_caps", 
                "g_ascii_strcasecmp", 
                "gst_pad_check_reconfigure", 
                "gst_element_get_type", 
                "gst_structure_has_name", 
                "gst_caps_is_any", 
                "g_mutex_clear", 
                "gst_pad_peer_query_caps", 
                "gst_video_overlay_rectangle_new_raw", 
                "g_strdup_vprintf", 
                "g_cond_broadcast", 
                "gst_caps_set_features", 
                "gst_video_meta_map", 
                "_gst_debug_category_new", 
                "gst_caps_is_subset", 
                "gst_element_message_full", 
                "gst_mini_object_unref", 
                "gst_caps_features_remove", 
                "gst_pad_get_current_caps", 
                "gst_caps_get_features", 
                "gst_tag_list_get_sample_index", 
                "gst_mini_object_copy", 
                "g_free", 
                "gst_query_new_allocation", 
                "gst_pad_peer_query", 
                "gst_structure_copy", 
                "ass_set_extract_fonts", 
                "g_cond_init", 
                "g_type_register_static_simple", 
                "ass_set_frame_size", 
                "gst_buffer_add_video_overlay_composition_meta", 
                "ass_new_track", 
                "gst_stream_error_quark", 
                "gst_structure_get_value", 
                "gst_caps_features_contains", 
                "gst_pad_get_type", 
                "g_intern_static_string", 
                "g_value_get_boolean", 
                "g_once_init_enter", 
                "gst_buffer_unmap", 
                "ass_process_chunk", 
                "gst_element_class_set_static_metadata", 
                "g_once_init_leave", 
                "_ITM_registerTMCloneTable", 
                "ass_set_message_cb", 
                "gst_element_class_add_static_pad_template", 
                "ass_renderer_init", 
                "g_log", 
                "gst_event_parse_gap", 
                "gst_video_overlay_composition_blend", 
                "g_mutex_unlock", 
                "__gmon_start__", 
                "g_value_get_boxed", 
                "__stack_chk_fail", 
                "gst_debug_log", 
                "gst_caps_new_empty", 
                "gst_buffer_map", 
                "gst_caps_is_fixed", 
                "g_param_spec_boolean", 
                "g_cond_wait", 
                "g_type_check_instance_is_a", 
                "g_type_class_adjust_private_offset", 
                "gst_video_info_from_caps", 
                "ass_free_event", 
                "gst_pad_send_event", 
                "gst_caps_append", 
                "gst_video_overlay_composition_meta_api_get_type", 
                "gst_pad_set_query_function_full", 
                "gst_caps_get_structure", 
                "gst_element_register", 
                "ass_set_hinting", 
                "ass_set_use_margins", 
                "gst_static_caps_get", 
                "gst_pad_push", 
                "gst_buffer_new_allocate", 
                "gst_segment_to_running_time", 
                "g_object_class_install_property", 
                "ass_set_margins", 
                "gst_sample_get_info", 
                "gst_video_frame_map", 
                "gst_caps_new_full", 
                "strlen", 
                "gst_event_new_caps", 
                "_ITM_deregisterTMCloneTable", 
                "ass_set_storage_size", 
                "gst_caps_get_size", 
                "g_type_name", 
                "gst_sample_get_buffer", 
                "gst_query_find_allocation_meta", 
                "gst_util_uint64_scale_int", 
                "gst_caps_is_empty", 
                "g_assertion_message_expr", 
                "gst_pad_query_default", 
                "ass_set_font_scale", 
                "_gst_debug_register_funcptr", 
                "__cxa_finalize", 
                "gst_mini_object_make_writable", 
                "gst_mini_object_ref", 
                "ass_add_font", 
                "gst_caps_intersect_full", 
                "gst_caps_features_copy", 
                "gst_pad_mark_reconfigure"
            ], 
            "rpm": "gstreamer1-plugins-bad-free-extras-1.12.1-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gstreamer-1.0/libgstassrender.so"
        }, 
        "usr/lib/gstreamer-1_0/libgstopenal_so": {
            "report-functions": [
                "alGetEnumValue", 
                "alIsSource", 
                "alGetSourcei", 
                "g_object_class_install_property", 
                "g_usleep", 
                "bindtextdomain", 
                "alcCaptureStart", 
                "alGetString", 
                "alcIsExtensionPresent", 
                "gst_element_register", 
                "alSourceRewind", 
                "gst_mini_object_copy", 
                "alcOpenDevice", 
                "gst_mini_object_unref", 
                "_gst_debug_register_funcptr", 
                "gst_element_class_add_static_pad_template", 
                "g_log", 
                "g_type_class_peek_parent", 
                "alcCaptureCloseDevice", 
                "alIsExtensionPresent", 
                "_ITM_registerTMCloneTable", 
                "_gst_element_error_printf", 
                "g_mutex_unlock", 
                "g_value_set_string", 
                "gst_structure_new", 
                "g_assertion_message_expr", 
                "alcCaptureStop", 
                "alDeleteBuffers", 
                "g_value_get_uint", 
                "g_once_init_leave", 
                "alcCreateContext", 
                "g_once_init_enter", 
                "alcGetContextsDevice", 
                "alcGetString", 
                "alGetError", 
                "g_intern_static_string", 
                "alSourceQueueBuffers", 
                "g_type_register_static_simple", 
                "g_type_name", 
                "alGenSources", 
                "gst_audio_src_get_type", 
                "alcCloseDevice", 
                "alSourceStop", 
                "gst_resource_error_quark", 
                "g_value_get_pointer", 
                "g_value_dup_string", 
                "g_mutex_lock", 
                "gst_caps_append_structure", 
                "g_param_spec_uint", 
                "alcCaptureOpenDevice", 
                "gst_pad_get_pad_template_caps", 
                "alcDestroyContext", 
                "gst_audio_channel_positions_to_mask", 
                "alcGetIntegerv", 
                "_gst_debug_category_new", 
                "g_param_spec_pointer", 
                "gst_element_class_set_static_metadata", 
                "g_mutex_clear", 
                "g_value_set_pointer", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "__gmon_start__", 
                "g_malloc", 
                "g_mutex_init", 
                "alGenBuffers", 
                "alSourcei", 
                "alDeleteSources", 
                "alSourcePlay", 
                "alBufferData", 
                "gst_debug_log", 
                "alSourceUnqueueBuffers", 
                "gst_caps_is_empty", 
                "g_param_spec_string", 
                "g_strdup", 
                "bind_textdomain_codeset", 
                "gst_audio_sink_get_type", 
                "__stack_chk_fail", 
                "alcGetProcAddress", 
                "alcGetError", 
                "g_value_set_uint", 
                "g_type_class_adjust_private_offset", 
                "gst_structure_set", 
                "gst_caps_new_empty", 
                "alcCaptureSamples", 
                "gst_element_message_full"
            ], 
            "rpm": "gstreamer1-plugins-bad-free-extras-1.12.1-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gstreamer-1.0/libgstopenal.so"
        }, 
        "usr/lib/gstreamer-1_0/libgstkate_so": {
            "report-functions": [
                "kate_clear", 
                "gst_tag_to_vorbis_comments", 
                "gst_buffer_get_size", 
                "kate_palette_init", 
                "g_queue_is_empty", 
                "gst_structure_set", 
                "g_value_init", 
                "g_value_take_boxed", 
                "gst_library_error_quark", 
                "memchr", 
                "g_param_spec_boolean", 
                "_gst_debug_category_new", 
                "g_list_foreach", 
                "kate_high_decode_clear", 
                "gst_structure_has_name", 
                "gst_buffer_extract", 
                "gst_buffer_new_wrapped", 
                "strlen", 
                "g_slice_free1", 
                "gst_tag_setter_get_tag_list", 
                "gst_tag_list_new_empty", 
                "g_param_spec_string", 
                "g_return_if_fail_warning", 
                "gst_tag_setter_get_type", 
                "gst_buffer_resize", 
                "g_snprintf", 
                "kate_tracker_clear", 
                "kate_info_init", 
                "kate_encode_set_palette", 
                "g_value_unset", 
                "kate_info_set_original_canvas_size", 
                "g_value_get_string", 
                "g_value_get_float", 
                "kate_comment_init", 
                "gst_mini_object_unref", 
                "gst_tag_parse_extended_comment", 
                "g_param_spec_int", 
                "gst_mini_object_copy", 
                "kate_encode_get_granule", 
                "gst_element_add_pad", 
                "__gmon_start__", 
                "gst_event_new_custom", 
                "gst_query_set_convert", 
                "g_type_class_adjust_private_offset", 
                "kate_info_clear", 
                "_ITM_registerTMCloneTable", 
                "g_value_set_float", 
                "gst_stream_error_quark", 
                "gst_structure_has_field", 
                "gst_pad_push_event", 
                "gst_caps_from_string", 
                "strncpy", 
                "g_strdup_printf", 
                "g_slice_alloc", 
                "g_type_name", 
                "gst_pad_get_current_caps", 
                "memmove", 
                "kate_granule_time", 
                "kate_comment_clear", 
                "kate_info_set_language", 
                "kate_text_validate", 
                "gst_object_unref", 
                "gst_event_copy_segment", 
                "g_value_get_int", 
                "kate_comment_add_tag", 
                "gst_tag_list_insert", 
                "gst_tag_list_add", 
                "gst_caps_get_structure", 
                "gst_event_parse_caps", 
                "gst_query_parse_convert", 
                "gst_structure_get_int", 
                "g_log", 
                "gst_segment_clip", 
                "gst_buffer_copy_into", 
                "gst_query_set_caps_result", 
                "g_queue_pop_head", 
                "g_type_class_peek_parent", 
                "g_strdup", 
                "gst_value_array_append_value", 
                "gst_pad_send_event", 
                "kate_tracker_init", 
                "gst_pad_get_type", 
                "kate_encode_keepalive", 
                "gst_caps_new_simple", 
                "kate_encode_set_markup_type", 
                "gst_event_parse_tag", 
                "g_malloc", 
                "gst_value_array_get_value", 
                "kate_encode_headers", 
                "gst_debug_log", 
                "kate_decode_headerin", 
                "kate_high_decode_packetin", 
                "gst_mini_object_ref", 
                "kate_encode_init", 
                "g_list_delete_link", 
                "kate_packet_wrap", 
                "gst_event_get_structure", 
                "gst_tag_list_from_vorbiscomment_buffer", 
                "g_object_class_install_property", 
                "gst_structure_get_string", 
                "g_strdelimit", 
                "gst_mini_object_replace", 
                "kate_bitmap_init", 
                "gst_buffer_map", 
                "gst_pad_event_default", 
                "g_assertion_message_expr", 
                "gst_structure_new", 
                "gst_event_new_caps", 
                "g_list_free", 
                "g_type_add_interface_static", 
                "g_param_spec_float", 
                "kate_info_set_category", 
                "gst_mini_object_make_writable", 
                "kate_encode_text", 
                "_ITM_deregisterTMCloneTable", 
                "kate_meta_query_count", 
                "gst_value_array_get_size", 
                "g_queue_push_tail", 
                "gst_query_type_get_name", 
                "g_value_set_boolean", 
                "g_list_append", 
                "g_type_register_static_simple", 
                "kate_region_init", 
                "kate_encode_finish", 
                "kate_encode_set_bitmap", 
                "gst_tag_list_merge", 
                "g_value_get_boxed", 
                "gst_pad_use_fixed_caps", 
                "kate_duration_granule", 
                "gst_event_new_tag", 
                "gst_pad_set_event_function_full", 
                "kate_tracker_update", 
                "__stack_chk_fail", 
                "gst_object_get_parent", 
                "gst_event_type_get_name", 
                "gst_tag_list_from_vorbiscomment", 
                "gst_pad_query_default", 
                "gst_buffer_unmap", 
                "gst_buffer_fill", 
                "strcmp", 
                "gst_pad_has_current_caps", 
                "g_queue_free", 
                "g_value_set_string", 
                "kate_text_remove_markup", 
                "gst_pad_new_from_static_template", 
                "gst_element_class_add_static_pad_template", 
                "g_once_init_enter", 
                "gst_caps_is_fixed", 
                "gst_tag_list_to_vorbiscomment_buffer", 
                "g_once_init_leave", 
                "gst_element_register", 
                "g_ascii_strdown", 
                "gst_element_message_full", 
                "g_intern_static_string", 
                "gst_flow_get_name", 
                "gst_pad_set_chain_function_full", 
                "kate_meta_query", 
                "kate_encode_set_region", 
                "g_queue_new", 
                "__cxa_finalize", 
                "gst_element_class_set_static_metadata", 
                "_gst_element_error_printf", 
                "gst_pad_set_query_function_full", 
                "gst_structure_get_value", 
                "g_type_check_instance_is_a", 
                "gst_pad_push", 
                "kate_high_decode_init", 
                "kate_packet_clear", 
                "gst_caps_new_empty_simple", 
                "gst_structure_take_value", 
                "gst_tag_setter_get_tag_merge_mode", 
                "kate_granule_shift", 
                "gst_buffer_new_allocate", 
                "g_value_set_int", 
                "g_free", 
                "gst_element_get_type", 
                "gst_static_pad_template_get_caps", 
                "_gst_debug_register_funcptr"
            ], 
            "rpm": "gstreamer1-plugins-bad-free-extras-1.12.1-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gstreamer-1.0/libgstkate.so"
        }, 
        "usr/lib/gstreamer-1_0/libgstschro_so": {
            "report-functions": [
                "g_slice_alloc0", 
                "schro_encoder_pull_full", 
                "g_param_spec_boolean", 
                "g_value_init", 
                "gst_object_unref", 
                "schro_video_format_get_bit_depth", 
                "gst_buffer_new_wrapped", 
                "__gmon_start__", 
                "schro_encoder_get_video_format", 
                "gst_mini_object_ref", 
                "schro_frame_set_free_callback", 
                "schro_buffer_new_with_data", 
                "schro_decoder_autoparse_push_end_of_sequence", 
                "gst_tag_list_add", 
                "gst_buffer_pool_get_config", 
                "gst_query_add_allocation_meta", 
                "gst_video_encoder_get_type", 
                "gst_buffer_get_all_memory", 
                "g_param_spec_double", 
                "gst_buffer_new", 
                "gst_video_decoder_set_use_default_pad_acceptcaps", 
                "gst_video_decoder_add_to_frame", 
                "gst_video_decoder_negotiate", 
                "gst_video_frame_map", 
                "gst_util_uint64_scale", 
                "g_value_set_boxed", 
                "g_value_unset", 
                "schro_encoder_push_frame_full", 
                "g_object_class_install_property", 
                "g_once_init_leave", 
                "gst_video_decoder_get_type", 
                "gst_element_class_add_static_pad_template", 
                "g_strdelimit", 
                "_ITM_deregisterTMCloneTable", 
                "gst_structure_new", 
                "g_assertion_message_expr", 
                "schro_video_format_set_std_signal_range", 
                "gst_video_meta_api_get_type", 
                "gst_structure_get_string", 
                "g_slice_free1", 
                "gst_video_decoder_set_output_state", 
                "_gst_debug_category_new", 
                "gst_video_encoder_finish_frame", 
                "g_type_register_static_simple", 
                "g_enum_register_static", 
                "gst_memory_map", 
                "gst_caps_fixate", 
                "gst_adapter_masked_scan_uint32", 
                "schro_frame_new", 
                "g_value_set_boolean", 
                "__stack_chk_fail", 
                "schro_encoder_get_setting_info", 
                "g_malloc", 
                "g_once_init_enter", 
                "gst_video_codec_state_ref", 
                "gst_element_post_message", 
                "schro_encoder_new", 
                "schro_encoder_start", 
                "g_strdup_printf", 
                "g_malloc0", 
                "gst_event_new_tag", 
                "schro_video_format_set_std_video_format", 
                "gst_video_encoder_set_output_state", 
                "schro_encoder_set_packet_assembly", 
                "gst_buffer_get_size", 
                "gst_structure_set_value", 
                "gst_buffer_append_memory", 
                "schro_encoder_setting_get_double", 
                "g_value_set_enum", 
                "schro_decoder_free", 
                "g_intern_static_string", 
                "schro_tag_free", 
                "g_free", 
                "g_value_get_enum", 
                "gst_caps_is_empty", 
                "schro_encoder_setting_set_double", 
                "gst_adapter_copy", 
                "gst_mini_object_unref", 
                "gst_caps_get_structure", 
                "schro_encoder_get_n_settings", 
                "schro_decoder_autoparse_push", 
                "g_value_set_int", 
                "g_type_class_peek_parent", 
                "gst_buffer_pool_set_config", 
                "schro_decoder_autoparse_wait", 
                "gst_video_decoder_have_frame", 
                "schro_encoder_wait", 
                "gst_debug_log", 
                "gst_buffer_get_memory", 
                "schro_video_format_set_std_colour_spec", 
                "schro_init", 
                "schro_decoder_pull", 
                "schro_buffer_unref", 
                "g_type_class_adjust_private_offset", 
                "schro_encoder_set_video_format", 
                "gst_tag_list_new_empty", 
                "schro_decoder_new", 
                "g_value_get_double", 
                "_gst_debug_register_funcptr", 
                "gst_query_parse_nth_allocation_pool", 
                "gst_video_frame_unmap", 
                "schro_debug_log", 
                "gst_memory_new_wrapped", 
                "schro_tag_new", 
                "gst_video_decoder_set_packetized", 
                "gst_caps_is_any", 
                "gst_buffer_pool_config_add_option", 
                "gst_video_encoder_set_latency", 
                "g_param_spec_int", 
                "__cxa_finalize", 
                "schro_encoder_get_frame_stats", 
                "gst_caps_new_simple", 
                "gst_video_decoder_get_output_state", 
                "gst_value_array_append_value", 
                "schro_parse_decode_sequence_header", 
                "gst_adapter_available", 
                "gst_pad_get_allowed_caps", 
                "schro_encoder_free", 
                "g_return_if_fail_warning", 
                "g_strdup", 
                "g_param_spec_enum", 
                "gst_element_register", 
                "schro_encoder_encode_sequence_header", 
                "schro_decoder_add_output_picture", 
                "gst_memory_unmap", 
                "g_value_set_double", 
                "_ITM_registerTMCloneTable", 
                "gst_adapter_flush", 
                "gst_pad_push_event", 
                "g_type_check_instance_is_a", 
                "schro_frame_unref", 
                "gst_video_decoder_allocate_output_buffer", 
                "gst_video_codec_state_unref", 
                "gst_message_new_element", 
                "gst_element_class_set_static_metadata", 
                "schro_decoder_reset", 
                "schro_encoder_end_of_stream", 
                "gst_video_decoder_finish_frame", 
                "gst_mini_object_make_writable", 
                "schro_decoder_get_picture_tag", 
                "gst_query_find_allocation_meta"
            ], 
            "rpm": "gstreamer1-plugins-bad-free-extras-1.12.1-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gstreamer-1.0/libgstschro.so"
        }, 
        "usr/lib/gstreamer-1_0/libgstchromaprint_so": {
            "report-functions": [
                "__cxa_finalize", 
                "chromaprint_get_fingerprint", 
                "gst_audio_filter_class_add_pad_templates", 
                "g_intern_static_string", 
                "gst_tag_list_new", 
                "gst_event_new_tag", 
                "gst_tag_register", 
                "g_value_set_string", 
                "chromaprint_dealloc", 
                "chromaprint_get_version", 
                "g_log", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "g_value_get_uint", 
                "chromaprint_new", 
                "_gst_debug_category_new", 
                "gst_event_type_get_name", 
                "chromaprint_free", 
                "gst_pad_push_event", 
                "_gst_debug_register_funcptr", 
                "g_type_class_peek_parent", 
                "gst_buffer_unmap", 
                "chromaprint_feed", 
                "g_type_name", 
                "g_param_spec_string", 
                "gst_element_register", 
                "gst_mini_object_unref", 
                "chromaprint_start", 
                "gst_base_transform_set_passthrough", 
                "g_once_init_enter", 
                "chromaprint_finish", 
                "g_param_spec_uint", 
                "_ITM_registerTMCloneTable", 
                "g_once_init_leave", 
                "g_object_notify", 
                "g_object_class_install_property", 
                "gst_buffer_map", 
                "gst_caps_from_string", 
                "gst_debug_log", 
                "__stack_chk_fail", 
                "g_type_class_adjust_private_offset", 
                "gst_element_class_set_static_metadata", 
                "g_value_set_uint"
            ], 
            "rpm": "gstreamer1-plugins-bad-free-extras-1.12.1-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gstreamer-1.0/libgstchromaprint.so"
        }, 
        "usr/lib/gstreamer-1_0/libgstbluez_so": {
            "report-functions": [
                "g_return_if_fail_warning", 
                "g_object_notify", 
                "gst_pad_set_query_function_full", 
                "g_dbus_object_get_interface", 
                "g_value_get_int", 
                "gst_poll_set_flushing", 
                "gst_value_list_prepend_value", 
                "g_async_initable_new_finish", 
                "g_source_unref", 
                "gst_caps_set_simple", 
                "g_io_channel_set_flags", 
                "g_type_name", 
                "gst_pad_event_default", 
                "gst_tag_list_get_uint64", 
                "gst_caps_new_full", 
                "g_once_init_enter", 
                "g_variant_type_checked_", 
                "g_thread_new", 
                "g_io_channel_set_close_on_unref", 
                "g_unix_fd_list_get", 
                "gst_poll_free", 
                "g_main_loop_unref", 
                "g_variant_iter_init", 
                "g_strfreev", 
                "g_source_set_name", 
                "g_type_add_instance_private", 
                "gst_structure_set_value", 
                "g_value_get_string", 
                "g_source_set_priority", 
                "gst_buffer_map", 
                "g_variant_iter_next", 
                "setsockopt", 
                "gst_structure_get_name", 
                "gst_flow_get_name", 
                "g_variant_equal", 
                "g_type_interface_add_prerequisite", 
                "g_error_free", 
                "gst_element_add_pad", 
                "_ITM_deregisterTMCloneTable", 
                "g_value_get_uint64", 
                "gst_query_parse_duration", 
                "g_str_equal", 
                "g_variant_builder_init", 
                "gst_value_set_int_range", 
                "g_dbus_object_proxy_get_type", 
                "g_object_thaw_notify", 
                "gst_bin_remove", 
                "g_object_set", 
                "g_source_attach", 
                "g_object_freeze_notify", 
                "g_variant_iter_next_value", 
                "g_dbus_interface_info_lookup_property", 
                "g_mutex_unlock", 
                "g_variant_unref", 
                "g_value_set_boolean", 
                "g_value_get_int64", 
                "gst_message_new_tag", 
                "g_list_free_full", 
                "g_variant_iter_free", 
                "g_value_get_variant", 
                "g_type_add_interface_static", 
                "g_value_set_int", 
                "g_initable_new", 
                "gst_caps_intersect_full", 
                "g_variant_new", 
                "g_dbus_proxy_call_with_unix_fd_list_finish", 
                "g_main_loop_new", 
                "g_value_get_uint", 
                "g_dbus_interface_skeleton_get_object_path", 
                "g_object_set_property", 
                "g_type_interface_peek", 
                "g_object_new", 
                "g_once_init_leave", 
                "gst_message_new_duration_changed", 
                "g_main_loop_quit", 
                "g_io_channel_shutdown", 
                "g_dbus_interface_info_lookup_signal", 
                "__gmon_start__", 
                "g_object_unref", 
                "g_value_get_double", 
                "g_dbus_object_manager_client_new_for_bus", 
                "g_variant_get_byte", 
                "gst_tag_get_type", 
                "g_value_unset", 
                "g_variant_builder_clear", 
                "g_value_dup_string", 
                "g_malloc0_n", 
                "gst_pad_set_event_function_full", 
                "g_value_get_boxed", 
                "gst_base_src_get_type", 
                "g_dbus_method_invocation_return_value_with_unix_fd_list", 
                "g_signal_connect_data", 
                "g_variant_get_uint16", 
                "g_dbus_interface_skeleton_get_connections", 
                "gst_element_register", 
                "g_value_set_string", 
                "gst_ghost_pad_new_no_target_from_template", 
                "gst_element_sync_state_with_parent", 
                "g_param_spec_variant", 
                "gst_caps_new_simple", 
                "g_dbus_proxy_call_finish", 
                "g_main_loop_run", 
                "gst_tag_list_new_empty", 
                "_gst_debug_register_funcptr", 
                "g_intern_static_string", 
                "g_object_class_override_property", 
                "gst_poll_new", 
                "g_main_context_ref_thread_default", 
                "g_variant_builder_end", 
                "g_strcmp0", 
                "g_dbus_method_invocation_get_message", 
                "gst_query_set_caps_result", 
                "g_value_init", 
                "g_log", 
                "g_dbus_gvalue_to_gvariant", 
                "gst_tag_list_foreach", 
                "g_dbus_message_get_unix_fd_list", 
                "g_source_set_callback", 
                "g_strv_length", 
                "gst_base_src_set_do_timestamp", 
                "g_main_context_pop_thread_default", 
                "g_object_get_property", 
                "g_dbus_object_manager_get_objects", 
                "g_mutex_clear", 
                "_gst_debug_category_new", 
                "g_variant_store", 
                "g_variant_get_boolean", 
                "g_type_class_peek_parent", 
                "g_value_take_string", 
                "gst_element_class_set_static_metadata", 
                "gst_buffer_unmap", 
                "g_param_spec_uint", 
                "g_dbus_proxy_call_sync", 
                "g_async_result_get_source_object", 
                "gst_caps_get_structure", 
                "g_dbus_proxy_call_with_unix_fd_list_sync", 
                "gst_base_src_set_blocksize", 
                "g_value_reset", 
                "g_variant_get_uint32", 
                "g_datalist_clear", 
                "gst_pad_query_default", 
                "g_dbus_proxy_call_with_unix_fd_list", 
                "g_value_get_boolean", 
                "g_value_copy", 
                "g_variant_get_handle", 
                "gst_pad_send_event", 
                "gst_buffer_set_size", 
                "g_quark_to_string", 
                "g_object_interface_install_property", 
                "gst_structure_take_value", 
                "g_source_destroy", 
                "gst_element_get_static_pad", 
                "g_object_get", 
                "gst_debug_log", 
                "g_io_channel_set_encoding", 
                "g_async_initable_new_async", 
                "g_dbus_interface_skeleton_get_type", 
                "g_io_channel_get_flags", 
                "g_variant_get", 
                "g_object_class_install_property", 
                "gst_element_set_state", 
                "g_object_notify_by_pspec", 
                "gst_tag_list_add", 
                "g_variant_ref_sink", 
                "gst_event_parse_caps", 
                "g_assertion_message_expr", 
                "__stack_chk_fail", 
                "gst_static_pad_template_get", 
                "g_dbus_connection_emit_signal", 
                "__errno_location", 
                "g_io_channel_unix_get_fd", 
                "g_dbus_proxy_get_type", 
                "gst_ghost_pad_set_target", 
                "g_quark_try_string", 
                "gst_tag_list_get_string", 
                "gst_poll_remove_fd", 
                "g_variant_get_size", 
                "g_free", 
                "write", 
                "g_signal_emitv", 
                "g_param_spec_boolean", 
                "gst_element_class_add_static_pad_template", 
                "g_variant_builder_add", 
                "read", 
                "g_mutex_lock", 
                "gst_structure_get_value", 
                "g_io_channel_unref", 
                "gst_value_list_get_size", 
                "gst_mini_object_copy", 
                "g_main_context_unref", 
                "gst_event_parse_tag", 
                "g_idle_source_new", 
                "g_set_error", 
                "g_source_remove", 
                "g_strv_get_type", 
                "g_variant_take_ref", 
                "g_variant_iter_new", 
                "gst_pad_push_event", 
                "gst_structure_has_name", 
                "g_object_ref", 
                "g_dbus_gvariant_to_gvalue", 
                "gst_tag_list_insert", 
                "g_datalist_id_set_data_full", 
                "gst_query_set_duration", 
                "g_dbus_error_quark", 
                "gst_bin_get_type", 
                "strerror", 
                "g_object_class_find_property", 
                "gst_tag_list_get_boolean", 
                "g_signal_new", 
                "gst_structure_free", 
                "g_dbus_object_manager_client_new_for_bus_finish", 
                "g_param_spec_uchar", 
                "gst_element_post_message", 
                "g_dbus_method_invocation_return_error", 
                "g_signal_accumulator_true_handled", 
                "gst_base_src_set_live", 
                "_ITM_registerTMCloneTable", 
                "g_dbus_proxy_call", 
                "g_main_context_push_thread_default", 
                "gst_mini_object_unref", 
                "gst_base_sink_get_type", 
                "g_type_register_static_simple", 
                "g_type_class_adjust_private_offset", 
                "g_strjoinv", 
                "g_io_channel_unix_new", 
                "g_dbus_proxy_set_interface_info", 
                "g_clear_error", 
                "g_value_set_variant", 
                "__cxa_finalize", 
                "g_variant_get_string", 
                "g_dbus_interface_skeleton_get_connection", 
                "g_main_context_new", 
                "g_dbus_method_invocation_get_type", 
                "g_value_set_static_string", 
                "gst_tag_list_is_empty", 
                "g_list_prepend", 
                "g_io_channel_flush", 
                "g_strdup", 
                "gst_element_link", 
                "g_cclosure_marshal_generic", 
                "gst_element_factory_make", 
                "g_param_spec_string", 
                "gst_poll_wait", 
                "gst_structure_new_empty", 
                "g_dbus_method_invocation_get_method_info", 
                "g_strerror", 
                "gst_bin_add", 
                "g_variant_n_children", 
                "g_malloc0", 
                "g_signal_lookup", 
                "gst_base_src_set_format", 
                "gst_event_new_tag", 
                "g_strsplit", 
                "g_mutex_init", 
                "gst_static_pad_template_get_caps", 
                "gst_poll_add_fd", 
                "g_value_set_object", 
                "g_unix_fd_list_get_type", 
                "g_dbus_method_invocation_return_value", 
                "gst_poll_fd_ctl_read", 
                "g_value_get_uchar", 
                "g_type_check_value_holds", 
                "g_dbus_proxy_get_cached_property"
            ], 
            "rpm": "gstreamer1-plugins-bad-free-extras-1.12.1-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gstreamer-1.0/libgstbluez.so"
        }, 
        "complexity": {
            "r2 aa": "failed: ERROR: Cannot find radare2 in PATH"
        }, 
        "usr/lib/gstreamer-1_0/libgstgme_so": {
            "report-functions": [
                "__stack_chk_fail", 
                "gst_pad_set_query_function_full", 
                "gst_tag_list_add", 
                "gst_adapter_available", 
                "gst_debug_log", 
                "g_rec_mutex_unlock", 
                "gst_object_get_parent", 
                "gst_message_new_segment_start", 
                "gst_adapter_new", 
                "gme_enable_accuracy", 
                "gst_query_set_duration", 
                "gme_tell", 
                "gst_stream_error_quark", 
                "gme_set_fade", 
                "gst_buffer_unmap", 
                "g_rec_mutex_lock", 
                "g_type_class_adjust_private_offset", 
                "gst_element_add_pad", 
                "gst_object_unref", 
                "gst_caps_is_fixed", 
                "gst_element_message_full", 
                "__gmon_start__", 
                "gme_seek", 
                "gst_event_new_tag", 
                "g_once_init_enter", 
                "gst_pad_query_default", 
                "gst_segment_init", 
                "gst_buffer_map", 
                "gst_pad_push", 
                "gst_query_set_position", 
                "gst_pad_stop_task", 
                "gst_element_message_full_with_details", 
                "gst_buffer_new", 
                "gst_pad_new_from_static_template", 
                "gst_pad_pause_task", 
                "gst_util_uint64_scale_int", 
                "gst_pad_use_fixed_caps", 
                "gme_start_track", 
                "gme_delete", 
                "gst_event_new_eos", 
                "gst_adapter_take_buffer", 
                "gst_flow_get_name", 
                "gst_element_get_type", 
                "gme_track_info", 
                "gst_element_class_set_static_metadata", 
                "gst_query_parse_duration", 
                "g_intern_static_string", 
                "g_return_if_fail_warning", 
                "gst_event_new_flush_stop", 
                "g_type_class_peek_parent", 
                "gst_event_new_caps", 
                "g_object_unref", 
                "gst_adapter_push", 
                "gst_tag_list_new_empty", 
                "gme_open_data", 
                "gst_mini_object_unref", 
                "gst_event_new_flush_start", 
                "g_free", 
                "gst_query_parse_position", 
                "_gst_element_error_printf", 
                "gst_pad_set_event_function_full", 
                "__cxa_finalize", 
                "g_type_check_instance_is_a", 
                "g_type_register_static_simple", 
                "gst_pad_start_task", 
                "gme_play", 
                "gst_adapter_clear", 
                "gst_pad_push_event", 
                "_gst_debug_register_funcptr", 
                "gst_element_post_message", 
                "gst_element_register", 
                "gst_element_class_add_static_pad_template", 
                "gst_pad_set_chain_function_full", 
                "gst_buffer_new_allocate", 
                "gst_event_new_segment", 
                "gst_make_element_message_details", 
                "g_once_init_leave", 
                "_ITM_registerTMCloneTable", 
                "gst_pad_send_event", 
                "gst_pad_get_type", 
                "gst_event_parse_seek"
            ], 
            "rpm": "gstreamer1-plugins-bad-free-extras-1.12.1-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gstreamer-1.0/libgstgme.so"
        }, 
        "usr/lib/gstreamer-1_0/libgstzbar_so": {
            "report-functions": [
                "zbar_scan_image", 
                "gst_debug_log", 
                "zbar_image_scanner_recycle_image", 
                "gst_element_register", 
                "g_return_if_fail_warning", 
                "zbar_image_first_symbol", 
                "g_type_register_static_simple", 
                "gst_structure_set", 
                "zbar_image_destroy", 
                "gst_video_filter_get_type", 
                "zbar_symbol_get_data", 
                "g_once_init_enter", 
                "zbar_symbol_get_count", 
                "__gmon_start__", 
                "gst_message_new_element", 
                "__cxa_finalize", 
                "g_once_init_leave", 
                "zbar_image_scanner_enable_cache", 
                "gst_element_class_set_static_metadata", 
                "zbar_symbol_get_type", 
                "zbar_image_create", 
                "zbar_symbol_next", 
                "_gst_debug_category_new", 
                "gst_mini_object_unref", 
                "g_intern_static_string", 
                "zbar_symbol_get_quality", 
                "g_type_class_peek_parent", 
                "g_value_get_boolean", 
                "gst_element_post_message", 
                "gst_video_info_to_caps", 
                "gst_structure_new", 
                "zbar_get_symbol_name", 
                "g_type_name", 
                "g_param_spec_boolean", 
                "g_object_class_install_property", 
                "zbar_image_set_format", 
                "g_log", 
                "_gst_debug_register_funcptr", 
                "zbar_image_set_size", 
                "g_type_check_instance_is_a", 
                "zbar_image_scanner_destroy", 
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable", 
                "zbar_image_set_data", 
                "g_type_class_adjust_private_offset", 
                "gst_sample_new", 
                "g_value_set_boolean"
            ], 
            "rpm": "gstreamer1-plugins-bad-free-extras-1.12.1-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gstreamer-1.0/libgstzbar.so"
        }, 
        "usr/lib/gstreamer-1_0/libgstopenjpeg_so": {
            "report-functions": [
                "opj_setup_decoder", 
                "gst_debug_category_get_threshold", 
                "_ITM_registerTMCloneTable", 
                "gst_buffer_pool_set_config", 
                "opj_destroy_decompress", 
                "__gmon_start__", 
                "gst_element_message_full", 
                "gst_jpeg2000_sampling_is_rgb", 
                "g_assertion_message_expr", 
                "gst_video_encoder_get_type", 
                "gst_element_class_set_static_metadata", 
                "opj_image_destroy", 
                "gst_structure_get_name", 
                "gst_video_decoder_set_use_default_pad_acceptcaps", 
                "gst_query_get_n_allocation_pools", 
                "g_once_init_enter", 
                "_gst_video_decoder_error", 
                "g_free", 
                "_gst_debug_category_new", 
                "opj_cio_close", 
                "gst_structure_get_int", 
                "g_param_spec_enum", 
                "gst_jpeg2000_sampling_is_yuv", 
                "__cxa_finalize", 
                "gst_video_encoder_set_output_state", 
                "g_type_register_static_simple", 
                "g_param_spec_int", 
                "opj_image_create", 
                "_ITM_deregisterTMCloneTable", 
                "g_type_class_adjust_private_offset", 
                "gst_jpeg2000_sampling_to_string", 
                "g_value_get_int", 
                "opj_decode", 
                "opj_set_default_encoder_parameters", 
                "gst_caps_new_simple", 
                "gst_structure_get_string", 
                "opj_set_event_mgr", 
                "g_value_get_enum", 
                "gst_video_meta_api_get_type", 
                "gst_video_encoder_allocate_output_frame", 
                "gst_buffer_pool_config_add_option", 
                "_gst_element_error_printf", 
                "gst_buffer_pool_get_config", 
                "gst_video_decoder_negotiate", 
                "gst_buffer_map", 
                "g_log", 
                "gst_video_decoder_set_needs_format", 
                "gst_caps_get_structure", 
                "gst_structure_has_name", 
                "gst_video_encoder_negotiate", 
                "g_type_name", 
                "gst_video_codec_state_ref", 
                "gst_element_class_add_static_pad_template", 
                "gst_video_encoder_finish_frame", 
                "gst_query_find_allocation_meta", 
                "g_enum_register_static", 
                "gst_video_decoder_get_type", 
                "g_object_class_install_property", 
                "gst_video_codec_frame_unref", 
                "opj_encode", 
                "gst_mini_object_unref", 
                "gst_query_add_allocation_meta", 
                "gst_stream_error_quark", 
                "gst_jpeg2000_sampling_is_mono", 
                "__stack_chk_fail", 
                "gst_element_register", 
                "cio_tell", 
                "gst_video_decoder_set_packetized", 
                "_gst_debug_register_funcptr", 
                "opj_set_default_decoder_parameters", 
                "gst_caps_truncate", 
                "g_value_set_int", 
                "gst_debug_log", 
                "gst_video_frame_unmap", 
                "g_type_class_peek_parent", 
                "opj_create_compress", 
                "gst_video_decoder_drop_frame", 
                "gst_core_error_quark", 
                "gst_video_frame_map", 
                "opj_cio_open", 
                "g_once_init_leave", 
                "g_strchomp", 
                "gst_library_error_quark", 
                "gst_object_unref", 
                "g_strdup", 
                "gst_video_decoder_allocate_output_frame", 
                "gst_video_codec_state_unref", 
                "gst_video_decoder_finish_frame", 
                "g_intern_static_string", 
                "opj_create_decompress", 
                "gst_video_decoder_set_output_state", 
                "gst_jpeg2000_sampling_from_string", 
                "gst_buffer_unmap", 
                "gst_query_parse_nth_allocation_pool", 
                "gst_video_decoder_get_max_decode_time", 
                "opj_destroy_compress", 
                "opj_setup_encoder", 
                "g_malloc0_n", 
                "g_value_set_enum"
            ], 
            "rpm": "gstreamer1-plugins-bad-free-extras-1.12.1-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gstreamer-1.0/libgstopenjpeg.so"
        }, 
        "usr/lib/gstreamer-1_0/libgstofa_so": {
            "report-functions": [
                "gst_adapter_push", 
                "gst_adapter_flush", 
                "_ITM_registerTMCloneTable", 
                "gst_adapter_new", 
                "gst_base_transform_set_passthrough", 
                "gst_tag_list_new", 
                "gst_caps_from_string", 
                "g_type_class_adjust_private_offset", 
                "g_param_spec_string", 
                "ofa_get_version", 
                "g_log", 
                "gst_debug_log", 
                "g_strdup", 
                "g_type_name", 
                "g_object_class_install_property", 
                "g_type_class_peek_parent", 
                "__gmon_start__", 
                "g_once_init_leave", 
                "gst_audio_filter_get_type", 
                "_ITM_deregisterTMCloneTable", 
                "_gst_debug_register_funcptr", 
                "__stack_chk_fail", 
                "_gst_debug_category_new", 
                "gst_event_new_tag", 
                "g_object_notify", 
                "ofa_create_print", 
                "g_free", 
                "gst_element_class_set_static_metadata", 
                "g_value_set_string", 
                "gst_audio_filter_class_add_pad_templates", 
                "gst_element_register", 
                "g_once_init_enter", 
                "g_type_register_static_simple", 
                "g_object_unref", 
                "gst_mini_object_unref", 
                "g_intern_static_string", 
                "gst_adapter_unmap", 
                "gst_event_type_get_name", 
                "gst_util_uint64_scale_round", 
                "gst_adapter_available", 
                "gst_adapter_clear", 
                "gst_mini_object_copy", 
                "gst_tag_register", 
                "__cxa_finalize"
            ], 
            "rpm": "gstreamer1-plugins-bad-free-extras-1.12.1-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gstreamer-1.0/libgstofa.so"
        }, 
        "usr/lib/gstreamer-1_0/libgstbs2b_so": {
            "report-functions": [
                "bs2b_cross_feed_s16le", 
                "gst_element_class_set_metadata", 
                "gst_audio_filter_class_add_pad_templates", 
                "g_strdup", 
                "g_strcmp0", 
                "g_once_init_leave", 
                "g_type_add_interface_static", 
                "bs2b_cross_feed_fle", 
                "g_value_set_int", 
                "g_object_class_install_properties", 
                "g_intern_static_string", 
                "bs2b_cross_feed_u32be", 
                "bs2b_open", 
                "bs2b_cross_feed_s8", 
                "g_type_name", 
                "bs2b_cross_feed_dbe", 
                "gst_preset_get_type", 
                "g_type_register_static_simple", 
                "bs2b_set_level_feed", 
                "__gmon_start__", 
                "g_mutex_init", 
                "bs2b_cross_feed_fbe", 
                "gst_element_register", 
                "bs2b_set_srate", 
                "bs2b_cross_feed_u16le", 
                "bs2b_cross_feed_u32le", 
                "g_once_init_enter", 
                "bs2b_cross_feed_u8", 
                "bs2b_clear", 
                "bs2b_cross_feed_s32be", 
                "_ITM_registerTMCloneTable", 
                "gst_caps_from_string", 
                "bs2b_cross_feed_s24le", 
                "bs2b_cross_feed_u24le", 
                "g_object_notify_by_pspec", 
                "g_assertion_message_expr", 
                "g_mutex_unlock", 
                "g_type_class_peek_parent", 
                "g_log", 
                "bs2b_set_level", 
                "g_type_class_adjust_private_offset", 
                "bs2b_get_level_feed", 
                "_ITM_deregisterTMCloneTable", 
                "bs2b_get_level_fcut", 
                "gst_base_transform_set_passthrough", 
                "gst_audio_filter_get_type", 
                "bs2b_set_level_fcut", 
                "g_value_get_int", 
                "__cxa_finalize", 
                "gst_buffer_unmap", 
                "gst_buffer_map", 
                "g_malloc", 
                "bs2b_close", 
                "bs2b_cross_feed_dle", 
                "bs2b_cross_feed_u16be", 
                "bs2b_cross_feed_s32le", 
                "g_param_spec_int", 
                "g_mutex_lock", 
                "__stack_chk_fail", 
                "bs2b_cross_feed_u24be", 
                "bs2b_cross_feed_s24be"
            ], 
            "rpm": "gstreamer1-plugins-bad-free-extras-1.12.1-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gstreamer-1.0/libgstbs2b.so"
        }, 
        "usr/lib/gstreamer-1_0/libgstopenexr_so": {
            "report-functions": [
                "gst_element_class_add_static_pad_template", 
                "__cxa_allocate_exception", 
                "_gst_element_error_printf", 
                "_ZN7Imf_2_27IStreamD2Ev", 
                "gst_object_unref", 
                "_ZNK7Imf_2_213RgbaInputFile10dataWindowEv", 
                "gst_video_decoder_add_to_frame", 
                "gst_video_frame_map", 
                "__cxa_begin_catch", 
                "_ITM_deregisterTMCloneTable", 
                "gst_buffer_pool_get_config", 
                "_ZN7Imf_2_27IStream16readMemoryMappedEi", 
                "gst_adapter_available", 
                "gst_buffer_pool_set_config", 
                "gst_adapter_flush", 
                "gst_video_decoder_get_type", 
                "gst_video_frame_unmap", 
                "_ZN7Imf_2_217globalThreadCountEv", 
                "gst_video_decoder_have_frame", 
                "gst_adapter_copy", 
                "__cxa_atexit", 
                "gst_pad_get_stream_id", 
                "__gmon_start__", 
                "_Znwj", 
                "_ITM_registerTMCloneTable", 
                "__gxx_personality_v0", 
                "_ZN7Imf_2_213RgbaInputFile10readPixelsEii", 
                "gst_video_decoder_set_output_state", 
                "__cxa_end_catch", 
                "gst_element_class_set_static_metadata", 
                "g_assertion_message_expr", 
                "_ZN7Iex_2_27BaseExcD2Ev", 
                "_ZNK7Imf_2_213RgbaInputFile16pixelAspectRatioEv", 
                "_ZNK7Imf_2_27IStream14isMemoryMappedEv", 
                "__cxa_finalize", 
                "__cxa_throw", 
                "gst_video_decoder_set_use_default_pad_acceptcaps", 
                "_Unwind_Resume", 
                "gst_video_decoder_get_max_decode_time", 
                "gst_query_parse_nth_allocation_pool", 
                "g_type_register_static_simple", 
                "gst_util_double_to_fraction", 
                "g_once_init_enter", 
                "gst_query_find_allocation_meta", 
                "__stack_chk_fail", 
                "gst_video_codec_frame_unref", 
                "_ZNSt8ios_base4InitD1Ev", 
                "gst_video_decoder_negotiate", 
                "gst_video_meta_api_get_type", 
                "_ZN7Imf_2_213RgbaInputFileC1ERNS_7IStreamEi", 
                "gst_buffer_unmap", 
                "gst_debug_log", 
                "gst_video_decoder_drop_frame", 
                "__cxa_throw_bad_array_new_length", 
                "gst_video_decoder_finish_frame", 
                "gst_buffer_map", 
                "gst_element_message_full", 
                "gst_query_get_n_allocation_pools", 
                "gst_video_decoder_allocate_output_frame", 
                "gst_video_decoder_set_packetized", 
                "gst_video_decoder_get_pending_frame_size", 
                "_ZdaPv", 
                "gst_buffer_pool_config_add_option", 
                "_ZN7Iex_2_27BaseExcC2EPKc", 
                "gst_core_error_quark", 
                "_gst_debug_category_new", 
                "gst_video_codec_state_ref", 
                "_gst_debug_register_funcptr", 
                "_Znaj", 
                "g_type_class_peek_parent", 
                "_ZNK7Iex_2_27BaseExc4whatEv", 
                "g_type_class_adjust_private_offset", 
                "_ZNSt8ios_base4InitC1Ev", 
                "g_once_init_leave", 
                "gst_video_codec_state_unref", 
                "_ZdlPvj", 
                "g_intern_static_string", 
                "gst_element_register", 
                "gst_adapter_masked_scan_uint32_peek"
            ], 
            "rpm": "gstreamer1-plugins-bad-free-extras-1.12.1-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gstreamer-1.0/libgstopenexr.so"
        }, 
        "usr/lib/gstreamer-1_0/libgstdecklink_so": {
            "report-functions": [
                "gst_message_new_clock_lost", 
                "gst_clock_get_time", 
                "g_param_spec_boolean", 
                "gst_audio_ring_buffer_prepare_read", 
                "gst_query_add_allocation_param", 
                "_ZdlPvj", 
                "g_value_get_uint64", 
                "gst_queue_array_push_tail_struct", 
                "gst_base_sink_get_ts_offset", 
                "gst_mini_object_make_writable", 
                "gst_element_class_add_static_pad_template", 
                "gst_video_buffer_pool_new", 
                "gst_structure_free", 
                "gst_clock_get_internal_time", 
                "gst_video_time_code_free", 
                "__stack_chk_fail", 
                "gst_debug_log", 
                "gst_structure_set", 
                "g_param_spec_uint", 
                "gst_resource_error_quark", 
                "gst_caps_intersect", 
                "gst_audio_ring_buffer_delay", 
                "gst_structure_new", 
                "gst_base_sink_set_max_lateness", 
                "gst_video_time_code_new", 
                "gst_query_parse_nth_allocation_param", 
                "g_value_set_int", 
                "gst_base_src_set_live", 
                "gst_buffer_new_wrapped_full", 
                "gst_audio_ring_buffer_advance", 
                "_Unwind_Resume", 
                "gst_push_src_get_type", 
                "g_assertion_message_expr", 
                "gst_clock_get_calibration", 
                "gst_video_time_code_meta_api_get_type", 
                "gst_pad_get_pad_template_caps", 
                "gst_caps_merge", 
                "g_enum_get_value", 
                "gst_buffer_pool_config_set_params", 
                "gst_mini_object_unref", 
                "gst_base_sink_get_render_delay", 
                "gst_base_src_set_caps", 
                "gst_query_add_allocation_pool", 
                "g_param_spec_enum", 
                "g_type_register_static_simple", 
                "gst_base_src_set_format", 
                "gst_video_frame_map", 
                "gst_object_replace", 
                "g_type_name", 
                "gst_query_get_n_allocation_params", 
                "g_value_unset", 
                "gst_clock_set_master", 
                "g_cond_wait", 
                "gst_buffer_pool_config_set_allocator", 
                "gst_element_message_full", 
                "g_once_init_leave", 
                "g_mutex_unlock", 
                "pthread_once", 
                "g_value_set_enum", 
                "g_param_spec_uint64", 
                "_gst_debug_register_funcptr", 
                "gst_structure_set_value", 
                "gst_message_new_latency", 
                "gst_calculate_linear_regression", 
                "gst_value_list_append_value", 
                "gst_caps_is_fixed", 
                "gst_base_sink_get_type", 
                "gst_util_uint64_scale_ceil", 
                "gst_caps_new_empty_simple", 
                "g_object_new", 
                "g_intern_static_string", 
                "gst_segment_to_running_time", 
                "g_object_get", 
                "gst_caps_is_equal", 
                "g_value_get_uint", 
                "g_cond_clear", 
                "__gmon_start__", 
                "gst_element_class_set_static_metadata", 
                "g_object_notify", 
                "gst_object_ref", 
                "gst_clock_new_single_shot_id", 
                "g_value_get_enum", 
                "gst_element_get_clock", 
                "g_type_class_peek", 
                "gst_caps_get_structure", 
                "g_mutex_lock", 
                "gst_object_unref", 
                "g_object_class_install_property", 
                "g_free", 
                "__cxa_finalize", 
                "gst_element_class_add_pad_template", 
                "gst_stream_error_quark", 
                "g_value_get_int", 
                "gst_util_uint64_scale_int", 
                "gst_audio_info_from_caps", 
                "gst_queue_array_free", 
                "gst_query_add_allocation_meta", 
                "gst_pad_template_new", 
                "gst_element_register", 
                "gst_util_uint64_scale", 
                "gst_video_meta_api_get_type", 
                "g_once_init_enter", 
                "gst_video_frame_unmap", 
                "gst_video_info_from_caps", 
                "gst_query_get_n_allocation_pools", 
                "gst_audio_base_sink_get_type", 
                "dlopen", 
                "gst_query_parse_allocation", 
                "gst_buffer_pool_get_config", 
                "gst_clock_id_wait", 
                "g_enum_register_static", 
                "_gst_element_error_printf", 
                "gst_element_post_message", 
                "gst_caps_new_empty", 
                "gst_caps_new_simple", 
                "gst_buffer_get_meta", 
                "gst_element_get_base_time", 
                "gst_structure_remove_field", 
                "gst_audio_ring_buffer_clear", 
                "__udivdi3", 
                "_ITM_registerTMCloneTable", 
                "g_value_set_uint64", 
                "gst_system_clock_get_type", 
                "g_value_init", 
                "g_malloc0", 
                "gst_clock_set_calibration", 
                "gst_queue_array_is_empty", 
                "__moddi3", 
                "gst_caps_merge_structure", 
                "dlerror", 
                "gst_clock_unadjust_with_calibration", 
                "g_cond_signal", 
                "__fprintf_chk", 
                "_Znwj", 
                "gst_pad_get_current_caps", 
                "g_malloc", 
                "gst_core_error_quark", 
                "gst_caps_intersect_full", 
                "g_type_class_peek_parent", 
                "gst_base_sink_get_latency", 
                "g_mutex_init", 
                "gst_clock_id_unref", 
                "g_log", 
                "gst_queue_array_new_for_struct", 
                "gst_buffer_add_video_time_code_meta", 
                "_gst_debug_category_new", 
                "gst_video_time_code_to_string", 
                "dlsym", 
                "gst_message_new_clock_provide", 
                "g_value_get_boolean", 
                "gst_base_sink_set_qos_enabled", 
                "g_value_set_uint", 
                "gst_structure_can_intersect", 
                "__gxx_personality_v0", 
                "g_mutex_clear", 
                "g_return_if_fail_warning", 
                "gst_clock_id_unschedule", 
                "gst_caps_can_intersect", 
                "gst_clock_adjust_with_calibration", 
                "g_type_class_adjust_private_offset", 
                "g_param_spec_int", 
                "_ITM_deregisterTMCloneTable", 
                "gst_audio_ring_buffer_get_type", 
                "gst_query_set_latency", 
                "__umoddi3", 
                "gst_caps_map_in_place", 
                "g_once_impl", 
                "gst_queue_array_pop_head_struct", 
                "gst_buffer_pool_set_config", 
                "g_value_set_boolean"
            ], 
            "rpm": "gstreamer1-plugins-bad-free-extras-1.12.1-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gstreamer-1.0/libgstdecklink.so"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " gstreamer1-plugins-bad-free-extras", 
            "License": " LGPLv2+ and LGPLv2", 
            "URL": " http://gstreamer.freedesktop.org/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-05.phx2.fedoraproject.org", 
            "Description": "\nGStreamer is a streaming media framework, based on graphs of elements which\noperate on media data.\n\ngstreamer-plugins-bad contains plug-ins that aren't tested well enough,\nor the code is not of good enough quality.\n\nThis package (gstreamer1-plugins-bad-free-extras) contains\nextra \"bad\" plugins for sources (mythtv), sinks (fbdev) and\neffects (pitch) which are not used very much and require additional\nlibraries to be installed.\n", 
            "Build Date": " Tue 20 Jun 2017 01:09:58 PM EDT", 
            "Source RPM": " gstreamer1-plugins-bad-free-1.12.1-1.fc26.src.rpm", 
            "Version": " 1.12.1", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Wed 21 Jun 2017 02:59:33 AM EDT, Key ID 812a6b4b64dab85d", 
            "Release": " 1.fc26", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Extra GStreamer \"bad\" plugins (less often used \"bad\" plugins)", 
            "Size": " 701504"
        }
    }
}