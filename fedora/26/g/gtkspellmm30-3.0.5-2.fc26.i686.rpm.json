{
    "results": {
        "complexity": {
            "r2 aa": "failed: ERROR: Cannot find radare2 in PATH"
        }, 
        "usr/lib/libgtkspellmm-3_0_so_0_2_0": {
            "report-functions": [
                "_ZN4Glib7ustringC1Ev", 
                "__gxx_personality_v0", 
                "_ZNK4Glib10ObjectBase9referenceEv", 
                "_ZN4Glib17SignalProxyNormalC2EPNS_10ObjectBaseEPKNS_15SignalProxyInfoE", 
                "_ZN4Glib10ObjectBaseD2Ev", 
                "gtk_spell_error_get_type", 
                "_ZN4Glib13wrap_registerEmPFPNS_10ObjectBaseEP8_GObjectE", 
                "__cxa_end_catch", 
                "_ZN4sigc9trackableD2Ev", 
                "_ZN4Glib7ustringC1EOS0_", 
                "__cxa_rethrow", 
                "_ZN4Glib5Error15register_domainEjPFvP7_GErrorE", 
                "gtk_spell_checker_get_from_text_view", 
                "_ITM_deregisterTMCloneTable", 
                "gtk_spell_checker_get_suggestions_menu", 
                "_ZN4Glib5ErrorD2Ev", 
                "_ZNK4Glib5Error4whatEv", 
                "__stack_chk_fail", 
                "__cxa_finalize", 
                "_ZN4Glib10ObjectBase20_get_current_wrapperEP8_GObject", 
                "_Znwj", 
                "_ITM_registerTMCloneTable", 
                "_ZN4Glib6ObjectC2EOS0_", 
                "_ZN4Glib5ErrorC2EP7_GErrorb", 
                "gtk_spell_checker_check_word", 
                "gtk_spell_checker_decode_language_code", 
                "_ZN4Glib5ErrorC2EjiRKNS_7ustringE", 
                "_ZN4sigc9trackableC2Ev", 
                "g_object_is_floating", 
                "__gmon_start__", 
                "_ZN4Glib5Class21register_derived_typeEm", 
                "gtk_spell_checker_attach", 
                "gtk_spell_checker_get_type", 
                "_ZNK4Glib10ObjectBase11unreferenceEv", 
                "_ZN4Glib10ObjectBase15destroy_notify_Ev", 
                "gtk_spell_checker_get_suggestions", 
                "g_list_free", 
                "gtk_spell_checker_ignore_word", 
                "_ZN4Glib6ObjectC2EP8_GObject", 
                "_ZN4Glib9wrap_autoEP8_GObjectb", 
                "gtk_spell_checker_recheck_all", 
                "g_object_ref_sink", 
                "_ZN4Glib4wrapEP10_GtkWidgetb", 
                "_ZNK4Glib10ObjectBase11is_derived_Ev", 
                "__cxa_free_exception", 
                "_ZN4Glib7ustringD1Ev", 
                "_ZNK4Glib7ustring5c_strEv", 
                "gtk_spell_error_quark", 
                "_ZN4Glib10ObjectBaseC2Ev", 
                "_ZNK4Glib5Error4codeEv", 
                "__cxa_pure_virtual", 
                "_ZdlPvj", 
                "gtk_spell_checker_detach", 
                "gtk_spell_checker_add_to_dictionary", 
                "g_free", 
                "gtk_spell_checker_set_language", 
                "_ZN4Glib4initEv", 
                "gtk_spell_checker_get_language_list", 
                "_ZSt17__throw_bad_allocv", 
                "_ZN4Glib10ObjectBase10set_manageEv", 
                "_ZdlPv", 
                "_ZN4Glib6ObjectD2Ev", 
                "_ZN4Glib10ObjectBaseC2EPKc", 
                "_ZN4Glib15ConstructParamsC1ERKNS_5ClassE", 
                "_ZN4Glib5Error15throw_exceptionEP7_GError", 
                "__dynamic_cast", 
                "__cxa_throw", 
                "_ZN4Glib18PropertyProxy_BaseC2EPNS_10ObjectBaseEPKc", 
                "_ZN4Glib6ObjectC2ERKNS_15ConstructParamsE", 
                "_ZN4Glib6ObjectaSEOS0_", 
                "__cxa_allocate_exception", 
                "g_type_class_peek_parent", 
                "gtk_spell_checker_get_language", 
                "_ZN4Glib7ustringC1EPKc", 
                "_ZN4Glib25exception_handlers_invokeEv", 
                "_Unwind_Resume", 
                "_ZN4Glib15ConstructParamsD1Ev"
            ], 
            "rpm": "gtkspellmm30-3.0.5-2.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libgtkspellmm-3.0.so.0.2.0"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " gtkspellmm30", 
            "License": " GPLv2+", 
            "URL": " http://gtkspell.sourceforge.net/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildhw-07.phx2.fedoraproject.org", 
            "Description": "\nGtkSpell provides word-processor-style highlighting and replacement of\nmisspelled words in a GtkTextView widget as you type. Right-clicking a\nmisspelled word pops up a menu of suggested replacements.\n", 
            "Build Date": " Fri 10 Feb 2017 03:29:41 PM EST", 
            "Source RPM": " gtkspellmm30-3.0.5-2.fc26.src.rpm", 
            "Version": " 3.0.5", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Sat 11 Feb 2017 04:31:39 AM EST, Key ID 812a6b4b64dab85d", 
            "Release": " 2.fc26", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " On-the-fly spell checking for GtkTextView widgets - C++ bindings", 
            "Size": " 45874"
        }
    }
}