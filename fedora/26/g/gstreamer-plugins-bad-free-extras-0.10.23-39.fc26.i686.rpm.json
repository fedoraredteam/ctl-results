{
    "results": {
        "usr/lib/gstreamer-0_10/libgstvdpau_so": {
            "report-functions": [
                "g_intern_static_string", 
                "gst_vdp_output_src_pad_push", 
                "gst_object_unref", 
                "gst_structure_get_double", 
                "gst_pad_set_caps", 
                "g_value_get_float", 
                "g_value_dup_string", 
                "gst_vdp_video_buffer_get_caps", 
                "gst_util_uint64_scale", 
                "g_ptr_array_new", 
                "__cxa_finalize", 
                "round", 
                "g_slice_alloc0", 
                "gst_adapter_masked_scan_uint32", 
                "gst_navigation_send_key_event", 
                "XDestroyWindow", 
                "g_free", 
                "XSynchronize", 
                "gst_segment_to_running_time", 
                "g_value_get_enum", 
                "gst_pad_set_chain_function", 
                "gst_pad_template_get_caps", 
                "gst_structure_get_fourcc", 
                "gst_pad_fixate_caps", 
                "gst_pad_set_event_function", 
                "gst_vdp_output_buffer_get_allowed_caps", 
                "gst_caps_unref", 
                "gst_base_video_decoder_finish_frame", 
                "gst_buffer_get_type", 
                "_gst_element_error_printf", 
                "g_int_hash", 
                "g_value_set_enum", 
                "gst_pad_peer_accept_caps", 
                "gst_element_get_type", 
                "XPending", 
                "g_value_set_int", 
                "g_hash_table_lookup", 
                "g_value_get_uint", 
                "gst_structure_get_boolean", 
                "gst_structure_set", 
                "XCreateSimpleWindow", 
                "gst_vdp_output_src_pad_alloc_buffer", 
                "gst_mini_object_unref", 
                "gst_structure_set_value", 
                "gst_caps_copy", 
                "g_param_spec_enum", 
                "g_return_if_fail_warning", 
                "gst_vdp_output_buffer_get_template_caps", 
                "gst_pad_event_default", 
                "gst_element_class_set_details_simple", 
                "g_hash_table_new_full", 
                "g_log", 
                "g_value_get_boolean", 
                "XStringListToTextProperty", 
                "XKeysymToString", 
                "g_int_equal", 
                "gst_pad_get_allowed_caps", 
                "__stack_chk_fail", 
                "g_mutex_unlock", 
                "g_type_class_adjust_private_offset", 
                "gst_vdp_get_device", 
                "g_once_init_leave", 
                "g_malloc0", 
                "gst_type_register_static_full", 
                "g_object_class_install_property", 
                "g_value_set_uint", 
                "XSetWMProtocols", 
                "g_ptr_array_foreach", 
                "gst_vdp_yuv_to_video_caps", 
                "g_param_spec_float", 
                "XMapRaised", 
                "gst_vdp_decoder_render", 
                "gst_caps_intersect", 
                "gst_video_frame_get_type", 
                "g_enum_register_static", 
                "g_object_new", 
                "g_mutex_lock", 
                "gst_buffer_copy_metadata", 
                "gst_core_error_quark", 
                "gst_structure_get_int", 
                "gst_vdp_decoder_get_type", 
                "gst_pad_send_event", 
                "gst_debug_log", 
                "gst_video_sink_get_type", 
                "g_thread_join", 
                "gst_caps_ref", 
                "gst_event_get_type", 
                "gst_video_sink_center_rect", 
                "gst_vdp_output_buffer_pool_new", 
                "gst_pad_set_setcaps_function", 
                "gst_tag_list_get_string", 
                "gst_element_class_add_pad_template", 
                "gst_message_new_error", 
                "gst_event_parse_new_segment_full", 
                "gst_vdp_video_buffer_upload", 
                "gst_pad_template_new", 
                "gst_x_overlay_get_type", 
                "_gst_debug_register_funcptr", 
                "gst_segment_set_newsegment_full", 
                "gst_value_get_mini_object", 
                "g_usleep", 
                "_gst_debug_dump_mem", 
                "g_param_spec_uint", 
                "gst_adapter_available", 
                "gst_value_set_fraction", 
                "g_hash_table_destroy", 
                "gst_base_video_decoder_set_state", 
                "gst_vdp_buffer_pool_set_caps", 
                "gst_structure_get_value", 
                "g_slice_free1", 
                "g_hash_table_replace", 
                "XSetWindowBackgroundPixmap", 
                "gst_vdp_init", 
                "gst_object_get_parent", 
                "gst_element_post_message", 
                "g_strdup", 
                "gst_mini_object_new", 
                "g_get_application_name", 
                "gst_pad_get_caps", 
                "gst_static_pad_template_get_caps", 
                "g_slice_alloc", 
                "gst_caps_get_structure", 
                "XChangeProperty", 
                "gst_x_overlay_got_window_handle", 
                "memcmp", 
                "XBlackPixel", 
                "g_value_get_int", 
                "gst_event_parse_qos", 
                "gst_bit_reader_init_from_buffer", 
                "gst_structure_has_name", 
                "gst_vdp_buffer_pool_get_buffer", 
                "gst_structure_get_fraction", 
                "gst_buffer_join", 
                "XGetWindowAttributes", 
                "gst_element_class_add_static_pad_template", 
                "g_malloc", 
                "gst_vdp_decoder_init_decoder", 
                "g_type_class_peek_parent", 
                "gst_base_video_decoder_have_frame", 
                "gst_event_parse_tag", 
                "gst_util_uint64_scale_int", 
                "gst_value_get_fraction_denominator", 
                "gst_element_class_get_pad_template", 
                "g_type_add_interface_static", 
                "gst_structure_has_field_typed", 
                "gst_pad_get_peer", 
                "gst_resource_error_quark", 
                "g_malloc_n", 
                "gst_base_video_decoder_get_state", 
                "XNextEvent", 
                "g_value_set_string", 
                "XSelectInput", 
                "gst_navigation_get_type", 
                "gst_vdp_output_src_pad_new", 
                "g_param_spec_boolean", 
                "gst_element_register", 
                "g_value_transform", 
                "gst_element_add_pad", 
                "g_param_spec_string", 
                "gst_caps_is_empty", 
                "gst_vdp_video_buffer_pool_new", 
                "g_value_set_float", 
                "XKeycodeToKeysym", 
                "g_object_unref", 
                "XSync", 
                "gst_implements_interface_cast", 
                "_ITM_deregisterTMCloneTable", 
                "g_error_free", 
                "g_thread_create", 
                "g_mutex_free", 
                "g_type_name", 
                "gst_caps_get_size", 
                "gst_value_get_fraction_numerator", 
                "g_ptr_array_add", 
                "gst_navigation_send_mouse_event", 
                "gst_caps_set_simple", 
                "gst_pad_set_getcaps_function", 
                "gst_pad_new_from_template", 
                "gst_mini_object_ref", 
                "g_type_check_instance_is_a", 
                "gst_mini_object_replace", 
                "gst_adapter_copy", 
                "__gmon_start__", 
                "g_object_set", 
                "g_value_init", 
                "g_strconcat", 
                "g_type_register_static_simple", 
                "gst_event_new_navigation", 
                "gst_pad_get_type", 
                "gst_stream_error_quark", 
                "gst_implements_interface_get_type", 
                "g_value_set_boolean", 
                "gst_element_message_full", 
                "XSetWMName", 
                "gst_x_overlay_prepare_xwindow_id", 
                "XCheckWindowEvent", 
                "g_value_get_string", 
                "XInternAtom", 
                "gst_fraction_get_type", 
                "g_param_spec_int", 
                "_gst_debug_category_new", 
                "g_once_init_enter", 
                "g_mutex_new", 
                "g_type_register_static", 
                "gst_vdp_video_to_output_caps", 
                "gst_base_video_decoder_skip_frame", 
                "g_ptr_array_unref"
            ], 
            "rpm": "gstreamer-plugins-bad-free-extras-0.10.23-39.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gstreamer-0.10/libgstvdpau.so"
        }, 
        "usr/lib/gstreamer-0_10/libgstcdaudio_so": {
            "report-functions": [
                "g_timer_new", 
                "gst_query_set_duration", 
                "cd_resume", 
                "g_type_class_peek_parent", 
                "g_once_init_leave", 
                "cd_stat", 
                "g_param_spec_int", 
                "gst_type_register_static_full", 
                "g_timer_elapsed", 
                "g_cclosure_marshal_VOID__INT", 
                "g_once_init_enter", 
                "g_free", 
                "g_value_get_int", 
                "gst_uri_get_location", 
                "g_value_set_string", 
                "__stack_chk_fail", 
                "cd_play", 
                "gst_uri_handler_get_type", 
                "gst_uri_get_protocol", 
                "cddb_discid", 
                "g_strdup", 
                "gst_query_parse_duration", 
                "gst_format_register", 
                "gst_query_type_get_name", 
                "g_value_dup_string", 
                "g_timer_start", 
                "cd_pause", 
                "cd_finish", 
                "gst_element_message_full", 
                "__cxa_finalize", 
                "cd_close", 
                "g_timer_destroy", 
                "gst_element_register", 
                "g_param_spec_string", 
                "gst_query_set_position", 
                "gst_element_class_set_details_simple", 
                "cd_init_device", 
                "g_timer_stop", 
                "gst_event_parse_seek", 
                "_gst_debug_category_new", 
                "_gst_debug_register_funcptr", 
                "gst_element_get_type", 
                "_gst_element_error_printf", 
                "cd_stop", 
                "g_signal_new", 
                "g_value_set_int", 
                "g_object_class_install_property", 
                "g_intern_static_string", 
                "gst_query_parse_position", 
                "gst_debug_log", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "gst_mini_object_unref", 
                "gst_library_error_quark", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "gstreamer-plugins-bad-free-extras-0.10.23-39.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gstreamer-0.10/libgstcdaudio.so"
        }, 
        "usr/lib/gstreamer-0_10/libgsttimidity_so": {
            "report-functions": [
                "gst_query_set_formats", 
                "gst_element_add_pad", 
                "gst_query_set_position", 
                "_gst_element_error_printf", 
                "gst_type_register_static_full", 
                "gst_mini_object_unref", 
                "mid_song_get_total_time", 
                "gst_pad_activate_pull", 
                "gst_element_get_type", 
                "gst_pad_set_activate_function", 
                "g_type_class_peek_parent", 
                "g_free", 
                "gst_tag_list_new", 
                "gst_pad_pull_range", 
                "gst_buffer_new_and_alloc", 
                "gst_pad_get_peer", 
                "gst_tag_list_add", 
                "gst_message_new_segment_start", 
                "_gst_debug_category_new", 
                "gst_pad_start_task", 
                "gst_pad_new_from_template", 
                "gst_flow_get_name", 
                "gst_event_new_flush_start", 
                "gst_segment_set_seek", 
                "gst_pad_get_pad_template_caps", 
                "gst_pad_query_duration", 
                "gst_pad_check_pull_range", 
                "gst_segment_init", 
                "gst_segment_set_newsegment", 
                "gst_object_get_parent", 
                "gst_stream_error_quark", 
                "gst_event_new_new_segment_full", 
                "gst_query_set_duration", 
                "gst_element_register", 
                "mid_istream_open_mem", 
                "gst_query_parse_convert", 
                "gst_pad_use_fixed_caps", 
                "g_static_rec_mutex_unlock", 
                "gst_pad_stop_task", 
                "gst_pad_set_activatepull_function", 
                "gst_event_type_get_name", 
                "gst_segment_free", 
                "_ITM_deregisterTMCloneTable", 
                "mid_song_seek", 
                "gst_buffer_create_sub", 
                "gst_element_class_set_details_simple", 
                "gst_pad_push", 
                "__stack_chk_fail", 
                "gst_element_found_tags", 
                "gst_pad_set_caps", 
                "mid_song_load", 
                "memmove", 
                "gst_element_class_add_static_pad_template", 
                "g_static_rec_mutex_lock", 
                "gst_object_unref", 
                "gst_pad_set_query_function", 
                "gst_caps_copy", 
                "gst_element_post_message", 
                "mid_song_get_meta", 
                "mid_song_read_wave", 
                "__cxa_finalize", 
                "gst_event_parse_seek", 
                "gst_pad_pause_task", 
                "g_object_unref", 
                "_ITM_registerTMCloneTable", 
                "gst_pad_push_event", 
                "mid_song_free", 
                "gst_query_set_segment", 
                "gst_element_message_full", 
                "gst_segment_set_newsegment_full", 
                "mid_song_start", 
                "gst_element_class_get_pad_template", 
                "gst_event_new_eos", 
                "g_once_init_enter", 
                "gst_debug_log", 
                "g_intern_static_string", 
                "gst_event_new_flush_stop", 
                "g_once_init_leave", 
                "gst_segment_new", 
                "gst_pad_set_event_function", 
                "__gmon_start__", 
                "gst_query_set_convert", 
                "gst_pad_set_setcaps_function", 
                "mid_init", 
                "g_malloc", 
                "gst_caps_unref", 
                "gst_buffer_set_caps"
            ], 
            "rpm": "gstreamer-plugins-bad-free-extras-0.10.23-39.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gstreamer-0.10/libgsttimidity.so"
        }, 
        "usr/lib/gstreamer-0_10/libgstsdl_so": {
            "report-functions": [
                "g_type_class_peek_parent", 
                "gst_structure_get_fourcc", 
                "g_once_init_enter", 
                "g_malloc", 
                "gst_debug_log", 
                "SDL_PauseAudio", 
                "gst_audio_sink_get_type", 
                "g_log", 
                "gst_navigation_send_mouse_event", 
                "g_unsetenv", 
                "gst_object_unref", 
                "gst_int_range_get_type", 
                "gst_fraction_range_get_type", 
                "SDL_FreeYUVOverlay", 
                "SDL_PumpEvents", 
                "gst_caps_new_empty", 
                "g_free", 
                "g_once_init_leave", 
                "gst_element_class_set_details_simple", 
                "gst_util_uint64_scale_int", 
                "g_cond_signal", 
                "gst_element_register", 
                "gst_element_class_add_static_pad_template", 
                "SDL_LockSurface", 
                "__cxa_finalize", 
                "g_value_get_boolean", 
                "gst_structure_get_fraction", 
                "g_usleep", 
                "gst_pad_get_type", 
                "g_type_name", 
                "SDL_FreeSurface", 
                "g_value_set_boolean", 
                "g_type_add_interface_static", 
                "gst_caps_append_structure", 
                "gst_structure_set", 
                "gst_navigation_get_type", 
                "_gst_debug_category_new", 
                "gst_implements_interface_cast", 
                "SDL_LockYUVOverlay", 
                "g_cond_wait", 
                "g_type_check_instance_is_a", 
                "g_thread_join", 
                "g_cond_new", 
                "gst_resource_error_quark", 
                "gst_core_error_quark", 
                "gst_x_overlay_prepare_xwindow_id", 
                "SDL_MixAudio", 
                "gst_navigation_send_key_event", 
                "gst_video_sink_get_type", 
                "gst_caps_copy", 
                "g_intern_static_string", 
                "SDL_QuitSubSystem", 
                "gst_event_get_type", 
                "gst_implements_interface_check", 
                "g_mutex_free", 
                "SDL_VideoDriverName", 
                "__sprintf_chk", 
                "gst_type_register_static_full", 
                "gst_implements_interface_get_type", 
                "gst_structure_get_double", 
                "g_setenv", 
                "SDL_GetError", 
                "SDL_CreateYUVOverlay", 
                "gst_library_error_quark", 
                "SDL_DisplayYUVOverlay", 
                "g_mutex_new", 
                "SDL_PeepEvents", 
                "gst_caps_get_structure", 
                "gst_pad_send_event", 
                "__gmon_start__", 
                "SDL_UnlockSurface", 
                "SDL_GetKeyName", 
                "g_mutex_unlock", 
                "gst_fourcc_get_type", 
                "g_mutex_lock", 
                "gst_x_overlay_get_type", 
                "gst_element_message_full", 
                "gst_element_class_add_pad_template", 
                "_gst_element_error_printf", 
                "_ITM_deregisterTMCloneTable", 
                "g_param_spec_boolean", 
                "g_return_if_fail_warning", 
                "g_cond_free", 
                "SDL_UnlockYUVOverlay", 
                "gst_event_new_navigation", 
                "_gst_debug_register_funcptr", 
                "g_thread_create", 
                "gst_structure_get_int", 
                "SDL_Init", 
                "gst_pad_get_pad_template_caps", 
                "SDL_OpenAudio", 
                "SDL_SetVideoMode", 
                "gst_pad_template_new", 
                "g_object_class_install_property", 
                "gst_structure_new", 
                "__stack_chk_fail", 
                "gst_pad_get_peer", 
                "gst_video_sink_center_rect"
            ], 
            "rpm": "gstreamer-plugins-bad-free-extras-0.10.23-39.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gstreamer-0.10/libgstsdl.so"
        }, 
        "usr/lib/gstreamer-0_10/libgstwildmidi_so": {
            "report-functions": [
                "gst_pad_set_chain_function", 
                "gst_pad_check_pull_range", 
                "gst_pad_set_activatepull_function", 
                "gst_pad_activate_push", 
                "WildMidi_GetOutput", 
                "gst_type_register_static_full", 
                "gst_event_new_flush_stop", 
                "__cxa_finalize", 
                "gst_element_register", 
                "gst_flow_get_name", 
                "gst_util_uint64_scale_int", 
                "gst_buffer_set_caps", 
                "gst_pad_pull_range", 
                "gst_element_get_type", 
                "gst_pad_pause_task", 
                "g_mutex_lock", 
                "gst_element_class_set_details_simple", 
                "gst_pad_set_event_function", 
                "gst_pad_set_caps", 
                "_ITM_registerTMCloneTable", 
                "gst_element_message_full", 
                "gst_event_new_flush_start", 
                "g_type_class_peek_parent", 
                "g_intern_static_string", 
                "gst_adapter_push", 
                "gst_pad_start_task", 
                "g_once_init_leave", 
                "WildMidi_FastSeek", 
                "WildMidi_SetOption", 
                "gst_element_add_pad", 
                "_gst_element_error_printf", 
                "gst_query_set_seeking", 
                "gst_query_set_convert", 
                "__stack_chk_fail", 
                "g_strdup", 
                "g_type_check_instance_is_a", 
                "gst_object_unref", 
                "gst_adapter_available", 
                "g_getenv", 
                "g_mutex_unlock", 
                "gst_event_new_eos", 
                "gst_caps_unref", 
                "gst_segment_set_seek", 
                "gst_pad_push", 
                "g_build_path", 
                "WildMidi_Close", 
                "g_value_set_boolean", 
                "gst_pad_set_query_function", 
                "gst_event_new_new_segment_full", 
                "gst_pad_activate_pull", 
                "gst_stream_error_quark", 
                "gst_query_set_duration", 
                "g_once_init_enter", 
                "gst_buffer_new_and_alloc", 
                "gst_query_set_position", 
                "g_object_unref", 
                "_gst_debug_category_new", 
                "gst_pad_stop_task", 
                "gst_query_parse_convert", 
                "gst_query_set_formats", 
                "gst_adapter_new", 
                "gst_object_get_parent", 
                "WildMidi_Init", 
                "gst_segment_set_newsegment", 
                "gst_pad_new_from_template", 
                "gst_segment_init", 
                "g_free", 
                "g_param_spec_boolean", 
                "gst_event_type_get_name", 
                "g_static_rec_mutex_lock", 
                "gst_pad_set_activate_function", 
                "g_object_class_install_property", 
                "g_value_get_boolean", 
                "gst_pad_get_pad_template_caps", 
                "_ITM_deregisterTMCloneTable", 
                "g_get_home_dir", 
                "__gmon_start__", 
                "gst_caps_copy", 
                "g_type_name", 
                "WildMidi_OpenBuffer", 
                "gst_query_set_segment", 
                "gst_adapter_take", 
                "gst_pad_use_fixed_caps", 
                "g_static_rec_mutex_unlock", 
                "gst_event_parse_seek", 
                "gst_element_class_get_pad_template", 
                "gst_debug_log", 
                "g_return_if_fail_warning", 
                "WildMidi_GetInfo", 
                "g_log", 
                "gst_mini_object_unref", 
                "g_access", 
                "gst_pad_push_event"
            ], 
            "rpm": "gstreamer-plugins-bad-free-extras-0.10.23-39.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gstreamer-0.10/libgstwildmidi.so"
        }, 
        "usr/lib/gstreamer-0_10/libgstschro_so": {
            "report-functions": [
                "gst_element_class_add_static_pad_template", 
                "gst_buffer_set_caps", 
                "g_param_spec_int", 
                "schro_encoder_wait", 
                "gst_structure_set_value", 
                "schro_frame_unref", 
                "g_value_set_int", 
                "gst_base_video_encoder_get_state", 
                "gst_base_video_decoder_get_type", 
                "gst_buffer_new_and_alloc", 
                "schro_encoder_pull_full", 
                "_ITM_registerTMCloneTable", 
                "gst_buffer_get_type", 
                "gst_adapter_copy", 
                "g_value_set_double", 
                "schro_frame_new_from_data_AYUV", 
                "g_value_unset", 
                "schro_frame_new_from_data_YV12", 
                "schro_encoder_end_of_stream", 
                "schro_encoder_free", 
                "gst_base_video_decoder_class_set_capture_pattern", 
                "schro_decoder_pull", 
                "gst_value_array_append_value", 
                "gst_pad_query_default", 
                "schro_debug_log", 
                "g_value_get_boolean", 
                "g_param_spec_double", 
                "schro_video_format_set_std_colour_spec", 
                "schro_parse_decode_sequence_header", 
                "gst_util_uint64_scale", 
                "schro_decoder_free", 
                "gst_value_set_mini_object", 
                "gst_type_register_static_full", 
                "schro_encoder_get_video_format", 
                "gst_element_post_message", 
                "g_free", 
                "gst_value_array_get_type", 
                "gst_message_new_element", 
                "gst_base_video_decoder_finish_frame", 
                "gst_pad_set_query_function", 
                "gst_base_video_decoder_add_to_frame", 
                "schro_encoder_get_setting_info", 
                "gst_query_parse_convert", 
                "gst_structure_new", 
                "schro_encoder_get_frame_stats", 
                "schro_decoder_autoparse_wait", 
                "gst_base_video_decoder_lost_sync", 
                "schro_buffer_unref", 
                "gst_base_video_decoder_set_src_caps", 
                "gst_debug_log", 
                "schro_init", 
                "gst_element_register", 
                "_ITM_deregisterTMCloneTable", 
                "gst_fraction_get_type", 
                "schro_decoder_add_output_picture", 
                "__cxa_finalize", 
                "gst_base_video_encoder_get_type", 
                "gst_base_video_decoder_alloc_src_buffer", 
                "g_param_spec_boolean", 
                "schro_decoder_autoparse_push", 
                "schro_encoder_new", 
                "gst_adapter_flush", 
                "gst_element_found_tags_for_pad", 
                "g_enum_register_static", 
                "schro_buffer_new_with_data", 
                "gst_query_set_convert", 
                "gst_caps_new_simple", 
                "g_param_spec_enum", 
                "g_malloc0", 
                "gst_base_video_encoder_set_latency_fields", 
                "schro_encoder_get_n_settings", 
                "schro_decoder_autoparse_push_end_of_sequence", 
                "schro_video_format_set_std_video_format", 
                "__stack_chk_fail", 
                "schro_encoder_start", 
                "gst_caps_get_structure", 
                "gst_pad_set_caps", 
                "_gst_debug_register_funcptr", 
                "schro_decoder_new", 
                "schro_decoder_get_picture_tag", 
                "g_strdup_printf", 
                "gst_element_class_set_details_simple", 
                "gst_base_video_decoder_have_frame", 
                "gst_base_video_decoder_set_sync_point", 
                "gst_tag_list_new", 
                "__gmon_start__", 
                "schro_frame_set_free_callback", 
                "g_object_class_install_property", 
                "g_value_get_double", 
                "g_once_init_leave", 
                "gst_adapter_available", 
                "schro_decoder_reset", 
                "schro_encoder_push_frame_full", 
                "gst_base_video_encoder_finish_frame", 
                "gst_buffer_new", 
                "g_value_get_enum", 
                "gst_tag_list_add", 
                "schro_encoder_setting_get_double", 
                "g_value_set_enum", 
                "gst_mini_object_unref", 
                "g_type_check_instance_is_a", 
                "schro_encoder_encode_sequence_header", 
                "_gst_debug_category_new", 
                "gst_object_get_parent", 
                "schro_frame_new_from_data_UYVY", 
                "schro_video_format_set_std_signal_range", 
                "gst_caps_unref", 
                "gst_mini_object_ref", 
                "schro_encoder_setting_set_double", 
                "schro_encoder_set_video_format", 
                "g_once_init_enter", 
                "g_intern_static_string", 
                "schro_tag_free", 
                "g_value_set_boolean", 
                "g_value_init", 
                "schro_tag_new", 
                "gst_object_unref", 
                "gst_pad_push", 
                "schro_frame_new_from_data_I420", 
                "gst_base_video_decoder_get_state", 
                "g_malloc", 
                "g_return_if_fail_warning", 
                "schro_encoder_set_packet_assembly", 
                "schro_frame_new_from_data_YUY2"
            ], 
            "rpm": "gstreamer-plugins-bad-free-extras-0.10.23-39.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gstreamer-0.10/libgstschro.so"
        }, 
        "usr/lib/gstreamer-0_10/libgstassrender_so": {
            "report-functions": [
                "gst_structure_get_string", 
                "gst_debug_log", 
                "gst_value_get_mini_object", 
                "gst_pad_peer_get_caps", 
                "gst_element_add_pad", 
                "ass_free_track", 
                "gst_buffer_make_metadata_writable", 
                "gst_util_uint64_scale", 
                "gst_caps_intersect", 
                "ass_renderer_done", 
                "gst_element_class_set_details_simple", 
                "g_value_get_boolean", 
                "gst_segment_init", 
                "gst_pad_get_pad_template_caps", 
                "ass_set_frame_size", 
                "gst_structure_has_name", 
                "ass_step_sub", 
                "g_value_set_boolean", 
                "ass_process_chunk", 
                "g_mutex_lock", 
                "gst_video_format_parse_caps", 
                "gst_element_message_full", 
                "gst_element_get_type", 
                "g_free", 
                "g_log", 
                "gst_event_type_get_name", 
                "__cxa_finalize", 
                "ass_set_use_margins", 
                "__gmon_start__", 
                "gst_tag_list_get_tag_size", 
                "ass_set_extract_fonts", 
                "gst_pad_alloc_buffer", 
                "ass_set_aspect_ratio", 
                "g_strdup_vprintf", 
                "g_mutex_unlock", 
                "gst_object_get_parent", 
                "gst_stream_error_quark", 
                "g_param_spec_boolean", 
                "g_mutex_free", 
                "gst_element_class_add_static_pad_template", 
                "gst_segment_to_running_time", 
                "g_ascii_strcasecmp", 
                "_gst_debug_register_funcptr", 
                "ass_set_fonts", 
                "g_object_class_install_property", 
                "strlen", 
                "gst_video_parse_caps_framerate", 
                "gst_event_parse_tag", 
                "ass_new_track", 
                "gst_mini_object_make_writable", 
                "ass_free_event", 
                "gst_pad_push", 
                "gst_pad_peer_query", 
                "_gst_debug_category_new", 
                "gst_pad_set_chain_function", 
                "gst_mini_object_ref", 
                "ass_set_message_cb", 
                "ass_library_init", 
                "g_mutex_new", 
                "gst_segment_set_last_stop", 
                "_ITM_deregisterTMCloneTable", 
                "_gst_element_error_printf", 
                "gst_event_new_flush_start", 
                "g_once_init_enter", 
                "g_once_init_leave", 
                "g_cond_new", 
                "gst_segment_clip", 
                "gst_pad_new_from_static_template", 
                "ass_add_font", 
                "ass_set_hinting", 
                "gst_tag_list_get_value_index", 
                "gst_type_register_static_full", 
                "gst_caps_copy", 
                "g_return_if_fail_warning", 
                "gst_caps_get_structure", 
                "gst_element_register", 
                "__stack_chk_fail", 
                "gst_object_unref", 
                "ass_process_codec_private", 
                "ass_library_done", 
                "ass_set_margins", 
                "g_cond_signal", 
                "gst_pad_set_setcaps_function", 
                "gst_structure_get_value", 
                "gst_pad_set_query_function", 
                "gst_mini_object_unref", 
                "ass_set_font_scale", 
                "ass_render_frame", 
                "gst_video_format_get_row_stride", 
                "gst_event_parse_seek", 
                "gst_pad_push_event", 
                "gst_pad_set_getcaps_function", 
                "gst_event_parse_new_segment", 
                "ass_renderer_init", 
                "g_cond_free", 
                "g_cond_wait", 
                "_ITM_registerTMCloneTable", 
                "gst_video_format_get_component_offset", 
                "g_type_name", 
                "gst_pad_set_bufferalloc_function", 
                "g_type_class_peek_parent", 
                "g_intern_static_string", 
                "gst_caps_unref", 
                "gst_video_parse_caps_pixel_aspect_ratio", 
                "gst_segment_set_newsegment", 
                "gst_pad_set_caps"
            ], 
            "rpm": "gstreamer-plugins-bad-free-extras-0.10.23-39.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gstreamer-0.10/libgstassrender.so"
        }, 
        "usr/lib/gstreamer-0_10/libgstcurl_so": {
            "report-functions": [
                "g_thread_join", 
                "gst_structure_get_name", 
                "curl_easy_strerror", 
                "curl_multi_info_read", 
                "gst_poll_fd_ctl_write", 
                "_gst_element_error_printf", 
                "g_type_class_peek_parent", 
                "g_cond_new", 
                "g_strerror", 
                "curl_multi_remove_handle", 
                "_gst_debug_category_new", 
                "curl_multi_perform", 
                "_ITM_registerTMCloneTable", 
                "g_strdup", 
                "g_log", 
                "g_str_has_prefix", 
                "gst_resource_error_quark", 
                "curl_multi_init", 
                "__cxa_finalize", 
                "g_object_class_install_property", 
                "g_cond_signal", 
                "g_value_set_string", 
                "__errno_location", 
                "g_error_free", 
                "curl_easy_getinfo", 
                "curl_multi_cleanup", 
                "gst_caps_get_structure", 
                "g_once_init_enter", 
                "gst_poll_add_fd", 
                "setsockopt", 
                "gst_poll_fd_init", 
                "g_thread_create", 
                "g_value_set_int", 
                "g_value_get_int", 
                "gst_debug_log", 
                "curl_slist_append", 
                "_gst_debug_register_funcptr", 
                "gst_poll_set_flushing", 
                "gst_element_class_set_details_simple", 
                "g_cond_wait", 
                "g_value_dup_string", 
                "gst_element_class_add_static_pad_template", 
                "g_strdup_printf", 
                "g_mutex_unlock", 
                "g_intern_static_string", 
                "g_param_spec_boolean", 
                "g_param_spec_string", 
                "g_mutex_lock", 
                "gst_element_get_state", 
                "g_value_get_boolean", 
                "g_type_check_instance_is_a", 
                "__stack_chk_fail", 
                "gst_element_message_full", 
                "curl_multi_add_handle", 
                "gst_poll_free", 
                "gst_poll_fd_ctl_read", 
                "getsockname", 
                "g_free", 
                "g_once_init_leave", 
                "curl_slist_free_all", 
                "curl_multi_strerror", 
                "gst_poll_new", 
                "curl_easy_cleanup", 
                "g_param_spec_int", 
                "g_cond_free", 
                "curl_easy_init", 
                "curl_easy_setopt", 
                "_ITM_deregisterTMCloneTable", 
                "gst_type_register_static_full", 
                "gst_poll_wait", 
                "__gmon_start__", 
                "g_return_if_fail_warning", 
                "gst_element_register", 
                "gst_base_sink_get_type"
            ], 
            "rpm": "gstreamer-plugins-bad-free-extras-0.10.23-39.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gstreamer-0.10/libgstcurl.so"
        }, 
        "usr/lib/gstreamer-0_10/libgstdecklink_so": {
            "report-functions": [
                "g_return_if_fail_warning", 
                "gst_pad_activate_push", 
                "g_mutex_unlock", 
                "gst_fraction_get_type", 
                "g_log", 
                "gst_pad_new_from_template", 
                "gst_fourcc_get_type", 
                "g_value_get_enum", 
                "__cxa_finalize", 
                "gst_pad_is_linked", 
                "_ITM_deregisterTMCloneTable", 
                "g_param_spec_int", 
                "pthread_once", 
                "gst_pad_push_event", 
                "gst_task_create", 
                "gst_pad_push", 
                "g_mutex_new", 
                "dlerror", 
                "g_value_set_enum", 
                "gst_pad_set_event_function", 
                "gst_core_error_quark", 
                "__fprintf_chk", 
                "g_value_set_int", 
                "_Znwj", 
                "gst_pad_set_getrange_function", 
                "_Unwind_Resume", 
                "g_intern_static_string", 
                "gst_pad_activate_pull", 
                "gst_pad_set_acceptcaps_function", 
                "gst_pad_event_default", 
                "gst_pad_set_link_function", 
                "_gst_debug_register_funcptr", 
                "_gst_debug_category_new", 
                "g_type_name", 
                "gst_pad_set_activatepush_function", 
                "gst_pad_set_activatepull_function", 
                "g_mutex_lock", 
                "gst_util_uint64_scale_int", 
                "_ZdlPvj", 
                "gst_caps_copy", 
                "gst_pad_set_bufferalloc_function", 
                "__stack_chk_fail", 
                "gst_caps_append_structure", 
                "gst_pad_set_fixatecaps_function", 
                "g_static_rec_mutex_unlock", 
                "gst_pad_new_from_static_template", 
                "gst_object_get_parent", 
                "g_type_class_peek_parent", 
                "gst_mini_object_unref", 
                "gst_element_get_type", 
                "gst_buffer_new", 
                "gst_pad_iterate_internal_links_default", 
                "dlopen", 
                "gst_caps_unref", 
                "g_once_init_leave", 
                "gst_type_register_static_full", 
                "gst_object_unref", 
                "g_cond_signal", 
                "gst_caps_new_empty", 
                "g_enum_register_static", 
                "g_cond_new", 
                "gst_pad_get_pad_template_caps", 
                "gst_task_start", 
                "g_static_rec_mutex_init", 
                "g_cond_wait", 
                "_gst_element_error_printf", 
                "g_cond_free", 
                "__gmon_start__", 
                "gst_task_join", 
                "gst_pad_check_pull_range", 
                "g_type_check_instance_is_a", 
                "gst_element_add_pad", 
                "gst_element_class_set_details_simple", 
                "g_object_class_install_property", 
                "_ITM_registerTMCloneTable", 
                "gst_buffer_set_caps", 
                "gst_pad_set_query_function", 
                "gst_pad_set_chain_function", 
                "gst_caps_new_simple", 
                "gst_pad_set_getcaps_function", 
                "gst_resource_error_quark", 
                "g_param_spec_enum", 
                "gst_debug_log", 
                "gst_element_class_add_pad_template", 
                "gst_pad_set_activate_function", 
                "g_value_get_int", 
                "gst_pad_query_default", 
                "g_object_unref", 
                "gst_event_new_new_segment", 
                "gst_pad_set_iterate_internal_links_function", 
                "gst_element_class_add_static_pad_template", 
                "gst_element_message_full", 
                "gst_pad_set_setcaps_function", 
                "gst_structure_new", 
                "gst_element_class_get_pad_template", 
                "g_mutex_free", 
                "gst_pad_set_chain_list_function", 
                "gst_buffer_join", 
                "gst_buffer_new_and_alloc", 
                "g_static_rec_mutex_lock", 
                "g_once_init_enter", 
                "gst_pad_template_new", 
                "gst_task_set_lock", 
                "dlsym", 
                "__gxx_personality_v0"
            ], 
            "rpm": "gstreamer-plugins-bad-free-extras-0.10.23-39.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gstreamer-0.10/libgstdecklink.so"
        }, 
        "usr/lib/gstreamer-0_10/libgstkate_so": {
            "report-functions": [
                "gst_pad_set_chain_function", 
                "gst_structure_set", 
                "gst_element_get_type", 
                "gst_value_array_get_type", 
                "g_strdup", 
                "gst_pad_set_setcaps_function", 
                "gst_pad_get_negotiated_caps", 
                "g_queue_free", 
                "kate_text_validate", 
                "_gst_debug_register_funcptr", 
                "g_snprintf", 
                "kate_bitmap_init", 
                "strlen", 
                "gst_tag_list_add", 
                "_ITM_registerTMCloneTable", 
                "strcmp", 
                "gst_buffer_try_new_and_alloc", 
                "kate_encode_get_granule", 
                "gst_pad_set_event_function", 
                "gst_buffer_get_type", 
                "kate_high_decode_init", 
                "gst_structure_get_name", 
                "g_value_set_float", 
                "g_strdelimit", 
                "gst_element_found_tags_for_pad", 
                "kate_encode_finish", 
                "gst_query_set_convert", 
                "g_param_spec_int", 
                "gst_pad_set_caps", 
                "kate_encode_set_bitmap", 
                "g_value_get_int", 
                "gst_event_parse_new_segment_full", 
                "g_type_name", 
                "kate_encode_text", 
                "g_param_spec_string", 
                "__stack_chk_fail", 
                "_ITM_deregisterTMCloneTable", 
                "kate_encode_set_palette", 
                "gst_pad_set_query_function", 
                "kate_packet_clear", 
                "kate_comment_clear", 
                "g_queue_pop_head", 
                "gst_element_add_pad", 
                "kate_meta_query", 
                "kate_info_set_category", 
                "gst_library_error_quark", 
                "kate_encode_init", 
                "kate_tracker_clear", 
                "g_ascii_strdown", 
                "g_list_delete_link", 
                "gst_buffer_new", 
                "g_value_set_string", 
                "g_free", 
                "kate_high_decode_clear", 
                "gst_caps_make_writable", 
                "kate_info_clear", 
                "g_list_append", 
                "kate_region_init", 
                "gst_pad_query_default", 
                "gst_tag_list_copy", 
                "kate_encode_headers", 
                "gst_tag_parse_extended_comment", 
                "gst_structure_set_value", 
                "g_value_get_string", 
                "kate_comment_add_tag", 
                "gst_tag_list_is_empty", 
                "kate_granule_time", 
                "gst_segment_init", 
                "gst_event_type_get_name", 
                "kate_encode_set_region", 
                "gst_flow_get_name", 
                "gst_pad_use_fixed_caps", 
                "gst_pad_set_getcaps_function", 
                "gst_debug_log", 
                "g_log", 
                "gst_value_set_mini_object", 
                "g_param_spec_boolean", 
                "memmove", 
                "gst_tag_list_insert", 
                "gst_structure_has_name", 
                "gst_mini_object_copy", 
                "kate_info_set_language", 
                "gst_object_get_parent", 
                "g_object_class_install_property", 
                "g_strdup_printf", 
                "gst_tag_list_merge", 
                "g_once_init_enter", 
                "gst_caps_new_simple", 
                "gst_tag_list_from_vorbiscomment_buffer", 
                "g_queue_new", 
                "g_type_add_interface_static", 
                "_gst_element_error_printf", 
                "gst_type_register_static_full", 
                "g_value_set_boolean", 
                "gst_object_unref", 
                "gst_segment_clip", 
                "gst_tag_list_new", 
                "g_malloc", 
                "kate_duration_granule", 
                "gst_tag_setter_get_type", 
                "__cxa_finalize", 
                "kate_text_remove_markup", 
                "gst_caps_replace", 
                "_gst_debug_category_new", 
                "gst_pad_set_query_type_function", 
                "g_list_free", 
                "g_once_init_leave", 
                "gst_tag_list_foreach", 
                "g_queue_is_empty", 
                "gst_caps_from_string", 
                "gst_structure_get_int", 
                "kate_encode_keepalive", 
                "strncpy", 
                "g_intern_static_string", 
                "kate_packet_wrap", 
                "kate_palette_init", 
                "gst_tag_list_free", 
                "g_param_spec_float", 
                "g_value_set_int", 
                "gst_element_class_set_details_simple", 
                "g_slice_free1", 
                "gst_segment_set_newsegment_full", 
                "gst_caps_unref", 
                "kate_meta_query_count", 
                "g_list_foreach", 
                "kate_comment_init", 
                "gst_query_parse_convert", 
                "g_value_unset", 
                "gst_tag_list_to_vorbiscomment_buffer", 
                "g_type_class_peek_parent", 
                "gst_element_class_add_static_pad_template", 
                "g_return_if_fail_warning", 
                "gst_message_new_tag", 
                "memchr", 
                "kate_info_set_original_canvas_size", 
                "gst_stream_error_quark", 
                "kate_tracker_update", 
                "gst_caps_copy", 
                "kate_high_decode_packetin", 
                "gst_value_array_append_value", 
                "g_value_get_float", 
                "g_value_init", 
                "g_queue_push_tail", 
                "gst_element_message_full", 
                "gst_tag_setter_get_tag_merge_mode", 
                "gst_buffer_make_metadata_writable", 
                "gst_pad_event_default", 
                "gst_element_register", 
                "kate_granule_shift", 
                "g_slice_alloc", 
                "gst_static_pad_template_get_caps", 
                "gst_event_parse_tag", 
                "gst_pad_new_from_static_template", 
                "gst_pad_push", 
                "gst_buffer_set_caps", 
                "gst_element_post_message", 
                "gst_mini_object_unref", 
                "kate_clear", 
                "__gmon_start__", 
                "gst_structure_get_string", 
                "gst_structure_new", 
                "gst_event_parse_new_segment", 
                "gst_segment_set_last_stop", 
                "gst_pad_push_event", 
                "kate_tracker_init", 
                "gst_buffer_new_and_alloc", 
                "kate_info_init", 
                "gst_tag_setter_get_tag_list", 
                "gst_buffer_copy_metadata", 
                "gst_caps_get_structure", 
                "gst_tag_to_vorbis_comments", 
                "kate_decode_headerin"
            ], 
            "rpm": "gstreamer-plugins-bad-free-extras-0.10.23-39.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gstreamer-0.10/libgstkate.so"
        }, 
        "usr/lib/gstreamer-0_10/libgstlinsys_so": {
            "report-functions": [
                "write", 
                "gst_type_register_static_full", 
                "__gmon_start__", 
                "g_param_spec_string", 
                "__cxa_finalize", 
                "gst_base_src_set_live", 
                "_gst_debug_register_funcptr", 
                "_ITM_deregisterTMCloneTable", 
                "g_intern_static_string", 
                "gst_element_class_set_details_simple", 
                "gst_element_class_add_static_pad_template", 
                "g_return_if_fail_warning", 
                "close", 
                "gst_base_src_set_blocksize", 
                "gst_debug_log", 
                "open", 
                "g_value_dup_string", 
                "read", 
                "_ITM_registerTMCloneTable", 
                "g_object_class_install_property", 
                "g_once_init_enter", 
                "g_malloc", 
                "g_log", 
                "_gst_debug_category_new", 
                "g_once_init_leave", 
                "g_value_set_string", 
                "poll", 
                "gst_base_src_get_type", 
                "g_strdup", 
                "g_type_class_peek_parent", 
                "gst_base_sink_get_type", 
                "gst_element_register", 
                "gst_buffer_new_and_alloc", 
                "g_type_check_instance_is_a", 
                "g_free", 
                "ioctl"
            ], 
            "rpm": "gstreamer-plugins-bad-free-extras-0.10.23-39.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gstreamer-0.10/libgstlinsys.so"
        }, 
        "usr/lib/gstreamer-0_10/libgstdc1394_so": {
            "report-functions": [
                "gst_element_class_set_details_simple", 
                "dc1394_format7_set_image_size", 
                "g_value_set_int", 
                "dc1394_capture_enqueue", 
                "_gst_debug_register_funcptr", 
                "gst_buffer_set_caps", 
                "gst_structure_set_name", 
                "gst_debug_log", 
                "gst_value_list_get_type", 
                "g_param_spec_int64", 
                "g_value_set_int64", 
                "g_value_get_int64", 
                "__gmon_start__", 
                "dc1394_camera_free", 
                "dc1394_format7_get_color_codings", 
                "dc1394_capture_dequeue", 
                "gst_structure_get_int", 
                "gst_pad_set_fixatecaps_function", 
                "dc1394_format7_get_max_image_size", 
                "dc1394_format7_get_unit_size", 
                "dc1394_video_set_operation_mode", 
                "gst_util_uint64_scale_int", 
                "gst_caps_get_size", 
                "gst_element_class_add_pad_template", 
                "g_object_class_install_property", 
                "gst_value_list_append_value", 
                "gst_value_set_fraction", 
                "dc1394_iso_release_all", 
                "gst_fraction_range_get_type", 
                "gst_structure_empty_new", 
                "gst_caps_get_structure", 
                "gst_fourcc_get_type", 
                "gst_stream_error_quark", 
                "g_log", 
                "g_value_init", 
                "dc1394_video_set_iso_speed", 
                "gst_int_range_get_type", 
                "g_param_spec_int", 
                "g_value_get_int", 
                "gst_query_set_latency", 
                "_ITM_registerTMCloneTable", 
                "gst_base_src_set_live", 
                "gst_type_register_static_full", 
                "gst_base_src_is_live", 
                "gst_object_get_parent", 
                "gst_buffer_new_and_alloc", 
                "gst_structure_get_value", 
                "dc1394_video_set_framerate", 
                "gst_structure_set", 
                "gst_structure_set_value", 
                "g_intern_static_string", 
                "dc1394_video_get_supported_framerates", 
                "_gst_debug_category_new", 
                "gst_caps_append_structure", 
                "gst_push_src_get_type", 
                "gst_element_message_full", 
                "gst_element_register", 
                "g_type_class_peek_parent", 
                "dc1394_capture_setup", 
                "gst_caps_new_empty", 
                "gst_pad_template_new", 
                "dc1394_camera_new_unit", 
                "g_type_name", 
                "dc1394_camera_enumerate", 
                "gst_structure_copy", 
                "g_usleep", 
                "gst_caps_copy", 
                "__stack_chk_fail", 
                "gst_resource_error_quark", 
                "dc1394_free", 
                "gst_value_get_fraction_numerator", 
                "gst_fraction_get_type", 
                "gst_value_get_fraction_denominator", 
                "gst_structure_fixate_field_nearest_int", 
                "gst_caps_unref", 
                "gst_pad_get_caps", 
                "__cxa_finalize", 
                "gst_object_unref", 
                "dc1394_video_set_transmission", 
                "_ITM_deregisterTMCloneTable", 
                "dc1394_video_get_supported_modes", 
                "dc1394_camera_free_list", 
                "g_return_if_fail_warning", 
                "dc1394_capture_stop", 
                "gst_util_uint64_scale", 
                "dc1394_video_get_transmission", 
                "gst_structure_fixate_field_nearest_fraction", 
                "dc1394_new", 
                "g_once_init_leave", 
                "dc1394_video_set_mode", 
                "_gst_element_error_printf"
            ], 
            "rpm": "gstreamer-plugins-bad-free-extras-0.10.23-39.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gstreamer-0.10/libgstdc1394.so"
        }, 
        "complexity": {
            "r2 aa": "failed: ERROR: Cannot find radare2 in PATH"
        }, 
        "usr/lib/gstreamer-0_10/libgstlv2_so": {
            "report-functions": [
                "strstr", 
                "gst_signal_processor_class_add_pad_template", 
                "slv2_value_as_string", 
                "g_malloc_n", 
                "slv2_port_get_value", 
                "slv2_world_get_all_plugins", 
                "_ITM_registerTMCloneTable", 
                "g_strdup", 
                "slv2_plugins_get_at", 
                "g_value_get_float", 
                "g_value_set_boolean", 
                "g_quark_from_static_string", 
                "slv2_values_size", 
                "gst_element_class_get_pad_template", 
                "slv2_world_load_all", 
                "slv2_port_get_name", 
                "g_param_spec_int", 
                "slv2_plugin_get_author_name", 
                "gst_plugin_add_dependency_simple", 
                "__assert_fail", 
                "slv2_value_as_float", 
                "slv2_plugin_get_uri", 
                "slv2_plugin_instantiate", 
                "slv2_port_get_symbol", 
                "g_strdup_printf", 
                "__gmon_start__", 
                "g_type_register_static", 
                "slv2_plugins_size", 
                "slv2_value_new_string", 
                "gst_caps_get_structure", 
                "slv2_plugin_get_name", 
                "slv2_value_free", 
                "slv2_value_new_uri", 
                "__stack_chk_fail", 
                "slv2_world_new", 
                "g_free", 
                "g_strcanon", 
                "_ITM_deregisterTMCloneTable", 
                "g_return_if_fail_warning", 
                "slv2_plugin_get_num_ports", 
                "slv2_values_free", 
                "g_object_class_find_property", 
                "g_object_class_install_property", 
                "g_value_get_boolean", 
                "slv2_value_duplicate", 
                "slv2_value_equals", 
                "g_log", 
                "_gst_debug_category_new", 
                "g_strconcat", 
                "gst_object_unref", 
                "g_type_from_name", 
                "g_param_spec_boolean", 
                "slv2_port_get_range", 
                "gst_audio_channel_position_get_type", 
                "gst_signal_processor_get_type", 
                "__cxa_finalize", 
                "slv2_value_as_uri", 
                "gst_debug_log", 
                "g_array_new", 
                "g_param_spec_float", 
                "g_type_class_ref", 
                "g_array_append_vals", 
                "slv2_instance_free", 
                "slv2_values_get_at", 
                "g_type_get_qdata", 
                "g_value_set_int", 
                "slv2_world_free", 
                "slv2_plugin_get_port_by_index", 
                "gst_audio_set_channel_positions", 
                "slv2_port_is_a", 
                "slv2_port_has_property", 
                "g_value_set_float", 
                "gst_element_register", 
                "slv2_plugin_has_feature", 
                "gst_controller_init", 
                "g_type_set_qdata", 
                "gst_element_get_static_pad", 
                "g_value_get_int"
            ], 
            "rpm": "gstreamer-plugins-bad-free-extras-0.10.23-39.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gstreamer-0.10/libgstlv2.so"
        }, 
        "usr/lib/gstreamer-0_10/libgstzbar_so": {
            "report-functions": [
                "gst_caps_get_structure", 
                "_gst_debug_category_new", 
                "gst_structure_get_fourcc", 
                "zbar_symbol_get_count", 
                "_ITM_deregisterTMCloneTable", 
                "g_value_set_boolean", 
                "g_type_name", 
                "g_value_get_boolean", 
                "zbar_image_destroy", 
                "zbar_image_first_symbol", 
                "gst_element_register", 
                "zbar_get_symbol_name", 
                "zbar_scan_image", 
                "gst_video_format_get_row_stride", 
                "zbar_image_set_format", 
                "gst_structure_new", 
                "zbar_symbol_get_type", 
                "zbar_image_scanner_create", 
                "g_intern_static_string", 
                "g_log", 
                "gst_element_post_message", 
                "zbar_image_scanner_enable_cache", 
                "gst_element_class_add_static_pad_template", 
                "zbar_image_create", 
                "zbar_image_scanner_recycle_image", 
                "g_object_class_install_property", 
                "zbar_symbol_next", 
                "__gmon_start__", 
                "g_return_if_fail_warning", 
                "_gst_debug_register_funcptr", 
                "g_type_class_peek_parent", 
                "gst_video_filter_get_type", 
                "gst_element_class_set_details_simple", 
                "gst_debug_log", 
                "gst_video_format_from_fourcc", 
                "gst_message_new_element", 
                "zbar_image_set_data", 
                "g_once_init_enter", 
                "zbar_symbol_get_quality", 
                "gst_structure_get_int", 
                "_ITM_registerTMCloneTable", 
                "zbar_image_set_size", 
                "g_param_spec_boolean", 
                "g_once_init_leave", 
                "__stack_chk_fail", 
                "gst_type_register_static_full", 
                "zbar_image_scanner_destroy", 
                "zbar_symbol_get_data"
            ], 
            "rpm": "gstreamer-plugins-bad-free-extras-0.10.23-39.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gstreamer-0.10/libgstzbar.so"
        }, 
        "usr/lib/gstreamer-0_10/libgstteletextdec_so": {
            "report-functions": [
                "gst_object_unref", 
                "vbi_export_mem", 
                "g_value_get_boolean", 
                "_ITM_deregisterTMCloneTable", 
                "gst_pad_template_get_caps", 
                "g_strchomp", 
                "g_value_dup_string", 
                "g_strescape", 
                "vbi_dvb_pes_demux_new", 
                "g_value_set_boolean", 
                "gst_pad_peer_get_caps", 
                "g_intern_static_string", 
                "g_strdup", 
                "g_type_name", 
                "g_string_append", 
                "_ITM_registerTMCloneTable", 
                "g_memdup", 
                "gst_element_class_set_details_simple", 
                "g_param_spec_boolean", 
                "gst_structure_get_boolean", 
                "vbi_decoder_new", 
                "vbi_draw_vt_page_region", 
                "gst_event_type_get_name", 
                "_gst_debug_category_new", 
                "g_once_init_enter", 
                "g_string_free", 
                "g_return_if_fail_warning", 
                "gst_resource_error_quark", 
                "g_mutex_lock", 
                "gst_pad_alloc_buffer_and_set_caps", 
                "vbi_unref_page", 
                "gst_pad_push", 
                "gst_library_error_quark", 
                "g_value_set_string", 
                "vbi_fetch_vt_page", 
                "g_string_new", 
                "gst_element_register", 
                "_gst_element_error_printf", 
                "g_queue_pop_head", 
                "g_queue_new", 
                "gst_type_register_static_full", 
                "gst_caps_new_simple", 
                "__stack_chk_fail", 
                "gst_pad_set_setcaps_function", 
                "g_object_class_install_property", 
                "vbi_decode", 
                "gst_caps_unref", 
                "g_string_append_printf", 
                "g_queue_free", 
                "gst_pad_get_caps", 
                "gst_flow_get_name", 
                "g_type_class_peek_parent", 
                "g_strfreev", 
                "g_mutex_unlock", 
                "g_param_spec_int", 
                "gst_stream_error_quark", 
                "gst_structure_get_name", 
                "gst_element_message_full", 
                "gst_caps_intersect", 
                "gst_pad_set_caps", 
                "g_malloc", 
                "__cxa_finalize", 
                "gst_buffer_new_and_alloc", 
                "__gmon_start__", 
                "g_mutex_free", 
                "g_log", 
                "gst_caps_get_structure", 
                "gst_debug_log", 
                "vbi_print_page_region", 
                "g_value_set_int", 
                "gst_caps_is_empty", 
                "gst_element_get_type", 
                "vbi_export_new", 
                "g_once_init_leave", 
                "g_value_get_int", 
                "vbi_event_handler_register", 
                "gst_pad_set_chain_function", 
                "gst_pad_new_from_static_template", 
                "gst_caps_truncate", 
                "gst_element_class_add_static_pad_template", 
                "gst_pad_alloc_buffer", 
                "vbi_dvb_demux_delete", 
                "gst_fraction_get_type", 
                "gst_static_pad_template_get", 
                "g_strcmp0", 
                "gst_structure_get_int", 
                "gst_mini_object_unref", 
                "g_malloc0", 
                "g_free", 
                "vbi_decoder_delete", 
                "g_queue_is_empty", 
                "g_strchug", 
                "g_queue_push_tail", 
                "gst_object_get_parent", 
                "gst_pad_event_default", 
                "gst_pad_get_peer", 
                "_gst_debug_register_funcptr", 
                "g_param_spec_string", 
                "gst_element_add_pad", 
                "gst_pad_set_event_function", 
                "gst_buffer_set_caps", 
                "gst_pad_push_event"
            ], 
            "rpm": "gstreamer-plugins-bad-free-extras-0.10.23-39.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gstreamer-0.10/libgstteletextdec.so"
        }, 
        "usr/lib/gstreamer-0_10/libgstfbdevsink_so": {
            "report-functions": [
                "g_type_class_peek_parent", 
                "munmap", 
                "ioctl", 
                "gst_caps_get_structure", 
                "gst_element_register", 
                "g_type_check_instance_is_a", 
                "g_value_dup_string", 
                "gst_structure_get_int", 
                "gst_structure_get_value", 
                "g_type_register_static", 
                "g_object_class_install_property", 
                "gst_base_sink_get_type", 
                "g_free", 
                "_ITM_deregisterTMCloneTable", 
                "gst_caps_from_string", 
                "g_strdup", 
                "close", 
                "gst_element_class_set_details_simple", 
                "g_log", 
                "gst_value_get_fraction_numerator", 
                "g_param_spec_string", 
                "mmap", 
                "open", 
                "gst_caps_set_simple", 
                "gst_value_get_fraction_denominator", 
                "_gst_debug_register_funcptr", 
                "__cxa_finalize", 
                "g_type_name", 
                "gst_element_class_add_static_pad_template", 
                "g_return_if_fail_warning", 
                "gst_util_uint64_scale_int", 
                "g_value_set_string"
            ], 
            "rpm": "gstreamer-plugins-bad-free-extras-0.10.23-39.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gstreamer-0.10/libgstfbdevsink.so"
        }, 
        "usr/lib/gstreamer-0_10/libgstmodplug_so": {
            "report-functions": [
                "gst_pad_query_duration", 
                "_ZN10CSoundFile15GetSongCommentsEPcjj", 
                "gst_pad_new_from_static_template", 
                "gst_pad_set_caps", 
                "_ZN10CSoundFile7DestroyEv", 
                "gst_tag_list_new", 
                "gst_pad_push_event", 
                "gst_event_new_eos", 
                "__gxx_personality_v0", 
                "gst_pad_set_event_function", 
                "_ZN10CSoundFile13SetCurrentPosEj", 
                "_Unwind_Resume", 
                "_ZN10CSoundFile4ReadEPvj", 
                "gst_pad_push", 
                "g_static_rec_mutex_unlock", 
                "gst_event_new_flush_start", 
                "gst_debug_log", 
                "gst_event_new_new_segment", 
                "gst_caps_get_structure", 
                "gst_element_post_message", 
                "g_return_if_fail_warning", 
                "g_once_init_leave", 
                "_ITM_deregisterTMCloneTable", 
                "g_type_class_peek_parent", 
                "_ZdlPvj", 
                "__umoddi3", 
                "gst_event_parse_seek", 
                "_Znwj", 
                "g_value_get_boolean", 
                "g_param_spec_string", 
                "__cxa_finalize", 
                "gst_pad_pause_task", 
                "gst_element_class_set_details_simple", 
                "gst_pad_get_pad_template_caps", 
                "gst_query_set_position", 
                "gst_util_uint64_scale_int", 
                "_gst_element_error_printf", 
                "g_once_init_enter", 
                "gst_mini_object_unref", 
                "_ZNK10CSoundFile14GetMaxPositionEv", 
                "g_param_spec_int", 
                "__udivdi3", 
                "gst_event_new_flush_stop", 
                "_gst_debug_register_funcptr", 
                "g_intern_static_string", 
                "gst_type_register_static_full", 
                "gst_pad_get_allowed_caps", 
                "gst_pad_query_default", 
                "gst_pad_get_peer", 
                "gst_element_class_add_static_pad_template", 
                "g_value_set_boolean", 
                "_ZNK10CSoundFile13GetCurrentPosEv", 
                "gst_pad_set_activate_function", 
                "gst_query_parse_position", 
                "gst_element_get_type", 
                "gst_pad_start_task", 
                "_ZN10CSoundFile15SetWaveConfigExEbbbbbbb", 
                "gst_object_get_parent", 
                "_ZN10CSoundFile9GetLengthEbb", 
                "gst_pad_pull_range", 
                "_ZN10CSoundFile17SetResamplingModeEj", 
                "_ZN10CSoundFile18SetXBassParametersEjj", 
                "gst_caps_copy_nth", 
                "g_value_set_int", 
                "gst_pad_activate_pull", 
                "_gst_debug_category_new", 
                "gst_pad_set_query_type_function", 
                "gst_flow_get_name", 
                "_ZN10CSoundFileC1Ev", 
                "__divdi3", 
                "gst_query_set_duration", 
                "gst_pad_check_pull_range", 
                "_ZN10CSoundFile21SetSurroundParametersEjj", 
                "gst_tag_list_add", 
                "gst_stream_error_quark", 
                "gst_pad_alloc_buffer_and_set_caps", 
                "g_static_rec_mutex_lock", 
                "g_value_get_int", 
                "g_type_check_instance_is_a", 
                "g_param_spec_boolean", 
                "gst_query_parse_duration", 
                "_ZN10CSoundFile19SetReverbParametersEjj", 
                "memmove", 
                "gst_pad_event_default", 
                "gst_pad_set_activatepull_function", 
                "_ITM_registerTMCloneTable", 
                "_ZN10CSoundFile6CreateEPKhj", 
                "gst_object_unref", 
                "gst_buffer_new_and_alloc", 
                "gst_element_add_pad", 
                "gst_structure_fixate_field_nearest_int", 
                "gst_pad_fixate_caps", 
                "g_object_class_install_property", 
                "__stack_chk_fail", 
                "gst_pad_set_query_function", 
                "__gmon_start__", 
                "gst_element_register", 
                "gst_pad_set_fixatecaps_function", 
                "gst_element_found_tags", 
                "gst_message_new_segment_start", 
                "gst_caps_unref", 
                "gst_element_message_full", 
                "gst_pad_stop_task", 
                "gst_structure_get_int"
            ], 
            "rpm": "gstreamer-plugins-bad-free-extras-0.10.23-39.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gstreamer-0.10/libgstmodplug.so"
        }, 
        "usr/lib/gstreamer-0_10/libgstdirac_so": {
            "report-functions": [
                "gst_element_class_add_static_pad_template", 
                "gst_element_class_set_details_simple", 
                "gst_buffer_get_type", 
                "g_param_spec_boolean", 
                "g_once_init_enter", 
                "_gst_debug_register_funcptr", 
                "gst_type_register_static_full", 
                "gst_buffer_new_and_alloc", 
                "dirac_encoder_context_init", 
                "g_type_class_peek_parent", 
                "dirac_encoder_init", 
                "_ITM_registerTMCloneTable", 
                "g_object_class_install_property", 
                "g_intern_static_string", 
                "gst_util_uint64_scale", 
                "g_value_get_double", 
                "gst_base_video_encoder_finish_frame", 
                "g_param_spec_int", 
                "g_value_get_int", 
                "g_type_check_instance_is_a", 
                "gst_base_video_encoder_get_state", 
                "g_free", 
                "gst_base_video_encoder_get_type", 
                "g_once_init_leave", 
                "g_type_add_interface_static", 
                "g_return_if_fail_warning", 
                "gst_pad_push", 
                "gst_fraction_get_type", 
                "_ITM_deregisterTMCloneTable", 
                "dirac_encoder_close", 
                "gst_buffer_set_caps", 
                "__stack_chk_fail", 
                "dirac_encoder_end_sequence", 
                "g_param_spec_double", 
                "dirac_encoder_output", 
                "gst_base_video_encoder_set_latency_fields", 
                "g_value_set_int", 
                "gst_pad_set_caps", 
                "gst_caps_new_simple", 
                "g_value_set_boolean", 
                "gst_element_register", 
                "g_value_set_double", 
                "dirac_encoder_load", 
                "gst_base_video_encoder_get_oldest_frame", 
                "g_value_get_boolean", 
                "gst_preset_get_type", 
                "__cxa_finalize", 
                "gst_mini_object_unref", 
                "_gst_debug_category_new", 
                "gst_caps_unref", 
                "g_malloc"
            ], 
            "rpm": "gstreamer-plugins-bad-free-extras-0.10.23-39.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gstreamer-0.10/libgstdirac.so"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Applications/Multimedia", 
            "Name": " gstreamer-plugins-bad-free-extras", 
            "License": " LGPLv2+ and LGPLv2", 
            "URL": " http://gstreamer.freedesktop.org/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-02.phx2.fedoraproject.org", 
            "Description": "\nGStreamer is a streaming media framework, based on graphs of elements which\noperate on media data.\n\ngstreamer-plugins-bad contains plug-ins that aren't\ntested well enough, or the code is not of good enough quality.\n\nThis package (gstreamer-plugins-bad-extras) contains extra \"bad\" plugins for\nsources (mythtv), sinks (fbdev) and effects (pitch) which are not used\nvery much and require additional libraries to be installed.\n", 
            "Build Date": " Fri 24 Feb 2017 11:12:55 PM EST", 
            "Source RPM": " gstreamer-plugins-bad-free-0.10.23-39.fc26.src.rpm", 
            "Version": " 0.10.23", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Fri 24 Feb 2017 11:38:28 PM EST, Key ID 812a6b4b64dab85d", 
            "Release": " 39.fc26", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Extra GStreamer \"bad\" plugins (less often used \"bad\" plugins)", 
            "Size": " 701360"
        }
    }
}