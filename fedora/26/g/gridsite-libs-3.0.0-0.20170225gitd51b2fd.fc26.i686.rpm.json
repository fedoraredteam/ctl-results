{
    "results": {
        "complexity": {
            "r2 aa": "failed: ERROR: Cannot find radare2 in PATH"
        }, 
        "usr/lib/libgridsite_so_6_0_0": {
            "report-functions": [
                "X509_free", 
                "canl_cred_load_chain", 
                "fclose", 
                "mkdir", 
                "fgets", 
                "OPENSSL_sk_push", 
                "__cxa_finalize", 
                "__fprintf_chk", 
                "X509_getm_notBefore", 
                "SSL_CTX_use_PrivateKey_file", 
                "X509_STORE_CTX_get_current_cert", 
                "canl_cred_set_cert_type", 
                "X509_STORE_CTX_get_error_depth", 
                "xmlNodeGetContent", 
                "X509_get_ext_count", 
                "__ctype_tolower_loc", 
                "i2s_ASN1_INTEGER", 
                "stpcpy", 
                "strstr", 
                "d2i_ASN1_OBJECT", 
                "BIO_free", 
                "EVP_PKEY_free", 
                "open", 
                "unlink", 
                "memmove", 
                "canl_cred_sign_proxy", 
                "X509_EXTENSION_get_critical", 
                "fputc", 
                "BIO_ctrl", 
                "canl_cred_new_req", 
                "SSL_CTX_check_private_key", 
                "BIO_indent", 
                "sscanf", 
                "canl_cred_save_proxyfile", 
                "calloc", 
                "__printf_chk", 
                "__vasprintf_chk", 
                "EVP_VerifyFinal", 
                "d2i_X509", 
                "ASN1_get_object", 
                "malloc", 
                "X509_get_issuer_name", 
                "X509_NAME_oneline", 
                "fdopen", 
                "canl_cred_save_req", 
                "X509_REQ_get_pubkey", 
                "__strdup", 
                "X509_NAME_hash", 
                "X509_INFO_free", 
                "strcasecmp", 
                "BIO_write", 
                "ASN1_tag2str", 
                "BIO_new_mem_buf", 
                "SSL_CTX_use_certificate", 
                "PEM_read_bio_X509_REQ", 
                "chmod", 
                "__ctype_b_loc", 
                "X509_EXTENSION_free", 
                "X509_EXTENSION_new", 
                "BIO_s_mem", 
                "strcat", 
                "xmlStrcmp", 
                "X509_get_pubkey", 
                "pthread_once", 
                "__sprintf_chk", 
                "ERR_print_errors_fp", 
                "canl_cred_free", 
                "X509_EXTENSION_get_object", 
                "OBJ_obj2nid", 
                "PEM_write_bio_X509", 
                "EVP_get_digestbyname", 
                "time", 
                "OBJ_txt2obj", 
                "X509_STORE_CTX_set_error", 
                "strcpy", 
                "_ITM_deregisterTMCloneTable", 
                "ASN1_STRING_length", 
                "getuid", 
                "X509_REQ_verify", 
                "OPENSSL_sk_value", 
                "rindex", 
                "SSL_CTX_free", 
                "X509_NAME_get_entry", 
                "d2i_ASN1_ENUMERATED", 
                "ASN1_STRING_data", 
                "ASN1_INTEGER_free", 
                "X509_get_ext_by_OBJ", 
                "SSL_CTX_new", 
                "mmap", 
                "canl_verify_chain_wo_ossl", 
                "EVP_DigestInit_ex", 
                "X509_getm_notAfter", 
                "xmlInitParser", 
                "d2i_ASN1_INTEGER", 
                "xmlIsBlankNode", 
                "ASN1_OBJECT_free", 
                "mkstemp", 
                "canl_cred_load_cert_file", 
                "xmlDocGetRootElement", 
                "X509_EXTENSION_set_object", 
                "canl_cred_set_extension", 
                "__asprintf_chk", 
                "fnmatch", 
                "ASN1_STRING_print_ex", 
                "canl_free_ctx", 
                "BIO_read", 
                "_ITM_registerTMCloneTable", 
                "EVP_DigestUpdate", 
                "realloc", 
                "PEM_write_PrivateKey", 
                "EVP_sha1", 
                "ASN1_ENUMERATED_free", 
                "EVP_DigestFinal", 
                "canl_cred_new", 
                "index", 
                "BIO_new", 
                "read", 
                "readdir", 
                "fopen", 
                "fputs", 
                "__fxstat", 
                "PEM_X509_INFO_read_bio", 
                "__strndup", 
                "canl_cred_load_priv_key_file", 
                "xmlFreeDoc", 
                "PEM_write_bio_X509_REQ", 
                "close", 
                "canl_cred_save_priv_key", 
                "__xstat", 
                "canl_get_error_message", 
                "strlen", 
                "X509_EXTENSION_set_critical", 
                "X509_check_issued", 
                "X509_get_subject_name", 
                "ASN1_OCTET_STRING_new", 
                "canl_cred_load_priv_key", 
                "__stack_chk_fail", 
                "EVP_MD_CTX_free", 
                "free", 
                "PEM_read_PrivateKey", 
                "X509_get_ext", 
                "PEM_read_X509", 
                "X509_get_ext_d2i", 
                "strsep", 
                "__snprintf_chk", 
                "BIO_printf", 
                "canl_create_ctx", 
                "opendir", 
                "OPENSSL_sk_free", 
                "xmlKeepBlanksDefault", 
                "fwrite", 
                "OPENSSL_sk_num", 
                "strncmp", 
                "ASN1_OCTET_STRING_free", 
                "BIO_puts", 
                "EVP_DigestInit", 
                "xmlCheckVersion", 
                "OBJ_nid2sn", 
                "OPENSSL_init_crypto", 
                "OBJ_obj2txt", 
                "timegm", 
                "X509_REQ_free", 
                "getenv", 
                "X509_get_serialNumber", 
                "X509_supported_extension", 
                "canl_cred_save_cert", 
                "closedir", 
                "X509_EXTENSION_get_data", 
                "X509_NAME_ENTRY_get_data", 
                "ASN1_OCTET_STRING_set", 
                "X509_PURPOSE_get_by_sname", 
                "canl_cred_set_lifetime", 
                "strtol", 
                "OPENSSL_sk_shift", 
                "xmlParseFile", 
                "canl_cred_load_req", 
                "munmap", 
                "d2i_ASN1_OCTET_STRING", 
                "X509_STORE_CTX_get_error", 
                "__gmon_start__", 
                "X509_check_purpose", 
                "EVP_MD_CTX_reset", 
                "PEM_write_bio_PrivateKey", 
                "OPENSSL_sk_new_null", 
                "strcmp", 
                "canl_verify_chain", 
                "_IO_getc", 
                "EVP_MD_CTX_new", 
                "TLS_method", 
                "strncpy", 
                "i2a_ASN1_OBJECT", 
                "X509_EXTENSION_set_data"
            ], 
            "rpm": "gridsite-libs-3.0.0-0.20170225gitd51b2fd.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/libgridsite.so.6.0.0"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " System Environment/Daemons", 
            "Name": " gridsite-libs", 
            "License": " ASL 2.0 and BSD", 
            "URL": " http://www.gridsite.org", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-32.phx2.fedoraproject.org", 
            "Description": "\nGridSite was originally a web application developed for managing and formatting\nthe content of the http://www.gridpp.ac.uk/ website. Over the past years it\nhas grown into a set of extensions to the Apache web server and a toolkit for\nGrid credentials, GACL access control lists and HTTP(S) protocol operations.\n\nThis package contains the runtime libraries.\n", 
            "Build Date": " Sun 26 Feb 2017 04:38:02 AM EST", 
            "Source RPM": " gridsite-3.0.0-0.20170225gitd51b2fd.fc26.src.rpm", 
            "Version": " 3.0.0", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Sun 26 Feb 2017 04:45:18 AM EST, Key ID 812a6b4b64dab85d", 
            "Release": " 0.20170225gitd51b2fd.fc26", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Run time libraries for mod_gridsite and gridsite-clients", 
            "Size": " 88318"
        }
    }
}