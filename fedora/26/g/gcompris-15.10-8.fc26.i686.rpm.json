{
    "results": {
        "usr/lib/gcompris/libhanoi_so": {
            "report-functions": [
                "goo_canvas_item_remove", 
                "gc_skin_font_board_medium_bold", 
                "goo_canvas_item_get_canvas", 
                "g_ascii_strcasecmp", 
                "_ITM_registerTMCloneTable", 
                "gc_drag_offset_save", 
                "g_signal_connect_data", 
                "__cxa_finalize", 
                "g_malloc", 
                "gc_drag_stop", 
                "dcgettext", 
                "goo_canvas_svg_new", 
                "_ITM_deregisterTMCloneTable", 
                "goo_canvas_item_set_transform", 
                "gc_skin_rsvg_get", 
                "__stack_chk_fail", 
                "goo_canvas_get_root_item", 
                "g_random_int_range", 
                "goo_canvas_item_get_bounds", 
                "gc_sound_play_ogg", 
                "gc_drag_event", 
                "goo_canvas_path_new", 
                "goo_canvas_item_raise", 
                "goo_canvas_item_translate", 
                "gc_drag_start", 
                "gc_bonus_display", 
                "goo_canvas_text_new", 
                "gc_drag_item_move", 
                "goo_canvas_group_new", 
                "g_object_set", 
                "gc_bar_set_level", 
                "g_free", 
                "goo_canvas_rect_new", 
                "gc_bar_set", 
                "goo_canvas_convert_from_item_space", 
                "gc_skin_font_board_medium", 
                "gc_skin_color_text_button", 
                "__gmon_start__"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/libhanoi.so"
        }, 
        "usr/lib/gcompris/libalgebra_guesscount_so": {
            "report-functions": [
                "gc_skin_font_board_title_bold", 
                "gc_bonus_display", 
                "gc_score_end", 
                "g_timeout_add", 
                "g_strdup_printf", 
                "g_random_int_range", 
                "_ITM_registerTMCloneTable", 
                "gc_set_background", 
                "g_object_set", 
                "gc_bar_location", 
                "goo_canvas_get_root_item", 
                "g_free", 
                "__stack_chk_fail", 
                "goo_canvas_text_new", 
                "goo_canvas_image_new", 
                "g_log", 
                "g_signal_connect_data", 
                "g_ascii_strcasecmp", 
                "g_source_remove", 
                "gc_bar_set", 
                "gc_score_start", 
                "g_object_unref", 
                "goo_canvas_item_remove", 
                "gc_bar_set_level", 
                "gc_item_absolute_move", 
                "__cxa_finalize", 
                "gc_sound_play_ogg", 
                "goo_canvas_group_new", 
                "_ITM_deregisterTMCloneTable", 
                "gc_score_set", 
                "__gmon_start__", 
                "__sprintf_chk"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/libalgebra_guesscount.so"
        }, 
        "usr/lib/gcompris/librailroad_so": {
            "report-functions": [
                "g_list_remove", 
                "g_type_check_instance_cast", 
                "goo_canvas_item_remove", 
                "g_free", 
                "goo_canvas_item_get_canvas", 
                "g_signal_handlers_disconnect_matched", 
                "_ITM_deregisterTMCloneTable", 
                "g_strdup_printf", 
                "gc_score_end", 
                "gc_bar_set", 
                "__stack_chk_fail", 
                "gc_sound_play_ogg", 
                "gc_score_start", 
                "goo_canvas_convert_to_item_space", 
                "g_source_remove", 
                "gc_bar_set_level", 
                "gdk_pixbuf_get_height", 
                "gc_bonus_display", 
                "g_list_length", 
                "goo_canvas_group_new", 
                "g_list_append", 
                "gdk_pixbuf_get_width", 
                "goo_canvas_item_translate", 
                "g_ascii_strcasecmp", 
                "gc_pixmap_load", 
                "goo_canvas_image_new", 
                "g_assertion_message_expr", 
                "gc_bar_location", 
                "goo_canvas_item_get_bounds", 
                "g_object_set", 
                "goo_canvas_get_root_item", 
                "g_timeout_add", 
                "gc_score_set", 
                "g_list_nth_data", 
                "g_object_unref", 
                "g_random_int_range", 
                "__cxa_finalize", 
                "__gmon_start__", 
                "gc_set_background"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/librailroad.so"
        }, 
        "usr/lib/gcompris/libbillard_so": {
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "g_list_free", 
                "gc_item_absolute_move", 
                "g_list_append", 
                "goo_canvas_get_root_item", 
                "gc_sound_play_ogg", 
                "g_ascii_strcasecmp", 
                "gc_bar_set", 
                "g_source_remove", 
                "__cxa_finalize", 
                "goo_canvas_item_get_bounds", 
                "gc_set_background", 
                "g_object_set_data", 
                "g_free", 
                "__gmon_start__", 
                "g_type_check_instance_cast", 
                "g_timeout_add", 
                "goo_canvas_item_remove", 
                "g_malloc", 
                "g_signal_connect_data", 
                "g_list_length", 
                "gc_bonus_display", 
                "goo_canvas_item_get_canvas", 
                "gc_bar_set_level", 
                "g_random_int_range", 
                "goo_canvas_group_new", 
                "__stack_chk_fail", 
                "goo_canvas_ellipse_new", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/libbillard.so"
        }, 
        "usr/lib/gcompris/libmenu_so": {
            "report-functions": [
                "gc_pixmap_load", 
                "gc_skin_rsvg_get", 
                "g_assertion_message_expr", 
                "gc_menu_getlist", 
                "__gmon_start__", 
                "g_malloc", 
                "goo_canvas_item_get_bounds", 
                "__cxa_finalize", 
                "g_type_check_instance_is_fundamentally_a", 
                "gc_skin_font_board_tiny", 
                "gc_set_background_by_id", 
                "g_strdup_printf", 
                "_ITM_deregisterTMCloneTable", 
                "goo_canvas_get_root_item", 
                "goo_canvas_svg_new", 
                "gc_menu_section_get", 
                "g_strdup", 
                "gc_prop_get", 
                "goo_canvas_item_scale", 
                "goo_canvas_text_new", 
                "goo_canvas_image_new", 
                "g_signal_connect_data", 
                "gc_bar_set", 
                "gc_board_check_file", 
                "g_list_foreach", 
                "gc_config_start", 
                "goo_canvas_rect_new", 
                "g_strsplit", 
                "g_list_append", 
                "dcgettext", 
                "g_object_unref", 
                "gc_skin_get_color_default", 
                "g_list_length", 
                "goo_canvas_item_set_transform", 
                "g_ascii_strcasecmp", 
                "g_type_check_instance_cast", 
                "g_strfreev", 
                "gc_item_focus_init", 
                "g_log", 
                "goo_canvas_group_new", 
                "g_object_set_data", 
                "gdk_pixbuf_get_width", 
                "g_object_set", 
                "goo_canvas_item_translate", 
                "goo_canvas_item_remove", 
                "gc_board_is_demo_only", 
                "g_list_free", 
                "gc_skin_font_board_big", 
                "strcmp", 
                "g_free", 
                "g_object_get_data", 
                "g_object_set_data_full", 
                "gdk_pixbuf_get_height", 
                "gc_file_find_absolute", 
                "strtol", 
                "gc_board_get_number_of_activity", 
                "gc_board_run_next", 
                "_ITM_registerTMCloneTable", 
                "gc_skin_font_board_medium"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/libmenu.so"
        }, 
        "usr/lib/gcompris/libchess_so": {
            "report-functions": [
                "g_object_unref", 
                "g_object_set", 
                "waitpid", 
                "g_io_channel_set_encoding", 
                "g_ascii_strncasecmp", 
                "goo_canvas_item_translate", 
                "__ctype_tolower_loc", 
                "__printf_chk", 
                "g_io_channel_unix_new", 
                "g_malloc0", 
                "g_return_if_fail_warning", 
                "goo_canvas_rect_new", 
                "g_type_class_peek_parent", 
                "g_once_init_leave", 
                "goo_canvas_item_get_bounds", 
                "g_io_channel_flush", 
                "g_io_channel_read_chars", 
                "g_file_test", 
                "g_io_channel_unref", 
                "abort", 
                "goo_canvas_text_new", 
                "goo_canvas_get_root_item", 
                "g_error_free", 
                "g_log", 
                "signal", 
                "goo_canvas_item_get_canvas", 
                "goo_canvas_pointer_ungrab", 
                "g_type_class_add_private", 
                "g_spawn_async_with_pipes", 
                "gc_sound_play_ogg", 
                "g_type_check_instance_cast", 
                "goo_canvas_image_new", 
                "g_strdup", 
                "gc_bar_set", 
                "gdk_cursor_new", 
                "g_object_new", 
                "strchr", 
                "__strdup", 
                "dcgettext", 
                "gc_skin_font_board_big", 
                "__gmon_start__", 
                "getenv", 
                "gc_skin_color_content", 
                "g_type_instance_get_private", 
                "gc_pixmap_load", 
                "strlen", 
                "goo_canvas_pointer_grab", 
                "_ITM_deregisterTMCloneTable", 
                "g_io_channel_shutdown", 
                "g_type_check_class_cast", 
                "g_strdup_vprintf", 
                "exec_prefix", 
                "g_type_register_static_simple", 
                "g_io_channel_set_flags", 
                "gdk_pixbuf_get_width", 
                "gc_bar_location", 
                "gc_dialog", 
                "strcmp", 
                "gc_skin_color_subtitle", 
                "g_io_add_watch", 
                "g_ascii_strcasecmp", 
                "goo_canvas_convert_from_item_space", 
                "g_intern_static_string", 
                "g_signal_connect_data", 
                "__cxa_finalize", 
                "goo_canvas_item_raise", 
                "g_free", 
                "gc_board_stop", 
                "g_type_check_instance_is_a", 
                "g_once_init_enter", 
                "g_strdup_printf", 
                "g_find_program_in_path", 
                "g_type_class_adjust_private_offset", 
                "g_malloc", 
                "gdk_cursor_unref", 
                "g_source_remove", 
                "gc_bar_set_level", 
                "g_build_filename", 
                "strstr", 
                "__stack_chk_fail", 
                "goo_canvas_group_new", 
                "g_spawn_close_pid", 
                "g_assertion_message_expr", 
                "goo_canvas_item_remove", 
                "gc_set_default_background", 
                "gdk_pixbuf_get_height", 
                "g_io_channel_write_chars"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/libchess.so"
        }, 
        "usr/lib/gcompris/libleftright_so": {
            "report-functions": [
                "goo_canvas_group_new", 
                "goo_canvas_get_root_item", 
                "gc_bar_hide", 
                "_ITM_deregisterTMCloneTable", 
                "gc_set_background", 
                "gc_pixmap_load", 
                "gdk_pixbuf_get_height", 
                "g_random_int_range", 
                "dcgettext", 
                "gc_score_end", 
                "_ITM_registerTMCloneTable", 
                "g_timeout_add", 
                "goo_canvas_image_new", 
                "gc_bar_set_level", 
                "g_strdup_printf", 
                "g_ascii_strcasecmp", 
                "gdk_pixbuf_get_width", 
                "g_free", 
                "__cxa_finalize", 
                "gc_score_set", 
                "gc_bonus_display", 
                "__gmon_start__", 
                "gc_bar_set", 
                "goo_canvas_item_remove", 
                "gc_util_button_text_svg", 
                "gc_score_start"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/libleftright.so"
        }, 
        "usr/lib/gcompris/libmaze_so": {
            "report-functions": [
                "goo_canvas_item_set_transform", 
                "gc_set_background", 
                "goo_canvas_item_scale", 
                "gc_sound_play_ogg", 
                "goo_canvas_item_get_bounds", 
                "_ITM_deregisterTMCloneTable", 
                "gc_item_focus_init", 
                "gc_bar_location", 
                "gc_bonus_display", 
                "goo_canvas_group_new", 
                "gc_skin_color_content", 
                "gdk_pixbuf_scale_simple", 
                "goo_canvas_rect_new", 
                "ceilf", 
                "goo_canvas_svg_new", 
                "gc_bar_set_level", 
                "__gmon_start__", 
                "gc_skin_font_board_tiny", 
                "goo_canvas_item_translate", 
                "goo_canvas_item_rotate", 
                "g_signal_connect_data", 
                "gc_bar_set", 
                "goo_canvas_points_new", 
                "_ITM_registerTMCloneTable", 
                "gc_rsvg_load", 
                "goo_canvas_item_raise", 
                "goo_canvas_item_remove", 
                "floorf", 
                "__stack_chk_fail", 
                "g_random_int", 
                "dcgettext", 
                "g_ascii_strcasecmp", 
                "g_object_unref", 
                "gc_pixmap_load", 
                "goo_canvas_image_new", 
                "gc_set_default_background", 
                "g_ascii_strncasecmp", 
                "g_assertion_message_expr", 
                "goo_canvas_get_root_item", 
                "g_object_set", 
                "goo_canvas_polyline_new", 
                "gc_bar_set_repeat_icon"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/libmaze.so"
        }, 
        "usr/lib/gcompris/libclick_on_letter_so": {
            "report-functions": [
                "gtk_tree_model_foreach", 
                "gtk_dialog_run", 
                "gtk_container_add", 
                "gc_score_end", 
                "gtk_list_store_remove", 
                "g_ascii_strcasecmp", 
                "gtk_list_store_clear", 
                "gc_prop_get", 
                "gtk_tree_model_get_iter_first", 
                "gc_score_set", 
                "gtk_tree_selection_set_mode", 
                "strtol", 
                "g_strdup", 
                "gc_sound_bg_pause", 
                "gtk_tree_view_set_rules_hint", 
                "gc_sound_bg_resume", 
                "gtk_widget_destroy", 
                "gc_skin_font_board_huge_bold", 
                "g_key_file_get_groups", 
                "g_log", 
                "dcgettext", 
                "gtk_tree_path_new_from_indices", 
                "gtk_tree_model_get_iter_from_string", 
                "gtk_box_pack_start", 
                "gtk_list_store_set", 
                "g_signal_connect_data", 
                "gtk_scrolled_window_new", 
                "gc_db_set_board_conf", 
                "gtk_dialog_get_type", 
                "gc_bar_set_repeat_icon", 
                "gtk_message_dialog_new", 
                "gc_locale_get_locale", 
                "g_random_int_range", 
                "gtk_tree_view_get_selection", 
                "g_object_set", 
                "gc_sound_alphabet", 
                "g_assertion_message_expr", 
                "g_timeout_add", 
                "gtk_tree_view_get_model", 
                "goo_canvas_item_remove", 
                "g_object_unref", 
                "gc_file_find_absolute", 
                "g_strcmp0", 
                "g_strconcat", 
                "gtk_button_new_from_stock", 
                "g_array_sized_new", 
                "gc_sound_play_ogg", 
                "gtk_vbox_new", 
                "gc_bonus_display", 
                "g_slist_append", 
                "gtk_tree_selection_get_selected", 
                "gc_bar_set_level", 
                "gtk_tree_view_set_search_column", 
                "goo_canvas_text_new", 
                "gtk_tree_view_get_type", 
                "gc_dialog", 
                "gc_locale_get_name", 
                "gtk_list_store_move_after", 
                "gtk_list_store_new", 
                "gc_board_config_combo_locales_asset", 
                "gc_item_focus_init", 
                "g_object_get_data", 
                "g_utf8_skip", 
                "g_object_set_data", 
                "gc_rsvg_load", 
                "gc_locale_get", 
                "gtk_cell_renderer_text_new", 
                "g_file_set_contents", 
                "g_array_free", 
                "gtk_tree_view_append_column", 
                "g_utf8_strlen", 
                "g_array_append_vals", 
                "g_free", 
                "g_unichar_to_utf8", 
                "g_unichar_tolower", 
                "g_key_file_get_string", 
                "g_strdup_printf", 
                "remove", 
                "goo_canvas_item_translate", 
                "g_strchug", 
                "g_hash_table_foreach", 
                "g_slist_length", 
                "strcmp", 
                "gtk_list_store_get_type", 
                "g_hash_table_lookup", 
                "__stack_chk_fail", 
                "g_malloc0", 
                "g_strfreev", 
                "gtk_tree_model_get_path", 
                "rsvg_handle_get_dimensions", 
                "g_key_file_load_from_file", 
                "g_slist_free", 
                "g_strsplit_set", 
                "gtk_button_new_with_label", 
                "gtk_scrolled_window_get_type", 
                "g_key_file_new", 
                "g_hash_table_destroy", 
                "gtk_combo_box_get_active_iter", 
                "gtk_container_get_type", 
                "gtk_tree_model_get_iter", 
                "gtk_widget_show", 
                "gc_bar_location", 
                "gtk_widget_set_size_request", 
                "gtk_widget_get_type", 
                "gtk_list_store_move_before", 
                "gtk_tree_path_free", 
                "gc_db_get_conf", 
                "gc_file_find_absolute_writeable", 
                "g_key_file_set_string", 
                "_ITM_registerTMCloneTable", 
                "gc_board_config_window_display", 
                "g_type_check_instance_cast", 
                "gtk_tree_path_get_indices", 
                "gtk_frame_new", 
                "goo_canvas_svg_new", 
                "gc_locale_set", 
                "g_utf8_validate", 
                "gc_bar_set", 
                "__cxa_finalize", 
                "gc_sound_play_ogg_cb", 
                "g_key_file_to_data", 
                "gtk_box_get_type", 
                "gtk_tree_model_get", 
                "g_strchomp", 
                "gtk_list_store_append", 
                "gtk_tree_view_new_with_model", 
                "gc_set_background", 
                "gtk_tree_model_get_type", 
                "g_utf8_strup", 
                "gc_db_get_board_conf", 
                "gtk_hbox_new", 
                "gtk_combo_box_get_model", 
                "g_utf8_get_char", 
                "g_slist_nth_data", 
                "g_strsplit", 
                "goo_canvas_group_new", 
                "gc_score_start", 
                "goo_canvas_get_root_item", 
                "gtk_tree_view_column_new_with_attributes", 
                "_ITM_deregisterTMCloneTable", 
                "gc_im_reset", 
                "gtk_tree_model_iter_n_children", 
                "g_dpgettext", 
                "goo_canvas_rect_new", 
                "gc_score_set_max"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/libclick_on_letter.so"
        }, 
        "usr/lib/gcompris/libawele_so": {
            "report-functions": [
                "exit", 
                "gc_item_focus_init", 
                "g_malloc", 
                "gc_anim_load", 
                "g_node_new", 
                "g_strdup_printf", 
                "g_source_remove", 
                "gc_skin_font_board_big", 
                "g_free", 
                "realloc", 
                "malloc", 
                "goo_canvas_group_new", 
                "gc_pixmap_load", 
                "_ITM_registerTMCloneTable", 
                "gc_bar_set", 
                "__gmon_start__", 
                "gc_alphabeta", 
                "__stack_chk_fail", 
                "g_node_traverse", 
                "g_object_unref", 
                "dcgettext", 
                "g_object_set", 
                "__sprintf_chk", 
                "gc_anim_deactivate", 
                "g_ascii_strcasecmp", 
                "g_node_insert", 
                "gc_skin_font_board_medium", 
                "gc_set_default_background", 
                "__cxa_finalize", 
                "gc_anim_activate", 
                "g_node_destroy", 
                "gc_anim_free", 
                "g_random_int", 
                "gc_bar_set_level", 
                "gc_skin_font_board_medium_bold", 
                "goo_canvas_get_root_item", 
                "goo_canvas_image_new", 
                "g_timeout_add", 
                "gc_bonus_display", 
                "_ITM_deregisterTMCloneTable", 
                "g_signal_connect_data", 
                "gc_dialog", 
                "goo_canvas_item_remove", 
                "g_log", 
                "g_node_nth_child", 
                "goo_canvas_text_new"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/libawele.so"
        }, 
        "usr/lib/gcompris/libshapegame_so": {
            "report-functions": [
                "g_strcompress", 
                "gc_drag_offset_get", 
                "gc_drag_change_mode", 
                "goo_canvas_item_raise", 
                "__stack_chk_fail", 
                "gc_skin_font_board_small", 
                "g_return_if_fail_warning", 
                "goo_canvas_item_lower", 
                "g_list_append", 
                "g_ascii_strncasecmp", 
                "goo_canvas_rect_new", 
                "gc_db_get_board_conf", 
                "goo_canvas_group_new", 
                "gc_item_focus_remove", 
                "__cxa_finalize", 
                "g_hash_table_size", 
                "gc_sound_play_ogg", 
                "gdk_pixbuf_copy", 
                "g_object_set_data", 
                "g_hash_table_insert", 
                "g_strdup_printf", 
                "strlen", 
                "gc_skin_get_color_default", 
                "free", 
                "gc_bar_hide", 
                "goo_canvas_svg_new", 
                "gc_item_focus_init", 
                "xmlParseFile", 
                "dcgettext", 
                "gc_board_config_combo_locales", 
                "gdk_pixbuf_get_width", 
                "g_object_set", 
                "gc_bonus_display", 
                "gdk_pixbuf_scale_simple", 
                "gc_set_default_background", 
                "g_str_hash", 
                "g_type_check_instance_cast", 
                "gc_board_config_combo_drag", 
                "goo_canvas_get_root_item", 
                "strchr", 
                "gc_locale_set", 
                "gc_board_config_window_display", 
                "strcpy", 
                "g_random_int_range", 
                "_ITM_deregisterTMCloneTable", 
                "gc_locale_get", 
                "gdk_pixbuf_copy_area", 
                "xmlFreeDoc", 
                "g_hash_table_new", 
                "gc_bar_location", 
                "g_ascii_strtod", 
                "g_list_nth_data", 
                "goo_canvas_ellipse_new", 
                "goo_canvas_convert_from_item_space", 
                "gdk_pixbuf_new", 
                "gc_file_find_absolute", 
                "g_malloc", 
                "gc_skin_rsvg_get", 
                "strcmp", 
                "g_object_unref", 
                "pixbuf_add_transparent", 
                "goo_canvas_text_new", 
                "goo_canvas_item_get_canvas", 
                "xmlGetProp", 
                "gc_bar_set", 
                "g_list_length", 
                "g_hash_table_foreach", 
                "g_signal_connect_data", 
                "goo_canvas_image_new", 
                "__gmon_start__", 
                "g_object_get_data", 
                "gdk_pixbuf_get_height", 
                "g_list_copy", 
                "goo_canvas_item_get_type", 
                "gc_bar_set_level", 
                "gc_drag_stop", 
                "g_dpgettext", 
                "xmlNodeListGetString", 
                "gc_skin_color_text_button", 
                "sqrt", 
                "gc_item_absolute_move", 
                "g_ascii_strcasecmp", 
                "g_hash_table_lookup", 
                "gc_pixmap_load", 
                "gc_db_set_board_conf", 
                "gc_db_get_conf", 
                "goo_canvas_item_get_bounds", 
                "gc_drag_event", 
                "g_hash_table_destroy", 
                "xmlFree", 
                "g_strdup", 
                "g_malloc0", 
                "gc_drag_offset_save", 
                "g_list_remove", 
                "g_str_equal", 
                "goo_canvas_item_remove", 
                "strncmp", 
                "gc_drag_item_move", 
                "goo_canvas_item_set_transform", 
                "g_list_free", 
                "gc_set_background", 
                "gc_drag_start", 
                "g_free", 
                "_ITM_registerTMCloneTable", 
                "goo_canvas_item_scale"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/libshapegame.so"
        }, 
        "usr/lib/gcompris/libsmallnumbers_so": {
            "report-functions": [
                "__stack_chk_fail", 
                "gc_board_config_boolean_box", 
                "gc_bar_set", 
                "g_ascii_strncasecmp", 
                "gtk_toggle_button_get_active", 
                "_ITM_registerTMCloneTable", 
                "gc_db_set_board_conf", 
                "__cxa_finalize", 
                "gc_score_end", 
                "gc_db_get_board_conf", 
                "g_hash_table_destroy", 
                "gc_score_start", 
                "gtk_widget_set_sensitive", 
                "goo_canvas_get_root_item", 
                "dcgettext", 
                "goo_canvas_item_get_child", 
                "gc_db_get_conf", 
                "g_source_remove", 
                "g_object_set_data", 
                "g_strdup_printf", 
                "rsvg_handle_get_dimensions", 
                "g_malloc", 
                "g_signal_connect_data", 
                "g_hash_table_foreach", 
                "goo_canvas_svg_new", 
                "gc_sound_alphabet", 
                "gc_board_config_window_display", 
                "g_timeout_add", 
                "g_utf8_get_char", 
                "g_object_unref", 
                "goo_canvas_item_get_n_children", 
                "__gmon_start__", 
                "goo_canvas_group_new", 
                "g_type_check_instance_cast", 
                "goo_canvas_item_get_bounds", 
                "gc_board_config_combo_locales_asset", 
                "__sprintf_chk", 
                "g_random_int", 
                "_ITM_deregisterTMCloneTable", 
                "goo_canvas_item_translate", 
                "gc_timing", 
                "gc_bonus_display", 
                "gtk_widget_get_type", 
                "goo_canvas_item_scale", 
                "g_free", 
                "gc_sound_play_ogg", 
                "g_unichar_to_utf8", 
                "g_object_get_data", 
                "g_malloc0", 
                "g_ascii_strcasecmp", 
                "goo_canvas_item_remove", 
                "gc_score_set", 
                "strtol", 
                "gc_set_background", 
                "g_hash_table_lookup", 
                "gc_bar_set_level"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/libsmallnumbers.so"
        }, 
        "usr/lib/gcompris/libfifteen_so": {
            "report-functions": [
                "__stack_chk_fail", 
                "goo_canvas_group_new", 
                "g_object_set", 
                "g_object_get_data", 
                "g_type_check_instance_cast", 
                "__gmon_start__", 
                "g_ascii_strcasecmp", 
                "gc_bar_set", 
                "g_malloc", 
                "goo_canvas_item_get_parent", 
                "g_random_int", 
                "_ITM_deregisterTMCloneTable", 
                "gc_bar_set_level", 
                "_ITM_registerTMCloneTable", 
                "g_signal_connect_data", 
                "goo_canvas_text_new", 
                "g_free", 
                "g_object_set_data", 
                "gc_sound_play_ogg", 
                "goo_canvas_item_translate", 
                "__cxa_finalize", 
                "goo_canvas_item_remove", 
                "gc_skin_font_board_medium", 
                "gc_set_background", 
                "goo_canvas_rect_new", 
                "goo_canvas_get_root_item", 
                "__sprintf_chk"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/libfifteen.so"
        }, 
        "usr/lib/gcompris/libplanegame_so": {
            "report-functions": [
                "g_object_set_data", 
                "_ITM_deregisterTMCloneTable", 
                "goo_canvas_item_animate", 
                "g_type_check_instance_cast", 
                "g_ascii_strcasecmp", 
                "goo_canvas_item_translate", 
                "g_source_remove", 
                "goo_canvas_item_get_child", 
                "gc_score_end", 
                "gc_rsvg_load", 
                "rsvg_handle_get_dimensions", 
                "g_strdup_printf", 
                "goo_canvas_item_get_bounds", 
                "gc_skin_font_board_big", 
                "gc_bar_location", 
                "g_random_int", 
                "_ITM_registerTMCloneTable", 
                "gc_score_set", 
                "goo_canvas_item_raise", 
                "gc_bar_set", 
                "goo_canvas_item_scale", 
                "gc_sound_play_ogg", 
                "g_free", 
                "g_object_get_data", 
                "__stack_chk_fail", 
                "goo_canvas_group_new", 
                "goo_canvas_item_get_n_children", 
                "__gmon_start__", 
                "gc_sound_alphabet", 
                "goo_canvas_item_remove", 
                "gc_set_background", 
                "goo_canvas_text_new", 
                "g_object_unref", 
                "g_timeout_add", 
                "gc_bar_set_level", 
                "goo_canvas_get_root_item", 
                "gc_score_start"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/libplanegame.so"
        }, 
        "usr/lib/gcompris/libimageid_so": {
            "report-functions": [
                "g_timeout_add", 
                "goo_canvas_text_new", 
                "g_strdup", 
                "g_object_unref", 
                "goo_canvas_group_new", 
                "gc_skin_font_board_big", 
                "__gmon_start__", 
                "gc_skin_rsvg_get", 
                "goo_canvas_item_set_transform", 
                "gc_bar_set", 
                "_ITM_deregisterTMCloneTable", 
                "g_hash_table_lookup", 
                "goo_canvas_get_root_item", 
                "g_assertion_message_expr", 
                "goo_canvas_item_get_bounds", 
                "xmlFreeDoc", 
                "gc_bar_set_level", 
                "_ITM_registerTMCloneTable", 
                "goo_canvas_item_get_parent", 
                "gc_dialog", 
                "g_object_get_data", 
                "gc_board_config_window_display", 
                "__stack_chk_fail", 
                "g_object_set_data", 
                "goo_canvas_item_translate", 
                "gc_score_end", 
                "gc_db_get_conf", 
                "g_ascii_strcasecmp", 
                "gc_score_set", 
                "gc_bonus_display", 
                "g_list_prepend", 
                "g_signal_connect_data", 
                "gc_db_get_board_conf", 
                "goo_canvas_svg_new", 
                "gc_locale_set", 
                "__cxa_finalize", 
                "gdk_pixbuf_get_height", 
                "gc_file_find_absolute", 
                "gc_board_stop", 
                "dcgettext", 
                "gc_pixmap_load", 
                "gc_skin_color_text_button", 
                "g_hash_table_foreach", 
                "g_strdup_printf", 
                "g_list_remove", 
                "g_list_append", 
                "g_list_nth_data", 
                "gc_set_background", 
                "g_random_int_range", 
                "xmlNodeListGetString", 
                "g_free", 
                "gc_score_start", 
                "g_return_if_fail_warning", 
                "gdk_pixbuf_get_width", 
                "gc_board_config_combo_locales", 
                "g_type_check_instance_cast", 
                "g_malloc0", 
                "gc_skin_color_shadow", 
                "xmlParseFile", 
                "g_object_set", 
                "g_list_length", 
                "gc_db_set_board_conf", 
                "goo_canvas_item_remove"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/libimageid.so"
        }, 
        "usr/share/gcompris/boards/lang/words/shelf_png": {
            "report-functions": [], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "find-libc-functions": [
                ""
            ], 
            "hardening-check": {}, 
            "filename": "usr/share/gcompris/boards/lang/words/shelf.png"
        }, 
        "usr/lib/gcompris/libmoney_so": {
            "report-functions": [
                "g_malloc", 
                "g_type_instance_get_private", 
                "__cxa_finalize", 
                "g_list_append", 
                "g_type_register_static_simple", 
                "g_return_if_fail_warning", 
                "g_once_init_leave", 
                "__stack_chk_fail", 
                "g_list_length", 
                "g_random_int_range", 
                "goo_canvas_item_set_transform", 
                "g_type_check_class_cast", 
                "g_once_init_enter", 
                "rsvg_handle_get_dimensions", 
                "gc_rsvg_load", 
                "goo_canvas_group_new", 
                "gc_pixmap_load", 
                "g_assertion_message_expr", 
                "gc_bar_location", 
                "goo_canvas_item_translate", 
                "goo_canvas_text_new", 
                "g_type_class_add_private", 
                "g_ascii_strcasecmp", 
                "g_strdup_printf", 
                "g_type_check_instance_cast", 
                "g_strcmp0", 
                "dcgettext", 
                "g_object_set", 
                "gc_set_background", 
                "__gmon_start__", 
                "gc_skin_rsvg_get", 
                "gc_item_focus_init", 
                "gc_skin_font_board_big", 
                "g_list_nth_data", 
                "gc_skin_font_board_medium", 
                "g_type_class_peek_parent", 
                "gc_bar_set", 
                "g_signal_connect_data", 
                "goo_canvas_svg_new", 
                "g_log", 
                "goo_canvas_get_root_item", 
                "goo_canvas_image_new", 
                "goo_canvas_item_remove", 
                "g_intern_static_string", 
                "g_object_unref", 
                "gc_sound_play_ogg", 
                "g_object_new", 
                "g_free", 
                "_ITM_deregisterTMCloneTable", 
                "goo_canvas_item_scale", 
                "gc_bar_set_level", 
                "goo_canvas_item_get_bounds", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/libmoney.so"
        }, 
        "usr/lib/gcompris/libphotohunter_so": {
            "report-functions": [
                "gc_pixmap_load", 
                "gc_set_default_background", 
                "goo_canvas_item_set_transform", 
                "goo_canvas_rect_new", 
                "__gmon_start__", 
                "gc_skin_color_text_button", 
                "gc_bar_location", 
                "g_array_free", 
                "goo_canvas_convert_from_item_space", 
                "gc_bar_set_level", 
                "g_array_remove_range", 
                "g_object_unref", 
                "goo_canvas_image_new", 
                "gdk_pixbuf_get_n_channels", 
                "__stack_chk_fail", 
                "gdk_pixbuf_get_colorspace", 
                "g_ascii_strcasecmp", 
                "g_strdup_printf", 
                "gc_skin_font_board_small", 
                "gdk_pixbuf_get_rowstride", 
                "gc_bar_set", 
                "gdk_pixbuf_get_pixels", 
                "gc_score_start", 
                "goo_canvas_get_root_item", 
                "goo_canvas_item_get_bounds", 
                "goo_canvas_svg_new", 
                "gc_dialog", 
                "g_array_append_vals", 
                "g_assertion_message_expr", 
                "gdk_pixbuf_get_width", 
                "gc_bonus_display", 
                "goo_canvas_ellipse_new", 
                "g_free", 
                "goo_canvas_item_translate", 
                "_ITM_deregisterTMCloneTable", 
                "g_array_new", 
                "gdk_pixbuf_get_bits_per_sample", 
                "goo_canvas_group_new", 
                "gc_file_find_absolute", 
                "dcgettext", 
                "goo_canvas_item_remove", 
                "g_signal_connect_data", 
                "gc_board_stop", 
                "goo_canvas_text_new", 
                "gc_score_end", 
                "_ITM_registerTMCloneTable", 
                "gc_skin_rsvg_get", 
                "gdk_pixbuf_get_height", 
                "gc_score_set", 
                "__cxa_finalize", 
                "g_signal_handlers_disconnect_matched"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/libphotohunter.so"
        }, 
        "usr/bin/gcompris": {
            "report-functions": [
                "g_access", 
                "g_get_home_dir", 
                "gtk_window_set_decorated", 
                "strlen", 
                "gtk_scrolled_window_get_type", 
                "g_get_real_name", 
                "g_file_get_contents", 
                "gtk_text_view_set_wrap_mode", 
                "gdk_cursor_new", 
                "g_option_context_add_main_entries", 
                "gtk_list_store_clear", 
                "g_free", 
                "gdk_pixbuf_new", 
                "g_slist_prepend", 
                "sqlite3_free", 
                "gtk_spin_button_set_wrap", 
                "gtk_window_set_default_size", 
                "g_get_user_name", 
                "goo_canvas_rect_new", 
                "gdk_screen_get_height", 
                "gtk_window_get_type", 
                "g_strv_length", 
                "gtk_text_view_get_buffer", 
                "xmlDocGetRootElement", 
                "gtk_dialog_new_with_buttons", 
                "goo_canvas_item_rotate", 
                "xmlHasProp", 
                "g_error_free", 
                "gtk_list_store_get_type", 
                "gtk_widget_set_sensitive", 
                "pango_font_description_from_string", 
                "textdomain", 
                "pango_font_family_get_name", 
                "goo_canvas_polyline_get_type", 
                "gtk_check_button_new_with_label", 
                "__stack_chk_fail", 
                "xmlSetProp", 
                "xmlNewNode", 
                "gst_bus_add_watch", 
                "gdk_window_set_cursor", 
                "g_ascii_strncasecmp", 
                "g_strlcat", 
                "g_slist_append", 
                "goo_canvas_group_get_type", 
                "gtk_widget_get_type", 
                "gtk_window_get_screen", 
                "g_module_close", 
                "xmlNodeAddContent", 
                "gtk_entry_set_text", 
                "_ITM_registerTMCloneTable", 
                "gdk_cursor_new_from_pixmap", 
                "xmlStrcmp", 
                "gdk_color_parse", 
                "g_slist_remove", 
                "gtk_events_pending", 
                "g_utf8_offset_to_pointer", 
                "g_option_context_add_group", 
                "gtk_text_view_set_cursor_visible", 
                "g_option_context_new", 
                "goo_canvas_item_translate", 
                "goo_canvas_get_type", 
                "goo_canvas_new", 
                "g_slist_foreach", 
                "gtk_toggle_button_get_active", 
                "g_hash_table_remove", 
                "gtk_object_destroy", 
                "gst_pipeline_get_bus", 
                "gtk_text_view_new", 
                "sqlite3_exec", 
                "gtk_window_fullscreen", 
                "gtk_widget_grab_focus", 
                "g_object_set_data", 
                "g_date_new", 
                "strcasecmp", 
                "time", 
                "xmlFreeParserCtxt", 
                "sqlite3_errmsg", 
                "pango_font_description_free", 
                "gtk_combo_box_append_text", 
                "g_type_check_instance_is_a", 
                "goo_canvas_svg_new", 
                "g_list_free", 
                "g_rename", 
                "gtk_toggle_button_get_type", 
                "pango_cairo_font_map_get_default", 
                "gtk_frame_new", 
                "gtk_window_set_icon", 
                "g_module_symbol", 
                "goo_canvas_convert_to_item_space", 
                "gtk_toggle_button_set_active", 
                "goo_canvas_item_raise", 
                "g_assertion_message_expr", 
                "gtk_im_context_focus_in", 
                "g_hash_table_foreach", 
                "sqlite3_mprintf", 
                "fopen", 
                "gtk_radio_button_get_type", 
                "g_slist_find_custom", 
                "g_option_context_free", 
                "goo_canvas_widget_new", 
                "gtk_button_get_type", 
                "g_scanner_get_next_token", 
                "g_date_free", 
                "g_hash_table_new_full", 
                "g_hash_table_lookup", 
                "gtk_vbox_get_type", 
                "g_idle_add", 
                "g_slist_length", 
                "g_list_length", 
                "goo_canvas_image_get_type", 
                "g_file_test", 
                "goo_canvas_set_scale", 
                "gst_object_unref", 
                "gtk_im_context_set_client_window", 
                "gtk_adjustment_get_type", 
                "gtk_main_iteration", 
                "gtk_im_context_filter_keypress", 
                "gtk_im_multicontext_new", 
                "gdk_pixbuf_get_height", 
                "exit", 
                "g_object_get_data", 
                "g_object_get", 
                "g_list_find_custom", 
                "gtk_text_view_set_editable", 
                "gdk_pixbuf_animation_new_from_file", 
                "g_random_set_seed", 
                "gtk_radio_button_get_group", 
                "g_path_get_basename", 
                "gtk_combo_box_set_active", 
                "gtk_widget_get_toplevel", 
                "gtk_window_present", 
                "gtk_box_pack_start", 
                "gdk_pixbuf_animation_get_iter", 
                "g_path_get_dirname", 
                "gtk_widget_modify_font", 
                "xmlNewChild", 
                "rename", 
                "g_strndup", 
                "g_fopen", 
                "strtol", 
                "goo_canvas_pointer_ungrab", 
                "gtk_spin_button_get_value_as_int", 
                "g_list_index", 
                "gtk_spin_button_get_type", 
                "gtk_main", 
                "gtk_widget_realize", 
                "pango_attr_list_unref", 
                "goo_canvas_update", 
                "g_path_is_absolute", 
                "g_memdup", 
                "sqlite3_get_table", 
                "g_unichar_tolower", 
                "g_module_error", 
                "g_str_hash", 
                "g_mkdir_with_parents", 
                "goo_canvas_item_get_bounds", 
                "g_set_error", 
                "xmlNodeGetContent", 
                "g_slist_nth_data", 
                "xmlSaveFormatFileEnc", 
                "g_list_insert_sorted", 
                "gtk_main_quit", 
                "g_strcmp0", 
                "g_object_set", 
                "gtk_vbox_new", 
                "g_hash_table_iter_init", 
                "g_strconcat", 
                "__libc_start_main", 
                "g_list_remove", 
                "g_scanner_peek_next_token", 
                "g_scanner_cur_value", 
                "g_dir_close", 
                "g_str_equal", 
                "gdk_display_get_default", 
                "xmlNewParserCtxt", 
                "g_type_check_instance_cast", 
                "gdk_cursor_new_from_pixbuf", 
                "gtk_window_resize", 
                "xmlNodeListGetString", 
                "gtk_alignment_new", 
                "g_list_position", 
                "gtk_adjustment_new", 
                "goo_canvas_image_new", 
                "sqlite3_free_table", 
                "__gmon_start__", 
                "__cxa_finalize", 
                "g_malloc", 
                "gst_element_set_state", 
                "fclose", 
                "gtk_widget_show_all", 
                "gdk_pixbuf_new_from_inline", 
                "goo_canvas_scroll_to", 
                "gdk_font_load", 
                "gtk_im_context_get_preedit_string", 
                "gtk_tree_model_get", 
                "goo_canvas_pointer_grab", 
                "g_strdup", 
                "g_module_open", 
                "g_hash_table_insert", 
                "g_hash_table_get_values", 
                "gtk_window_set_title", 
                "gtk_combo_box_get_active_iter", 
                "g_strsplit_set", 
                "goo_canvas_get_root_item", 
                "g_slist_insert", 
                "g_utf8_strlen", 
                "g_date_set_time_val", 
                "g_quark_from_static_string", 
                "bindtextdomain", 
                "dcngettext", 
                "goo_canvas_item_get_type", 
                "g_signal_emit_by_name", 
                "gtk_adjustment_set_value", 
                "gtk_im_context_reset", 
                "g_scanner_new", 
                "xmlFreeDoc", 
                "gtk_hseparator_get_type", 
                "setlocale", 
                "gtk_combo_box_get_model", 
                "g_quark_from_string", 
                "g_hash_table_replace", 
                "g_list_prepend", 
                "goo_canvas_item_remove", 
                "g_strrstr", 
                "gtk_label_set_line_wrap", 
                "gtk_scrolled_window_new", 
                "gst_init", 
                "g_dir_read_name", 
                "gdk_bitmap_create_from_data", 
                "gtk_dialog_get_type", 
                "pango_font_map_list_families", 
                "g_strfreev", 
                "gtk_vscrollbar_new", 
                "gtk_combo_box_set_wrap_width", 
                "gtk_entry_new", 
                "gtk_window_unfullscreen", 
                "gtk_window_get_position", 
                "gst_pipeline_get_type", 
                "gtk_entry_get_text", 
                "gtk_widget_hide", 
                "difftime", 
                "goo_canvas_set_bounds", 
                "sqlite3_close", 
                "goo_canvas_item_set_transform", 
                "gtk_box_get_type", 
                "g_malloc0", 
                "gdk_pixbuf_get_rowstride", 
                "gtk_box_pack_end", 
                "gtk_window_set_wmclass", 
                "g_list_append", 
                "g_source_remove", 
                "__isoc99_sscanf", 
                "g_module_supported", 
                "g_ascii_strcasecmp", 
                "gtk_widget_modify_base", 
                "g_log_set_handler", 
                "gtk_entry_set_max_length", 
                "gtk_window_set_position", 
                "g_get_current_time", 
                "g_timeout_add", 
                "strncmp", 
                "g_strlcpy", 
                "g_dir_open", 
                "gtk_label_set_markup", 
                "gtk_spin_button_set_digits", 
                "gtk_window_get_size", 
                "localtime", 
                "g_getenv", 
                "g_scanner_input_text", 
                "gtk_label_new", 
                "goo_canvas_item_scale", 
                "goo_canvas_item_lower", 
                "gtk_im_context_focus_out", 
                "g_strdup_printf", 
                "g_slist_delete_link", 
                "realpath", 
                "gdk_pixbuf_get_pixels", 
                "g_setenv", 
                "strcmp", 
                "gtk_combo_box_get_type", 
                "calloc", 
                "gtk_text_view_get_type", 
                "gst_object_get_type", 
                "signal", 
                "gdk_pixbuf_new_from_file", 
                "gdk_cursor_unref", 
                "__sprintf_chk", 
                "g_signal_connect_data", 
                "gst_element_factory_make", 
                "g_strdup_vprintf", 
                "gtk_container_add", 
                "gtk_text_buffer_get_slice", 
                "g_strjoinv", 
                "gtk_check_button_get_type", 
                "gdk_pixbuf_animation_iter_get_pixbuf", 
                "unlink", 
                "g_str_has_suffix", 
                "g_quark_to_string", 
                "g_hash_table_iter_next", 
                "g_slist_free", 
                "rsvg_handle_new_from_file", 
                "gtk_widget_modify_text", 
                "gtk_combo_box_new_text", 
                "gtk_text_buffer_insert_at_cursor", 
                "_ITM_deregisterTMCloneTable", 
                "gtk_hbox_new", 
                "g_unlink", 
                "strstr", 
                "gtk_widget_show", 
                "gtk_init", 
                "xmlDocSetRootElement", 
                "gtk_label_get_type", 
                "g_date_strftime", 
                "gdk_screen_get_width", 
                "g_hash_table_size", 
                "g_signal_handlers_disconnect_matched", 
                "gdk_pixbuf_animation_iter_advance", 
                "g_log", 
                "xmlParseFile", 
                "gtk_text_buffer_get_end_iter", 
                "gtk_scrolled_window_set_policy", 
                "gtk_container_get_type", 
                "g_printerr", 
                "gtk_widget_set_can_focus", 
                "gtk_text_buffer_set_text", 
                "__strdup", 
                "g_scanner_destroy", 
                "gtk_button_new_from_stock", 
                "xmlNewDoc", 
                "g_build_filename", 
                "g_return_if_fail_warning", 
                "gtk_window_new", 
                "xmlGetProp", 
                "g_random_int_range", 
                "g_option_context_parse", 
                "gdk_rgb_init", 
                "g_utf8_get_char", 
                "g_mkdir", 
                "gtk_hseparator_new", 
                "gtk_spin_button_set_value", 
                "g_list_nth_data", 
                "g_list_concat", 
                "gtk_radio_button_new_with_label", 
                "gtk_widget_set_size_request", 
                "xmlStringDecodeEntities", 
                "gdk_pixbuf_get_type", 
                "goo_canvas_text_new", 
                "gtk_window_set_type_hint", 
                "rsvg_handle_new", 
                "goo_canvas_item_get_canvas", 
                "g_module_build_path", 
                "gtk_widget_modify_bg", 
                "strftime", 
                "gtk_window_set_geometry_hints", 
                "g_object_unref", 
                "bind_textdomain_codeset", 
                "gtk_spin_button_new_with_range", 
                "__isoc99_fscanf", 
                "gtk_combo_box_get_active", 
                "gtk_spin_button_set_numeric", 
                "gtk_object_get_type", 
                "g_list_sort", 
                "g_hash_table_destroy", 
                "setenv", 
                "dcgettext", 
                "gtk_get_option_group", 
                "__fprintf_chk", 
                "gtk_label_set_justify", 
                "gtk_text_buffer_get_start_iter", 
                "goo_canvas_group_new", 
                "g_object_set_data_full", 
                "gtk_event_box_new", 
                "g_list_first", 
                "g_file_set_contents", 
                "gtk_window_move", 
                "puts", 
                "__printf_chk", 
                "goo_canvas_rect_get_type", 
                "sqlite3_open", 
                "gtk_button_new_with_label", 
                "g_strsplit", 
                "g_slist_find", 
                "gdk_pixbuf_get_has_alpha", 
                "goo_canvas_item_get_parent", 
                "gdk_pixbuf_get_width"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/gcompris"
        }, 
        "usr/lib/gcompris/libsuperbrain_so": {
            "report-functions": [
                "g_malloc", 
                "goo_canvas_group_new", 
                "__stack_chk_fail", 
                "g_free", 
                "gc_set_background", 
                "g_list_length", 
                "g_object_set", 
                "gc_skin_rsvg_get", 
                "_ITM_deregisterTMCloneTable", 
                "gc_item_focus_init", 
                "goo_canvas_svg_new", 
                "gc_item_focus_remove", 
                "goo_canvas_item_get_bounds", 
                "goo_canvas_item_set_transform", 
                "g_list_free", 
                "g_list_nth_data", 
                "g_random_int_range", 
                "goo_canvas_item_remove", 
                "goo_canvas_get_root_item", 
                "gc_bonus_display", 
                "goo_canvas_rect_new", 
                "goo_canvas_polyline_new", 
                "gc_bar_set_level", 
                "__cxa_finalize", 
                "__gmon_start__", 
                "g_list_append", 
                "gc_sound_play_ogg", 
                "g_ascii_strcasecmp", 
                "_ITM_registerTMCloneTable", 
                "dcgettext", 
                "gc_bar_set", 
                "g_signal_handlers_disconnect_matched", 
                "goo_canvas_ellipse_new", 
                "g_signal_connect_data"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/libsuperbrain.so"
        }, 
        "usr/lib/gcompris/libmemory_so": {
            "report-functions": [
                "g_utf8_strlen", 
                "goo_canvas_rect_new", 
                "goo_canvas_item_remove", 
                "gc_sound_policy_get", 
                "gc_bar_set_level", 
                "g_type_check_instance_cast", 
                "g_queue_push_head", 
                "gc_sound_policy_set", 
                "g_signal_connect_data", 
                "g_utf8_strdown", 
                "gc_sound_play_ogg", 
                "gc_dialog", 
                "g_strsplit", 
                "dcgettext", 
                "gc_sound_bg_resume", 
                "g_list_length", 
                "g_strdup", 
                "gc_skin_font_board_big_bold", 
                "g_list_remove", 
                "g_utf8_strup", 
                "_ITM_deregisterTMCloneTable", 
                "g_utf8_validate", 
                "gc_skin_font_board_medium", 
                "gc_board_stop", 
                "g_malloc0", 
                "g_queue_pop_tail", 
                "gdk_pixbuf_get_width", 
                "g_random_int_range", 
                "pango_font_description_set_size", 
                "goo_canvas_get_root_item", 
                "g_object_unref", 
                "gc_skin_font_board_huge_bold", 
                "g_assertion_message_expr", 
                "__stack_chk_fail", 
                "strcmp", 
                "goo_canvas_item_translate", 
                "g_queue_pop_head", 
                "goo_canvas_text_new", 
                "goo_canvas_image_new", 
                "g_queue_free", 
                "gc_prop_get", 
                "gc_bonus_display", 
                "gdk_pixbuf_get_height", 
                "goo_canvas_group_new", 
                "gc_pixmap_load", 
                "g_object_set", 
                "g_queue_remove", 
                "gc_set_background", 
                "pango_font_description_get_size", 
                "gc_skin_font_board_small", 
                "g_queue_new", 
                "g_utf8_offset_to_pointer", 
                "gc_sound_bg_pause", 
                "g_list_find_custom", 
                "__gmon_start__", 
                "goo_canvas_item_scale", 
                "g_ascii_strcasecmp", 
                "goo_canvas_text_get_natural_extents", 
                "g_source_remove", 
                "goo_canvas_text_get_type", 
                "g_queue_find", 
                "g_list_append", 
                "gc_bar_set", 
                "g_object_get", 
                "g_random_int", 
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize", 
                "g_strdup_printf", 
                "g_free", 
                "g_list_free", 
                "g_timeout_add", 
                "g_log", 
                "g_queue_get_length", 
                "g_utf8_strncpy"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/libmemory.so"
        }, 
        "usr/lib/gcompris/libpython_so": {
            "report-functions": [
                "PyInt_FromLong", 
                "g_value_init", 
                "gc_sound_policy_get", 
                "goo_canvas_item_paint", 
                "g_object_ref", 
                "gc_board_config_stop", 
                "PyDict_Next", 
                "gc_db_get_filename", 
                "Py_IsInitialized", 
                "PyType_IsSubtype", 
                "g_strfreev", 
                "PyList_GetItem", 
                "PyObject_CallObject", 
                "g_hash_table_destroy", 
                "goo_canvas_item_simple_user_bounds_to_device", 
                "goo_canvas_convert_from_pixels", 
                "gc_sound_close", 
                "gc_bar_start", 
                "gc_bonus_display", 
                "goo_canvas_convert_bounds_to_item_space", 
                "PyObject_IsTrue", 
                "goo_canvas_item_ensure_updated", 
                "g_child_watch_add_full", 
                "goo_canvas_item_model_skew_y", 
                "goo_canvas_pointer_grab", 
                "g_list_find", 
                "goo_canvas_get_items_in_area", 
                "PyImport_ImportModule", 
                "goo_cairo_matrix_copy", 
                "goo_canvas_get_type", 
                "goo_canvas_pointer_events_get_type", 
                "__gmon_start__", 
                "gc_anim_swap", 
                "gc_anim_activate", 
                "Py_Initialize", 
                "goo_canvas_item_model_class_install_child_property", 
                "goo_canvas_path_model_get_type", 
                "g_malloc", 
                "gc_sound_reopen", 
                "gc_rsvg_load", 
                "gtk_object_destroy", 
                "goo_canvas_polyline_model_new_line", 
                "goo_canvas_item_simple_get_path_bounds", 
                "goo_canvas_item_class_install_child_property", 
                "PyModule_GetDict", 
                "goo_canvas_ellipse_get_type", 
                "PyLong_FromUnsignedLong", 
                "goo_canvas_render", 
                "goo_canvas_style_get_parent", 
                "gc_board_config_textview", 
                "goo_canvas_item_model_remove_child", 
                "PyDict_GetItemString", 
                "gc_sound_bg_pause", 
                "gc_timer_get_remaining", 
                "g_object_class_find_property", 
                "goo_canvas_keyboard_ungrab", 
                "g_print", 
                "g_log", 
                "goo_canvas_text_get_type", 
                "goo_canvas_item_simple_paint_path", 
                "goo_canvas_item_simple_get_line_width", 
                "PyType_Ready", 
                "goo_canvas_item_add_child", 
                "gc_board_config_start", 
                "PyTuple_SetItem", 
                "goo_canvas_style_set_property", 
                "goo_canvas_item_raise", 
                "gc_file_find_absolute", 
                "Py_Finalize", 
                "PyObject_CallFunction", 
                "gc_db_users_from_group_get", 
                "gc_wordlist_get_from_file", 
                "gc_skin_get_color_default", 
                "__stack_chk_fail", 
                "gc_board_check_file", 
                "__cxa_finalize", 
                "goo_canvas_item_get_style", 
                "goo_canvas_path_get_type", 
                "gc_locale_get_user_default", 
                "g_object_get_data", 
                "gc_db_get_board_from_id", 
                "gc_set_background", 
                "gc_skin_pixmap_load", 
                "gc_timer_pause", 
                "goo_canvas_line_dash_newv", 
                "goo_canvas_get_default_line_width", 
                "gc_bar_set_repeat_icon", 
                "goo_canvas_svg_get_type", 
                "goo_canvas_convert_to_pixels", 
                "goo_canvas_rect_get_type", 
                "goo_canvas_item_model_class_find_child_property", 
                "goo_canvas_image_get_type", 
                "gc_bar_location", 
                "PyInstance_New", 
                "gc_cursor_set", 
                "PyImport_ImportModuleLevel", 
                "goo_canvas_item_remove", 
                "gc_item_rotate_relative", 
                "goo_canvas_update", 
                "PyRun_SimpleStringFlags", 
                "goo_canvas_item_rotate", 
                "PyList_Append", 
                "goo_canvas_item_model_get_simple_transform", 
                "cairo_pattern_reference", 
                "goo_canvas_item_set_transform", 
                "strchr", 
                "goo_canvas_item_model_get_child", 
                "goo_canvas_item_simple_set_model", 
                "PyErr_Format", 
                "PyErr_Fetch", 
                "goo_canvas_style_set_fill_options", 
                "PyList_New", 
                "goo_canvas_item_model_scale", 
                "goo_canvas_set_scale", 
                "g_value_get_boxed", 
                "goo_canvas_item_model_set_child_property", 
                "gc_selector_file_save", 
                "g_free", 
                "gc_item_rotate_relative_with_center", 
                "g_type_class_peek", 
                "Py_FatalError", 
                "g_assertion_message_expr", 
                "gc_locale_get", 
                "PyErr_Occurred", 
                "gc_board_conf_separator", 
                "gc_profile_get_current", 
                "goo_canvas_style_get_type", 
                "PySequence_Size", 
                "goo_canvas_item_scale", 
                "g_object_set_data", 
                "goo_canvas_table_model_get_type", 
                "PyCObject_AsVoidPtr", 
                "gc_prop_get", 
                "gc_board_config_combo_locales", 
                "g_strconcat", 
                "goo_canvas_item_request_update", 
                "gc_log_set_comment", 
                "PyErr_Print", 
                "goo_canvas_item_model_class_list_child_properties", 
                "PyModule_AddIntConstant", 
                "goo_canvas_item_find_child", 
                "gc_item_absolute_move", 
                "PyBool_FromLong", 
                "PyList_Size", 
                "g_list_append", 
                "PyImport_AddModule", 
                "gc_profile_set_current_user", 
                "gc_board_config_radio_buttons", 
                "goo_canvas_item_model_is_container", 
                "PyString_FromString", 
                "goo_canvas_polyline_new_line", 
                "PyList_SetItem", 
                "g_strdup_printf", 
                "g_type_interface_peek", 
                "goo_canvas_item_model_get_type", 
                "_PyObject_New", 
                "gc_anim_load", 
                "gc_score_start", 
                "g_object_unref", 
                "g_hash_table_lookup", 
                "PyObject_CallMethod", 
                "PyTuple_Size", 
                "goo_canvas_polyline_get_type", 
                "gc_board_config_window_display", 
                "gc_score_set", 
                "PyErr_SetString", 
                "goo_canvas_request_update", 
                "g_malloc_n", 
                "PyTuple_New", 
                "gc_sound_bg_resume", 
                "PyType_GenericNew", 
                "dcgettext", 
                "gtk_object_get_type", 
                "goo_canvas_item_get_model", 
                "gc_selector_file_stop", 
                "goo_canvas_item_get_n_children", 
                "PyObject_Init", 
                "gtk_adjustment_get_type", 
                "goo_canvas_get_item", 
                "goo_canvas_item_simple_get_type", 
                "goo_canvas_set_root_item", 
                "goo_canvas_item_simple_changed", 
                "g_strdup", 
                "goo_canvas_set_static_root_item", 
                "gc_item_focus_remove", 
                "goo_canvas_get_items_at", 
                "goo_canvas_item_model_stop_animation", 
                "goo_canvas_item_model_skew_x", 
                "goo_canvas_group_model_get_type", 
                "gdk_cursor_get_type", 
                "goo_canvas_text_model_get_type", 
                "goo_canvas_item_get_child_property", 
                "g_object_freeze_notify", 
                "goo_canvas_item_get_requested_area", 
                "goo_canvas_item_is_visible", 
                "gc_sound_play_ogg_cb", 
                "PyInt_AsLong", 
                "goo_canvas_item_model_raise", 
                "goo_canvas_request_redraw", 
                "strcmp", 
                "gc_profile_get_current_user", 
                "goo_canvas_item_simple_user_bounds_to_parent", 
                "gc_item_rotate", 
                "g_ascii_strncasecmp", 
                "goo_canvas_widget_get_type", 
                "PyModule_AddObject", 
                "PyDict_SetItemString", 
                "PyFloat_FromDouble", 
                "goo_canvas_item_stop_animation", 
                "gc_board_config_spin_int", 
                "g_object_thaw_notify", 
                "goo_canvas_group_get_type", 
                "gc_bar_set", 
                "PyObject_Free", 
                "PyString_AsString", 
                "g_hash_table_foreach", 
                "gc_locale_get_name", 
                "goo_canvas_item_get_simple_transform", 
                "goo_canvas_register_widget_item", 
                "goo_cairo_matrix_free", 
                "gc_locale_set", 
                "gc_locale_gets_asset_list", 
                "g_hash_table_replace", 
                "g_type_name", 
                "PyDict_SetItem", 
                "goo_canvas_pointer_ungrab", 
                "gc_skin_image_get", 
                "goo_canvas_item_model_set_parent", 
                "goo_canvas_item_move_child", 
                "Py_BuildValue", 
                "goo_canvas_get_root_item_model", 
                "gc_wordlist_free", 
                "PyFloat_AsDouble", 
                "goo_canvas_scroll_to", 
                "gc_db_get_users_list", 
                "gc_menu_section_get", 
                "goo_canvas_keyboard_grab", 
                "goo_canvas_item_model_move_child", 
                "goo_canvas_item_set_parent", 
                "gc_board_run_next", 
                "gc_timer_end", 
                "PyObject_Repr", 
                "g_value_set_boxed", 
                "goo_canvas_style_set_parent", 
                "goo_canvas_get_root_item", 
                "goo_canvas_unregister_widget_item", 
                "goo_canvas_set_root_item_model", 
                "goo_canvas_item_animate", 
                "goo_canvas_item_update", 
                "goo_canvas_get_static_root_item", 
                "gc_db_profiles_list_get", 
                "goo_canvas_item_get_items_at", 
                "goo_canvas_item_class_list_child_properties", 
                "goo_canvas_points_get_type", 
                "goo_canvas_item_get_child", 
                "gc_anim_free", 
                "goo_canvas_item_get_parent", 
                "PyModule_AddStringConstant", 
                "gc_score_end", 
                "goo_canvas_item_lower", 
                "goo_canvas_item_model_set_transform", 
                "gc_wordlist_random_word_get", 
                "PyDict_New", 
                "goo_canvas_get_scale", 
                "gc_db_get_classes_list", 
                "goo_canvas_points_new", 
                "goo_canvas_item_model_add_child", 
                "PyErr_Clear", 
                "goo_canvas_item_remove_child", 
                "g_str_hash", 
                "goo_canvas_item_get_requested_height", 
                "goo_canvas_item_model_get_style", 
                "gc_selector_file_load", 
                "gc_board_config_combo_locales_asset", 
                "goo_cairo_matrix_get_type", 
                "gc_timer_add", 
                "goo_canvas_item_set_canvas", 
                "goo_canvas_rect_model_get_type", 
                "gdk_grab_status_get_type", 
                "g_hash_table_new", 
                "g_type_check_instance_cast", 
                "gc_sound_play_ogg_list", 
                "goo_canvas_get_item_at", 
                "goo_canvas_item_model_set_simple_transform", 
                "PyObject_Malloc", 
                "goo_canvas_item_model_translate", 
                "goo_canvas_item_model_get_parent", 
                "gc_locale_gets_list", 
                "goo_canvas_item_simple_check_in_path", 
                "PyObject_IsInstance", 
                "Py_SetProgramName", 
                "gdk_event_mask_get_type", 
                "gc_db_get_class_from_id", 
                "Py_FindMethod", 
                "goo_canvas_item_model_get_child_property", 
                "PyArg_ParseTuple", 
                "gc_log_end", 
                "goo_canvas_item_skew_y", 
                "gc_menu_get_boards", 
                "g_type_check_class_cast", 
                "PyObject_HasAttrString", 
                "goo_cairo_pattern_get_type", 
                "gc_get_canvas", 
                "gc_anim_set_state", 
                "g_spawn_async_with_pipes", 
                "gc_im_reset", 
                "gc_db_get_groups_list", 
                "gc_sound_policy_set", 
                "gc_db_get_conf", 
                "gc_set_background_by_id", 
                "PySequence_Check", 
                "goo_canvas_style_get_property", 
                "goo_canvas_request_item_redraw", 
                "gc_timer_display", 
                "PyObject_GetAttrString", 
                "goo_canvas_item_model_get_transform", 
                "gc_bar_hide", 
                "goo_canvas_grab_focus", 
                "goo_canvas_animate_type_get_type", 
                "goo_canvas_item_model_find_child", 
                "PySys_SetArgv", 
                "g_hash_table_new_full", 
                "g_quark_from_string", 
                "g_strv_length", 
                "g_malloc0_n", 
                "gc_get_window", 
                "goo_canvas_item_get_canvas", 
                "goo_canvas_item_simple_check_style", 
                "goo_canvas_item_set_style", 
                "goo_canvas_item_set_child_property", 
                "g_type_class_ref", 
                "goo_canvas_item_model_lower", 
                "gc_selector_images_start", 
                "gc_db_get_user_from_id", 
                "goo_canvas_item_model_simple_get_type", 
                "gc_board_config_boolean_box", 
                "PyTuple_GetItem", 
                "g_value_unset", 
                "goo_canvas_item_get_transform", 
                "gc_board_config_combo_box", 
                "g_type_class_unref", 
                "goo_canvas_text_get_natural_extents", 
                "PyCObject_Import", 
                "goo_canvas_item_get_bounds", 
                "goo_canvas_item_model_rotate", 
                "g_list_free", 
                "goo_canvas_item_translate", 
                "gdk_event_get_type", 
                "goo_canvas_item_visibility_get_type", 
                "goo_canvas_create_cairo_context", 
                "goo_canvas_unregister_item", 
                "gc_skin_get_font_default", 
                "goo_canvas_table_get_type", 
                "goo_canvas_polyline_model_get_type", 
                "goo_canvas_item_skew_x", 
                "goo_canvas_item_get_type", 
                "Py_InitModule4", 
                "gc_item_focus_init", 
                "PyCallable_Check", 
                "g_snprintf", 
                "gc_anim_deactivate", 
                "goo_canvas_style_copy", 
                "gc_board_end", 
                "gc_db_get_group_from_id", 
                "gc_db_get_profile_from_id", 
                "_ITM_registerTMCloneTable", 
                "goo_canvas_points_unref", 
                "goo_canvas_create_item", 
                "_ITM_deregisterTMCloneTable", 
                "goo_canvas_ellipse_model_get_type", 
                "goo_canvas_convert_from_item_space", 
                "goo_canvas_image_model_get_type", 
                "gc_set_default_background", 
                "goo_canvas_item_model_animate", 
                "g_type_interface_peek_parent", 
                "goo_canvas_item_is_container", 
                "goo_canvas_style_set_stroke_options", 
                "PyArg_ParseTupleAndKeywords", 
                "gc_db_set_board_conf", 
                "g_object_set_property", 
                "goo_canvas_item_model_get_n_children", 
                "cairo_reference", 
                "goo_canvas_set_static_root_item_model", 
                "goo_canvas_item_set_simple_transform", 
                "gc_bar_set_level", 
                "goo_canvas_item_allocate_area", 
                "g_str_equal", 
                "gc_skin_rsvg_get", 
                "goo_canvas_line_dash_get_type", 
                "gc_dialog", 
                "gc_pixmap_load", 
                "goo_canvas_item_get_transform_for_child", 
                "goo_canvas_get_static_root_item_model", 
                "goo_canvas_set_bounds", 
                "gc_selector_images_stop", 
                "goo_canvas_convert_to_item_space", 
                "goo_canvas_item_set_model", 
                "goo_canvas_item_model_set_style", 
                "goo_canvas_item_class_find_child_property", 
                "g_strsplit", 
                "gc_item_rotate_with_center", 
                "goo_canvas_get_bounds", 
                "gc_dialog_close"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/libpython.so"
        }, 
        "usr/lib/gcompris/libmissingletter_so": {
            "report-functions": [
                "g_malloc0", 
                "gtk_combo_box_get_type", 
                "gc_file_find_absolute_writeable", 
                "gtk_tree_view_set_rules_hint", 
                "gtk_entry_get_type", 
                "gtk_list_store_append", 
                "g_list_append", 
                "gc_dialog", 
                "xmlNewNode", 
                "gc_board_stop", 
                "g_list_nth_data", 
                "gtk_tree_view_column_new_with_attributes", 
                "gtk_file_chooser_set_filter", 
                "gtk_file_chooser_set_filename", 
                "gtk_entry_set_max_length", 
                "gtk_container_add", 
                "gdk_pixbuf_new_from_file_at_size", 
                "gtk_list_store_get_type", 
                "gtk_file_chooser_get_filename", 
                "xmlNewChild", 
                "gdk_pixbuf_get_width", 
                "gc_score_end", 
                "g_free", 
                "gtk_file_filter_add_pixbuf_formats", 
                "g_strdup", 
                "g_hash_table_foreach", 
                "goo_canvas_image_new", 
                "strchr", 
                "g_hash_table_destroy", 
                "g_list_length", 
                "g_object_get_data", 
                "g_strdup_printf", 
                "gtk_frame_new", 
                "gtk_tree_view_new_with_model", 
                "g_strsplit", 
                "gtk_entry_new", 
                "gtk_scrolled_window_set_policy", 
                "xmlFreeDoc", 
                "gc_bar_set_level", 
                "gc_set_background", 
                "gtk_entry_get_text", 
                "gtk_table_new", 
                "gc_db_get_conf", 
                "strlen", 
                "gc_skin_color_text_button", 
                "gtk_tree_view_get_model", 
                "gtk_tree_model_get", 
                "gtk_widget_destroy", 
                "gtk_dialog_get_type", 
                "gc_pixmap_load", 
                "gtk_file_chooser_button_new", 
                "gtk_widget_get_type", 
                "gtk_tree_view_set_search_column", 
                "goo_canvas_get_root_item", 
                "gtk_combo_box_append_text", 
                "gtk_tree_model_foreach", 
                "dcgettext", 
                "gtk_widget_set_size_request", 
                "gdk_pixbuf_get_type", 
                "gc_db_set_board_conf", 
                "g_utf8_skip", 
                "g_signal_connect_data", 
                "gc_board_config_boolean_box", 
                "g_unichar_to_utf8", 
                "g_assertion_message_expr", 
                "gtk_combo_box_get_active", 
                "gc_skin_color_shadow", 
                "gtk_tree_model_get_type", 
                "gc_score_start", 
                "g_object_set", 
                "g_hash_table_lookup", 
                "g_object_unref", 
                "g_strlcat", 
                "gc_bar_set", 
                "g_return_if_fail_warning", 
                "g_log", 
                "gtk_widget_set_tooltip_text", 
                "gc_bar_location", 
                "gc_board_config_combo_locales", 
                "gtk_box_get_type", 
                "gtk_table_get_type", 
                "gc_db_get_board_conf", 
                "xmlParseFile", 
                "__cxa_finalize", 
                "gc_file_find_absolute", 
                "gtk_label_new", 
                "gtk_tree_view_get_selection", 
                "gtk_button_new_from_stock", 
                "g_strfreev", 
                "gtk_list_store_set", 
                "gtk_table_attach_defaults", 
                "xmlSaveFormatFileEnc", 
                "gtk_tree_view_append_column", 
                "goo_canvas_item_remove", 
                "goo_canvas_text_new", 
                "gc_bar_hide", 
                "gtk_box_pack_start", 
                "gtk_list_store_new", 
                "gtk_message_dialog_new", 
                "g_list_prepend", 
                "gtk_hbutton_box_new", 
                "g_object_set_data", 
                "gtk_file_filter_new", 
                "gc_skin_font_board_huge_bold", 
                "g_utf8_strlen", 
                "g_utf8_get_char", 
                "gtk_scrolled_window_new", 
                "gtk_cell_renderer_pixbuf_new", 
                "_ITM_registerTMCloneTable", 
                "gtk_list_store_remove", 
                "xmlNewDoc", 
                "_ITM_deregisterTMCloneTable", 
                "__stack_chk_fail", 
                "gtk_cell_renderer_text_new", 
                "g_timeout_add", 
                "gtk_dialog_run", 
                "gtk_hbox_new", 
                "gtk_tree_selection_select_iter", 
                "gc_board_config_window_display", 
                "gtk_tree_selection_set_mode", 
                "gtk_combo_box_new_text", 
                "gc_locale_set", 
                "gtk_entry_set_text", 
                "gdk_pixbuf_get_height", 
                "g_str_has_prefix", 
                "gtk_container_get_type", 
                "gtk_scrolled_window_get_type", 
                "gtk_list_store_clear", 
                "gtk_tree_selection_get_selected", 
                "goo_canvas_group_new", 
                "xmlNodeListGetString", 
                "g_str_has_suffix", 
                "gtk_vbox_new", 
                "g_ascii_strcasecmp", 
                "gtk_file_chooser_get_type", 
                "goo_canvas_item_get_parent", 
                "xmlDocSetRootElement", 
                "__gmon_start__", 
                "gtk_widget_show", 
                "gtk_dialog_new_with_buttons", 
                "g_list_free", 
                "gtk_combo_box_set_active", 
                "g_random_int_range", 
                "g_type_check_instance_cast", 
                "gtk_tree_view_get_type", 
                "g_utf8_strup", 
                "gc_score_set"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/libmissingletter.so"
        }, 
        "usr/lib/gcompris/libgoocanvas_so_0_0_0": {
            "report-functions": [
                "gdk_pointer_grab", 
                "gtk_widget_get_can_focus", 
                "g_param_spec_sink", 
                "g_value_set_boolean", 
                "pango_cairo_show_layout", 
                "g_value_reset", 
                "g_type_name", 
                "cairo_matrix_multiply", 
                "g_list_free", 
                "g_signal_connect_data", 
                "g_realloc_n", 
                "gtk_widget_get_toplevel", 
                "pango_layout_iter_next_line", 
                "gdk_draw_rectangle", 
                "gtk_widget_child_focus", 
                "g_type_register_static_simple", 
                "g_datalist_id_get_data", 
                "g_value_set_boxed", 
                "g_value_get_boxed", 
                "cairo_arc", 
                "g_type_class_adjust_private_offset", 
                "tan", 
                "gtk_widget_get_realized", 
                "cairo_set_dash", 
                "gtk_widget_translate_coordinates", 
                "g_hash_table_remove", 
                "g_signal_new", 
                "g_type_check_instance_is_a", 
                "gdk_event_get_type", 
                "g_list_append", 
                "g_value_unset", 
                "g_object_set_valist", 
                "g_type_query", 
                "gtk_widget_queue_resize", 
                "cairo_create", 
                "g_malloc_n", 
                "cairo_rel_line_to", 
                "gdk_window_destroy", 
                "g_value_copy", 
                "pango_layout_get_iter", 
                "g_param_spec_pool_new", 
                "g_slice_alloc", 
                "g_type_interface_add_prerequisite", 
                "cairo_font_options_create", 
                "cairo_fill", 
                "cairo_close_path", 
                "cairo_pattern_create_rgba", 
                "cairo_set_fill_rule", 
                "cairo_user_to_device_distance", 
                "atk_get_default_registry", 
                "cairo_move_to", 
                "gtk_tooltip_set_markup", 
                "g_enum_register_static", 
                "g_realloc", 
                "atk_gobject_accessible_get_object", 
                "g_object_set_data_full", 
                "cairo_set_matrix", 
                "gdk_window_hide", 
                "gdk_window_set_user_data", 
                "g_param_spec_pool_insert", 
                "g_once_init_enter", 
                "g_param_spec_flags", 
                "g_cclosure_new", 
                "cairo_get_matrix", 
                "cairo_new_path", 
                "cairo_fill_extents", 
                "cairo_image_surface_get_stride", 
                "pango_layout_set_wrap", 
                "g_boxed_type_register_static", 
                "g_list_prepend", 
                "g_type_check_instance_is_fundamentally_a", 
                "cairo_line_to", 
                "gdk_window_get_origin", 
                "g_type_check_instance_cast", 
                "g_dgettext", 
                "g_type_test_flags", 
                "g_timeout_add", 
                "g_ptr_array_add", 
                "g_param_spec_double", 
                "g_value_set_object", 
                "cairo_pattern_create_for_surface", 
                "gtk_accessible_get_type", 
                "gtk_tooltip_get_type", 
                "g_log", 
                "rsvg_handle_get_position_sub", 
                "gdk_color_parse", 
                "g_array_insert_vals", 
                "pango_font_description_to_string", 
                "g_param_spec_string", 
                "g_value_init", 
                "g_free", 
                "g_object_interface_install_property", 
                "cairo_matrix_translate", 
                "atk_object_initialize", 
                "pango_layout_set_ellipsize", 
                "g_type_instance_get_private", 
                "g_value_set_flags", 
                "cairo_set_operator", 
                "cairo_in_fill", 
                "g_ptr_array_free", 
                "atk_no_op_object_get_type", 
                "__cxa_finalize", 
                "gtk_widget_get_direction", 
                "g_once_init_leave", 
                "atk_state_set_add_state", 
                "g_param_value_validate", 
                "g_object_class_install_property", 
                "g_cclosure_marshal_VOID__BOOLEAN", 
                "gtk_widget_get_events", 
                "cairo_font_options_set_hint_metrics", 
                "atk_object_get_type", 
                "g_direct_equal", 
                "atk_object_set_description", 
                "cairo_image_surface_get_data", 
                "atk_component_get_type", 
                "cairo_arc_negative", 
                "g_slist_prepend", 
                "g_param_spec_pool_lookup", 
                "g_type_add_interface_static", 
                "cairo_matrix_transform_point", 
                "g_array_append_vals", 
                "gdk_pixbuf_get_width", 
                "gtk_widget_size_allocate", 
                "pango_font_description_from_string", 
                "cairo_pattern_get_type", 
                "g_value_transform", 
                "g_slice_alloc0", 
                "cairo_scale", 
                "g_param_spec_pool_list", 
                "g_datalist_id_set_data_full", 
                "g_value_set_uint", 
                "g_type_class_add_private", 
                "g_hash_table_destroy", 
                "gtk_widget_has_focus", 
                "gtk_widget_get_parent_window", 
                "gdk_pixbuf_get_n_channels", 
                "pango_alignment_get_type", 
                "gtk_widget_unparent", 
                "gtk_widget_modify_base", 
                "g_ascii_strtod", 
                "g_strdup_value_contents", 
                "gdk_pixbuf_get_type", 
                "cairo_pattern_reference", 
                "g_value_get_string", 
                "atk_object_ref_accessible_child", 
                "g_type_class_peek", 
                "g_value_get_boolean", 
                "cairo_version", 
                "g_cclosure_marshal_VOID__PARAM", 
                "gtk_widget_get_colormap", 
                "g_idle_add_full", 
                "cairo_surface_destroy", 
                "g_slist_find", 
                "cairo_matrix_init_translate", 
                "__gmon_start__", 
                "gtk_adjustment_value_changed", 
                "pango_layout_iter_free", 
                "cairo_pattern_create_rgb", 
                "cairo_matrix_rotate", 
                "gtk_style_attach", 
                "gtk_adjustment_changed", 
                "gdk_pixbuf_get_rowstride", 
                "g_source_remove", 
                "floor", 
                "cairo_pattern_set_extend", 
                "cairo_pattern_set_matrix", 
                "g_type_interface_peek", 
                "cairo_matrix_init", 
                "pango_layout_set_text", 
                "gdk_keyboard_grab", 
                "cairo_device_to_user", 
                "g_object_set_data", 
                "g_object_unref", 
                "cairo_surface_set_user_data", 
                "atk_registry_get_factory", 
                "g_object_new", 
                "g_param_spec_object", 
                "cairo_image_surface_create", 
                "gtk_object_get_type", 
                "atk_object_factory_get_accessible_type", 
                "g_signal_lookup", 
                "g_param_spec_enum", 
                "cairo_stroke_extents", 
                "gdk_display_pointer_is_grabbed", 
                "gtk_container_get_type", 
                "g_type_value_table_peek", 
                "gtk_adjustment_new", 
                "cairo_set_antialias", 
                "cairo_pattern_get_rgba", 
                "g_cclosure_marshal_VOID__INT", 
                "__stack_chk_fail", 
                "cairo_stroke", 
                "gdk_display_keyboard_ungrab", 
                "gtk_widget_is_drawable", 
                "g_signal_handler_find", 
                "cairo_translate", 
                "g_type_register_static", 
                "pango_layout_set_alignment", 
                "g_quark_from_string", 
                "atk_object_factory_get_type", 
                "atk_gobject_accessible_for_object", 
                "gdk_window_show", 
                "g_value_get_double", 
                "g_array_set_size", 
                "g_param_spec_boolean", 
                "g_value_peek_pointer", 
                "gtk_widget_show", 
                "g_malloc", 
                "sqrt", 
                "g_object_ref_sink", 
                "cairo_set_source_rgb", 
                "g_type_check_value", 
                "gdk_display_pointer_ungrab", 
                "g_param_spec_boxed", 
                "g_hash_table_new", 
                "gtk_adjustment_set_value", 
                "g_value_get_enum", 
                "g_value_take_boxed", 
                "cairo_rotate", 
                "cairo_transform", 
                "atk_object_get_n_accessible_children", 
                "g_ptr_array_sized_new", 
                "atk_no_op_object_factory_get_type", 
                "gtk_unit_get_type", 
                "gtk_adjustment_get_type", 
                "cairo_set_miter_limit", 
                "g_array_remove_index", 
                "g_signal_handler_disconnect", 
                "g_object_get_data", 
                "g_array_remove_index_fast", 
                "g_object_ref", 
                "gtk_widget_set_parent", 
                "cairo_pattern_destroy", 
                "gtk_widget_hide", 
                "rsvg_handle_get_type", 
                "pango_layout_set_width", 
                "g_param_spec_uint", 
                "cairo_matrix_init_identity", 
                "cairo_rectangle", 
                "g_type_check_class_is_a", 
                "atk_object_get_name", 
                "gtk_widget_get_mapped", 
                "pango_layout_get_extents", 
                "g_object_notify", 
                "gdk_pixbuf_get_height", 
                "g_intern_static_string", 
                "g_type_check_class_cast", 
                "cairo_set_source", 
                "g_mutex_unlock", 
                "atk_registry_set_factory_type", 
                "pango_ellipsize_mode_get_type", 
                "cairo_in_stroke", 
                "cairo_matrix_scale", 
                "g_object_get", 
                "cairo_font_options_destroy", 
                "pango_layout_set_font_description", 
                "cairo_matrix_invert", 
                "gtk_widget_grab_focus", 
                "cairo_paint", 
                "g_value_type_transformable", 
                "atk_object_set_name", 
                "sincos", 
                "gtk_widget_is_toplevel", 
                "g_flags_register_static", 
                "atan2", 
                "gdk_pixbuf_get_pixels", 
                "pango_font_description_get_type", 
                "gdk_window_get_pointer", 
                "pango_layout_set_markup", 
                "g_slice_free1", 
                "gtk_widget_get_accessible", 
                "cairo_clip", 
                "gdk_window_move_resize", 
                "cairo_restore", 
                "pango_wrap_mode_get_type", 
                "cairo_fill_preserve", 
                "cairo_set_line_width", 
                "g_object_class_override_property", 
                "cairo_destroy", 
                "gtk_widget_get_display", 
                "gdk_window_new", 
                "gtk_window_present", 
                "g_signal_connect_closure_by_id", 
                "cairo_set_line_cap", 
                "pango_cairo_create_layout", 
                "g_type_class_peek_parent", 
                "gtk_window_get_type", 
                "acos", 
                "gdk_window_invalidate_rect", 
                "g_value_set_double", 
                "gtk_widget_get_visible", 
                "memmove", 
                "rsvg_handle_get_dimensions_sub", 
                "gtk_widget_is_ancestor", 
                "g_array_new", 
                "g_direct_hash", 
                "g_param_spec_ref", 
                "gtk_widget_size_request", 
                "cairo_curve_to", 
                "g_value_set_enum", 
                "g_signal_emit_by_name", 
                "g_value_dup_string", 
                "pango_layout_get_context", 
                "rsvg_handle_get_dimensions", 
                "gdk_window_process_updates", 
                "g_signal_handlers_disconnect_matched", 
                "g_quark_from_static_string", 
                "g_slist_free", 
                "gdk_cairo_create", 
                "g_param_spec_get_redirect_target", 
                "g_ptr_array_remove_index", 
                "g_list_free_1", 
                "cairo_set_line_join", 
                "pow", 
                "gdk_window_set_back_pixmap", 
                "cairo_image_surface_create_for_data", 
                "gtk_anchor_type_get_type", 
                "g_hash_table_lookup", 
                "gtk_widget_map", 
                "g_value_get_flags", 
                "pango_cairo_context_set_font_options", 
                "gtk_widget_get_type", 
                "g_assertion_message_expr", 
                "gtk_widget_queue_draw", 
                "rsvg_handle_render_cairo_sub", 
                "gtk_widget_set_parent_window", 
                "cairo_user_to_device", 
                "g_value_get_uint", 
                "_ITM_deregisterTMCloneTable", 
                "g_array_free", 
                "g_strdup", 
                "gdk_window_move", 
                "atk_object_get_description", 
                "_ITM_registerTMCloneTable", 
                "g_return_if_fail_warning", 
                "g_list_remove_link", 
                "g_value_set_string", 
                "g_hash_table_insert", 
                "gtk_adjustment_clamp_page", 
                "atk_gobject_accessible_get_type", 
                "gdk_window_get_toplevel", 
                "cairo_identity_matrix", 
                "g_mutex_lock", 
                "pango_layout_iter_get_line_extents", 
                "gtk_widget_get_visual", 
                "cairo_save", 
                "g_value_get_object"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/libgoocanvas.so.0.0.0"
        }, 
        "usr/lib/gcompris/libhanoi_real_so": {
            "report-functions": [
                "goo_canvas_item_raise", 
                "goo_canvas_rect_new", 
                "g_malloc", 
                "gc_bar_set_level", 
                "goo_canvas_item_remove", 
                "gc_set_default_background", 
                "goo_canvas_get_root_item", 
                "g_object_unref", 
                "goo_canvas_item_get_canvas", 
                "__gmon_start__", 
                "_ITM_deregisterTMCloneTable", 
                "gc_drag_stop", 
                "gc_item_absolute_move", 
                "__cxa_finalize", 
                "gc_bonus_display", 
                "gc_skin_color_text_button", 
                "gc_pixmap_load", 
                "g_ascii_strcasecmp", 
                "gc_skin_rsvg_get", 
                "goo_canvas_svg_new", 
                "goo_canvas_item_translate", 
                "gc_canvas_item_ungrab", 
                "goo_canvas_image_new", 
                "g_signal_connect_data", 
                "gdk_pixbuf_get_width", 
                "gc_bar_set", 
                "gc_drag_item_move", 
                "goo_canvas_text_new", 
                "gdk_pixbuf_get_height", 
                "__stack_chk_fail", 
                "g_free", 
                "_ITM_registerTMCloneTable", 
                "goo_canvas_item_set_transform", 
                "gc_drag_offset_save", 
                "gc_skin_font_board_small", 
                "gc_drag_event", 
                "goo_canvas_item_get_bounds", 
                "goo_canvas_group_new", 
                "goo_canvas_convert_from_item_space", 
                "dcgettext"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/libhanoi_real.so"
        }, 
        "usr/lib/gcompris/libreading_so": {
            "report-functions": [
                "gc_log_set_comment", 
                "g_random_int_range", 
                "__cxa_finalize", 
                "gtk_widget_get_type", 
                "pango_context_get_metrics", 
                "pango_font_metrics_get_descent", 
                "g_strdup_printf", 
                "gc_bar_set", 
                "g_assertion_message_expr", 
                "gc_bar_location", 
                "g_type_check_instance_cast", 
                "pango_font_metrics_unref", 
                "gtk_widget_get_pango_context", 
                "g_object_set", 
                "goo_canvas_text_new", 
                "__stack_chk_fail", 
                "gc_bonus_display", 
                "g_utf8_strup", 
                "gc_board_config_combo_locales", 
                "gc_dialog", 
                "_ITM_registerTMCloneTable", 
                "gc_board_config_window_display", 
                "gc_wordlist_free", 
                "_ITM_deregisterTMCloneTable", 
                "pango_font_description_get_size", 
                "g_free", 
                "gc_skin_font_board_big", 
                "g_strdup", 
                "pango_unichar_direction", 
                "gc_set_background", 
                "goo_canvas_item_get_bounds", 
                "gc_item_focus_init", 
                "gc_locale_get", 
                "pango_font_metrics_get_ascent", 
                "__gmon_start__", 
                "goo_canvas_item_remove", 
                "gc_skin_font_board_medium", 
                "gc_board_end", 
                "dcgettext", 
                "pango_font_description_from_string", 
                "g_hash_table_destroy", 
                "g_signal_connect_data", 
                "goo_canvas_item_raise", 
                "goo_canvas_rect_new", 
                "g_random_int", 
                "g_ascii_strcasecmp", 
                "gc_board_config_boolean_box", 
                "pango_language_from_string", 
                "strcmp", 
                "gc_board_config_wordlist", 
                "gc_bar_set_level", 
                "goo_canvas_get_root_item", 
                "goo_canvas_item_translate", 
                "gc_item_focus_remove", 
                "g_utf8_get_char", 
                "gc_wordlist_random_word_get", 
                "g_hash_table_foreach", 
                "g_source_remove", 
                "gc_db_get_conf", 
                "g_timeout_add", 
                "gc_db_set_board_conf", 
                "goo_canvas_group_new", 
                "gc_locale_set", 
                "gc_wordlist_get_from_file", 
                "g_log", 
                "gc_db_get_board_conf"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/libreading.so"
        }, 
        "usr/lib/gcompris/libwordprocessor_so": {
            "report-functions": [
                "gdk_window_set_cursor", 
                "g_type_check_instance_cast", 
                "gtk_object_get_type", 
                "g_object_set", 
                "gtk_text_iter_get_tags", 
                "goo_canvas_image_new", 
                "gtk_combo_box_get_type", 
                "gtk_text_iter_backward_sentence_start", 
                "gtk_combo_box_set_active", 
                "gtk_show_uri", 
                "gc_selector_file_save", 
                "gtk_text_iter_forward_to_line_end", 
                "gtk_widget_get_type", 
                "fwrite", 
                "goo_canvas_get_root_item", 
                "gtk_text_iter_forward_char", 
                "gtk_text_buffer_insert", 
                "gc_set_default_background", 
                "gtk_text_buffer_delete", 
                "gtk_text_buffer_get_selection_bounds", 
                "gtk_scrolled_window_new", 
                "gtk_container_add", 
                "gtk_combo_box_append_text", 
                "xmlFreeDoc", 
                "gc_item_focus_init", 
                "gtk_widget_modify_text", 
                "g_free", 
                "__stack_chk_fail", 
                "gtk_text_buffer_get_end_iter", 
                "gtk_text_buffer_get_start_iter", 
                "gtk_text_view_set_pixels_above_lines", 
                "gtk_combo_box_new_text", 
                "xmlHasProp", 
                "goo_canvas_widget_new", 
                "g_signal_connect_data", 
                "gdk_cursor_unref", 
                "xmlDocGetRootElement", 
                "g_ascii_strcasecmp", 
                "gtk_text_view_get_type", 
                "xmlFree", 
                "gtk_button_new_with_label", 
                "dcgettext", 
                "xmlParseFile", 
                "gc_pixmap_load", 
                "gtk_text_view_set_wrap_mode", 
                "xmlNodeGetContent", 
                "gtk_container_get_type", 
                "gtk_text_view_set_justification", 
                "g_object_set_data", 
                "gc_selector_file_load", 
                "g_object_unref", 
                "gtk_text_buffer_get_text", 
                "gtk_text_buffer_get_iter_at_mark", 
                "strlen", 
                "gtk_text_view_get_buffer", 
                "gtk_text_buffer_create_tag", 
                "gc_bar_set", 
                "gtk_text_buffer_remove_all_tags", 
                "gdk_window_get_pointer", 
                "gtk_text_iter_backward_char", 
                "xmlGetProp", 
                "gtk_text_iter_set_line_offset", 
                "gtk_text_buffer_apply_tag", 
                "__fprintf_chk", 
                "gtk_text_view_get_window", 
                "gtk_text_buffer_insert_with_tags_by_name", 
                "gtk_scrolled_window_set_policy", 
                "_ITM_deregisterTMCloneTable", 
                "gtk_widget_show", 
                "__gmon_start__", 
                "gtk_text_buffer_get_iter_at_offset", 
                "g_strlcat", 
                "gtk_text_buffer_apply_tag_by_name", 
                "gtk_combo_box_get_active_text", 
                "fopen", 
                "_ITM_registerTMCloneTable", 
                "goo_canvas_group_new", 
                "gtk_text_view_window_to_buffer_coords", 
                "gtk_text_view_set_left_margin", 
                "gtk_widget_modify_font", 
                "gdk_cursor_new", 
                "gc_bar_location", 
                "fclose", 
                "g_malloc", 
                "gtk_text_iter_ends_line", 
                "gtk_text_view_set_pixels_below_lines", 
                "gtk_text_iter_get_offset", 
                "g_slist_free", 
                "strcmp", 
                "g_slist_length", 
                "__cxa_finalize", 
                "g_object_get", 
                "gtk_text_view_new", 
                "gtk_widget_hide", 
                "goo_canvas_item_remove", 
                "gtk_scrolled_window_get_type", 
                "gtk_text_buffer_get_insert", 
                "gtk_text_view_get_iter_at_location"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/libwordprocessor.so"
        }, 
        "usr/lib/gcompris/libscale_so": {
            "report-functions": [
                "g_string_truncate", 
                "gc_drag_stop", 
                "_ITM_registerTMCloneTable", 
                "goo_canvas_item_get_bounds", 
                "gc_db_get_board_conf", 
                "gc_item_rotate_with_center", 
                "dcgettext", 
                "g_ascii_strcasecmp", 
                "gc_skin_font_board_small", 
                "gc_skin_font_board_title_bold", 
                "goo_canvas_text_new", 
                "g_string_insert_c", 
                "g_signal_connect_data", 
                "gc_sound_play_ogg", 
                "g_malloc0", 
                "gc_bar_location", 
                "gc_board_config_combo_drag", 
                "__stack_chk_fail", 
                "gc_drag_change_mode", 
                "goo_canvas_group_new", 
                "gc_skin_color_shadow", 
                "g_hash_table_lookup", 
                "g_random_int_range", 
                "g_list_free", 
                "_ITM_deregisterTMCloneTable", 
                "gc_item_focus_init", 
                "gc_score_set", 
                "tan", 
                "__gmon_start__", 
                "gc_skin_rsvg_get", 
                "g_object_set", 
                "gc_pixmap_load", 
                "goo_canvas_item_raise", 
                "gc_bar_set", 
                "g_ascii_strtod", 
                "goo_canvas_rect_new", 
                "g_list_last", 
                "g_hash_table_foreach", 
                "gc_set_background", 
                "goo_canvas_svg_new", 
                "gdk_pixbuf_flip", 
                "gdk_pixbuf_get_height", 
                "g_object_ref", 
                "g_strtod", 
                "g_hash_table_destroy", 
                "gc_db_set_board_conf", 
                "gc_skin_color_content", 
                "gc_board_config_window_display", 
                "__cxa_finalize", 
                "gc_skin_font_board_medium", 
                "gc_item_absolute_move", 
                "gc_drag_item_move", 
                "gc_score_start", 
                "gdk_pixbuf_get_width", 
                "g_object_unref", 
                "gc_drag_event", 
                "g_free", 
                "goo_canvas_convert_from_item_space", 
                "goo_canvas_convert_to_item_space", 
                "gc_db_get_conf", 
                "g_list_append", 
                "gc_bar_set_level", 
                "g_strdup_printf", 
                "goo_canvas_item_lower", 
                "goo_canvas_image_new", 
                "goo_canvas_item_get_parent", 
                "g_string_new", 
                "gc_drag_start", 
                "g_string_free", 
                "goo_canvas_item_add_child", 
                "goo_canvas_item_translate", 
                "g_log", 
                "goo_canvas_get_root_item", 
                "gc_drag_offset_save", 
                "gc_score_end", 
                "gc_skin_font_board_tiny", 
                "goo_canvas_item_set_transform", 
                "goo_canvas_item_get_canvas"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/libscale.so"
        }, 
        "usr/lib/gcompris/libcanal_lock_so": {
            "report-functions": [
                "goo_canvas_item_remove", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "g_object_unref", 
                "gc_sound_play_ogg", 
                "goo_canvas_get_root_item", 
                "goo_canvas_group_new", 
                "g_timeout_add", 
                "goo_canvas_item_get_bounds", 
                "goo_canvas_svg_get_type", 
                "g_ascii_strcasecmp", 
                "g_object_set", 
                "goo_canvas_item_raise", 
                "__gmon_start__", 
                "goo_canvas_svg_new", 
                "goo_canvas_item_translate", 
                "_ITM_registerTMCloneTable", 
                "g_type_check_instance_is_a", 
                "goo_canvas_rect_new", 
                "gc_bonus_display", 
                "gc_bar_set_level", 
                "__stack_chk_fail", 
                "goo_canvas_rect_get_type", 
                "gc_bar_set", 
                "g_source_remove", 
                "gc_rsvg_load", 
                "gc_item_focus_remove", 
                "gc_item_focus_init"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/libcanal_lock.so"
        }, 
        "usr/lib/gcompris/libalgebra_so": {
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "gc_score_end", 
                "g_ascii_strncasecmp", 
                "g_list_append", 
                "gc_score_start", 
                "g_ascii_strcasecmp", 
                "g_list_nth_data", 
                "g_signal_connect_data", 
                "goo_canvas_group_new", 
                "g_malloc0", 
                "g_log", 
                "strlen", 
                "gc_skin_font_board_huge_bold", 
                "gc_score_set", 
                "gc_util_button_text_svg", 
                "g_utf8_offset_to_pointer", 
                "malloc", 
                "g_utf8_validate", 
                "g_free", 
                "g_strdup_printf", 
                "goo_canvas_item_remove", 
                "g_random_int", 
                "gc_bonus_display", 
                "gc_set_background", 
                "goo_canvas_get_root_item", 
                "gc_bar_set", 
                "gc_sound_play_ogg", 
                "gc_bar_set_level", 
                "gc_sound_alphabet", 
                "gc_timer_display", 
                "gc_timer_pause", 
                "g_list_length", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "__ctype_tolower_loc", 
                "g_list_remove", 
                "dcgettext", 
                "gc_bar_location", 
                "g_utf8_strncpy", 
                "__gmon_start__", 
                "g_object_set", 
                "gc_timer_end", 
                "g_assertion_message_expr"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/libalgebra.so"
        }, 
        "usr/lib/gcompris/libparatrooper_so": {
            "report-functions": [
                "gc_bar_set", 
                "gc_rsvg_load", 
                "gc_sound_play_ogg", 
                "goo_canvas_item_raise", 
                "_ITM_registerTMCloneTable", 
                "rsvg_handle_get_dimensions", 
                "gc_bonus_display", 
                "gc_timing", 
                "goo_canvas_svg_new", 
                "dcgettext", 
                "goo_canvas_item_translate", 
                "goo_canvas_item_scale", 
                "goo_canvas_item_animate", 
                "gc_item_focus_init", 
                "gc_bar_set_level", 
                "gc_skin_color_title", 
                "g_source_remove", 
                "goo_canvas_group_new", 
                "goo_canvas_item_set_simple_transform", 
                "rand", 
                "goo_canvas_item_set_transform", 
                "goo_canvas_item_remove", 
                "g_timeout_add", 
                "gc_item_focus_remove", 
                "g_ascii_strcasecmp", 
                "goo_canvas_item_get_bounds", 
                "g_object_set", 
                "gc_skin_font_board_medium", 
                "goo_canvas_get_root_item", 
                "g_object_unref", 
                "_ITM_deregisterTMCloneTable", 
                "__stack_chk_fail", 
                "g_signal_connect_data", 
                "__cxa_finalize", 
                "goo_canvas_text_new", 
                "gc_bar_location"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/libparatrooper.so"
        }, 
        "usr/lib/gcompris/liberase_so": {
            "report-functions": [
                "goo_canvas_group_new", 
                "gc_sound_play_ogg", 
                "gc_set_background", 
                "g_slist_insert", 
                "g_source_remove", 
                "g_file_test", 
                "gc_pixmap_load", 
                "gdk_pixbuf_get_width", 
                "__gmon_start__", 
                "goo_canvas_convert_from_item_space", 
                "gc_board_stop", 
                "g_slist_nth_data", 
                "gc_sound_policy_get", 
                "rsvg_handle_get_dimensions", 
                "_ITM_registerTMCloneTable", 
                "__stack_chk_fail", 
                "gc_util_create_rootdir", 
                "gc_bar_set", 
                "g_timeout_add", 
                "goo_canvas_get_root_item", 
                "gc_prop_get", 
                "gc_cursor_set", 
                "gc_dialog", 
                "dcgettext", 
                "g_free", 
                "g_malloc", 
                "gdk_pixbuf_get_height", 
                "gc_get_window", 
                "goo_canvas_item_set_simple_transform", 
                "gc_bonus_display", 
                "g_strdup_printf", 
                "g_signal_connect_data", 
                "goo_canvas_item_get_canvas", 
                "g_dir_read_name", 
                "g_malloc0_n", 
                "gdk_window_set_cursor", 
                "g_file_set_contents", 
                "gc_sound_policy_set", 
                "gdk_cursor_unref", 
                "g_signal_handler_disconnect", 
                "g_dir_close", 
                "gc_bar_set_level", 
                "__cxa_finalize", 
                "gdk_display_get_default", 
                "goo_canvas_item_remove", 
                "g_random_int_range", 
                "g_dir_open", 
                "g_ascii_strcasecmp", 
                "g_slist_free", 
                "g_str_has_suffix", 
                "g_log", 
                "g_object_unref", 
                "_ITM_deregisterTMCloneTable", 
                "g_strconcat", 
                "goo_canvas_svg_new", 
                "gdk_cursor_new_from_pixbuf", 
                "__assert_fail"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/liberase.so"
        }, 
        "usr/lib/gcompris/libreversecount_so": {
            "report-functions": [
                "rsvg_handle_get_dimensions", 
                "_ITM_deregisterTMCloneTable", 
                "goo_canvas_item_rotate", 
                "goo_canvas_image_new", 
                "goo_canvas_item_set_transform", 
                "g_object_unref", 
                "gc_rsvg_load", 
                "gc_bonus_display", 
                "g_log", 
                "g_signal_connect_data", 
                "g_malloc", 
                "gc_bar_set_level", 
                "gc_pixmap_load", 
                "gc_prop_get", 
                "gc_skin_rsvg_get", 
                "gdk_pixbuf_get_width", 
                "goo_canvas_svg_new", 
                "goo_canvas_group_new", 
                "__gmon_start__", 
                "gdk_pixbuf_scale_simple", 
                "gc_set_background", 
                "_ITM_registerTMCloneTable", 
                "gdk_pixbuf_get_height", 
                "goo_canvas_item_remove", 
                "g_strdup_printf", 
                "g_timeout_add", 
                "goo_canvas_item_translate", 
                "goo_canvas_item_scale", 
                "gc_item_focus_init", 
                "__stack_chk_fail", 
                "goo_canvas_item_animate", 
                "__cxa_finalize", 
                "g_free", 
                "gc_skin_pixmap_load", 
                "goo_canvas_get_root_item", 
                "g_object_set", 
                "g_ascii_strcasecmp", 
                "goo_canvas_item_get_bounds", 
                "g_random_int", 
                "gc_sound_play_ogg", 
                "gc_bar_location"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/libreversecount.so"
        }, 
        "usr/lib/gcompris/libcrane_so": {
            "report-functions": [
                "__gmon_start__", 
                "__stack_chk_fail", 
                "g_timeout_add", 
                "g_random_int_range", 
                "gc_sound_play_ogg", 
                "goo_canvas_item_get_bounds", 
                "g_object_set_data", 
                "g_signal_connect_data", 
                "gc_bar_set", 
                "goo_canvas_polyline_new", 
                "goo_canvas_image_new", 
                "gc_bar_location", 
                "g_object_get_data", 
                "goo_canvas_points_unref", 
                "goo_canvas_item_remove", 
                "_ITM_registerTMCloneTable", 
                "gc_item_focus_init", 
                "g_source_remove", 
                "g_object_set", 
                "goo_canvas_item_translate", 
                "gc_bar_set_level", 
                "g_type_check_instance_cast", 
                "g_object_unref", 
                "__cxa_finalize", 
                "gc_set_background", 
                "gc_bonus_display", 
                "goo_canvas_group_new", 
                "_ITM_deregisterTMCloneTable", 
                "goo_canvas_points_new", 
                "g_ascii_strcasecmp"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/libcrane.so"
        }, 
        "usr/lib/gcompris/libtarget_so": {
            "report-functions": [
                "g_ascii_strcasecmp", 
                "__cxa_finalize", 
                "g_timeout_add", 
                "g_signal_connect_data", 
                "goo_canvas_polyline_new", 
                "gc_bonus_display", 
                "strtol", 
                "goo_canvas_ellipse_new", 
                "g_strdup_printf", 
                "goo_canvas_item_raise", 
                "goo_canvas_points_unref", 
                "_ITM_registerTMCloneTable", 
                "g_random_int", 
                "goo_canvas_text_new", 
                "goo_canvas_item_translate", 
                "__stack_chk_fail", 
                "gc_skin_font_board_title_bold", 
                "_ITM_deregisterTMCloneTable", 
                "goo_canvas_item_get_canvas", 
                "gc_skin_font_board_medium", 
                "goo_canvas_convert_to_item_space", 
                "goo_canvas_item_remove", 
                "sqrt", 
                "gc_set_background", 
                "__gmon_start__", 
                "gc_bar_set", 
                "g_free", 
                "goo_canvas_rect_new", 
                "goo_canvas_item_lower", 
                "goo_canvas_item_get_bounds", 
                "gc_bar_location", 
                "__ctype_tolower_loc", 
                "goo_canvas_get_root_item", 
                "gc_bar_set_level", 
                "goo_canvas_group_new", 
                "gc_sound_play_ogg", 
                "dcngettext", 
                "g_object_set", 
                "sincos", 
                "dcgettext"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/libtarget.so"
        }, 
        "usr/lib/gcompris/libenumerate_so": {
            "report-functions": [
                "g_strchomp", 
                "goo_canvas_group_new", 
                "goo_canvas_image_new", 
                "gdk_cursor_new", 
                "goo_canvas_item_raise", 
                "gc_bar_set_level", 
                "_ITM_deregisterTMCloneTable", 
                "g_ascii_strcasecmp", 
                "gc_pixmap_load", 
                "gc_set_background", 
                "gdk_pixbuf_get_width", 
                "__stack_chk_fail", 
                "goo_canvas_get_root_item", 
                "g_object_set", 
                "__sprintf_chk", 
                "g_strndup", 
                "g_strconcat", 
                "goo_canvas_pointer_ungrab", 
                "gdk_pixbuf_get_height", 
                "gc_item_focus_init", 
                "goo_canvas_item_get_canvas", 
                "goo_canvas_item_set_simple_transform", 
                "gdk_cursor_unref", 
                "gc_sound_play_ogg", 
                "gc_bar_set", 
                "goo_canvas_pointer_grab", 
                "goo_canvas_item_get_bounds", 
                "gc_bonus_display", 
                "goo_canvas_text_new", 
                "g_free", 
                "__gmon_start__", 
                "g_type_check_instance_is_a", 
                "g_object_unref", 
                "g_strchug", 
                "g_object_get", 
                "strtol", 
                "goo_canvas_item_translate", 
                "g_random_int_range", 
                "strlen", 
                "_ITM_registerTMCloneTable", 
                "goo_canvas_item_remove", 
                "g_signal_connect_data", 
                "gc_skin_font_board_big", 
                "goo_canvas_text_get_type"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/libenumerate.so"
        }, 
        "usr/lib/gcompris/libsubmarine_so": {
            "report-functions": [
                "goo_canvas_item_rotate", 
                "__gmon_start__", 
                "goo_canvas_item_animate", 
                "goo_canvas_text_new", 
                "gc_item_absolute_move", 
                "gc_skin_font_board_title_bold", 
                "g_object_unref", 
                "_ITM_registerTMCloneTable", 
                "goo_canvas_item_stop_animation", 
                "gc_set_background", 
                "g_ascii_strcasecmp", 
                "goo_canvas_item_get_bounds", 
                "goo_canvas_item_set_simple_transform", 
                "g_object_get", 
                "gc_bar_set", 
                "gc_bar_hide", 
                "g_object_set", 
                "gc_bonus_display", 
                "__sprintf_chk", 
                "sin", 
                "goo_canvas_get_root_item", 
                "goo_canvas_rect_new", 
                "hypot", 
                "gdk_pixbuf_get_height", 
                "_ITM_deregisterTMCloneTable", 
                "g_signal_connect_data", 
                "gdk_pixbuf_get_width", 
                "goo_canvas_group_new", 
                "gc_item_rotate_relative_with_center", 
                "__stack_chk_fail", 
                "goo_canvas_image_new", 
                "gc_bar_location", 
                "g_free", 
                "g_source_remove", 
                "gc_bar_set_level", 
                "gc_pixmap_load", 
                "goo_canvas_item_remove", 
                "g_strconcat", 
                "goo_canvas_item_translate", 
                "cos", 
                "dcgettext", 
                "gc_sound_play_ogg"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/libsubmarine.so"
        }, 
        "usr/bin/gcompris-gnuchess": {
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "localtime", 
                "srand", 
                "qsort", 
                "fileno", 
                "isatty", 
                "__sprintf_chk", 
                "fputs", 
                "putchar", 
                "__strcpy_chk", 
                "__libc_start_main", 
                "__ctype_toupper_loc", 
                "getopt_long", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "fgets", 
                "__ctype_b_loc", 
                "__printf_chk", 
                "pthread_mutex_unlock", 
                "__ctype_tolower_loc", 
                "pthread_create", 
                "strcspn", 
                "_IO_getc", 
                "calloc", 
                "strncmp", 
                "puts", 
                "pthread_cond_signal", 
                "__fprintf_chk", 
                "fclose", 
                "__stack_chk_fail", 
                "pthread_cond_wait", 
                "strtol", 
                "free", 
                "strncpy", 
                "abort", 
                "feof", 
                "__isoc99_sscanf", 
                "strcmp", 
                "read", 
                "__isoc99_fscanf", 
                "fflush", 
                "fread", 
                "signal", 
                "pthread_mutex_lock", 
                "realloc", 
                "malloc", 
                "__gmon_start__", 
                "_IO_putc", 
                "rand", 
                "fopen", 
                "strstr", 
                "fwrite", 
                "access", 
                "memset", 
                "strlen", 
                "time", 
                "gettimeofday", 
                "perror", 
                "exit", 
                "fputc", 
                "__strdup", 
                "strerror", 
                "difftime"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/gcompris-gnuchess"
        }, 
        "complexity": {
            "r2 aa": "failed: ERROR: Cannot find radare2 in PATH"
        }, 
        "usr/lib/gcompris/libgletters_so": {
            "report-functions": [
                "gc_wordlist_get_levelwordlist", 
                "g_timeout_add", 
                "goo_canvas_item_translate", 
                "gc_bonus_display", 
                "gc_sound_play_ogg", 
                "gc_prop_get", 
                "g_strdup", 
                "gc_locale_set", 
                "pango_unichar_direction", 
                "g_free", 
                "_ITM_registerTMCloneTable", 
                "__cxa_finalize", 
                "g_utf8_get_char", 
                "g_ptr_array_remove_index_fast", 
                "gc_skin_font_board_huge_bold", 
                "gc_sound_alphabet", 
                "g_str_hash", 
                "g_slist_length", 
                "goo_canvas_get_root_item", 
                "gc_set_background", 
                "goo_canvas_item_get_bounds", 
                "g_mutex_unlock", 
                "__gmon_start__", 
                "gc_score_set", 
                "g_hash_table_destroy", 
                "g_ptr_array_free", 
                "gc_score_end", 
                "g_str_equal", 
                "gc_timing", 
                "g_strdup_printf", 
                "gc_bar_set_level", 
                "g_ptr_array_add", 
                "gc_dialog", 
                "g_hash_table_lookup", 
                "g_utf8_strndup", 
                "gc_board_end", 
                "g_unichar_isalnum", 
                "gc_board_conf_separator", 
                "gc_db_set_board_conf", 
                "g_ascii_strcasecmp", 
                "g_assertion_message_expr", 
                "g_unichar_to_utf8", 
                "gc_board_config_boolean_box", 
                "_ITM_deregisterTMCloneTable", 
                "gc_db_get_board_conf", 
                "g_random_int", 
                "g_ptr_array_new", 
                "gc_im_reset", 
                "g_hash_table_foreach", 
                "goo_canvas_text_new", 
                "gc_wordlist_get_from_file", 
                "g_object_set", 
                "gc_board_config_window_display", 
                "gc_score_start", 
                "gc_board_config_combo_locales", 
                "g_ptr_array_remove", 
                "g_utf8_skip", 
                "gc_wordlist_free", 
                "goo_canvas_group_new", 
                "__stack_chk_fail", 
                "gc_wordlist_random_word_get", 
                "gc_sound_bg_resume", 
                "gc_bar_set", 
                "g_utf8_strlen", 
                "g_hash_table_replace", 
                "g_log", 
                "gc_sound_bg_pause", 
                "g_mutex_lock", 
                "g_source_remove", 
                "goo_canvas_item_remove", 
                "gc_db_get_conf", 
                "gtk_im_context_get_preedit_string", 
                "g_malloc0", 
                "dcgettext", 
                "g_hash_table_new_full", 
                "g_malloc", 
                "g_utf8_find_next_char"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/libgletters.so"
        }, 
        "usr/lib/gcompris/libclockgame_so": {
            "report-functions": [
                "gc_bar_location", 
                "gc_bar_set_level", 
                "g_random_int", 
                "sincos", 
                "gc_skin_font_board_big_bold", 
                "goo_canvas_convert_from_item_space", 
                "goo_canvas_pointer_ungrab", 
                "gdk_cursor_new", 
                "cos", 
                "goo_canvas_item_get_canvas", 
                "goo_canvas_text_new", 
                "gc_bar_set", 
                "goo_canvas_get_root_item", 
                "g_object_set", 
                "gdk_cursor_unref", 
                "gc_skin_font_board_small", 
                "goo_canvas_polyline_new", 
                "dcgettext", 
                "gc_skin_font_board_medium", 
                "gc_sound_play_ogg", 
                "sin", 
                "g_free", 
                "goo_canvas_item_raise", 
                "__gmon_start__", 
                "__stack_chk_fail", 
                "_ITM_deregisterTMCloneTable", 
                "gc_set_background", 
                "goo_canvas_points_unref", 
                "gc_score_set", 
                "gc_skin_font_board_tiny", 
                "__cxa_finalize", 
                "goo_canvas_pointer_grab", 
                "g_ascii_strcasecmp", 
                "g_strdup_printf", 
                "atan2", 
                "_ITM_registerTMCloneTable", 
                "gc_bonus_display", 
                "gc_score_end", 
                "goo_canvas_item_remove", 
                "g_signal_connect_data", 
                "goo_canvas_group_new"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/libclockgame.so"
        }, 
        "usr/lib/gcompris/libmagic_hat_so": {
            "report-functions": [
                "goo_canvas_group_new", 
                "goo_canvas_points_new", 
                "g_object_set", 
                "gc_set_default_background", 
                "goo_canvas_polyline_new", 
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable", 
                "gc_rsvg_load", 
                "__gmon_start__", 
                "gc_bar_set", 
                "g_signal_handler_disconnect", 
                "gc_pixmap_load", 
                "goo_canvas_item_animate", 
                "goo_canvas_points_unref", 
                "gc_bar_set_level", 
                "g_timeout_add", 
                "gc_bonus_display", 
                "gc_bar_location", 
                "g_object_unref", 
                "__stack_chk_fail", 
                "gc_item_focus_init", 
                "g_ascii_strcasecmp", 
                "g_random_int_range", 
                "g_malloc", 
                "goo_canvas_item_remove", 
                "g_source_remove", 
                "g_log", 
                "goo_canvas_svg_new", 
                "goo_canvas_get_root_item", 
                "g_free", 
                "g_signal_connect_data", 
                "goo_canvas_image_new", 
                "goo_canvas_item_translate"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/libmagic_hat.so"
        }, 
        "usr/lib/gcompris/libtraffic_so": {
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "g_malloc", 
                "goo_canvas_convert_to_item_space", 
                "g_type_check_instance_cast", 
                "__isoc99_sscanf", 
                "g_object_get_data", 
                "goo_canvas_rect_new", 
                "__gmon_start__", 
                "gc_sound_play_ogg", 
                "gc_bonus_display", 
                "goo_canvas_get_root_item", 
                "goo_canvas_item_remove", 
                "g_signal_connect_data", 
                "g_object_set_data", 
                "goo_canvas_group_new", 
                "g_free", 
                "gc_canvas_item_ungrab", 
                "gc_canvas_item_grab", 
                "gdk_cursor_new", 
                "__cxa_finalize", 
                "goo_canvas_convert_from_item_space", 
                "goo_canvas_item_translate", 
                "goo_canvas_item_lower", 
                "gc_set_background", 
                "g_log", 
                "goo_canvas_get_item_at", 
                "gc_score_set", 
                "goo_canvas_item_get_parent", 
                "gc_bar_set_level", 
                "g_object_set", 
                "gc_score_end", 
                "__stack_chk_fail", 
                "gc_bar_set", 
                "_ITM_registerTMCloneTable", 
                "gc_score_start", 
                "g_ascii_strcasecmp"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/libtraffic.so"
        }, 
        "usr/lib/gcompris/libwordsgame_so": {
            "report-functions": [
                "__cxa_finalize", 
                "__stack_chk_fail", 
                "goo_canvas_item_translate", 
                "g_random_int", 
                "gc_board_config_wordlist", 
                "gc_im_reset", 
                "g_unichar_isalnum", 
                "gtk_im_context_get_preedit_string", 
                "g_object_set", 
                "g_free", 
                "gc_db_get_board_conf", 
                "gc_wordlist_get_from_file", 
                "gc_board_end", 
                "g_hash_table_foreach", 
                "g_mutex_lock", 
                "_ITM_deregisterTMCloneTable", 
                "goo_canvas_get_root_item", 
                "dcgettext", 
                "g_unichar_to_utf8", 
                "g_utf8_strndup", 
                "g_assertion_message_expr", 
                "g_utf8_strup", 
                "g_timeout_add", 
                "goo_canvas_group_new", 
                "__gmon_start__", 
                "g_ascii_strcasecmp", 
                "gc_board_config_combo_locales", 
                "gc_skin_font_board_huge_bold", 
                "g_malloc0", 
                "gc_bonus_display", 
                "gc_wordlist_random_word_get", 
                "pango_unichar_direction", 
                "goo_canvas_item_get_bounds", 
                "gc_db_set_board_conf", 
                "g_ptr_array_new", 
                "g_utf8_find_next_char", 
                "gc_db_get_conf", 
                "goo_canvas_item_remove", 
                "gc_board_config_boolean_box", 
                "g_ptr_array_add", 
                "g_utf8_strdown", 
                "gc_score_end", 
                "gc_prop_get", 
                "g_mutex_unlock", 
                "g_utf8_strlen", 
                "g_malloc", 
                "g_ptr_array_remove_index_fast", 
                "gc_sound_play_ogg", 
                "gc_wordlist_free", 
                "gc_set_background", 
                "gc_timing", 
                "g_log", 
                "gc_bar_set_level", 
                "g_hash_table_lookup", 
                "_ITM_registerTMCloneTable", 
                "g_utf8_skip", 
                "gc_score_start", 
                "g_source_remove", 
                "gc_locale_set", 
                "gc_score_set", 
                "g_ptr_array_remove", 
                "gc_dialog", 
                "g_ptr_array_free", 
                "g_strdup", 
                "goo_canvas_text_new", 
                "g_strdup_printf", 
                "g_utf8_get_char", 
                "gc_wordlist_get_levelwordlist", 
                "strcmp", 
                "gc_board_config_window_display"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/libwordsgame.so"
        }, 
        "usr/lib/gcompris/libclickgame_so": {
            "report-functions": [
                "pixbuf_copy_mirror", 
                "gc_file_find_absolute", 
                "gdk_pixbuf_get_height", 
                "goo_canvas_image_new", 
                "__cxa_finalize", 
                "g_slist_free", 
                "gc_score_set", 
                "gc_bar_set_level", 
                "g_list_length", 
                "g_timeout_add", 
                "goo_canvas_group_new", 
                "gc_bonus_display", 
                "g_random_int", 
                "goo_canvas_item_get_bounds", 
                "__gmon_start__", 
                "g_list_remove", 
                "g_slist_length", 
                "gdk_pixbuf_get_width", 
                "goo_canvas_get_item_at", 
                "g_signal_connect_data", 
                "g_slist_prepend", 
                "g_slist_reverse", 
                "gc_score_start", 
                "goo_canvas_item_get_parent", 
                "g_ascii_strcasecmp", 
                "goo_canvas_item_get_canvas", 
                "g_source_remove", 
                "gc_score_end", 
                "g_object_unref", 
                "__stack_chk_fail", 
                "goo_canvas_item_scale", 
                "_ITM_registerTMCloneTable", 
                "gc_set_background", 
                "sqrt", 
                "goo_canvas_convert_to_item_space", 
                "rand", 
                "goo_canvas_item_translate", 
                "goo_canvas_get_root_item", 
                "goo_canvas_item_remove", 
                "g_list_foreach", 
                "gc_bar_set", 
                "g_list_append", 
                "g_signal_handlers_disconnect_matched", 
                "_ITM_deregisterTMCloneTable", 
                "g_free", 
                "g_slist_nth_data", 
                "g_object_set", 
                "g_malloc", 
                "g_list_nth_data"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/libclickgame.so"
        }, 
        "usr/lib/gcompris/libtangram_so": {
            "report-functions": [
                "goo_canvas_image_new", 
                "gtk_widget_draw", 
                "goo_canvas_item_remove", 
                "gtk_object_get_data", 
                "gdk_gc_set_foreground", 
                "gtk_spin_button_get_adjustment", 
                "strcpy", 
                "sincos", 
                "gtk_drawing_area_new", 
                "g_type_check_instance_is_a", 
                "gtk_pixmap_new", 
                "gc_prop_get", 
                "goo_canvas_widget_new", 
                "_ITM_registerTMCloneTable", 
                "gtk_object_get_type", 
                "g_strtod", 
                "_ITM_deregisterTMCloneTable", 
                "g_assertion_message_expr", 
                "gtk_widget_get_type", 
                "gc_sound_play_ogg", 
                "gtk_menu_get_attach_widget", 
                "goo_canvas_svg_new", 
                "g_list_prepend", 
                "gdk_draw_line", 
                "g_type_check_instance_cast", 
                "gtk_widget_hide", 
                "gdk_draw_polygon", 
                "g_ascii_strcasecmp", 
                "sqrt", 
                "gc_bar_set", 
                "gc_bonus_display", 
                "stpcpy", 
                "gc_pixmap_load", 
                "goo_canvas_group_new", 
                "gdk_pixmap_colormap_create_from_xpm", 
                "gtk_main_quit", 
                "puts", 
                "g_free", 
                "gdk_draw_lines", 
                "gdk_colormap_free_colors", 
                "gdk_window_get_pointer", 
                "g_object_unref", 
                "gdk_gc_set_function", 
                "gtk_spin_button_get_value_as_int", 
                "gc_set_background", 
                "__stack_chk_fail", 
                "strlen", 
                "gc_item_focus_init", 
                "goo_canvas_item_set_transform", 
                "gdk_pixmap_colormap_create_from_xpm_d", 
                "gdk_pixmap_new", 
                "g_signal_connect_data", 
                "gdk_colormap_alloc_color", 
                "goo_canvas_item_translate", 
                "gtk_adjustment_changed", 
                "gtk_widget_set_events", 
                "__xstat", 
                "goo_canvas_item_get_bounds", 
                "gdk_gc_new", 
                "atan2", 
                "goo_canvas_get_root_item", 
                "__gmon_start__", 
                "gtk_widget_set_name", 
                "gdk_colormap_get_system", 
                "g_log", 
                "__cxa_finalize", 
                "g_strconcat", 
                "__isoc99_fscanf", 
                "gtk_widget_get_colormap", 
                "__fprintf_chk", 
                "gtk_widget_show", 
                "fclose", 
                "gdk_gc_unref", 
                "gtk_menu_get_type", 
                "gdk_gc_set_tile", 
                "g_malloc", 
                "gdk_gc_set_ts_origin", 
                "gdk_draw_rectangle", 
                "gdk_gc_set_fill", 
                "gdk_gc_set_line_attributes", 
                "gtk_spin_button_set_value", 
                "g_strdup", 
                "gdk_draw_drawable", 
                "gc_skin_rsvg_get", 
                "fopen"
            ], 
            "rpm": "gcompris-15.10-8.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gcompris/libtangram.so"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Amusements/Games", 
            "Name": " gcompris", 
            "License": " GPLv3+", 
            "URL": " http://gcompris.net", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildhw-03.phx2.fedoraproject.org", 
            "Description": "\nGCompris / I Got IT is an educational software suite comprising of numerous\nactivities for children aged 2 to 10. More than 100 different activities are\nincluded:\n* Click on the animals => learn the mouse/click usage\n* Type the falling letters => learn the keyboard usage\n* Falling Dices\n* Falling words\n* Basic algebra\n* Time learning with an analog clock\n* Puzzle game with famous paintings\n* Drive Plane to catch clouds in increasing number\n* Balance the scales\n* And much more ...\n\nSome activities make use of sounds.  For those you'll have to install the\ngcompris-sound package for the languages you intend to use.\n", 
            "Build Date": " Fri 10 Feb 2017 11:54:54 AM EST", 
            "Source RPM": " gcompris-15.10-8.fc26.src.rpm", 
            "Version": " 15.10", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Fri 10 Feb 2017 09:52:20 PM EST, Key ID 812a6b4b64dab85d", 
            "Release": " 8.fc26", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Educational suite for kids 2-10 years old", 
            "Size": " 176544084"
        }
    }
}