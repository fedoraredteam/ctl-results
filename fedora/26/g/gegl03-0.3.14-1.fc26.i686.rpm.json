{
    "results": {
        "usr/lib/gegl-0_3/tiff-load_so": {
            "report-functions": [
                "TIFFSetWarningHandler", 
                "babl_format_get_bytes_per_pixel", 
                "g_error_free", 
                "_ITM_registerTMCloneTable", 
                "g_seekable_seek", 
                "TIFFGetFieldDefaulted", 
                "gegl_param_double_get_type", 
                "TIFFClientOpen", 
                "g_malloc0", 
                "gegl_param_int_get_type", 
                "gegl_buffer_linear_new_from_data", 
                "g_try_malloc_n", 
                "g_log", 
                "g_type_check_instance_cast", 
                "g_file_info_has_attribute", 
                "babl_format_get_n_components", 
                "TIFFSetDirectory", 
                "g_strlcpy", 
                "g_type_check_instance_is_a", 
                "g_assertion_message_expr", 
                "gegl_buffer_iterator_next", 
                "g_object_class_install_property", 
                "g_seekable_get_type", 
                "TIFFScanlineSize", 
                "g_seekable_can_seek", 
                "g_value_dup_string", 
                "TIFFClose", 
                "TIFFReadRGBAImage", 
                "g_input_stream_read", 
                "g_vasprintf", 
                "_ITM_deregisterTMCloneTable", 
                "g_seekable_tell", 
                "TIFFSetErrorHandler", 
                "g_file_info_get_size", 
                "TIFFReadTile", 
                "g_input_stream_close", 
                "babl_format", 
                "g_object_unref", 
                "g_type_module_register_type", 
                "g_strlcat", 
                "g_slice_alloc0", 
                "gegl_param_spec_file_path", 
                "gegl_operation_set_format", 
                "TIFFIsTiled", 
                "TIFFReadScanline", 
                "g_file_new_for_path", 
                "g_value_set_int", 
                "g_type_name", 
                "g_object_set_data_full", 
                "g_str_equal", 
                "g_type_check_class_cast", 
                "gegl_operation_class_set_keys", 
                "g_dgettext", 
                "g_file_equal", 
                "gegl_buffer_iterator_new", 
                "g_strdup", 
                "__stack_chk_fail", 
                "TIFFGetField", 
                "g_file_query_info", 
                "__cxa_finalize", 
                "TIFFNumberOfDirectories", 
                "gegl_param_spec_uri", 
                "g_snprintf", 
                "g_value_get_int", 
                "g_type_class_peek_parent", 
                "g_slice_free1", 
                "g_value_set_string", 
                "gegl_param_spec_get_property_key", 
                "g_file_new_for_uri", 
                "gegl_gio_open_input_stream", 
                "babl_format_n", 
                "gegl_buffer_iterator_add", 
                "gegl_operation_handlers_register_loader", 
                "gegl_operation_get_type", 
                "g_free", 
                "g_try_realloc", 
                "gegl_operation_source_get_type", 
                "gegl_buffer_set", 
                "babl_format_get_type", 
                "g_return_if_fail_warning", 
                "TIFFTileSize", 
                "__gmon_start__", 
                "g_try_malloc"
            ], 
            "rpm": "gegl03-0.3.14-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gegl-0.3/tiff-load.so"
        }, 
        "usr/lib/gegl-0_3/ppm-load_so": {
            "report-functions": [
                "g_log", 
                "g_value_dup_string", 
                "gegl_param_int_get_type", 
                "g_type_name", 
                "fopen64", 
                "fread", 
                "gegl_operation_set_format", 
                "g_malloc", 
                "g_slice_alloc0", 
                "_ITM_deregisterTMCloneTable", 
                "__errno_location", 
                "__cxa_finalize", 
                "strerror", 
                "g_str_equal", 
                "gegl_operation_handlers_register_loader", 
                "g_type_class_peek_parent", 
                "_ITM_registerTMCloneTable", 
                "gegl_operation_class_set_keys", 
                "g_free", 
                "gegl_param_double_get_type", 
                "g_strdup", 
                "g_slice_free1", 
                "fgets", 
                "gegl_buffer_set", 
                "g_object_set_data_full", 
                "g_snprintf", 
                "g_type_check_instance_cast", 
                "strtol", 
                "g_dgettext", 
                "__stack_chk_fail", 
                "__gmon_start__", 
                "gegl_param_spec_get_property_key", 
                "g_type_check_class_cast", 
                "gegl_buffer_get", 
                "fclose", 
                "g_type_check_instance_is_a", 
                "g_type_module_register_type", 
                "gegl_operation_get_type", 
                "g_object_class_install_property", 
                "babl_format", 
                "__isoc99_fscanf", 
                "g_value_set_string"
            ], 
            "rpm": "gegl03-0.3.14-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gegl-0.3/ppm-load.so"
        }, 
        "usr/lib/gegl-0_3/exr-save_so": {
            "report-functions": [
                "g_log", 
                "g_type_check_instance_is_a", 
                "g_object_class_install_property", 
                "_ZN7Imf_2_26Header8channelsEv", 
                "gegl_operation_class_set_keys", 
                "g_strdup", 
                "__gmon_start__", 
                "_ZN7Imf_2_217globalThreadCountEv", 
                "g_dgettext", 
                "g_type_module_register_type", 
                "g_str_equal", 
                "_ZSt19__throw_logic_errorPKc", 
                "g_slice_free1", 
                "gegl_param_spec_file_path", 
                "gegl_param_double_get_type", 
                "__gxx_personality_v0", 
                "g_malloc", 
                "g_free", 
                "_ZN7Imf_2_26Header18setTileDescriptionERKNS_15TileDescriptionE", 
                "babl_format_get_n_components", 
                "gegl_buffer_get", 
                "g_type_name", 
                "strlen", 
                "babl_format", 
                "_ZNK7Imf_2_215TiledOutputFile9numXTilesEi", 
                "g_value_dup_string", 
                "_ZdlPv", 
                "_ZN7Imf_2_215TiledOutputFile10writeTilesEiiiii", 
                "_ZNSt8ios_base4InitD1Ev", 
                "_ZN7Imf_2_26HeaderD1Ev", 
                "g_value_set_int", 
                "__cxa_finalize", 
                "g_type_check_instance_cast", 
                "_ZN7Imf_2_26HeaderC1EiifRKN9Imath_2_24Vec2IfEEfNS_9LineOrderENS_11CompressionE", 
                "_ZNK7Imf_2_215TiledOutputFile9numYTilesEi", 
                "g_object_set_data_full", 
                "_ZN7Imf_2_211ChannelList6insertEPKcRKNS_7ChannelE", 
                "_ZN7Imf_2_210OutputFile14setFrameBufferERKNS_11FrameBufferE", 
                "_ZN7Imf_2_215TiledOutputFile14setFrameBufferERKNS_11FrameBufferE", 
                "_ZN7Imf_2_215TiledOutputFileC1EPKcRKNS_6HeaderEi", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_ZN7Imf_2_215TiledOutputFileD1Ev", 
                "__cxa_begin_catch", 
                "gegl_param_spec_get_property_key", 
                "g_type_check_class_cast", 
                "g_value_get_int", 
                "g_snprintf", 
                "_ZN7Imf_2_27ChannelC1ENS_9PixelTypeEiib", 
                "_ZN7Imf_2_210OutputFileC1EPKcRKNS_6HeaderEi", 
                "__stack_chk_fail", 
                "gegl_operation_sink_get_type", 
                "_ZN7Imf_2_210OutputFile11writePixelsEi", 
                "__cxa_end_catch", 
                "gegl_buffer_get_format", 
                "_ITM_deregisterTMCloneTable", 
                "_ZN7Imf_2_210OutputFileD1Ev", 
                "gegl_param_spec_int", 
                "_ZN7Imf_2_25SliceC1ENS_9PixelTypeEPcjjiidbb", 
                "gegl_operation_handlers_register_saver", 
                "_ZN7Imf_2_211FrameBuffer6insertEPKcRKNS_5SliceE", 
                "g_value_set_string", 
                "g_slice_alloc0", 
                "_Unwind_Resume", 
                "gegl_param_int_get_type", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj", 
                "_ITM_registerTMCloneTable", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj", 
                "g_type_class_peek_parent"
            ], 
            "rpm": "gegl03-0.3.14-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gegl-0.3/exr-save.so"
        }, 
        "usr/lib/gegl-0_3/webp-save_so": {
            "report-functions": [
                "g_output_stream_get_type", 
                "__gmon_start__", 
                "g_str_equal", 
                "gegl_buffer_get", 
                "gegl_operation_sink_get_type", 
                "g_value_dup_string", 
                "babl_format", 
                "g_snprintf", 
                "g_try_malloc", 
                "g_type_class_peek_parent", 
                "g_value_set_int", 
                "_ITM_deregisterTMCloneTable", 
                "g_strdup", 
                "g_type_module_register_type", 
                "babl_format_get_bytes_per_pixel", 
                "WebPPictureFree", 
                "g_assertion_message_expr", 
                "gegl_operation_get_type", 
                "g_slice_free1", 
                "WebPPictureImportRGBA", 
                "WebPValidateConfig", 
                "gegl_operation_handlers_register_saver", 
                "WebPConfigInitInternal", 
                "gegl_param_double_get_type", 
                "g_object_set_data_full", 
                "g_value_set_string", 
                "g_return_if_fail_warning", 
                "g_error_free", 
                "g_type_check_instance_cast", 
                "g_type_name", 
                "g_object_unref", 
                "g_output_stream_write_all", 
                "_ITM_registerTMCloneTable", 
                "gegl_param_spec_get_property_key", 
                "gegl_operation_class_set_keys", 
                "g_type_check_instance_is_a", 
                "__stack_chk_fail", 
                "g_object_class_install_property", 
                "g_free", 
                "gegl_param_spec_int", 
                "__cxa_finalize", 
                "g_type_check_class_cast", 
                "g_slice_alloc0", 
                "g_dgettext", 
                "WebPEncode", 
                "gegl_param_spec_file_path", 
                "g_log", 
                "gegl_param_int_get_type", 
                "WebPPictureInitInternal"
            ], 
            "rpm": "gegl03-0.3.14-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gegl-0.3/webp-save.so"
        }, 
        "usr/lib/gegl-0_3/png-load_so": {
            "report-functions": [
                "g_slice_alloc0", 
                "_ITM_registerTMCloneTable", 
                "gegl_operation_set_format", 
                "_ITM_deregisterTMCloneTable", 
                "g_type_class_peek_parent", 
                "g_quark_from_static_string", 
                "gegl_param_spec_uri", 
                "g_printerr", 
                "g_object_unref", 
                "g_slice_free1", 
                "g_type_name", 
                "g_input_stream_close", 
                "png_set_interlace_handling", 
                "gegl_param_spec_get_property_key", 
                "g_dgettext", 
                "gegl_operation_handlers_register_loader", 
                "__stack_chk_fail", 
                "gegl_buffer_set", 
                "gegl_rectangle_set", 
                "g_free", 
                "png_set_read_fn", 
                "png_read_info", 
                "gegl_gio_open_input_stream", 
                "gegl_param_int_get_type", 
                "png_set_expand", 
                "g_snprintf", 
                "png_set_sig_bytes", 
                "png_create_info_struct", 
                "g_type_check_class_cast", 
                "png_set_gamma", 
                "gegl_operation_get_type", 
                "__longjmp_chk", 
                "g_log", 
                "_setjmp", 
                "png_read_end", 
                "png_get_gAMA", 
                "png_read_update_info", 
                "g_strdup", 
                "__strcat_chk", 
                "png_get_io_ptr", 
                "g_value_set_string", 
                "g_input_stream_read_all", 
                "gegl_operation_source_get_type", 
                "g_type_module_register_type", 
                "png_read_rows", 
                "png_get_IHDR", 
                "g_set_error", 
                "g_value_dup_string", 
                "png_set_palette_to_rgb", 
                "__cxa_finalize", 
                "g_return_if_fail_warning", 
                "g_type_check_instance_is_a", 
                "g_assertion_message_expr", 
                "g_input_stream_get_type", 
                "png_get_valid", 
                "png_set_longjmp_fn", 
                "g_type_check_instance_cast", 
                "g_malloc0", 
                "png_create_read_struct", 
                "gegl_operation_class_set_keys", 
                "g_input_stream_read", 
                "png_set_tRNS_to_alpha", 
                "g_object_class_install_property", 
                "png_set_swap", 
                "g_str_equal", 
                "babl_format", 
                "g_object_set_data_full", 
                "gegl_param_spec_file_path", 
                "gegl_buffer_get", 
                "gegl_param_double_get_type", 
                "__gmon_start__"
            ], 
            "rpm": "gegl03-0.3.14-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gegl-0.3/png-load.so"
        }, 
        "usr/lib/gegl-0_3/sdl-display_so": {
            "report-functions": [
                "SDL_Quit", 
                "SDL_EnableUNICODE", 
                "gegl_operation_get_type", 
                "gegl_operation_sink_get_type", 
                "babl_component", 
                "__stack_chk_fail", 
                "gegl_param_int_get_type", 
                "g_dgettext", 
                "g_type_name", 
                "g_log", 
                "g_value_set_string", 
                "g_free", 
                "g_timeout_add", 
                "gegl_param_double_get_type", 
                "gegl_buffer_get", 
                "g_type_check_instance_is_a", 
                "__cxa_atexit", 
                "g_value_dup_string", 
                "g_type_check_instance_cast", 
                "__fprintf_chk", 
                "babl_format_new", 
                "SDL_SetVideoMode", 
                "g_type_module_register_type", 
                "g_slice_alloc0", 
                "g_snprintf", 
                "_ITM_registerTMCloneTable", 
                "g_type_check_class_cast", 
                "g_object_set_data_full", 
                "exit", 
                "SDL_WM_SetCaption", 
                "g_strdup", 
                "babl_type", 
                "__cxa_finalize", 
                "g_str_equal", 
                "g_malloc0", 
                "SDL_UpdateRect", 
                "SDL_Init", 
                "SDL_PollEvent", 
                "g_param_spec_string", 
                "_ITM_deregisterTMCloneTable", 
                "__gmon_start__", 
                "g_slice_free1", 
                "g_object_class_install_property", 
                "g_type_class_peek_parent", 
                "babl_model", 
                "SDL_GetError"
            ], 
            "rpm": "gegl03-0.3.14-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gegl-0.3/sdl-display.so"
        }, 
        "usr/lib/gegl-0_3/seamless-clone-compose_so": {
            "report-functions": [
                "gegl_operation_class_set_keys", 
                "__gmon_start__", 
                "gegl_node_new_child", 
                "g_value_set_string", 
                "gegl_operation_meta_watch_nodes", 
                "g_str_equal", 
                "g_value_dup_string", 
                "gegl_operation_get_type", 
                "g_type_check_class_cast", 
                "g_type_check_instance_cast", 
                "gegl_node_connect_to", 
                "g_object_class_install_property", 
                "g_snprintf", 
                "gegl_node_get_input_proxy", 
                "g_free", 
                "g_object_set_data_full", 
                "gegl_node_get_output_proxy", 
                "gegl_operation_meta_get_type", 
                "gegl_param_spec_int", 
                "g_slice_free1", 
                "g_slice_alloc0", 
                "g_type_class_peek_parent", 
                "gegl_operation_meta_redirect", 
                "g_strdup", 
                "gegl_param_spec_set_property_key", 
                "g_type_name", 
                "__cxa_finalize", 
                "g_value_get_int", 
                "__stack_chk_fail", 
                "g_dgettext", 
                "_ITM_deregisterTMCloneTable", 
                "_ITM_registerTMCloneTable", 
                "g_value_set_int", 
                "gegl_param_spec_get_property_key", 
                "g_log", 
                "g_type_module_register_type", 
                "g_param_spec_string", 
                "gegl_param_int_get_type"
            ], 
            "rpm": "gegl03-0.3.14-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gegl-0.3/seamless-clone-compose.so"
        }, 
        "usr/lib/gegl-0_3/rgbe-save_so": {
            "report-functions": [
                "g_mapped_file_get_length", 
                "g_type_check_instance_is_a", 
                "babl_format", 
                "g_return_if_fail_warning", 
                "g_ascii_dtostr", 
                "__snprintf_chk", 
                "__stack_chk_fail", 
                "fopen64", 
                "g_ascii_strtoull", 
                "_ITM_registerTMCloneTable", 
                "g_str_has_prefix", 
                "g_type_module_register_type", 
                "g_slice_alloc0", 
                "g_strdup", 
                "__errno_location", 
                "gegl_operation_class_set_keys", 
                "strncmp", 
                "g_type_check_instance_cast", 
                "frexp", 
                "__strncpy_chk", 
                "gegl_param_spec_get_property_key", 
                "strlen", 
                "gegl_param_double_get_type", 
                "g_log", 
                "gegl_operation_handlers_register_saver", 
                "gegl_operation_get_type", 
                "g_ascii_strtod", 
                "g_type_name", 
                "gegl_operation_sink_get_type", 
                "g_malloc", 
                "babl_format_get_n_components", 
                "g_value_set_string", 
                "g_warn_message", 
                "g_object_class_install_property", 
                "g_malloc_n", 
                "g_str_equal", 
                "_ITM_deregisterTMCloneTable", 
                "g_type_class_peek_parent", 
                "g_strstr_len", 
                "g_strconcat", 
                "g_snprintf", 
                "g_dgettext", 
                "fclose", 
                "gegl_param_spec_file_path", 
                "g_mapped_file_new", 
                "g_mapped_file_unref", 
                "__gmon_start__", 
                "fwrite", 
                "g_type_check_class_cast", 
                "g_free", 
                "g_mapped_file_get_contents", 
                "g_slice_free1", 
                "g_object_set_data_full", 
                "gegl_buffer_get", 
                "__cxa_finalize", 
                "gegl_param_int_get_type"
            ], 
            "rpm": "gegl03-0.3.14-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gegl-0.3/rgbe-save.so"
        }, 
        "usr/lib/gegl-0_3/rgbe-load_so": {
            "report-functions": [
                "strlen", 
                "g_type_check_instance_is_a", 
                "__snprintf_chk", 
                "__gmon_start__", 
                "g_ascii_strtoull", 
                "g_type_check_class_cast", 
                "g_mapped_file_unref", 
                "strncmp", 
                "g_value_set_string", 
                "g_mapped_file_get_length", 
                "g_ascii_dtostr", 
                "g_strconcat", 
                "g_type_class_peek_parent", 
                "fopen64", 
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable", 
                "gegl_operation_set_format", 
                "g_return_if_fail_warning", 
                "g_snprintf", 
                "g_type_module_register_type", 
                "g_type_check_instance_cast", 
                "fclose", 
                "gegl_operation_handlers_register_loader", 
                "gegl_param_int_get_type", 
                "g_slice_alloc0", 
                "g_str_equal", 
                "g_mapped_file_get_contents", 
                "g_strstr_len", 
                "babl_format", 
                "g_malloc", 
                "g_type_name", 
                "g_str_has_prefix", 
                "__errno_location", 
                "gegl_param_double_get_type", 
                "_ITM_deregisterTMCloneTable", 
                "gegl_operation_class_set_keys", 
                "frexp", 
                "g_dgettext", 
                "g_object_class_install_property", 
                "gegl_operation_source_get_type", 
                "g_slice_free1", 
                "fwrite", 
                "__stack_chk_fail", 
                "g_log", 
                "g_value_dup_string", 
                "g_free", 
                "g_malloc_n", 
                "g_ascii_strtod", 
                "g_warn_message", 
                "g_str_has_suffix", 
                "g_object_set_data_full", 
                "__strncpy_chk", 
                "gegl_param_spec_file_path", 
                "gegl_operation_get_type", 
                "g_mapped_file_new", 
                "gegl_buffer_set"
            ], 
            "rpm": "gegl03-0.3.14-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gegl-0.3/rgbe-load.so"
        }, 
        "usr/lib/gegl-0_3/raw-load_so": {
            "report-functions": [
                "gegl_param_spec_get_property_key", 
                "libraw_init", 
                "gegl_operation_source_get_type", 
                "g_log", 
                "g_value_set_int", 
                "g_type_check_instance_cast", 
                "__gmon_start__", 
                "g_object_set_data_full", 
                "g_type_name", 
                "g_type_check_instance_is_a", 
                "g_slice_free1", 
                "_ITM_deregisterTMCloneTable", 
                "libraw_strerror", 
                "g_assertion_message_expr", 
                "libraw_unpack", 
                "g_object_class_install_property", 
                "gegl_buffer_set", 
                "babl_format", 
                "g_value_set_string", 
                "gegl_operation_handlers_register_loader", 
                "g_value_get_int", 
                "g_snprintf", 
                "g_value_dup_string", 
                "gegl_operation_set_format", 
                "g_type_check_class_cast", 
                "g_free", 
                "g_type_module_register_type", 
                "gegl_operation_get_type", 
                "gegl_operation_class_set_keys", 
                "g_slice_alloc0", 
                "_ITM_registerTMCloneTable", 
                "__stack_chk_fail", 
                "libraw_dcraw_make_mem_image", 
                "gegl_param_int_get_type", 
                "libraw_dcraw_clear_mem", 
                "g_malloc0", 
                "libraw_close", 
                "g_type_class_peek_parent", 
                "g_return_if_fail_warning", 
                "g_str_equal", 
                "g_dgettext", 
                "libraw_dcraw_process", 
                "__strdup", 
                "__cxa_finalize", 
                "g_strdup", 
                "strcmp", 
                "libraw_open_file", 
                "gegl_param_spec_int"
            ], 
            "rpm": "gegl03-0.3.14-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gegl-0.3/raw-load.so"
        }, 
        "usr/lib/gegl-0_3/jp2-load_so": {
            "report-functions": [
                "g_type_check_class_cast", 
                "g_type_module_register_type", 
                "babl_type", 
                "gegl_param_spec_file_path", 
                "g_slice_alloc0", 
                "g_type_check_instance_is_a", 
                "jas_matrix_create", 
                "g_slice_free1", 
                "babl_format_get_type", 
                "g_type_name", 
                "gegl_param_int_get_type", 
                "__stack_chk_fail", 
                "g_snprintf", 
                "gegl_param_spec_get_property_key", 
                "jas_stream_rewind", 
                "jas_stream_write", 
                "g_free", 
                "jas_image_getfmt", 
                "jas_image_readcmpt", 
                "g_log", 
                "g_value_dup_string", 
                "g_input_stream_get_type", 
                "g_type_check_instance_cast", 
                "babl_format", 
                "gegl_operation_set_format", 
                "jas_matrix_destroy", 
                "jas_image_decode", 
                "_ITM_registerTMCloneTable", 
                "jas_cmprof_destroy", 
                "gegl_buffer_set", 
                "g_file_equal", 
                "g_type_class_peek_parent", 
                "jas_image_destroy", 
                "__cxa_finalize", 
                "g_strdup", 
                "g_malloc", 
                "jas_image_getcmptbytype", 
                "g_try_malloc", 
                "_ITM_deregisterTMCloneTable", 
                "g_file_new_for_uri", 
                "gegl_param_double_get_type", 
                "g_object_unref", 
                "g_input_stream_read", 
                "jas_image_chclrspc", 
                "g_error_free", 
                "g_input_stream_close", 
                "jas_cmprof_createfromclrspc", 
                "jas_stream_close", 
                "gegl_param_spec_uri", 
                "g_malloc0", 
                "gegl_operation_handlers_register_loader", 
                "g_dgettext", 
                "__gmon_start__", 
                "jas_init", 
                "g_object_set_data_full", 
                "g_value_set_string", 
                "g_object_class_install_property", 
                "gegl_operation_get_type", 
                "gegl_gio_open_input_stream", 
                "g_str_equal", 
                "g_file_new_for_path", 
                "g_assertion_message_expr", 
                "jas_stream_memopen"
            ], 
            "rpm": "gegl03-0.3.14-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gegl-0.3/jp2-load.so"
        }, 
        "usr/lib/gegl-0_3/npy-save_so": {
            "report-functions": [
                "gegl_param_int_get_type", 
                "__cxa_finalize", 
                "__gmon_start__", 
                "fwrite", 
                "gegl_operation_class_set_keys", 
                "g_dgettext", 
                "g_malloc", 
                "__stack_chk_fail", 
                "g_type_check_instance_is_a", 
                "g_object_set_data_full", 
                "g_value_dup_string", 
                "gegl_buffer_get_format", 
                "g_slice_alloc0", 
                "gegl_param_spec_file_path", 
                "g_snprintf", 
                "babl_format_get_n_components", 
                "g_type_class_peek_parent", 
                "gegl_operation_get_type", 
                "gegl_operation_handlers_register_saver", 
                "_ITM_registerTMCloneTable", 
                "g_type_check_class_cast", 
                "g_strdup", 
                "g_strdup_printf", 
                "g_slice_free1", 
                "g_free", 
                "gegl_param_spec_get_property_key", 
                "g_log", 
                "fopen64", 
                "babl_format", 
                "g_str_equal", 
                "g_object_class_install_property", 
                "gegl_operation_sink_get_type", 
                "gegl_param_double_get_type", 
                "g_type_name", 
                "g_type_module_register_type", 
                "_ITM_deregisterTMCloneTable", 
                "strlen", 
                "g_type_check_instance_cast"
            ], 
            "rpm": "gegl03-0.3.14-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gegl-0.3/npy-save.so"
        }, 
        "usr/lib/gegl-0_3/exr-load_so": {
            "report-functions": [
                "g_object_get", 
                "_ZN7Imf_2_29InputFileD1Ev", 
                "_ZNSt8ios_base4InitD1Ev", 
                "_ZNK7Imf_2_29InputFile6headerEv", 
                "gegl_operation_set_format", 
                "gegl_operation_source_get_type", 
                "gegl_buffer_set", 
                "_ZN7Imf_2_217hasChromaticitiesERKNS_6HeaderE", 
                "_ZdlPv", 
                "_ZNK7Imf_2_211ChannelList11findChannelEPKc", 
                "_ZN7Imf_2_217globalThreadCountEv", 
                "_ITM_deregisterTMCloneTable", 
                "_Unwind_Resume", 
                "gegl_operation_class_set_keys", 
                "gegl_param_int_get_type", 
                "gegl_param_spec_file_path", 
                "g_type_class_peek_parent", 
                "_ZNK7Imf_2_26Header8channelsEv", 
                "_ZN7Imf_2_29InputFile10readPixelsEi", 
                "__stack_chk_fail", 
                "_ITM_registerTMCloneTable", 
                "g_type_check_instance_cast", 
                "_ZNK7Imf_2_26Header10dataWindowEv", 
                "g_object_set_data_full", 
                "g_type_name", 
                "g_malloc0", 
                "__cxa_end_catch", 
                "_ZNSt8ios_base4InitC1Ev", 
                "g_type_check_instance_is_a", 
                "__cxa_begin_catch", 
                "_ZN7Imf_2_211FrameBuffer6insertEPKcRKNS_5SliceE", 
                "gegl_param_double_get_type", 
                "__cxa_finalize", 
                "gegl_buffer_get", 
                "g_str_equal", 
                "g_slice_alloc0", 
                "g_log", 
                "g_type_check_class_cast", 
                "_ZN7Imf_2_29InputFile14setFrameBufferERKNS_11FrameBufferE", 
                "g_value_set_string", 
                "gegl_operation_get_type", 
                "__gxx_personality_v0", 
                "g_strdup", 
                "_ZN7Imf_2_214chromaticitiesERKNS_6HeaderE", 
                "g_free", 
                "_ZN7Imf_2_214ChromaticitiesC1ERKN9Imath_2_24Vec2IfEES5_S5_S5_", 
                "gegl_operation_handlers_register_loader", 
                "_ZN7Imf_2_27RgbaYca9computeYwERKNS_14ChromaticitiesE", 
                "g_snprintf", 
                "g_value_dup_string", 
                "g_object_class_install_property", 
                "gegl_buffer_get_extent", 
                "gegl_param_spec_get_property_key", 
                "_ZN7Imf_2_25SliceC1ENS_9PixelTypeEPcjjiidbb", 
                "__cxa_atexit", 
                "g_type_module_register_type", 
                "__gmon_start__", 
                "babl_format", 
                "_ZN7Imf_2_29InputFileC1EPKci", 
                "gegl_rectangle_set"
            ], 
            "rpm": "gegl03-0.3.14-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gegl-0.3/exr-load.so"
        }, 
        "usr/lib/gegl-0_3/path_so": {
            "report-functions": [
                "gegl_param_spec_path", 
                "_ITM_deregisterTMCloneTable", 
                "gegl_path_point_dist", 
                "g_snprintf", 
                "g_dgettext", 
                "cairo_fill", 
                "g_log", 
                "cairo_in_stroke", 
                "babl_format", 
                "_ITM_registerTMCloneTable", 
                "g_signal_handler_disconnect", 
                "g_print", 
                "gegl_operation_invalidate", 
                "gegl_buffer_clear", 
                "g_object_class_install_property", 
                "__cxa_finalize", 
                "gegl_operation_set_format", 
                "gegl_path_point_lerp", 
                "gegl_param_int_get_type", 
                "gegl_color_get_pixel", 
                "gegl_buffer_get_extent", 
                "g_type_class_peek_parent", 
                "g_mutex_unlock", 
                "g_slice_alloc0", 
                "cairo_close_path", 
                "g_value_set_double", 
                "g_free", 
                "g_object_set_data", 
                "g_param_spec_string", 
                "gegl_operation_class_set_keys", 
                "g_mutex_lock", 
                "cairo_set_source_rgba", 
                "g_type_check_instance_cast", 
                "g_object_set_data_full", 
                "g_malloc", 
                "gegl_path_get_bounds", 
                "cairo_set_fill_rule", 
                "cairo_curve_to", 
                "g_strdup", 
                "gegl_path_set_matrix", 
                "gegl_buffer_linear_open", 
                "gegl_buffer_copy", 
                "gegl_rectangle_bounding_box", 
                "cairo_in_fill", 
                "g_type_name", 
                "gegl_color_new", 
                "g_type_check_class_cast", 
                "gegl_param_spec_color_from_string", 
                "gegl_operation_source_get_bounding_box", 
                "cairo_create", 
                "g_slice_free1", 
                "gegl_path_foreach_flat", 
                "gegl_param_spec_double", 
                "__stack_chk_fail", 
                "gegl_rectangle_intersect", 
                "g_object_unref", 
                "gegl_buffer_set", 
                "cairo_line_to", 
                "g_value_dup_string", 
                "__gmon_start__", 
                "cairo_translate", 
                "cairo_move_to", 
                "g_signal_connect_data", 
                "g_value_dup_object", 
                "gegl_buffer_linear_close", 
                "g_type_check_instance_is_a", 
                "gegl_color_get_rgba", 
                "g_str_equal", 
                "cairo_image_surface_create_for_data", 
                "cairo_set_line_width", 
                "g_type_module_register_type", 
                "cairo_destroy", 
                "gegl_operation_filter_get_type", 
                "gegl_path_get_flat_path", 
                "g_value_get_double", 
                "gegl_param_spec_get_property_key", 
                "g_value_set_string", 
                "gegl_matrix3_parse_string", 
                "g_value_set_object", 
                "gegl_param_double_get_type", 
                "g_assertion_message_expr"
            ], 
            "rpm": "gegl03-0.3.14-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gegl-0.3/path.so"
        }, 
        "usr/lib/gegl-0_3/vector-fill_so": {
            "report-functions": [
                "gegl_path_foreach_flat", 
                "gegl_buffer_copy", 
                "g_value_get_double", 
                "g_dgettext", 
                "gegl_color_new", 
                "g_signal_handler_disconnect", 
                "g_param_spec_string", 
                "g_mutex_unlock", 
                "cairo_line_to", 
                "__gmon_start__", 
                "g_type_check_instance_is_a", 
                "g_object_unref", 
                "babl_format", 
                "gegl_path_set_matrix", 
                "g_snprintf", 
                "g_slice_alloc0", 
                "cairo_curve_to", 
                "cairo_move_to", 
                "g_object_set_data_full", 
                "gegl_matrix3_parse_string", 
                "g_value_dup_object", 
                "gegl_path_get_bounds", 
                "cairo_fill", 
                "gegl_param_spec_double", 
                "gegl_param_double_get_type", 
                "g_type_module_register_type", 
                "__stack_chk_fail", 
                "g_print", 
                "cairo_set_fill_rule", 
                "cairo_destroy", 
                "g_signal_connect_data", 
                "g_value_dup_string", 
                "g_value_set_double", 
                "gegl_operation_get_type", 
                "g_str_equal", 
                "g_object_class_install_property", 
                "gegl_operation_invalidate", 
                "cairo_create", 
                "cairo_close_path", 
                "cairo_translate", 
                "gegl_operation_class_set_keys", 
                "g_slice_free1", 
                "gegl_rectangle_bounding_box", 
                "_ITM_registerTMCloneTable", 
                "gegl_color_get_rgba", 
                "gegl_buffer_linear_close", 
                "__cxa_finalize", 
                "gegl_param_int_get_type", 
                "g_type_check_class_cast", 
                "gegl_param_spec_get_property_key", 
                "g_free", 
                "g_mutex_lock", 
                "cairo_image_surface_create_for_data", 
                "gegl_param_spec_path", 
                "cairo_set_source_rgba", 
                "gegl_param_spec_color_from_string", 
                "g_type_class_peek_parent", 
                "g_type_check_instance_cast", 
                "_ITM_deregisterTMCloneTable", 
                "g_type_name", 
                "gegl_buffer_clear", 
                "cairo_in_fill", 
                "gegl_buffer_linear_open", 
                "gegl_color_get_pixel", 
                "g_value_set_string", 
                "gegl_operation_set_format", 
                "gegl_operation_source_get_bounding_box", 
                "g_log", 
                "g_strdup"
            ], 
            "rpm": "gegl03-0.3.14-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gegl-0.3/vector-fill.so"
        }, 
        "usr/lib/gegl-0_3/png-save_so": {
            "report-functions": [
                "g_malloc0", 
                "g_type_class_peek_parent", 
                "g_strdup", 
                "gegl_param_spec_file_path", 
                "png_write_rows", 
                "png_set_longjmp_fn", 
                "gegl_operation_class_set_keys", 
                "gegl_param_int_get_type", 
                "g_free", 
                "png_set_IHDR", 
                "gegl_operation_sink_get_type", 
                "__stack_chk_fail", 
                "g_object_class_install_property", 
                "g_value_set_string", 
                "g_value_get_int", 
                "png_write_info", 
                "_setjmp", 
                "__strcat_chk", 
                "gegl_buffer_get_format", 
                "__longjmp_chk", 
                "png_set_swap", 
                "g_dgettext", 
                "gegl_param_double_get_type", 
                "g_value_dup_string", 
                "g_type_module_register_type", 
                "png_set_compression_level", 
                "png_set_bKGD", 
                "babl_format", 
                "__gmon_start__", 
                "gegl_param_spec_int", 
                "g_log", 
                "g_type_check_instance_cast", 
                "babl_format_has_alpha", 
                "g_type_check_instance_is_a", 
                "g_snprintf", 
                "gegl_operation_get_type", 
                "g_type_check_class_cast", 
                "babl_format_get_n_components", 
                "g_slice_alloc0", 
                "__cxa_finalize", 
                "fclose", 
                "g_type_name", 
                "gegl_buffer_get", 
                "g_slice_free1", 
                "_ITM_registerTMCloneTable", 
                "_ITM_deregisterTMCloneTable", 
                "png_init_io", 
                "png_write_end", 
                "png_create_info_struct", 
                "fopen64", 
                "gegl_operation_handlers_register_saver", 
                "png_destroy_write_struct", 
                "g_object_set_data_full", 
                "png_create_write_struct", 
                "g_value_set_int", 
                "gegl_param_spec_get_property_key"
            ], 
            "rpm": "gegl03-0.3.14-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gegl-0.3/png-save.so"
        }, 
        "usr/lib/gegl-0_3/svg-load_so": {
            "report-functions": [
                "gegl_param_double_get_type", 
                "g_value_set_int", 
                "cairo_surface_flush", 
                "g_log", 
                "g_str_equal", 
                "gegl_param_spec_get_property_key", 
                "__gmon_start__", 
                "g_slice_free1", 
                "rsvg_handle_get_dimensions", 
                "gegl_operation_set_format", 
                "babl_format", 
                "cairo_create", 
                "g_type_name", 
                "gegl_param_spec_int", 
                "gegl_operation_get_type", 
                "rsvg_handle_render_cairo", 
                "g_type_check_instance_cast", 
                "g_snprintf", 
                "g_strdup", 
                "g_type_module_register_type", 
                "g_value_set_string", 
                "gegl_param_spec_uri", 
                "cairo_image_surface_get_data", 
                "gegl_param_spec_file_path", 
                "gegl_operation_handlers_register_loader", 
                "cairo_destroy", 
                "g_object_class_install_property", 
                "g_object_set_data_full", 
                "cairo_image_surface_get_stride", 
                "g_object_unref", 
                "cairo_surface_destroy", 
                "_ITM_registerTMCloneTable", 
                "g_assertion_message_expr", 
                "_ITM_deregisterTMCloneTable", 
                "__stack_chk_fail", 
                "g_dgettext", 
                "gegl_gio_open_input_stream", 
                "gegl_operation_class_set_keys", 
                "g_slice_alloc0", 
                "gegl_operation_source_get_type", 
                "gegl_param_int_get_type", 
                "__cxa_finalize", 
                "g_return_if_fail_warning", 
                "g_malloc0", 
                "rsvg_handle_new_from_stream_sync", 
                "g_value_get_int", 
                "gegl_buffer_set", 
                "g_value_dup_string", 
                "g_free", 
                "cairo_scale", 
                "g_type_check_class_cast", 
                "g_error_free", 
                "cairo_image_surface_create", 
                "g_file_new_for_uri", 
                "g_type_class_peek_parent", 
                "g_file_new_for_path"
            ], 
            "rpm": "gegl03-0.3.14-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gegl-0.3/svg-load.so"
        }, 
        "usr/lib/libgegl-sc-0_3_so": {
            "report-functions": [
                "g_array_new", 
                "g_ptr_array_free", 
                "gegl_buffer_iterator_add", 
                "g_queue_pop_head", 
                "g_object_unref", 
                "g_ptr_array_remove_range", 
                "g_malloc_n", 
                "g_slice_free1", 
                "g_queue_new", 
                "g_queue_peek_tail", 
                "g_ptr_array_set_size", 
                "babl_type_new", 
                "__fprintf_chk", 
                "g_hash_table_size", 
                "g_list_insert_before", 
                "g_queue_free", 
                "g_hash_table_lookup_extended", 
                "g_ptr_array_new", 
                "g_queue_find", 
                "g_sequence_new", 
                "g_hash_table_insert", 
                "g_array_free", 
                "__gmon_start__", 
                "__pow_finite", 
                "g_ptr_array_sort", 
                "g_slice_alloc", 
                "g_list_free", 
                "g_malloc", 
                "g_sequence_free", 
                "g_hash_table_new", 
                "gegl_rectangle_set", 
                "g_sequence_remove", 
                "g_hash_table_destroy", 
                "__cxa_finalize", 
                "g_assertion_message_expr", 
                "_ITM_registerTMCloneTable", 
                "g_list_delete_link", 
                "g_list_first", 
                "__assert_fail", 
                "g_queue_peek_head", 
                "g_list_prepend", 
                "g_list_remove", 
                "g_sequence_iter_is_end", 
                "g_queue_is_empty", 
                "g_ptr_array_sized_new", 
                "g_list_find", 
                "babl_format", 
                "g_ptr_array_add", 
                "g_queue_init", 
                "g_hash_table_lookup", 
                "gegl_buffer_sample", 
                "fputc", 
                "g_queue_push_head", 
                "gegl_rectangle_intersect", 
                "g_queue_push_tail", 
                "gegl_buffer_new", 
                "gegl_rectangle_contains", 
                "g_queue_clear", 
                "g_hash_table_iter_next", 
                "fwrite", 
                "gegl_rectangle_is_empty", 
                "g_list_last", 
                "_ITM_deregisterTMCloneTable", 
                "gegl_buffer_iterator_next", 
                "g_free", 
                "g_hash_table_iter_remove", 
                "g_sequence_get", 
                "__stack_chk_fail", 
                "g_log", 
                "g_queue_peek_head_link", 
                "g_direct_hash", 
                "modf", 
                "gegl_buffer_iterator_new", 
                "g_hash_table_foreach", 
                "g_direct_equal", 
                "g_hash_table_new_full", 
                "__printf_chk", 
                "babl_format_n", 
                "g_sequence_insert_sorted", 
                "g_list_append", 
                "g_hash_table_iter_init", 
                "g_sequence_get_begin_iter"
            ], 
            "rpm": "gegl03-0.3.14-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libgegl-sc-0.3.so"
        }, 
        "usr/lib/gegl-0_3/transformops_so": {
            "report-functions": [
                "g_object_new", 
                "gegl_buffer_get_type", 
                "gegl_matrix3_multiply", 
                "__gmon_start__", 
                "g_type_name", 
                "babl_format", 
                "g_type_check_instance_cast", 
                "g_value_set_string", 
                "gegl_module_register_type", 
                "gegl_operation_use_threading", 
                "g_value_get_enum", 
                "g_param_spec_boolean", 
                "g_assertion_message_expr", 
                "__stack_chk_fail", 
                "__cxa_finalize", 
                "gegl_operation_context_get_source", 
                "g_value_set_double", 
                "gegl_rectangle_is_empty", 
                "g_dgettext", 
                "g_type_check_class_cast", 
                "g_param_spec_enum", 
                "g_type_class_peek_parent", 
                "g_value_get_boolean", 
                "gegl_sampler_get_context_rect", 
                "gegl_node_get_consumers", 
                "g_object_class_install_property", 
                "gegl_matrix3_invert", 
                "g_value_set_enum", 
                "gegl_operation_class_set_key", 
                "gegl_matrix3_originate", 
                "gegl_buffer_iterator_new", 
                "gegl_node_get_producer", 
                "g_thread_pool_new", 
                "g_object_unref", 
                "gegl_operation_filter_get_type", 
                "g_log", 
                "gegl_sampler_get_fun", 
                "g_free", 
                "gegl_operation_context_get_target", 
                "gegl_object_set_has_forked", 
                "g_param_spec_double", 
                "g_type_check_instance_is_a", 
                "gegl_matrix3_parse_string", 
                "gegl_operation_source_get_bounding_box", 
                "gegl_buffer_iterator_next", 
                "gegl_operation_detect", 
                "gegl_matrix3_copy_into", 
                "g_strdup", 
                "_ITM_deregisterTMCloneTable", 
                "g_value_get_double", 
                "gegl_sampler_type_get_type", 
                "_ITM_registerTMCloneTable", 
                "gegl_operation_get_source_node", 
                "g_value_set_boolean", 
                "g_thread_pool_push", 
                "g_value_get_string", 
                "gegl_rectangle_is_infinite_plane", 
                "gegl_operation_set_format", 
                "gegl_buffer_sampler_new_at_level", 
                "gegl_operation_get_type", 
                "gegl_matrix3_transform_point", 
                "gegl_operation_context_take_object", 
                "gegl_object_get_has_forked", 
                "gegl_operation_get_source_format", 
                "gegl_matrix3_is_identity", 
                "gegl_matrix3_is_translate", 
                "gegl_matrix3_identity"
            ], 
            "rpm": "gegl03-0.3.14-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gegl-0.3/transformops.so"
        }, 
        "usr/lib/gegl-0_3/jpg-save_so": {
            "report-functions": [
                "jpeg_stdio_dest", 
                "g_str_equal", 
                "g_type_module_register_type", 
                "g_snprintf", 
                "jpeg_start_compress", 
                "gegl_param_spec_int", 
                "jpeg_CreateCompress", 
                "jpeg_write_scanlines", 
                "g_malloc", 
                "gegl_buffer_get", 
                "g_value_set_string", 
                "babl_format", 
                "__stack_chk_fail", 
                "jpeg_finish_compress", 
                "g_value_get_boolean", 
                "g_value_dup_string", 
                "g_log", 
                "jpeg_destroy_compress", 
                "fclose", 
                "g_object_set_data_full", 
                "__cxa_finalize", 
                "fopen64", 
                "jpeg_simple_progression", 
                "jpeg_set_defaults", 
                "_ITM_deregisterTMCloneTable", 
                "g_object_class_install_property", 
                "g_param_spec_boolean", 
                "g_value_set_int", 
                "g_type_name", 
                "g_type_class_peek_parent", 
                "gegl_operation_sink_get_type", 
                "g_strdup", 
                "g_type_check_instance_is_a", 
                "gegl_param_spec_file_path", 
                "gegl_operation_handlers_register_saver", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "g_free", 
                "g_type_check_instance_cast", 
                "gegl_param_spec_get_property_key", 
                "g_type_check_class_cast", 
                "g_value_get_int", 
                "jpeg_std_error", 
                "g_dgettext", 
                "g_slice_alloc0", 
                "gegl_param_double_get_type", 
                "gegl_operation_get_type", 
                "g_value_set_boolean", 
                "g_slice_free1", 
                "gegl_operation_class_set_keys"
            ], 
            "rpm": "gegl03-0.3.14-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gegl-0.3/jpg-save.so"
        }, 
        "usr/lib/gegl-0_3/save-pixbuf_so": {
            "report-functions": [
                "_ITM_deregisterTMCloneTable", 
                "__cxa_finalize", 
                "g_type_class_peek_parent", 
                "_ITM_registerTMCloneTable", 
                "gegl_param_int_get_type", 
                "babl_format", 
                "g_value_set_pointer", 
                "gegl_operation_sink_get_type", 
                "babl_format_get_bytes_per_pixel", 
                "g_log", 
                "__gmon_start__", 
                "gegl_operation_class_set_keys", 
                "g_value_get_pointer", 
                "g_object_class_install_property", 
                "g_object_get", 
                "g_param_spec_pointer", 
                "g_strdup_printf", 
                "g_slice_free1", 
                "g_malloc0_n", 
                "g_type_module_register_type", 
                "g_type_check_instance_cast", 
                "__stack_chk_fail", 
                "gegl_buffer_get", 
                "g_str_equal", 
                "gegl_param_spec_get_property_key", 
                "g_free", 
                "g_type_check_class_cast", 
                "gegl_operation_get_type", 
                "g_snprintf", 
                "g_dgettext", 
                "g_type_check_instance_is_a", 
                "babl_format_has_alpha", 
                "g_type_name", 
                "g_object_set_data_full", 
                "gdk_pixbuf_new_from_data", 
                "g_slice_alloc0"
            ], 
            "rpm": "gegl03-0.3.14-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gegl-0.3/save-pixbuf.so"
        }, 
        "usr/lib/gegl-0_3/gegl-core_so": {
            "report-functions": [
                "gegl_node_new_child", 
                "gegl_param_spec_color", 
                "gegl_buffer_new", 
                "gegl_buffer_get_extent", 
                "g_assertion_message_expr", 
                "g_ascii_strtoll", 
                "gegl_gio_uri_is_datauri", 
                "g_strdup", 
                "g_hash_table_lookup", 
                "g_strcmp0", 
                "json_object_get_string_member", 
                "gegl_node_link", 
                "gegl_param_color_get_type", 
                "g_list_free", 
                "g_type_check_class_cast", 
                "g_value_init", 
                "gegl_buffer_get_format", 
                "g_hash_table_new_full", 
                "g_io_error_quark", 
                "g_value_set_int64", 
                "g_param_spec_object", 
                "g_type_class_ref", 
                "g_object_set_data_full", 
                "json_node_get_value", 
                "g_param_spec_int", 
                "gegl_operation_context_get_source", 
                "gegl_param_spec_color_get_default", 
                "g_value_get_pointer", 
                "g_clear_error", 
                "json_parser_new", 
                "gegl_param_double_get_type", 
                "gegl_operation_get_type", 
                "g_try_malloc", 
                "gegl_color_get_type", 
                "gegl_node_get_output_proxy", 
                "g_ascii_strtod", 
                "g_value_unset", 
                "g_type_name", 
                "gegl_color_new", 
                "gegl_node_get_bounding_box", 
                "g_param_value_convert", 
                "gegl_param_spec_uri", 
                "__stack_chk_fail", 
                "g_strdup_printf", 
                "gegl_operation_context_get_target", 
                "g_input_stream_read_all", 
                "g_type_is_a", 
                "__gmon_start__", 
                "g_slice_free1", 
                "babl_format_get_bytes_per_pixel", 
                "gegl_node_find_property", 
                "gegl_param_spec_file_path", 
                "gegl_param_spec_format", 
                "gegl_param_int_get_type", 
                "strlen", 
                "json_object_get_object_member", 
                "gegl_object_get_has_forked", 
                "gegl_operation_handlers_get_loader", 
                "json_node_copy", 
                "g_object_ref", 
                "g_str_hash", 
                "g_value_set_boolean", 
                "gegl_operation_source_get_bounding_box", 
                "gegl_node_get_input_proxy", 
                "gegl_object_set_has_forked", 
                "g_free", 
                "babl_format", 
                "gegl_node_set", 
                "g_dgettext", 
                "g_value_get_string", 
                "g_value_dup_string", 
                "g_type_check_value_holds", 
                "g_object_unref", 
                "g_str_equal", 
                "g_type_check_instance_cast", 
                "g_direct_equal", 
                "g_type_class_peek", 
                "json_array_get_length", 
                "gegl_operation_meta_get_type", 
                "g_hash_table_insert", 
                "g_ascii_strcasecmp", 
                "g_malloc", 
                "g_slice_alloc0", 
                "g_param_spec_get_nick", 
                "json_node_get_node_type", 
                "gegl_buffer_create_sub_buffer", 
                "g_value_set_object", 
                "__cxa_finalize", 
                "gegl_operation_meta_redirect", 
                "gegl_operation_get_source_format", 
                "gegl_node_new", 
                "gegl_gio_datauri_get_content_type", 
                "g_content_type_guess", 
                "g_ascii_strdown", 
                "gegl_operation_get_source_node", 
                "g_slist_free_full", 
                "g_value_set_string", 
                "gegl_gio_open_input_stream", 
                "json_parser_get_root", 
                "g_slist_foreach", 
                "g_value_get_boolean", 
                "g_filename_display_name", 
                "json_object_has_member", 
                "g_value_set_double", 
                "gegl_node_get_operation", 
                "g_hash_table_unref", 
                "g_input_stream_close", 
                "realpath", 
                "g_type_class_unref", 
                "g_direct_hash", 
                "gegl_operation_context_get_object", 
                "g_log", 
                "gegl_buffer_copy", 
                "gegl_node_set_property", 
                "gegl_operation_get_format", 
                "gegl_operation_meta_watch_node", 
                "g_return_if_fail_warning", 
                "gegl_get_default_module_paths", 
                "gegl_rectangle_intersect", 
                "g_module_make_resident", 
                "json_array_get_object_element", 
                "gegl_operation_context_take_object", 
                "gegl_buffer_get_type", 
                "g_type_module_register_type", 
                "g_type_check_instance_is_a", 
                "gegl_node_get_property", 
                "g_strrstr", 
                "g_param_spec_get_blurb", 
                "g_value_dup_object", 
                "_ITM_registerTMCloneTable", 
                "json_node_get_object", 
                "gegl_operation_point_filter_get_type", 
                "g_value_set_enum", 
                "g_value_get_double", 
                "gegl_operation_class_set_keys", 
                "gegl_operation_set_format", 
                "g_value_set_int", 
                "json_object_get_array_member", 
                "gegl_module_get_type", 
                "g_param_value_validate", 
                "g_param_spec_boolean", 
                "gegl_operation_filter_get_type", 
                "g_object_class_install_property", 
                "_ITM_deregisterTMCloneTable", 
                "g_snprintf", 
                "g_str_has_suffix", 
                "g_enum_get_value_by_nick", 
                "json_parser_load_from_file", 
                "json_object_get_members", 
                "gegl_node_detect", 
                "gegl_param_spec_double", 
                "gegl_buffer_set_format", 
                "free", 
                "gegl_node_connect_to", 
                "g_type_class_peek_parent", 
                "g_value_set_pointer", 
                "gegl_param_spec_set_property_key", 
                "gegl_datafiles_read_directories", 
                "gegl_param_spec_get_property_key", 
                "g_param_spec_string", 
                "json_object_get_member", 
                "g_param_spec_double"
            ], 
            "rpm": "gegl03-0.3.14-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gegl-0.3/gegl-core.so"
        }, 
        "usr/lib/gegl-0_3/gegl-generated_so": {
            "report-functions": [
                "__stack_chk_fail", 
                "gegl_buffer_get_abyss", 
                "g_value_get_double", 
                "g_strdup", 
                "gegl_operation_class_set_key", 
                "gegl_operation_context_get_object", 
                "babl_format", 
                "gegl_operation_context_take_object", 
                "g_type_check_class_cast", 
                "g_log", 
                "g_object_set_data_full", 
                "g_type_module_register_type", 
                "__powf_finite", 
                "g_type_class_peek_parent", 
                "__gmon_start__", 
                "g_dgettext", 
                "gegl_param_double_get_type", 
                "gegl_param_spec_get_property_key", 
                "g_str_equal", 
                "g_type_check_instance_is_a", 
                "gegl_operation_get_type", 
                "_ITM_deregisterTMCloneTable", 
                "g_type_name", 
                "gegl_operation_set_format", 
                "g_value_get_boolean", 
                "g_slice_alloc0", 
                "gegl_operation_point_composer_get_type", 
                "gegl_operation_class_set_keys", 
                "gegl_param_int_get_type", 
                "g_value_set_boolean", 
                "gegl_param_spec_double", 
                "g_type_check_instance_cast", 
                "__cxa_finalize", 
                "g_object_ref", 
                "gegl_operation_source_get_bounding_box", 
                "g_param_spec_boolean", 
                "g_slice_free1", 
                "gegl_rectangle_intersect", 
                "_ITM_registerTMCloneTable", 
                "g_object_class_install_property"
            ], 
            "rpm": "gegl03-0.3.14-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gegl-0.3/gegl-generated.so"
        }, 
        "usr/lib/libgegl-0_3_so_0_314_0": {
            "report-functions": [
                "g_file_replace", 
                "g_malloc0_n", 
                "g_file_set_contents", 
                "g_dir_open", 
                "g_object_get", 
                "realpath", 
                "g_access", 
                "g_value_set_pointer", 
                "g_object_new_valist", 
                "g_slist_foreach", 
                "strncmp", 
                "babl_exit", 
                "g_list_free", 
                "g_module_open", 
                "g_module_error", 
                "g_mutex_init", 
                "babl_ticks", 
                "g_unlink", 
                "g_value_dup_string", 
                "g_queue_push_tail", 
                "fwrite", 
                "babl_process", 
                "g_type_get_type_registration_serial", 
                "read", 
                "g_strndup", 
                "g_thread_pool_push", 
                "g_realloc_n", 
                "strtod", 
                "babl_init", 
                "g_option_context_set_main_group", 
                "g_list_append", 
                "g_type_module_register_type", 
                "g_param_spec_set_qdata_full", 
                "g_object_get_data", 
                "g_value_get_float", 
                "g_strstr_len", 
                "g_type_class_ref", 
                "g_queue_pop_head_link", 
                "g_object_set", 
                "g_param_spec_pointer", 
                "__printf_chk", 
                "g_value_unset", 
                "g_value_get_object", 
                "g_object_weak_ref", 
                "kill", 
                "g_strchomp", 
                "g_cond_init", 
                "strlen", 
                "babl_format_get_type", 
                "g_ascii_formatd", 
                "g_option_context_parse", 
                "g_value_transform", 
                "g_hash_table_remove_all", 
                "g_object_unref", 
                "getpid", 
                "g_return_if_fail_warning", 
                "g_get_home_dir", 
                "g_queue_unlink", 
                "g_list_free_full", 
                "g_quark_from_static_string", 
                "g_object_set_data", 
                "g_printerr", 
                "g_option_context_set_help_enabled", 
                "g_object_class_install_property", 
                "g_value_set_object", 
                "g_list_remove", 
                "g_hash_table_unref", 
                "g_file_monitor_file", 
                "g_type_name", 
                "g_param_spec_unref", 
                "g_type_check_instance_cast", 
                "g_usleep", 
                "g_slist_free_full", 
                "g_set_error", 
                "g_rec_mutex_clear", 
                "g_param_spec_double", 
                "g_module_close", 
                "g_hash_table_iter_remove", 
                "g_random_int", 
                "strrchr", 
                "g_str_has_suffix", 
                "g_thread_self", 
                "g_hash_table_foreach", 
                "g_list_last", 
                "g_type_register_static_simple", 
                "g_scanner_input_text", 
                "g_strcmp0", 
                "_ITM_registerTMCloneTable", 
                "g_slist_nth_data", 
                "g_value_set_double", 
                "g_base64_decode", 
                "g_mutex_unlock", 
                "__gmon_start__", 
                "g_type_class_unref", 
                "g_slist_append", 
                "g_queue_peek_tail_link", 
                "g_mutex_clear", 
                "g_strtod", 
                "g_rec_mutex_lock", 
                "g_intern_string", 
                "g_param_spec_get_qdata", 
                "g_ascii_dtostr", 
                "g_slist_find_custom", 
                "g_thread_new", 
                "g_object_set_property", 
                "strtol", 
                "babl_format", 
                "g_log", 
                "g_idle_add", 
                "g_path_get_basename", 
                "lseek64", 
                "g_output_stream_get_type", 
                "g_value_get_pointer", 
                "strcpy", 
                "__stack_chk_fail", 
                "g_module_supported", 
                "system", 
                "g_value_get_double", 
                "g_flags_register_static", 
                "g_option_context_free", 
                "g_cclosure_marshal_VOID__OBJECT", 
                "g_signal_connect_data", 
                "g_build_filename", 
                "g_pattern_spec_new", 
                "g_cond_wait", 
                "g_object_class_list_properties", 
                "g_type_children", 
                "g_object_ref", 
                "babl_type", 
                "g_dir_close", 
                "g_hash_table_new", 
                "g_slice_free1", 
                "g_value_get_boolean", 
                "g_slist_copy", 
                "__sprintf_chk", 
                "g_slice_copy", 
                "g_slist_length", 
                "g_option_group_new", 
                "close", 
                "g_enum_get_value", 
                "g_param_spec_string", 
                "g_param_spec_sink", 
                "g_thread_join", 
                "g_list_length", 
                "g_slist_remove", 
                "g_rec_mutex_unlock", 
                "g_object_remove_weak_pointer", 
                "g_param_spec_uint64", 
                "g_printf", 
                "_ITM_deregisterTMCloneTable", 
                "g_type_from_name", 
                "g_signal_handlers_disconnect_matched", 
                "g_object_thaw_notify", 
                "g_param_spec_int", 
                "g_scanner_new", 
                "_setjmp", 
                "g_value_set_enum", 
                "g_value_take_object", 
                "g_boxed_type_register_static", 
                "g_hash_table_destroy", 
                "__errno_location", 
                "g_slist_prepend", 
                "g_param_spec_get_default_value", 
                "g_scanner_cur_value", 
                "g_object_add_weak_pointer", 
                "g_malloc", 
                "g_markup_error_quark", 
                "g_option_context_set_ignore_unknown_options", 
                "g_strerror", 
                "g_hash_table_remove", 
                "babl_fish", 
                "g_signal_emit_by_name", 
                "g_queue_new", 
                "g_cclosure_marshal_VOID__BOXED", 
                "g_signal_connect_object", 
                "g_type_parent", 
                "g_memdup", 
                "g_unix_input_stream_new", 
                "g_queue_pop_head", 
                "g_direct_hash", 
                "g_hash_table_iter_next", 
                "g_option_context_new", 
                "g_param_spec_boolean", 
                "g_strfreev", 
                "g_type_fundamental", 
                "g_type_register_static", 
                "g_markup_escape_text", 
                "g_direct_equal", 
                "g_value_dup_object", 
                "g_array_free", 
                "strstr", 
                "g_once_init_enter", 
                "g_mutex_lock", 
                "g_string_free", 
                "g_hash_table_insert", 
                "g_rec_mutex_init", 
                "g_strdup_printf", 
                "g_string_prepend", 
                "g_hash_table_iter_init", 
                "g_print", 
                "g_assertion_message_expr", 
                "g_hash_table_lookup", 
                "g_dgettext", 
                "g_file_test", 
                "strtoll", 
                "g_memory_input_stream_new_from_data", 
                "g_ascii_strcasecmp", 
                "g_utf8_validate", 
                "g_get_user_cache_dir", 
                "g_error_new_literal", 
                "g_cclosure_marshal_VOID__VOID", 
                "g_list_insert_before", 
                "g_param_spec_internal", 
                "g_snprintf", 
                "dcgettext", 
                "g_list_delete_link", 
                "g_array_new", 
                "memset", 
                "g_malloc0", 
                "g_file_read", 
                "g_enum_register_static", 
                "g_str_hash", 
                "g_hash_table_new_full", 
                "g_scanner_destroy", 
                "g_list_alloc", 
                "g_option_group_add_entries", 
                "g_object_get_property", 
                "qsort", 
                "g_object_set_qdata_full", 
                "__cxa_finalize", 
                "g_slist_find", 
                "g_enum_get_value_by_nick", 
                "g_str_has_prefix", 
                "g_error_free", 
                "g_type_class_peek", 
                "open64", 
                "babl_format_get_n_components", 
                "g_ascii_strtod", 
                "g_markup_parse_context_free", 
                "g_queue_is_empty", 
                "g_param_spec_object", 
                "g_string_new", 
                "g_slice_alloc", 
                "g_malloc_n", 
                "g_value_set_int", 
                "__xstat64", 
                "g_type_module_get_type", 
                "g_object_get_qdata", 
                "g_get_user_data_dir", 
                "g_cclosure_marshal_VOID__POINTER", 
                "g_type_check_value", 
                "g_queue_delete_link", 
                "g_slist_free", 
                "g_rand_free", 
                "g_unix_output_stream_new", 
                "g_hash_table_get_keys", 
                "g_cond_clear", 
                "g_type_check_instance_is_fundamentally_a", 
                "g_pattern_match_string", 
                "strchr", 
                "g_value_set_string", 
                "g_value_reset", 
                "g_type_interface_peek", 
                "g_array_append_vals", 
                "g_file_get_contents", 
                "g_type_is_a", 
                "__longjmp_chk", 
                "g_file_new_for_path", 
                "g_hash_table_contains", 
                "g_param_type_register_static", 
                "g_list_foreach", 
                "g_path_get_dirname", 
                "g_type_check_instance_is_a", 
                "strcmp", 
                "g_type_interface_add_prerequisite", 
                "babl_format_has_alpha", 
                "g_get_tmp_dir", 
                "g_strsplit", 
                "g_markup_parse_context_parse", 
                "g_slist_insert", 
                "g_queue_push_head", 
                "write", 
                "g_slist_insert_sorted", 
                "g_type_check_value_holds", 
                "g_ascii_xdigit_value", 
                "g_type_class_peek_parent", 
                "g_enum_get_value_by_name", 
                "free", 
                "calloc", 
                "g_object_freeze_notify", 
                "g_slice_alloc0", 
                "g_value_init", 
                "g_string_assign", 
                "g_value_get_uint64", 
                "g_module_symbol", 
                "bindtextdomain", 
                "g_string_append_printf", 
                "g_strdup", 
                "g_quark_from_string", 
                "g_value_get_int", 
                "ftruncate64", 
                "g_dir_read_name", 
                "g_getenv", 
                "g_object_new", 
                "g_signal_handlers_unblock_matched", 
                "g_signal_emit", 
                "g_markup_parse_context_new", 
                "g_list_reverse", 
                "babl_get_name", 
                "g_value_copy", 
                "g_value_set_boolean", 
                "g_string_append", 
                "g_strconcat", 
                "g_strchug", 
                "g_type_add_interface_static", 
                "g_string_insert_c", 
                "g_queue_push_head_link", 
                "g_pattern_spec_free", 
                "g_queue_get_length", 
                "babl_format_get_bytes_per_pixel", 
                "g_type_instance_get_private", 
                "g_object_notify", 
                "g_idle_remove_by_data", 
                "g_list_prepend", 
                "g_value_get_string", 
                "g_cond_signal", 
                "g_param_spec_get_name", 
                "g_type_class_add_private", 
                "g_list_sort", 
                "g_type_class_adjust_private_offset", 
                "g_sprintf", 
                "g_rand_int", 
                "g_queue_peek_head_link", 
                "bind_textdomain_codeset", 
                "g_object_class_find_property", 
                "g_object_notify_by_pspec", 
                "g_error_new", 
                "g_ascii_tolower", 
                "g_hash_table_size", 
                "g_signal_handlers_block_matched", 
                "g_object_set_qdata", 
                "g_signal_handler_disconnect", 
                "g_signal_new", 
                "fsync", 
                "g_value_set_uint64", 
                "g_option_group_set_parse_hooks", 
                "signal", 
                "g_str_equal", 
                "g_once_init_leave", 
                "g_warn_message", 
                "g_queue_free", 
                "g_thread_pool_new", 
                "g_scanner_get_next_token", 
                "g_signal_handler_find", 
                "g_file_new_for_commandline_arg", 
                "g_shell_parse_argv", 
                "g_path_is_absolute", 
                "g_file_new_for_uri", 
                "g_intern_static_string", 
                "g_value_get_enum", 
                "g_queue_pop_tail_link", 
                "g_type_check_class_cast", 
                "g_input_stream_get_type", 
                "g_mkdir_with_parents", 
                "g_cclosure_marshal_VOID__DOUBLE", 
                "g_markup_parse_context_get_position", 
                "g_rand_new_with_seed", 
                "g_param_spec_ref", 
                "g_free"
            ], 
            "rpm": "gegl03-0.3.14-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libgegl-0.3.so.0.314.0"
        }, 
        "usr/lib/gegl-0_3/npd_so": {
            "report-functions": [
                "g_param_spec_boolean", 
                "g_type_module_register_type", 
                "g_value_get_double", 
                "g_object_class_install_property", 
                "g_value_set_pointer", 
                "gegl_operation_class_set_keys", 
                "gegl_operation_set_format", 
                "g_slice_alloc0", 
                "g_slice_free1", 
                "g_value_set_boolean", 
                "npd_gegl_init_image", 
                "babl_format", 
                "g_str_equal", 
                "g_free", 
                "gegl_buffer_linear_open", 
                "gegl_param_spec_int", 
                "gegl_operation_get_type", 
                "g_type_class_peek_parent", 
                "g_value_set_double", 
                "gegl_buffer_copy", 
                "npd_compute_MLS_weights", 
                "g_value_get_pointer", 
                "g_dgettext", 
                "g_log", 
                "g_object_set_data_full", 
                "gegl_param_spec_get_property_key", 
                "gegl_buffer_get_format", 
                "g_value_get_enum", 
                "g_type_name", 
                "g_type_check_class_cast", 
                "gegl_buffer_clear", 
                "gegl_param_spec_enum", 
                "__stack_chk_fail", 
                "gegl_sampler_type_get_type", 
                "_ITM_registerTMCloneTable", 
                "npd_set_deformation_type", 
                "g_param_spec_pointer", 
                "g_value_set_int", 
                "g_snprintf", 
                "g_type_check_instance_cast", 
                "npd_deform_model", 
                "gegl_param_int_get_type", 
                "npd_draw_model_into_image", 
                "npd_destroy_model", 
                "__gmon_start__", 
                "gegl_param_double_get_type", 
                "npd_create_model_from_image", 
                "g_value_get_boolean", 
                "g_value_get_int", 
                "gegl_buffer_linear_close", 
                "g_type_check_instance_is_a", 
                "_ITM_deregisterTMCloneTable", 
                "g_malloc", 
                "gegl_operation_filter_get_type", 
                "gegl_param_spec_double", 
                "g_value_set_enum", 
                "__cxa_finalize"
            ], 
            "rpm": "gegl03-0.3.14-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gegl-0.3/npd.so"
        }, 
        "usr/lib/gegl-0_3/lcms-from-profile_so": {
            "report-functions": [
                "gegl_param_spec_get_property_key", 
                "g_enum_register_static", 
                "g_param_spec_boolean", 
                "cmsCreateRGBProfile", 
                "gegl_buffer_get_format", 
                "gegl_operation_class_set_keys", 
                "cmsBuildGamma", 
                "babl_format_get_type", 
                "gegl_operation_get_type", 
                "g_value_get_boolean", 
                "gegl_operation_context_take_object", 
                "g_value_set_enum", 
                "gegl_param_spec_enum", 
                "gegl_param_int_get_type", 
                "cmsGetColorSpace", 
                "g_type_module_register_type", 
                "dcgettext", 
                "babl_type", 
                "g_value_set_pointer", 
                "g_str_equal", 
                "__cxa_finalize", 
                "g_value_set_boolean", 
                "g_dgettext", 
                "cmsChannelsOf", 
                "gegl_buffer_iterator_add", 
                "cmsCloseProfile", 
                "babl_format_get_bytes_per_pixel", 
                "g_slice_free1", 
                "g_type_check_class_cast", 
                "cmsDeleteTransform", 
                "g_snprintf", 
                "g_strdup", 
                "cmsFreeToneCurve", 
                "__stack_chk_fail", 
                "g_type_class_peek_parent", 
                "gegl_operation_context_get_object", 
                "babl_format_n", 
                "gegl_buffer_iterator_new", 
                "cmsCreateTransform", 
                "g_slice_alloc0", 
                "gegl_buffer_iterator_next", 
                "g_log", 
                "g_object_class_install_property", 
                "g_value_get_pointer", 
                "g_param_spec_pointer", 
                "g_type_check_instance_is_a", 
                "gegl_operation_set_format", 
                "gegl_operation_filter_get_type", 
                "babl_format_get_n_components", 
                "babl_format", 
                "g_object_ref", 
                "gegl_param_double_get_type", 
                "cmsDoTransform", 
                "g_type_check_instance_cast", 
                "g_type_name", 
                "__gmon_start__", 
                "g_object_set_data_full", 
                "g_value_get_enum", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "gegl03-0.3.14-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gegl-0.3/lcms-from-profile.so"
        }, 
        "usr/lib/gegl-0_3/gegl-common_so": {
            "report-functions": [
                "g_build_filename", 
                "gegl_random_new_with_seed", 
                "gegl_rectangle_infinite_plane", 
                "g_slist_copy", 
                "g_strsplit", 
                "g_slist_free", 
                "gegl_node_connect_from", 
                "gegl_buffer_signal_connect", 
                "gegl_sampler_type_get_type", 
                "gegl_node_process", 
                "gegl_node_link_many", 
                "babl_type", 
                "gegl_node_new_child", 
                "gegl_operation_context_get_object", 
                "g_strfreev", 
                "g_object_ref", 
                "gegl_curve_new_default", 
                "gegl_buffer_iterator_next", 
                "g_strchomp", 
                "g_value_set_object", 
                "g_str_equal", 
                "gegl_buffer_linear_open", 
                "gegl_operation_invalidate", 
                "g_realloc_n", 
                "g_object_set", 
                "gegl_buffer_set_pattern", 
                "gegl_buffer_set_color", 
                "g_array_sort", 
                "gegl_rectangle_intersect", 
                "gegl_rectangle_is_empty", 
                "g_thread_pool_push", 
                "g_printerr", 
                "gegl_curve_calc_values", 
                "gegl_to_dot", 
                "g_random_int", 
                "gegl_cl_load_random_data", 
                "g_snprintf", 
                "gegl_operation_context_get_target", 
                "__cxa_finalize", 
                "g_signal_connect_data", 
                "gegl_buffer_open", 
                "gegl_random_int_range", 
                "gegl_path_point_lerp", 
                "g_slist_foreach", 
                "gegl_dither_method_get_type", 
                "gegl_operation_get_bounding_box", 
                "gegl_operation_point_filter_get_type", 
                "gegl_cl_color_supported", 
                "gegl_config_threads", 
                "g_strdup", 
                "__stack_chk_fail", 
                "gegl_cl_compile_and_build", 
                "gegl_node_get_input_proxy", 
                "g_rand_int", 
                "g_value_set_pointer", 
                "g_signal_handler_disconnect", 
                "gegl_operation_meta_watch_node", 
                "div", 
                "g_param_spec_string", 
                "gegl_operation_get_required_for_output", 
                "gegl_cl_get_command_queue", 
                "g_return_if_fail_warning", 
                "gegl_node_get_bounding_box", 
                "g_value_dup_object", 
                "babl_format_get_n_components", 
                "g_queue_pop_tail", 
                "g_rand_set_seed", 
                "gegl_operation_context_get_level", 
                "gegl_buffer_create_sub_buffer", 
                "g_ascii_strtoll", 
                "gegl_buffer_get_format", 
                "gegl_param_spec_double", 
                "gegl_random_float", 
                "gegl_free", 
                "gegl_operation_composer_get_type", 
                "g_value_set_int", 
                "strcmp", 
                "g_str_has_prefix", 
                "g_enum_register_static", 
                "gegl_node_get_type", 
                "_gegl_float_epsilon_equal", 
                "g_malloc", 
                "gegl_rectangle_is_infinite_plane", 
                "gegl_rectangle_set", 
                "gegl_operation_point_composer_get_type", 
                "babl_model", 
                "g_value_set_double", 
                "gegl_path_point_dist", 
                "gegl_buffer_sample_cleanup", 
                "gegl_operation_class_set_keys", 
                "gegl_operation_set_format", 
                "gegl_buffer_cl_iterator_add", 
                "gegl_cl_get_context", 
                "gegl_param_spec_color_from_string", 
                "g_value_get_double", 
                "g_param_spec_object", 
                "__errno_location", 
                "babl_format_get_type", 
                "babl_format_has_alpha", 
                "gegl_node_get_output_proxy", 
                "gegl_param_spec_format", 
                "gegl_color_get_pixel", 
                "g_thread_pool_new", 
                "__gmon_start__", 
                "gegl_buffer_cl_iterator_add_2", 
                "g_slist_nth", 
                "gegl_operation_context_take_object", 
                "gegl_param_int_get_type", 
                "g_type_check_instance_cast", 
                "g_strdelimit", 
                "rand", 
                "gegl_param_spec_curve", 
                "gegl_curve_calc_value", 
                "gegl_cl_random_get_ushort4", 
                "g_file_set_contents", 
                "g_rand_int_range", 
                "_ITM_deregisterTMCloneTable", 
                "gegl_operation_get_format", 
                "gegl_abyss_policy_get_type", 
                "g_array_sized_new", 
                "g_get_tmp_dir", 
                "g_object_get", 
                "gegl_color_get_rgba", 
                "__pow_finite", 
                "gegl_operation_get_source_format", 
                "g_slice_free1", 
                "g_array_new", 
                "gegl_operation_filter_get_type", 
                "gegl_buffer_get_extent", 
                "g_slist_sort", 
                "gegl_malloc", 
                "gegl_buffer_iterator_new", 
                "g_slice_alloc0", 
                "g_slist_length", 
                "g_type_name", 
                "g_malloc0", 
                "gegl_operation_progress", 
                "gegl_color_set_pixel", 
                "gegl_param_spec_enum", 
                "gegl_operation_use_opencl", 
                "g_type_check_class_cast", 
                "gegl_orientation_get_type", 
                "g_ascii_strtod", 
                "g_value_get_object", 
                "gegl_operation_create_pad", 
                "gegl_cl_set_kernel_args", 
                "gegl_operation_meta_watch_nodes", 
                "_ITM_registerTMCloneTable", 
                "g_rand_double_range", 
                "g_type_check_instance_is_a", 
                "gegl_random_set_seed", 
                "gegl_buffer_new", 
                "g_value_get_boolean", 
                "memcmp", 
                "gegl_rectangle_equal", 
                "gegl_buffer_cl_iterator_add_aux", 
                "gegl_operation_point_render_get_type", 
                "gegl_node", 
                "gegl_calloc", 
                "gegl_pad_get_name", 
                "babl_format_get_bytes_per_pixel", 
                "g_random_double", 
                "g_queue_new", 
                "g_type_module_register_type", 
                "g_value_dup_string", 
                "g_value_set_enum", 
                "g_free", 
                "gegl_operation_use_threading", 
                "gegl_buffer_sample_at_level", 
                "g_strdup_printf", 
                "gegl_color_duplicate", 
                "gegl_color_new", 
                "g_param_spec_pointer", 
                "gegl_param_spec_set_property_key", 
                "gegl_operation_context_get_source", 
                "g_strchug", 
                "babl_format_get_model", 
                "gegl_rectangle_bounding_box", 
                "g_value_set_string", 
                "gegl_buffer_linear_close", 
                "gegl_rectangle_copy", 
                "__snprintf_chk", 
                "qsort", 
                "gegl_param_spec_path", 
                "gegl_operation_point_composer3_get_type", 
                "g_slist_prepend", 
                "strrchr", 
                "gegl_pad_set_format", 
                "g_slice_alloc", 
                "gegl_operation_area_filter_get_type", 
                "g_rand_new", 
                "gegl_buffer_set", 
                "g_rand_double", 
                "gegl_object_set_has_forked", 
                "gegl_operation_process", 
                "gegl_buffer_load", 
                "gegl_buffer_sampler_new_at_level", 
                "gegl_node_link", 
                "gegl_random_float_range", 
                "gegl_node_connect_to", 
                "gegl_random_free", 
                "gegl_operation_handlers_register_loader", 
                "g_value_set_boolean", 
                "gegl_cl_get_device", 
                "gegl_node_get_gegl_operation", 
                "gegl_buffer_get", 
                "g_param_spec_sink", 
                "g_strcmp0", 
                "g_rand_new_with_seed", 
                "g_object_class_install_property", 
                "gegl_cl_errstring", 
                "memmove", 
                "babl_format_n", 
                "g_slist_remove", 
                "gegl_buffer_cl_iterator_next", 
                "g_assertion_message_expr", 
                "gegl_pad_get_type", 
                "gegl_param_spec_int", 
                "gegl_node_set", 
                "gegl_buffer_cl_iterator_stop", 
                "g_value_get_pointer", 
                "system", 
                "gegl_buffer_iterator_add", 
                "gegl_cl_color_babl", 
                "g_value_get_int", 
                "gegl_operation_handlers_register_saver", 
                "g_slist_append", 
                "g_queue_free", 
                "gegl_buffer_cl_iterator_new", 
                "g_log", 
                "gegl_buffer_save", 
                "gegl_operation_meta_get_type", 
                "gegl_param_double_get_type", 
                "g_malloc0_n", 
                "g_queue_is_empty", 
                "__powf_finite", 
                "g_queue_push_head", 
                "g_value_get_enum", 
                "gegl_path_get_path", 
                "gegl_list_operations", 
                "gegl_random_new", 
                "gegl_operation_handlers_get_saver", 
                "gegl_operation_source_get_bounding_box", 
                "gegl_buffer_get_abyss", 
                "_gegl_float_epsilon_zero", 
                "g_slist_nth_data", 
                "gegl_sampler_get", 
                "gegl_create_chain", 
                "g_rand_free", 
                "gegl_operation_sink_get_type", 
                "gegl_random_int", 
                "gegl_param_spec_get_property_key", 
                "gegl_node_get_input_pads", 
                "gegl_operation_meta_redirect", 
                "g_array_free", 
                "gegl_param_spec_seed", 
                "g_object_unref", 
                "gegl_operation_source_get_type", 
                "g_array_append_vals", 
                "g_object_set_data_full", 
                "gegl_param_spec_file_path", 
                "g_error_free", 
                "gegl_memset_pattern", 
                "gegl_buffer_set_extent", 
                "gegl_buffer_dup", 
                "gegl_buffer_get_type", 
                "gegl_buffer_copy", 
                "g_param_spec_boolean", 
                "g_type_class_peek_parent", 
                "gegl_node_new", 
                "gegl_operation_get_type", 
                "g_dgettext", 
                "babl_format", 
                "g_malloc_n"
            ], 
            "rpm": "gegl03-0.3.14-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gegl-0.3/gegl-common.so"
        }, 
        "usr/lib/gegl-0_3/ppm-save_so": {
            "report-functions": [
                "fwrite", 
                "g_malloc", 
                "__cxa_finalize", 
                "gegl_buffer_get", 
                "g_slice_alloc0", 
                "__fprintf_chk", 
                "gegl_param_double_get_type", 
                "g_value_set_boolean", 
                "g_free", 
                "g_value_set_int", 
                "__stack_chk_fail", 
                "g_dgettext", 
                "g_snprintf", 
                "gegl_param_spec_int", 
                "g_strdup", 
                "g_value_dup_string", 
                "gegl_operation_get_type", 
                "g_value_get_boolean", 
                "gegl_param_int_get_type", 
                "g_value_set_string", 
                "__gmon_start__", 
                "gegl_operation_class_set_keys", 
                "g_type_check_instance_cast", 
                "g_type_check_class_cast", 
                "g_slice_free1", 
                "gegl_param_spec_file_path", 
                "gegl_operation_sink_get_type", 
                "fopen64", 
                "g_type_name", 
                "_ITM_deregisterTMCloneTable", 
                "g_param_spec_boolean", 
                "fclose", 
                "g_value_get_int", 
                "fputc", 
                "g_object_set_data_full", 
                "gegl_param_spec_get_property_key", 
                "g_type_check_instance_is_a", 
                "babl_format", 
                "_ITM_registerTMCloneTable", 
                "g_type_module_register_type", 
                "g_log", 
                "gegl_operation_handlers_register_saver", 
                "g_type_class_peek_parent"
            ], 
            "rpm": "gegl03-0.3.14-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gegl-0.3/ppm-save.so"
        }, 
        "usr/lib/gegl-0_3/tiff-save_so": {
            "report-functions": [
                "babl_format_get_type", 
                "babl_format", 
                "g_seekable_tell", 
                "gegl_operation_sink_get_type", 
                "g_try_malloc", 
                "__gmon_start__", 
                "g_snprintf", 
                "gegl_param_spec_file_path", 
                "babl_format_get_model", 
                "g_type_check_instance_is_a", 
                "gegl_operation_class_set_keys", 
                "__cxa_finalize", 
                "babl_type", 
                "_ITM_registerTMCloneTable", 
                "gegl_param_spec_get_property_key", 
                "g_free", 
                "g_output_stream_get_type", 
                "g_vasprintf", 
                "g_object_set_data_full", 
                "g_strdup", 
                "babl_get_name", 
                "g_type_class_peek_parent", 
                "g_file_info_has_attribute", 
                "g_malloc0", 
                "g_return_if_fail_warning", 
                "g_type_check_instance_cast", 
                "gegl_operation_get_type", 
                "gegl_param_int_get_type", 
                "g_file_info_get_size", 
                "TIFFFlushData", 
                "g_error_free", 
                "g_file_query_info", 
                "TIFFClose", 
                "g_try_realloc", 
                "g_object_class_install_property", 
                "gegl_gio_open_output_stream", 
                "gegl_buffer_get", 
                "gegl_param_double_get_type", 
                "g_output_stream_write", 
                "g_log", 
                "TIFFSetWarningHandler", 
                "g_type_name", 
                "gegl_buffer_get_format", 
                "g_value_dup_string", 
                "g_object_unref", 
                "g_seekable_can_seek", 
                "TIFFClientOpen", 
                "babl_format_get_bytes_per_pixel", 
                "g_output_stream_close", 
                "TIFFWriteScanline", 
                "g_seekable_seek", 
                "g_value_set_string", 
                "TIFFSetField", 
                "babl_model", 
                "g_assertion_message_expr", 
                "g_type_module_register_type", 
                "_ITM_deregisterTMCloneTable", 
                "g_type_check_class_cast", 
                "g_dgettext", 
                "__stack_chk_fail", 
                "gegl_operation_handlers_register_saver", 
                "g_seekable_get_type", 
                "g_slice_alloc0", 
                "g_str_equal", 
                "TIFFSetErrorHandler"
            ], 
            "rpm": "gegl03-0.3.14-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gegl-0.3/tiff-save.so"
        }, 
        "usr/lib/gegl-0_3/jpg-load_so": {
            "report-functions": [
                "gegl_operation_class_set_keys", 
                "g_error_free", 
                "jpeg_CreateDecompress", 
                "jpeg_resync_to_restart", 
                "g_type_class_peek_parent", 
                "g_object_class_install_property", 
                "jpeg_destroy_decompress", 
                "gegl_buffer_set", 
                "g_object_set_data_full", 
                "gegl_param_spec_uri", 
                "gegl_operation_source_get_type", 
                "__gmon_start__", 
                "__cxa_finalize", 
                "g_object_unref", 
                "g_type_check_instance_cast", 
                "g_type_module_register_type", 
                "jpeg_std_error", 
                "_ITM_registerTMCloneTable", 
                "g_input_stream_skip", 
                "gegl_operation_handlers_register_loader", 
                "jpeg_read_scanlines", 
                "g_dgettext", 
                "g_log", 
                "g_value_set_string", 
                "gegl_param_int_get_type", 
                "g_free", 
                "_ITM_deregisterTMCloneTable", 
                "g_type_check_instance_is_a", 
                "g_malloc", 
                "g_type_name", 
                "__stack_chk_fail", 
                "gegl_operation_set_format", 
                "jpeg_read_header", 
                "g_type_check_class_cast", 
                "g_slice_free1", 
                "babl_format", 
                "g_print", 
                "g_input_stream_read", 
                "g_printerr", 
                "jpeg_start_decompress", 
                "gegl_param_spec_get_property_key", 
                "gegl_operation_get_type", 
                "g_input_stream_close", 
                "g_value_dup_string", 
                "g_snprintf", 
                "g_str_equal", 
                "g_strdup", 
                "gegl_param_double_get_type", 
                "gegl_gio_open_input_stream"
            ], 
            "rpm": "gegl03-0.3.14-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gegl-0.3/jpg-load.so"
        }, 
        "usr/lib/gegl-0_3/webp-load_so": {
            "report-functions": [
                "g_object_unref", 
                "_ITM_registerTMCloneTable", 
                "g_assertion_message_expr", 
                "gegl_gio_open_input_stream", 
                "g_file_new_for_path", 
                "gegl_operation_class_set_keys", 
                "g_snprintf", 
                "WebPIDelete", 
                "g_type_check_instance_cast", 
                "g_file_equal", 
                "g_try_malloc", 
                "g_type_name", 
                "g_return_if_fail_warning", 
                "g_file_new_for_uri", 
                "_ITM_deregisterTMCloneTable", 
                "g_input_stream_get_type", 
                "__cxa_finalize", 
                "g_value_dup_string", 
                "g_type_class_peek_parent", 
                "g_malloc0", 
                "g_type_check_class_cast", 
                "gegl_operation_handlers_register_loader", 
                "gegl_operation_get_type", 
                "gegl_param_double_get_type", 
                "g_strdup", 
                "gegl_param_spec_file_path", 
                "g_object_set_data_full", 
                "g_slice_alloc0", 
                "g_error_free", 
                "WebPFreeDecBuffer", 
                "g_type_module_register_type", 
                "WebPGetFeaturesInternal", 
                "g_input_stream_close", 
                "gegl_buffer_set", 
                "gegl_operation_set_format", 
                "babl_format", 
                "g_str_equal", 
                "gegl_param_int_get_type", 
                "g_type_check_instance_is_a", 
                "g_dgettext", 
                "g_free", 
                "gegl_param_spec_get_property_key", 
                "g_object_class_install_property", 
                "gegl_operation_source_get_type", 
                "gegl_param_spec_uri", 
                "g_input_stream_read_all", 
                "WebPIAppend", 
                "__gmon_start__", 
                "g_log", 
                "__stack_chk_fail", 
                "WebPINewDecoder", 
                "g_value_set_string"
            ], 
            "rpm": "gegl03-0.3.14-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gegl-0.3/webp-load.so"
        }, 
        "usr/lib/libgegl-npd-0_3_so": {
            "report-functions": [
                "g_malloc", 
                "g_array_new", 
                "gegl_matrix3_invert", 
                "gegl_buffer_linear_close", 
                "g_array_remove_index", 
                "g_list_prepend", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable", 
                "g_printf", 
                "gegl_buffer_linear_open", 
                "__stack_chk_fail", 
                "__cxa_finalize", 
                "g_list_insert_sorted", 
                "g_list_length", 
                "g_list_append", 
                "g_list_last", 
                "g_ptr_array_new", 
                "g_malloc_n", 
                "_ITM_deregisterTMCloneTable", 
                "g_list_concat", 
                "g_list_nth_prev", 
                "__pow_finite", 
                "g_array_free", 
                "gegl_matrix3_multiply", 
                "g_list_insert_before", 
                "g_list_free", 
                "g_free", 
                "gegl_matrix3_transform_point", 
                "gegl_buffer_get_extent", 
                "g_array_remove_range", 
                "g_list_reverse", 
                "babl_format_get_bytes_per_pixel", 
                "g_ptr_array_add", 
                "g_malloc0_n", 
                "babl_format_get_n_components", 
                "g_list_nth_data", 
                "g_array_append_vals"
            ], 
            "rpm": "gegl03-0.3.14-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libgegl-npd-0.3.so"
        }, 
        "complexity": {
            "r2 aa": "failed: ERROR: Cannot find radare2 in PATH"
        }, 
        "usr/lib/gegl-0_3/pixbuf_so": {
            "report-functions": [
                "babl_format", 
                "_ITM_deregisterTMCloneTable", 
                "g_type_class_peek_parent", 
                "g_snprintf", 
                "gegl_operation_source_get_type", 
                "g_value_set_object", 
                "__cxa_finalize", 
                "gegl_operation_get_type", 
                "g_type_check_instance_cast", 
                "gdk_pixbuf_get_rowstride", 
                "g_slice_alloc0", 
                "g_type_check_class_cast", 
                "__stack_chk_fail", 
                "g_slice_free1", 
                "gdk_pixbuf_get_has_alpha", 
                "gegl_operation_class_set_keys", 
                "g_object_class_install_property", 
                "g_type_name", 
                "gegl_operation_set_format", 
                "g_value_dup_object", 
                "g_strdup", 
                "gdk_pixbuf_get_width", 
                "gegl_param_int_get_type", 
                "gegl_buffer_set", 
                "gdk_pixbuf_read_pixels", 
                "g_param_spec_object", 
                "gegl_param_spec_get_property_key", 
                "g_log", 
                "__gmon_start__", 
                "g_object_unref", 
                "gdk_pixbuf_get_height", 
                "g_dgettext", 
                "g_str_equal", 
                "gdk_pixbuf_get_type", 
                "g_type_check_instance_is_a", 
                "_ITM_registerTMCloneTable", 
                "g_object_set_data_full"
            ], 
            "rpm": "gegl03-0.3.14-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gegl-0.3/pixbuf.so"
        }, 
        "usr/lib/gegl-0_3/text_so": {
            "report-functions": [
                "pango_cairo_show_layout", 
                "g_object_unref", 
                "g_slice_free1", 
                "gegl_operation_get_type", 
                "gegl_param_double_get_type", 
                "g_type_check_instance_is_a", 
                "g_value_dup_object", 
                "_ITM_deregisterTMCloneTable", 
                "gegl_operation_source_get_type", 
                "cairo_create", 
                "strcmp", 
                "g_value_get_int", 
                "gegl_operation_class_set_keys", 
                "__cxa_finalize", 
                "g_str_equal", 
                "gegl_param_int_get_type", 
                "pango_layout_set_text", 
                "gegl_buffer_set", 
                "pango_attr_list_unref", 
                "pango_font_description_from_string", 
                "pango_layout_get_pixel_extents", 
                "g_value_get_double", 
                "pango_cairo_create_layout", 
                "cairo_destroy", 
                "gegl_param_spec_int", 
                "__stack_chk_fail", 
                "_ITM_registerTMCloneTable", 
                "pango_attr_foreground_alpha_new", 
                "g_value_set_double", 
                "g_object_class_install_property", 
                "g_value_dup_string", 
                "__gmon_start__", 
                "cairo_translate", 
                "pango_attr_foreground_new", 
                "g_strdup", 
                "g_type_check_instance_cast", 
                "gegl_param_spec_get_property_key", 
                "gegl_param_spec_color_from_string", 
                "g_object_set_data_full", 
                "pango_font_description_set_absolute_size", 
                "babl_format", 
                "pango_layout_set_attributes", 
                "g_malloc0", 
                "g_value_set_int", 
                "pango_attr_list_insert", 
                "g_log", 
                "pango_layout_set_alignment", 
                "pango_layout_set_width", 
                "g_type_class_peek_parent", 
                "cairo_image_surface_create_for_data", 
                "cairo_surface_destroy", 
                "gegl_color_new", 
                "g_dgettext", 
                "g_param_spec_string", 
                "g_type_check_class_cast", 
                "g_strcompress", 
                "g_slice_alloc0", 
                "pango_cairo_update_layout", 
                "g_type_name", 
                "g_free", 
                "cairo_image_surface_create", 
                "pango_attr_list_new", 
                "pango_font_description_free", 
                "gegl_color_get_pixel", 
                "gegl_param_spec_set_property_key", 
                "g_value_set_string", 
                "g_value_set_object", 
                "gegl_operation_set_format", 
                "pango_layout_set_font_description", 
                "g_snprintf"
            ], 
            "rpm": "gegl03-0.3.14-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gegl-0.3/text.so"
        }, 
        "usr/lib/gegl-0_3/seamless-clone_so": {
            "report-functions": [
                "_ITM_registerTMCloneTable", 
                "gegl_sc_context_set_uvt_cache", 
                "gegl_param_int_get_type", 
                "g_value_set_string", 
                "gegl_operation_class_set_keys", 
                "g_object_set_data_full", 
                "gegl_param_double_get_type", 
                "g_slice_alloc0", 
                "g_type_check_class_cast", 
                "gegl_operation_composer_get_type", 
                "babl_format", 
                "g_log", 
                "g_type_check_instance_is_a", 
                "gegl_param_spec_set_property_key", 
                "g_dgettext", 
                "g_type_name", 
                "gegl_operation_source_get_bounding_box", 
                "gegl_sc_context_free", 
                "g_mutex_lock", 
                "g_slice_alloc", 
                "gegl_operation_get_type", 
                "gegl_sc_context_new", 
                "__stack_chk_fail", 
                "g_strdup", 
                "g_assertion_message_expr", 
                "g_slice_free1", 
                "g_mutex_unlock", 
                "g_mutex_init", 
                "g_value_set_int", 
                "g_object_class_install_property", 
                "_ITM_deregisterTMCloneTable", 
                "g_value_get_int", 
                "gegl_sc_context_prepare_render", 
                "gegl_param_spec_get_property_key", 
                "g_type_check_instance_cast", 
                "g_mutex_clear", 
                "g_strcmp0", 
                "g_type_module_register_type", 
                "g_free", 
                "g_snprintf", 
                "g_param_spec_string", 
                "__cxa_finalize", 
                "gegl_param_spec_int", 
                "gegl_sc_context_render", 
                "gegl_operation_set_format", 
                "gegl_sc_context_update", 
                "g_type_class_peek_parent", 
                "__gmon_start__"
            ], 
            "rpm": "gegl03-0.3.14-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gegl-0.3/seamless-clone.so"
        }, 
        "usr/lib/gegl-0_3/vector-stroke_so": {
            "report-functions": [
                "__cxa_finalize", 
                "g_object_class_install_property", 
                "_ITM_deregisterTMCloneTable", 
                "g_value_set_double", 
                "cairo_set_line_cap", 
                "gegl_param_spec_path", 
                "gegl_buffer_linear_open", 
                "gegl_operation_invalidate", 
                "cairo_set_line_join", 
                "g_type_name", 
                "cairo_line_to", 
                "g_slice_alloc0", 
                "g_value_get_double", 
                "g_value_dup_object", 
                "gegl_operation_source_get_bounding_box", 
                "g_type_check_instance_is_a", 
                "g_log", 
                "gegl_path_get_bounds", 
                "gegl_param_spec_get_property_key", 
                "gegl_rectangle_bounding_box", 
                "g_type_check_instance_cast", 
                "__gmon_start__", 
                "cairo_set_source_rgba", 
                "g_mutex_lock", 
                "gegl_operation_get_type", 
                "__stack_chk_fail", 
                "g_slice_free1", 
                "gegl_param_double_get_type", 
                "cairo_translate", 
                "g_type_class_peek_parent", 
                "g_signal_connect_data", 
                "g_value_set_object", 
                "g_free", 
                "cairo_create", 
                "gegl_color_get_pixel", 
                "gegl_path_foreach_flat", 
                "g_signal_handler_disconnect", 
                "g_type_check_class_cast", 
                "g_mutex_unlock", 
                "gegl_color_new", 
                "gegl_operation_class_set_keys", 
                "gegl_path_set_matrix", 
                "babl_format", 
                "g_value_set_string", 
                "cairo_in_stroke", 
                "g_type_module_register_type", 
                "g_param_spec_string", 
                "gegl_buffer_clear", 
                "cairo_curve_to", 
                "gegl_buffer_copy", 
                "g_strdup", 
                "g_dgettext", 
                "gegl_param_spec_double", 
                "g_object_unref", 
                "gegl_param_int_get_type", 
                "g_object_set_data_full", 
                "g_value_dup_string", 
                "g_str_equal", 
                "cairo_close_path", 
                "cairo_stroke", 
                "cairo_image_surface_create_for_data", 
                "cairo_move_to", 
                "gegl_param_spec_color_from_string", 
                "gegl_operation_set_format", 
                "gegl_matrix3_parse_string", 
                "g_snprintf", 
                "g_print", 
                "gegl_operation_filter_get_type", 
                "_ITM_registerTMCloneTable", 
                "cairo_set_line_width"
            ], 
            "rpm": "gegl03-0.3.14-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gegl-0.3/vector-stroke.so"
        }, 
        "usr/lib/gegl-0_3/matting-levin_so": {
            "report-functions": [
                "g_type_name", 
                "g_str_equal", 
                "g_malloc", 
                "g_value_get_double", 
                "g_free", 
                "g_type_check_instance_is_a", 
                "gegl_operation_composer_get_type", 
                "g_slice_free1", 
                "babl_format", 
                "g_type_module_register_type", 
                "umfpack_dl_symbolic", 
                "_ITM_registerTMCloneTable", 
                "umfpack_dl_free_numeric", 
                "gegl_operation_get_type", 
                "gegl_operation_set_format", 
                "g_object_set_data_full", 
                "g_malloc0_n", 
                "_ITM_deregisterTMCloneTable", 
                "g_type_check_class_cast", 
                "babl_format_get_n_components", 
                "g_return_if_fail_warning", 
                "g_strdup", 
                "g_slice_alloc0", 
                "g_value_get_int", 
                "gegl_param_spec_int", 
                "gegl_operation_class_set_keys", 
                "umfpack_dl_numeric", 
                "__stack_chk_fail", 
                "g_snprintf", 
                "g_log", 
                "umfpack_dl_triplet_to_col", 
                "gegl_rectangle_is_empty", 
                "__cxa_finalize", 
                "gegl_param_spec_double", 
                "gegl_buffer_get", 
                "g_malloc_n", 
                "g_object_class_install_property", 
                "gegl_operation_source_get_bounding_box", 
                "__gmon_start__", 
                "gegl_param_int_get_type", 
                "g_dgettext", 
                "g_value_set_int", 
                "__powf_finite", 
                "umfpack_dl_free_symbolic", 
                "gegl_buffer_set", 
                "umfpack_dl_solve", 
                "g_type_class_peek_parent", 
                "g_value_set_double", 
                "g_warn_message", 
                "gegl_param_spec_get_property_key", 
                "gegl_param_double_get_type"
            ], 
            "rpm": "gegl03-0.3.14-1.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gegl-0.3/matting-levin.so"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " gegl03", 
            "License": " LGPLv3+", 
            "URL": " http://www.gegl.org/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildhw-05.phx2.fedoraproject.org", 
            "Description": "\nGEGL (Generic Graphics Library) is a graph based image processing framework.\nGEGLs original design was made to scratch GIMP's itches for a new\ncompositing and processing core. This core is being designed to have\nminimal dependencies and a simple well defined API.\n", 
            "Build Date": " Mon 27 Feb 2017 10:45:36 AM EST", 
            "Source RPM": " gegl03-0.3.14-1.fc26.src.rpm", 
            "Version": " 0.3.14", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Mon 27 Feb 2017 07:09:57 PM EST, Key ID 812a6b4b64dab85d", 
            "Release": " 1.fc26", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Graph based image processing framework", 
            "Size": " 9794507"
        }
    }
}