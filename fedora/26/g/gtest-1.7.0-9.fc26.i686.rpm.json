{
    "results": {
        "usr/lib/libgtest_so_0_0_0": {
            "report-functions": [
                "_ZSt19__throw_logic_errorPKc", 
                "_Znwj", 
                "__cxa_finalize", 
                "_ZNKSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE4findEPKwjj", 
                "_ITM_deregisterTMCloneTable", 
                "fputc", 
                "remove", 
                "isspace", 
                "dup", 
                "mmap", 
                "_ZdlPvj", 
                "__gmon_start__", 
                "_ZNSt13runtime_errorD2Ev", 
                "_ZNSt6localeC1Ev", 
                "close", 
                "gai_strerror", 
                "_ZdaPv", 
                "fdopen", 
                "wcsstr", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcj", 
                "_ZSt24__throw_out_of_range_fmtPKcz", 
                "strstr", 
                "__cxa_allocate_exception", 
                "_ZNKSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE3strEv", 
                "_ZNKSt13runtime_error4whatEv", 
                "fcntl", 
                "sigemptyset", 
                "fork", 
                "strcmp", 
                "write", 
                "_ZNSt13runtime_errorC2EPKc", 
                "read", 
                "pthread_getspecific", 
                "waitpid", 
                "__stack_chk_fail", 
                "__vfprintf_chk", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj", 
                "fseek", 
                "sigaction", 
                "munmap", 
                "getenv", 
                "__cxa_begin_catch", 
                "getaddrinfo", 
                "abort", 
                "__snprintf_chk", 
                "strerror", 
                "__cxa_end_catch", 
                "isatty", 
                "fopen", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj", 
                "gettimeofday", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc", 
                "_exit", 
                "pthread_setspecific", 
                "_ZNSt8ios_baseC2Ev", 
                "__divdi3", 
                "mkdir", 
                "__cxa_rethrow", 
                "fileno", 
                "pthread_key_delete", 
                "_ZNSt6localeD1Ev", 
                "_ZNSo5flushEv", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_", 
                "_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_createERjj", 
                "strcasecmp", 
                "strrchr", 
                "mkstemp", 
                "_ZNSo5writeEPKci", 
                "_ZNSolsEi", 
                "regcomp", 
                "_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1ESt13_Ios_Openmode", 
                "_Znaj", 
                "_ZSt17__throw_bad_allocv", 
                "fclose", 
                "__cxa_free_exception", 
                "__errno_location", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc", 
                "_ZNSo9_M_insertIxEERSoT_", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "_ZNSt8ios_base4InitD1Ev", 
                "_ZNSo9_M_insertIPKvEERSoT_", 
                "strdup", 
                "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj", 
                "memcmp", 
                "__gxx_personality_v0", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj", 
                "__cxa_pure_virtual", 
                "puts", 
                "isxdigit", 
                "strtol", 
                "socket", 
                "__printf_chk", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev", 
                "_Unwind_Resume", 
                "_ZNSo9_M_insertImEERSoT_", 
                "dup2", 
                "strncmp", 
                "exit", 
                "__cxa_guard_abort", 
                "__cxa_throw", 
                "__xstat", 
                "regfree", 
                "__cxa_guard_release", 
                "_ZNSt8ios_baseD2Ev", 
                "fflush", 
                "fread", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj", 
                "pthread_key_create", 
                "_ZSt20__throw_length_errorPKc", 
                "strchr", 
                "_ZNSo9_M_insertIdEERSoT_", 
                "wmemcpy", 
                "__cxa_guard_acquire", 
                "__cxa_atexit", 
                "fwrite", 
                "strtoull", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "pipe", 
                "execve", 
                "_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "localtime", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj", 
                "__dynamic_cast", 
                "pthread_self", 
                "pthread_mutex_lock", 
                "_ITM_registerTMCloneTable", 
                "putchar", 
                "_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc", 
                "__cxa_bad_typeid", 
                "_ZNSo3putEc", 
                "pthread_mutex_destroy", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate", 
                "fputs", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_i", 
                "_ZNSt8ios_base4InitC1Ev", 
                "ftell", 
                "strlen", 
                "_ZSt16__throw_bad_castv", 
                "connect", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "wcscmp", 
                "getcwd", 
                "pthread_mutex_init", 
                "freeaddrinfo", 
                "wcscasecmp", 
                "_ZdlPv", 
                "_ZNKSt5ctypeIcE13_M_widen_initEv", 
                "_ZSt9terminatev", 
                "pthread_mutex_unlock", 
                "regexec", 
                "chdir", 
                "clone", 
                "__fprintf_chk", 
                "memmove", 
                "free", 
                "toupper"
            ], 
            "rpm": "gtest-1.7.0-9.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libgtest.so.0.0.0"
        }, 
        "complexity": {
            "r2 aa": "failed: ERROR: Cannot find radare2 in PATH"
        }, 
        "usr/lib/libgtest_main_so_0_0_0": {
            "report-functions": [
                "__cxa_atexit", 
                "_ZNSt8ios_base4InitD1Ev", 
                "_ZN7testing14InitGoogleTestEPiPPc", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_ZN7testing8UnitTest3RunEv", 
                "_ZN7testing8UnitTest11GetInstanceEv", 
                "__cxa_finalize", 
                "__gmon_start__", 
                "_ITM_registerTMCloneTable"
            ], 
            "rpm": "gtest-1.7.0-9.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "no, not found!", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/libgtest_main.so.0.0.0"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Development/Tools", 
            "Name": " gtest", 
            "License": " BSD", 
            "URL": " http://code.google.com/p/googletest/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-08.phx2.fedoraproject.org", 
            "Description": "\nFramework for writing C++ tests on a variety of platforms (GNU/Linux,\nMac OS X, Windows, Windows CE, and Symbian). Based on the xUnit\narchitecture. Supports automatic test discovery, a rich set of\nassertions, user-defined assertions, death tests, fatal and non-fatal\nfailures, various options for running the tests, and XML test report\ngeneration.\n", 
            "Build Date": " Fri 10 Feb 2017 03:22:57 PM EST", 
            "Source RPM": " gtest-1.7.0-9.fc26.src.rpm", 
            "Version": " 1.7.0", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Sat 11 Feb 2017 04:09:34 AM EST, Key ID 812a6b4b64dab85d", 
            "Release": " 9.fc26", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Google C++ testing framework", 
            "Size": " 338016"
        }
    }
}