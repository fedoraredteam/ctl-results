{
    "results": {
        "usr/lib/gstreamer-1_0/libgstbcmdec_so": {
            "report-functions": [
                "gst_structure_get_value", 
                "g_object_class_install_property", 
                "gst_structure_get_int", 
                "g_once_init_enter", 
                "pthread_attr_destroy", 
                "gst_debug_log", 
                "gst_caps_is_empty", 
                "g_type_check_class_cast", 
                "pthread_mutex_lock", 
                "g_log", 
                "DtsGetDriverStatus", 
                "gst_video_info_to_caps", 
                "gst_buffer_new_allocate", 
                "gst_pad_use_fixed_caps", 
                "gst_element_add_pad", 
                "gst_event_parse_caps", 
                "gst_event_parse_segment", 
                "gst_object_unref", 
                "gst_element_class_set_metadata", 
                "gst_element_register", 
                "__cxa_finalize", 
                "DtsFlushInput", 
                "sem_init", 
                "g_intern_static_string", 
                "pthread_create", 
                "sem_getvalue", 
                "DtsProcInput", 
                "g_type_name", 
                "gst_pad_push_event", 
                "usleep", 
                "DtsIsEndOfStream", 
                "gst_element_get_clock", 
                "gst_structure_has_field", 
                "gst_pad_get_pad_template_caps", 
                "__errno_location", 
                "pthread_exit", 
                "gst_buffer_unmap", 
                "gst_pad_push", 
                "g_type_check_instance_cast", 
                "pthread_join", 
                "__gmon_start__", 
                "DtsStartDecoder", 
                "DtsGetCapabilities", 
                "g_param_spec_boolean", 
                "g_return_if_fail_warning", 
                "DtsDeviceClose", 
                "shmctl", 
                "gst_video_info_set_format", 
                "getpid", 
                "pthread_mutex_destroy", 
                "g_type_class_peek_parent", 
                "sem_post", 
                "gst_caps_get_structure", 
                "pthread_attr_setdetachstate", 
                "_ITM_registerTMCloneTable", 
                "calloc", 
                "sem_destroy", 
                "gst_structure_get_name", 
                "g_value_get_boxed", 
                "gst_pad_set_chain_function_full", 
                "DtsSetColorSpace", 
                "DtsProcOutput", 
                "pthread_mutex_unlock", 
                "shmdt", 
                "sem_trywait", 
                "g_once_init_leave", 
                "DtsPauseDecoder", 
                "pthread_mutex_init", 
                "DtsStartCapture", 
                "__stack_chk_fail", 
                "DtsCloseDecoder", 
                "sem_timedwait", 
                "gst_video_info_init", 
                "gst_pad_new_from_static_template", 
                "DtsOpenDecoder", 
                "shmat", 
                "DtsDeviceOpen", 
                "g_type_class_adjust_private_offset", 
                "gst_value_get_fraction_numerator", 
                "free", 
                "gst_buffer_map", 
                "gst_caps_intersect", 
                "gst_element_get_type", 
                "gst_mini_object_ref", 
                "gst_pad_get_type", 
                "gst_pad_set_event_function_full", 
                "gst_pad_send_event", 
                "shmget", 
                "_ITM_deregisterTMCloneTable", 
                "pthread_attr_init", 
                "_gst_debug_category_new", 
                "gst_object_get_parent", 
                "gst_mini_object_unref", 
                "g_type_check_instance_is_a", 
                "DtsResumeDecoder", 
                "gst_event_new_caps", 
                "gst_caps_is_fixed", 
                "g_value_get_boolean", 
                "DtsFlushRxCapture", 
                "DtsSetInputFormat", 
                "g_strcmp0", 
                "malloc", 
                "gst_element_class_add_pad_template", 
                "_gst_debug_register_funcptr", 
                "time", 
                "gst_structure_get_string", 
                "gst_clock_get_time", 
                "g_type_register_static_simple", 
                "gst_value_get_fraction_denominator", 
                "g_value_set_boolean", 
                "gst_static_pad_template_get"
            ], 
            "rpm": "gstreamer-plugin-crystalhd-3.10.0-15.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gstreamer-1.0/libgstbcmdec.so"
        }, 
        "complexity": {
            "r2 aa": "failed: ERROR: Cannot find radare2 in PATH"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Applications/Multimedia", 
            "Name": " gstreamer-plugin-crystalhd", 
            "License": " LGPLv2", 
            "URL": " http://www.broadcom.com/support/crystal-hd/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-26.phx2.fedoraproject.org", 
            "Description": "\nGstreamer crystalhd decoder plugin\n", 
            "Build Date": " Mon 13 Feb 2017 12:34:03 PM EST", 
            "Source RPM": " libcrystalhd-3.10.0-15.fc26.src.rpm", 
            "Version": " 3.10.0", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Mon 13 Feb 2017 12:53:50 PM EST, Key ID 812a6b4b64dab85d", 
            "Release": " 15.fc26", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Gstreamer crystalhd decoder plugin", 
            "Size": " 64584"
        }
    }
}