{
    "results": {
        "complexity": {
            "r2 aa": "failed: ERROR: Cannot find radare2 in PATH"
        }, 
        "usr/lib/gstreamer-1_0/libgnl_so": {
            "report-functions": [
                "gst_pad_send_event", 
                "gst_segment_free", 
                "gst_element_class_get_pad_template_list", 
                "gst_query_type_get_name", 
                "g_value_get_int64", 
                "gst_event_type_get_name", 
                "gst_event_new_segment_done", 
                "g_type_class_ref", 
                "gst_element_iterate_sink_pads", 
                "_gst_debug_category_new", 
                "g_signal_handler_disconnect", 
                "gst_event_parse_qos", 
                "g_value_get_uint64", 
                "g_node_traverse", 
                "gst_element_factory_make", 
                "gst_ghost_pad_new_no_target", 
                "_gst_debug_register_funcptr", 
                "g_cond_wait", 
                "gst_bin_get_type", 
                "g_return_if_fail_warning", 
                "g_value_get_object", 
                "g_param_spec_uint64", 
                "g_cond_signal", 
                "g_thread_self", 
                "g_value_set_enum", 
                "gst_element_state_get_name", 
                "gst_event_new_segment", 
                "gst_element_post_message", 
                "g_cclosure_marshal_generic", 
                "g_list_insert_sorted", 
                "g_value_set_uint", 
                "gst_query_set_duration", 
                "g_direct_hash", 
                "g_value_get_enum", 
                "g_param_spec_boolean", 
                "g_list_prepend", 
                "__cxa_finalize", 
                "_ITM_registerTMCloneTable", 
                "g_list_append", 
                "g_slice_free1", 
                "g_node_insert_before", 
                "gst_state_get_type", 
                "g_param_spec_boxed", 
                "gst_pad_link_full", 
                "g_hash_table_destroy", 
                "gst_element_register", 
                "gst_resource_error_quark", 
                "g_list_concat", 
                "gst_element_class_add_pad_template", 
                "gst_static_pad_template_get", 
                "g_param_spec_uint", 
                "gst_iterator_next", 
                "gst_object_unref", 
                "g_type_check_instance_is_a", 
                "gst_iterator_resync", 
                "gst_message_new_segment_done", 
                "g_hash_table_new_full", 
                "g_param_spec_int", 
                "gst_pad_add_probe", 
                "gst_element_class_set_static_metadata", 
                "gst_pad_get_peer", 
                "g_node_destroy", 
                "gst_element_release_request_pad", 
                "g_list_find", 
                "gst_pad_query_position", 
                "gst_debug_log", 
                "gst_element_iterate_src_pads", 
                "g_value_get_boolean", 
                "g_node_child_index", 
                "gst_mini_object_copy", 
                "gst_bin_add", 
                "g_list_free", 
                "gst_segment_do_seek", 
                "gst_message_type_get_name", 
                "g_type_class_add_private", 
                "g_value_set_int", 
                "g_log", 
                "gst_mini_object_unref", 
                "g_value_get_uint", 
                "gst_pad_remove_probe", 
                "gst_segment_copy_into", 
                "g_signal_new", 
                "g_signal_emit", 
                "gst_element_message_full", 
                "gst_query_set_position", 
                "g_param_spec_int64", 
                "g_object_class_install_property", 
                "g_hash_table_lookup", 
                "g_type_register_static_simple", 
                "__stack_chk_fail", 
                "g_node_n_children", 
                "_gst_debug_nameof_funcptr", 
                "g_node_find", 
                "gst_pad_iterate_internal_links", 
                "gst_event_new_seek", 
                "gst_bin_iterate_elements", 
                "g_type_instance_get_private", 
                "gst_query_parse_duration", 
                "g_mutex_init", 
                "gst_caps_can_intersect", 
                "gst_segment_new", 
                "gst_segment_init", 
                "gst_event_new_flush_stop", 
                "gst_pad_get_element_private", 
                "gst_object_get_parent", 
                "_gst_element_error_printf", 
                "__gmon_start__", 
                "gst_value_set_caps", 
                "g_node_new", 
                "gst_caps_new_any", 
                "g_mutex_clear", 
                "g_type_class_peek_parent", 
                "gst_event_parse_seek", 
                "gst_pad_push_event", 
                "gst_ghost_pad_set_target", 
                "g_value_set_uint64", 
                "gst_element_set_locked_state", 
                "g_value_dup_object", 
                "g_once_init_leave", 
                "g_signal_connect_data", 
                "_ITM_deregisterTMCloneTable", 
                "gst_caps_is_any", 
                "gst_element_get_request_pad", 
                "gst_pad_query_caps", 
                "g_intern_static_string", 
                "g_object_class_install_properties", 
                "gst_pad_unlink", 
                "g_mutex_unlock", 
                "g_value_get_int", 
                "gst_iterator_free", 
                "g_object_class_find_property", 
                "gst_event_new_qos", 
                "g_hash_table_insert", 
                "gst_value_get_caps", 
                "g_list_sort", 
                "gst_element_set_state", 
                "g_thread_unref", 
                "gst_pad_get_type", 
                "g_object_notify_by_pspec", 
                "gst_pad_set_query_function_full", 
                "gst_element_remove_pad", 
                "gst_query_parse_position", 
                "g_mutex_lock", 
                "g_type_name", 
                "gst_message_new_duration_changed", 
                "g_param_spec_enum", 
                "gst_event_parse_segment", 
                "gst_pad_set_event_function_full", 
                "g_value_get_string", 
                "g_slice_alloc0", 
                "g_param_spec_string", 
                "g_hash_table_remove", 
                "gst_element_no_more_pads", 
                "gst_pad_set_active", 
                "gst_element_iterate_pads", 
                "g_thread_new", 
                "g_thread_join", 
                "g_value_unset", 
                "g_value_reset", 
                "g_object_set", 
                "gst_event_new_flush_start", 
                "g_type_class_adjust_private_offset", 
                "gst_pad_set_element_private", 
                "g_list_remove", 
                "gst_iterator_fold", 
                "g_value_set_int64", 
                "g_direct_equal", 
                "gst_object_ref", 
                "g_value_set_boolean", 
                "gst_stream_error_quark", 
                "gst_element_add_pad", 
                "gst_ghost_pad_get_target", 
                "g_object_get_property", 
                "g_once_init_enter", 
                "g_object_weak_ref", 
                "gst_segment_to_running_time"
            ], 
            "rpm": "gnonlin-1.4.0-4.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "unknown, no protectable libc functions used", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib/gstreamer-1.0/libgnl.so"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " System Environment/Libraries", 
            "Name": " gnonlin", 
            "License": " LGPLv2+", 
            "URL": " http://gnonlin.sourceforge.net/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-27.phx2.fedoraproject.org", 
            "Description": "\nGnonlin is a library built on top of GStreamer (http://gstreamer.net)\nwhich provides support for writing non-linear audio and video editing\napplications. It introduces the concept of a timeline.\n", 
            "Build Date": " Fri 10 Feb 2017 01:38:35 PM EST", 
            "Source RPM": " gnonlin-1.4.0-4.fc26.src.rpm", 
            "Version": " 1.4.0", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Sat 11 Feb 2017 02:07:46 AM EST, Key ID 812a6b4b64dab85d", 
            "Release": " 4.fc26", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " GStreamer extension library for non-linear editing", 
            "Size": " 185183"
        }
    }
}