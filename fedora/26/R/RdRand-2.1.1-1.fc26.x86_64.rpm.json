{
    "results": {
        "complexity": {
            "r2 aa": "failed: ERROR: Cannot find radare2 in PATH"
        }, 
        "usr/bin/rdrand-gen": {
            "report-functions": [
                "usleep", 
                "__cxa_finalize", 
                "memcpy", 
                "exit", 
                "fopen", 
                "__printf_chk", 
                "strcmp", 
                "rdrand_get_bytes_retry", 
                "GOMP_parallel", 
                "rdrand_get_uint64_array_reseed_skip", 
                "__stack_chk_fail", 
                "omp_get_num_threads", 
                "rdrand_get_uint64_array_reseed_delay", 
                "_ITM_deregisterTMCloneTable", 
                "omp_set_num_threads", 
                "__libc_start_main", 
                "rdrand_set_aes_random_key", 
                "rdrand_testSupport", 
                "__errno_location", 
                "_ITM_registerTMCloneTable", 
                "rdrand_enc_buffer", 
                "__isoc99_sscanf", 
                "rdrand_clean_aes", 
                "strtod", 
                "getopt_long", 
                "fclose", 
                "__fprintf_chk", 
                "free", 
                "malloc", 
                "__gcc_personality_v0", 
                "perror", 
                "fwrite", 
                "__gmon_start__", 
                "rdrand_set_aes_keys", 
                "omp_get_thread_num", 
                "strtoul"
            ], 
            "rpm": "RdRand-2.1.1-1.fc26.x86_64.rpm", 
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/rdrand-gen"
        }, 
        "usr/lib64/librdrand_so_1_0_2": {
            "report-functions": [
                "__printf_chk", 
                "free", 
                "munlock", 
                "_ITM_deregisterTMCloneTable", 
                "__stack_chk_fail", 
                "memset", 
                "__cxa_finalize", 
                "EVP_EncryptUpdate", 
                "mlock", 
                "perror", 
                "EVP_aes_128_ctr", 
                "__gmon_start__", 
                "usleep", 
                "putchar", 
                "malloc", 
                "memcpy", 
                "EVP_CipherInit_ex", 
                "fwrite", 
                "__fprintf_chk", 
                "__errno_location", 
                "getrlimit", 
                "EVP_CIPHER_CTX_free", 
                "EVP_CIPHER_CTX_new", 
                "_ITM_registerTMCloneTable", 
                "RAND_bytes"
            ], 
            "rpm": "RdRand-2.1.1-1.fc26.x86_64.rpm", 
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib64/librdrand.so.1.0.2"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Applications/System", 
            "Name": " RdRand", 
            "License": " LGPLv2+", 
            "URL": " http://github.com/BroukPytlik/RdRand", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildhw-02.phx2.fedoraproject.org", 
            "Description": "\nRdRand is an instruction for returning random numbers from an Intel on-chip\nhardware random number generator.RdRand is available in Ivy Bridge and later\nprocessors.\n\nIt uses cascade construction, combining a HW RNG operating at 3Gbps with CSPRNG\nwith all components sealed on CPU. The entropy source is a meta-stable circuit,\nwith unpredictable behavior based on thermal noise. The entropy is fed into\na 3:1 compression ratio entropy extractor (whitener) based on AES-CBC-MAC.\nOnline statistical tests are performed at this stage and only high quality\nrandom data are used as the seed for cryptograhically secure SP800-90 AES-CTR\nDRBG compliant PRNG.\nThis generator is producing maximum of 512 128-bit AES blocks before it's\nreseeded. According to documentation the 512 blocks is a upper limit for\nreseed, in practice it reseeds much more frequently.\n", 
            "Build Date": " Tue 28 Feb 2017 08:34:08 AM EST", 
            "Source RPM": " RdRand-2.1.1-1.fc26.src.rpm", 
            "Version": " 2.1.1", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Tue 28 Feb 2017 10:23:16 AM EST, Key ID 812a6b4b64dab85d", 
            "Release": " 1.fc26", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Library for generating random numbers using the RdRand instruction on Intel CPUs", 
            "Size": " 73096"
        }
    }
}