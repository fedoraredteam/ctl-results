{
    "results": {
        "complexity": {
            "r2 aa": "failed: ERROR: Cannot find radare2 in PATH"
        }, 
        "usr/bin/dwgrep": {
            "report-functions": [
                "__cxa_finalize", 
                "isprint", 
                "__assert_fail", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcmm", 
                "__cxa_guard_abort", 
                "__cxa_guard_acquire", 
                "_ZNSt13runtime_errorD1Ev", 
                "setlocale", 
                "zw_vocabulary_destroy", 
                "zw_value_is_const", 
                "zw_vocabulary_core", 
                "zw_query_parse_len", 
                "zw_value_const_format_brief", 
                "_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev", 
                "__gxx_personality_v0", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcmm", 
                "textdomain", 
                "zw_value_llelem_high", 
                "_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1EPKcSt13_Ios_Openmode", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "zw_value_str_str", 
                "__cxa_end_catch", 
                "zw_error_destroy", 
                "zw_cdom_dw_tag", 
                "zw_vocabulary_init", 
                "__cxa_throw", 
                "zw_stack_at", 
                "zw_value_is_elfsym", 
                "__cxa_guard_release", 
                "zw_value_aset_at", 
                "_ZNKSt5ctypeIcE13_M_widen_initEv", 
                "zw_value_is_cu", 
                "zw_value_is_dwarf", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "zw_cdom_elfsym_stv", 
                "zw_value_is_llelem", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcmm", 
                "zw_value_die_die", 
                "zw_query_execute", 
                "_Znam", 
                "_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", 
                "zw_value_elfsym_symbol", 
                "__cxa_allocate_exception", 
                "_Unwind_Resume", 
                "zw_value_seq_length", 
                "zw_value_llelem_low", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc", 
                "__cxa_atexit", 
                "zw_vocabulary_dwarf", 
                "zw_value_is_str", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l", 
                "zw_value_init_const_u64", 
                "zw_query_destroy", 
                "zw_stack_init", 
                "zw_value_cu_offset", 
                "zw_cdom_elfsym_stt", 
                "_ZNSo3putEc", 
                "_ZNSo5flushEv", 
                "zw_value_is_attr", 
                "zw_query_parse", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "zw_value_const_format", 
                "_ZNSt13runtime_errorC1EPKc", 
                "_ZSt20__throw_length_errorPKc", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm", 
                "_ZSt25__throw_bad_function_callv", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate", 
                "_Znwm", 
                "_ZdaPv", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_ZdlPv", 
                "_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_", 
                "zw_value_dwarf_machine", 
                "_ZNSo9_M_insertImEERSoT_", 
                "zw_vocabulary_add", 
                "_ZNSolsEi", 
                "zw_result_destroy", 
                "dwarf_tag", 
                "__cxa_throw_bad_array_new_length", 
                "_ITM_registerTMCloneTable", 
                "zw_value_is_seq", 
                "memmove", 
                "__cxa_begin_catch", 
                "zw_cdom_elfsym_stb", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm", 
                "zw_stack_push", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc", 
                "_ITM_deregisterTMCloneTable", 
                "zw_value_aset_length", 
                "zw_stack_depth", 
                "zw_result_next", 
                "zw_value_is_die", 
                "zw_value_elfsym_symidx", 
                "__cxa_rethrow", 
                "zw_value_init_dwarf", 
                "zw_error_message", 
                "getopt_long", 
                "_ZSt24__throw_out_of_range_fmtPKcz", 
                "zw_value_elfsym_name", 
                "_Jv_RegisterClasses", 
                "memcpy", 
                "strlen", 
                "_ZSt16__throw_bad_castv", 
                "zw_value_elfsym_dwarf", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm", 
                "zw_stack_destroy", 
                "__stack_chk_fail", 
                "_ZSt19__throw_logic_errorPKc", 
                "zw_value_dwarf_name", 
                "zw_value_seq_at", 
                "dwarf_dieoffset", 
                "zw_stack_push_take", 
                "__libc_start_main", 
                "_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc", 
                "__gmon_start__", 
                "zw_value_is_aset", 
                "_ZNSt8ios_base4InitD1Ev"
            ], 
            "rpm": "dwgrep-0.2-4.fc24.x86_64.rpm", 
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "yes", 
                " Stack protected": "yes", 
                " Fortify Source functions": "no, only unprotected functions found!", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/bin/dwgrep"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Development/Tools", 
            "Name": " dwgrep", 
            "License": " GPLv3+ and (GPLv2+ or LGPLv3+)", 
            "URL": " http://pmachata.github.io/dwgrep/index.html", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-08-nfs.phx2.fedoraproject.org", 
            "Description": "\n\nDwgrep is a tool, an associated language (called Zwerg) and a library\n(libzwerg) for querying Dwarf (debuginfo) graphs.\n\nYou can think of dwgrep expressions as instructions describing a path\nthrough a graph, with assertions about the type of nodes along the\nway: that a node is of given type, that it has a given attribute,\netc. There are also means of expressing sub-conditions,\ni.e. assertions that a given node is acceptable if a separate\nexpression matches (or does not match) a different path through the\ngraph.\n", 
            "Build Date": " Wed 03 Feb 2016 03:47:01 PM EST", 
            "Source RPM": " dwgrep-0.2-4.fc24.src.rpm", 
            "Version": " 0.2", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Sat 24 Sep 2016 09:32:45 AM EDT, Key ID 812a6b4b64dab85d", 
            "Release": " 4.fc24", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " A tool for querying Dwarf (debuginfo) graphs", 
            "Size": " 102823"
        }
    }
}