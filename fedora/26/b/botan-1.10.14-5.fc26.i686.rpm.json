{
    "results": {
        "complexity": {
            "r2 aa": "failed: ERROR: Cannot find radare2 in PATH"
        }, 
        "usr/lib/libbotan-1_10_so_1_14": {
            "report-functions": [
                "_ZSt17__throw_bad_allocv", 
                "__fdelt_chk", 
                "__gmon_start__", 
                "mkstemp", 
                "waitpid", 
                "RC4_set_key", 
                "getrusage", 
                "_ZNSt11logic_errorD1Ev", 
                "BN_mod_inverse", 
                "BZ2_bzDecompressEnd", 
                "BN_sub", 
                "deflateInit_", 
                "_ZdlPv", 
                "_ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EES4_", 
                "getpgrp", 
                "BN_mod_mul", 
                "EVP_des_ecb", 
                "inflateEnd", 
                "BZ2_bzCompress", 
                "pow", 
                "__cxa_begin_catch", 
                "_ZNSt13runtime_errorC2EPKc", 
                "__umoddi3", 
                "select", 
                "closedir", 
                "_ZNSt11logic_errorC2ERKS_", 
                "BZ2_bzCompressInit", 
                "getuid", 
                "EVP_sha256", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate", 
                "EVP_EncryptInit_ex", 
                "EVP_aes_192_ecb", 
                "EVP_DigestUpdate", 
                "__cxa_throw", 
                "_ZNSo5writeEPKci", 
                "_Znwj", 
                "EVP_CIPHER_flags", 
                "mlock", 
                "__stack_chk_fail", 
                "__lxstat", 
                "__cxa_get_exception_ptr", 
                "_ZNSt9exceptionD2Ev", 
                "read", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj", 
                "BN_bn2bin", 
                "_Unwind_Resume", 
                "__xstat", 
                "EVP_DigestFinal_ex", 
                "EVP_DecryptInit_ex", 
                "strncpy", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_", 
                "_Jv_RegisterClasses", 
                "_ZNSt8ios_base4InitD1Ev", 
                "_ZNSt8ios_baseD2Ev", 
                "BN_num_bits", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEED1Ev", 
                "access", 
                "__dynamic_cast", 
                "EVP_CIPHER_CTX_set_key_length", 
                "__cxa_rethrow", 
                "BZ2_bzDecompress", 
                "EVP_rc2_ecb", 
                "getgid", 
                "_ZNSi5tellgEv", 
                "_ZNSt16invalid_argumentC1EPKc", 
                "_ZNKSt5ctypeIcE13_M_widen_initEv", 
                "__cxa_free_exception", 
                "munmap", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc", 
                "EVP_MD_CTX_cleanup", 
                "_ZNSi5seekgESt4fposI11__mbstate_tE", 
                "_ZSt19__throw_logic_errorPKc", 
                "time", 
                "EVP_cast5_ecb", 
                "EVP_md4", 
                "BZ2_bzCompressEnd", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_i", 
                "EVP_md2", 
                "_ZNSolsEi", 
                "dlsym", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcj", 
                "_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", 
                "memmove", 
                "strlen", 
                "socket", 
                "_ZNSt16invalid_argumentC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", 
                "_ZNSt14basic_ofstreamIcSt11char_traitsIcEED0Ev", 
                "_ZNKSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE3strEv", 
                "free", 
                "opendir", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEEC1Ev", 
                "EVP_CIPHER_CTX_set_padding", 
                "pthread_mutex_init", 
                "munlock", 
                "readdir", 
                "EVP_des_ede3_ecb", 
                "EVP_CIPHER_key_length", 
                "EVP_bf_ecb", 
                "BN_new", 
                "EVP_sha224", 
                "EVP_CIPHER_CTX_cipher", 
                "memset", 
                "EVP_aes_128_ecb", 
                "EVP_sha384", 
                "BN_add", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc", 
                "close", 
                "connect", 
                "EVP_camellia_256_ecb", 
                "BN_CTX_free", 
                "_ZNKSt13runtime_error4whatEv", 
                "__errno_location", 
                "_ZNKSt11logic_error4whatEv", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "EVP_EncryptUpdate", 
                "__cxa_finalize", 
                "EVP_aes_256_ecb", 
                "write", 
                "umask", 
                "EVP_seed_ecb", 
                "clock_gettime", 
                "BN_cmp", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj", 
                "_ZNSt13basic_filebufIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode", 
                "_ZNSt11logic_errorC1EPKc", 
                "__gxx_personality_v0", 
                "EVP_CIPHER_CTX_init", 
                "_ZNSt6localeD1Ev", 
                "__vsnprintf_chk", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_", 
                "_ZNSt6localeC1Ev", 
                "exit", 
                "pthread_mutex_unlock", 
                "_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", 
                "_ZNSt13runtime_errorC1EPKc", 
                "_ZNSo9_M_insertImEERSoT_", 
                "_ZSt20__throw_length_errorPKc", 
                "memcpy", 
                "_ZNSi5seekgExSt12_Ios_Seekdir", 
                "deflateEnd", 
                "BN_copy", 
                "__cxa_allocate_exception", 
                "_ZNSt11range_errorC1EPKc", 
                "pthread_mutex_destroy", 
                "open", 
                "kill", 
                "EVP_sha512", 
                "EVP_sha1", 
                "mmap", 
                "RC4", 
                "unlink", 
                "_ITM_registerTMCloneTable", 
                "_ZSt16__throw_bad_castv", 
                "BN_dup", 
                "_ZNSt14basic_ifstreamIcSt11char_traitsIcEED0Ev", 
                "_ZNSt13runtime_errorD1Ev", 
                "BZ2_bzDecompressInit", 
                "_ZNSt13runtime_errorC2ERKS_", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "inflate", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj", 
                "EVP_CIPHER_block_size", 
                "BN_CTX_new", 
                "EVP_DigestInit_ex", 
                "EVP_MD_CTX_md", 
                "gmtime_r", 
                "BN_bin2bn", 
                "__memcpy_chk", 
                "__cxa_end_catch", 
                "_ZNKSt9exception4whatEv", 
                "pthread_mutex_lock", 
                "memcmp", 
                "_ZSt24__throw_out_of_range_fmtPKcz", 
                "EVP_CIPHER_CTX_cleanup", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEjc", 
                "getppid", 
                "EVP_MD_block_size", 
                "dlerror", 
                "pipe", 
                "dlclose", 
                "_ZNSt16invalid_argumentD2Ev", 
                "BN_nnmod", 
                "_ZNSt13runtime_errorC1ERKS_", 
                "_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj", 
                "dup2", 
                "execl", 
                "_ZNSt9bad_allocD2Ev", 
                "_ZNSt13runtime_errorD2Ev", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev", 
                "malloc", 
                "EVP_MD_size", 
                "EVP_camellia_192_ecb", 
                "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base", 
                "tolower", 
                "BN_mul", 
                "EVP_camellia_128_ecb", 
                "getpid", 
                "EVP_MD_CTX_init", 
                "deflate", 
                "EVP_md5", 
                "fork", 
                "BN_mod_exp", 
                "EVP_CIPHER_CTX_ctrl", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj", 
                "_ZNSt16invalid_argumentD1Ev", 
                "msync", 
                "EVP_ripemd160", 
                "inflateInit_", 
                "log", 
                "calloc", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "dlopen", 
                "vsnprintf", 
                "__cxa_pure_virtual", 
                "__cxa_atexit", 
                "EVP_DecryptUpdate", 
                "_ZNSi4readEPci", 
                "_ZNSt9exceptionD1Ev", 
                "_ZNSt16invalid_argumentC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", 
                "_ZNSt8ios_base4InitC1Ev", 
                "__udivdi3", 
                "_ZNSt8ios_baseC2Ev", 
                "_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev", 
                "_ZNSt11range_errorD1Ev", 
                "_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEC1ESt13_Ios_Openmode"
            ], 
            "rpm": "botan-1.10.14-5.fc26.i686.rpm", 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "no, not found!"
            }, 
            "filename": "usr/lib/libbotan-1.10.so.1.14"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " System Environment/Libraries", 
            "Name": " botan", 
            "License": " BSD", 
            "URL": " http://botan.randombit.net/", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-05.phx2.fedoraproject.org", 
            "Description": "\nBotan is a BSD-licensed crypto library written in C++. It provides a\nwide variety of basic cryptographic algorithms, X.509 certificates and\nCRLs, PKCS \\#10 certificate requests, a filter/pipe message processing\nsystem, and a wide variety of other features, all written in portable\nC++. The API reference, tutorial, and examples may help impart the\nflavor of the library.\n", 
            "Build Date": " Fri 27 Jan 2017 01:36:33 PM EST", 
            "Source RPM": " botan-1.10.14-5.fc26.src.rpm", 
            "Version": " 1.10.14", 
            "Architecture": " i686", 
            "Signature": " RSA/SHA256, Mon 06 Feb 2017 02:14:16 PM EST, Key ID 812a6b4b64dab85d", 
            "Release": " 5.fc26", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " Crypto library written in C++", 
            "Size": " 2983742"
        }
    }
}