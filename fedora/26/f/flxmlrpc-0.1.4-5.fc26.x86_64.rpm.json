{
    "results": {
        "complexity": {
            "r2 aa": "failed: ERROR: Cannot find radare2 in PATH"
        }, 
        "usr/lib64/libflxmlrpc_so_1_0_0": {
            "report-functions": [
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcmm", 
                "__cxa_rethrow", 
                "_ITM_deregisterTMCloneTable", 
                "__cxa_pure_virtual", 
                "_ZNSt8ios_base4InitD1Ev", 
                "_ZSt17__throw_bad_allocv", 
                "_Unwind_Resume", 
                "write", 
                "memmove", 
                "signal", 
                "__cxa_guard_acquire", 
                "strtod", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev", 
                "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base", 
                "__sprintf_chk", 
                "_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate", 
                "_ZSt24__throw_out_of_range_fmtPKcz", 
                "bind", 
                "setsockopt", 
                "strtol", 
                "_ZSt16__throw_bad_castv", 
                "__cxa_guard_release", 
                "select", 
                "_ZdlPv", 
                "_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_", 
                "strlen", 
                "_ZNSolsEi", 
                "_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_", 
                "__cxa_guard_abort", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm", 
                "_Znwm", 
                "_ITM_registerTMCloneTable", 
                "__gmon_start__", 
                "gettimeofday", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm", 
                "__cxa_atexit", 
                "strncasecmp", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEmm", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm", 
                "memcpy", 
                "strncmp", 
                "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", 
                "accept", 
                "__cxa_free_exception", 
                "gethostbyname", 
                "connect", 
                "getsockname", 
                "__stack_chk_fail", 
                "_ZdlPvm", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_", 
                "__memcpy_chk", 
                "_ZSt19__throw_logic_errorPKc", 
                "close", 
                "__cxa_finalize", 
                "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", 
                "listen", 
                "__vsnprintf_chk", 
                "memcmp", 
                "isspace", 
                "fcntl", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_", 
                "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcmm", 
                "_ZSt20__throw_length_errorPKc", 
                "__snprintf_chk", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm", 
                "read", 
                "_ZNSt8ios_base4InitC1Ev", 
                "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", 
                "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm", 
                "__cxa_allocate_exception", 
                "__errno_location", 
                "_ZNSo9_M_insertIbEERSoT_", 
                "__cxa_end_catch", 
                "__cxa_begin_catch", 
                "_ZNSo5flushEv", 
                "__fdelt_chk", 
                "_ZNSo9_M_insertIdEERSoT_", 
                "socket", 
                "__gxx_personality_v0", 
                "sscanf", 
                "_ZNKSt5ctypeIcE13_M_widen_initEv"
            ], 
            "rpm": "flxmlrpc-0.1.4-5.fc26.x86_64.rpm", 
            "find-libc-functions": [
                "GI___obstack_vprintf", 
                "GI___vasprintf", 
                "GI___vdprintf", 
                "GI___vfprintf", 
                "GI___vfwprintf", 
                "GI___vsnprintf", 
                "GI___vsprintf", 
                "GI___vswprintf", 
                "GI___vsyslog", 
                "__longjmp", 
                "_fprintf", 
                "_printf", 
                "_snprintf", 
                "_sprintf", 
                "_vfprintf", 
                "_vprintf", 
                "_vsnprintf", 
                "_vsprintf", 
                "asprintf", 
                "confstr", 
                "dprintf", 
                "explicit_bzero", 
                "fdelt", 
                "fgets", 
                "fgets_unlocked", 
                "fgetws", 
                "fgetws_unlocked", 
                "fprintf", 
                "fread", 
                "fread_unlocked", 
                "fwprintf", 
                "getcwd", 
                "getdomainname", 
                "getgroups", 
                "gethostname", 
                "getlogin_r", 
                "gets", 
                "getwd", 
                "longjmp", 
                "mbsnrtowcs", 
                "mbsrtowcs", 
                "mbstowcs", 
                "memcpy", 
                "memmove", 
                "mempcpy", 
                "memset", 
                "obstack_printf", 
                "obstack_vprintf", 
                "poll", 
                "ppoll", 
                "pread64", 
                "pread", 
                "printf", 
                "ptsname_r", 
                "read", 
                "readlink", 
                "readlinkat", 
                "realpath", 
                "recv", 
                "recvfrom", 
                "snprintf", 
                "sprintf", 
                "stpcpy", 
                "stpncpy", 
                "strcat", 
                "strcpy", 
                "strncat", 
                "strncpy", 
                "swprintf", 
                "syslog", 
                "ttyname_r", 
                "vasprintf", 
                "vdprintf", 
                "vfprintf", 
                "vfwprintf", 
                "vprintf", 
                "vsnprintf", 
                "vsprintf", 
                "vswprintf", 
                "vsyslog", 
                "vwprintf", 
                "wcpcpy", 
                "wcpncpy", 
                "wcrtomb", 
                "wcscat", 
                "wcscpy", 
                "wcsncat", 
                "wcsncpy", 
                "wcsnrtombs", 
                "wcsrtombs", 
                "wcstombs", 
                "wctomb", 
                "wmemcpy", 
                "wmemmove", 
                "wmempcpy", 
                "wmemset", 
                "wprintf"
            ], 
            "hardening-check": {
                " Read-only relocations": "yes", 
                " Position Independent Executable": "no, regular shared library (ignored)", 
                " Stack protected": "yes", 
                " Fortify Source functions": "yes (some protected functions found)", 
                " Immediate binding": "yes"
            }, 
            "filename": "usr/lib64/libflxmlrpc.so.1.0.0"
        }
    }, 
    "metadata": {
        "spec_data": {
            "Group": " Unspecified", 
            "Name": " flxmlrpc", 
            "License": " LGPLv3+", 
            "URL": " http://www.w1hkj.com", 
            "Relocations": " (not relocatable)", 
            "Install Date": " (not installed)", 
            "Build Host": " buildvm-02.phx2.fedoraproject.org", 
            "Description": "\nThis is version 0.1.4 of flxmlrpc, an implementation of the XmlRpc protocol\nwritten in C++, based upon XmlRpc++0.7 and modified to provide additional XmlRpc\nVariable types.  It is used in fldigi, flrig, flnet, flmsg, flarq, flamp, fllog;\na suite of programs written for amateur radio emergency communications.\n\nflxmlrpc is designed to make it easy to incorporate xmlrpc client and server\nsupport into C++ applications. Or use both client and server objects in your\napplication for easy peer-to-peer support.\n", 
            "Build Date": " Mon 15 May 2017 04:04:07 PM EDT", 
            "Source RPM": " flxmlrpc-0.1.4-5.fc26.src.rpm", 
            "Version": " 0.1.4", 
            "Architecture": " x86_64", 
            "Signature": " RSA/SHA256, Mon 22 May 2017 05:32:35 PM EDT, Key ID 812a6b4b64dab85d", 
            "Release": " 5.fc26", 
            "Vendor": " Fedora Project", 
            "Packager": " Fedora Project", 
            "Summary": " An xmlrpc library for the NBEMS suite of programs", 
            "Size": " 136220"
        }
    }
}